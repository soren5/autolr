[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8805714249610901, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585988998413, 1.8659464120864868, 1.3939106464385986, 1.0966308116912842, 0.9349022507667542, 0.8419743776321411, 0.7695197463035583, 0.729751467704773, 0.6897091865539551, 0.6576535105705261, 0.6359990835189819, 0.6094067096710205, 0.589935839176178, 0.5596274733543396, 0.5528120398521423, 0.5393894910812378, 0.5281672477722168, 0.5202223062515259, 0.5057564377784729, 0.5040625333786011, 0.48261573910713196, 0.46983885765075684, 0.4574008584022522, 0.454408198595047, 0.4424269199371338, 0.42842501401901245, 0.42894208431243896, 0.42616719007492065, 0.41881483793258667, 0.4155913293361664, 0.4008829891681671, 0.39691162109375, 0.38997870683670044, 0.38351768255233765, 0.37681254744529724, 0.3729562759399414, 0.36148902773857117, 0.362969309091568, 0.3563940227031708, 0.3505782186985016, 0.35241496562957764, 0.34010687470436096, 0.3387279510498047, 0.3343537747859955, 0.3285624086856842, 0.32427793741226196, 0.319965660572052, 0.3122166097164154, 0.30889007449150085, 0.3045063316822052], "accuracy": [0.2694492042064667, 0.48870691657066345, 0.568220853805542, 0.6156386137008667, 0.6696605682373047, 0.6963412761688232, 0.7223616242408752, 0.7312111854553223, 0.750759482383728, 0.7600052952766418, 0.7696473598480225, 0.7761194109916687, 0.787082314491272, 0.7985734939575195, 0.7980451583862305, 0.8045172095298767, 0.8121780753135681, 0.8125742673873901, 0.8178576231002808, 0.8191784620285034, 0.8251221776008606, 0.8322546482086182, 0.8356888294219971, 0.8359529972076416, 0.8389908671379089, 0.846387505531311, 0.8451988101005554, 0.8454629778862, 0.848368763923645, 0.8531237840652466, 0.8598600029945374, 0.854708731174469, 0.8605204224586487, 0.8609166741371155, 0.86553955078125, 0.8639545440673828, 0.8689737319946289, 0.8706908226013184, 0.873860776424408, 0.872407853603363, 0.8710870146751404, 0.8776912093162537, 0.8792761564254761, 0.8824461698532104, 0.882710337638855, 0.8811253309249878, 0.887597382068634, 0.887597382068634, 0.8906353116035461, 0.8911636471748352], "val_loss": [2.0369274616241455, 1.5092171430587769, 1.0378726720809937, 0.8372371196746826, 0.7430018186569214, 0.693951427936554, 0.6459794044494629, 0.6065753698348999, 0.5836796760559082, 0.5591391324996948, 0.5475665926933289, 0.5286199450492859, 0.5111508965492249, 0.49807658791542053, 0.4888598918914795, 0.4807276725769043, 0.4732670187950134, 0.46291399002075195, 0.4651739001274109, 0.44972753524780273, 0.44051307439804077, 0.4300120174884796, 0.42833927273750305, 0.4226953983306885, 0.42076465487480164, 0.41008231043815613, 0.40701472759246826, 0.4087570011615753, 0.3987274467945099, 0.39754143357276917, 0.3908216655254364, 0.39351579546928406, 0.3876643180847168, 0.3835429251194, 0.3747929334640503, 0.37449854612350464, 0.3731365501880646, 0.3678072988986969, 0.3718084394931793, 0.3737613260746002, 0.36592888832092285, 0.3612542748451233, 0.3634853661060333, 0.3576800525188446, 0.35225361585617065, 0.35540124773979187, 0.35645702481269836, 0.3527815639972687, 0.3493586778640747, 0.349461168050766], "val_accuracy": [0.5453333258628845, 0.6666666865348816, 0.6899999976158142, 0.7136666774749756, 0.737666666507721, 0.7523333430290222, 0.765666663646698, 0.7816666960716248, 0.7886666655540466, 0.7976666688919067, 0.7953333258628845, 0.8090000152587891, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8309999704360962, 0.8243333101272583, 0.843666672706604, 0.8333333134651184, 0.840666651725769, 0.846666693687439, 0.8569999933242798, 0.8533333539962769, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.8683333396911621, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8763333559036255, 0.878000020980835, 0.8756666779518127, 0.878000020980835, 0.8756666779518127, 0.8756666779518127, 0.8790000081062317, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539, 0.8833333253860474, 0.8796666860580444, 0.8826666474342346, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8585714101791382, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.225811004638672, 1.8738923072814941, 1.3985161781311035, 1.1074172258377075, 0.9474480152130127, 0.847087562084198, 0.7787129878997803, 0.7323510050773621, 0.6975699067115784, 0.665717601776123, 0.6431093215942383, 0.6162043213844299, 0.5962994694709778, 0.5745440125465393, 0.561733603477478, 0.5445601344108582, 0.5402599573135376, 0.5285378694534302, 0.5177890658378601, 0.5030719041824341, 0.49590110778808594, 0.4828128218650818, 0.47599250078201294, 0.46465352177619934, 0.4612848162651062, 0.44988134503364563, 0.44426482915878296, 0.43622374534606934, 0.4268469214439392, 0.41723182797431946, 0.41540494561195374, 0.40623435378074646, 0.40517500042915344, 0.3988361358642578, 0.39621010422706604, 0.3888987898826599, 0.38277125358581543, 0.37857121229171753, 0.3691994547843933, 0.36489737033843994, 0.35624170303344727, 0.35305964946746826, 0.34745490550994873, 0.34497344493865967, 0.33573848009109497, 0.3304687440395355, 0.33227548003196716, 0.3251866102218628, 0.32050821185112, 0.3193390965461731, 0.3136744797229767, 0.30866995453834534, 0.3090808093547821, 0.3022063970565796, 0.29387274384498596, 0.29189789295196533, 0.28926417231559753, 0.28119412064552307, 0.2783408463001251, 0.2744181156158447, 0.27228114008903503, 0.264407217502594, 0.2610898017883301, 0.2582206726074219, 0.25957247614860535, 0.25470268726348877, 0.25907573103904724, 0.2454334944486618, 0.24272508919239044, 0.2459043264389038, 0.23548313975334167, 0.23359419405460358, 0.2279352843761444, 0.22865009307861328, 0.22214138507843018, 0.21859821677207947, 0.21848532557487488, 0.21388134360313416, 0.2095196545124054], "accuracy": [0.2641659080982208, 0.4819706678390503, 0.5679566860198975, 0.6092986464500427, 0.6581693291664124, 0.6983225345611572, 0.7209087014198303, 0.7349095344543457, 0.754589855670929, 0.7598732113838196, 0.7656848430633545, 0.7829877138137817, 0.7880068421363831, 0.7968564033508301, 0.7987055778503418, 0.8068947196006775, 0.8053097128868103, 0.8123101592063904, 0.8169330358505249, 0.819442629814148, 0.8240655064582825, 0.8314621448516846, 0.8314621448516846, 0.8413683772087097, 0.8379341959953308, 0.8428213000297546, 0.8424250483512878, 0.8448025584220886, 0.8506141901016235, 0.852331280708313, 0.8524633646011353, 0.8536521196365356, 0.8568220734596252, 0.8557654023170471, 0.8593316674232483, 0.8651432991027832, 0.8628978729248047, 0.8652753829956055, 0.8712190985679626, 0.8685774803161621, 0.8701624870300293, 0.872407853603363, 0.8778232932090759, 0.8790120482444763, 0.8812574148178101, 0.8833707571029663, 0.8805969953536987, 0.8856161832809448, 0.8844274282455444, 0.8878615498542786, 0.887201189994812, 0.8889182209968567, 0.8916919827461243, 0.8943336606025696, 0.8948619961738586, 0.8988244533538818, 0.8981640338897705, 0.8992207050323486, 0.9079381823539734, 0.9025228023529053, 0.9035794734954834, 0.9033153057098389, 0.9063531756401062, 0.9078060984611511, 0.9071456789970398, 0.9056927561759949, 0.9096552729606628, 0.9120327830314636, 0.9122969508171082, 0.9103156924247742, 0.9149385690689087, 0.9163914918899536, 0.9166556596755981, 0.9167877435684204, 0.9207502603530884, 0.9211464524269104, 0.9194294214248657, 0.9268260598182678, 0.9245806336402893], "val_loss": [2.045577049255371, 1.5277550220489502, 1.054657220840454, 0.8499822616577148, 0.755095362663269, 0.6943637728691101, 0.649890124797821, 0.6188417673110962, 0.59409499168396, 0.5742906928062439, 0.5561343431472778, 0.5375235676765442, 0.5300762057304382, 0.5145346522331238, 0.5043143033981323, 0.4941149950027466, 0.4904938042163849, 0.4807671308517456, 0.4752175807952881, 0.46769261360168457, 0.46398425102233887, 0.4557724595069885, 0.4461912512779236, 0.43836042284965515, 0.4391433894634247, 0.4305085837841034, 0.42745378613471985, 0.42074960470199585, 0.4173821210861206, 0.411838173866272, 0.4134305715560913, 0.4046790897846222, 0.40600085258483887, 0.4030545949935913, 0.400736540555954, 0.39286279678344727, 0.39853882789611816, 0.3882584571838379, 0.38916805386543274, 0.38575056195259094, 0.3799091875553131, 0.38406842947006226, 0.3809579610824585, 0.37394535541534424, 0.3720913529396057, 0.3708914518356323, 0.36729612946510315, 0.36789265275001526, 0.36752015352249146, 0.36918097734451294, 0.3663395047187805, 0.36578235030174255, 0.36452725529670715, 0.3642376661300659, 0.36397701501846313, 0.3583737015724182, 0.36255139112472534, 0.3576464056968689, 0.3582569658756256, 0.3546527922153473, 0.3538699448108673, 0.35925841331481934, 0.356778085231781, 0.3574157655239105, 0.3528565764427185, 0.3501324951648712, 0.3499659299850464, 0.3535991907119751, 0.3485437035560608, 0.3472791314125061, 0.35409581661224365, 0.3477058410644531, 0.35163965821266174, 0.35297778248786926, 0.3466416299343109, 0.35264718532562256, 0.3506130874156952, 0.3471217453479767, 0.3493497669696808], "val_accuracy": [0.5243333578109741, 0.6496666669845581, 0.6796666383743286, 0.7083333134651184, 0.7360000014305115, 0.7486666440963745, 0.7603333592414856, 0.7699999809265137, 0.7773333191871643, 0.7913333177566528, 0.7940000295639038, 0.8063333630561829, 0.8069999814033508, 0.8190000057220459, 0.8199999928474426, 0.8306666612625122, 0.8270000219345093, 0.8296666741371155, 0.8356666564941406, 0.8366666436195374, 0.8366666436195374, 0.8399999737739563, 0.8473333120346069, 0.8500000238418579, 0.8443333506584167, 0.8533333539962769, 0.8510000109672546, 0.8516666889190674, 0.8550000190734863, 0.859000027179718, 0.8550000190734863, 0.8629999756813049, 0.8566666841506958, 0.8586666584014893, 0.8606666922569275, 0.8629999756813049, 0.8656666874885559, 0.8646666407585144, 0.8643333315849304, 0.8636666536331177, 0.8703333139419556, 0.8709999918937683, 0.8640000224113464, 0.8709999918937683, 0.871666669845581, 0.871999979019165, 0.8756666779518127, 0.8703333139419556, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8733333349227905, 0.8740000128746033, 0.8743333220481873, 0.8759999871253967, 0.8776666522026062, 0.875, 0.8796666860580444, 0.878000020980835, 0.8769999742507935, 0.8773333430290222, 0.8806666731834412, 0.8776666522026062, 0.8786666393280029, 0.8799999952316284, 0.8793333172798157, 0.8816666603088379, 0.8816666603088379, 0.8820000290870667, 0.8826666474342346, 0.8786666393280029, 0.8830000162124634, 0.8803333044052124, 0.8859999775886536, 0.8843333125114441, 0.8840000033378601, 0.8826666474342346, 0.8856666684150696, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.847428560256958, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2933995723724365, 2.187798500061035, 1.766258955001831, 1.3417092561721802, 1.0870739221572876, 0.9566416144371033, 0.8552307486534119, 0.8388804197311401, 0.768507182598114, 0.7472872138023376, 0.7202315926551819, 0.6845483183860779, 0.6531911492347717, 0.6206528544425964, 0.6168271899223328, 0.5948464274406433, 0.5964123010635376, 0.572505533695221, 0.5734241008758545, 0.5554857850074768, 0.5428711175918579, 0.53608638048172, 0.5177022218704224, 0.5242918133735657, 0.4996130168437958, 0.49742817878723145, 0.48258069157600403, 0.4792458117008209, 0.45663982629776, 0.45631155371665955, 0.44549956917762756, 0.44509750604629517, 0.42964065074920654, 0.42974308133125305, 0.4291228652000427, 0.4181097447872162, 0.4029473662376404, 0.39038175344467163, 0.3934791088104248, 0.38270336389541626, 0.3710278570652008, 0.37274447083473206, 0.36968228220939636, 0.36803165078163147, 0.3468517065048218, 0.340640127658844, 0.342539519071579, 0.33665746450424194, 0.33276817202568054, 0.32729026675224304, 0.32426732778549194, 0.316524863243103, 0.31064876914024353, 0.3009026050567627, 0.300123006105423, 0.30271685123443604, 0.2890949547290802, 0.2911739647388458, 0.27342474460601807, 0.2791963517665863, 0.2783900797367096], "accuracy": [0.13221503794193268, 0.3337736129760742, 0.4377228915691376, 0.5411438345909119, 0.6399418711662292, 0.6448289752006531, 0.6787742972373962, 0.7000396251678467, 0.7030775547027588, 0.7069079279899597, 0.7276449799537659, 0.735569953918457, 0.7497028112411499, 0.7573636174201965, 0.7626469135284424, 0.7672698497772217, 0.7707040309906006, 0.7755910754203796, 0.7763835787773132, 0.7886672616004944, 0.7928939461708069, 0.7895918488502502, 0.7988376617431641, 0.793950617313385, 0.8045172095298767, 0.8136309385299683, 0.819970965385437, 0.8136309385299683, 0.8240655064582825, 0.8257825970649719, 0.8313300609588623, 0.8236692547798157, 0.8366134166717529, 0.837537944316864, 0.8374059200286865, 0.8364813327789307, 0.8436138033866882, 0.8536521196365356, 0.8469158411026001, 0.8495575189590454, 0.8568220734596252, 0.8557654023170471, 0.86118084192276, 0.8580108284950256, 0.8677849769592285, 0.8654074668884277, 0.8702945709228516, 0.8698983192443848, 0.873860776424408, 0.8755778670310974, 0.8741249442100525, 0.8750495314598083, 0.8787478804588318, 0.8828424215316772, 0.8836349248886108, 0.8805969953536987, 0.8856161832809448, 0.8858803510665894, 0.8922203183174133, 0.8882578015327454, 0.889578640460968], "val_loss": [2.246509552001953, 2.018960952758789, 1.1404207944869995, 0.8890019655227661, 0.7560413479804993, 0.7409837245941162, 0.6584997773170471, 0.6580749750137329, 0.6329637169837952, 0.6317665576934814, 0.6000477075576782, 0.5808111429214478, 0.5531013607978821, 0.5387900471687317, 0.5252388715744019, 0.5296328067779541, 0.5092033743858337, 0.5084282755851746, 0.50583815574646, 0.49276596307754517, 0.49372851848602295, 0.4970550835132599, 0.49929651618003845, 0.4922843277454376, 0.4849683344364166, 0.4961928725242615, 0.4766533672809601, 0.47474804520606995, 0.46721163392066956, 0.45614659786224365, 0.4533751606941223, 0.45134174823760986, 0.455148845911026, 0.461231529712677, 0.44883570075035095, 0.43965616822242737, 0.4482293426990509, 0.44677969813346863, 0.4229675829410553, 0.4263745844364166, 0.43557503819465637, 0.4396786391735077, 0.42539310455322266, 0.42395198345184326, 0.4378378987312317, 0.43176522850990295, 0.43063321709632874, 0.43309202790260315, 0.4484787583351135, 0.4631170332431793, 0.4435960352420807, 0.44298845529556274, 0.47020015120506287, 0.4926304519176483, 0.4817539155483246, 0.45115625858306885, 0.4897887408733368, 0.4996075928211212, 0.4967995584011078, 0.48412230610847473, 0.46001648902893066], "val_accuracy": [0.4203333258628845, 0.47200000286102295, 0.6423333287239075, 0.6846666932106018, 0.7153333425521851, 0.7310000061988831, 0.7416666746139526, 0.7493333220481873, 0.7609999775886536, 0.7699999809265137, 0.765333354473114, 0.777999997138977, 0.777999997138977, 0.7933333516120911, 0.7923333048820496, 0.8036666512489319, 0.8066666722297668, 0.8043333292007446, 0.8130000233650208, 0.8153333067893982, 0.8130000233650208, 0.8176666498184204, 0.8169999718666077, 0.8226666450500488, 0.8276666402816772, 0.8206666707992554, 0.8326666951179504, 0.8289999961853027, 0.8339999914169312, 0.8403333425521851, 0.8423333168029785, 0.8403333425521851, 0.8446666598320007, 0.8476666808128357, 0.8460000157356262, 0.8483333587646484, 0.8533333539962769, 0.8516666889190674, 0.8579999804496765, 0.8606666922569275, 0.859666645526886, 0.8613333106040955, 0.8633333444595337, 0.8616666793823242, 0.8663333058357239, 0.8659999966621399, 0.8663333058357239, 0.8640000224113464, 0.8696666955947876, 0.8690000176429749, 0.8679999709129333, 0.8690000176429749, 0.8709999918937683, 0.871666669845581, 0.8656666874885559, 0.8730000257492065, 0.8730000257492065, 0.8726666569709778, 0.871666669845581, 0.871999979019165, 0.8703333139419556]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8299999833106995, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5703150033950806, 0.7975568175315857, 0.6462844014167786, 0.5913116335868835, 0.5591700077056885, 0.5285111665725708, 0.5103070735931396, 0.5004405975341797, 0.4801778793334961, 0.4884301424026489, 0.5352893471717834, 0.5189589262008667, 0.5562742948532104, 0.5627655386924744, 0.5254980325698853, 0.5072169899940491, 0.501079261302948, 0.509128987789154, 0.5146958827972412], "accuracy": [0.4768194556236267, 0.7128516435623169, 0.7658169269561768, 0.7824593782424927, 0.8014793395996094, 0.8070268034934998, 0.8100647330284119, 0.8228767514228821, 0.8297450542449951, 0.8285563588142395, 0.8173292875289917, 0.8207634687423706, 0.809140145778656, 0.8189142942428589, 0.8186501264572144, 0.819970965385437, 0.8231409192085266, 0.8342359066009521, 0.8261788487434387], "val_loss": [0.8005014657974243, 0.6200028657913208, 0.5253620743751526, 0.5161742568016052, 0.5016496181488037, 0.48397234082221985, 0.4686213731765747, 0.4894427955150604, 0.4637221395969391, 0.5206018686294556, 0.5308207869529724, 0.5298546552658081, 0.5992140173912048, 0.5191830396652222, 0.509357750415802, 0.5034264922142029, 0.4745752811431885, 0.5205259323120117, 0.5517112612724304], "val_accuracy": [0.7243333458900452, 0.7766666412353516, 0.7976666688919067, 0.8113333582878113, 0.8206666707992554, 0.8326666951179504, 0.8360000252723694, 0.8349999785423279, 0.8373333215713501, 0.8303333520889282, 0.8320000171661377, 0.8286666870117188, 0.8416666388511658, 0.8429999947547913, 0.8386666774749756, 0.8403333425521851, 0.8403333425521851, 0.8360000252723694, 0.8389999866485596]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [66, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0], [0, 2, 3, 4, 3, 5, 2, 3, 3, 7, 8, 9], [0, 2, 0, 3, 0, 5, 5, 0], [16, 16, 25, 57, 53], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 87]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 20, 12, 8, 5, 2, 1, 1, 1, 12, 6, 6, 5], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.add(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.multiply(tf.math.add(tf.math.sqrt(grad), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.304347276687622, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09787346422672272, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 5, 3, 5], [0, 0, 0, 3], [16, 12, 15], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 8, 4, 1, 8, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 28, 99, 99, 61, 47]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 3, 2, 1, 1, 1, 21, 12, 9, 5], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.sqrt(tf.math.pow(tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma), tf.math.sqrt(tf.math.sqrt(alpha)))), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [0, 2, 9, 0, 3, 4, 6, 7, 9, 4, 5], [0, 1, 0, 2, 3], [39, 39, 37, 19], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 0, 0, 1], [99, 16, 19], [0, 1], [0, 3, 9, 9], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 4, 8, 1, 4, 6, 0, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [52, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 11, 5, 4, 10, 6, 4, 3, 2, 1, 1, 1, 13, 8, 5, 4], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.multiply(tf.math.pow(tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.square(grad))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.multiply(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.square(alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.sqrt(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.pow(tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), sigma), tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2652619264.0, 49193746432.0, 219791949824.0, 618773544960.0, 1322867884032.0, 2434392129536.0], "accuracy": [0.10011887550354004, 0.09800554811954498, 0.09866596013307571, 0.09377889335155487, 0.10289261490106583, 0.10302469879388809], "val_loss": [11651369984.0, 93207257088.0, 314583351296.0, 745706946560.0, 1456513089536.0, 2516994752512.0], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [3, 2, 3, 0, 3], [0, 1, 0, 2], [39, 83], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 5, 2, 8], [0, 0, 0, 3, 0, 0, 3, 4, 4, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.09942857176065445, "mapping_values": [1, 8, 4, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 17, 9, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), sigma), grad)", "other_info": {"loss": [11818993664.0, 35287433216.0, 34767884288.0, 34831179776.0, 34460721152.0, 34647334912.0, 35072692224.0], "accuracy": [0.09377889335155487, 0.10011887550354004, 0.10011887550354004, 0.09615638852119446, 0.09985470771789551, 0.10117553919553757, 0.10368511080741882], "val_loss": [28704487424.0, 28704620544.0, 28702382080.0, 28702164992.0, 28701759488.0, 28701468672.0, 28703533056.0], "val_accuracy": [0.10433333367109299, 0.10466666519641876, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}]