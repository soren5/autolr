[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8805714249610901, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585988998413, 1.8659464120864868, 1.3939106464385986, 1.0966308116912842, 0.9349022507667542, 0.8419743776321411, 0.7695197463035583, 0.729751467704773, 0.6897091865539551, 0.6576535105705261, 0.6359990835189819, 0.6094067096710205, 0.589935839176178, 0.5596274733543396, 0.5528120398521423, 0.5393894910812378, 0.5281672477722168, 0.5202223062515259, 0.5057564377784729, 0.5040625333786011, 0.48261573910713196, 0.46983885765075684, 0.4574008584022522, 0.454408198595047, 0.4424269199371338, 0.42842501401901245, 0.42894208431243896, 0.42616719007492065, 0.41881483793258667, 0.4155913293361664, 0.4008829891681671, 0.39691162109375, 0.38997870683670044, 0.38351768255233765, 0.37681254744529724, 0.3729562759399414, 0.36148902773857117, 0.362969309091568, 0.3563940227031708, 0.3505782186985016, 0.35241496562957764, 0.34010687470436096, 0.3387279510498047, 0.3343537747859955, 0.3285624086856842, 0.32427793741226196, 0.319965660572052, 0.3122166097164154, 0.30889007449150085, 0.3045063316822052], "accuracy": [0.2694492042064667, 0.48870691657066345, 0.568220853805542, 0.6156386137008667, 0.6696605682373047, 0.6963412761688232, 0.7223616242408752, 0.7312111854553223, 0.750759482383728, 0.7600052952766418, 0.7696473598480225, 0.7761194109916687, 0.787082314491272, 0.7985734939575195, 0.7980451583862305, 0.8045172095298767, 0.8121780753135681, 0.8125742673873901, 0.8178576231002808, 0.8191784620285034, 0.8251221776008606, 0.8322546482086182, 0.8356888294219971, 0.8359529972076416, 0.8389908671379089, 0.846387505531311, 0.8451988101005554, 0.8454629778862, 0.848368763923645, 0.8531237840652466, 0.8598600029945374, 0.854708731174469, 0.8605204224586487, 0.8609166741371155, 0.86553955078125, 0.8639545440673828, 0.8689737319946289, 0.8706908226013184, 0.873860776424408, 0.872407853603363, 0.8710870146751404, 0.8776912093162537, 0.8792761564254761, 0.8824461698532104, 0.882710337638855, 0.8811253309249878, 0.887597382068634, 0.887597382068634, 0.8906353116035461, 0.8911636471748352], "val_loss": [2.0369274616241455, 1.5092171430587769, 1.0378726720809937, 0.8372371196746826, 0.7430018186569214, 0.693951427936554, 0.6459794044494629, 0.6065753698348999, 0.5836796760559082, 0.5591391324996948, 0.5475665926933289, 0.5286199450492859, 0.5111508965492249, 0.49807658791542053, 0.4888598918914795, 0.4807276725769043, 0.4732670187950134, 0.46291399002075195, 0.4651739001274109, 0.44972753524780273, 0.44051307439804077, 0.4300120174884796, 0.42833927273750305, 0.4226953983306885, 0.42076465487480164, 0.41008231043815613, 0.40701472759246826, 0.4087570011615753, 0.3987274467945099, 0.39754143357276917, 0.3908216655254364, 0.39351579546928406, 0.3876643180847168, 0.3835429251194, 0.3747929334640503, 0.37449854612350464, 0.3731365501880646, 0.3678072988986969, 0.3718084394931793, 0.3737613260746002, 0.36592888832092285, 0.3612542748451233, 0.3634853661060333, 0.3576800525188446, 0.35225361585617065, 0.35540124773979187, 0.35645702481269836, 0.3527815639972687, 0.3493586778640747, 0.349461168050766], "val_accuracy": [0.5453333258628845, 0.6666666865348816, 0.6899999976158142, 0.7136666774749756, 0.737666666507721, 0.7523333430290222, 0.765666663646698, 0.7816666960716248, 0.7886666655540466, 0.7976666688919067, 0.7953333258628845, 0.8090000152587891, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8309999704360962, 0.8243333101272583, 0.843666672706604, 0.8333333134651184, 0.840666651725769, 0.846666693687439, 0.8569999933242798, 0.8533333539962769, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.8683333396911621, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8763333559036255, 0.878000020980835, 0.8756666779518127, 0.878000020980835, 0.8756666779518127, 0.8756666779518127, 0.8790000081062317, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539, 0.8833333253860474, 0.8796666860580444, 0.8826666474342346, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1], [0, 8], [0], [0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1], [0, 1, 1, 6, 5, 0], [0, 5, 0, 3], [0, 2], [0, 1], [0], [1], [0]], "fitness": -0.8648571372032166, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.subtract(tf.math.divide_no_nan(tf.math.square(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), grad), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293088674545288, 2.186377763748169, 1.7619025707244873, 1.3385783433914185, 1.0918031930923462, 0.9429857730865479, 0.8455023169517517, 0.8535346984863281, 0.7865549921989441, 0.7459792494773865, 0.7168064117431641, 0.6883237957954407, 0.6461162567138672, 0.6337445378303528, 0.6104468703269958, 0.5994817614555359, 0.590094268321991, 0.5796977877616882, 0.5557746291160583, 0.5553855299949646, 0.5464766025543213, 0.5377230048179626, 0.5106220841407776, 0.5055599212646484, 0.49570733308792114, 0.47389137744903564, 0.4709928035736084, 0.45057442784309387, 0.4470815062522888, 0.4468379020690918, 0.4404473304748535, 0.43405210971832275, 0.4326302111148834, 0.41214367747306824, 0.4124283194541931, 0.39546483755111694, 0.3872639834880829, 0.3837086260318756, 0.3877622187137604, 0.3682948648929596, 0.36901476979255676, 0.36928480863571167, 0.35561540722846985, 0.3452489972114563, 0.33461934328079224, 0.343290239572525, 0.34072190523147583, 0.3342663645744324, 0.3257233202457428, 0.3159633278846741, 0.3091737627983093, 0.3109983205795288, 0.31460562348365784, 0.30514955520629883, 0.3013196885585785, 0.2928076684474945, 0.28816890716552734, 0.2804892659187317, 0.2880744934082031, 0.2681865692138672, 0.28611913323402405, 0.25978803634643555, 0.2664054334163666, 0.2622227668762207, 0.2503911256790161, 0.2717498540878296, 0.2541632354259491, 0.25571301579475403, 0.25052791833877563, 0.25025179982185364], "accuracy": [0.12653546035289764, 0.32122573256492615, 0.43904373049736023, 0.5404834151268005, 0.629507303237915, 0.6532822847366333, 0.6860388517379761, 0.6903975605964661, 0.6944921612739563, 0.7217012047767639, 0.7273808121681213, 0.7331924438476562, 0.748249888420105, 0.7582882046699524, 0.7623828053474426, 0.7642319202423096, 0.7718927264213562, 0.7729493975639343, 0.7852331399917603, 0.787082314491272, 0.7881389260292053, 0.7865539789199829, 0.8034605979919434, 0.8042530417442322, 0.8057059645652771, 0.811649739742279, 0.8145555257797241, 0.8272355198860168, 0.8248580098152161, 0.8261788487434387, 0.8323867321014404, 0.8314621448516846, 0.828292191028595, 0.8383304476737976, 0.8384625315666199, 0.8466516733169556, 0.845859169960022, 0.850350022315979, 0.8544445633888245, 0.8549728989601135, 0.8552370667457581, 0.8510104417800903, 0.8603883385658264, 0.8663320541381836, 0.8648791313171387, 0.8647470474243164, 0.8660678863525391, 0.8708229064941406, 0.8708229064941406, 0.8751816153526306, 0.8747853636741638, 0.8754457831382751, 0.8774270415306091, 0.8749174475669861, 0.8775591254234314, 0.8831065893173218, 0.8857482671737671, 0.8858803510665894, 0.8894465565681458, 0.8899748921394348, 0.8841632604598999, 0.9014661312103271, 0.8939374089241028, 0.8934090733528137, 0.8972394466400146, 0.8931449055671692, 0.8990886211395264, 0.8965790271759033, 0.8965790271759033, 0.9002773761749268], "val_loss": [2.2445285320281982, 2.0125293731689453, 1.1304054260253906, 0.9116750359535217, 0.7940114140510559, 0.7290573716163635, 0.6817285418510437, 0.6714423298835754, 0.67037034034729, 0.6457229256629944, 0.5871986746788025, 0.5700526237487793, 0.5548973083496094, 0.5513762831687927, 0.542310357093811, 0.5405011773109436, 0.5228846669197083, 0.522034764289856, 0.5146340131759644, 0.5080424547195435, 0.49685928225517273, 0.4929514527320862, 0.4845026433467865, 0.47742635011672974, 0.4685015380382538, 0.4674668312072754, 0.46291112899780273, 0.4528484642505646, 0.44843074679374695, 0.44721052050590515, 0.4388711750507355, 0.43844637274742126, 0.4373455345630646, 0.43146464228630066, 0.4236035645008087, 0.4355410933494568, 0.4317913353443146, 0.4201754033565521, 0.4213792383670807, 0.42995449900627136, 0.4233764708042145, 0.4209681749343872, 0.42540648579597473, 0.42837828397750854, 0.42934831976890564, 0.4328935444355011, 0.4506050646305084, 0.44207707047462463, 0.425666868686676, 0.42612987756729126, 0.45371395349502563, 0.48151087760925293, 0.46028846502304077, 0.4358411133289337, 0.4469809830188751, 0.4685717225074768, 0.46147164702415466, 0.4659747779369354, 0.4894557595252991, 0.4838334023952484, 0.49728402495384216, 0.5254948735237122, 0.5049422383308411, 0.4642232358455658, 0.4673810303211212, 0.4758555591106415, 0.47935032844543457, 0.48774221539497375, 0.5161470174789429, 0.48516079783439636], "val_accuracy": [0.41100001335144043, 0.43966665863990784, 0.6483333110809326, 0.687333345413208, 0.6966666579246521, 0.7283333539962769, 0.7273333072662354, 0.7486666440963745, 0.7366666793823242, 0.7636666893959045, 0.7733333110809326, 0.7870000004768372, 0.7826666831970215, 0.7916666865348816, 0.7990000247955322, 0.7943333387374878, 0.8016666769981384, 0.8083333373069763, 0.7973333597183228, 0.7983333468437195, 0.8143333196640015, 0.8236666917800903, 0.8153333067893982, 0.8263333439826965, 0.8326666951179504, 0.824999988079071, 0.8253333568572998, 0.8376666903495789, 0.8443333506584167, 0.8433333039283752, 0.846666693687439, 0.8506666421890259, 0.8456666469573975, 0.8429999947547913, 0.8510000109672546, 0.8546666502952576, 0.8523333072662354, 0.8583333492279053, 0.8566666841506958, 0.8556666374206543, 0.8600000143051147, 0.859333336353302, 0.8569999933242798, 0.859333336353302, 0.8566666841506958, 0.8619999885559082, 0.859333336353302, 0.8586666584014893, 0.862333357334137, 0.859333336353302, 0.8663333058357239, 0.8643333315849304, 0.8659999966621399, 0.8693333268165588, 0.8686666488647461, 0.8683333396911621, 0.8646666407585144, 0.8676666617393494, 0.8709999918937683, 0.8686666488647461, 0.8723333477973938, 0.8709999918937683, 0.8676666617393494, 0.8659999966621399, 0.874666690826416, 0.8733333349227905, 0.8653333187103271, 0.8696666955947876, 0.8696666955947876, 0.8693333268165588]}, "mapping_values": [1, 10, 5, 5, 3, 3, 2, 1, 1, 10, 6, 4, 2, 2, 1, 1, 0], "tree_depth": 16}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8497142791748047, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224102020263672, 1.879554033279419, 1.4107789993286133, 1.103023886680603, 0.9518901109695435, 0.8525092601776123, 0.7949061989784241, 0.7335468530654907, 0.7004543542861938, 0.676298975944519, 0.6440668106079102, 0.6221965551376343, 0.6058535575866699, 0.5839955806732178, 0.5715821385383606, 0.5550315976142883, 0.5441845059394836, 0.5250920653343201, 0.5203306674957275, 0.5070412158966064, 0.49896669387817383, 0.4822908341884613, 0.47590652108192444, 0.46738290786743164, 0.4567597508430481, 0.4520858824253082, 0.44203343987464905, 0.4358291029930115, 0.41939207911491394, 0.4165433943271637, 0.41518163681030273, 0.3992830812931061, 0.4011704921722412, 0.3957173824310303, 0.3853031396865845, 0.3865821659564972, 0.37748637795448303, 0.3721473515033722, 0.36810821294784546, 0.36234739422798157, 0.3582678735256195, 0.3622947633266449, 0.34504708647727966, 0.34687551856040955, 0.34012842178344727, 0.33595117926597595, 0.3281538784503937, 0.32278257608413696, 0.3217829763889313, 0.3181672692298889, 0.31604304909706116, 0.3077824115753174, 0.29854437708854675, 0.30337509512901306, 0.2961086928844452, 0.2863888144493103, 0.2856604754924774, 0.28040367364883423, 0.2790210247039795, 0.26759085059165955, 0.2693682610988617, 0.2669368088245392], "accuracy": [0.28622373938560486, 0.4846123456954956, 0.5531634092330933, 0.6159027814865112, 0.6647734642028809, 0.6927750706672668, 0.7177387475967407, 0.7371549606323242, 0.7368907928466797, 0.7526086568832397, 0.7724210619926453, 0.776251494884491, 0.7770439982414246, 0.7926297783851624, 0.7910447716712952, 0.802800178527832, 0.8096684813499451, 0.8080834746360779, 0.8144234418869019, 0.8183859586715698, 0.8252542614936829, 0.8255184292793274, 0.828292191028595, 0.8342359066009521, 0.8354246616363525, 0.839519202709198, 0.8405758738517761, 0.8445383906364441, 0.8506141901016235, 0.8524633646011353, 0.8525954484939575, 0.8573504090309143, 0.8535200357437134, 0.8610487580299377, 0.8631620407104492, 0.8640866279602051, 0.86553955078125, 0.8663320541381836, 0.8684453964233398, 0.8722757697105408, 0.8708229064941406, 0.8708229064941406, 0.8771628737449646, 0.8720116019248962, 0.8734645247459412, 0.8787478804588318, 0.8853520154953003, 0.8831065893173218, 0.8815215826034546, 0.886672854423523, 0.8824461698532104, 0.8911636471748352, 0.8899748921394348, 0.8920882344245911, 0.8928807377815247, 0.8969752788543701, 0.895918607711792, 0.8960506916046143, 0.8997490406036377, 0.9029190540313721, 0.9031832218170166, 0.8997490406036377], "val_loss": [2.045348644256592, 1.530526041984558, 1.0606766939163208, 0.8472020030021667, 0.7572950124740601, 0.7035411596298218, 0.662340521812439, 0.6196112632751465, 0.5978373289108276, 0.5729236602783203, 0.5551113486289978, 0.5358560681343079, 0.5278773903846741, 0.5134999752044678, 0.5006538033485413, 0.49051913619041443, 0.482737272977829, 0.47540876269340515, 0.464076429605484, 0.46344542503356934, 0.45427319407463074, 0.446919709444046, 0.43655675649642944, 0.43234387040138245, 0.4259163439273834, 0.42337659001350403, 0.41916894912719727, 0.412994384765625, 0.409891277551651, 0.40533578395843506, 0.400322824716568, 0.39940574765205383, 0.3946899473667145, 0.3949819803237915, 0.3873107135295868, 0.38372132182121277, 0.3896471858024597, 0.37933602929115295, 0.37603959441185, 0.3777947723865509, 0.3785616159439087, 0.3699568808078766, 0.37154313921928406, 0.36574050784111023, 0.36395618319511414, 0.3642396628856659, 0.35933390259742737, 0.35949447751045227, 0.3574405014514923, 0.35529986023902893, 0.35178500413894653, 0.35801786184310913, 0.35122913122177124, 0.3497963845729828, 0.3454577624797821, 0.3557814061641693, 0.34754154086112976, 0.34471622109413147, 0.3453153371810913, 0.3472978472709656, 0.3416256606578827, 0.34823688864707947], "val_accuracy": [0.5630000233650208, 0.6460000276565552, 0.6776666641235352, 0.7089999914169312, 0.7296666502952576, 0.7433333396911621, 0.7606666684150696, 0.7760000228881836, 0.7770000100135803, 0.7963333129882812, 0.7946666479110718, 0.8080000281333923, 0.8113333582878113, 0.8159999847412109, 0.8243333101272583, 0.8276666402816772, 0.8293333053588867, 0.8336666822433472, 0.8389999866485596, 0.8386666774749756, 0.8399999737739563, 0.8456666469573975, 0.8503333330154419, 0.8473333120346069, 0.8486666679382324, 0.8486666679382324, 0.8543333411216736, 0.8503333330154419, 0.859666645526886, 0.8600000143051147, 0.859000027179718, 0.8586666584014893, 0.8606666922569275, 0.8633333444595337, 0.8629999756813049, 0.8643333315849304, 0.8633333444595337, 0.8653333187103271, 0.8676666617393494, 0.8666666746139526, 0.8683333396911621, 0.8709999918937683, 0.8726666569709778, 0.871999979019165, 0.8740000128746033, 0.8736666440963745, 0.875333309173584, 0.8743333220481873, 0.8736666440963745, 0.8759999871253967, 0.8776666522026062, 0.874666690826416, 0.8773333430290222, 0.878333330154419, 0.8790000081062317, 0.8796666860580444, 0.8809999823570251, 0.8793333172798157, 0.8803333044052124, 0.8790000081062317, 0.8806666731834412, 0.8796666860580444]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 0, 0, 1, 0, 1], [0, 6, 0, 8, 0, 5], [0, 3], [0], [1], [0], [2], [0]], "fitness": -0.8259999752044678, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.negative(tf.math.sqrt(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)))), tf.math.square(sigma))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6304477453231812, 0.9213338494300842, 0.739048182964325, 0.6515859365463257, 0.6197544932365417, 0.5913530588150024, 0.564338207244873, 0.5501961708068848, 0.5253093838691711, 0.5146421790122986, 0.5098574161529541, 0.5069172382354736, 0.5478361248970032, 0.5341061949729919, 0.5166769027709961], "accuracy": [0.4625544846057892, 0.6656980514526367, 0.7289658188819885, 0.7592127919197083, 0.7688548564910889, 0.7773081660270691, 0.7903843522071838, 0.8013472557067871, 0.8082155585289001, 0.8166688680648804, 0.8161405324935913, 0.8104609847068787, 0.8150838613510132, 0.8186501264572144, 0.8235371708869934], "val_loss": [0.9081135988235474, 0.6727940440177917, 0.6088562607765198, 0.5652296543121338, 0.5388543009757996, 0.5479640960693359, 0.5137460827827454, 0.517775297164917, 0.5151883363723755, 0.5135066509246826, 0.5330396890640259, 0.58211749792099, 0.5500761866569519, 0.6165125966072083, 0.5355097651481628], "val_accuracy": [0.6729999780654907, 0.7453333139419556, 0.7693333625793457, 0.7856666445732117, 0.7963333129882812, 0.8176666498184204, 0.8130000233650208, 0.8230000138282776, 0.8209999799728394, 0.8299999833106995, 0.8186666369438171, 0.8240000009536743, 0.8190000057220459, 0.8259999752044678, 0.8286666870117188]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 8, 6, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [5, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 59], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [6, 3, 3, 6, 8, 1, 4, 9, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 2, 1, 1, 1, 2, 1, 1, 1, 16, 9, 7, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.303375005722046, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 2, 2], [59, 39], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1], [0, 2, 3, 8, 3, 5], [3, 2, 0, 3], [24, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 8, 9, 2, 2, 8], [1, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 87]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 10, 6, 4, 1, 2, 1, 1, 1, 17, 10, 7, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(grad, tf.math.multiply(beta, tf.math.sqrt(tf.math.multiply(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.add(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5, 7], [0, 1, 2, 0, 2, 3], [22, 39, 35], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1], [0, 2, 0, 1, 6, 3, 8, 2, 7, 2, 9], [2, 0, 2, 3, 3, 1, 3], [0, 27, 16, 56], [0, 1], [0], [0], [0, 15, 44], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 4, 6, 2, 0, 9, 4, 1, 4, 2, 8], [2, 6, 1, 1, 0, 1, 0, 6, 4, 2], [0, 33, 36]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 7, 6, 2, 18, 11, 7, 2, 2, 1, 1, 1, 16, 9, 7, 3], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), alpha), grad), tf.math.multiply(tf.math.square(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.subtract(tf.math.divide_no_nan(beta, tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.sqrt(beta), grad))), tf.math.add(tf.math.add(grad, alpha), tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.pow(tf.math.divide_no_nan(beta, tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), tf.math.pow(alpha, alpha)), tf.math.subtract(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 0, 0], [0, 1, 3, 1, 9], [0, 0, 3, 0, 1], [83, 99, 27], [0, 1], [0, 2, 3, 0, 3, 5], [0], [8, 16], [0, 1], [0], [0], [0], [0, 1], [0], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [0]], "fitness": -0.09314285963773727, "mapping_values": [1, 1, 0, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3093340396881104, 2.309903860092163, 2.3099365234375, 2.3099606037139893, 2.3102478981018066, 2.3102104663848877], "accuracy": [0.09021265059709549, 0.08625016361474991, 0.09126931428909302, 0.0886276587843895, 0.09021265059709549, 0.0948355570435524], "val_loss": [2.308842420578003, 2.308842420578003, 2.308842420578003, 2.308842420578003, 2.308842420578003, 2.308842420578003], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}]