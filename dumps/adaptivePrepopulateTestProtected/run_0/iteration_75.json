[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8751428723335266, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224867582321167, 1.8719507455825806, 1.3953629732131958, 1.0891669988632202, 0.925133466720581, 0.8327964544296265, 0.7580069899559021, 0.719224214553833, 0.685614824295044, 0.6460440754890442, 0.6224985122680664, 0.6038526296615601, 0.5879338979721069, 0.5636000633239746, 0.5551565885543823, 0.5484910607337952, 0.5225496888160706, 0.516586422920227, 0.5031377673149109, 0.5009307861328125, 0.4828433692455292, 0.4669044613838196, 0.4599245488643646, 0.4470595121383667, 0.4404301643371582, 0.4385380148887634, 0.4265902638435364, 0.4216749370098114, 0.4133685231208801, 0.41096916794776917, 0.40644219517707825, 0.3956755995750427, 0.39605435729026794, 0.37886643409729004, 0.3764266073703766, 0.36997517943382263, 0.3771996796131134, 0.35956871509552, 0.3659084439277649, 0.3490303158760071, 0.3462354242801666, 0.3463592231273651, 0.3372722566127777, 0.32908082008361816, 0.32897964119911194, 0.31916695833206177, 0.314759761095047, 0.30959975719451904, 0.3103695809841156, 0.3012045919895172, 0.30564242601394653, 0.30114424228668213, 0.29531264305114746, 0.29373154044151306, 0.29074642062187195, 0.279172420501709, 0.2745834290981293, 0.27302286028862, 0.27073928713798523, 0.27105244994163513, 0.2651977837085724, 0.2638641595840454, 0.2618968188762665, 0.2516559660434723, 0.2546638548374176, 0.24403363466262817, 0.23846977949142456], "accuracy": [0.2690529525279999, 0.4928014874458313, 0.5665037631988525, 0.6190727949142456, 0.6709813475608826, 0.6977941989898682, 0.7305507659912109, 0.7341170310974121, 0.7420420050621033, 0.763967752456665, 0.7736098170280457, 0.776251494884491, 0.7827235460281372, 0.7922335267066956, 0.7996301651000977, 0.798309326171875, 0.8107251524925232, 0.8146876096725464, 0.8211596608161926, 0.819442629814148, 0.8256505131721497, 0.8314621448516846, 0.8330471515655518, 0.8400475382804871, 0.8430854678153992, 0.8465195894241333, 0.8442742228507996, 0.8487650156021118, 0.8511425256729126, 0.8536521196365356, 0.8548408150672913, 0.8553691506385803, 0.8599920868873596, 0.8643507957458496, 0.8651432991027832, 0.868049144744873, 0.8673887252807617, 0.8714832663536072, 0.8714832663536072, 0.8737286925315857, 0.8721436858177185, 0.8792761564254761, 0.8732003569602966, 0.8803328275680542, 0.8821820020675659, 0.8858803510665894, 0.8877294659614563, 0.8886540532112122, 0.8897107243537903, 0.8916919827461243, 0.8893144726753235, 0.8939374089241028, 0.8932769894599915, 0.8931449055671692, 0.8927486538887024, 0.8982961177825928, 0.9025228023529053, 0.9006736278533936, 0.9026548862457275, 0.9022586345672607, 0.9054285883903503, 0.9033153057098389, 0.9051644206047058, 0.9104477763175964, 0.91124027967453, 0.9071456789970398, 0.9119006991386414], "val_loss": [2.039332866668701, 1.5119094848632812, 1.0346583127975464, 0.8250001668930054, 0.7306081652641296, 0.6860858798027039, 0.6339893937110901, 0.5955227017402649, 0.5779800415039062, 0.5496160984039307, 0.5313429236412048, 0.5211611390113831, 0.5086379647254944, 0.4914337694644928, 0.4822158217430115, 0.4724486172199249, 0.45923277735710144, 0.4489021897315979, 0.4408402442932129, 0.43021631240844727, 0.42228344082832336, 0.41614556312561035, 0.41206371784210205, 0.4030274748802185, 0.40850430727005005, 0.39134472608566284, 0.3872291147708893, 0.38699978590011597, 0.38155439496040344, 0.37327393889427185, 0.372293084859848, 0.37309718132019043, 0.3722003698348999, 0.3625216782093048, 0.3583049774169922, 0.36596232652664185, 0.35285863280296326, 0.35167959332466125, 0.3474918305873871, 0.3510207533836365, 0.3448698818683624, 0.3425388038158417, 0.3380795121192932, 0.34016531705856323, 0.33576199412345886, 0.33423617482185364, 0.3367336094379425, 0.3328351378440857, 0.3260979652404785, 0.3294341564178467, 0.3298231363296509, 0.3244270384311676, 0.3250114619731903, 0.3323361873626709, 0.3172527551651001, 0.31857824325561523, 0.32132819294929504, 0.3207681179046631, 0.3187211751937866, 0.3222409188747406, 0.3232608139514923, 0.3135392665863037, 0.3197100758552551, 0.3230595588684082, 0.3117145597934723, 0.316413015127182, 0.3145030438899994], "val_accuracy": [0.5053333044052124, 0.6366666555404663, 0.6913333535194397, 0.718666672706604, 0.7393333315849304, 0.734666645526886, 0.7603333592414856, 0.7776666879653931, 0.7796666622161865, 0.7946666479110718, 0.8023333549499512, 0.8066666722297668, 0.8109999895095825, 0.8183333277702332, 0.8236666917800903, 0.8246666789054871, 0.8316666483879089, 0.8379999995231628, 0.8416666388511658, 0.8456666469573975, 0.8456666469573975, 0.8519999980926514, 0.8536666631698608, 0.8523333072662354, 0.8503333330154419, 0.859333336353302, 0.859333336353302, 0.859666645526886, 0.8646666407585144, 0.8669999837875366, 0.8683333396911621, 0.8696666955947876, 0.8683333396911621, 0.8706666827201843, 0.8733333349227905, 0.8730000257492065, 0.875, 0.871999979019165, 0.8806666731834412, 0.8759999871253967, 0.8796666860580444, 0.8809999823570251, 0.8813333511352539, 0.8826666474342346, 0.8843333125114441, 0.8833333253860474, 0.8803333044052124, 0.8786666393280029, 0.8853333592414856, 0.8856666684150696, 0.8826666474342346, 0.8833333253860474, 0.8843333125114441, 0.8830000162124634, 0.8893333077430725, 0.8896666765213013, 0.887666642665863, 0.890333354473114, 0.8849999904632568, 0.8866666555404663, 0.8883333206176758, 0.8916666507720947, 0.8859999775886536, 0.8846666812896729, 0.890999972820282, 0.890333354473114, 0.890333354473114]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0], [0, 9], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8551428318023682, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2942967414855957, 2.192568778991699, 1.7830044031143188, 1.3715060949325562, 1.0923032760620117, 0.9421155452728271, 0.8787013292312622, 0.8137642741203308, 0.7692302465438843, 0.7327604293823242, 0.6962859630584717, 0.6941935420036316, 0.6712726354598999, 0.633497953414917, 0.6101136803627014, 0.5975432991981506, 0.5887027382850647, 0.5743680596351624, 0.5749860405921936, 0.5433013439178467, 0.5439229607582092, 0.5356453657150269, 0.5282660722732544, 0.5147512555122375, 0.5121929049491882, 0.5015082955360413, 0.48209115862846375, 0.4755544066429138, 0.47190630435943604, 0.45503318309783936, 0.4509166479110718, 0.4414837956428528, 0.4329310953617096, 0.4315868616104126, 0.4152217209339142, 0.41666099429130554, 0.40413138270378113, 0.39952728152275085, 0.3939822018146515, 0.38207706809043884, 0.3861497938632965, 0.3775887191295624, 0.35818055272102356, 0.3517056107521057, 0.3594702184200287, 0.36532217264175415, 0.3572775721549988, 0.3565806746482849, 0.34755879640579224, 0.34193646907806396], "accuracy": [0.13261127471923828, 0.31462156772613525, 0.43059042096138, 0.5297846794128418, 0.6207898855209351, 0.6559239029884338, 0.6863030195236206, 0.693831741809845, 0.7033417224884033, 0.7230220437049866, 0.7321357727050781, 0.7416457533836365, 0.7485140562057495, 0.7629110813140869, 0.7714964747428894, 0.7763835787773132, 0.7866860628128052, 0.7840443849563599, 0.7877426743507385, 0.8000264167785645, 0.7924976944923401, 0.7961959838867188, 0.7932901978492737, 0.809140145778656, 0.8088759779930115, 0.8145555257797241, 0.81548011302948, 0.8195747137069702, 0.8259146809577942, 0.8273676037788391, 0.8310658931732178, 0.8317263126373291, 0.8359529972076416, 0.8359529972076416, 0.8445383906364441, 0.8364813327789307, 0.8459912538528442, 0.8438779711723328, 0.8469158411026001, 0.8548408150672913, 0.8426892161369324, 0.8494254350662231, 0.8597279191017151, 0.869502067565918, 0.8597279191017151, 0.8617091774940491, 0.8556333184242249, 0.8574824929237366, 0.8646149635314941, 0.8621054291725159], "val_loss": [2.2470738887786865, 2.0261120796203613, 1.1619771718978882, 0.8632077574729919, 0.7745466828346252, 0.713886559009552, 0.666942298412323, 0.6368734836578369, 0.6311955451965332, 0.5995709896087646, 0.5761474967002869, 0.5561579465866089, 0.5490453243255615, 0.5364053249359131, 0.5210461616516113, 0.5130339860916138, 0.5054660439491272, 0.4886908233165741, 0.4881179630756378, 0.48026350140571594, 0.484627902507782, 0.47033533453941345, 0.46476686000823975, 0.4469777047634125, 0.44638770818710327, 0.43529775738716125, 0.4307954013347626, 0.4293074607849121, 0.42004328966140747, 0.41667550802230835, 0.41268935799598694, 0.41524365544319153, 0.4058568477630615, 0.40337175130844116, 0.4141070544719696, 0.40253496170043945, 0.3874340057373047, 0.3889910578727722, 0.39808389544487, 0.3913426399230957, 0.3825739324092865, 0.37938639521598816, 0.37809744477272034, 0.3789844214916229, 0.38715746998786926, 0.3745855689048767, 0.3775051236152649, 0.3831917345523834, 0.3773515522480011, 0.38250234723091125], "val_accuracy": [0.41333332657814026, 0.45899999141693115, 0.6466666460037231, 0.6913333535194397, 0.715666651725769, 0.7396666407585144, 0.7400000095367432, 0.7506666779518127, 0.762666642665863, 0.7590000033378601, 0.7730000019073486, 0.7889999747276306, 0.7816666960716248, 0.7893333435058594, 0.7960000038146973, 0.7996666431427002, 0.8023333549499512, 0.8133333325386047, 0.8153333067893982, 0.8140000104904175, 0.8216666579246521, 0.8159999847412109, 0.8226666450500488, 0.8336666822433472, 0.828000009059906, 0.8403333425521851, 0.8349999785423279, 0.8413333296775818, 0.8483333587646484, 0.8456666469573975, 0.843999981880188, 0.8423333168029785, 0.843666672706604, 0.8516666889190674, 0.8519999980926514, 0.8453333377838135, 0.8556666374206543, 0.8550000190734863, 0.8550000190734863, 0.8579999804496765, 0.8529999852180481, 0.8510000109672546, 0.8600000143051147, 0.8643333315849304, 0.8656666874885559, 0.8629999756813049, 0.8526666760444641, 0.8629999756813049, 0.8636666536331177, 0.8656666874885559]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 2, 0, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 0, 1, 1], [0, 3, 8, 5, 6], [0, 4, 0], [0, 49], [1], [0], [2], [0]], "fitness": -0.8182857036590576, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.divide_no_nan(grad, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5120820999145508, 0.7825391888618469, 0.6411174535751343, 0.578758180141449, 0.5270795226097107, 0.5002626180648804, 0.46882322430610657, 0.45000001788139343, 0.4770122766494751, 0.4260996878147125, 0.45455873012542725, 0.4755627512931824, 0.46374231576919556, 0.49828040599823], "accuracy": [0.49689605832099915, 0.7281733155250549, 0.7695152759552002, 0.7828556299209595, 0.807158887386322, 0.8191784620285034, 0.8257825970649719, 0.8355567455291748, 0.8359529972076416, 0.8428213000297546, 0.8389908671379089, 0.8337075710296631, 0.8376700282096863, 0.8405758738517761], "val_loss": [0.7687028050422668, 0.6285246014595032, 0.531155526638031, 0.4947008192539215, 0.4740675389766693, 0.46324190497398376, 0.48044639825820923, 0.4958248734474182, 0.45703378319740295, 0.504348874092102, 0.4942004680633545, 0.5416884422302246, 0.5656808018684387, 0.5540809035301208], "val_accuracy": [0.7143333554267883, 0.7693333625793457, 0.8113333582878113, 0.8080000281333923, 0.831333339214325, 0.8363333344459534, 0.8389999866485596, 0.843666672706604, 0.8529999852180481, 0.8453333377838135, 0.8443333506584167, 0.8489999771118164, 0.8413333296775818, 0.8383333086967468]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 8, 5, 3, 2, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 8, 5], [0, 0, 0, 3], [16, 16, 67], [0, 1], [0], [4], [11], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 3, 3, 6, 8, 3, 4, 1, 6, 2, 0, 4], [0, 0, 0, 3, 3, 0, 3, 1, 2, 0], [16, 99, 58, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 0, 8, 5, 3, 3, 2, 1, 1, 0, 22, 12, 10, 5], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(sigma, tf.math.divide_no_nan(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma), tf.math.negative(tf.math.pow(alpha, beta)))))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 5, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0], [0, 8, 3, 0, 5, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 4, 8], [3, 0, 0, 4, 0, 0, 3, 1, 2, 4], [16, 99, 49, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 1, 6, 4, 2, 1, 2, 1, 1, 1, 21, 11, 10, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(sigma, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), tf.math.subtract(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.pow(tf.math.sqrt(beta), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 67], [0, 1], [0], [0], [99], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 4, 1, 2, 0], [16, 80, 96, 99, 61, 74]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 2, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(grad, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10368511080741882, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 1], [0, 1, 0, 0], [39, 39, 78], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 4, 0, 3, 5, 6, 3], [0, 3, 0, 3, 5, 0], [16, 16, 29], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 3, 14, 8, 6, 3, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(grad), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.math.multiply(grad, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))))", "other_info": {"loss": [2.3042874336242676, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}]