[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.87028568983078, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2219436168670654, 1.8683651685714722, 1.4007935523986816, 1.0879169702529907, 0.9335178136825562, 0.8233203291893005, 0.7717353105545044, 0.7252312302589417, 0.6918701529502869, 0.6544743776321411, 0.6380067467689514, 0.6099931597709656, 0.5864759683609009, 0.5747426748275757, 0.5565650463104248, 0.5435472130775452, 0.5289204120635986, 0.5183237195014954, 0.5054752826690674, 0.49530029296875, 0.4839088022708893, 0.47375205159187317, 0.46558678150177, 0.4550361931324005, 0.4517556130886078, 0.4410717189311981, 0.43569788336753845, 0.42243054509162903, 0.42045581340789795, 0.39937636256217957, 0.4056670367717743, 0.3957219421863556, 0.3871590793132782, 0.384548544883728, 0.37806710600852966, 0.3695286214351654, 0.3668300211429596, 0.3601551055908203, 0.3555847704410553, 0.3514740467071533, 0.34676072001457214, 0.3476042151451111, 0.3347581624984741, 0.32365214824676514, 0.3318788707256317, 0.32792985439300537, 0.3143652081489563, 0.3067781925201416, 0.3103826344013214, 0.29776573181152344, 0.2985110282897949, 0.2934747040271759, 0.29061415791511536, 0.2807343602180481, 0.28567808866500854, 0.281154066324234, 0.2767997682094574, 0.2711855173110962, 0.2650354504585266, 0.2675134837627411, 0.2638002634048462, 0.25552576780319214], "accuracy": [0.272090882062912, 0.48870691657066345, 0.5674283504486084, 0.6223748326301575, 0.6622639298439026, 0.7108704447746277, 0.7182670831680298, 0.737947404384613, 0.7477215528488159, 0.76542067527771, 0.7672698497772217, 0.7823272943496704, 0.7857614755630493, 0.7947431206703186, 0.7954035401344299, 0.8026680946350098, 0.8080834746360779, 0.8120459914207458, 0.816008448600769, 0.8203672170639038, 0.8214238286018372, 0.8272355198860168, 0.8334434032440186, 0.833179235458374, 0.8368775844573975, 0.844010055065155, 0.8416325449943542, 0.847840428352356, 0.8481045961380005, 0.8560295701026917, 0.8532558679580688, 0.8582749962806702, 0.860652506351471, 0.8613129258155823, 0.8647470474243164, 0.8673887252807617, 0.86553955078125, 0.870030403137207, 0.8726720213890076, 0.8729361891746521, 0.8732003569602966, 0.8735966086387634, 0.8779553771018982, 0.882710337638855, 0.880729079246521, 0.8835028409957886, 0.8848236799240112, 0.8873332738876343, 0.8854840993881226, 0.8922203183174133, 0.8870691061019897, 0.8914278149604797, 0.8947299122810364, 0.8956544995307922, 0.9001452922821045, 0.8971073627471924, 0.8985602855682373, 0.9030511379241943, 0.9068815112113953, 0.9025228023529053, 0.9022586345672607, 0.9059569239616394], "val_loss": [2.0391135215759277, 1.5156054496765137, 1.0442496538162231, 0.8360695242881775, 0.7485857605934143, 0.685468316078186, 0.6469929814338684, 0.61134272813797, 0.5908899903297424, 0.5640943646430969, 0.551199734210968, 0.5297779440879822, 0.5170047879219055, 0.50751131772995, 0.49706241488456726, 0.48917728662490845, 0.48122936487197876, 0.4721696078777313, 0.46297863125801086, 0.456881582736969, 0.45037418603897095, 0.4451427459716797, 0.440939337015152, 0.4317091107368469, 0.42938220500946045, 0.421603262424469, 0.4167916774749756, 0.4144142270088196, 0.41082754731178284, 0.41252344846725464, 0.40431147813796997, 0.40157079696655273, 0.3965783715248108, 0.39490649104118347, 0.39255115389823914, 0.39540648460388184, 0.38776496052742004, 0.39177238941192627, 0.3809746503829956, 0.38037797808647156, 0.3833695948123932, 0.3792572319507599, 0.37389078736305237, 0.37581294775009155, 0.37202394008636475, 0.3733285665512085, 0.36354774236679077, 0.3673058748245239, 0.3667752146720886, 0.3662269711494446, 0.36106207966804504, 0.3655487895011902, 0.3610602617263794, 0.36358585953712463, 0.3552963137626648, 0.3662291169166565, 0.3525288999080658, 0.3546123802661896, 0.35335850715637207, 0.3532109260559082, 0.35371163487434387, 0.35252755880355835], "val_accuracy": [0.5403333306312561, 0.6646666526794434, 0.6769999861717224, 0.7023333311080933, 0.7263333201408386, 0.7473333477973938, 0.7556666731834412, 0.7699999809265137, 0.7696666717529297, 0.7853333353996277, 0.7923333048820496, 0.8006666898727417, 0.8009999990463257, 0.8046666383743286, 0.8083333373069763, 0.8090000152587891, 0.8186666369438171, 0.824999988079071, 0.8293333053588867, 0.8320000171661377, 0.8286666870117188, 0.8323333263397217, 0.8316666483879089, 0.8420000076293945, 0.8473333120346069, 0.8460000157356262, 0.847000002861023, 0.8500000238418579, 0.8519999980926514, 0.8516666889190674, 0.8533333539962769, 0.856333315372467, 0.8583333492279053, 0.8603333234786987, 0.8560000061988831, 0.8603333234786987, 0.8616666793823242, 0.856333315372467, 0.8629999756813049, 0.862666666507721, 0.8663333058357239, 0.8619999885559082, 0.8683333396911621, 0.8643333315849304, 0.8683333396911621, 0.8669999837875366, 0.871999979019165, 0.8709999918937683, 0.8690000176429749, 0.8726666569709778, 0.8730000257492065, 0.8679999709129333, 0.8756666779518127, 0.8673333525657654, 0.8733333349227905, 0.8723333477973938, 0.878333330154419, 0.8759999871253967, 0.8773333430290222, 0.8756666779518127, 0.8776666522026062, 0.878333330154419]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 0], [0, 0, 9], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8519999980926514, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293381452560425, 2.190157890319824, 1.7691859006881714, 1.3480989933013916, 1.0861417055130005, 0.9219675660133362, 0.8565704822540283, 0.8288842439651489, 0.7738725543022156, 0.7627062797546387, 0.7128034234046936, 0.6977795362472534, 0.6536899209022522, 0.6321021318435669, 0.6172957420349121, 0.5922088623046875, 0.5837488174438477, 0.5723904967308044, 0.5609830021858215, 0.5544421076774597, 0.5496618151664734, 0.538362443447113, 0.5295515060424805, 0.5053042769432068, 0.5046463012695312, 0.4872080683708191, 0.48361173272132874, 0.47449299693107605, 0.45558229088783264, 0.4554373025894165, 0.45374706387519836, 0.4363783895969391, 0.44501376152038574, 0.423911988735199, 0.41812941431999207, 0.409845769405365, 0.4078276753425598, 0.40356943011283875], "accuracy": [0.1258750557899475, 0.32479196786880493, 0.42847707867622375, 0.5378417372703552, 0.6310923099517822, 0.6627922058105469, 0.6844538450241089, 0.6964733600616455, 0.7055870890617371, 0.7065116763114929, 0.726192057132721, 0.7351737022399902, 0.7514199018478394, 0.7568352818489075, 0.7621186375617981, 0.7724210619926453, 0.7792893648147583, 0.7794214487075806, 0.7843085527420044, 0.7783648371696472, 0.7898560166358948, 0.7895918488502502, 0.7951393723487854, 0.8080834746360779, 0.8087438941001892, 0.8133667707443237, 0.8103289008140564, 0.8207634687423706, 0.8255184292793274, 0.8274996876716614, 0.8240655064582825, 0.8305375576019287, 0.8290846943855286, 0.8380662798881531, 0.8350284099578857, 0.8455950617790222, 0.8451988101005554, 0.847840428352356], "val_loss": [2.2449088096618652, 2.0185060501098633, 1.1484249830245972, 0.8652475476264954, 0.7815796136856079, 0.7453969717025757, 0.7000320553779602, 0.6725443005561829, 0.666902482509613, 0.6322221755981445, 0.5943120718002319, 0.572475790977478, 0.5609087944030762, 0.54763263463974, 0.5304195284843445, 0.527447521686554, 0.5255089402198792, 0.5235550403594971, 0.5144047141075134, 0.5028537511825562, 0.49986711144447327, 0.5018490552902222, 0.48433545231819153, 0.47412213683128357, 0.46496930718421936, 0.4688522517681122, 0.45604199171066284, 0.4527619183063507, 0.4399794042110443, 0.4334547519683838, 0.4362333118915558, 0.43140479922294617, 0.42476797103881836, 0.42288127541542053, 0.42090821266174316, 0.41166698932647705, 0.41641661524772644, 0.4160083830356598], "val_accuracy": [0.4350000023841858, 0.4323333203792572, 0.6489999890327454, 0.6959999799728394, 0.7226666808128357, 0.7193333506584167, 0.7353333234786987, 0.7486666440963745, 0.746666669845581, 0.7613333463668823, 0.7733333110809326, 0.7816666960716248, 0.7799999713897705, 0.7986666560173035, 0.800000011920929, 0.8026666641235352, 0.8090000152587891, 0.8013333082199097, 0.8066666722297668, 0.8083333373069763, 0.8173333406448364, 0.8090000152587891, 0.8159999847412109, 0.8236666917800903, 0.8320000171661377, 0.8339999914169312, 0.8366666436195374, 0.8416666388511658, 0.8420000076293945, 0.8486666679382324, 0.8479999899864197, 0.8513333201408386, 0.8610000014305115, 0.8526666760444641, 0.8539999723434448, 0.856333315372467, 0.8529999852180481, 0.8553333282470703]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 3, 3, 0, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8259999752044678, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5445365905761719, 0.9507359862327576, 0.7944546937942505, 0.7242518067359924, 0.6350041627883911, 0.6015840172767639, 0.5669506192207336, 0.5395449995994568, 0.5240982174873352, 0.5149431824684143, 0.5265973210334778, 0.4999646246433258, 0.4770449995994568, 0.4834156632423401, 0.4743806719779968, 0.5143712759017944, 0.5425682067871094, 0.5694318413734436, 0.581998884677887], "accuracy": [0.4843481779098511, 0.6853784322738647, 0.7190595865249634, 0.7561748623847961, 0.7606657147407532, 0.778232753276825, 0.7946110367774963, 0.8026680946350098, 0.8058380484580994, 0.8128384351730347, 0.8074230551719666, 0.8168009519577026, 0.8277638554573059, 0.8315942287445068, 0.82683926820755, 0.8138951063156128, 0.8173292875289917, 0.8171972036361694, 0.8269713521003723], "val_loss": [0.845586895942688, 0.6367751359939575, 0.6192263960838318, 0.5363444089889526, 0.5281702280044556, 0.5002745985984802, 0.5066996812820435, 0.46601536870002747, 0.4794909358024597, 0.5046090483665466, 0.487845778465271, 0.4777570068836212, 0.4442642331123352, 0.45921841263771057, 0.541853666305542, 0.530590832233429, 0.5108708739280701, 0.6231108903884888, 0.5293537378311157], "val_accuracy": [0.7239999771118164, 0.7639999985694885, 0.7933333516120911, 0.8019999861717224, 0.8053333163261414, 0.8103333115577698, 0.8306666612625122, 0.8320000171661377, 0.8339999914169312, 0.824999988079071, 0.8323333263397217, 0.8353333473205566, 0.8443333506584167, 0.8476666808128357, 0.8360000252723694, 0.8433333039283752, 0.8323333263397217, 0.8463333249092102, 0.8356666564941406]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1], [0, 0, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 4, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [4], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [9, 3, 3, 6, 1, 1, 4, 4, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 1, 0], [16, 99, 96, 99, 61, 51]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 1, 10, 6, 4, 2, 2, 1, 1, 1, 1, 1, 0, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3036293983459473, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [9, 6, 3, 1, 3, 5], [0, 1, 0, 2, 0], [39, 16, 39], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 1, 8, 3, 8, 2], [0, 0, 2, 0, 3, 0, 0], [0, 27, 22, 0], [1, 1], [0, 1, 3, 8], [0, 4, 2], [0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 4, 9], [5, 0, 0, 3, 0, 0, 3, 1, 2, 0], [0, 36]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 6, 3, 3, 2, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), beta))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08981640636920929, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 9, 3, 0, 3], [0, 1, 0, 0], [22, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0], [0, 2, 3, 0, 2, 5, 6, 4, 9], [0, 2, 0, 3, 0], [16, 16, 12, 54], [0, 0], [0, 9], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 9, 6], [0, 4, 4, 4, 3, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 0, 1, 14, 9, 5, 4, 2, 2, 0, 1, 23, 13, 10, 4], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.divide_no_nan(grad, tf.math.pow(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(tf.math.subtract(grad, tf.math.pow(grad, tf.math.add(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32)))), sigma))), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), alpha), tf.math.divide_no_nan(beta, tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [83, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 8, 3, 6, 8, 1, 5, 1, 4, 2, 2], [0, 0, 0, 3, 4, 0, 4, 1, 2, 0], [16, 45, 96, 99, 93, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 16, 9, 7, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), sigma))), tf.math.subtract(grad, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}]