[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8694285750389099, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2220873832702637, 1.8600120544433594, 1.3818517923355103, 1.0904840230941772, 0.9301751852035522, 0.8400986790657043, 0.7832046151161194, 0.7309668064117432, 0.6924017667770386, 0.6741973757743835, 0.6446207761764526, 0.6182599663734436, 0.6036494374275208, 0.5795601010322571, 0.5699935555458069, 0.5575645565986633, 0.5320372581481934, 0.5285852551460266, 0.5132175087928772, 0.506102979183197, 0.49271857738494873, 0.4877481162548065, 0.47487348318099976, 0.47055262327194214, 0.457214891910553, 0.44258925318717957, 0.43930453062057495, 0.430597722530365, 0.4250136911869049, 0.4173796474933624, 0.41170719265937805, 0.4113464653491974, 0.40228530764579773, 0.3953033983707428, 0.3854771554470062, 0.381412148475647, 0.37120920419692993, 0.37467893958091736, 0.3704402446746826, 0.3618205785751343, 0.36056530475616455], "accuracy": [0.2719587981700897, 0.49451854825019836, 0.5675604343414307, 0.6194690465927124, 0.6701889038085938, 0.7034738063812256, 0.7143045663833618, 0.7341170310974121, 0.7425703406333923, 0.7541936039924622, 0.7677981853485107, 0.7746664881706238, 0.7755910754203796, 0.7898560166358948, 0.7942147850990295, 0.8000264167785645, 0.8090080618858337, 0.8127063512802124, 0.8191784620285034, 0.8183859586715698, 0.8255184292793274, 0.8280280232429504, 0.8286884427070618, 0.8296129703521729, 0.8363492488861084, 0.8422929644584656, 0.8437458872795105, 0.8496896028518677, 0.8500858545303345, 0.8470479249954224, 0.8521991968154907, 0.8536521196365356, 0.8561616539955139, 0.8590674996376038, 0.8658037185668945, 0.859199583530426, 0.869502067565918, 0.8646149635314941, 0.8692378997802734, 0.8735966086387634, 0.872407853603363], "val_loss": [2.0346033573150635, 1.5065405368804932, 1.037087082862854, 0.8344724774360657, 0.7489100694656372, 0.7013546824455261, 0.655753493309021, 0.6285682916641235, 0.598685622215271, 0.5772691369056702, 0.5613549947738647, 0.5420695543289185, 0.529833197593689, 0.5222606658935547, 0.4995572865009308, 0.49143561720848083, 0.4789903163909912, 0.4710204303264618, 0.4653007388114929, 0.4510957896709442, 0.44749146699905396, 0.4448681175708771, 0.4334535300731659, 0.4301026165485382, 0.4223511517047882, 0.4213489592075348, 0.41462281346321106, 0.40878599882125854, 0.4073391854763031, 0.4005643427371979, 0.3967142701148987, 0.3942353129386902, 0.39355602860450745, 0.38833004236221313, 0.3811590075492859, 0.38295474648475647, 0.3826137185096741, 0.3840780556201935, 0.3809698522090912, 0.37759843468666077, 0.37478792667388916], "val_accuracy": [0.5556666851043701, 0.6683333516120911, 0.6833333373069763, 0.7110000252723694, 0.7393333315849304, 0.7540000081062317, 0.7593333125114441, 0.7763333320617676, 0.7829999923706055, 0.7976666688919067, 0.8066666722297668, 0.8040000200271606, 0.8080000281333923, 0.8133333325386047, 0.8246666789054871, 0.8273333311080933, 0.8316666483879089, 0.8353333473205566, 0.8376666903495789, 0.8410000205039978, 0.8429999947547913, 0.8420000076293945, 0.8486666679382324, 0.8463333249092102, 0.8513333201408386, 0.8500000238418579, 0.8566666841506958, 0.8553333282470703, 0.8556666374206543, 0.8586666584014893, 0.8610000014305115, 0.8603333234786987, 0.8643333315849304, 0.8643333315849304, 0.8669999837875366, 0.8693333268165588, 0.8640000224113464, 0.8666666746139526, 0.862666666507721, 0.8629999756813049, 0.8669999837875366]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8568571209907532, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2940378189086914, 2.192655563354492, 1.7744144201278687, 1.3777505159378052, 1.0867443084716797, 0.9280775189399719, 0.8478947281837463, 0.8256880044937134, 0.7654553055763245, 0.7447819709777832, 0.7081124186515808, 0.6880419850349426, 0.653320848941803, 0.6319623589515686, 0.6148982048034668, 0.5947836637496948, 0.5952494144439697, 0.5749238133430481, 0.5649361610412598, 0.5521825551986694, 0.5457896590232849, 0.5269749760627747, 0.5178763270378113, 0.516525387763977, 0.4917401373386383, 0.49094292521476746, 0.47345224022865295, 0.47503843903541565, 0.4584672749042511, 0.46310338377952576, 0.4497086703777313, 0.4371677041053772, 0.4255523085594177, 0.42479589581489563, 0.40627241134643555, 0.40957677364349365, 0.4020257592201233, 0.3919157087802887, 0.38126760721206665, 0.374676376581192, 0.37637847661972046, 0.35881367325782776, 0.3663822412490845, 0.3493741452693939, 0.35621026158332825, 0.34852126240730286, 0.33735474944114685, 0.33327972888946533, 0.33824658393859863, 0.31489962339401245, 0.3138856589794159, 0.3284114897251129], "accuracy": [0.12838461995124817, 0.32479196786880493, 0.43825122714042664, 0.5425967574119568, 0.6316206455230713, 0.6626601219177246, 0.6989829540252686, 0.7073041796684265, 0.7049266695976257, 0.713908314704895, 0.7294940948486328, 0.733588695526123, 0.7473253011703491, 0.7569673657417297, 0.7588165402412415, 0.770439863204956, 0.7749306559562683, 0.7824593782424927, 0.785101056098938, 0.7873464822769165, 0.7882710099220276, 0.791441023349762, 0.7992339134216309, 0.8058380484580994, 0.8152159452438354, 0.8132346868515015, 0.8153480291366577, 0.8234050869941711, 0.8228767514228821, 0.821820080280304, 0.826310932636261, 0.8305375576019287, 0.8372738361358643, 0.834632158279419, 0.8441421389579773, 0.8436138033866882, 0.8445383906364441, 0.848368763923645, 0.8525954484939575, 0.856689989566803, 0.8556333184242249, 0.8598600029945374, 0.8577466607093811, 0.8603883385658264, 0.860652506351471, 0.863029956817627, 0.8681812286376953, 0.8720116019248962, 0.867520809173584, 0.8754457831382751, 0.8757099509239197, 0.8712190985679626], "val_loss": [2.2475900650024414, 2.027528762817383, 1.143067479133606, 0.8620050549507141, 0.7517461180686951, 0.6834884285926819, 0.6723425388336182, 0.6367867588996887, 0.650750458240509, 0.6128729581832886, 0.5788767337799072, 0.5511313676834106, 0.5345267057418823, 0.5169985294342041, 0.526198148727417, 0.49239176511764526, 0.48440080881118774, 0.48376205563545227, 0.4714225232601166, 0.48382559418678284, 0.46521899104118347, 0.45967090129852295, 0.4672240912914276, 0.439836710691452, 0.43721267580986023, 0.4197274148464203, 0.4390629529953003, 0.4237835705280304, 0.416381299495697, 0.4052623212337494, 0.42346248030662537, 0.4112801253795624, 0.4038439989089966, 0.4108709990978241, 0.4141175150871277, 0.41713160276412964, 0.4062219262123108, 0.39951932430267334, 0.3928980231285095, 0.4022955000400543, 0.4049910604953766, 0.391269326210022, 0.3780369162559509, 0.38551607728004456, 0.39392977952957153, 0.3918640911579132, 0.4030064344406128, 0.4068695604801178, 0.3968678116798401, 0.4032596945762634, 0.4111808240413666, 0.4001786708831787], "val_accuracy": [0.4026666581630707, 0.42533332109451294, 0.6626666784286499, 0.7080000042915344, 0.7269999980926514, 0.7426666617393494, 0.7509999871253967, 0.7486666440963745, 0.7643333077430725, 0.7570000290870667, 0.7720000147819519, 0.777999997138977, 0.7946666479110718, 0.7960000038146973, 0.7906666398048401, 0.8019999861717224, 0.8029999732971191, 0.8153333067893982, 0.8190000057220459, 0.8073333501815796, 0.8159999847412109, 0.8226666450500488, 0.8180000185966492, 0.8273333311080933, 0.8296666741371155, 0.8389999866485596, 0.831333339214325, 0.8423333168029785, 0.8453333377838135, 0.8450000286102295, 0.8446666598320007, 0.8460000157356262, 0.8513333201408386, 0.8533333539962769, 0.8500000238418579, 0.8493333458900452, 0.8500000238418579, 0.8543333411216736, 0.8553333282470703, 0.8583333492279053, 0.8543333411216736, 0.8643333315849304, 0.8709999918937683, 0.8619999885559082, 0.8656666874885559, 0.8700000047683716, 0.8740000128746033, 0.8700000047683716, 0.8683333396911621, 0.8616666793823242, 0.859666645526886, 0.8686666488647461]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0], [0, 9], [0], [0], [1], [0], [2], [0]], "fitness": -0.8322857022285461, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5271207094192505, 0.8106696605682373, 0.6705178022384644, 0.5909457802772522, 0.5334479212760925, 0.5131856799125671, 0.5012396574020386, 0.47869834303855896, 0.4535045027732849, 0.46229997277259827, 0.47107014060020447, 0.47241196036338806, 0.4663012623786926, 0.4498559534549713, 0.4269779622554779, 0.40912824869155884, 0.44758787751197815, 0.4518145024776459], "accuracy": [0.47193238139152527, 0.7154933214187622, 0.759080708026886, 0.7803460359573364, 0.8104609847068787, 0.822348415851593, 0.8175934553146362, 0.8341038227081299, 0.8350284099578857, 0.8384625315666199, 0.8352925777435303, 0.8389908671379089, 0.8453308939933777, 0.843481719493866, 0.8475762605667114, 0.8540483713150024, 0.8492933511734009, 0.8438779711723328], "val_loss": [0.7867420315742493, 0.6136640906333923, 0.5505309104919434, 0.4894137680530548, 0.465608149766922, 0.4795030951499939, 0.4552282392978668, 0.4616484045982361, 0.4610089063644409, 0.47386980056762695, 0.46695271134376526, 0.5382046103477478, 0.5130374431610107, 0.5430710315704346, 0.502905011177063, 0.5580494999885559, 0.557573139667511, 0.5530948638916016], "val_accuracy": [0.7306666374206543, 0.7886666655540466, 0.8086666464805603, 0.8270000219345093, 0.8383333086967468, 0.8336666822433472, 0.846666693687439, 0.8473333120346069, 0.8450000286102295, 0.8516666889190674, 0.847000002861023, 0.847000002861023, 0.8556666374206543, 0.8539999723434448, 0.843999981880188, 0.8460000157356262, 0.8450000286102295, 0.8446666598320007]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 5, 3, 0, 3], [0, 1, 0, 2], [39, 39], [1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [89], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 6, 3, 6, 8, 1, 4, 1, 4, 2, 8, 9], [0, 0, 0, 3, 0, 0, 3, 3, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 3, 2, 1, 1, 0, 1, 1, 2, 1, 1, 1, 21, 12, 9, 6], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), sigma), tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), sigma), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 1, 3, 1, 3], [2, 0, 0, 0, 2], [83, 99, 27], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 1, 0, 9, 4, 2, 3, 9, 4, 8], [0, 2, 0, 3, 4], [0, 76, 34, 40], [0, 1], [8], [5], [99], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 7, 6, 7, 5, 9, 5, 2], [1, 1, 2, 5, 5, 5, 3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 16, 11, 5, 4, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(grad, tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.math.subtract(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(tf.math.multiply(beta, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), grad)), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [31522088.0, 2.7028567790985107, 2.487762212753296, 2.5760138034820557, 2.6348469257354736, 2.5198233127593994, 2.61375093460083], "accuracy": [0.09998679161071777, 0.09826971590518951, 0.09774138033390045, 0.09734513610601425, 0.09826971590518951, 0.09338264167308807, 0.1010434553027153], "val_loss": [2.7329165935516357, 2.650648593902588, 2.711606502532959, 2.615683078765869, 2.732018232345581, 2.642547607421875, 2.578096628189087], "val_accuracy": [0.09600000083446503, 0.10333333164453506, 0.10333333164453506, 0.10300000011920929, 0.10333333164453506, 0.10333333164453506, 0.0963333323597908]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 1, 5], [0, 1, 0, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [4], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 6, 4, 3, 4, 2, 2], [0, 0, 0, 3, 0, 0, 3, 4, 2, 0], [16, 99, 96, 99, 53, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 6, 3, 3, 2, 2, 1, 1, 0, 16, 8, 8, 5], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.multiply(sigma, grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 1], [0, 2, 2, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 2, 3, 0, 3, 3], [0, 2, 0, 3], [45, 16], [0, 1], [0], [0], [16], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [6, 3, 6, 6, 8, 1, 4, 1, 4, 2, 8, 3], [0, 0, 0, 3, 0, 0, 3, 1, 2, 4, 6], [16, 97, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 9, 5, 4, 2, 2, 1, 1, 1, 23, 12, 11, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), tf.math.add(tf.math.sqrt(tf.math.multiply(alpha, beta)), grad)), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}]