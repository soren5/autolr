[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8682857155799866, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2233831882476807, 1.8620272874832153, 1.3786031007766724, 1.0764518976211548, 0.9289736747741699, 0.8346956968307495, 0.7657074928283691, 0.7233139276504517, 0.680554211139679, 0.6504802107810974, 0.6360824704170227, 0.6082504987716675, 0.5881315469741821, 0.5720775723457336, 0.552837610244751, 0.5417638421058655, 0.5164998173713684, 0.5105388164520264, 0.4968062937259674, 0.4889737069606781, 0.48541826009750366, 0.47208938002586365, 0.465074747800827, 0.4616633355617523, 0.44697144627571106, 0.4383286237716675, 0.4262494444847107, 0.4236988425254822, 0.4101370871067047, 0.40152430534362793, 0.3997592628002167, 0.39422452449798584, 0.3758472204208374, 0.3734263479709625, 0.37379300594329834, 0.362146258354187, 0.36415112018585205, 0.35691511631011963, 0.35040217638015747, 0.3495391607284546, 0.343483567237854], "accuracy": [0.2779025137424469, 0.5044247508049011, 0.5752212405204773, 0.63096022605896, 0.6675472259521484, 0.6979262828826904, 0.7268524765968323, 0.7378153204917908, 0.750759482383728, 0.7611940503120422, 0.7689869403839111, 0.7734777331352234, 0.7882710099220276, 0.793422281742096, 0.7980451583862305, 0.8034605979919434, 0.8117818236351013, 0.8189142942428589, 0.819970965385437, 0.8272355198860168, 0.828820526599884, 0.8297450542449951, 0.8278959393501282, 0.8380662798881531, 0.8426892161369324, 0.8449346423149109, 0.8474441766738892, 0.8446704745292664, 0.852331280708313, 0.8511425256729126, 0.8562937378883362, 0.8569541573524475, 0.8663320541381836, 0.8693699836730957, 0.8643507957458496, 0.874389111995697, 0.8714832663536072, 0.8741249442100525, 0.8733324408531189, 0.8735966086387634, 0.8757099509239197], "val_loss": [2.040365695953369, 1.5179060697555542, 1.0537108182907104, 0.8451359868049622, 0.7505411505699158, 0.6951621174812317, 0.6512782573699951, 0.6146078109741211, 0.5886159539222717, 0.5743255019187927, 0.5504873394966125, 0.5349510312080383, 0.5219666361808777, 0.5081554651260376, 0.5042794346809387, 0.48918867111206055, 0.4745301902294159, 0.4661126732826233, 0.46150219440460205, 0.457501620054245, 0.45067089796066284, 0.44427499175071716, 0.4369718134403229, 0.43492013216018677, 0.42851415276527405, 0.4190581142902374, 0.4136958420276642, 0.4130047559738159, 0.4098430573940277, 0.4049452841281891, 0.3967183530330658, 0.3940879702568054, 0.3904617428779602, 0.3899538218975067, 0.3853864371776581, 0.3793458640575409, 0.37717774510383606, 0.37969154119491577, 0.37728437781333923, 0.37696459889411926, 0.37572214007377625], "val_accuracy": [0.5323333144187927, 0.6433333158493042, 0.6759999990463257, 0.6963333487510681, 0.7336666584014893, 0.7459999918937683, 0.753333330154419, 0.7756666541099548, 0.7776666879653931, 0.7846666574478149, 0.7953333258628845, 0.7993333339691162, 0.8106666803359985, 0.815666675567627, 0.812666654586792, 0.8213333487510681, 0.8306666612625122, 0.8293333053588867, 0.8339999914169312, 0.8353333473205566, 0.8326666951179504, 0.8429999947547913, 0.846666693687439, 0.843999981880188, 0.843999981880188, 0.8476666808128357, 0.8510000109672546, 0.8526666760444641, 0.8510000109672546, 0.8533333539962769, 0.8576666712760925, 0.8600000143051147, 0.8603333234786987, 0.8619999885559082, 0.8569999933242798, 0.8629999756813049, 0.859000027179718, 0.8616666793823242, 0.8606666922569275, 0.859333336353302, 0.8629999756813049]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 1], [0, 6], [0, 4], [0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [0, 3, 2, 3, 7, 7, 6, 6, 2, 3, 9, 6, 8, 0, 9], [0, 5, 5, 3, 6, 6, 0, 3, 1], [0, 80, 90, 80], [0, 1], [0], [1], [0]], "fitness": -0.8651428818702698, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(tf.math.multiply(grad, sigma), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.sqrt(grad))), tf.math.negative(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))), sigma), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2929089069366455, 2.186469793319702, 1.7570053339004517, 1.354780673980713, 1.1112948656082153, 0.9533156156539917, 0.8441178798675537, 0.8315079212188721, 0.7799094915390015, 0.7677639722824097, 0.7350206971168518, 0.701068103313446, 0.6693083047866821, 0.6451420783996582, 0.6280912160873413, 0.6035001873970032, 0.5921992063522339, 0.5624688267707825, 0.5669397115707397, 0.549149215221405, 0.5525479316711426, 0.5347464084625244, 0.5232105255126953, 0.5080897212028503, 0.4968871474266052, 0.49349063634872437, 0.4750138223171234, 0.46666595339775085, 0.4568632245063782, 0.43935707211494446, 0.4434799253940582, 0.44930148124694824, 0.434305876493454, 0.41799360513687134, 0.4182624816894531, 0.40629538893699646, 0.39438799023628235, 0.40970760583877563, 0.3817215859889984, 0.39004823565483093, 0.3798099160194397, 0.3811430037021637, 0.36544546484947205, 0.3702467978000641, 0.3615539073944092, 0.36134061217308044, 0.34778475761413574, 0.34030336141586304, 0.3403763473033905, 0.33186060190200806, 0.3305729925632477, 0.3246113359928131, 0.32094451785087585, 0.3114936053752899], "accuracy": [0.12917712330818176, 0.33020737767219543, 0.44062870740890503, 0.5476158857345581, 0.627129852771759, 0.6579051613807678, 0.685510516166687, 0.700700044631958, 0.700700044631958, 0.7123233675956726, 0.7214370369911194, 0.7318716049194336, 0.7412495017051697, 0.748249888420105, 0.7524765729904175, 0.7676661014556885, 0.7810064554214478, 0.7836481332778931, 0.7836481332778931, 0.785101056098938, 0.7868181467056274, 0.7927618622779846, 0.7957997918128967, 0.8014793395996094, 0.8115176558494568, 0.813498854637146, 0.8186501264572144, 0.8171972036361694, 0.8206313848495483, 0.8298771381378174, 0.8228767514228821, 0.8239334225654602, 0.8304054737091064, 0.8392550349235535, 0.8412362933158875, 0.8446704745292664, 0.8445383906364441, 0.841500461101532, 0.8533879518508911, 0.8535200357437134, 0.8558974862098694, 0.8520671129226685, 0.8598600029945374, 0.8539162874221802, 0.8553691506385803, 0.8647470474243164, 0.8672566413879395, 0.86553955078125, 0.8656716346740723, 0.8708229064941406, 0.8704266548156738, 0.8664641380310059, 0.8720116019248962, 0.8767666220664978], "val_loss": [2.245769739151001, 2.0121994018554688, 1.1375477313995361, 0.9637269973754883, 0.8043580651283264, 0.7528302669525146, 0.6841069459915161, 0.660826563835144, 0.646456778049469, 0.6735607385635376, 0.6088598370552063, 0.5696188807487488, 0.5627607703208923, 0.549211323261261, 0.5494002103805542, 0.5449521541595459, 0.5300514101982117, 0.5169908404350281, 0.514811635017395, 0.5144606232643127, 0.5137431025505066, 0.5056089162826538, 0.4959671199321747, 0.49073681235313416, 0.4938490688800812, 0.49309423565864563, 0.4860384166240692, 0.47143644094467163, 0.46800684928894043, 0.462195485830307, 0.44642046093940735, 0.44575586915016174, 0.43218836188316345, 0.42993229627609253, 0.41723722219467163, 0.41296643018722534, 0.4136146605014801, 0.4146130084991455, 0.4032477140426636, 0.4052179455757141, 0.4110168516635895, 0.4091305732727051, 0.4021649956703186, 0.3970675766468048, 0.3967905342578888, 0.3902929425239563, 0.3888930380344391, 0.4006614685058594, 0.40043625235557556, 0.41123831272125244, 0.422008752822876, 0.43356236815452576, 0.4293745458126068, 0.42565062642097473], "val_accuracy": [0.41600000858306885, 0.43566668033599854, 0.640666663646698, 0.6726666688919067, 0.7129999995231628, 0.7123333215713501, 0.7329999804496765, 0.7396666407585144, 0.749666690826416, 0.746999979019165, 0.7613333463668823, 0.7670000195503235, 0.7720000147819519, 0.777999997138977, 0.7806666493415833, 0.7820000052452087, 0.7900000214576721, 0.8040000200271606, 0.7950000166893005, 0.7976666688919067, 0.8059999942779541, 0.8096666932106018, 0.8153333067893982, 0.8146666884422302, 0.815666675567627, 0.8230000138282776, 0.824999988079071, 0.8233333230018616, 0.831333339214325, 0.8293333053588867, 0.8403333425521851, 0.8360000252723694, 0.843999981880188, 0.8476666808128357, 0.8476666808128357, 0.8519999980926514, 0.8500000238418579, 0.8516666889190674, 0.8533333539962769, 0.8546666502952576, 0.8546666502952576, 0.8586666584014893, 0.8603333234786987, 0.862333357334137, 0.8643333315849304, 0.8656666874885559, 0.8616666793823242, 0.862333357334137, 0.8679999709129333, 0.8643333315849304, 0.8610000014305115, 0.8569999933242798, 0.862666666507721, 0.8659999966621399]}, "mapping_values": [1, 10, 5, 5, 3, 4, 2, 2, 1, 24, 15, 9, 4, 2, 1, 1, 0], "tree_depth": 23}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8291428685188293, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5726687908172607, 0.8257281184196472, 0.6628547310829163, 0.6083022356033325, 0.559410810470581, 0.5239114165306091, 0.48945721983909607, 0.4594920873641968, 0.44997990131378174, 0.4414321184158325, 0.4116043448448181, 0.421751469373703, 0.4240710139274597, 0.43898919224739075, 0.42995402216911316, 0.42615318298339844, 0.4385126233100891, 0.43504297733306885, 0.46992164850234985], "accuracy": [0.4761590361595154, 0.7120591998100281, 0.752212405204773, 0.7810064554214478, 0.7901201844215393, 0.8009510040283203, 0.8257825970649719, 0.8296129703521729, 0.8314621448516846, 0.8416325449943542, 0.8467837572097778, 0.8426892161369324, 0.8446704745292664, 0.8535200357437134, 0.8511425256729126, 0.8551049828529358, 0.848368763923645, 0.8525954484939575, 0.8411042094230652], "val_loss": [0.8432180881500244, 0.5801271796226501, 0.5109439492225647, 0.48205769062042236, 0.4692302346229553, 0.4610566794872284, 0.42410698533058167, 0.4295520484447479, 0.444305419921875, 0.43560004234313965, 0.4486983120441437, 0.43000873923301697, 0.4625066816806793, 0.4982511103153229, 0.4482903778553009, 0.47582146525382996, 0.48470067977905273, 0.5055391192436218, 0.5432011485099792], "val_accuracy": [0.731333315372467, 0.7906666398048401, 0.8029999732971191, 0.8130000233650208, 0.8273333311080933, 0.8299999833106995, 0.8429999947547913, 0.847000002861023, 0.8516666889190674, 0.8460000157356262, 0.8533333539962769, 0.8533333539962769, 0.8486666679382324, 0.859666645526886, 0.8553333282470703, 0.8553333282470703, 0.8553333282470703, 0.8496666550636292, 0.8523333072662354]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [3, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [4, 3, 3, 6, 8, 1, 4, 6, 2, 2, 8], [0, 4, 3, 4, 1, 0, 3, 1, 4, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 1, 2, 1, 1, 1, 21, 11, 10, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(grad, sigma), grad)), tf.math.divide_no_nan(alpha, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(grad), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 9, 8, 1, 4, 1, 4, 2, 8], [0, 0, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 10, 6, 4, 2, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3032572269439697, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 6, 0, 3], [1, 2, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 8, 3, 0, 3, 5], [0, 2, 0, 3], [7, 16], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 6, 4, 2, 1, 2, 1, 1, 0, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.negative(alpha), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.negative(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 1], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [6, 8, 3, 6, 6, 0, 4, 1, 4, 1, 8, 3, 6, 1, 5, 3, 3, 0], [0, 0, 0, 3, 4, 0, 1, 1, 4, 0, 5, 3, 3, 2], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 6, 3, 3, 2, 2, 1, 1, 1, 32, 18, 14, 5], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.negative(tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, tf.math.subtract(grad, tf.constant(1.0, shape=shape, dtype=tf.float32))))), alpha), tf.math.sqrt(tf.math.multiply(alpha, grad))))), tf.math.divide_no_nan(tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.multiply(sigma, tf.math.multiply(tf.math.negative(sigma), beta))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}]