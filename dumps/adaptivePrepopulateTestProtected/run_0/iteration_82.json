[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8551428318023682, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2930939197540283, 2.188349962234497, 1.7646267414093018, 1.3395934104919434, 1.0675877332687378, 0.9265826940536499, 0.835879921913147, 0.80462646484375, 0.7566419839859009, 0.7476310133934021, 0.6955023407936096, 0.6832895874977112, 0.6567599773406982, 0.6401577591896057, 0.6167573928833008, 0.6144708395004272, 0.5890086889266968, 0.588650643825531, 0.5844729542732239, 0.5694341063499451, 0.5594942569732666, 0.5360924005508423, 0.5363247394561768, 0.5167112946510315, 0.5117219686508179, 0.5077489018440247, 0.48800456523895264, 0.49344584345817566, 0.4743463695049286, 0.47205451130867004, 0.4599836468696594, 0.4538117051124573, 0.4334987699985504, 0.42769932746887207, 0.4228745102882385, 0.409656822681427, 0.4035852551460266, 0.3957444131374359, 0.39274558424949646, 0.39700043201446533, 0.38397374749183655, 0.3786008059978485, 0.36976930499076843, 0.3682962656021118, 0.3579952120780945, 0.3470239043235779, 0.34983813762664795, 0.3346773087978363, 0.32032325863838196, 0.3279564082622528, 0.317446231842041, 0.32539665699005127, 0.3295152187347412, 0.30790573358535767], "accuracy": [0.13538502156734467, 0.3337736129760742, 0.44049662351608276, 0.5493329763412476, 0.6399418711662292, 0.6670188903808594, 0.6927750706672668, 0.7078325152397156, 0.7053229212760925, 0.71100252866745, 0.7372870445251465, 0.7354378700256348, 0.7559106945991516, 0.7602694630622864, 0.76106196641922, 0.767930269241333, 0.7774402499198914, 0.77677983045578, 0.7848368883132935, 0.7847048044204712, 0.7844406366348267, 0.7943468689918518, 0.8033285140991211, 0.8087438941001892, 0.8043851256370544, 0.8059701323509216, 0.819970965385437, 0.8226125836372375, 0.8255184292793274, 0.8214238286018372, 0.829216718673706, 0.8264430165290833, 0.8325188159942627, 0.8417646288871765, 0.8436138033866882, 0.8469158411026001, 0.8457271456718445, 0.8491612672805786, 0.8548408150672913, 0.8470479249954224, 0.8570862412452698, 0.8582749962806702, 0.8599920868873596, 0.8585391640663147, 0.8614450097084045, 0.8660678863525391, 0.8642187118530273, 0.8679170608520508, 0.8745211958885193, 0.8796724081039429, 0.8765024542808533, 0.8747853636741638, 0.8726720213890076, 0.8828424215316772], "val_loss": [2.2460339069366455, 2.020547866821289, 1.1486709117889404, 0.8882815837860107, 0.7848323583602905, 0.7173990607261658, 0.6746331453323364, 0.6561428904533386, 0.6580042839050293, 0.629568874835968, 0.6012188196182251, 0.5871323347091675, 0.5643497705459595, 0.5605137348175049, 0.5426170825958252, 0.5302505493164062, 0.5389515161514282, 0.5314729809761047, 0.5179657936096191, 0.508232831954956, 0.5057068467140198, 0.4993860721588135, 0.49312132596969604, 0.4749613106250763, 0.4761870801448822, 0.4620000123977661, 0.47759148478507996, 0.4567255973815918, 0.4460632801055908, 0.4353778064250946, 0.43866637349128723, 0.43924403190612793, 0.43318718671798706, 0.4239831268787384, 0.4167552888393402, 0.4053950309753418, 0.4064837098121643, 0.41428205370903015, 0.411790132522583, 0.41626375913619995, 0.42660269141197205, 0.41044652462005615, 0.42032063007354736, 0.41851505637168884, 0.4259635806083679, 0.4236734211444855, 0.42199426889419556, 0.4053198993206024, 0.40474632382392883, 0.4148200750350952, 0.4255734384059906, 0.42263898253440857, 0.4244484007358551, 0.42534923553466797], "val_accuracy": [0.41499999165534973, 0.4259999990463257, 0.6389999985694885, 0.6853333115577698, 0.7229999899864197, 0.7429999709129333, 0.7540000081062317, 0.7593333125114441, 0.7413333058357239, 0.7570000290870667, 0.7636666893959045, 0.7643333077430725, 0.7816666960716248, 0.7760000228881836, 0.7823333144187927, 0.7906666398048401, 0.7940000295639038, 0.7910000085830688, 0.8040000200271606, 0.8083333373069763, 0.8080000281333923, 0.8153333067893982, 0.8149999976158142, 0.8203333616256714, 0.8366666436195374, 0.8356666564941406, 0.8346666693687439, 0.8413333296775818, 0.8389999866485596, 0.8460000157356262, 0.8403333425521851, 0.8453333377838135, 0.8479999899864197, 0.8476666808128357, 0.8543333411216736, 0.8569999933242798, 0.8573333621025085, 0.8569999933242798, 0.8556666374206543, 0.8613333106040955, 0.8583333492279053, 0.8629999756813049, 0.8583333492279053, 0.8619999885559082, 0.8613333106040955, 0.8613333106040955, 0.8643333315849304, 0.871666669845581, 0.8763333559036255, 0.8706666827201843, 0.871999979019165, 0.8686666488647461, 0.8679999709129333, 0.8700000047683716]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8528571724891663, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222463846206665, 1.8619749546051025, 1.4006712436676025, 1.0944883823394775, 0.9348442554473877, 0.8290032744407654, 0.7717798948287964, 0.7256714701652527, 0.6912676095962524, 0.6527895331382751, 0.6356383562088013, 0.615015983581543, 0.5965532064437866, 0.5778842568397522, 0.5633898377418518, 0.5387120842933655, 0.5412781238555908, 0.5203850865364075, 0.5029227137565613, 0.49434176087379456, 0.48794642090797424, 0.4773643910884857, 0.47951728105545044, 0.4638943076133728, 0.45622605085372925, 0.4461042582988739, 0.43539053201675415, 0.4345541000366211, 0.4197135865688324, 0.4104025959968567, 0.41682204604148865, 0.39970430731773376, 0.4033946096897125, 0.3920629620552063, 0.3912438452243805, 0.38787174224853516, 0.3768545091152191, 0.36554667353630066, 0.3659942150115967, 0.3598192036151886, 0.35242336988449097, 0.34640762209892273, 0.34628304839134216, 0.33940011262893677], "accuracy": [0.26984545588493347, 0.4850085973739624, 0.5653150081634521, 0.6192048788070679, 0.6650376319885254, 0.7059833407402039, 0.7217012047767639, 0.7380794882774353, 0.7458723783493042, 0.757099449634552, 0.7627789974212646, 0.772288978099823, 0.7854973077774048, 0.785629391670227, 0.7959318161010742, 0.800290584564209, 0.802271842956543, 0.8100647330284119, 0.813498854637146, 0.8169330358505249, 0.8235371708869934, 0.8285563588142395, 0.8256505131721497, 0.8338396549224854, 0.8372738361358643, 0.8376700282096863, 0.8428213000297546, 0.8408400416374207, 0.8496896028518677, 0.8555012345314026, 0.8482366800308228, 0.854708731174469, 0.8545766472816467, 0.8621054291725159, 0.8541803956031799, 0.8614450097084045, 0.8659358024597168, 0.86553955078125, 0.8684453964233398, 0.8689737319946289, 0.8687095642089844, 0.8762382864952087, 0.8739928603172302, 0.8745211958885193], "val_loss": [2.041161298751831, 1.523740291595459, 1.0440597534179688, 0.8360142707824707, 0.7453484535217285, 0.6883313059806824, 0.640591561794281, 0.6141031384468079, 0.5830415487289429, 0.5598559379577637, 0.5427125096321106, 0.5296830534934998, 0.5119802951812744, 0.5099362730979919, 0.49192652106285095, 0.4782390892505646, 0.47446078062057495, 0.45736831426620483, 0.4507489502429962, 0.441579669713974, 0.44663214683532715, 0.43242961168289185, 0.4319439232349396, 0.42118266224861145, 0.4226831793785095, 0.41619670391082764, 0.41088640689849854, 0.40525591373443604, 0.39609602093696594, 0.4036489725112915, 0.39478376507759094, 0.389067143201828, 0.38774406909942627, 0.38644689321517944, 0.38382312655448914, 0.37620946764945984, 0.373393714427948, 0.37285396456718445, 0.37043604254722595, 0.37239977717399597, 0.36972755193710327, 0.36547526717185974, 0.36525774002075195, 0.3615258038043976], "val_accuracy": [0.5120000243186951, 0.6416666507720947, 0.6919999718666077, 0.7106666564941406, 0.7350000143051147, 0.7453333139419556, 0.7646666765213013, 0.7713333368301392, 0.7863333225250244, 0.7926666736602783, 0.8016666769981384, 0.8016666769981384, 0.8096666932106018, 0.8149999976158142, 0.8163333535194397, 0.82833331823349, 0.8273333311080933, 0.8360000252723694, 0.8326666951179504, 0.8413333296775818, 0.8429999947547913, 0.8429999947547913, 0.8370000123977661, 0.8519999980926514, 0.8513333201408386, 0.8496666550636292, 0.8476666808128357, 0.8489999771118164, 0.8586666584014893, 0.8533333539962769, 0.8569999933242798, 0.8576666712760925, 0.8539999723434448, 0.8613333106040955, 0.8606666922569275, 0.862666666507721, 0.862333357334137, 0.859666645526886, 0.8669999837875366, 0.8636666536331177, 0.8640000224113464, 0.8640000224113464, 0.8636666536331177, 0.8663333058357239]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8317142724990845, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4836417436599731, 0.7816957235336304, 0.63991779088974, 0.603854775428772, 0.5584623217582703, 0.5264599323272705, 0.5264896750450134, 0.5286619067192078, 0.4864256680011749, 0.5091827511787415], "accuracy": [0.4707436263561249, 0.7292299270629883, 0.765949010848999, 0.7786290049552917, 0.8017435073852539, 0.8064984679222107, 0.8120459914207458, 0.8121780753135681, 0.8186501264572144, 0.8265751004219055], "val_loss": [0.7508742809295654, 0.6227325201034546, 0.5387380123138428, 0.5252898931503296, 0.49866580963134766, 0.5013529658317566, 0.4907110929489136, 0.5091097950935364, 0.502094566822052, 0.5022427439689636], "val_accuracy": [0.7326666712760925, 0.7736666798591614, 0.8140000104904175, 0.8066666722297668, 0.8296666741371155, 0.8259999752044678, 0.8209999799728394, 0.8206666707992554, 0.8273333311080933, 0.8289999961853027]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 1, 3, 1, 2], [2, 2, 0, 2, 0], [44, 99, 27], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [2, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [2], [0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 4, 3, 6, 8, 1, 4, 1, 4, 2, 8], [1, 7, 1, 6, 0, 3, 2, 1, 4, 4], [0, 93]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 0, 8, 4, 4, 2, 2, 1, 1, 0, 21, 11, 10, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.pow(tf.math.multiply(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(alpha, grad))), tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(sigma, beta)))), alpha), tf.math.add(tf.math.sqrt(grad), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 1, 3], [0, 1, 2, 2, 0], [39, 62], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1], [0, 6, 3, 0, 3, 8], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [6, 3, 3, 6, 8, 1, 4, 4, 5, 2, 9], [0, 0, 0, 3, 0, 0, 1, 1, 2, 0], [16, 30, 96, 25, 61, 23]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 10, 6, 4, 2, 2, 1, 1, 1, 17, 9, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.subtract(tf.math.multiply(grad, grad), tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.pow(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), alpha), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1], [0, 1, 3, 1, 3], [0, 3, 1, 2, 0], [39, 38], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 8, 7, 0, 5, 5], [0, 2, 0, 3], [0], [0, 0], [0, 9], [0], [0], [0, 1], [0], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 2, 1, 1, 1, 8, 6, 2, 1, 2, 2, 0, 1, 2, 1, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.add(tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.math.square(beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3104934692382812, 2.309943675994873, 2.3088126182556152, 2.310173749923706, 2.3101890087127686, 2.309176445007324], "accuracy": [0.09285431355237961, 0.09259014576673508, 0.0956280529499054, 0.08968432247638702, 0.08809932321310043, 0.09655263274908066], "val_loss": [2.308609962463379, 2.308609962463379, 2.308609962463379, 2.308609962463379, 2.308609962463379, 2.308609962463379], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 0, 3, 1, 3, 6, 5], [0, 0, 0, 2, 2, 2], [39, 39, 16], [0, 1], [0], [0], [0], [0, 1], [0], [1], [99], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 0, 4, 1, 9, 9, 8, 6, 7, 5, 8, 9], [0, 4, 0, 3, 0, 0, 3, 1, 2, 0, 3], [0, 40, 99, 93, 87, 89, 15, 86]], "fitness": -0.08971428871154785, "mapping_values": [1, 9, 5, 4, 3, 2, 1, 1, 1, 2, 1, 1, 0, 33, 22, 11, 8], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.add(tf.math.sqrt(sigma), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.pow(sigma, tf.math.subtract(alpha, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))))), beta), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.math.sqrt(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))), sigma)))", "other_info": {"loss": [2.310276508331299, 2.310945749282837, 2.3097376823425293, 2.3094682693481445, 2.3090813159942627, 2.3100979328155518], "accuracy": [0.0952318087220192, 0.08994849026203156, 0.09826971590518951, 0.09206181764602661, 0.09338264167308807, 0.09100515395402908], "val_loss": [2.308223247528076, 2.308223247528076, 2.308223247528076, 2.308223247528076, 2.308223247528076, 2.308223247528076], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}}]