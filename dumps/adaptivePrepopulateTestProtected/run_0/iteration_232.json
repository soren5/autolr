[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8805714249610901, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585988998413, 1.8659464120864868, 1.3939106464385986, 1.0966308116912842, 0.9349022507667542, 0.8419743776321411, 0.7695197463035583, 0.729751467704773, 0.6897091865539551, 0.6576535105705261, 0.6359990835189819, 0.6094067096710205, 0.589935839176178, 0.5596274733543396, 0.5528120398521423, 0.5393894910812378, 0.5281672477722168, 0.5202223062515259, 0.5057564377784729, 0.5040625333786011, 0.48261573910713196, 0.46983885765075684, 0.4574008584022522, 0.454408198595047, 0.4424269199371338, 0.42842501401901245, 0.42894208431243896, 0.42616719007492065, 0.41881483793258667, 0.4155913293361664, 0.4008829891681671, 0.39691162109375, 0.38997870683670044, 0.38351768255233765, 0.37681254744529724, 0.3729562759399414, 0.36148902773857117, 0.362969309091568, 0.3563940227031708, 0.3505782186985016, 0.35241496562957764, 0.34010687470436096, 0.3387279510498047, 0.3343537747859955, 0.3285624086856842, 0.32427793741226196, 0.319965660572052, 0.3122166097164154, 0.30889007449150085, 0.3045063316822052], "accuracy": [0.2694492042064667, 0.48870691657066345, 0.568220853805542, 0.6156386137008667, 0.6696605682373047, 0.6963412761688232, 0.7223616242408752, 0.7312111854553223, 0.750759482383728, 0.7600052952766418, 0.7696473598480225, 0.7761194109916687, 0.787082314491272, 0.7985734939575195, 0.7980451583862305, 0.8045172095298767, 0.8121780753135681, 0.8125742673873901, 0.8178576231002808, 0.8191784620285034, 0.8251221776008606, 0.8322546482086182, 0.8356888294219971, 0.8359529972076416, 0.8389908671379089, 0.846387505531311, 0.8451988101005554, 0.8454629778862, 0.848368763923645, 0.8531237840652466, 0.8598600029945374, 0.854708731174469, 0.8605204224586487, 0.8609166741371155, 0.86553955078125, 0.8639545440673828, 0.8689737319946289, 0.8706908226013184, 0.873860776424408, 0.872407853603363, 0.8710870146751404, 0.8776912093162537, 0.8792761564254761, 0.8824461698532104, 0.882710337638855, 0.8811253309249878, 0.887597382068634, 0.887597382068634, 0.8906353116035461, 0.8911636471748352], "val_loss": [2.0369274616241455, 1.5092171430587769, 1.0378726720809937, 0.8372371196746826, 0.7430018186569214, 0.693951427936554, 0.6459794044494629, 0.6065753698348999, 0.5836796760559082, 0.5591391324996948, 0.5475665926933289, 0.5286199450492859, 0.5111508965492249, 0.49807658791542053, 0.4888598918914795, 0.4807276725769043, 0.4732670187950134, 0.46291399002075195, 0.4651739001274109, 0.44972753524780273, 0.44051307439804077, 0.4300120174884796, 0.42833927273750305, 0.4226953983306885, 0.42076465487480164, 0.41008231043815613, 0.40701472759246826, 0.4087570011615753, 0.3987274467945099, 0.39754143357276917, 0.3908216655254364, 0.39351579546928406, 0.3876643180847168, 0.3835429251194, 0.3747929334640503, 0.37449854612350464, 0.3731365501880646, 0.3678072988986969, 0.3718084394931793, 0.3737613260746002, 0.36592888832092285, 0.3612542748451233, 0.3634853661060333, 0.3576800525188446, 0.35225361585617065, 0.35540124773979187, 0.35645702481269836, 0.3527815639972687, 0.3493586778640747, 0.349461168050766], "val_accuracy": [0.5453333258628845, 0.6666666865348816, 0.6899999976158142, 0.7136666774749756, 0.737666666507721, 0.7523333430290222, 0.765666663646698, 0.7816666960716248, 0.7886666655540466, 0.7976666688919067, 0.7953333258628845, 0.8090000152587891, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8309999704360962, 0.8243333101272583, 0.843666672706604, 0.8333333134651184, 0.840666651725769, 0.846666693687439, 0.8569999933242798, 0.8533333539962769, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.8683333396911621, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8763333559036255, 0.878000020980835, 0.8756666779518127, 0.878000020980835, 0.8756666779518127, 0.8756666779518127, 0.8790000081062317, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539, 0.8833333253860474, 0.8796666860580444, 0.8826666474342346, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8600000143051147, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224104404449463, 1.8676260709762573, 1.4020556211471558, 1.0802887678146362, 0.9317737817764282, 0.8326297998428345, 0.7772048115730286, 0.7227890491485596, 0.6884044408798218, 0.6571663618087769, 0.6228086352348328, 0.6140598654747009, 0.5872920155525208, 0.5785395503044128, 0.5630987882614136, 0.5417064428329468, 0.5391235947608948, 0.5241407752037048, 0.510588526725769, 0.48891109228134155, 0.4874081611633301, 0.4787457287311554, 0.47281163930892944, 0.461280882358551, 0.4547799527645111, 0.4479972720146179, 0.4410088062286377, 0.4264240264892578, 0.42276501655578613, 0.42268845438957214, 0.4148947298526764, 0.40493619441986084, 0.3916378617286682, 0.38924479484558105, 0.391950786113739, 0.37591826915740967, 0.3685217499732971, 0.36415600776672363, 0.3620293438434601, 0.36766383051872253, 0.35076045989990234, 0.34781089425086975, 0.34981781244277954, 0.34933772683143616, 0.3375946283340454, 0.32400599122047424, 0.32872313261032104, 0.32405778765678406, 0.3210155963897705, 0.3105452358722687, 0.3068736791610718, 0.3084838390350342, 0.29880034923553467, 0.3006877899169922, 0.28809040784835815, 0.28686419129371643, 0.2815117835998535], "accuracy": [0.27816668152809143, 0.49412229657173157, 0.5609562993049622, 0.6267336010932922, 0.6660943031311035, 0.7037379741668701, 0.7217012047767639, 0.7376832365989685, 0.7481178045272827, 0.76106196641922, 0.7740060687065125, 0.7781006693840027, 0.7931581139564514, 0.7915731072425842, 0.7977809906005859, 0.8080834746360779, 0.8086118102073669, 0.8149517774581909, 0.824329674243927, 0.8267071843147278, 0.8267071843147278, 0.8341038227081299, 0.8384625315666199, 0.8391229510307312, 0.8413683772087097, 0.8433496356010437, 0.844010055065155, 0.8508783578872681, 0.854708731174469, 0.8543124794960022, 0.8541803956031799, 0.8558974862098694, 0.86118084192276, 0.8634262084960938, 0.863029956817627, 0.8654074668884277, 0.8730682730674744, 0.8722757697105408, 0.8737286925315857, 0.8708229064941406, 0.8768987059593201, 0.8812574148178101, 0.8759741187095642, 0.8771628737449646, 0.8848236799240112, 0.8861445188522339, 0.8840311765670776, 0.8860124349594116, 0.8882578015327454, 0.8883898854255676, 0.8893144726753235, 0.8932769894599915, 0.8926165699958801, 0.8926165699958801, 0.8976356983184814, 0.8967111110687256, 0.901862382888794], "val_loss": [2.0363333225250244, 1.5065680742263794, 1.0304267406463623, 0.8178557753562927, 0.7311925292015076, 0.6794758439064026, 0.6346878409385681, 0.6003884077072144, 0.5768890976905823, 0.5571199059486389, 0.5305284261703491, 0.515792965888977, 0.5032017230987549, 0.4975700378417969, 0.4799351394176483, 0.47424212098121643, 0.46603459119796753, 0.46136873960494995, 0.4507119059562683, 0.44403600692749023, 0.43128544092178345, 0.43303272128105164, 0.42733708024024963, 0.4177604913711548, 0.413796603679657, 0.40858006477355957, 0.40836599469184875, 0.4028524160385132, 0.40083521604537964, 0.3988892436027527, 0.39265063405036926, 0.3892752230167389, 0.38466691970825195, 0.38641348481178284, 0.37713733315467834, 0.3776180148124695, 0.37447240948677063, 0.37150776386260986, 0.3702258765697479, 0.36503544449806213, 0.3615178167819977, 0.3668336272239685, 0.36100059747695923, 0.36106663942337036, 0.35801962018013, 0.35637691617012024, 0.35175397992134094, 0.35000723600387573, 0.3550747334957123, 0.3479883074760437, 0.35465821623802185, 0.34799298644065857, 0.34154564142227173, 0.34221330285072327, 0.34598469734191895, 0.3487837016582489, 0.3427274525165558], "val_accuracy": [0.5716666579246521, 0.6683333516120911, 0.6923333406448364, 0.7139999866485596, 0.7333333492279053, 0.7536666393280029, 0.7649999856948853, 0.7776666879653931, 0.7910000085830688, 0.7886666655540466, 0.8086666464805603, 0.8173333406448364, 0.8143333196640015, 0.8166666626930237, 0.8320000171661377, 0.831333339214325, 0.8336666822433472, 0.8339999914169312, 0.8413333296775818, 0.8373333215713501, 0.846666693687439, 0.8410000205039978, 0.8500000238418579, 0.8496666550636292, 0.8500000238418579, 0.8539999723434448, 0.8529999852180481, 0.8486666679382324, 0.8550000190734863, 0.8543333411216736, 0.8560000061988831, 0.8539999723434448, 0.862666666507721, 0.8643333315849304, 0.8650000095367432, 0.8616666793823242, 0.8643333315849304, 0.8653333187103271, 0.8646666407585144, 0.8669999837875366, 0.8663333058357239, 0.8650000095367432, 0.8700000047683716, 0.8683333396911621, 0.8683333396911621, 0.8703333139419556, 0.8669999837875366, 0.8693333268165588, 0.8690000176429749, 0.8730000257492065, 0.8696666955947876, 0.8733333349227905, 0.8723333477973938, 0.8726666569709778, 0.8713333606719971, 0.8690000176429749, 0.8713333606719971]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8500000238418579, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293126106262207, 2.1905596256256104, 1.773407220840454, 1.355254888534546, 1.0906327962875366, 0.933452844619751, 0.8638622760772705, 0.8469923138618469, 0.7672927975654602, 0.7561030387878418, 0.7097479701042175, 0.6827601790428162, 0.6569914221763611, 0.6468669772148132, 0.6107483506202698, 0.6012970805168152, 0.5950618386268616, 0.5719800591468811, 0.571090042591095, 0.5529059767723083, 0.5384340286254883, 0.5437622666358948, 0.5277017951011658, 0.5116932392120361, 0.5144442915916443, 0.4992346465587616, 0.4797850251197815, 0.4843269884586334, 0.4683276414871216, 0.4612048864364624, 0.46813705563545227, 0.4441039562225342, 0.45022666454315186, 0.4342401623725891, 0.4311220645904541, 0.4261738657951355, 0.4191000461578369, 0.409013569355011, 0.4070322811603546, 0.39789360761642456, 0.38994982838630676, 0.39063432812690735, 0.38863298296928406, 0.3746004104614258], "accuracy": [0.12930920720100403, 0.3327169418334961, 0.4365341365337372, 0.5354642868041992, 0.6325452327728271, 0.672698438167572, 0.6826046705245972, 0.6927750706672668, 0.7045304179191589, 0.7086250185966492, 0.7320036888122559, 0.7353057861328125, 0.7433628439903259, 0.7485140562057495, 0.7544577717781067, 0.7692511081695557, 0.7691190242767334, 0.7812706232070923, 0.7803460359573364, 0.7839123010635376, 0.7829877138137817, 0.7817989587783813, 0.7952714562416077, 0.7959318161010742, 0.7976489067077637, 0.8057059645652771, 0.8092722296714783, 0.8146876096725464, 0.8162726163864136, 0.8202351331710815, 0.8181217908859253, 0.8284242749214172, 0.8273676037788391, 0.8297450542449951, 0.8301413059234619, 0.8335754871368408, 0.8387266993522644, 0.8401796221733093, 0.8441421389579773, 0.8466516733169556, 0.8496896028518677, 0.8514066934585571, 0.8481045961380005, 0.8562937378883362], "val_loss": [2.2470598220825195, 2.0218915939331055, 1.1440294981002808, 0.8738964796066284, 0.7495847940444946, 0.7213047742843628, 0.6828123331069946, 0.6405022740364075, 0.6419424414634705, 0.6159312129020691, 0.5760129690170288, 0.5583255887031555, 0.5396895408630371, 0.531877875328064, 0.5189846754074097, 0.5218607187271118, 0.5088130831718445, 0.5028819441795349, 0.5064004063606262, 0.5011870265007019, 0.49563542008399963, 0.49457842111587524, 0.4810989201068878, 0.47548338770866394, 0.47685375809669495, 0.47615310549736023, 0.46968215703964233, 0.45768022537231445, 0.45160749554634094, 0.4532449543476105, 0.4544806182384491, 0.4504929482936859, 0.4402327537536621, 0.4457690417766571, 0.4443945586681366, 0.4334765672683716, 0.43120506405830383, 0.4320875108242035, 0.43074339628219604, 0.42502397298812866, 0.4166422486305237, 0.43648386001586914, 0.4313133955001831, 0.42169710993766785], "val_accuracy": [0.41966667771339417, 0.4480000138282776, 0.6526666879653931, 0.6963333487510681, 0.7286666631698608, 0.7406666874885559, 0.7456666827201843, 0.7620000243186951, 0.7543333172798157, 0.762333333492279, 0.7799999713897705, 0.7856666445732117, 0.7919999957084656, 0.7950000166893005, 0.8033333420753479, 0.8013333082199097, 0.8103333115577698, 0.8143333196640015, 0.8083333373069763, 0.8080000281333923, 0.8133333325386047, 0.8223333358764648, 0.8243333101272583, 0.8236666917800903, 0.8259999752044678, 0.8259999752044678, 0.8336666822433472, 0.8360000252723694, 0.843999981880188, 0.8420000076293945, 0.8410000205039978, 0.847000002861023, 0.8496666550636292, 0.8460000157356262, 0.8506666421890259, 0.8573333621025085, 0.8553333282470703, 0.8543333411216736, 0.8633333444595337, 0.8546666502952576, 0.8569999933242798, 0.8539999723434448, 0.8519999980926514, 0.8586666584014893]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.828000009059906, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.618075966835022, 0.938765823841095, 0.7292850613594055, 0.6675654649734497, 0.5945056676864624, 0.5732483863830566, 0.5674058198928833, 0.5378310680389404, 0.5039086937904358, 0.5109935402870178, 0.5062255859375, 0.4956604540348053, 0.48803868889808655, 0.5085098147392273, 0.49525853991508484, 0.5317605137825012], "accuracy": [0.46083739399909973, 0.6823405027389526, 0.7380794882774353, 0.7528728246688843, 0.7847048044204712, 0.793950617313385, 0.7903843522071838, 0.8037247657775879, 0.813498854637146, 0.8164047002792358, 0.8158763647079468, 0.8162726163864136, 0.8224804997444153, 0.8241975903511047, 0.8325188159942627, 0.8197067975997925], "val_loss": [0.9526814818382263, 0.6377605199813843, 0.5638697147369385, 0.5150542855262756, 0.4934134781360626, 0.5063348412513733, 0.5046879649162292, 0.5098881721496582, 0.48228031396865845, 0.5173642635345459, 0.4996633231639862, 0.4996529221534729, 0.5679488778114319, 0.5630805492401123, 0.5337157249450684, 0.5500842928886414], "val_accuracy": [0.6736666560173035, 0.7636666893959045, 0.7993333339691162, 0.8153333067893982, 0.8196666836738586, 0.8263333439826965, 0.8209999799728394, 0.8326666951179504, 0.8320000171661377, 0.8333333134651184, 0.8456666469573975, 0.8263333439826965, 0.8289999961853027, 0.8259999752044678, 0.8396666646003723, 0.8346666693687439]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1], [0, 2, 3, 6, 3, 3, 5, 1], [0, 1, 0, 2, 0, 1, 3], [15, 39, 14], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 2, 5], [0, 2, 0, 3], [16, 24], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 2, 1, 4, 1, 4, 2, 2, 7], [0, 0, 4, 3, 0, 4, 3, 1, 2, 0, 7, 0, 6], [16, 70, 96, 99, 7, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 8, 7, 3, 6, 3, 3, 2, 2, 1, 1, 1, 25, 12, 13, 5], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.multiply(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.math.subtract(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma)), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma))), alpha)), tf.math.add(tf.math.add(beta, tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))), grad)", "other_info": {"loss": [41255632896.0, 47541993472.0, 47541997568.0, 47541993472.0, 47541989376.0, 47541997568.0], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [47458430976.0, 47458430976.0, 47458430976.0, 47458430976.0, 47458430976.0, 47458430976.0], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 2], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [3, 2, 3, 0, 3, 5, 8], [0, 2, 0, 3, 4], [16, 39], [0, 1], [0], [4], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 2, 1, 8, 1, 4, 1, 4, 2, 2], [0, 0, 0, 3, 0, 0, 2, 1, 2, 0], [16, 8, 96, 99, 43, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 12, 7, 5, 2, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.square(grad)), tf.math.sqrt(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303514242172241, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [8, 2, 3, 4, 3], [0, 0, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2, 4, 0, 9, 6], [5, 0, 2, 0, 3, 1, 0, 3], [0, 27, 16, 99], [0, 1], [0], [0], [99], [1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [2, 0, 0, 3, 0, 0, 3, 1, 2, 0], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 3, 20, 12, 8, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.sqrt(beta), tf.math.add(tf.math.pow(tf.math.negative(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad))), alpha), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 0, 0, 2], [39, 39, 48], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [0], [1], [0], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [0]], "fitness": -0.08971428871154785, "mapping_values": [1, 2, 1, 1, 1, 7, 4, 3, 2, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.309661865234375, 2.308239459991455, 2.308899164199829, 2.310678720474243, 2.311969041824341, 2.3114280700683594], "accuracy": [0.09774138033390045, 0.09628847241401672, 0.0944393053650856, 0.0882314071059227, 0.0886276587843895, 0.08928807079792023], "val_loss": [2.308948516845703, 2.308948516845703, 2.308948516845703, 2.308948516845703, 2.308948516845703, 2.308948516845703], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}]