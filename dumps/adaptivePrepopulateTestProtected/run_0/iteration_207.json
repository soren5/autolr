[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8805714249610901, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585988998413, 1.8659464120864868, 1.3939106464385986, 1.0966308116912842, 0.9349022507667542, 0.8419743776321411, 0.7695197463035583, 0.729751467704773, 0.6897091865539551, 0.6576535105705261, 0.6359990835189819, 0.6094067096710205, 0.589935839176178, 0.5596274733543396, 0.5528120398521423, 0.5393894910812378, 0.5281672477722168, 0.5202223062515259, 0.5057564377784729, 0.5040625333786011, 0.48261573910713196, 0.46983885765075684, 0.4574008584022522, 0.454408198595047, 0.4424269199371338, 0.42842501401901245, 0.42894208431243896, 0.42616719007492065, 0.41881483793258667, 0.4155913293361664, 0.4008829891681671, 0.39691162109375, 0.38997870683670044, 0.38351768255233765, 0.37681254744529724, 0.3729562759399414, 0.36148902773857117, 0.362969309091568, 0.3563940227031708, 0.3505782186985016, 0.35241496562957764, 0.34010687470436096, 0.3387279510498047, 0.3343537747859955, 0.3285624086856842, 0.32427793741226196, 0.319965660572052, 0.3122166097164154, 0.30889007449150085, 0.3045063316822052], "accuracy": [0.2694492042064667, 0.48870691657066345, 0.568220853805542, 0.6156386137008667, 0.6696605682373047, 0.6963412761688232, 0.7223616242408752, 0.7312111854553223, 0.750759482383728, 0.7600052952766418, 0.7696473598480225, 0.7761194109916687, 0.787082314491272, 0.7985734939575195, 0.7980451583862305, 0.8045172095298767, 0.8121780753135681, 0.8125742673873901, 0.8178576231002808, 0.8191784620285034, 0.8251221776008606, 0.8322546482086182, 0.8356888294219971, 0.8359529972076416, 0.8389908671379089, 0.846387505531311, 0.8451988101005554, 0.8454629778862, 0.848368763923645, 0.8531237840652466, 0.8598600029945374, 0.854708731174469, 0.8605204224586487, 0.8609166741371155, 0.86553955078125, 0.8639545440673828, 0.8689737319946289, 0.8706908226013184, 0.873860776424408, 0.872407853603363, 0.8710870146751404, 0.8776912093162537, 0.8792761564254761, 0.8824461698532104, 0.882710337638855, 0.8811253309249878, 0.887597382068634, 0.887597382068634, 0.8906353116035461, 0.8911636471748352], "val_loss": [2.0369274616241455, 1.5092171430587769, 1.0378726720809937, 0.8372371196746826, 0.7430018186569214, 0.693951427936554, 0.6459794044494629, 0.6065753698348999, 0.5836796760559082, 0.5591391324996948, 0.5475665926933289, 0.5286199450492859, 0.5111508965492249, 0.49807658791542053, 0.4888598918914795, 0.4807276725769043, 0.4732670187950134, 0.46291399002075195, 0.4651739001274109, 0.44972753524780273, 0.44051307439804077, 0.4300120174884796, 0.42833927273750305, 0.4226953983306885, 0.42076465487480164, 0.41008231043815613, 0.40701472759246826, 0.4087570011615753, 0.3987274467945099, 0.39754143357276917, 0.3908216655254364, 0.39351579546928406, 0.3876643180847168, 0.3835429251194, 0.3747929334640503, 0.37449854612350464, 0.3731365501880646, 0.3678072988986969, 0.3718084394931793, 0.3737613260746002, 0.36592888832092285, 0.3612542748451233, 0.3634853661060333, 0.3576800525188446, 0.35225361585617065, 0.35540124773979187, 0.35645702481269836, 0.3527815639972687, 0.3493586778640747, 0.349461168050766], "val_accuracy": [0.5453333258628845, 0.6666666865348816, 0.6899999976158142, 0.7136666774749756, 0.737666666507721, 0.7523333430290222, 0.765666663646698, 0.7816666960716248, 0.7886666655540466, 0.7976666688919067, 0.7953333258628845, 0.8090000152587891, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8309999704360962, 0.8243333101272583, 0.843666672706604, 0.8333333134651184, 0.840666651725769, 0.846666693687439, 0.8569999933242798, 0.8533333539962769, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.8683333396911621, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8763333559036255, 0.878000020980835, 0.8756666779518127, 0.878000020980835, 0.8756666779518127, 0.8756666779518127, 0.8790000081062317, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539, 0.8833333253860474, 0.8796666860580444, 0.8826666474342346, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8722857236862183, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2256486415863037, 1.8813937902450562, 1.411034345626831, 1.102525234222412, 0.9308993816375732, 0.8407425880432129, 0.7790250182151794, 0.7291255593299866, 0.700023353099823, 0.6640727519989014, 0.6335710287094116, 0.6125640273094177, 0.5941901206970215, 0.5799347162246704, 0.5586659908294678, 0.5470612645149231, 0.5323874950408936, 0.5287649035453796, 0.5140314102172852, 0.5003380179405212, 0.4931419789791107, 0.48087525367736816, 0.47519755363464355, 0.4614056646823883, 0.4567453861236572, 0.4496224522590637, 0.4452332556247711, 0.43782711029052734, 0.43810904026031494, 0.42142564058303833, 0.419466108083725, 0.41191473603248596, 0.4049156606197357, 0.39719274640083313, 0.39166709780693054, 0.3834167718887329, 0.3795572519302368, 0.3808630406856537, 0.37229758501052856, 0.366032212972641, 0.3614463210105896, 0.35391443967819214, 0.34969139099121094, 0.3446504473686218, 0.3409564793109894, 0.3347853720188141, 0.32541167736053467, 0.32413020730018616, 0.3171619176864624, 0.3211575150489807, 0.3158353269100189, 0.3094502389431, 0.3039512038230896, 0.30046164989471436, 0.2919408977031708, 0.29680413007736206], "accuracy": [0.2658829689025879, 0.4876502454280853, 0.5576542019844055, 0.6180161237716675, 0.6720380187034607, 0.702681303024292, 0.7210407853126526, 0.7427024245262146, 0.7453441023826599, 0.7541936039924622, 0.7709681391716003, 0.7825914621353149, 0.7820631265640259, 0.7887993454933167, 0.7987055778503418, 0.8039889335632324, 0.8037247657775879, 0.8104609847068787, 0.8150838613510132, 0.8210275769233704, 0.8265751004219055, 0.8257825970649719, 0.8309338092803955, 0.8359529972076416, 0.837537944316864, 0.8380662798881531, 0.8446704745292664, 0.8457271456718445, 0.8466516733169556, 0.8487650156021118, 0.8524633646011353, 0.8521991968154907, 0.8541803956031799, 0.854708731174469, 0.863029956817627, 0.8647470474243164, 0.8668603897094727, 0.8652753829956055, 0.8665962219238281, 0.8683133125305176, 0.871879518032074, 0.8729361891746521, 0.8712190985679626, 0.8730682730674744, 0.8774270415306091, 0.8802007436752319, 0.8833707571029663, 0.8819178342819214, 0.8844274282455444, 0.8820499181747437, 0.8879936337471008, 0.8894465565681458, 0.8901069760322571, 0.8931449055671692, 0.8956544995307922, 0.8951261639595032], "val_loss": [2.047527313232422, 1.5276116132736206, 1.0595678091049194, 0.8473680019378662, 0.7588556408882141, 0.7031881213188171, 0.6622492671012878, 0.6280884146690369, 0.600105881690979, 0.5836749076843262, 0.5610190629959106, 0.548066258430481, 0.5334736108779907, 0.5204057097434998, 0.5094681978225708, 0.5064442753791809, 0.48825931549072266, 0.485090970993042, 0.4757595956325531, 0.46331918239593506, 0.45991015434265137, 0.4536114037036896, 0.4425587058067322, 0.4427855312824249, 0.4357803463935852, 0.42933300137519836, 0.4247470200061798, 0.4164411723613739, 0.41841110587120056, 0.41065147519111633, 0.40748828649520874, 0.4117962121963501, 0.39740461111068726, 0.39568859338760376, 0.394092321395874, 0.391518235206604, 0.39309611916542053, 0.385650098323822, 0.38551828265190125, 0.3810918927192688, 0.37800276279449463, 0.3789377808570862, 0.3706991672515869, 0.38073185086250305, 0.3697819709777832, 0.3686155080795288, 0.36736172437667847, 0.3655164837837219, 0.3614266812801361, 0.3612009584903717, 0.3567001521587372, 0.3645482659339905, 0.3566279411315918, 0.35358142852783203, 0.3595952093601227, 0.3558349907398224], "val_accuracy": [0.5173333287239075, 0.6503333449363708, 0.6850000023841858, 0.7110000252723694, 0.7269999980926514, 0.7423333525657654, 0.75, 0.7703333497047424, 0.781000018119812, 0.781333327293396, 0.7946666479110718, 0.8026666641235352, 0.8090000152587891, 0.8119999766349792, 0.8183333277702332, 0.8149999976158142, 0.8266666531562805, 0.8306666612625122, 0.8306666612625122, 0.8356666564941406, 0.8396666646003723, 0.8413333296775818, 0.8426666855812073, 0.8456666469573975, 0.8456666469573975, 0.8479999899864197, 0.8553333282470703, 0.859000027179718, 0.8550000190734863, 0.8569999933242798, 0.8600000143051147, 0.8526666760444641, 0.8633333444595337, 0.862333357334137, 0.8629999756813049, 0.8636666536331177, 0.859333336353302, 0.8640000224113464, 0.8693333268165588, 0.8683333396911621, 0.8706666827201843, 0.8673333525657654, 0.871999979019165, 0.8663333058357239, 0.8709999918937683, 0.874666690826416, 0.875, 0.8736666440963745, 0.8776666522026062, 0.8766666650772095, 0.8806666731834412, 0.8793333172798157, 0.8759999871253967, 0.8790000081062317, 0.8776666522026062, 0.8803333044052124]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [0, 1, 7, 4, 2], [0, 0, 3, 4, 6], [0, 82], [0, 1], [0], [1], [0]], "fitness": -0.847428560256958, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(tf.math.add(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), sigma), grad), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2936389446258545, 2.18774676322937, 1.7601832151412964, 1.3366806507110596, 1.0804097652435303, 0.933167040348053, 0.8680993318557739, 0.8174615502357483, 0.778120756149292, 0.7434139251708984, 0.7077486515045166, 0.6906633973121643, 0.6413817405700684, 0.6216993927955627, 0.6023818254470825, 0.5853986144065857, 0.575004518032074, 0.5638171434402466, 0.552546501159668, 0.5495754480361938, 0.528862476348877, 0.5122697949409485, 0.5111961960792542, 0.5059554576873779, 0.47985464334487915, 0.48518824577331543, 0.4833959639072418, 0.471894770860672, 0.46157488226890564, 0.45014697313308716, 0.4469294846057892, 0.4401860535144806, 0.42244821786880493, 0.42047902941703796, 0.4209229350090027, 0.41169798374176025, 0.40100157260894775, 0.40533947944641113, 0.3873549699783325, 0.38634905219078064, 0.37487512826919556, 0.3717983067035675, 0.3639024496078491, 0.3557007610797882, 0.347846657037735, 0.34146177768707275, 0.3525397479534149, 0.33946990966796875], "accuracy": [0.1298375427722931, 0.33601900935173035, 0.44089287519454956, 0.5462950468063354, 0.6316206455230713, 0.6579051613807678, 0.6820763349533081, 0.6995112895965576, 0.698718786239624, 0.7240787148475647, 0.7305507659912109, 0.7349095344543457, 0.7526086568832397, 0.7619865536689758, 0.763967752456665, 0.7778365015983582, 0.7827235460281372, 0.7841764688491821, 0.7847048044204712, 0.7901201844215393, 0.7898560166358948, 0.804649293422699, 0.8078193068504333, 0.8045172095298767, 0.8182538747787476, 0.8169330358505249, 0.8133667707443237, 0.8195747137069702, 0.8234050869941711, 0.8294808864593506, 0.8230088353157043, 0.8329150676727295, 0.8391229510307312, 0.8397833704948425, 0.8335754871368408, 0.8372738361358643, 0.8449346423149109, 0.8481045961380005, 0.8506141901016235, 0.8514066934585571, 0.8549728989601135, 0.8556333184242249, 0.8599920868873596, 0.8593316674232483, 0.8619733452796936, 0.8654074668884277, 0.8562937378883362, 0.8669924736022949], "val_loss": [2.2456400394439697, 2.0165293216705322, 1.1307412385940552, 0.8892514705657959, 0.7590233683586121, 0.7275580763816833, 0.6683542132377625, 0.6436861753463745, 0.6497921943664551, 0.6060183644294739, 0.5791618824005127, 0.5516869425773621, 0.5408713221549988, 0.5340959429740906, 0.5221313238143921, 0.5127207636833191, 0.5064918994903564, 0.5042925477027893, 0.5029245018959045, 0.4871906340122223, 0.4850226938724518, 0.4961397349834442, 0.47821012139320374, 0.47900155186653137, 0.4938170611858368, 0.47903501987457275, 0.46412038803100586, 0.4604721665382385, 0.4701155722141266, 0.46223947405815125, 0.4477790892124176, 0.44955703616142273, 0.4561435580253601, 0.4423525333404541, 0.4382709264755249, 0.4397822618484497, 0.449828177690506, 0.4184817671775818, 0.41020718216896057, 0.42336660623550415, 0.42582789063453674, 0.41923877596855164, 0.4156739115715027, 0.42579206824302673, 0.42587143182754517, 0.41674017906188965, 0.4307420253753662, 0.4548494517803192], "val_accuracy": [0.42800000309944153, 0.48899999260902405, 0.6603333353996277, 0.70333331823349, 0.7166666388511658, 0.7333333492279053, 0.7426666617393494, 0.7553333044052124, 0.753000020980835, 0.7743333578109741, 0.7620000243186951, 0.7789999842643738, 0.7886666655540466, 0.7976666688919067, 0.8003333210945129, 0.7933333516120911, 0.8133333325386047, 0.8073333501815796, 0.8080000281333923, 0.8276666402816772, 0.824999988079071, 0.8180000185966492, 0.8320000171661377, 0.8266666531562805, 0.8256666660308838, 0.8270000219345093, 0.8259999752044678, 0.8333333134651184, 0.8273333311080933, 0.8379999995231628, 0.8456666469573975, 0.8453333377838135, 0.847000002861023, 0.8506666421890259, 0.8550000190734863, 0.8523333072662354, 0.8516666889190674, 0.8636666536331177, 0.8583333492279053, 0.8646666407585144, 0.8619999885559082, 0.8706666827201843, 0.8726666569709778, 0.8666666746139526, 0.8659999966621399, 0.8686666488647461, 0.8690000176429749, 0.8646666407585144]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 10, 5, 5, 2, 2, 1, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 0, 0, 0], [0, 4, 5, 8, 9], [0], [0, 97], [1], [0], [2], [0]], "fitness": -0.8360000252723694, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.math.sqrt(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6494413614273071, 0.8494168519973755, 0.6697591543197632, 0.6011506915092468, 0.554524302482605, 0.5134190320968628, 0.49546366930007935, 0.473330020904541, 0.46093621850013733, 0.4277096092700958, 0.4406399726867676, 0.41912561655044556, 0.43671756982803345, 0.4472053647041321, 0.4248477816581726], "accuracy": [0.45647865533828735, 0.7063795924186707, 0.7651565074920654, 0.7849689722061157, 0.8049134612083435, 0.8108572363853455, 0.8231409192085266, 0.8347642421722412, 0.8333113193511963, 0.8425571322441101, 0.8499537706375122, 0.8525954484939575, 0.8495575189590454, 0.8508783578872681, 0.8511425256729126], "val_loss": [0.8648003935813904, 0.6426090002059937, 0.5788865685462952, 0.5278488993644714, 0.5000977516174316, 0.5019181370735168, 0.49515753984451294, 0.5133149027824402, 0.505003809928894, 0.5131920576095581, 0.5214059948921204, 0.5325706601142883, 0.5630219578742981, 0.5903174877166748, 0.5346375107765198], "val_accuracy": [0.6883333325386047, 0.7716666460037231, 0.7983333468437195, 0.8153333067893982, 0.8169999718666077, 0.8216666579246521, 0.8183333277702332, 0.8309999704360962, 0.8236666917800903, 0.8393333554267883, 0.8339999914169312, 0.8330000042915344, 0.831333339214325, 0.8320000171661377, 0.8393333554267883]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 6, 5, 1, 2, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 3, 0, 3, 4, 8, 3, 6, 3, 6, 7, 0, 1, 5, 9], [0, 1, 0, 2, 1, 2, 0, 3, 2, 1], [39, 39, 77, 27], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 8, 3, 2], [0, 2, 0, 3, 3], [16, 19], [0, 1], [0], [1], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 9, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [76, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 26, 16, 10, 4, 11, 6, 5, 2, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.sqrt(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))))), tf.math.divide_no_nan(alpha, tf.math.multiply(tf.math.divide_no_nan(grad, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.negative(grad), tf.math.subtract(grad, tf.math.square(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))))))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.add(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3035528659820557, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10051512718200684, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 0, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 2, 2, 1, 6, 3, 8, 2, 3, 4, 4], [3, 0, 3, 0, 4, 1, 0, 0, 3, 5], [0, 27, 16, 0, 18], [0, 1], [0], [0], [0, 18], [1], [0], [2], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 21, 11, 10, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(grad), tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.pow(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.math.pow(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 2, 8, 7, 1, 4, 9, 0, 9, 4, 2, 3, 3, 9, 0, 1, 9], [0, 1, 0, 2, 0, 2, 0, 3, 0, 1], [45, 64, 46, 94, 34, 28, 13, 85, 81], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [6, 3, 3, 3, 3, 0, 7, 2, 5, 8], [0, 2, 3, 3, 2, 2, 3, 5], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [9, 3, 3, 0, 8, 1, 4, 1, 4, 2, 8], [0, 0, 2, 3, 0, 0, 3, 4, 2, 0], [16, 87, 96, 49, 46, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 31, 21, 10, 9, 18, 10, 8, 1, 2, 1, 1, 1, 1, 1, 0, 1], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.math.subtract(tf.math.pow(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.add(tf.math.multiply(tf.math.multiply(grad, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.math.negative(grad)), tf.math.subtract(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)))), alpha))))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(grad, tf.math.negative(grad))), tf.math.add(beta, tf.math.add(beta, tf.math.square(tf.math.sqrt(grad))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3038437366485596, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 1, 1, 1, 3, 0], [0, 1, 0, 2, 2], [83, 99, 27], [0, 1], [0], [0], [16, 16], [1, 1], [0], [0], [0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [6, 3, 3, 6, 8, 9, 4, 1, 4, 2, 8, 5], [0, 3, 5, 5, 6, 1, 1, 1, 7, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 2, 1, 1, 1, 1, 0, 1, 1, 20, 12, 8, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.subtract(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad)), tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, grad))), tf.math.pow(grad, tf.math.add(grad, alpha))), alpha), tf.math.sqrt(tf.math.square(alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}]