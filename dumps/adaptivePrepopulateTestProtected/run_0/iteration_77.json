[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.87028568983078, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2219016551971436, 1.8610057830810547, 1.3761638402938843, 1.0862187147140503, 0.9245433211326599, 0.8388400077819824, 0.7603684067726135, 0.7156709432601929, 0.6781124472618103, 0.6561807990074158, 0.6235507726669312, 0.600253164768219, 0.5832854509353638, 0.5818975567817688, 0.5539979338645935, 0.5444350242614746, 0.5271230936050415, 0.5091053247451782, 0.5046439170837402, 0.4916221499443054, 0.48175477981567383, 0.471758097410202, 0.4648985266685486, 0.45141035318374634, 0.455849289894104, 0.4411734640598297, 0.42988693714141846, 0.4206542372703552, 0.4125959873199463, 0.4143799841403961, 0.4075125455856323, 0.39575767517089844, 0.40112388134002686, 0.38900402188301086, 0.38336557149887085, 0.37282517552375793, 0.3752405047416687, 0.36682018637657166, 0.36260464787483215, 0.353675901889801, 0.35177329182624817], "accuracy": [0.2670717239379883, 0.4877823293209076, 0.5754854083061218, 0.6144498586654663, 0.6645092964172363, 0.6991150379180908, 0.7209087014198303, 0.7382115721702576, 0.752740740776062, 0.7588165402412415, 0.7736098170280457, 0.7792893648147583, 0.7868181467056274, 0.7814027070999146, 0.7960638999938965, 0.8000264167785645, 0.8127063512802124, 0.811649739742279, 0.8169330358505249, 0.8197067975997925, 0.8294808864593506, 0.8281601071357727, 0.829216718673706, 0.8341038227081299, 0.8341038227081299, 0.8411042094230652, 0.8455950617790222, 0.847840428352356, 0.8486329317092896, 0.8533879518508911, 0.8510104417800903, 0.8570862412452698, 0.8562937378883362, 0.8597279191017151, 0.8588033318519592, 0.8683133125305176, 0.8593316674232483, 0.8684453964233398, 0.8681812286376953, 0.8735966086387634, 0.8709549307823181], "val_loss": [2.0350534915924072, 1.5095566511154175, 1.0390106439590454, 0.8379241824150085, 0.7531813979148865, 0.6969019174575806, 0.6490904688835144, 0.6209774017333984, 0.5945645570755005, 0.5721085071563721, 0.5549467206001282, 0.5419313311576843, 0.528472363948822, 0.5130510330200195, 0.5079649686813354, 0.4932803809642792, 0.4847184717655182, 0.4781426191329956, 0.47180110216140747, 0.4667837619781494, 0.4543662369251251, 0.44705110788345337, 0.4427516758441925, 0.4423903822898865, 0.4351169466972351, 0.4292425811290741, 0.42645522952079773, 0.41796672344207764, 0.4156405031681061, 0.4109501540660858, 0.4075610339641571, 0.4073282778263092, 0.40152645111083984, 0.39819177985191345, 0.39226847887039185, 0.3891567289829254, 0.39141759276390076, 0.38658928871154785, 0.38334009051322937, 0.3832623362541199, 0.37752118706703186], "val_accuracy": [0.5490000247955322, 0.6513333320617676, 0.6856666803359985, 0.7070000171661377, 0.7333333492279053, 0.7583333253860474, 0.7616666555404663, 0.7716666460037231, 0.7806666493415833, 0.7906666398048401, 0.7979999780654907, 0.8059999942779541, 0.8153333067893982, 0.8159999847412109, 0.8226666450500488, 0.82833331823349, 0.8349999785423279, 0.8309999704360962, 0.8346666693687439, 0.840666651725769, 0.8399999737739563, 0.8456666469573975, 0.8456666469573975, 0.8420000076293945, 0.8473333120346069, 0.8526666760444641, 0.8510000109672546, 0.8510000109672546, 0.8529999852180481, 0.8566666841506958, 0.8553333282470703, 0.856333315372467, 0.8576666712760925, 0.8573333621025085, 0.8583333492279053, 0.8653333187103271, 0.8629999756813049, 0.8610000014305115, 0.8633333444595337, 0.8606666922569275, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 1], [0, 3], [0, 2], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8631428480148315, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.291764259338379, 2.1870429515838623, 1.761012315750122, 1.3647974729537964, 1.0684009790420532, 0.923261821269989, 0.8480082154273987, 0.8221784234046936, 0.7622261643409729, 0.7478052377700806, 0.7160959839820862, 0.6895532608032227, 0.668449342250824, 0.6359338164329529, 0.6175155639648438, 0.6047022342681885, 0.5903940796852112, 0.5754081010818481, 0.5577257871627808, 0.5586422681808472, 0.5494648218154907, 0.5272560715675354, 0.5203120708465576, 0.5077898502349854, 0.492862343788147, 0.48677849769592285, 0.4708447754383087, 0.47858649492263794, 0.4565085470676422, 0.4507608711719513, 0.44519880414009094, 0.4294854998588562, 0.43175408244132996, 0.4252434968948364, 0.41023391485214233, 0.407914936542511, 0.39649975299835205, 0.3973984122276306, 0.3824927508831024, 0.3831530809402466, 0.37786608934402466, 0.3608853220939636, 0.3687524199485779, 0.3569759726524353, 0.35978978872299194, 0.3529963195323944, 0.34248894453048706, 0.3344697654247284], "accuracy": [0.13498876988887787, 0.3295469582080841, 0.4361378848552704, 0.5361247062683105, 0.63096022605896, 0.6656980514526367, 0.6900013089179993, 0.7057191729545593, 0.7107383608818054, 0.7128516435623169, 0.7255316376686096, 0.7325320243835449, 0.7420420050621033, 0.7516840696334839, 0.7692511081695557, 0.7724210619926453, 0.778232753276825, 0.7815347909927368, 0.787082314491272, 0.7852331399917603, 0.7869502305984497, 0.8000264167785645, 0.8038568496704102, 0.8037247657775879, 0.809140145778656, 0.813498854637146, 0.822348415851593, 0.8214238286018372, 0.8248580098152161, 0.8203672170639038, 0.8273676037788391, 0.8370096683502197, 0.8397833704948425, 0.837537944316864, 0.8446704745292664, 0.8432175517082214, 0.8481045961380005, 0.8525954484939575, 0.8527275323867798, 0.8516708612442017, 0.859199583530426, 0.8593316674232483, 0.8603883385658264, 0.8603883385658264, 0.8615770936012268, 0.8621054291725159, 0.8673887252807617, 0.8712190985679626], "val_loss": [2.246811866760254, 2.0184619426727295, 1.1445739269256592, 0.8980842232704163, 0.7760270237922668, 0.7139579057693481, 0.6946787238121033, 0.6620560884475708, 0.6457256078720093, 0.6170798540115356, 0.5983738899230957, 0.5781123638153076, 0.5536603927612305, 0.5443888306617737, 0.5243089199066162, 0.5190384387969971, 0.5103906393051147, 0.5007712244987488, 0.4992538392543793, 0.48506298661231995, 0.48097649216651917, 0.4724987745285034, 0.4584808349609375, 0.45853349566459656, 0.4581325948238373, 0.4502735137939453, 0.446759968996048, 0.4531150758266449, 0.4411417543888092, 0.43128132820129395, 0.4393284022808075, 0.42596331238746643, 0.42411381006240845, 0.4265874922275543, 0.4334213435649872, 0.41433316469192505, 0.41384178400039673, 0.41933783888816833, 0.4189765751361847, 0.41383519768714905, 0.4105721116065979, 0.42917191982269287, 0.4130467176437378, 0.41201645135879517, 0.4147151708602905, 0.42726635932922363, 0.41659456491470337, 0.4122050702571869], "val_accuracy": [0.4156666696071625, 0.4620000123977661, 0.6513333320617676, 0.6863333582878113, 0.7233333587646484, 0.7360000014305115, 0.7493333220481873, 0.7493333220481873, 0.7563333511352539, 0.765333354473114, 0.7580000162124634, 0.7736666798591614, 0.7860000133514404, 0.7889999747276306, 0.79666668176651, 0.7993333339691162, 0.8026666641235352, 0.8096666932106018, 0.8073333501815796, 0.8193333148956299, 0.8176666498184204, 0.8223333358764648, 0.8253333568572998, 0.8309999704360962, 0.8383333086967468, 0.8373333215713501, 0.8389999866485596, 0.8410000205039978, 0.843666672706604, 0.8476666808128357, 0.8460000157356262, 0.8506666421890259, 0.8489999771118164, 0.8456666469573975, 0.8463333249092102, 0.8516666889190674, 0.8516666889190674, 0.8553333282470703, 0.8536666631698608, 0.8600000143051147, 0.8573333621025085, 0.8550000190734863, 0.8633333444595337, 0.8573333621025085, 0.8610000014305115, 0.8576666712760925, 0.8629999756813049, 0.8606666922569275]}, "mapping_values": [1, 10, 5, 5, 3, 4, 2, 2, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8180000185966492, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5964876413345337, 0.8347790837287903, 0.6673917770385742, 0.5982288718223572, 0.5595351457595825, 0.5128689408302307, 0.506746768951416, 0.493135005235672, 0.48145344853401184, 0.47101616859436035, 0.45417895913124084, 0.42721202969551086, 0.4371720552444458], "accuracy": [0.47047945857048035, 0.709549605846405, 0.7559106945991516, 0.7803460359573364, 0.7874785661697388, 0.8072909712791443, 0.8113855719566345, 0.8185180425643921, 0.8293488025665283, 0.8284242749214172, 0.8335754871368408, 0.8412362933158875, 0.8477083444595337], "val_loss": [0.8823068737983704, 0.6462166905403137, 0.5343312621116638, 0.5168862342834473, 0.48505306243896484, 0.49127984046936035, 0.4913654029369354, 0.4765024483203888, 0.49873241782188416, 0.4694543778896332, 0.5173870325088501, 0.5073311924934387, 0.472806841135025], "val_accuracy": [0.7020000219345093, 0.7733333110809326, 0.8133333325386047, 0.8086666464805603, 0.8236666917800903, 0.8240000009536743, 0.8346666693687439, 0.8460000157356262, 0.8420000076293945, 0.8316666483879089, 0.8456666469573975, 0.8453333377838135, 0.8346666693687439]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 3, 3], [0], [0, 1], [9, 0], [0], [0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 2, 4, 2, 8, 3, 6], [0, 2, 0, 0, 1, 5, 2, 6, 4, 4, 5, 2], [0, 4, 35]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 1, 1, 1, 0, 1, 25, 13, 12, 3], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(beta, tf.math.pow(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.pow(grad, beta)))), grad), tf.math.add(tf.math.sqrt(grad), tf.math.multiply(tf.math.divide_no_nan(grad, grad), beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 5, 0, 3], [0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0], [8, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [16, 16, 47, 66], [0, 1], [0], [0], [0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], [5, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 6, 3, 3, 2, 2, 3, 3, 7, 9, 2, 6, 4, 2, 8, 6, 1], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 6, 3, 5, 6, 1, 5, 1, 4, 5, 0, 7, 6], [16, 99, 96, 99, 61, 1, 36, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 1, 12, 6, 6, 3, 2, 1, 1, 1, 49, 27, 22, 8], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.math.sqrt(tf.math.divide_no_nan(alpha, beta)))), tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(grad, tf.math.add(sigma, grad)), tf.math.multiply(tf.math.multiply(tf.math.add(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), grad), alpha), tf.math.add(tf.math.divide_no_nan(tf.math.pow(grad, tf.math.add(alpha, grad)), tf.math.sqrt(tf.math.divide_no_nan(grad, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(grad, grad))))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 4, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 1], [0, 0], [0], [99], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 1, 6, 8, 1, 4, 1, 4, 2, 8], [1, 7, 6, 2, 2, 3, 4, 2, 2, 5], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 14, 7, 7, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, tf.math.multiply(grad, tf.math.subtract(tf.math.divide_no_nan(grad, beta), tf.math.sqrt(tf.math.subtract(beta, tf.math.pow(sigma, grad))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 1, 0, 3], [0, 1, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 2, 3, 0, 3, 1, 3, 3, 8, 7], [0, 2, 0, 3, 5, 2, 2, 0], [16, 16, 59], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 18, 10, 8, 3, 2, 1, 1, 1, 12, 6, 6, 5], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.math.multiply(tf.math.multiply(tf.math.sqrt(tf.math.add(grad, beta)), beta), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3044381141662598, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}]