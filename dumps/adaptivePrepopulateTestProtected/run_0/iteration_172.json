[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8805714249610901, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585988998413, 1.8659464120864868, 1.3939106464385986, 1.0966308116912842, 0.9349022507667542, 0.8419743776321411, 0.7695197463035583, 0.729751467704773, 0.6897091865539551, 0.6576535105705261, 0.6359990835189819, 0.6094067096710205, 0.589935839176178, 0.5596274733543396, 0.5528120398521423, 0.5393894910812378, 0.5281672477722168, 0.5202223062515259, 0.5057564377784729, 0.5040625333786011, 0.48261573910713196, 0.46983885765075684, 0.4574008584022522, 0.454408198595047, 0.4424269199371338, 0.42842501401901245, 0.42894208431243896, 0.42616719007492065, 0.41881483793258667, 0.4155913293361664, 0.4008829891681671, 0.39691162109375, 0.38997870683670044, 0.38351768255233765, 0.37681254744529724, 0.3729562759399414, 0.36148902773857117, 0.362969309091568, 0.3563940227031708, 0.3505782186985016, 0.35241496562957764, 0.34010687470436096, 0.3387279510498047, 0.3343537747859955, 0.3285624086856842, 0.32427793741226196, 0.319965660572052, 0.3122166097164154, 0.30889007449150085, 0.3045063316822052], "accuracy": [0.2694492042064667, 0.48870691657066345, 0.568220853805542, 0.6156386137008667, 0.6696605682373047, 0.6963412761688232, 0.7223616242408752, 0.7312111854553223, 0.750759482383728, 0.7600052952766418, 0.7696473598480225, 0.7761194109916687, 0.787082314491272, 0.7985734939575195, 0.7980451583862305, 0.8045172095298767, 0.8121780753135681, 0.8125742673873901, 0.8178576231002808, 0.8191784620285034, 0.8251221776008606, 0.8322546482086182, 0.8356888294219971, 0.8359529972076416, 0.8389908671379089, 0.846387505531311, 0.8451988101005554, 0.8454629778862, 0.848368763923645, 0.8531237840652466, 0.8598600029945374, 0.854708731174469, 0.8605204224586487, 0.8609166741371155, 0.86553955078125, 0.8639545440673828, 0.8689737319946289, 0.8706908226013184, 0.873860776424408, 0.872407853603363, 0.8710870146751404, 0.8776912093162537, 0.8792761564254761, 0.8824461698532104, 0.882710337638855, 0.8811253309249878, 0.887597382068634, 0.887597382068634, 0.8906353116035461, 0.8911636471748352], "val_loss": [2.0369274616241455, 1.5092171430587769, 1.0378726720809937, 0.8372371196746826, 0.7430018186569214, 0.693951427936554, 0.6459794044494629, 0.6065753698348999, 0.5836796760559082, 0.5591391324996948, 0.5475665926933289, 0.5286199450492859, 0.5111508965492249, 0.49807658791542053, 0.4888598918914795, 0.4807276725769043, 0.4732670187950134, 0.46291399002075195, 0.4651739001274109, 0.44972753524780273, 0.44051307439804077, 0.4300120174884796, 0.42833927273750305, 0.4226953983306885, 0.42076465487480164, 0.41008231043815613, 0.40701472759246826, 0.4087570011615753, 0.3987274467945099, 0.39754143357276917, 0.3908216655254364, 0.39351579546928406, 0.3876643180847168, 0.3835429251194, 0.3747929334640503, 0.37449854612350464, 0.3731365501880646, 0.3678072988986969, 0.3718084394931793, 0.3737613260746002, 0.36592888832092285, 0.3612542748451233, 0.3634853661060333, 0.3576800525188446, 0.35225361585617065, 0.35540124773979187, 0.35645702481269836, 0.3527815639972687, 0.3493586778640747, 0.349461168050766], "val_accuracy": [0.5453333258628845, 0.6666666865348816, 0.6899999976158142, 0.7136666774749756, 0.737666666507721, 0.7523333430290222, 0.765666663646698, 0.7816666960716248, 0.7886666655540466, 0.7976666688919067, 0.7953333258628845, 0.8090000152587891, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8309999704360962, 0.8243333101272583, 0.843666672706604, 0.8333333134651184, 0.840666651725769, 0.846666693687439, 0.8569999933242798, 0.8533333539962769, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.8683333396911621, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8763333559036255, 0.878000020980835, 0.8756666779518127, 0.878000020980835, 0.8756666779518127, 0.8756666779518127, 0.8790000081062317, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539, 0.8833333253860474, 0.8796666860580444, 0.8826666474342346, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8751428723335266, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222421407699585, 1.8695539236068726, 1.3886549472808838, 1.0906274318695068, 0.9271364808082581, 0.825709342956543, 0.767725944519043, 0.7154023051261902, 0.6789693236351013, 0.6505823731422424, 0.6210022568702698, 0.6163526177406311, 0.5883492827415466, 0.570295512676239, 0.5472021698951721, 0.5324563980102539, 0.5261387825012207, 0.5126344561576843, 0.5057399272918701, 0.4864896535873413, 0.4780210554599762, 0.4735405147075653, 0.46304458379745483, 0.44885390996932983, 0.4481050670146942, 0.43830665946006775, 0.4269917905330658, 0.4300088584423065, 0.4167354702949524, 0.41478973627090454, 0.40189796686172485, 0.39748772978782654, 0.38998305797576904, 0.3831234276294708, 0.3816652297973633, 0.37747621536254883, 0.3694680631160736, 0.37089741230010986, 0.3654370605945587, 0.35423749685287476, 0.3526713252067566, 0.3473389148712158, 0.3358544707298279, 0.3368472754955292, 0.33488208055496216, 0.3207283616065979, 0.3185442090034485, 0.318415105342865, 0.31639814376831055, 0.3097437024116516, 0.30628490447998047, 0.2954232692718506, 0.2895199656486511, 0.29207855463027954, 0.29152315855026245, 0.28454089164733887], "accuracy": [0.2727513015270233, 0.4881785809993744, 0.5703341960906982, 0.6240919232368469, 0.6749438643455505, 0.7038700580596924, 0.7154933214187622, 0.7360982894897461, 0.7497028112411499, 0.763439416885376, 0.7689869403839111, 0.7759873270988464, 0.7865539789199829, 0.7921014428138733, 0.7972526550292969, 0.8024039268493652, 0.8070268034934998, 0.8119139075279236, 0.8161405324935913, 0.8215559124946594, 0.8280280232429504, 0.8273676037788391, 0.8304054737091064, 0.8385946154594421, 0.8405758738517761, 0.8442742228507996, 0.8469158411026001, 0.8433496356010437, 0.8511425256729126, 0.8492933511734009, 0.8549728989601135, 0.8581429123878479, 0.852859616279602, 0.8625016212463379, 0.8607845902442932, 0.8588033318519592, 0.863558292388916, 0.8634262084960938, 0.8668603897094727, 0.8721436858177185, 0.8742570281028748, 0.8720116019248962, 0.8792761564254761, 0.8749174475669861, 0.878879964351654, 0.8817857503890991, 0.8811253309249878, 0.8828424215316772, 0.8865407705307007, 0.891559898853302, 0.8848236799240112, 0.8920882344245911, 0.8968431949615479, 0.8928807377815247, 0.8912957310676575, 0.8922203183174133], "val_loss": [2.0410940647125244, 1.5175377130508423, 1.045936107635498, 0.8412569761276245, 0.7547705173492432, 0.6989668607711792, 0.6539118885993958, 0.6301372647285461, 0.5988477468490601, 0.5755347013473511, 0.5603965520858765, 0.5477355122566223, 0.5397778153419495, 0.5183513760566711, 0.507975697517395, 0.5001797080039978, 0.49109870195388794, 0.47994115948677063, 0.4807223677635193, 0.4655522108078003, 0.45763662457466125, 0.4575110673904419, 0.4477056860923767, 0.44247159361839294, 0.43610355257987976, 0.43420863151550293, 0.4332766830921173, 0.42156973481178284, 0.42675504088401794, 0.4246998727321625, 0.4144152104854584, 0.41497209668159485, 0.4080507755279541, 0.4055975675582886, 0.4009527266025543, 0.4041009843349457, 0.3982841670513153, 0.39456629753112793, 0.3897629678249359, 0.39030933380126953, 0.3908543288707733, 0.3855046331882477, 0.383226603269577, 0.38141608238220215, 0.37840965390205383, 0.3783850073814392, 0.38190555572509766, 0.38253870606422424, 0.37360700964927673, 0.37284472584724426, 0.37152111530303955, 0.37837910652160645, 0.37307998538017273, 0.3728524446487427, 0.3684269189834595, 0.3638100326061249], "val_accuracy": [0.5389999747276306, 0.6613333225250244, 0.6869999766349792, 0.715666651725769, 0.7293333411216736, 0.7406666874885559, 0.7603333592414856, 0.7730000019073486, 0.7853333353996277, 0.7919999957084656, 0.7986666560173035, 0.8083333373069763, 0.8050000071525574, 0.8199999928474426, 0.8226666450500488, 0.8226666450500488, 0.8289999961853027, 0.8346666693687439, 0.8293333053588867, 0.8370000123977661, 0.8443333506584167, 0.8410000205039978, 0.8460000157356262, 0.8473333120346069, 0.8493333458900452, 0.8526666760444641, 0.8503333330154419, 0.8550000190734863, 0.8510000109672546, 0.8500000238418579, 0.8569999933242798, 0.8610000014305115, 0.8569999933242798, 0.8566666841506958, 0.8606666922569275, 0.8616666793823242, 0.8606666922569275, 0.8610000014305115, 0.862333357334137, 0.8676666617393494, 0.8676666617393494, 0.8676666617393494, 0.8693333268165588, 0.8636666536331177, 0.8686666488647461, 0.8683333396911621, 0.8700000047683716, 0.8706666827201843, 0.8730000257492065, 0.8679999709129333, 0.8756666779518127, 0.871666669845581, 0.874666690826416, 0.874666690826416, 0.8740000128746033, 0.8756666779518127]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 1, 0, 1], [0, 7, 0, 4, 9], [0, 1], [0, 52], [0, 0], [0, 9], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8594285845756531, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2927303314208984, 2.1909308433532715, 1.7879523038864136, 1.3729220628738403, 1.0851081609725952, 0.9377214908599854, 0.8548395037651062, 0.8063657283782959, 0.7625336050987244, 0.7451962828636169, 0.695999026298523, 0.6727191805839539, 0.6535694599151611, 0.6342547535896301, 0.6128997802734375, 0.5947802662849426, 0.5895053148269653, 0.5701858997344971, 0.5575421452522278, 0.5406579971313477, 0.5428182482719421, 0.5315080285072327, 0.504960834980011, 0.4994681775569916, 0.49585679173469543, 0.4788845181465149, 0.4695974886417389, 0.45931366086006165, 0.45290809869766235, 0.44534990191459656, 0.4305914044380188, 0.4299687147140503, 0.41813766956329346, 0.41537609696388245, 0.40652087330818176, 0.389508455991745, 0.38624557852745056, 0.37834489345550537, 0.38062864542007446, 0.3683396875858307, 0.3646880090236664, 0.3472725450992584, 0.3519364893436432, 0.3372616767883301, 0.33340197801589966, 0.3291778862476349, 0.3357713222503662, 0.32107600569725037, 0.3293282985687256, 0.31943854689598083, 0.32104411721229553, 0.30677270889282227, 0.30857494473457336, 0.3092191815376282, 0.2903524935245514, 0.294542521238327, 0.3016285300254822, 0.29826393723487854], "accuracy": [0.12851670384407043, 0.3203011453151703, 0.4336283206939697, 0.5379738211631775, 0.627129852771759, 0.6596222519874573, 0.6872276067733765, 0.700700044631958, 0.7062475085258484, 0.7117950320243835, 0.7363624572753906, 0.7327961921691895, 0.7437590956687927, 0.7469290494918823, 0.7536653280258179, 0.7705719470977783, 0.7705719470977783, 0.7770439982414246, 0.7808743715286255, 0.7889314293861389, 0.7862898111343384, 0.798309326171875, 0.8039889335632324, 0.7994980812072754, 0.8043851256370544, 0.8115176558494568, 0.8222163319587708, 0.8171972036361694, 0.8228767514228821, 0.8224804997444153, 0.8364813327789307, 0.8363492488861084, 0.8400475382804871, 0.8364813327789307, 0.8413683772087097, 0.8438779711723328, 0.852859616279602, 0.8515387773513794, 0.8511425256729126, 0.8570862412452698, 0.8527275323867798, 0.8636903762817383, 0.8588033318519592, 0.8676528930664062, 0.8721436858177185, 0.8704266548156738, 0.8667283058166504, 0.8726720213890076, 0.8647470474243164, 0.8732003569602966, 0.8705587387084961, 0.8835028409957886, 0.8779553771018982, 0.8733324408531189, 0.8878615498542786, 0.8879936337471008, 0.8765024542808533, 0.882710337638855], "val_loss": [2.2459471225738525, 2.019545555114746, 1.1333096027374268, 0.8456798791885376, 0.7819632291793823, 0.6893346905708313, 0.6505710482597351, 0.6248430013656616, 0.6258742809295654, 0.587856113910675, 0.5564813017845154, 0.5291557908058167, 0.5154451727867126, 0.5174925923347473, 0.5008469820022583, 0.48907697200775146, 0.48367053270339966, 0.47324272990226746, 0.46958446502685547, 0.46269261837005615, 0.4550608992576599, 0.4481671452522278, 0.4326969087123871, 0.4308074414730072, 0.42377912998199463, 0.4209109842777252, 0.41650810837745667, 0.41332387924194336, 0.4092687964439392, 0.399046927690506, 0.4006534516811371, 0.3975565731525421, 0.3903036415576935, 0.37899836897850037, 0.3759303092956543, 0.3887138366699219, 0.3779752254486084, 0.3726757764816284, 0.36792057752609253, 0.37617039680480957, 0.38028156757354736, 0.3688691258430481, 0.36954256892204285, 0.38121575117111206, 0.3836641311645508, 0.3812362551689148, 0.3817267119884491, 0.3808061480522156, 0.37849804759025574, 0.3876669108867645, 0.41484639048576355, 0.418548583984375, 0.39787769317626953, 0.39678874611854553, 0.42647409439086914, 0.412628173828125, 0.4221333861351013, 0.43379902839660645], "val_accuracy": [0.40299999713897705, 0.46700000762939453, 0.6566666960716248, 0.7003333568572998, 0.7193333506584167, 0.7329999804496765, 0.7473333477973938, 0.7593333125114441, 0.7566666603088379, 0.7730000019073486, 0.777999997138977, 0.7873333096504211, 0.7996666431427002, 0.7940000295639038, 0.8063333630561829, 0.8026666641235352, 0.8190000057220459, 0.8190000057220459, 0.8146666884422302, 0.8256666660308838, 0.8296666741371155, 0.8286666870117188, 0.8373333215713501, 0.8376666903495789, 0.8399999737739563, 0.8450000286102295, 0.8429999947547913, 0.8453333377838135, 0.8486666679382324, 0.8516666889190674, 0.8579999804496765, 0.859333336353302, 0.8606666922569275, 0.8583333492279053, 0.8603333234786987, 0.862333357334137, 0.862333357334137, 0.8673333525657654, 0.8676666617393494, 0.8679999709129333, 0.8693333268165588, 0.8723333477973938, 0.8700000047683716, 0.8690000176429749, 0.8743333220481873, 0.8730000257492065, 0.8706666827201843, 0.8736666440963745, 0.875333309173584, 0.8766666650772095, 0.874666690826416, 0.8769999742507935, 0.878000020980835, 0.8769999742507935, 0.8743333220481873, 0.8773333430290222, 0.874666690826416, 0.875333309173584]}, "mapping_values": [1, 10, 5, 5, 3, 7, 5, 2, 2, 2, 2, 0, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 6, 4, 7, 7, 5, 0, 5, 7, 1, 7, 2, 9, 7, 3], [0, 6, 0, 6, 2, 3, 2, 6, 1, 5], [0, 98, 50], [1], [0], [2], [0]], "fitness": -0.8354285955429077, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.pow(tf.math.add(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.square(grad))), tf.math.add(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(grad, beta), tf.math.add(sigma, beta)))), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.multiply(grad, alpha), grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.54640531539917, 0.8970354795455933, 0.7087057828903198, 0.6550921201705933, 0.6327704787254333, 0.5728570818901062, 0.563865602016449, 0.5450482964515686, 0.5527267456054688, 0.5388272404670715, 0.5137910842895508, 0.5061929821968079, 0.5187294483184814, 0.5062078833580017, 0.5027729272842407, 0.5128723382949829, 0.5427079200744629, 0.5710919499397278], "accuracy": [0.44908201694488525, 0.6976621150970459, 0.7391361594200134, 0.7556465268135071, 0.774798572063446, 0.7917051911354065, 0.7928939461708069, 0.8080834746360779, 0.8104609847068787, 0.7989697456359863, 0.8145555257797241, 0.8267071843147278, 0.8128384351730347, 0.8239334225654602, 0.8183859586715698, 0.8241975903511047, 0.8245938420295715, 0.8099326491355896], "val_loss": [0.9130045771598816, 0.6347077488899231, 0.5988261103630066, 0.5511935353279114, 0.5236660242080688, 0.5159543752670288, 0.4964715540409088, 0.5348034501075745, 0.48116177320480347, 0.5224286317825317, 0.4743211269378662, 0.5346365571022034, 0.5061016082763672, 0.4648544192314148, 0.5065906643867493, 0.5668580532073975, 0.5539141297340393, 0.5349357724189758], "val_accuracy": [0.7023333311080933, 0.7506666779518127, 0.7763333320617676, 0.7973333597183228, 0.8149999976158142, 0.8220000267028809, 0.8256666660308838, 0.8186666369438171, 0.8336666822433472, 0.8336666822433472, 0.8316666483879089, 0.8299999833106995, 0.840666651725769, 0.8353333473205566, 0.8379999995231628, 0.8363333344459534, 0.8326666951179504, 0.8206666707992554]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 25, 15, 10, 3, 1, 0, 1, 0], "tree_depth": 17}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5, 9], [0, 2, 0, 3], [16, 16, 37], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [3, 0, 3, 3, 0, 0, 3, 1, 2, 0], [16, 99, 70, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(sigma, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(sigma), tf.math.subtract(sigma, tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), sigma)), alpha))), tf.math.add(tf.math.sqrt(beta), tf.constant(1.0, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [38813.234375, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09285431355237961, 0.1022322028875351, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [611.7100219726562, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0963333323597908, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}, "mapping_values": [1, 9, 5, 4, 2, 10, 7, 3, 3, 2, 1, 1, 1, 21, 11, 10, 4], "tree_depth": 20}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [5, 8, 3, 0, 3], [2, 0, 1, 0, 2], [91, 99, 27], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 6, 5, 0], [0, 2, 0, 3], [0], [0, 1], [0], [2], [0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [0, 2, 8, 1, 4, 1, 2, 1, 7, 8, 7, 6, 5, 2, 2], [0, 0, 3, 3, 4, 0, 3, 1, 2, 0, 6, 2], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 1, 2, 1, 1, 1, 2, 1, 1, 0, 27, 15, 12, 4], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.sqrt(tf.math.multiply(tf.math.negative(grad), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.math.add(tf.math.subtract(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.sqrt(sigma)), tf.math.add(sigma, grad)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.square(sigma), alpha)), tf.math.add(tf.math.add(beta, tf.constant(1.0, shape=shape, dtype=tf.float32)), grad))), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 8, 0, 3], [0, 1, 0, 1], [39, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1], [0, 2, 3, 0, 3, 5, 7, 2, 7, 4, 5, 5, 9, 7, 6, 4, 4, 3, 4, 9, 5], [0, 2, 0, 3, 5, 2, 3, 1, 2, 2, 5, 5], [16, 16, 69, 68], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 0, 6], [0, 0, 0, 3, 4, 4, 3, 4, 2, 0, 5], [16, 99, 96, 99, 61, 90]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 33, 21, 12, 4, 2, 1, 1, 1, 24, 13, 11, 4], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.math.square(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.math.pow(grad, tf.math.square(tf.math.square(grad))), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.divide_no_nan(tf.math.pow(tf.math.pow(beta, tf.math.multiply(grad, alpha)), beta), beta), tf.math.pow(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(sigma, tf.math.add(grad, grad))), sigma))), tf.math.sqrt(tf.math.negative(grad)))), beta), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 6], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 5], [0, 1, 1], [6], [0, 5], [99], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 4, 3, 0, 0, 3, 1, 2, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 3, 1, 2, 1, 16, 8, 8, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.sqrt(tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299]}}]