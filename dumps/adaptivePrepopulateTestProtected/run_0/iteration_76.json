[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8588571548461914, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2218947410583496, 1.8724215030670166, 1.4050862789154053, 1.1172566413879395, 0.953646183013916, 0.8517647981643677, 0.7828776836395264, 0.7286912202835083, 0.7033859491348267, 0.6600778698921204, 0.6372103691101074, 0.6091027855873108, 0.5931546092033386, 0.570888876914978, 0.5525707006454468, 0.5532163977622986, 0.529546320438385, 0.5164764523506165, 0.5041033029556274, 0.48854246735572815, 0.4897438883781433, 0.4692770838737488, 0.4689796566963196, 0.4630209803581238, 0.45082706212997437, 0.4383976459503174, 0.4306173622608185, 0.42292389273643494, 0.4263952076435089, 0.4203624725341797, 0.4095138907432556, 0.3972950279712677, 0.39591869711875916, 0.38501593470573425, 0.37938812375068665, 0.3799465298652649, 0.37170472741127014, 0.36213427782058716, 0.3529018759727478, 0.3547174632549286, 0.3531150221824646, 0.3458201587200165, 0.3358023464679718, 0.3331155478954315, 0.33031395077705383, 0.3206261396408081, 0.31483203172683716, 0.3155832588672638, 0.30847424268722534, 0.3004465103149414, 0.29938194155693054, 0.2957911193370819], "accuracy": [0.26839256286621094, 0.49451854825019836, 0.5670320987701416, 0.6141856908798218, 0.661471426486969, 0.6946242451667786, 0.7153612375259399, 0.7388719916343689, 0.7375511527061462, 0.7593448758125305, 0.7642319202423096, 0.7786290049552917, 0.7832518815994263, 0.7915731072425842, 0.8005547523498535, 0.8001585006713867, 0.8092722296714783, 0.8125742673873901, 0.8181217908859253, 0.8269713521003723, 0.8271034359931946, 0.8347642421722412, 0.8343679904937744, 0.8356888294219971, 0.8412362933158875, 0.8445383906364441, 0.847840428352356, 0.8454629778862, 0.8490291833877563, 0.8474441766738892, 0.8543124794960022, 0.8623695969581604, 0.8602562546730042, 0.8668603897094727, 0.8636903762817383, 0.8656716346740723, 0.8698983192443848, 0.8739928603172302, 0.8750495314598083, 0.8739928603172302, 0.8729361891746521, 0.8786157965660095, 0.8792761564254761, 0.8786157965660095, 0.8804649114608765, 0.8805969953536987, 0.8881257176399231, 0.8874653577804565, 0.889578640460968, 0.8908994793891907, 0.8938053250312805, 0.891559898853302], "val_loss": [2.040069818496704, 1.525698184967041, 1.062372088432312, 0.8518719673156738, 0.7585151195526123, 0.7042049169540405, 0.6584225296974182, 0.6180052757263184, 0.5898966789245605, 0.5670678019523621, 0.5498548150062561, 0.5337962508201599, 0.5181824564933777, 0.5088425874710083, 0.4914644658565521, 0.49011141061782837, 0.4739932119846344, 0.46786534786224365, 0.4558337330818176, 0.4533798396587372, 0.44523245096206665, 0.43759503960609436, 0.43307140469551086, 0.42566031217575073, 0.42130082845687866, 0.41311898827552795, 0.41166701912879944, 0.4135262072086334, 0.4092767834663391, 0.4034040570259094, 0.39621058106422424, 0.39549028873443604, 0.3870094418525696, 0.3847621977329254, 0.3871046006679535, 0.3800775408744812, 0.3765902817249298, 0.3727887272834778, 0.37445276975631714, 0.36534085869789124, 0.36921635270118713, 0.3663073778152466, 0.36385560035705566, 0.36090877652168274, 0.35993748903274536, 0.3590279817581177, 0.3527103662490845, 0.35310909152030945, 0.354755699634552, 0.36207136511802673, 0.35207104682922363, 0.35020795464515686], "val_accuracy": [0.5663333535194397, 0.6489999890327454, 0.6850000023841858, 0.7049999833106995, 0.731333315372467, 0.7540000081062317, 0.7613333463668823, 0.7793333530426025, 0.7916666865348816, 0.79666668176651, 0.8066666722297668, 0.8103333115577698, 0.8253333568572998, 0.8236666917800903, 0.8336666822433472, 0.828000009059906, 0.8343333601951599, 0.8416666388511658, 0.8423333168029785, 0.8410000205039978, 0.8426666855812073, 0.846666693687439, 0.846666693687439, 0.8493333458900452, 0.8506666421890259, 0.8550000190734863, 0.8569999933242798, 0.8566666841506958, 0.8573333621025085, 0.8586666584014893, 0.8586666584014893, 0.8640000224113464, 0.8669999837875366, 0.8659999966621399, 0.8673333525657654, 0.8700000047683716, 0.8726666569709778, 0.8690000176429749, 0.8686666488647461, 0.8730000257492065, 0.8669999837875366, 0.8693333268165588, 0.8726666569709778, 0.8730000257492065, 0.875, 0.8769999742507935, 0.8796666860580444, 0.8763333559036255, 0.8759999871253967, 0.8743333220481873, 0.8773333430290222, 0.8786666393280029]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 1], [0, 0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8519999980926514, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2939510345458984, 2.1893303394317627, 1.7638170719146729, 1.343896508216858, 1.0758439302444458, 0.9508051872253418, 0.8504384756088257, 0.8353745341300964, 0.7869224548339844, 0.7759533524513245, 0.7211428880691528, 0.7301603555679321, 0.6605952382087708, 0.6513608694076538, 0.630766749382019, 0.6156291961669922, 0.5885552763938904, 0.5974292159080505, 0.5888822078704834, 0.5769217610359192, 0.5643452405929565, 0.544678270816803, 0.5356031060218811, 0.5192959308624268, 0.5263486504554749, 0.49672555923461914, 0.5006169676780701, 0.4950542151927948, 0.48707854747772217, 0.4579762816429138, 0.4510132968425751, 0.4366578161716461, 0.44340530037879944, 0.42387402057647705, 0.4374341070652008, 0.41797587275505066, 0.41098150610923767, 0.4209381639957428, 0.4011124074459076, 0.3946734368801117, 0.39242127537727356, 0.3774808943271637, 0.36662036180496216, 0.37105679512023926, 0.365745484828949, 0.3679027259349823, 0.3533508777618408, 0.3641500473022461, 0.3365377187728882, 0.3446229100227356, 0.33476099371910095], "accuracy": [0.12508255243301392, 0.33126401901245117, 0.44023245573043823, 0.5433892607688904, 0.6373002529144287, 0.648659348487854, 0.6873596906661987, 0.6926429867744446, 0.694360077381134, 0.695813000202179, 0.7275128960609436, 0.7268524765968323, 0.7428345084190369, 0.755118191242218, 0.7510236501693726, 0.757099449634552, 0.7751948237419128, 0.7749306559562683, 0.7757231593132019, 0.7819310426712036, 0.7862898111343384, 0.7839123010635376, 0.789459764957428, 0.7987055778503418, 0.7946110367774963, 0.804649293422699, 0.8035926818847656, 0.8112534880638123, 0.8123101592063904, 0.8193105459213257, 0.8272355198860168, 0.8301413059234619, 0.8323867321014404, 0.8374059200286865, 0.83119797706604, 0.8376700282096863, 0.839519202709198, 0.8360850811004639, 0.8470479249954224, 0.8486329317092896, 0.8507462739944458, 0.8496896028518677, 0.8531237840652466, 0.8519350290298462, 0.8585391640663147, 0.8531237840652466, 0.8627657890319824, 0.8623695969581604, 0.8687095642089844, 0.8609166741371155, 0.8656716346740723], "val_loss": [2.2454609870910645, 2.0167078971862793, 1.1162861585617065, 0.873171865940094, 0.7730989456176758, 0.7224392890930176, 0.6740171909332275, 0.655273973941803, 0.6525832414627075, 0.6485037207603455, 0.5988116264343262, 0.5590116381645203, 0.5682082772254944, 0.5322685837745667, 0.535774827003479, 0.511239230632782, 0.5135906338691711, 0.5056284070014954, 0.5079843997955322, 0.5042118430137634, 0.5034018158912659, 0.48928117752075195, 0.48656517267227173, 0.49175122380256653, 0.4821799397468567, 0.4716596007347107, 0.47468486428260803, 0.45669451355934143, 0.4450257122516632, 0.4417419135570526, 0.4395856261253357, 0.44060391187667847, 0.4462733268737793, 0.44830355048179626, 0.4499201774597168, 0.4433349668979645, 0.42996200919151306, 0.43698424100875854, 0.43267807364463806, 0.4333265721797943, 0.442278653383255, 0.43897679448127747, 0.4218074083328247, 0.42972874641418457, 0.4337676465511322, 0.4334074854850769, 0.45551571249961853, 0.4495568573474884, 0.4550333619117737, 0.44736337661743164, 0.45742666721343994], "val_accuracy": [0.4020000100135803, 0.4423333406448364, 0.6603333353996277, 0.6970000267028809, 0.7049999833106995, 0.7393333315849304, 0.7403333187103271, 0.7540000081062317, 0.753333330154419, 0.746666669845581, 0.7706666588783264, 0.7746666669845581, 0.7823333144187927, 0.7986666560173035, 0.8023333549499512, 0.8033333420753479, 0.8069999814033508, 0.8113333582878113, 0.8023333549499512, 0.8106666803359985, 0.8083333373069763, 0.815666675567627, 0.8146666884422302, 0.8199999928474426, 0.8253333568572998, 0.8339999914169312, 0.8299999833106995, 0.8360000252723694, 0.840666651725769, 0.8410000205039978, 0.8429999947547913, 0.8433333039283752, 0.8476666808128357, 0.8529999852180481, 0.8506666421890259, 0.8513333201408386, 0.8556666374206543, 0.8553333282470703, 0.8560000061988831, 0.8583333492279053, 0.8640000224113464, 0.8650000095367432, 0.8643333315849304, 0.862666666507721, 0.8656666874885559, 0.8663333058357239, 0.8653333187103271, 0.8659999966621399, 0.8603333234786987, 0.8636666536331177, 0.8643333315849304]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 3, 2, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8268571496009827, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.590049147605896, 0.8864149451255798, 0.6785503029823303, 0.6223721504211426, 0.5802488327026367, 0.5418791770935059, 0.49454134702682495, 0.46641433238983154, 0.44657933712005615, 0.44360190629959106, 0.46051082015037537, 0.47223252058029175, 0.47052058577537537, 0.46487197279930115, 0.474636971950531], "accuracy": [0.4636111557483673, 0.6980583667755127, 0.7598732113838196, 0.7771760821342468, 0.791441023349762, 0.8037247657775879, 0.8255184292793274, 0.8333113193511963, 0.8347642421722412, 0.8408400416374207, 0.8412362933158875, 0.8309338092803955, 0.8318583965301514, 0.8362171649932861, 0.8366134166717529], "val_loss": [0.8915235996246338, 0.6064324378967285, 0.5741899609565735, 0.5416492819786072, 0.5580227971076965, 0.5275399684906006, 0.5102400183677673, 0.5067015886306763, 0.5313125848770142, 0.5224382877349854, 0.5420085191726685, 0.5470874309539795, 0.6152023077011108, 0.6181892156600952, 0.5971264839172363], "val_accuracy": [0.6766666769981384, 0.7696666717529297, 0.7879999876022339, 0.8069999814033508, 0.8016666769981384, 0.8223333358764648, 0.8173333406448364, 0.8306666612625122, 0.8190000057220459, 0.8346666693687439, 0.8226666450500488, 0.8339999914169312, 0.8309999704360962, 0.8289999961853027, 0.8233333230018616]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 2, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 2, 3, 0, 3, 4, 0, 2, 7, 1, 7, 3, 4, 4, 2, 7, 1, 5, 9, 3, 7, 8, 8, 5, 3, 2], [0, 1, 2, 4, 0, 1, 5, 2, 1, 4, 1, 3, 5, 3, 0, 1, 4, 1], [16, 16, 79, 18], [1, 1], [0, 9], [0], [70], [0, 1], [5], [1], [0]], "fitness": -0.12685714662075043, "mapping_values": [1, 9, 5, 4, 2, 44, 26, 18, 4, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(alpha, tf.constant(1.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.pow(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(tf.math.multiply(beta, tf.math.pow(tf.math.pow(tf.math.add(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), alpha), grad)), tf.math.add(beta, alpha)), tf.math.subtract(grad, alpha)), tf.math.square(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))))), grad), tf.math.multiply(tf.math.add(grad, tf.math.sqrt(grad)), tf.math.sqrt(tf.math.square(tf.math.multiply(tf.math.add(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), alpha), grad)))))), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.3154587745666504, 4125.203125, 268911936.0, NaN, NaN, NaN], "accuracy": [0.10210011899471283, 0.1010434553027153, 0.10170386731624603, 0.09681680053472519, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.6682486534118652, 142515.09375, 34149668749312.0, NaN, NaN, NaN], "val_accuracy": [0.12733332812786102, 0.09833333641290665, 0.09833333641290665, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 4, 3, 0, 3], [0, 1, 0, 2, 2], [39, 39], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3, 5, 2, 4, 6, 8, 0, 3], [0, 2, 0, 1, 0, 4, 4, 0], [16, 16, 85, 83], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 51, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 20, 12, 8, 4, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.pow(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(beta), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha))), tf.math.pow(tf.math.divide_no_nan(tf.math.sqrt(tf.math.negative(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), grad), tf.math.multiply(grad, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1], [2, 2, 3, 0, 8, 4, 1, 8, 7, 8, 4, 9], [0, 1, 0, 2, 3, 0, 0], [39, 39, 65, 28, 5], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 2, 9, 0, 3, 8, 8, 4, 9], [3, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 1, 8, 3, 4, 1, 4, 2, 8], [0, 0, 0, 1, 0, 0, 3, 1, 2, 1], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(tf.math.subtract(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad))), grad), tf.math.sqrt(tf.math.add(tf.math.sqrt(tf.math.pow(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.sqrt(grad)), tf.math.pow(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.sqrt(tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), alpha))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}, "mapping_values": [1, 19, 12, 7, 5, 11, 9, 2, 2, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 9, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 0, 1, 5], [0, 3, 0, 3], [16, 16], [0, 1], [0], [0], [60], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1], [6, 3, 8, 6, 8, 1, 4, 1, 4, 2, 8, 0], [0, 0, 0, 3, 0, 0, 3, 4, 2, 0], [16, 99, 96, 99, 7, 63]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 4, 1, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 12, 9, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.square(grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.add(sigma, tf.math.sqrt(tf.math.negative(grad))), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}]