[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8768571615219116, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222250461578369, 1.8634382486343384, 1.386461853981018, 1.0833044052124023, 0.9265413284301758, 0.8440244197845459, 0.7689846158027649, 0.7217835783958435, 0.6946391463279724, 0.6591481566429138, 0.6302332282066345, 0.6071098446846008, 0.58745938539505, 0.5740339159965515, 0.5700055360794067, 0.5476945638656616, 0.5300565958023071, 0.515175998210907, 0.5132865309715271, 0.49766114354133606, 0.4853062033653259, 0.4709930121898651, 0.4710473418235779, 0.45622146129608154, 0.4409819543361664, 0.44101276993751526, 0.42332780361175537, 0.42639458179473877, 0.413105309009552, 0.4150063693523407, 0.4078751504421234, 0.3973477780818939, 0.39182016253471375, 0.3888950049877167, 0.3774554133415222, 0.3726383447647095, 0.3688918352127075, 0.3662937879562378, 0.34987398982048035, 0.35581469535827637, 0.34829020500183105, 0.33901554346084595, 0.33875879645347595, 0.33434274792671204, 0.3242861330509186, 0.3246440291404724, 0.316322922706604, 0.3147198557853699, 0.30453887581825256, 0.30218783020973206, 0.3011622130870819, 0.2966826260089874], "accuracy": [0.2744683623313904, 0.4897635579109192, 0.5694096088409424, 0.6217144131660461, 0.6646413803100586, 0.6939638257026672, 0.7255316376686096, 0.7404569983482361, 0.7494386434555054, 0.7559106945991516, 0.7676661014556885, 0.7788931727409363, 0.7827235460281372, 0.7905164361000061, 0.7917051911354065, 0.7971205711364746, 0.8080834746360779, 0.8150838613510132, 0.8153480291366577, 0.8183859586715698, 0.8239334225654602, 0.830669641494751, 0.8300092220306396, 0.8387266993522644, 0.8397833704948425, 0.8421608805656433, 0.8455950617790222, 0.8449346423149109, 0.852331280708313, 0.8475762605667114, 0.850350022315979, 0.8577466607093811, 0.8562937378883362, 0.8622375130653381, 0.8676528930664062, 0.8672566413879395, 0.867520809173584, 0.8693699836730957, 0.8765024542808533, 0.8693699836730957, 0.8729361891746521, 0.8742570281028748, 0.8754457831382751, 0.878351628780365, 0.8824461698532104, 0.8805969953536987, 0.8819178342819214, 0.8868049383163452, 0.887597382068634, 0.8906353116035461, 0.887201189994812, 0.8918240666389465], "val_loss": [2.0386195182800293, 1.5141637325286865, 1.0538526773452759, 0.8596723675727844, 0.7759342193603516, 0.7192841172218323, 0.6771690249443054, 0.6437584757804871, 0.6193508505821228, 0.5922199487686157, 0.5729194283485413, 0.5551856756210327, 0.5385822653770447, 0.5257654786109924, 0.5165361166000366, 0.5011810660362244, 0.4919561743736267, 0.48552361130714417, 0.47933295369148254, 0.4656471014022827, 0.4598849415779114, 0.45053231716156006, 0.4469571113586426, 0.437753826379776, 0.434342622756958, 0.42675578594207764, 0.4235270917415619, 0.4175274670124054, 0.41885218024253845, 0.4114329516887665, 0.4080221652984619, 0.403830349445343, 0.40030863881111145, 0.3936823010444641, 0.39308154582977295, 0.3908149003982544, 0.38946422934532166, 0.38555654883384705, 0.385292649269104, 0.37694936990737915, 0.3787061274051666, 0.3754332959651947, 0.37116917967796326, 0.3721087574958801, 0.36685043573379517, 0.36866259574890137, 0.3663710057735443, 0.36438125371932983, 0.3633136749267578, 0.36815738677978516, 0.3613807260990143, 0.3633389472961426], "val_accuracy": [0.5276666879653931, 0.6579999923706055, 0.6809999942779541, 0.7016666531562805, 0.7269999980926514, 0.7383333444595337, 0.7506666779518127, 0.7563333511352539, 0.7643333077430725, 0.7766666412353516, 0.7789999842643738, 0.7913333177566528, 0.79666668176651, 0.8036666512489319, 0.8026666641235352, 0.8106666803359985, 0.8183333277702332, 0.8220000267028809, 0.8230000138282776, 0.8293333053588867, 0.831333339214325, 0.8403333425521851, 0.8343333601951599, 0.8423333168029785, 0.8403333425521851, 0.8443333506584167, 0.8450000286102295, 0.8473333120346069, 0.8479999899864197, 0.846666693687439, 0.8566666841506958, 0.8539999723434448, 0.8546666502952576, 0.8583333492279053, 0.8573333621025085, 0.8600000143051147, 0.859666645526886, 0.8603333234786987, 0.8616666793823242, 0.8673333525657654, 0.8629999756813049, 0.8666666746139526, 0.8646666407585144, 0.8646666407585144, 0.8706666827201843, 0.8673333525657654, 0.8726666569709778, 0.8659999966621399, 0.8703333139419556, 0.8643333315849304, 0.8693333268165588, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.87628573179245, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223012685775757, 1.8657344579696655, 1.3874669075012207, 1.0859594345092773, 0.9318332076072693, 0.8379514813423157, 0.7700290679931641, 0.7260014414787292, 0.6895575523376465, 0.6513591408729553, 0.6309117078781128, 0.6072600483894348, 0.5890597105026245, 0.5756368637084961, 0.5566703677177429, 0.5519921779632568, 0.5363273620605469, 0.5178518295288086, 0.5026648640632629, 0.5023508071899414, 0.4903339445590973, 0.482776403427124, 0.4665617346763611, 0.45857882499694824, 0.4477233290672302, 0.4439493715763092, 0.43580809235572815, 0.4240801930427551, 0.4224990904331207, 0.41605260968208313, 0.412312775850296, 0.41307324171066284, 0.3970508575439453, 0.39837539196014404, 0.38143256306648254, 0.3840862512588501, 0.3751875162124634, 0.3683679699897766, 0.3677208125591278, 0.36114755272865295, 0.3585681915283203, 0.34844091534614563, 0.3395259976387024, 0.34205707907676697, 0.341220498085022, 0.32902199029922485, 0.33287790417671204, 0.31664395332336426, 0.32079070806503296, 0.3123977482318878, 0.306368887424469, 0.310676246881485, 0.29882892966270447, 0.2918075919151306, 0.2978742718696594, 0.2895963788032532, 0.2845529019832611, 0.27806028723716736, 0.2759464681148529, 0.2694965898990631, 0.26960527896881104, 0.2592954933643341, 0.26350072026252747, 0.26126962900161743, 0.25962892174720764, 0.2551079988479614, 0.2546420097351074, 0.24739883840084076, 0.242775559425354, 0.24025054275989532, 0.24196039140224457, 0.23178885877132416, 0.22949105501174927, 0.2311524897813797, 0.22464655339717865, 0.22300845384597778, 0.21862703561782837, 0.21264196932315826, 0.2188115268945694, 0.21191492676734924, 0.20223009586334229, 0.19954194128513336, 0.1997854858636856, 0.20102272927761078, 0.1877356618642807, 0.1921302229166031, 0.18911884725093842, 0.1873830407857895, 0.1823394000530243], "accuracy": [0.27724209427833557, 0.4975564777851105, 0.5678246021270752, 0.6273940205574036, 0.6675472259521484, 0.6944921612739563, 0.7195879220962524, 0.7296261787414551, 0.7470611333847046, 0.7613261342048645, 0.7688548564910889, 0.7733456492424011, 0.7873464822769165, 0.789988100528717, 0.7993659973144531, 0.8039889335632324, 0.8021397590637207, 0.816008448600769, 0.819442629814148, 0.8157442808151245, 0.819970965385437, 0.8296129703521729, 0.8301413059234619, 0.8358209133148193, 0.8417646288871765, 0.8389908671379089, 0.843481719493866, 0.8473120927810669, 0.8498216867446899, 0.8499537706375122, 0.8531237840652466, 0.8556333184242249, 0.8576145768165588, 0.8597279191017151, 0.8625016212463379, 0.8626337051391602, 0.8627657890319824, 0.868049144744873, 0.8692378997802734, 0.8728041052818298, 0.8721436858177185, 0.8751816153526306, 0.8778232932090759, 0.8787478804588318, 0.8779553771018982, 0.883238673210144, 0.8821820020675659, 0.8877294659614563, 0.882710337638855, 0.8874653577804565, 0.8873332738876343, 0.8932769894599915, 0.8924844861030579, 0.894069492816925, 0.8893144726753235, 0.8948619961738586, 0.8973715305328369, 0.8996169567108154, 0.9002773761749268, 0.900409460067749, 0.9038436412811279, 0.9083344340324402, 0.9063531756401062, 0.9060890078544617, 0.9051644206047058, 0.9082023501396179, 0.9080702662467957, 0.9113723635673523, 0.9128252267837524, 0.9157310724258423, 0.9120327830314636, 0.9161273241043091, 0.9171839952468872, 0.9152027368545532, 0.9174481630325317, 0.9165235757827759, 0.9206181764602661, 0.9204860925674438, 0.9194294214248657, 0.9225993752479553, 0.9240522980690002, 0.9262977242469788, 0.9257693886756897, 0.9274864792823792, 0.9317131042480469, 0.9285431504249573, 0.9299960136413574, 0.930260181427002, 0.9340906143188477], "val_loss": [2.043855905532837, 1.525606393814087, 1.069007158279419, 0.8636356592178345, 0.7817422747612, 0.7251882553100586, 0.6819623112678528, 0.6491124033927917, 0.621680498123169, 0.5989669561386108, 0.5772291421890259, 0.5643864870071411, 0.546754002571106, 0.5390124320983887, 0.5361806154251099, 0.5149908065795898, 0.5049435496330261, 0.49786287546157837, 0.48853620886802673, 0.48416927456855774, 0.47159484028816223, 0.4674266278743744, 0.4605587124824524, 0.4513109624385834, 0.45014119148254395, 0.4432813227176666, 0.4379260241985321, 0.4392315745353699, 0.4323822557926178, 0.430172324180603, 0.42514750361442566, 0.42122435569763184, 0.42560234665870667, 0.41644230484962463, 0.40819865465164185, 0.40716397762298584, 0.4047580659389496, 0.4052199721336365, 0.39718323945999146, 0.3927386999130249, 0.3914852440357208, 0.3900202512741089, 0.38797229528427124, 0.39095091819763184, 0.384647935628891, 0.3855312466621399, 0.37965935468673706, 0.37719759345054626, 0.3838367164134979, 0.37766069173812866, 0.3770780563354492, 0.3829393684864044, 0.3709803521633148, 0.37694957852363586, 0.37252670526504517, 0.3681741952896118, 0.3685416579246521, 0.3639441430568695, 0.37205764651298523, 0.37014254927635193, 0.3643263280391693, 0.3659517765045166, 0.3685900568962097, 0.36352524161338806, 0.3657030463218689, 0.36625850200653076, 0.36673784255981445, 0.3594380021095276, 0.3652884066104889, 0.3614119589328766, 0.3644164204597473, 0.3653337359428406, 0.3675883114337921, 0.36069950461387634, 0.36114755272865295, 0.3575563132762909, 0.35801559686660767, 0.3651983141899109, 0.3567609190940857, 0.36363402009010315, 0.35350501537323, 0.3602824807167053, 0.357979953289032, 0.3663266897201538, 0.3617679178714752, 0.35858777165412903, 0.36914756894111633, 0.36121082305908203, 0.3709811568260193], "val_accuracy": [0.5490000247955322, 0.6496666669845581, 0.6656666398048401, 0.6909999847412109, 0.7179999947547913, 0.7333333492279053, 0.7409999966621399, 0.753000020980835, 0.7689999938011169, 0.7799999713897705, 0.7906666398048401, 0.7963333129882812, 0.8006666898727417, 0.8086666464805603, 0.8026666641235352, 0.8153333067893982, 0.8213333487510681, 0.8196666836738586, 0.8230000138282776, 0.8296666741371155, 0.8296666741371155, 0.8349999785423279, 0.8323333263397217, 0.8383333086967468, 0.8399999737739563, 0.843666672706604, 0.840666651725769, 0.8363333344459534, 0.8429999947547913, 0.846666693687439, 0.843999981880188, 0.8476666808128357, 0.8483333587646484, 0.8486666679382324, 0.8506666421890259, 0.8566666841506958, 0.8550000190734863, 0.8506666421890259, 0.8566666841506958, 0.8616666793823242, 0.8636666536331177, 0.859000027179718, 0.8640000224113464, 0.8606666922569275, 0.8603333234786987, 0.8613333106040955, 0.8643333315849304, 0.8686666488647461, 0.8653333187103271, 0.8679999709129333, 0.8646666407585144, 0.8693333268165588, 0.8679999709129333, 0.8676666617393494, 0.8709999918937683, 0.871666669845581, 0.8703333139419556, 0.8709999918937683, 0.8706666827201843, 0.8696666955947876, 0.8726666569709778, 0.8730000257492065, 0.871666669845581, 0.8763333559036255, 0.8723333477973938, 0.8769999742507935, 0.8743333220481873, 0.875333309173584, 0.8730000257492065, 0.8776666522026062, 0.8769999742507935, 0.8756666779518127, 0.878000020980835, 0.8769999742507935, 0.8773333430290222, 0.8806666731834412, 0.878000020980835, 0.8793333172798157, 0.8833333253860474, 0.8803333044052124, 0.8806666731834412, 0.8820000290870667, 0.8803333044052124, 0.8859999775886536, 0.8816666603088379, 0.878000020980835, 0.8836666941642761, 0.8820000290870667, 0.8833333253860474]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8428571224212646, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2926957607269287, 2.1874685287475586, 1.7603950500488281, 1.3586381673812866, 1.0689765214920044, 0.9199627637863159, 0.8500035405158997, 0.8097981810569763, 0.7769133448600769, 0.7438977956771851, 0.7036346793174744, 0.6933515667915344, 0.6770272254943848, 0.6226027607917786, 0.6153878569602966, 0.596000611782074, 0.5856580138206482, 0.564927339553833, 0.5628102421760559, 0.548401415348053, 0.5408985614776611, 0.5288047790527344, 0.5145454406738281, 0.5129230618476868, 0.5062440633773804, 0.48862358927726746, 0.48022136092185974, 0.4764961302280426, 0.4752133786678314, 0.452066570520401, 0.45315486192703247, 0.4429115653038025, 0.44108083844184875, 0.4424009919166565, 0.4291328191757202, 0.41721871495246887, 0.41639623045921326, 0.41207098960876465, 0.38818657398223877, 0.40168073773384094, 0.4002726972103119, 0.3918837010860443, 0.3842928409576416, 0.38121822476387024], "accuracy": [0.1278562992811203, 0.31937655806541443, 0.4357416331768036, 0.5416721701622009, 0.6388852000236511, 0.6656980514526367, 0.6888125538825989, 0.707040011882782, 0.7055870890617371, 0.7082287669181824, 0.7387399077415466, 0.7325320243835449, 0.7337207794189453, 0.7604015469551086, 0.7650244235992432, 0.770439863204956, 0.7765156626701355, 0.7835160493850708, 0.7852331399917603, 0.7938185334205627, 0.7988376617431641, 0.8030643463134766, 0.7998943328857422, 0.8049134612083435, 0.8094043135643005, 0.8100647330284119, 0.8166688680648804, 0.819442629814148, 0.8202351331710815, 0.8261788487434387, 0.8302733898162842, 0.8294808864593506, 0.8273676037788391, 0.8338396549224854, 0.8411042094230652, 0.8417646288871765, 0.8488970994949341, 0.8421608805656433, 0.8536521196365356, 0.8494254350662231, 0.8445383906364441, 0.8482366800308228, 0.8473120927810669, 0.8498216867446899], "val_loss": [2.2451179027557373, 2.013497829437256, 1.1242481470108032, 0.8301897048950195, 0.7608197331428528, 0.7006413340568542, 0.6411965489387512, 0.6267483830451965, 0.6109452843666077, 0.5708749294281006, 0.562207818031311, 0.5466859340667725, 0.5071589946746826, 0.5043140053749084, 0.48657140135765076, 0.48816773295402527, 0.46750330924987793, 0.46322500705718994, 0.45425495505332947, 0.45531412959098816, 0.44013598561286926, 0.43576285243034363, 0.4333477318286896, 0.429801344871521, 0.4232877194881439, 0.4191923439502716, 0.4131912291049957, 0.4094386100769043, 0.4004153907299042, 0.39385953545570374, 0.39610064029693604, 0.3960440158843994, 0.3942362070083618, 0.3998241722583771, 0.3974941074848175, 0.3951044976711273, 0.38793236017227173, 0.38224610686302185, 0.38866889476776123, 0.3837672472000122, 0.38394713401794434, 0.3954230546951294, 0.38456469774246216, 0.3949875831604004], "val_accuracy": [0.4333333373069763, 0.4566666781902313, 0.6506666541099548, 0.7070000171661377, 0.7260000109672546, 0.7266666889190674, 0.7473333477973938, 0.7593333125114441, 0.7733333110809326, 0.7796666622161865, 0.7789999842643738, 0.7919999957084656, 0.7946666479110718, 0.7919999957084656, 0.8190000057220459, 0.8096666932106018, 0.8196666836738586, 0.8203333616256714, 0.8286666870117188, 0.8243333101272583, 0.8309999704360962, 0.8343333601951599, 0.8383333086967468, 0.8389999866485596, 0.843999981880188, 0.8503333330154419, 0.8486666679382324, 0.8453333377838135, 0.8473333120346069, 0.8513333201408386, 0.8536666631698608, 0.8500000238418579, 0.847000002861023, 0.8529999852180481, 0.8553333282470703, 0.8579999804496765, 0.8619999885559082, 0.8633333444595337, 0.8653333187103271, 0.862666666507721, 0.862666666507721, 0.8606666922569275, 0.8643333315849304, 0.8643333315849304]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 0, 1], [0, 8, 8, 5], [0], [0], [1], [0], [2], [0]], "fitness": -0.8325714468955994, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.sqrt(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5952987670898438, 0.8086138367652893, 0.6498567461967468, 0.5916833877563477, 0.5372931957244873, 0.5184592008590698, 0.5075112581253052, 0.47605597972869873, 0.4913063943386078, 0.5078796148300171, 0.5024981498718262, 0.4985557794570923, 0.5256044268608093, 0.49029096961021423], "accuracy": [0.4633469879627228, 0.7082287669181824, 0.7580240368843079, 0.783119797706604, 0.7997622489929199, 0.817989706993103, 0.8191784620285034, 0.8276317715644836, 0.8251221776008606, 0.817461371421814, 0.8245938420295715, 0.8240655064582825, 0.8273676037788391, 0.8273676037788391], "val_loss": [0.8779221773147583, 0.59781813621521, 0.5252791047096252, 0.4987247586250305, 0.49433812499046326, 0.4745955765247345, 0.4916353225708008, 0.4740830957889557, 0.5151300430297852, 0.5175551176071167, 0.6140766739845276, 0.5742508769035339, 0.6226710677146912, 0.5793916583061218], "val_accuracy": [0.7083333134651184, 0.7823333144187927, 0.812666654586792, 0.8303333520889282, 0.8296666741371155, 0.8323333263397217, 0.8366666436195374, 0.8233333230018616, 0.8473333120346069, 0.8233333230018616, 0.8336666822433472, 0.8276666402816772, 0.8360000252723694, 0.8333333134651184]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 5, 4, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [6, 2, 3, 0, 3, 8], [0, 1, 0, 2, 2], [25, 68], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 2, 3, 9, 3, 5, 6, 9], [1, 2, 0, 3], [16, 16, 65], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [6, 6, 3, 6, 8, 1, 4, 1, 4, 2, 3, 3, 2, 6, 0, 6, 1, 2, 9, 0, 0, 9], [0, 0, 0, 3, 0, 4, 0, 1, 2, 0, 7, 3, 0, 2, 0], [16, 99, 96, 99, 61, 1, 93, 6, 4, 88]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 11, 8, 3, 3, 1, 0, 1, 1, 37, 22, 15, 10], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), grad)), tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.square(beta))), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.multiply(tf.math.multiply(alpha, tf.math.add(beta, tf.math.divide_no_nan(tf.math.negative(tf.math.divide_no_nan(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), grad), sigma))), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))), beta), tf.math.negative(tf.math.negative(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))))), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 1, 0, 2], [37, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 9, 5], [0, 2, 0, 3], [16, 83], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1], [6, 3, 5, 6, 8, 1, 4, 2, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 3, 2, 0], [16, 35, 32, 1, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 7, 5, 2, 2, 2, 1, 1, 1, 11, 6, 5, 4], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.math.multiply(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.3027994632720947, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 0, 3, 0, 3], [0, 0, 1, 0, 2], [39, 39], [0, 0, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [0, 17], [0, 1], [0], [7], [84], [0, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [1, 1, 2], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 3, 2, 2, 6, 3, 3, 2, 2, 1, 1, 0, 5, 2, 3, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), beta), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, tf.math.multiply(alpha, beta))", "other_info": {"loss": [2.302881956100464, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 0, 3, 2, 7], [1, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 2, 3, 0, 8, 5], [0, 4, 0, 3], [0, 78], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 3, 4, 8, 6, 7, 6, 9], [0, 3, 4, 1, 2], [0, 54], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 3, 3, 4, 9, 7, 7, 0], [0, 1, 0, 3, 0, 0, 3, 1, 2, 0], [0, 41, 76, 36, 41]], "fitness": -0.09285714477300644, "mapping_values": [1, 7, 4, 3, 1, 6, 3, 3, 2, 13, 8, 5, 2, 2, 1, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.pow(tf.math.sqrt(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), sigma)), tf.math.add(grad, tf.math.divide_no_nan(alpha, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.310783863067627, 2.311100721359253, 2.3113656044006348, 2.309939384460449, 2.3102097511291504, 2.309990406036377], "accuracy": [0.08717474341392517, 0.09285431355237961, 0.09417514503002167, 0.0956280529499054, 0.09192973375320435, 0.09391097724437714], "val_loss": [2.308795928955078, 2.308795928955078, 2.308795928955078, 2.308795928955078, 2.308795928955078, 2.308795928955078], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}]