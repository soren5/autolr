[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8768571615219116, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222250461578369, 1.8634382486343384, 1.386461853981018, 1.0833044052124023, 0.9265413284301758, 0.8440244197845459, 0.7689846158027649, 0.7217835783958435, 0.6946391463279724, 0.6591481566429138, 0.6302332282066345, 0.6071098446846008, 0.58745938539505, 0.5740339159965515, 0.5700055360794067, 0.5476945638656616, 0.5300565958023071, 0.515175998210907, 0.5132865309715271, 0.49766114354133606, 0.4853062033653259, 0.4709930121898651, 0.4710473418235779, 0.45622146129608154, 0.4409819543361664, 0.44101276993751526, 0.42332780361175537, 0.42639458179473877, 0.413105309009552, 0.4150063693523407, 0.4078751504421234, 0.3973477780818939, 0.39182016253471375, 0.3888950049877167, 0.3774554133415222, 0.3726383447647095, 0.3688918352127075, 0.3662937879562378, 0.34987398982048035, 0.35581469535827637, 0.34829020500183105, 0.33901554346084595, 0.33875879645347595, 0.33434274792671204, 0.3242861330509186, 0.3246440291404724, 0.316322922706604, 0.3147198557853699, 0.30453887581825256, 0.30218783020973206, 0.3011622130870819, 0.2966826260089874], "accuracy": [0.2744683623313904, 0.4897635579109192, 0.5694096088409424, 0.6217144131660461, 0.6646413803100586, 0.6939638257026672, 0.7255316376686096, 0.7404569983482361, 0.7494386434555054, 0.7559106945991516, 0.7676661014556885, 0.7788931727409363, 0.7827235460281372, 0.7905164361000061, 0.7917051911354065, 0.7971205711364746, 0.8080834746360779, 0.8150838613510132, 0.8153480291366577, 0.8183859586715698, 0.8239334225654602, 0.830669641494751, 0.8300092220306396, 0.8387266993522644, 0.8397833704948425, 0.8421608805656433, 0.8455950617790222, 0.8449346423149109, 0.852331280708313, 0.8475762605667114, 0.850350022315979, 0.8577466607093811, 0.8562937378883362, 0.8622375130653381, 0.8676528930664062, 0.8672566413879395, 0.867520809173584, 0.8693699836730957, 0.8765024542808533, 0.8693699836730957, 0.8729361891746521, 0.8742570281028748, 0.8754457831382751, 0.878351628780365, 0.8824461698532104, 0.8805969953536987, 0.8819178342819214, 0.8868049383163452, 0.887597382068634, 0.8906353116035461, 0.887201189994812, 0.8918240666389465], "val_loss": [2.0386195182800293, 1.5141637325286865, 1.0538526773452759, 0.8596723675727844, 0.7759342193603516, 0.7192841172218323, 0.6771690249443054, 0.6437584757804871, 0.6193508505821228, 0.5922199487686157, 0.5729194283485413, 0.5551856756210327, 0.5385822653770447, 0.5257654786109924, 0.5165361166000366, 0.5011810660362244, 0.4919561743736267, 0.48552361130714417, 0.47933295369148254, 0.4656471014022827, 0.4598849415779114, 0.45053231716156006, 0.4469571113586426, 0.437753826379776, 0.434342622756958, 0.42675578594207764, 0.4235270917415619, 0.4175274670124054, 0.41885218024253845, 0.4114329516887665, 0.4080221652984619, 0.403830349445343, 0.40030863881111145, 0.3936823010444641, 0.39308154582977295, 0.3908149003982544, 0.38946422934532166, 0.38555654883384705, 0.385292649269104, 0.37694936990737915, 0.3787061274051666, 0.3754332959651947, 0.37116917967796326, 0.3721087574958801, 0.36685043573379517, 0.36866259574890137, 0.3663710057735443, 0.36438125371932983, 0.3633136749267578, 0.36815738677978516, 0.3613807260990143, 0.3633389472961426], "val_accuracy": [0.5276666879653931, 0.6579999923706055, 0.6809999942779541, 0.7016666531562805, 0.7269999980926514, 0.7383333444595337, 0.7506666779518127, 0.7563333511352539, 0.7643333077430725, 0.7766666412353516, 0.7789999842643738, 0.7913333177566528, 0.79666668176651, 0.8036666512489319, 0.8026666641235352, 0.8106666803359985, 0.8183333277702332, 0.8220000267028809, 0.8230000138282776, 0.8293333053588867, 0.831333339214325, 0.8403333425521851, 0.8343333601951599, 0.8423333168029785, 0.8403333425521851, 0.8443333506584167, 0.8450000286102295, 0.8473333120346069, 0.8479999899864197, 0.846666693687439, 0.8566666841506958, 0.8539999723434448, 0.8546666502952576, 0.8583333492279053, 0.8573333621025085, 0.8600000143051147, 0.859666645526886, 0.8603333234786987, 0.8616666793823242, 0.8673333525657654, 0.8629999756813049, 0.8666666746139526, 0.8646666407585144, 0.8646666407585144, 0.8706666827201843, 0.8673333525657654, 0.8726666569709778, 0.8659999966621399, 0.8703333139419556, 0.8643333315849304, 0.8693333268165588, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8637142777442932, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222273349761963, 1.8682036399841309, 1.3918437957763672, 1.095993995666504, 0.9235577583312988, 0.8303059339523315, 0.7712467312812805, 0.7223535776138306, 0.6810452938079834, 0.6609415411949158, 0.6313562393188477, 0.6028788089752197, 0.5904046297073364, 0.5564221143722534, 0.5482020378112793, 0.5361112356185913, 0.520836591720581, 0.5164089202880859, 0.49789056181907654, 0.49811211228370667, 0.4784095883369446, 0.4667094945907593, 0.46401888132095337, 0.4532919228076935, 0.44479089975357056, 0.4301939010620117, 0.433377206325531, 0.4288964867591858, 0.41403520107269287, 0.4110667109489441, 0.40358343720436096, 0.3929627239704132, 0.38643747568130493, 0.37593337893486023, 0.38332003355026245, 0.3726836144924164, 0.37144631147384644, 0.35636886954307556, 0.3642846345901489, 0.3531433045864105, 0.3482903242111206, 0.34186843037605286, 0.3349236845970154, 0.3332602083683014, 0.32501330971717834, 0.3185020983219147, 0.32359644770622253, 0.31436383724212646, 0.3076415956020355, 0.3023582398891449, 0.3002694547176361, 0.29553696513175964, 0.29165831208229065, 0.283447802066803, 0.2841883897781372, 0.2811007499694824, 0.2678768038749695, 0.27035513520240784, 0.2610336244106293, 0.2558306157588959, 0.2549540400505066, 0.24994559586048126, 0.2505279779434204, 0.24297668039798737], "accuracy": [0.2769779562950134, 0.4859331548213959, 0.5638620853424072, 0.6155065298080444, 0.6730946898460388, 0.698190450668335, 0.7240787148475647, 0.7390040755271912, 0.7490423917770386, 0.7557786107063293, 0.7692511081695557, 0.7824593782424927, 0.7907806038856506, 0.7928939461708069, 0.8029322624206543, 0.8076872229576111, 0.8121780753135681, 0.8158763647079468, 0.81548011302948, 0.8178576231002808, 0.8304054737091064, 0.8297450542449951, 0.8329150676727295, 0.8368775844573975, 0.8413683772087097, 0.8500858545303345, 0.8450667262077332, 0.8455950617790222, 0.8508783578872681, 0.8524633646011353, 0.8569541573524475, 0.8597279191017151, 0.8625016212463379, 0.8634262084960938, 0.8646149635314941, 0.8683133125305176, 0.8665962219238281, 0.8730682730674744, 0.8663320541381836, 0.8725399374961853, 0.873860776424408, 0.8794082403182983, 0.8792761564254761, 0.8787478804588318, 0.884691596031189, 0.8874653577804565, 0.8799365758895874, 0.884691596031189, 0.8893144726753235, 0.893541157245636, 0.8894465565681458, 0.8927486538887024, 0.893541157245636, 0.897899866104126, 0.8920882344245911, 0.8996169567108154, 0.9037115573883057, 0.9030511379241943, 0.9083344340324402, 0.9074098467826843, 0.9060890078544617, 0.9093911051750183, 0.9055606722831726, 0.9140139818191528], "val_loss": [2.0354957580566406, 1.5068340301513672, 1.0288634300231934, 0.8146576881408691, 0.7214062213897705, 0.6677454710006714, 0.6250535249710083, 0.5925361514091492, 0.5644144415855408, 0.5415877103805542, 0.5266120433807373, 0.5066528916358948, 0.49780476093292236, 0.48056352138519287, 0.4692961573600769, 0.46171194314956665, 0.4520342946052551, 0.4463830590248108, 0.4358471632003784, 0.4241444170475006, 0.42142635583877563, 0.41490137577056885, 0.4108041226863861, 0.40447989106178284, 0.401698499917984, 0.3942825496196747, 0.4013764560222626, 0.39035627245903015, 0.38368314504623413, 0.3835015892982483, 0.37767353653907776, 0.3705253601074219, 0.3714410662651062, 0.37172722816467285, 0.3781527578830719, 0.35978642106056213, 0.3566834330558777, 0.360125333070755, 0.3551361858844757, 0.3510532081127167, 0.35080069303512573, 0.35443323850631714, 0.34945470094680786, 0.3437771797180176, 0.34386518597602844, 0.34309622645378113, 0.33968499302864075, 0.34350496530532837, 0.34135669469833374, 0.33700528740882874, 0.3349250853061676, 0.3335474729537964, 0.32918497920036316, 0.33511286973953247, 0.3295508623123169, 0.33459237217903137, 0.3325583338737488, 0.32911255955696106, 0.329933762550354, 0.3307906687259674, 0.3253170847892761, 0.32771334052085876, 0.33114221692085266, 0.32531338930130005], "val_accuracy": [0.5306666493415833, 0.6526666879653931, 0.6923333406448364, 0.7233333587646484, 0.7409999966621399, 0.7609999775886536, 0.7693333625793457, 0.7793333530426025, 0.7929999828338623, 0.7960000038146973, 0.8116666674613953, 0.8159999847412109, 0.8146666884422302, 0.8230000138282776, 0.8276666402816772, 0.8389999866485596, 0.8353333473205566, 0.8410000205039978, 0.8453333377838135, 0.8539999723434448, 0.8506666421890259, 0.8543333411216736, 0.8556666374206543, 0.859333336353302, 0.8550000190734863, 0.862333357334137, 0.8606666922569275, 0.862666666507721, 0.862333357334137, 0.859666645526886, 0.8656666874885559, 0.8696666955947876, 0.8650000095367432, 0.8683333396911621, 0.862333357334137, 0.871999979019165, 0.8730000257492065, 0.8700000047683716, 0.8713333606719971, 0.875, 0.8726666569709778, 0.8676666617393494, 0.8726666569709778, 0.875333309173584, 0.875, 0.8743333220481873, 0.8799999952316284, 0.8769999742507935, 0.878000020980835, 0.8793333172798157, 0.8806666731834412, 0.8786666393280029, 0.8806666731834412, 0.8813333511352539, 0.8820000290870667, 0.8766666650772095, 0.8826666474342346, 0.8830000162124634, 0.8846666812896729, 0.8820000290870667, 0.8840000033378601, 0.8843333125114441, 0.8846666812896729, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 1, 1], [0, 6, 8], [0, 0], [0, 96], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8482857346534729, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294639825820923, 2.1922075748443604, 1.7826848030090332, 1.3808358907699585, 1.0631853342056274, 0.9186052083969116, 0.8313037157058716, 0.8111603856086731, 0.7608320713043213, 0.7391939163208008, 0.6891743540763855, 0.6708598136901855, 0.6457968950271606, 0.6425728797912598, 0.6019415259361267, 0.6033678650856018, 0.5794215798377991, 0.5632103681564331, 0.5499861240386963, 0.5362235903739929, 0.5213008522987366, 0.5169994831085205, 0.5007936358451843, 0.4922901391983032, 0.4915822744369507, 0.4741957485675812, 0.4623638391494751, 0.45978665351867676, 0.44587287306785583, 0.4433346092700958, 0.4277523159980774, 0.4318405091762543, 0.4244634807109833, 0.40005654096603394, 0.4064146876335144, 0.3986155688762665, 0.38201195001602173, 0.3875427842140198, 0.3743809759616852, 0.3703078627586365, 0.35645145177841187, 0.35950472950935364, 0.3539597988128662, 0.3419305384159088, 0.33907800912857056, 0.34131667017936707, 0.31793561577796936, 0.32115504145622253, 0.32362234592437744], "accuracy": [0.1294412910938263, 0.32267865538597107, 0.4399682879447937, 0.5342755317687988, 0.637828528881073, 0.6700568199157715, 0.691850483417511, 0.7086250185966492, 0.71100252866745, 0.7173424959182739, 0.7397965788841248, 0.7423061728477478, 0.7556465268135071, 0.7604015469551086, 0.7769119143486023, 0.77677983045578, 0.7819310426712036, 0.7928939461708069, 0.7972526550292969, 0.802271842956543, 0.8049134612083435, 0.8075551390647888, 0.8119139075279236, 0.8170651197433472, 0.8171972036361694, 0.8247259259223938, 0.82683926820755, 0.8301413059234619, 0.8297450542449951, 0.8388587832450867, 0.8424250483512878, 0.8393871188163757, 0.8401796221733093, 0.8473120927810669, 0.845859169960022, 0.8487650156021118, 0.856689989566803, 0.8549728989601135, 0.8618412613868713, 0.8584070801734924, 0.8632941246032715, 0.869502067565918, 0.8676528930664062, 0.8708229064941406, 0.8737286925315857, 0.8702945709228516, 0.8812574148178101, 0.8766345381736755, 0.8729361891746521], "val_loss": [2.2466485500335693, 2.027925491333008, 1.163565754890442, 0.8885263800621033, 0.7546747922897339, 0.7109410762786865, 0.6452637910842896, 0.6313877105712891, 0.6034987568855286, 0.5862095355987549, 0.5532754063606262, 0.5343050360679626, 0.5095698237419128, 0.49621906876564026, 0.49857527017593384, 0.4804924428462982, 0.47353604435920715, 0.4583905339241028, 0.4573846459388733, 0.4506807029247284, 0.45287615060806274, 0.43969401717185974, 0.43230342864990234, 0.4258454442024231, 0.42310261726379395, 0.41251879930496216, 0.4162657856941223, 0.410840779542923, 0.4066307842731476, 0.40368416905403137, 0.40987056493759155, 0.3941118121147156, 0.3839963376522064, 0.38675037026405334, 0.3813632130622864, 0.3723762333393097, 0.37014612555503845, 0.37248143553733826, 0.3685266077518463, 0.3792363405227661, 0.3720073103904724, 0.38086503744125366, 0.3699803948402405, 0.3575957119464874, 0.36561548709869385, 0.3671790659427643, 0.36805635690689087, 0.3677601218223572, 0.37308967113494873], "val_accuracy": [0.39633333683013916, 0.46799999475479126, 0.6340000033378601, 0.690666675567627, 0.7263333201408386, 0.7319999933242798, 0.7459999918937683, 0.7566666603088379, 0.7663333415985107, 0.7693333625793457, 0.7726666927337646, 0.7856666445732117, 0.8006666898727417, 0.8069999814033508, 0.8006666898727417, 0.8063333630561829, 0.815666675567627, 0.8159999847412109, 0.8270000219345093, 0.8289999961853027, 0.8266666531562805, 0.8370000123977661, 0.8429999947547913, 0.8393333554267883, 0.8429999947547913, 0.8453333377838135, 0.8493333458900452, 0.8513333201408386, 0.8506666421890259, 0.8550000190734863, 0.8586666584014893, 0.859666645526886, 0.8629999756813049, 0.8560000061988831, 0.8636666536331177, 0.8659999966621399, 0.8679999709129333, 0.8693333268165588, 0.8706666827201843, 0.8640000224113464, 0.871666669845581, 0.8656666874885559, 0.8686666488647461, 0.8773333430290222, 0.8763333559036255, 0.8766666650772095, 0.8766666650772095, 0.875333309173584, 0.8730000257492065]}, "mapping_values": [1, 10, 5, 5, 3, 5, 3, 2, 2, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 1], [0, 5, 3, 4], [0, 4, 0], [0, 82], [1], [0], [2], [0]], "fitness": -0.8371428847312927, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5261895656585693, 0.8785282373428345, 0.7384977340698242, 0.6572943329811096, 0.6013917922973633, 0.5499668121337891, 0.5065054893493652, 0.5027866363525391, 0.5097706913948059, 0.49497297406196594, 0.47188839316368103, 0.465518593788147, 0.44677579402923584, 0.430195689201355, 0.44592222571372986, 0.45049577951431274, 0.475472092628479, 0.5036954879760742, 0.45736926794052124, 0.43448391556739807, 0.45195695757865906], "accuracy": [0.4835556745529175, 0.7088891863822937, 0.7331924438476562, 0.7574957013130188, 0.7693831920623779, 0.7996301651000977, 0.8124422430992126, 0.8190463781356812, 0.8202351331710815, 0.8276317715644836, 0.828292191028595, 0.8417646288871765, 0.8400475382804871, 0.8461233377456665, 0.848368763923645, 0.8408400416374207, 0.8490291833877563, 0.8389908671379089, 0.8445383906364441, 0.8451988101005554, 0.8502179384231567], "val_loss": [0.8828116059303284, 0.6267176866531372, 0.5397759675979614, 0.5056490302085876, 0.48959073424339294, 0.4370570182800293, 0.42741817235946655, 0.424994558095932, 0.4490947127342224, 0.44140100479125977, 0.4178977906703949, 0.4474944770336151, 0.45619872212409973, 0.45242345333099365, 0.440388023853302, 0.47247403860092163, 0.4772677421569824, 0.5055872201919556, 0.5119693279266357, 0.484620064496994, 0.5665378570556641], "val_accuracy": [0.7369999885559082, 0.7723333239555359, 0.8029999732971191, 0.8033333420753479, 0.8343333601951599, 0.8413333296775818, 0.8413333296775818, 0.8539999723434448, 0.8416666388511658, 0.8526666760444641, 0.8566666841506958, 0.8503333330154419, 0.859666645526886, 0.8500000238418579, 0.8533333539962769, 0.8603333234786987, 0.8453333377838135, 0.8543333411216736, 0.8543333411216736, 0.8483333587646484, 0.8450000286102295]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 7, 4, 3, 2, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 3, 2], [0, 1, 0, 2, 0, 1], [39, 39, 31], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [1, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 1], [0, 0, 0, 0, 0, 0, 3, 0, 2, 0], [46, 99, 96, 99, 61, 1, 84]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(alpha, tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.304197311401367, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}, "mapping_values": [1, 13, 7, 6, 3, 6, 3, 3, 1, 2, 1, 1, 1, 16, 8, 8, 7], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [98, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 3, 6, 3, 5, 3, 3, 4, 6, 4, 2, 1, 2, 3, 5, 6, 2, 9, 4, 8, 4, 7, 8, 0, 3, 7, 9, 0, 4, 3, 2, 6, 8, 5, 9], [0, 2, 0, 3, 1, 0, 3, 5, 2, 3, 2, 3, 0, 5, 3, 4, 0, 2, 2, 1, 3], [16, 16, 78, 95, 95, 3, 21, 50], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 80]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 57, 36, 21, 8, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.math.square(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), tf.math.multiply(alpha, tf.math.pow(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.pow(tf.math.add(tf.math.subtract(grad, tf.math.add(tf.math.multiply(grad, tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.pow(beta, tf.math.sqrt(grad))), tf.math.pow(beta, grad)))), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.sqrt(tf.math.negative(tf.math.multiply(tf.math.add(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.negative(grad)), grad))), grad)), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.multiply(tf.math.add(beta, beta), tf.math.divide_no_nan(tf.math.sqrt(alpha), grad)), tf.math.square(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha))))", "other_info": {"loss": [2.304290771484375, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [9, 1, 3, 1, 3], [0, 1, 0, 1, 3], [39, 88], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0], [0, 2, 4, 9, 4, 0, 3, 3, 4, 4, 9], [0, 1, 2, 3, 3, 3, 5, 1], [16, 16, 50], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 7, 1, 0, 7, 4, 6, 8, 5], [0, 1, 4, 3, 0, 0, 3, 1, 2, 0], [0, 32, 74, 97, 4]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 6, 4, 2, 2, 2, 1, 1, 1, 15, 9, 6, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(tf.math.pow(alpha, tf.math.divide_no_nan(grad, sigma)), tf.math.sqrt(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))), tf.math.square(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1010434553027153, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 2, 3, 7, 3, 7, 0, 6, 9, 1], [0, 0, 1, 0, 2, 2, 3], [90, 39, 39, 80], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5, 5, 7, 1, 8], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [3, 4, 7, 2], [52, 44], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 4, 3, 9, 9], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 12, 96, 99, 61, 1]], "fitness": -0.09885714203119278, "mapping_values": [1, 17, 10, 7, 4, 16, 10, 6, 3, 2, 1, 1, 0, 6, 5, 1, 3], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), tf.math.subtract(grad, grad))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.math.square(tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), beta))))), tf.math.subtract(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3105602264404297, 2.3101840019226074, 2.310112237930298, 2.310671806335449, 2.310030460357666, 2.310502767562866, 2.310767889022827, 2.310063362121582, 2.311526298522949, 2.310922384262085, 2.3109097480773926, 2.311737060546875, 2.311326026916504, 2.3110415935516357, 2.311826467514038, 2.3112268447875977, 2.31119441986084, 2.309648275375366, 2.3108134269714355, 2.311683416366577, 2.3117024898529053, 2.3120222091674805, 2.3111815452575684, 2.3124313354492188, 2.312175750732422, 2.3115334510803223, 2.311842679977417], "accuracy": [0.08691058307886124, 0.09576013684272766, 0.09642054885625839, 0.09232597798109055, 0.08757099509239197, 0.09668471664190292, 0.09681680053472519, 0.09166556596755981, 0.09206181764602661, 0.09470347315073013, 0.09338264167308807, 0.09179764986038208, 0.09192973375320435, 0.09298639744520187, 0.08889182657003403, 0.09272222965955734, 0.09576013684272766, 0.09615638852119446, 0.09377889335155487, 0.09417514503002167, 0.09272222965955734, 0.09206181764602661, 0.09549596905708313, 0.09681680053472519, 0.09325055778026581, 0.09642054885625839, 0.09074098616838455], "val_loss": [2.307870388031006, 2.307896375656128, 2.307919979095459, 2.3079428672790527, 2.3079676628112793, 2.307992458343506, 2.308018445968628, 2.308046340942383, 2.308072805404663, 2.3080995082855225, 2.308126449584961, 2.3081538677215576, 2.3081812858581543, 2.308209180831909, 2.308236837387085, 2.3082637786865234, 2.3082895278930664, 2.3083159923553467, 2.3083419799804688, 2.308368444442749, 2.308394432067871, 2.308419942855835, 2.3084466457366943, 2.308471918106079, 2.3084964752197266, 2.3085227012634277, 2.3085458278656006], "val_accuracy": [0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09133332967758179, 0.09233333170413971, 0.09266666322946548, 0.09333333373069763, 0.09300000220537186, 0.09399999678134918, 0.09433333575725555, 0.09433333575725555, 0.09566666930913925, 0.09600000083446503, 0.09600000083446503, 0.09666666388511658, 0.09733333438634872, 0.09733333438634872, 0.09833333641290665, 0.09833333641290665, 0.09866666793823242, 0.0989999994635582, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}]