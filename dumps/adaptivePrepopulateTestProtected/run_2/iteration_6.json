[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8768571615219116, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222250461578369, 1.8634382486343384, 1.386461853981018, 1.0833044052124023, 0.9265413284301758, 0.8440244197845459, 0.7689846158027649, 0.7217835783958435, 0.6946391463279724, 0.6591481566429138, 0.6302332282066345, 0.6071098446846008, 0.58745938539505, 0.5740339159965515, 0.5700055360794067, 0.5476945638656616, 0.5300565958023071, 0.515175998210907, 0.5132865309715271, 0.49766114354133606, 0.4853062033653259, 0.4709930121898651, 0.4710473418235779, 0.45622146129608154, 0.4409819543361664, 0.44101276993751526, 0.42332780361175537, 0.42639458179473877, 0.413105309009552, 0.4150063693523407, 0.4078751504421234, 0.3973477780818939, 0.39182016253471375, 0.3888950049877167, 0.3774554133415222, 0.3726383447647095, 0.3688918352127075, 0.3662937879562378, 0.34987398982048035, 0.35581469535827637, 0.34829020500183105, 0.33901554346084595, 0.33875879645347595, 0.33434274792671204, 0.3242861330509186, 0.3246440291404724, 0.316322922706604, 0.3147198557853699, 0.30453887581825256, 0.30218783020973206, 0.3011622130870819, 0.2966826260089874], "accuracy": [0.2744683623313904, 0.4897635579109192, 0.5694096088409424, 0.6217144131660461, 0.6646413803100586, 0.6939638257026672, 0.7255316376686096, 0.7404569983482361, 0.7494386434555054, 0.7559106945991516, 0.7676661014556885, 0.7788931727409363, 0.7827235460281372, 0.7905164361000061, 0.7917051911354065, 0.7971205711364746, 0.8080834746360779, 0.8150838613510132, 0.8153480291366577, 0.8183859586715698, 0.8239334225654602, 0.830669641494751, 0.8300092220306396, 0.8387266993522644, 0.8397833704948425, 0.8421608805656433, 0.8455950617790222, 0.8449346423149109, 0.852331280708313, 0.8475762605667114, 0.850350022315979, 0.8577466607093811, 0.8562937378883362, 0.8622375130653381, 0.8676528930664062, 0.8672566413879395, 0.867520809173584, 0.8693699836730957, 0.8765024542808533, 0.8693699836730957, 0.8729361891746521, 0.8742570281028748, 0.8754457831382751, 0.878351628780365, 0.8824461698532104, 0.8805969953536987, 0.8819178342819214, 0.8868049383163452, 0.887597382068634, 0.8906353116035461, 0.887201189994812, 0.8918240666389465], "val_loss": [2.0386195182800293, 1.5141637325286865, 1.0538526773452759, 0.8596723675727844, 0.7759342193603516, 0.7192841172218323, 0.6771690249443054, 0.6437584757804871, 0.6193508505821228, 0.5922199487686157, 0.5729194283485413, 0.5551856756210327, 0.5385822653770447, 0.5257654786109924, 0.5165361166000366, 0.5011810660362244, 0.4919561743736267, 0.48552361130714417, 0.47933295369148254, 0.4656471014022827, 0.4598849415779114, 0.45053231716156006, 0.4469571113586426, 0.437753826379776, 0.434342622756958, 0.42675578594207764, 0.4235270917415619, 0.4175274670124054, 0.41885218024253845, 0.4114329516887665, 0.4080221652984619, 0.403830349445343, 0.40030863881111145, 0.3936823010444641, 0.39308154582977295, 0.3908149003982544, 0.38946422934532166, 0.38555654883384705, 0.385292649269104, 0.37694936990737915, 0.3787061274051666, 0.3754332959651947, 0.37116917967796326, 0.3721087574958801, 0.36685043573379517, 0.36866259574890137, 0.3663710057735443, 0.36438125371932983, 0.3633136749267578, 0.36815738677978516, 0.3613807260990143, 0.3633389472961426], "val_accuracy": [0.5276666879653931, 0.6579999923706055, 0.6809999942779541, 0.7016666531562805, 0.7269999980926514, 0.7383333444595337, 0.7506666779518127, 0.7563333511352539, 0.7643333077430725, 0.7766666412353516, 0.7789999842643738, 0.7913333177566528, 0.79666668176651, 0.8036666512489319, 0.8026666641235352, 0.8106666803359985, 0.8183333277702332, 0.8220000267028809, 0.8230000138282776, 0.8293333053588867, 0.831333339214325, 0.8403333425521851, 0.8343333601951599, 0.8423333168029785, 0.8403333425521851, 0.8443333506584167, 0.8450000286102295, 0.8473333120346069, 0.8479999899864197, 0.846666693687439, 0.8566666841506958, 0.8539999723434448, 0.8546666502952576, 0.8583333492279053, 0.8573333621025085, 0.8600000143051147, 0.859666645526886, 0.8603333234786987, 0.8616666793823242, 0.8673333525657654, 0.8629999756813049, 0.8666666746139526, 0.8646666407585144, 0.8646666407585144, 0.8706666827201843, 0.8673333525657654, 0.8726666569709778, 0.8659999966621399, 0.8703333139419556, 0.8643333315849304, 0.8693333268165588, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0], [0, 9], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8625714182853699, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.29243803024292, 2.187897205352783, 1.757750153541565, 1.342637538909912, 1.0733057260513306, 0.9205774068832397, 0.8522861003875732, 0.786128044128418, 0.7413491606712341, 0.7368849515914917, 0.6975172162055969, 0.6655980348587036, 0.6464622616767883, 0.6397863626480103, 0.6168625950813293, 0.5871721506118774, 0.5784153342247009, 0.5699422955513, 0.5587581992149353, 0.5536661744117737, 0.5372138619422913, 0.5326672196388245, 0.5154120326042175, 0.5072258710861206, 0.4918476641178131, 0.48296770453453064, 0.4859713912010193, 0.47208085656166077, 0.4567604064941406, 0.452025443315506, 0.44800248742103577, 0.4314211905002594, 0.4255048632621765, 0.41608983278274536, 0.4156837463378906, 0.4031681716442108, 0.40399453043937683, 0.3938647210597992, 0.387328177690506, 0.3701283633708954, 0.3699217736721039, 0.37658458948135376, 0.3528198003768921, 0.33990779519081116, 0.3414480984210968, 0.33605852723121643, 0.34386804699897766, 0.33812078833580017, 0.3390464186668396, 0.3312351107597351, 0.32049915194511414, 0.3282392919063568, 0.31897082924842834, 0.30970531702041626, 0.32359522581100464, 0.30753475427627563, 0.31398624181747437, 0.31780189275741577], "accuracy": [0.13551710546016693, 0.33641526103019714, 0.4391758143901825, 0.5440496802330017, 0.6371681690216064, 0.6616035103797913, 0.6902654767036438, 0.6960771083831787, 0.7165499925613403, 0.7150970697402954, 0.7326641082763672, 0.7489103078842163, 0.7552502751350403, 0.7532690763473511, 0.7683265209197998, 0.7808743715286255, 0.7843085527420044, 0.7788931727409363, 0.7915731072425842, 0.7928939461708069, 0.8021397590637207, 0.8026680946350098, 0.8006868362426758, 0.8043851256370544, 0.8166688680648804, 0.8181217908859253, 0.8131026029586792, 0.8168009519577026, 0.8259146809577942, 0.8337075710296631, 0.8337075710296631, 0.8367455005645752, 0.837141752243042, 0.8436138033866882, 0.8421608805656433, 0.8436138033866882, 0.8520671129226685, 0.8557654023170471, 0.8488970994949341, 0.8589354157447815, 0.8556333184242249, 0.8588033318519592, 0.8625016212463379, 0.8651432991027832, 0.8654074668884277, 0.8698983192443848, 0.8654074668884277, 0.8669924736022949, 0.868049144744873, 0.8714832663536072, 0.8759741187095642, 0.8733324408531189, 0.873860776424408, 0.882710337638855, 0.8749174475669861, 0.878879964351654, 0.8733324408531189, 0.880729079246521], "val_loss": [2.2461097240448, 2.0148606300354004, 1.1340843439102173, 0.8794005513191223, 0.7675431370735168, 0.6987025737762451, 0.6301055550575256, 0.6302949786186218, 0.6138646006584167, 0.5912018418312073, 0.5506620407104492, 0.5606005787849426, 0.532079815864563, 0.5213139653205872, 0.5107775926589966, 0.5119600296020508, 0.4994898736476898, 0.5003927946090698, 0.4899539351463318, 0.4775563180446625, 0.4792625308036804, 0.4776107668876648, 0.4705100953578949, 0.45706436038017273, 0.4472387433052063, 0.4442427456378937, 0.4482106864452362, 0.4359242022037506, 0.4289488196372986, 0.42171838879585266, 0.4228925406932831, 0.4229161739349365, 0.4275742471218109, 0.4184349775314331, 0.414119154214859, 0.4119780957698822, 0.407186359167099, 0.39498335123062134, 0.38307610154151917, 0.3879471719264984, 0.40907764434814453, 0.4062677323818207, 0.4091772139072418, 0.4047364890575409, 0.3979918956756592, 0.38971325755119324, 0.392648845911026, 0.39726266264915466, 0.4205920398235321, 0.39423975348472595, 0.41162142157554626, 0.40506815910339355, 0.402323454618454, 0.41712063550949097, 0.3994196057319641, 0.4123282730579376, 0.3993992507457733, 0.4163548946380615], "val_accuracy": [0.4283333420753479, 0.47733333706855774, 0.6516666412353516, 0.6916666626930237, 0.7193333506584167, 0.7316666841506958, 0.7519999742507935, 0.7603333592414856, 0.7549999952316284, 0.7749999761581421, 0.7863333225250244, 0.7776666879653931, 0.7900000214576721, 0.7916666865348816, 0.8036666512489319, 0.8086666464805603, 0.8143333196640015, 0.812333345413208, 0.8103333115577698, 0.8236666917800903, 0.8206666707992554, 0.8230000138282776, 0.8216666579246521, 0.8240000009536743, 0.8346666693687439, 0.8376666903495789, 0.8276666402816772, 0.8376666903495789, 0.8349999785423279, 0.8410000205039978, 0.8450000286102295, 0.8486666679382324, 0.843666672706604, 0.847000002861023, 0.8476666808128357, 0.8506666421890259, 0.856333315372467, 0.8556666374206543, 0.8519999980926514, 0.859000027179718, 0.8633333444595337, 0.862666666507721, 0.8583333492279053, 0.8550000190734863, 0.8629999756813049, 0.8636666536331177, 0.8633333444595337, 0.8650000095367432, 0.8629999756813049, 0.8610000014305115, 0.8573333621025085, 0.8656666874885559, 0.871999979019165, 0.862333357334137, 0.8686666488647461, 0.8673333525657654, 0.871666669845581, 0.8686666488647461]}, "mapping_values": [1, 10, 5, 5, 3, 2, 2, 0, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8608571290969849, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.226188898086548, 1.8834062814712524, 1.4227968454360962, 1.106136679649353, 0.9575524926185608, 0.8500242829322815, 0.7837603688240051, 0.7391713857650757, 0.6998378038406372, 0.6722484230995178, 0.6470433473587036, 0.6165153384208679, 0.6042460799217224, 0.5786985158920288, 0.5607733726501465, 0.5519821643829346, 0.5387733578681946, 0.5270224213600159, 0.5223390460014343, 0.5164321660995483, 0.49528494477272034, 0.48709261417388916, 0.4803696870803833, 0.4607384204864502, 0.4625352919101715, 0.4471030831336975, 0.45051810145378113, 0.431738942861557, 0.4301031529903412, 0.4199622869491577, 0.41630369424819946, 0.40280359983444214, 0.40454399585723877, 0.3953734338283539, 0.38935744762420654, 0.3821277618408203, 0.37741902470588684, 0.3739141821861267, 0.3707643151283264, 0.35931023955345154, 0.3506304621696472, 0.34420129656791687, 0.3515397906303406, 0.34578606486320496, 0.3380311131477356, 0.3343328535556793, 0.3243318796157837], "accuracy": [0.28080835938453674, 0.4834235906600952, 0.5583146214485168, 0.6165632009506226, 0.661471426486969, 0.698190450668335, 0.7147008180618286, 0.7264562249183655, 0.7403249144554138, 0.7577598690986633, 0.7617223858833313, 0.7783648371696472, 0.78113853931427, 0.7897239327430725, 0.8021397590637207, 0.8010830879211426, 0.806630551815033, 0.8105930685997009, 0.8148196935653687, 0.8182538747787476, 0.8247259259223938, 0.8273676037788391, 0.8308017253875732, 0.8383304476737976, 0.8366134166717529, 0.8424250483512878, 0.8378021121025085, 0.8525954484939575, 0.854708731174469, 0.8512746095657349, 0.8521991968154907, 0.8561616539955139, 0.8574824929237366, 0.8609166741371155, 0.8665962219238281, 0.8643507957458496, 0.8644828796386719, 0.8654074668884277, 0.8692378997802734, 0.8742570281028748, 0.8770307898521423, 0.8765024542808533, 0.8739928603172302, 0.8802007436752319, 0.8791441321372986, 0.8791441321372986, 0.8854840993881226], "val_loss": [2.0436253547668457, 1.5196787118911743, 1.0305439233779907, 0.813666820526123, 0.7187073826789856, 0.6633122563362122, 0.6226259469985962, 0.5815520286560059, 0.5578629374504089, 0.5334751009941101, 0.5187651515007019, 0.5035488605499268, 0.48934948444366455, 0.4721492528915405, 0.459878534078598, 0.4559042155742645, 0.4440360367298126, 0.4333069622516632, 0.4287606477737427, 0.42324429750442505, 0.41034382581710815, 0.4023829698562622, 0.4001810848712921, 0.3953523337841034, 0.39482682943344116, 0.38621076941490173, 0.38224488496780396, 0.3798873722553253, 0.37285876274108887, 0.37097468972206116, 0.36768144369125366, 0.3659934103488922, 0.3612576425075531, 0.356709361076355, 0.35346290469169617, 0.35082995891571045, 0.34880319237709045, 0.35340145230293274, 0.34477847814559937, 0.34277814626693726, 0.33995163440704346, 0.3381025791168213, 0.3364035189151764, 0.34041091799736023, 0.33713778853416443, 0.33275195956230164, 0.3329392075538635], "val_accuracy": [0.5649999976158142, 0.6726666688919067, 0.6963333487510681, 0.7183333039283752, 0.7450000047683716, 0.7680000066757202, 0.7749999761581421, 0.7846666574478149, 0.796999990940094, 0.8059999942779541, 0.8106666803359985, 0.8209999799728394, 0.8273333311080933, 0.828000009059906, 0.8339999914169312, 0.8370000123977661, 0.8429999947547913, 0.8446666598320007, 0.8423333168029785, 0.8506666421890259, 0.8543333411216736, 0.8586666584014893, 0.8573333621025085, 0.8573333621025085, 0.8560000061988831, 0.859333336353302, 0.8600000143051147, 0.8603333234786987, 0.8653333187103271, 0.8629999756813049, 0.8659999966621399, 0.8653333187103271, 0.8666666746139526, 0.8726666569709778, 0.8709999918937683, 0.875, 0.8709999918937683, 0.8686666488647461, 0.875, 0.8730000257492065, 0.8756666779518127, 0.8803333044052124, 0.8786666393280029, 0.875333309173584, 0.875, 0.878333330154419, 0.875333309173584]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1], [0, 2, 7, 4, 3, 1, 3, 4, 9, 8, 7, 1, 4, 1, 6, 5, 3, 0, 2, 1, 6, 8, 0, 2, 2], [0, 5, 2, 3, 6, 7, 6, 4, 1, 5, 6, 0, 6, 4, 2, 4, 3, 6], [0, 86, 22], [1], [0], [2], [0]], "fitness": -0.8277142643928528, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.multiply(grad, tf.math.subtract(tf.math.multiply(beta, sigma), tf.math.pow(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(grad, grad))))), tf.math.subtract(tf.math.pow(tf.math.subtract(grad, tf.math.divide_no_nan(tf.math.square(grad), alpha)), tf.math.multiply(tf.math.negative(tf.math.add(grad, tf.math.subtract(tf.math.divide_no_nan(tf.math.sqrt(tf.math.negative(tf.math.add(grad, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), grad), grad))), beta)), grad))), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.562191128730774, 0.8449645042419434, 0.7052334547042847, 0.642137885093689, 0.5794989466667175, 0.5577084422111511, 0.5594978928565979, 0.5409347414970398, 0.5219254493713379, 0.49367645382881165, 0.47870928049087524, 0.47606366872787476], "accuracy": [0.4788006842136383, 0.7150970697402954, 0.7514199018478394, 0.7753269076347351, 0.7942147850990295, 0.807158887386322, 0.8084797263145447, 0.8230088353157043, 0.8121780753135681, 0.8286884427070618, 0.8355567455291748, 0.8302733898162842], "val_loss": [0.8870202898979187, 0.6322731375694275, 0.5446627736091614, 0.5380857586860657, 0.5154376029968262, 0.5146833658218384, 0.5165549516677856, 0.5236987471580505, 0.5438941121101379, 0.5284711718559265, 0.5107816457748413, 0.5494411587715149], "val_accuracy": [0.7160000205039978, 0.7806666493415833, 0.7953333258628845, 0.8059999942779541, 0.8176666498184204, 0.8176666498184204, 0.8360000252723694, 0.8263333439826965, 0.8330000042915344, 0.8266666531562805, 0.8333333134651184, 0.8309999704360962]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 43, 25, 18, 3, 1, 0, 1, 0], "tree_depth": 32}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3, 1, 1], [0, 2, 1, 0, 2, 1, 1], [39, 39, 46], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 2, 3, 0, 3, 5], [0, 2, 0, 3, 1], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 6, 1, 4, 2, 8, 6, 0, 4, 5], [1, 1, 4, 6, 0, 6, 7, 4, 5, 3, 1, 3], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 7, 7, 2, 10, 5, 5, 2, 2, 1, 1, 1, 27, 15, 12, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), tf.math.subtract(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(alpha, tf.math.divide_no_nan(tf.math.sqrt(alpha), grad)), tf.math.subtract(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.subtract(tf.math.pow(grad, grad), tf.math.add(tf.math.sqrt(tf.math.divide_no_nan(grad, tf.math.negative(tf.math.pow(grad, sigma)))), tf.math.square(alpha))), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 68], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 45], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 4, 8, 1, 1, 3, 2, 8, 2, 4, 4, 7, 9], [0, 6, 4, 6, 7, 3, 1, 3, 4], [99, 82], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [1, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 4, 0], [16, 48, 96, 99, 17, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 7, 4, 3, 2, 22, 13, 9, 2, 21, 11, 10, 6], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.subtract(tf.math.multiply(grad, tf.math.add(tf.math.sqrt(grad), grad)), grad), tf.math.add(tf.math.pow(sigma, tf.math.pow(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), sigma)), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.pow(sigma, tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), sigma))), alpha)), tf.math.add(tf.math.sqrt(grad), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [2, 2, 2, 5, 2, 9], [0, 1, 2, 2], [30, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 0, 3], [16, 16], [1, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 2, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 63, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 2, 6, 3, 3, 2, 1, 0, 1, 1, 18, 9, 9, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.add(tf.math.square(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), alpha), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.pow(sigma, tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))), alpha))), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 0], [46, 39, 89], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 8, 3, 0, 3, 2], [0, 2, 0, 3], [16, 16], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [2, 3, 4, 3, 5, 7, 5, 3, 6, 3, 0, 4, 7], [0, 0, 1, 3, 6, 5, 4, 7, 4, 4, 6], [82, 18], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 1, 4, 3, 1, 2, 0], [16, 99, 96, 71, 61, 1]], "fitness": -0.08742856979370117, "mapping_values": [1, 9, 5, 4, 3, 6, 4, 2, 1, 24, 13, 11, 2, 18, 9, 9, 3], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.pow(tf.math.multiply(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.multiply(sigma, grad))))), grad), tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(grad), tf.math.pow(tf.math.add(grad, grad), grad)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(alpha, tf.math.pow(grad, sigma)))), alpha), beta)", "other_info": {"loss": [2.309262275695801, 2.310049057006836, 2.3095903396606445, 2.3089118003845215, 2.310746192932129, 2.309145450592041], "accuracy": [0.09734513610601425, 0.09589222073554993, 0.09113723784685135, 0.08994849026203156, 0.0956280529499054, 0.09642054885625839], "val_loss": [2.3085756301879883, 2.3085756301879883, 2.3085756301879883, 2.3085756301879883, 2.3085756301879883, 2.3085756301879883], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}}]