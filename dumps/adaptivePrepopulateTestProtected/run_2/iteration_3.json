[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8768571615219116, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222250461578369, 1.8634382486343384, 1.386461853981018, 1.0833044052124023, 0.9265413284301758, 0.8440244197845459, 0.7689846158027649, 0.7217835783958435, 0.6946391463279724, 0.6591481566429138, 0.6302332282066345, 0.6071098446846008, 0.58745938539505, 0.5740339159965515, 0.5700055360794067, 0.5476945638656616, 0.5300565958023071, 0.515175998210907, 0.5132865309715271, 0.49766114354133606, 0.4853062033653259, 0.4709930121898651, 0.4710473418235779, 0.45622146129608154, 0.4409819543361664, 0.44101276993751526, 0.42332780361175537, 0.42639458179473877, 0.413105309009552, 0.4150063693523407, 0.4078751504421234, 0.3973477780818939, 0.39182016253471375, 0.3888950049877167, 0.3774554133415222, 0.3726383447647095, 0.3688918352127075, 0.3662937879562378, 0.34987398982048035, 0.35581469535827637, 0.34829020500183105, 0.33901554346084595, 0.33875879645347595, 0.33434274792671204, 0.3242861330509186, 0.3246440291404724, 0.316322922706604, 0.3147198557853699, 0.30453887581825256, 0.30218783020973206, 0.3011622130870819, 0.2966826260089874], "accuracy": [0.2744683623313904, 0.4897635579109192, 0.5694096088409424, 0.6217144131660461, 0.6646413803100586, 0.6939638257026672, 0.7255316376686096, 0.7404569983482361, 0.7494386434555054, 0.7559106945991516, 0.7676661014556885, 0.7788931727409363, 0.7827235460281372, 0.7905164361000061, 0.7917051911354065, 0.7971205711364746, 0.8080834746360779, 0.8150838613510132, 0.8153480291366577, 0.8183859586715698, 0.8239334225654602, 0.830669641494751, 0.8300092220306396, 0.8387266993522644, 0.8397833704948425, 0.8421608805656433, 0.8455950617790222, 0.8449346423149109, 0.852331280708313, 0.8475762605667114, 0.850350022315979, 0.8577466607093811, 0.8562937378883362, 0.8622375130653381, 0.8676528930664062, 0.8672566413879395, 0.867520809173584, 0.8693699836730957, 0.8765024542808533, 0.8693699836730957, 0.8729361891746521, 0.8742570281028748, 0.8754457831382751, 0.878351628780365, 0.8824461698532104, 0.8805969953536987, 0.8819178342819214, 0.8868049383163452, 0.887597382068634, 0.8906353116035461, 0.887201189994812, 0.8918240666389465], "val_loss": [2.0386195182800293, 1.5141637325286865, 1.0538526773452759, 0.8596723675727844, 0.7759342193603516, 0.7192841172218323, 0.6771690249443054, 0.6437584757804871, 0.6193508505821228, 0.5922199487686157, 0.5729194283485413, 0.5551856756210327, 0.5385822653770447, 0.5257654786109924, 0.5165361166000366, 0.5011810660362244, 0.4919561743736267, 0.48552361130714417, 0.47933295369148254, 0.4656471014022827, 0.4598849415779114, 0.45053231716156006, 0.4469571113586426, 0.437753826379776, 0.434342622756958, 0.42675578594207764, 0.4235270917415619, 0.4175274670124054, 0.41885218024253845, 0.4114329516887665, 0.4080221652984619, 0.403830349445343, 0.40030863881111145, 0.3936823010444641, 0.39308154582977295, 0.3908149003982544, 0.38946422934532166, 0.38555654883384705, 0.385292649269104, 0.37694936990737915, 0.3787061274051666, 0.3754332959651947, 0.37116917967796326, 0.3721087574958801, 0.36685043573379517, 0.36866259574890137, 0.3663710057735443, 0.36438125371932983, 0.3633136749267578, 0.36815738677978516, 0.3613807260990143, 0.3633389472961426], "val_accuracy": [0.5276666879653931, 0.6579999923706055, 0.6809999942779541, 0.7016666531562805, 0.7269999980926514, 0.7383333444595337, 0.7506666779518127, 0.7563333511352539, 0.7643333077430725, 0.7766666412353516, 0.7789999842643738, 0.7913333177566528, 0.79666668176651, 0.8036666512489319, 0.8026666641235352, 0.8106666803359985, 0.8183333277702332, 0.8220000267028809, 0.8230000138282776, 0.8293333053588867, 0.831333339214325, 0.8403333425521851, 0.8343333601951599, 0.8423333168029785, 0.8403333425521851, 0.8443333506584167, 0.8450000286102295, 0.8473333120346069, 0.8479999899864197, 0.846666693687439, 0.8566666841506958, 0.8539999723434448, 0.8546666502952576, 0.8583333492279053, 0.8573333621025085, 0.8600000143051147, 0.859666645526886, 0.8603333234786987, 0.8616666793823242, 0.8673333525657654, 0.8629999756813049, 0.8666666746139526, 0.8646666407585144, 0.8646666407585144, 0.8706666827201843, 0.8673333525657654, 0.8726666569709778, 0.8659999966621399, 0.8703333139419556, 0.8643333315849304, 0.8693333268165588, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8631428480148315, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223928689956665, 1.872135043144226, 1.390397310256958, 1.0875040292739868, 0.931922197341919, 0.8290881514549255, 0.7621635794639587, 0.7358366250991821, 0.6876312494277954, 0.6563035845756531, 0.632442831993103, 0.6164954900741577, 0.5919244885444641, 0.5829605460166931, 0.5681706070899963, 0.551311194896698, 0.5422223210334778, 0.5306169390678406, 0.5158964395523071, 0.5077179670333862, 0.4938583970069885, 0.4909801781177521, 0.472075492143631, 0.46755272150039673, 0.45282891392707825, 0.450733482837677, 0.4415033757686615, 0.43196871876716614, 0.4266049265861511, 0.4195760488510132, 0.4036409556865692, 0.41181185841560364, 0.4037378430366516, 0.3987623155117035, 0.39144524931907654, 0.3831365406513214, 0.3774571716785431, 0.3773548901081085, 0.37000641226768494, 0.37040963768959045, 0.35662633180618286, 0.3529205620288849, 0.34859052300453186, 0.34740111231803894, 0.3431754410266876, 0.3304647207260132, 0.33423659205436707, 0.32423707842826843, 0.317550390958786, 0.31134310364723206, 0.3143421411514282, 0.3092615604400635, 0.3013363182544708, 0.30147886276245117, 0.30022352933883667, 0.2933639585971832, 0.27748826146125793, 0.2872168719768524, 0.27495163679122925, 0.28196606040000916, 0.2748720347881317, 0.2668215036392212], "accuracy": [0.27182671427726746, 0.4843481779098511, 0.5692775249481201, 0.6180161237716675, 0.6664905548095703, 0.7096816897392273, 0.7265883088111877, 0.7358341217041016, 0.7518161535263062, 0.7691190242767334, 0.7758552432060242, 0.780610203742981, 0.7880068421363831, 0.7873464822769165, 0.7981772422790527, 0.804649293422699, 0.8057059645652771, 0.8127063512802124, 0.8212917447090149, 0.8182538747787476, 0.8280280232429504, 0.8259146809577942, 0.8360850811004639, 0.830669641494751, 0.8388587832450867, 0.8401796221733093, 0.8474441766738892, 0.8459912538528442, 0.8504821062088013, 0.8533879518508911, 0.8552370667457581, 0.8578787446022034, 0.8585391640663147, 0.8584070801734924, 0.863558292388916, 0.8634262084960938, 0.8651432991027832, 0.869502067565918, 0.8689737319946289, 0.8687095642089844, 0.8742570281028748, 0.8767666220664978, 0.8761062026023865, 0.8759741187095642, 0.8808611631393433, 0.8811253309249878, 0.8791441321372986, 0.8825782537460327, 0.8842953443527222, 0.8878615498542786, 0.8873332738876343, 0.8873332738876343, 0.8918240666389465, 0.8906353116035461, 0.8956544995307922, 0.8927486538887024, 0.9017302989959717, 0.898428201675415, 0.8968431949615479, 0.895918607711792, 0.9008057117462158, 0.9055606722831726], "val_loss": [2.041461229324341, 1.5221993923187256, 1.0419083833694458, 0.8351836204528809, 0.7462688684463501, 0.6923638582229614, 0.643740177154541, 0.6188275814056396, 0.5925360918045044, 0.5641840100288391, 0.5494758486747742, 0.5344474911689758, 0.5222393274307251, 0.5135359168052673, 0.498867392539978, 0.4879835546016693, 0.47785335779190063, 0.4717300534248352, 0.459615558385849, 0.4544309079647064, 0.4460260272026062, 0.4410524368286133, 0.43367627263069153, 0.4334241449832916, 0.42625245451927185, 0.42908453941345215, 0.41702795028686523, 0.41337865591049194, 0.41185876727104187, 0.40558576583862305, 0.40207770466804504, 0.39767247438430786, 0.39823001623153687, 0.3899371027946472, 0.38812580704689026, 0.38980916142463684, 0.3853013515472412, 0.3854421377182007, 0.3790302872657776, 0.3830221891403198, 0.3774715065956116, 0.372773677110672, 0.3729594647884369, 0.3734579384326935, 0.3685547709465027, 0.36629387736320496, 0.3631603717803955, 0.36494937539100647, 0.36158642172813416, 0.36197590827941895, 0.3622815012931824, 0.35914355516433716, 0.36035293340682983, 0.3598179221153259, 0.3588697612285614, 0.3523533046245575, 0.3551984131336212, 0.3536922335624695, 0.35718396306037903, 0.3527745008468628, 0.35123372077941895, 0.35508397221565247], "val_accuracy": [0.5559999942779541, 0.6493333578109741, 0.6809999942779541, 0.7183333039283752, 0.7433333396911621, 0.7563333511352539, 0.7680000066757202, 0.7789999842643738, 0.7850000262260437, 0.7963333129882812, 0.8019999861717224, 0.8140000104904175, 0.8163333535194397, 0.8133333325386047, 0.8230000138282776, 0.8276666402816772, 0.8316666483879089, 0.8343333601951599, 0.8389999866485596, 0.8416666388511658, 0.8456666469573975, 0.843999981880188, 0.8493333458900452, 0.8486666679382324, 0.8463333249092102, 0.8460000157356262, 0.8553333282470703, 0.8553333282470703, 0.8603333234786987, 0.8606666922569275, 0.8600000143051147, 0.8619999885559082, 0.8586666584014893, 0.8640000224113464, 0.8640000224113464, 0.8633333444595337, 0.8650000095367432, 0.8653333187103271, 0.8659999966621399, 0.8613333106040955, 0.8673333525657654, 0.8683333396911621, 0.8666666746139526, 0.8696666955947876, 0.8730000257492065, 0.8696666955947876, 0.8713333606719971, 0.8686666488647461, 0.871666669845581, 0.8733333349227905, 0.875333309173584, 0.8713333606719971, 0.8766666650772095, 0.8706666827201843, 0.8736666440963745, 0.8763333559036255, 0.8796666860580444, 0.8796666860580444, 0.875333309173584, 0.878000020980835, 0.8756666779518127, 0.8766666650772095]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8337143063545227, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293210744857788, 2.1897037029266357, 1.7658116817474365, 1.3460203409194946, 1.0799295902252197, 0.911546528339386, 0.8342272639274597, 0.805591881275177, 0.7611085176467896, 0.7278428673744202, 0.693770170211792, 0.6622716784477234, 0.6456696391105652, 0.6073234677314758, 0.5936930775642395, 0.5884968042373657, 0.567855954170227, 0.5567421913146973, 0.5436208248138428, 0.5100435614585876, 0.5095784068107605, 0.5068663954734802, 0.48952287435531616, 0.48979276418685913, 0.4729631543159485, 0.4728640913963318, 0.45461201667785645, 0.4411744475364685, 0.4435935914516449, 0.4280135929584503, 0.4272008240222931, 0.4274217188358307, 0.4057987332344055, 0.41668418049812317, 0.3961866497993469, 0.38585230708122253, 0.3900738060474396, 0.3775353729724884, 0.36967816948890686, 0.36500129103660583, 0.36481475830078125, 0.3749977648258209], "accuracy": [0.12838461995124817, 0.33245277404785156, 0.44551578164100647, 0.5361247062683105, 0.6328094005584717, 0.6729626059532166, 0.6915863156318665, 0.7091533541679382, 0.7091533541679382, 0.7189275026321411, 0.7362303733825684, 0.7474573850631714, 0.7483819723129272, 0.7707040309906006, 0.7740060687065125, 0.774270236492157, 0.7810064554214478, 0.7861577272415161, 0.791441023349762, 0.8012151718139648, 0.8025360107421875, 0.8084797263145447, 0.8165367841720581, 0.811649739742279, 0.8166688680648804, 0.8206313848495483, 0.8286884427070618, 0.8317263126373291, 0.835160493850708, 0.8358209133148193, 0.8352925777435303, 0.8381983637809753, 0.8459912538528442, 0.8409721255302429, 0.8461233377456665, 0.8471800088882446, 0.8524633646011353, 0.8564258217811584, 0.8598600029945374, 0.8609166741371155, 0.8626337051391602, 0.8545766472816467], "val_loss": [2.247053623199463, 2.0210328102111816, 1.1375651359558105, 0.8895602226257324, 0.7606810927391052, 0.7096375226974487, 0.677861750125885, 0.6533070206642151, 0.6238527297973633, 0.6113210320472717, 0.5795292854309082, 0.5583059191703796, 0.5448533892631531, 0.5317131280899048, 0.5266298651695251, 0.5183942317962646, 0.5106706023216248, 0.5025420784950256, 0.4942913055419922, 0.4882262647151947, 0.47964295744895935, 0.4750085473060608, 0.46965205669403076, 0.460482656955719, 0.46443966031074524, 0.4617193937301636, 0.46296900510787964, 0.44303447008132935, 0.4389737844467163, 0.43332529067993164, 0.4399366080760956, 0.423688143491745, 0.4185630679130554, 0.41327258944511414, 0.4070950448513031, 0.4180009067058563, 0.41469475626945496, 0.41022905707359314, 0.4065234065055847, 0.4071483910083771, 0.4094998836517334, 0.4230802059173584], "val_accuracy": [0.4059999883174896, 0.44699999690055847, 0.6453333497047424, 0.687666654586792, 0.7143333554267883, 0.7236666679382324, 0.7480000257492065, 0.7630000114440918, 0.7696666717529297, 0.7820000052452087, 0.7699999809265137, 0.7833333611488342, 0.7903333306312561, 0.7979999780654907, 0.8086666464805603, 0.7996666431427002, 0.8186666369438171, 0.8133333325386047, 0.8140000104904175, 0.8306666612625122, 0.8226666450500488, 0.8266666531562805, 0.8316666483879089, 0.8306666612625122, 0.8273333311080933, 0.8383333086967468, 0.8336666822433472, 0.8429999947547913, 0.8460000157356262, 0.843666672706604, 0.843999981880188, 0.8456666469573975, 0.8446666598320007, 0.8506666421890259, 0.856333315372467, 0.8533333539962769, 0.8600000143051147, 0.859333336353302, 0.8536666631698608, 0.859000027179718, 0.8556666374206543, 0.8566666841506958]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8294285535812378, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5066875219345093, 0.7709912657737732, 0.6351140141487122, 0.5842580795288086, 0.5777609348297119, 0.5087367296218872, 0.486528605222702, 0.47429579496383667, 0.4735114872455597, 0.512291669845581, 0.5016737580299377, 0.5418860912322998, 0.5524759888648987], "accuracy": [0.48566898703575134, 0.7185312509536743, 0.7651565074920654, 0.7796856164932251, 0.7909126877784729, 0.8175934553146362, 0.8185180425643921, 0.824329674243927, 0.8304054737091064, 0.8183859586715698, 0.819970965385437, 0.8070268034934998, 0.8215559124946594], "val_loss": [0.7532467246055603, 0.5836373567581177, 0.5295811891555786, 0.5385875105857849, 0.48017749190330505, 0.4500049352645874, 0.4581255614757538, 0.45776909589767456, 0.45610588788986206, 0.47253158688545227, 0.5084303617477417, 0.5317766666412354, 0.5897165536880493], "val_accuracy": [0.7306666374206543, 0.7896666526794434, 0.8143333196640015, 0.8240000009536743, 0.8263333439826965, 0.8363333344459534, 0.8339999914169312, 0.8410000205039978, 0.8366666436195374, 0.8336666822433472, 0.8286666870117188, 0.8379999995231628, 0.8263333439826965]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [4, 2, 3, 0, 3], [0, 1, 0, 2], [87, 39], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 2, 3, 3, 4, 5, 1, 1, 1, 6, 6, 7, 1, 8, 5, 3, 0, 5, 3, 3, 4, 6, 2, 1], [0, 2, 0, 3, 3, 5, 2, 1, 5, 4, 5, 2, 1, 2, 4, 0, 3, 5, 3, 5], [16, 16, 89], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 0, 8, 1, 4, 1, 4, 2, 0], [3, 4, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 28]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 44, 24, 20, 3, 2, 1, 1, 1, 17, 9, 8, 3], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.square(beta), tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.math.subtract(grad, tf.math.subtract(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.math.sqrt(tf.math.square(tf.math.multiply(grad, beta))), alpha), grad), grad), tf.math.negative(tf.math.square(tf.math.multiply(tf.math.multiply(grad, beta), tf.math.pow(tf.math.divide_no_nan(alpha, beta), tf.math.add(grad, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))))))), grad))), grad), tf.math.subtract(grad, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(sigma, tf.math.negative(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), sigma))))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1], [0, 1, 3, 1, 3], [0, 0, 3, 0, 2], [83, 99, 27], [0, 0, 0, 0, 0, 1, 1], [4, 5, 9, 2, 5], [0, 4], [28, 41], [0, 1], [8, 9], [0], [7], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.square(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.square(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [32724688.0, 2.705739736557007, 2.4891769886016846, 2.565488338470459, 2.660691261291504, 2.514648675918579, 2.616041421890259, 2.583828926086426], "accuracy": [0.1010434553027153, 0.10038304328918457, 0.09985470771789551, 0.1014397069811821, 0.09589222073554993, 0.09391097724437714, 0.09945846349000931, 0.10091137140989304], "val_loss": [2.7395589351654053, 2.6329708099365234, 2.6976959705352783, 2.6290972232818604, 2.756542205810547, 2.573666572570801, 2.5681235790252686, 2.793043613433838], "val_accuracy": [0.10066666454076767, 0.10199999809265137, 0.10233332961797714, 0.09700000286102295, 0.10199999809265137, 0.10233332961797714, 0.09700000286102295, 0.10199999809265137]}, "mapping_values": [1, 6, 3, 3, 2, 7, 5, 2, 2, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 10}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 8, 8, 1, 4, 8, 4, 8, 8], [0, 0, 0, 3, 0, 0, 3, 4, 2, 0], [16, 99, 96, 99, 27, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 2, 2, 1, 1, 1, 16, 9, 7, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))))), tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [33.78262710571289, 2.966535285736735e+17, 1.4961442996201776e+26, 2.4755530546918218e+26, 2.4755530546918218e+26, 2.4755530546918218e+26], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [52693.03125, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1], [0, 2, 3, 1, 3, 5, 8], [2, 1, 0, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 3, 3, 5], [0, 0, 0, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0, 1, 9], [0], [0, 18], [1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [0]], "fitness": -0.09114285558462143, "mapping_values": [1, 12, 7, 5, 1, 11, 6, 5, 4, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(grad, tf.math.multiply(alpha, tf.math.subtract(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), tf.math.square(tf.math.sqrt(grad)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3111202716827393, 2.3112096786499023, 2.310866594314575, 2.310668706893921, 2.309962511062622, 2.3102328777313232], "accuracy": [0.08902391046285629, 0.09391097724437714, 0.08611807972192764, 0.0940430611371994, 0.09285431355237961, 0.09206181764602661], "val_loss": [2.308307409286499, 2.308307409286499, 2.308307409286499, 2.308307409286499, 2.308307409286499, 2.308307409286499], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}]