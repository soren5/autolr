[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8768571615219116, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222250461578369, 1.8634382486343384, 1.386461853981018, 1.0833044052124023, 0.9265413284301758, 0.8440244197845459, 0.7689846158027649, 0.7217835783958435, 0.6946391463279724, 0.6591481566429138, 0.6302332282066345, 0.6071098446846008, 0.58745938539505, 0.5740339159965515, 0.5700055360794067, 0.5476945638656616, 0.5300565958023071, 0.515175998210907, 0.5132865309715271, 0.49766114354133606, 0.4853062033653259, 0.4709930121898651, 0.4710473418235779, 0.45622146129608154, 0.4409819543361664, 0.44101276993751526, 0.42332780361175537, 0.42639458179473877, 0.413105309009552, 0.4150063693523407, 0.4078751504421234, 0.3973477780818939, 0.39182016253471375, 0.3888950049877167, 0.3774554133415222, 0.3726383447647095, 0.3688918352127075, 0.3662937879562378, 0.34987398982048035, 0.35581469535827637, 0.34829020500183105, 0.33901554346084595, 0.33875879645347595, 0.33434274792671204, 0.3242861330509186, 0.3246440291404724, 0.316322922706604, 0.3147198557853699, 0.30453887581825256, 0.30218783020973206, 0.3011622130870819, 0.2966826260089874], "accuracy": [0.2744683623313904, 0.4897635579109192, 0.5694096088409424, 0.6217144131660461, 0.6646413803100586, 0.6939638257026672, 0.7255316376686096, 0.7404569983482361, 0.7494386434555054, 0.7559106945991516, 0.7676661014556885, 0.7788931727409363, 0.7827235460281372, 0.7905164361000061, 0.7917051911354065, 0.7971205711364746, 0.8080834746360779, 0.8150838613510132, 0.8153480291366577, 0.8183859586715698, 0.8239334225654602, 0.830669641494751, 0.8300092220306396, 0.8387266993522644, 0.8397833704948425, 0.8421608805656433, 0.8455950617790222, 0.8449346423149109, 0.852331280708313, 0.8475762605667114, 0.850350022315979, 0.8577466607093811, 0.8562937378883362, 0.8622375130653381, 0.8676528930664062, 0.8672566413879395, 0.867520809173584, 0.8693699836730957, 0.8765024542808533, 0.8693699836730957, 0.8729361891746521, 0.8742570281028748, 0.8754457831382751, 0.878351628780365, 0.8824461698532104, 0.8805969953536987, 0.8819178342819214, 0.8868049383163452, 0.887597382068634, 0.8906353116035461, 0.887201189994812, 0.8918240666389465], "val_loss": [2.0386195182800293, 1.5141637325286865, 1.0538526773452759, 0.8596723675727844, 0.7759342193603516, 0.7192841172218323, 0.6771690249443054, 0.6437584757804871, 0.6193508505821228, 0.5922199487686157, 0.5729194283485413, 0.5551856756210327, 0.5385822653770447, 0.5257654786109924, 0.5165361166000366, 0.5011810660362244, 0.4919561743736267, 0.48552361130714417, 0.47933295369148254, 0.4656471014022827, 0.4598849415779114, 0.45053231716156006, 0.4469571113586426, 0.437753826379776, 0.434342622756958, 0.42675578594207764, 0.4235270917415619, 0.4175274670124054, 0.41885218024253845, 0.4114329516887665, 0.4080221652984619, 0.403830349445343, 0.40030863881111145, 0.3936823010444641, 0.39308154582977295, 0.3908149003982544, 0.38946422934532166, 0.38555654883384705, 0.385292649269104, 0.37694936990737915, 0.3787061274051666, 0.3754332959651947, 0.37116917967796326, 0.3721087574958801, 0.36685043573379517, 0.36866259574890137, 0.3663710057735443, 0.36438125371932983, 0.3633136749267578, 0.36815738677978516, 0.3613807260990143, 0.3633389472961426], "val_accuracy": [0.5276666879653931, 0.6579999923706055, 0.6809999942779541, 0.7016666531562805, 0.7269999980926514, 0.7383333444595337, 0.7506666779518127, 0.7563333511352539, 0.7643333077430725, 0.7766666412353516, 0.7789999842643738, 0.7913333177566528, 0.79666668176651, 0.8036666512489319, 0.8026666641235352, 0.8106666803359985, 0.8183333277702332, 0.8220000267028809, 0.8230000138282776, 0.8293333053588867, 0.831333339214325, 0.8403333425521851, 0.8343333601951599, 0.8423333168029785, 0.8403333425521851, 0.8443333506584167, 0.8450000286102295, 0.8473333120346069, 0.8479999899864197, 0.846666693687439, 0.8566666841506958, 0.8539999723434448, 0.8546666502952576, 0.8583333492279053, 0.8573333621025085, 0.8600000143051147, 0.859666645526886, 0.8603333234786987, 0.8616666793823242, 0.8673333525657654, 0.8629999756813049, 0.8666666746139526, 0.8646666407585144, 0.8646666407585144, 0.8706666827201843, 0.8673333525657654, 0.8726666569709778, 0.8659999966621399, 0.8703333139419556, 0.8643333315849304, 0.8693333268165588, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8642857074737549, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222905397415161, 1.8667454719543457, 1.3886398077011108, 1.0928667783737183, 0.940817654132843, 0.8412545919418335, 0.7738320827484131, 0.7260413765907288, 0.6936379671096802, 0.6574941873550415, 0.6435836553573608, 0.6153561472892761, 0.5930184721946716, 0.578080952167511, 0.5538653135299683, 0.539369523525238, 0.5309467911720276, 0.5144789814949036, 0.5024106502532959, 0.4946667551994324, 0.4847770631313324, 0.4741722643375397, 0.4585675001144409, 0.45728254318237305, 0.4433306157588959, 0.43868306279182434, 0.4298994243144989, 0.42256608605384827, 0.4151223599910736, 0.4043727219104767, 0.40237557888031006, 0.3880809545516968, 0.3841899335384369, 0.3802339732646942, 0.37618932127952576, 0.3750345706939697, 0.361840158700943, 0.3646829426288605, 0.3584152162075043, 0.3497714400291443, 0.34446385502815247, 0.34297993779182434, 0.3311518430709839], "accuracy": [0.26641130447387695, 0.48949941992759705, 0.5733720660209656, 0.6115440726280212, 0.6623960137367249, 0.6952846646308899, 0.7197200059890747, 0.7380794882774353, 0.7498348951339722, 0.7611940503120422, 0.7644960880279541, 0.774798572063446, 0.7868181467056274, 0.791969358921051, 0.8038568496704102, 0.8054417967796326, 0.8123101592063904, 0.8187822103500366, 0.8212917447090149, 0.8248580098152161, 0.8244617581367493, 0.8317263126373291, 0.8381983637809753, 0.8347642421722412, 0.8461233377456665, 0.8437458872795105, 0.8487650156021118, 0.8485008478164673, 0.8527275323867798, 0.86118084192276, 0.8568220734596252, 0.8631620407104492, 0.8663320541381836, 0.8654074668884277, 0.8668603897094727, 0.870030403137207, 0.878351628780365, 0.8704266548156738, 0.8746532797813416, 0.8761062026023865, 0.8768987059593201, 0.8786157965660095, 0.8823140859603882], "val_loss": [2.037875175476074, 1.5161279439926147, 1.0516552925109863, 0.8520855903625488, 0.7697805762290955, 0.7117765545845032, 0.662075400352478, 0.6274940371513367, 0.6073330640792847, 0.5783206224441528, 0.5603376626968384, 0.5447402596473694, 0.5319207906723022, 0.5172118544578552, 0.5039449334144592, 0.49244847893714905, 0.48576876521110535, 0.47480151057243347, 0.46437960863113403, 0.45955097675323486, 0.4476103186607361, 0.4401029050350189, 0.4381251335144043, 0.43247127532958984, 0.4257251024246216, 0.4210781157016754, 0.4167533218860626, 0.410319060087204, 0.4045541286468506, 0.40226325392723083, 0.3990042805671692, 0.39326807856559753, 0.39378803968429565, 0.39012178778648376, 0.38881880044937134, 0.3862803876399994, 0.3825552463531494, 0.37831029295921326, 0.3726058006286621, 0.37524470686912537, 0.36877259612083435, 0.3663409948348999, 0.3653648793697357], "val_accuracy": [0.5316666960716248, 0.6420000195503235, 0.6723333597183228, 0.7093333601951599, 0.7250000238418579, 0.7400000095367432, 0.7540000081062317, 0.7663333415985107, 0.7773333191871643, 0.7883333563804626, 0.7889999747276306, 0.7993333339691162, 0.8073333501815796, 0.809333324432373, 0.8133333325386047, 0.8240000009536743, 0.8276666402816772, 0.8299999833106995, 0.8346666693687439, 0.8349999785423279, 0.8403333425521851, 0.8433333039283752, 0.8420000076293945, 0.8510000109672546, 0.8513333201408386, 0.8526666760444641, 0.8516666889190674, 0.859000027179718, 0.8550000190734863, 0.8569999933242798, 0.8606666922569275, 0.8640000224113464, 0.8613333106040955, 0.8610000014305115, 0.8619999885559082, 0.8636666536331177, 0.8659999966621399, 0.8713333606719971, 0.8673333525657654, 0.8629999756813049, 0.8713333606719971, 0.8700000047683716, 0.8690000176429749]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8408571481704712, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2917778491973877, 2.1897737979888916, 1.7593963146209717, 1.3358845710754395, 1.0610997676849365, 0.9042280316352844, 0.8466765880584717, 0.7976744174957275, 0.7612616419792175, 0.7287836670875549, 0.6980573534965515, 0.6615210175514221, 0.6294748187065125, 0.5982128381729126, 0.5877869129180908, 0.5796698331832886, 0.5469232201576233, 0.5433034300804138, 0.5265207886695862, 0.5274261832237244, 0.5250585675239563, 0.5126251578330994, 0.5048301815986633, 0.48671257495880127, 0.47826120257377625, 0.46107473969459534, 0.4613649845123291, 0.4370816648006439, 0.4326331913471222, 0.4310556948184967, 0.4294591546058655, 0.4078722298145294, 0.399556428194046, 0.40109017491340637, 0.4009190499782562, 0.3829733729362488, 0.40240246057510376, 0.37572944164276123, 0.37993040680885315, 0.3653355836868286, 0.35728323459625244, 0.3564358651638031, 0.35450509190559387, 0.35179853439331055, 0.33892181515693665, 0.33971819281578064, 0.3427242934703827, 0.32415321469306946], "accuracy": [0.12930920720100403, 0.3275656998157501, 0.4485536813735962, 0.5501254796981812, 0.6407343745231628, 0.6664905548095703, 0.6996433734893799, 0.711530864238739, 0.7088891863822937, 0.7205125093460083, 0.7400607466697693, 0.7481178045272827, 0.7559106945991516, 0.7693831920623779, 0.7718927264213562, 0.7763835787773132, 0.7880068421363831, 0.7872143983840942, 0.793950617313385, 0.8000264167785645, 0.7957997918128967, 0.7992339134216309, 0.8021397590637207, 0.8124422430992126, 0.81548011302948, 0.8220842480659485, 0.8253863453865051, 0.8305375576019287, 0.834632158279419, 0.8327829837799072, 0.8403117060661316, 0.8487650156021118, 0.8492933511734009, 0.8438779711723328, 0.8467837572097778, 0.8524633646011353, 0.8437458872795105, 0.8601241707801819, 0.8511425256729126, 0.8593316674232483, 0.8626337051391602, 0.8595958352088928, 0.8654074668884277, 0.8639545440673828, 0.8659358024597168, 0.8685774803161621, 0.8648791313171387, 0.8729361891746521], "val_loss": [2.2456743717193604, 2.0156214237213135, 1.12440824508667, 0.9053893089294434, 0.7798072099685669, 0.7130378484725952, 0.6827860474586487, 0.6746135950088501, 0.6637431383132935, 0.6216419339179993, 0.5845728516578674, 0.561739981174469, 0.5661550760269165, 0.5488901138305664, 0.5314788222312927, 0.5208811163902283, 0.5185177326202393, 0.5126784443855286, 0.508854329586029, 0.4944221079349518, 0.4868582487106323, 0.4803994596004486, 0.4789237380027771, 0.4742724895477295, 0.4673122465610504, 0.4629687964916229, 0.4612492620944977, 0.4535011351108551, 0.4546915292739868, 0.4466327428817749, 0.4497896730899811, 0.44443508982658386, 0.43480920791625977, 0.44181010127067566, 0.44454818964004517, 0.4411088824272156, 0.42287886142730713, 0.4451799690723419, 0.4349786043167114, 0.43685123324394226, 0.4647352397441864, 0.44388315081596375, 0.4387339651584625, 0.43483346700668335, 0.4382610619068146, 0.43836280703544617, 0.44446632266044617, 0.4624345600605011], "val_accuracy": [0.4193333387374878, 0.49900001287460327, 0.6476666927337646, 0.6886666417121887, 0.7126666903495789, 0.7289999723434448, 0.734333336353302, 0.7426666617393494, 0.7603333592414856, 0.7553333044052124, 0.7730000019073486, 0.7726666927337646, 0.777999997138977, 0.7850000262260437, 0.7990000247955322, 0.7963333129882812, 0.8009999990463257, 0.8019999861717224, 0.8026666641235352, 0.8130000233650208, 0.8146666884422302, 0.8209999799728394, 0.8169999718666077, 0.8163333535194397, 0.8289999961853027, 0.8366666436195374, 0.8320000171661377, 0.8389999866485596, 0.8276666402816772, 0.8410000205039978, 0.8446666598320007, 0.8460000157356262, 0.8423333168029785, 0.8426666855812073, 0.8479999899864197, 0.8413333296775818, 0.8513333201408386, 0.8460000157356262, 0.8489999771118164, 0.8510000109672546, 0.8506666421890259, 0.8579999804496765, 0.8603333234786987, 0.8550000190734863, 0.8583333492279053, 0.8539999723434448, 0.8529999852180481, 0.8579999804496765]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 4], [0, 4], [0], [1], [0], [2], [0]], "fitness": -0.8325714468955994, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.520266056060791, 0.8557746410369873, 0.6892173290252686, 0.6105574369430542, 0.6052482724189758, 0.562081515789032, 0.5350968241691589, 0.5079008340835571, 0.5160722136497498, 0.4776376485824585, 0.49438971281051636, 0.49470219016075134, 0.48831477761268616, 0.5065892338752747], "accuracy": [0.47246071696281433, 0.7082287669181824, 0.7532690763473511, 0.7815347909927368, 0.7853652238845825, 0.7979130744934082, 0.8112534880638123, 0.822348415851593, 0.817461371421814, 0.8321225643157959, 0.8261788487434387, 0.8310658931732178, 0.829216718673706, 0.8310658931732178], "val_loss": [0.7502479553222656, 0.6063702702522278, 0.5617936253547668, 0.5378313064575195, 0.5134280323982239, 0.4668448865413666, 0.5086933374404907, 0.5240716934204102, 0.4790901839733124, 0.49372151494026184, 0.4959651231765747, 0.5018240809440613, 0.5324037075042725, 0.5279017090797424], "val_accuracy": [0.7166666388511658, 0.7770000100135803, 0.7919999957084656, 0.8086666464805603, 0.8220000267028809, 0.8246666789054871, 0.8266666531562805, 0.8183333277702332, 0.8410000205039978, 0.8273333311080933, 0.8349999785423279, 0.8336666822433472, 0.8273333311080933, 0.8320000171661377]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 6, 3, 0, 3], [0, 1, 0, 2], [57, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 1, 0, 3], [16, 16], [0, 1], [0], [3], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0], [5, 3, 3, 6, 8, 1, 4, 1, 4, 3, 8, 7, 9], [0, 0, 0, 3, 0, 0, 4, 1, 2, 0], [16, 39, 96, 99, 61, 36]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 2, 2, 1, 1, 0, 22, 13, 9, 6], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.multiply(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, beta)))))), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1], [9, 2, 3, 8, 3], [0, 2, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 1, 5], [0, 2, 0, 3], [86, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 2, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 3], [16, 99, 96, 99, 61, 96]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 7, 4, 3, 2, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [2.305415391921997, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10249637067317963, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 1, 0, 3, 5], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [0, 2, 2, 0, 3, 5, 6, 4, 1, 8, 7, 4, 6, 6, 0], [0, 2, 2, 3, 2, 5, 3, 1, 3, 3, 5], [21, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 0, 8], [0, 0, 0, 0, 0, 0, 3, 1, 2, 0], [76, 99, 96, 99, 61, 1, 78]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.math.multiply(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.math.divide_no_nan(beta, tf.math.pow(tf.math.subtract(grad, beta), tf.math.sqrt(tf.math.add(tf.math.pow(tf.math.divide_no_nan(grad, grad), alpha), tf.math.divide_no_nan(tf.math.negative(grad), grad)))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(tf.math.negative(beta)), tf.math.sqrt(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}, "mapping_values": [1, 10, 6, 4, 2, 26, 15, 11, 1, 2, 1, 1, 1, 23, 13, 10, 7], "tree_depth": 21}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 0, 0, 3], [0, 1, 0, 2], [39, 77], [1, 0, 0, 0, 1, 0, 0, 0, 0, 1], [0, 0, 3, 0, 3, 5], [3, 2, 0, 1], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 1, 6], [4, 0, 4, 3, 0, 0, 3, 1, 1, 0, 7, 7], [16, 33, 96, 99, 61, 1]], "fitness": -0.09057142585515976, "mapping_values": [1, 6, 4, 2, 1, 1, 0, 1, 0, 2, 1, 1, 1, 25, 13, 12, 4], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.pow(sigma, tf.math.add(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), sigma)), tf.math.sqrt(tf.math.subtract(alpha, alpha)))), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, grad))", "other_info": {"loss": [2.3095333576202393, 2.3089170455932617, 2.309859037399292, 2.31046462059021, 2.30930233001709, 2.309833526611328], "accuracy": [0.09060890227556229, 0.09576013684272766, 0.08796724677085876, 0.09140139818191528, 0.09430722147226334, 0.09430722147226334], "val_loss": [2.309016704559326, 2.309016704559326, 2.309016704559326, 2.309016704559326, 2.309016704559326, 2.309016704559326], "val_accuracy": [0.08733333647251129, 0.08733333647251129, 0.08733333647251129, 0.08733333647251129, 0.08733333647251129, 0.08733333647251129]}}]