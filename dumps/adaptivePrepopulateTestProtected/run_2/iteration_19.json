[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8768571615219116, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222250461578369, 1.8634382486343384, 1.386461853981018, 1.0833044052124023, 0.9265413284301758, 0.8440244197845459, 0.7689846158027649, 0.7217835783958435, 0.6946391463279724, 0.6591481566429138, 0.6302332282066345, 0.6071098446846008, 0.58745938539505, 0.5740339159965515, 0.5700055360794067, 0.5476945638656616, 0.5300565958023071, 0.515175998210907, 0.5132865309715271, 0.49766114354133606, 0.4853062033653259, 0.4709930121898651, 0.4710473418235779, 0.45622146129608154, 0.4409819543361664, 0.44101276993751526, 0.42332780361175537, 0.42639458179473877, 0.413105309009552, 0.4150063693523407, 0.4078751504421234, 0.3973477780818939, 0.39182016253471375, 0.3888950049877167, 0.3774554133415222, 0.3726383447647095, 0.3688918352127075, 0.3662937879562378, 0.34987398982048035, 0.35581469535827637, 0.34829020500183105, 0.33901554346084595, 0.33875879645347595, 0.33434274792671204, 0.3242861330509186, 0.3246440291404724, 0.316322922706604, 0.3147198557853699, 0.30453887581825256, 0.30218783020973206, 0.3011622130870819, 0.2966826260089874], "accuracy": [0.2744683623313904, 0.4897635579109192, 0.5694096088409424, 0.6217144131660461, 0.6646413803100586, 0.6939638257026672, 0.7255316376686096, 0.7404569983482361, 0.7494386434555054, 0.7559106945991516, 0.7676661014556885, 0.7788931727409363, 0.7827235460281372, 0.7905164361000061, 0.7917051911354065, 0.7971205711364746, 0.8080834746360779, 0.8150838613510132, 0.8153480291366577, 0.8183859586715698, 0.8239334225654602, 0.830669641494751, 0.8300092220306396, 0.8387266993522644, 0.8397833704948425, 0.8421608805656433, 0.8455950617790222, 0.8449346423149109, 0.852331280708313, 0.8475762605667114, 0.850350022315979, 0.8577466607093811, 0.8562937378883362, 0.8622375130653381, 0.8676528930664062, 0.8672566413879395, 0.867520809173584, 0.8693699836730957, 0.8765024542808533, 0.8693699836730957, 0.8729361891746521, 0.8742570281028748, 0.8754457831382751, 0.878351628780365, 0.8824461698532104, 0.8805969953536987, 0.8819178342819214, 0.8868049383163452, 0.887597382068634, 0.8906353116035461, 0.887201189994812, 0.8918240666389465], "val_loss": [2.0386195182800293, 1.5141637325286865, 1.0538526773452759, 0.8596723675727844, 0.7759342193603516, 0.7192841172218323, 0.6771690249443054, 0.6437584757804871, 0.6193508505821228, 0.5922199487686157, 0.5729194283485413, 0.5551856756210327, 0.5385822653770447, 0.5257654786109924, 0.5165361166000366, 0.5011810660362244, 0.4919561743736267, 0.48552361130714417, 0.47933295369148254, 0.4656471014022827, 0.4598849415779114, 0.45053231716156006, 0.4469571113586426, 0.437753826379776, 0.434342622756958, 0.42675578594207764, 0.4235270917415619, 0.4175274670124054, 0.41885218024253845, 0.4114329516887665, 0.4080221652984619, 0.403830349445343, 0.40030863881111145, 0.3936823010444641, 0.39308154582977295, 0.3908149003982544, 0.38946422934532166, 0.38555654883384705, 0.385292649269104, 0.37694936990737915, 0.3787061274051666, 0.3754332959651947, 0.37116917967796326, 0.3721087574958801, 0.36685043573379517, 0.36866259574890137, 0.3663710057735443, 0.36438125371932983, 0.3633136749267578, 0.36815738677978516, 0.3613807260990143, 0.3633389472961426], "val_accuracy": [0.5276666879653931, 0.6579999923706055, 0.6809999942779541, 0.7016666531562805, 0.7269999980926514, 0.7383333444595337, 0.7506666779518127, 0.7563333511352539, 0.7643333077430725, 0.7766666412353516, 0.7789999842643738, 0.7913333177566528, 0.79666668176651, 0.8036666512489319, 0.8026666641235352, 0.8106666803359985, 0.8183333277702332, 0.8220000267028809, 0.8230000138282776, 0.8293333053588867, 0.831333339214325, 0.8403333425521851, 0.8343333601951599, 0.8423333168029785, 0.8403333425521851, 0.8443333506584167, 0.8450000286102295, 0.8473333120346069, 0.8479999899864197, 0.846666693687439, 0.8566666841506958, 0.8539999723434448, 0.8546666502952576, 0.8583333492279053, 0.8573333621025085, 0.8600000143051147, 0.859666645526886, 0.8603333234786987, 0.8616666793823242, 0.8673333525657654, 0.8629999756813049, 0.8666666746139526, 0.8646666407585144, 0.8646666407585144, 0.8706666827201843, 0.8673333525657654, 0.8726666569709778, 0.8659999966621399, 0.8703333139419556, 0.8643333315849304, 0.8693333268165588, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8637142777442932, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2232284545898438, 1.867627501487732, 1.396235704421997, 1.1173547506332397, 0.940475583076477, 0.8490160703659058, 0.7805472612380981, 0.7349242568016052, 0.6966749429702759, 0.6625345349311829, 0.6331004500389099, 0.624300479888916, 0.6086448431015015, 0.5764302611351013, 0.5665323138237, 0.5530267953872681, 0.5345865488052368, 0.5250071883201599, 0.5063772797584534, 0.5023319721221924, 0.4939432740211487, 0.4861464500427246, 0.4670778512954712, 0.47041410207748413, 0.4631841778755188, 0.4487369954586029, 0.4405940771102905, 0.43734949827194214, 0.428255170583725, 0.4187377989292145, 0.4130570888519287, 0.4026997983455658, 0.3990348279476166, 0.3971952497959137, 0.3947056531906128, 0.3782709240913391, 0.37715309858322144, 0.373642235994339, 0.3679654598236084, 0.35880422592163086, 0.3530313968658447, 0.34989333152770996, 0.3527897596359253, 0.3346088230609894, 0.338623583316803, 0.3313204348087311, 0.3282538056373596, 0.3237120509147644, 0.32089054584503174, 0.31818151473999023, 0.31105902791023254, 0.3028564155101776, 0.29397353529930115, 0.30638325214385986, 0.3001897931098938, 0.2919485569000244, 0.29313430190086365, 0.2883439362049103, 0.27617231011390686, 0.28007224202156067, 0.270687997341156, 0.26156485080718994, 0.26307573914527893, 0.25803497433662415, 0.2531227171421051, 0.2539975047111511, 0.2414335012435913, 0.24197189509868622, 0.24115553498268127], "accuracy": [0.26760005950927734, 0.4939902126789093, 0.5638620853424072, 0.6127327680587769, 0.6641130447387695, 0.6930392384529114, 0.7238145470619202, 0.7301545143127441, 0.7470611333847046, 0.7568352818489075, 0.7697794437408447, 0.772288978099823, 0.7734777331352234, 0.7880068421363831, 0.7891955971717834, 0.8030643463134766, 0.8055738806724548, 0.8078193068504333, 0.8162726163864136, 0.8186501264572144, 0.8201030492782593, 0.8222163319587708, 0.8327829837799072, 0.8323867321014404, 0.8330471515655518, 0.8330471515655518, 0.844010055065155, 0.842028796672821, 0.8482366800308228, 0.8482366800308228, 0.850350022315979, 0.8562937378883362, 0.8545766472816467, 0.8533879518508911, 0.8549728989601135, 0.8632941246032715, 0.8642187118530273, 0.8627657890319824, 0.8676528930664062, 0.8721436858177185, 0.8696341514587402, 0.8705587387084961, 0.8730682730674744, 0.8766345381736755, 0.8780874609947205, 0.8809932470321655, 0.8825782537460327, 0.8840311765670776, 0.8838990926742554, 0.8840311765670776, 0.8857482671737671, 0.8893144726753235, 0.8936732411384583, 0.889578640460968, 0.8865407705307007, 0.8898428082466125, 0.894069492816925, 0.8963148593902588, 0.9008057117462158, 0.8993527889251709, 0.9039757251739502, 0.9031832218170166, 0.90423983335495, 0.9052965044975281, 0.9078060984611511, 0.9085986018180847, 0.9126931428909302, 0.913617730140686, 0.908730685710907], "val_loss": [2.038740396499634, 1.5171715021133423, 1.0473159551620483, 0.8442380428314209, 0.7491798400878906, 0.6933841705322266, 0.6515118479728699, 0.6183586716651917, 0.5979377627372742, 0.5661879777908325, 0.5506376028060913, 0.5405625700950623, 0.5289685726165771, 0.5174858570098877, 0.506500244140625, 0.491400808095932, 0.4819393455982208, 0.48331111669540405, 0.4687809348106384, 0.4618605971336365, 0.45466727018356323, 0.45083120465278625, 0.44277164340019226, 0.4397162199020386, 0.4351538121700287, 0.43167179822921753, 0.4266863167285919, 0.41956156492233276, 0.41381633281707764, 0.4097931981086731, 0.40760645270347595, 0.40591031312942505, 0.4046865999698639, 0.3985390365123749, 0.4005460739135742, 0.3931664228439331, 0.3916407525539398, 0.390500009059906, 0.38733845949172974, 0.38513216376304626, 0.38611868023872375, 0.38095206022262573, 0.37848401069641113, 0.37916189432144165, 0.37503695487976074, 0.3760579824447632, 0.37282678484916687, 0.37593522667884827, 0.3705081343650818, 0.36792126297950745, 0.36674267053604126, 0.3684611916542053, 0.36421114206314087, 0.36646807193756104, 0.3664645850658417, 0.36198002099990845, 0.3621421754360199, 0.3575044274330139, 0.3643055856227875, 0.3575460612773895, 0.35663121938705444, 0.3584272861480713, 0.3575151264667511, 0.35960718989372253, 0.35919588804244995, 0.35912877321243286, 0.3611679971218109, 0.35379841923713684, 0.3569830656051636], "val_accuracy": [0.531333327293396, 0.6606666445732117, 0.6830000281333923, 0.7093333601951599, 0.7333333492279053, 0.7463333606719971, 0.7606666684150696, 0.7676666378974915, 0.7820000052452087, 0.7923333048820496, 0.8003333210945129, 0.800000011920929, 0.8133333325386047, 0.8100000023841858, 0.8186666369438171, 0.8226666450500488, 0.8289999961853027, 0.8266666531562805, 0.8323333263397217, 0.8293333053588867, 0.8370000123977661, 0.8373333215713501, 0.8429999947547913, 0.8446666598320007, 0.8416666388511658, 0.8456666469573975, 0.8433333039283752, 0.8460000157356262, 0.8510000109672546, 0.8486666679382324, 0.8519999980926514, 0.8539999723434448, 0.8486666679382324, 0.8583333492279053, 0.8579999804496765, 0.8606666922569275, 0.8610000014305115, 0.8569999933242798, 0.8600000143051147, 0.8613333106040955, 0.859666645526886, 0.8643333315849304, 0.8613333106040955, 0.8610000014305115, 0.8619999885559082, 0.8610000014305115, 0.8656666874885559, 0.8650000095367432, 0.8669999837875366, 0.8656666874885559, 0.8666666746139526, 0.8673333525657654, 0.8703333139419556, 0.8693333268165588, 0.8669999837875366, 0.8659999966621399, 0.8706666827201843, 0.8690000176429749, 0.8700000047683716, 0.8686666488647461, 0.8690000176429749, 0.8723333477973938, 0.8726666569709778, 0.8740000128746033, 0.8726666569709778, 0.871999979019165, 0.8709999918937683, 0.8740000128746033, 0.8730000257492065]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 0, 0, 1, 1, 1], [0, 3, 0, 4], [0, 6, 3], [0], [0, 1], [0], [1], [0]], "fitness": -0.8528571724891663, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2926528453826904, 2.1898739337921143, 1.7699306011199951, 1.3628754615783691, 1.0813713073730469, 0.9351310133934021, 0.8514760136604309, 0.8161895275115967, 0.7710809707641602, 0.736685037612915, 0.7148615121841431, 0.7046818733215332, 0.6641439199447632, 0.6397509574890137, 0.6253454685211182, 0.6048939228057861, 0.5940714478492737, 0.5858100056648254, 0.5789492726325989, 0.5653488039970398, 0.5501380562782288, 0.536847710609436, 0.5232372879981995, 0.5032362341880798, 0.5058119893074036, 0.4935300052165985, 0.48541632294654846, 0.4721653461456299, 0.4531240463256836, 0.46629124879837036, 0.4472360610961914, 0.44127726554870605, 0.44209644198417664, 0.4235233664512634, 0.43302661180496216, 0.4268012046813965, 0.42047369480133057, 0.41371384263038635, 0.39885610342025757, 0.3946235179901123, 0.39350175857543945, 0.38971424102783203], "accuracy": [0.1348566859960556, 0.3203011453151703, 0.42583543062210083, 0.5381059050559998, 0.628582775592804, 0.6528860330581665, 0.6859067678451538, 0.6936996579170227, 0.6973979473114014, 0.7111346125602722, 0.726192057132721, 0.7273808121681213, 0.7359662055969238, 0.7469290494918823, 0.7543256878852844, 0.7663452625274658, 0.7726852297782898, 0.7807422876358032, 0.7750627398490906, 0.7887993454933167, 0.7868181467056274, 0.791969358921051, 0.8034605979919434, 0.8095363974571228, 0.8042530417442322, 0.8158763647079468, 0.8197067975997925, 0.8168009519577026, 0.826310932636261, 0.8219521641731262, 0.8348963260650635, 0.8343679904937744, 0.8363492488861084, 0.837537944316864, 0.8379341959953308, 0.839519202709198, 0.8399154543876648, 0.8424250483512878, 0.8444063067436218, 0.8511425256729126, 0.8496896028518677, 0.852331280708313], "val_loss": [2.246328830718994, 2.017219305038452, 1.132961630821228, 0.8879995942115784, 0.7819145321846008, 0.7336793541908264, 0.6958845257759094, 0.6570345163345337, 0.6332820653915405, 0.6126454472541809, 0.5832362174987793, 0.5641299486160278, 0.5446028113365173, 0.5503175854682922, 0.5428450703620911, 0.5374740958213806, 0.5186665654182434, 0.5102137923240662, 0.5096287727355957, 0.5043857097625732, 0.49355262517929077, 0.48532870411872864, 0.4784744381904602, 0.46710681915283203, 0.457408607006073, 0.4556279182434082, 0.4493730068206787, 0.44909948110580444, 0.4588201642036438, 0.450102299451828, 0.4274387061595917, 0.42837053537368774, 0.4323398768901825, 0.4328112006187439, 0.43252483010292053, 0.4218754172325134, 0.42744994163513184, 0.41321390867233276, 0.4078705906867981, 0.4336003363132477, 0.4139269292354584, 0.41145628690719604], "val_accuracy": [0.4243333339691162, 0.43166667222976685, 0.6393333077430725, 0.7013333439826965, 0.7193333506584167, 0.7143333554267883, 0.7266666889190674, 0.7563333511352539, 0.7710000276565552, 0.7663333415985107, 0.7710000276565552, 0.7826666831970215, 0.7896666526794434, 0.7900000214576721, 0.7979999780654907, 0.7963333129882812, 0.8026666641235352, 0.8130000233650208, 0.8009999990463257, 0.8090000152587891, 0.8216666579246521, 0.8306666612625122, 0.8336666822433472, 0.8360000252723694, 0.8443333506584167, 0.8486666679382324, 0.8533333539962769, 0.8516666889190674, 0.846666693687439, 0.8496666550636292, 0.8579999804496765, 0.8569999933242798, 0.8636666536331177, 0.8600000143051147, 0.856333315372467, 0.862333357334137, 0.8686666488647461, 0.8650000095367432, 0.8666666746139526, 0.8629999756813049, 0.8676666617393494, 0.8653333187103271]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 7, 4, 3, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8294285535812378, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.610148549079895, 0.8543993830680847, 0.691156268119812, 0.6278711557388306, 0.5938781499862671, 0.5579309463500977, 0.5378288626670837, 0.5483857989311218, 0.5369980335235596, 0.5081325769424438, 0.5247164368629456, 0.5246780514717102, 0.5227681398391724, 0.5005082488059998, 0.5028730630874634, 0.5471177101135254, 0.5116065144538879, 0.5100094676017761, 0.5289342999458313], "accuracy": [0.474970281124115, 0.7077004313468933, 0.746268630027771, 0.7711002230644226, 0.789988100528717, 0.7959318161010742, 0.8104609847068787, 0.8016114234924316, 0.8212917447090149, 0.8162726163864136, 0.8206313848495483, 0.8090080618858337, 0.8206313848495483, 0.8212917447090149, 0.8203672170639038, 0.822348415851593, 0.8214238286018372, 0.807158887386322, 0.8211596608161926], "val_loss": [0.8575305938720703, 0.6413853764533997, 0.5672494173049927, 0.5728387236595154, 0.5316754579544067, 0.5239428281784058, 0.5121484398841858, 0.5411577224731445, 0.526239275932312, 0.5136640667915344, 0.5377815961837769, 0.563770592212677, 0.5741232633590698, 0.5464555025100708, 0.5517663359642029, 0.5647850036621094, 0.5420205593109131, 0.5686352252960205, 0.5868551135063171], "val_accuracy": [0.7153333425521851, 0.7593333125114441, 0.7866666913032532, 0.7953333258628845, 0.8130000233650208, 0.8076666593551636, 0.8203333616256714, 0.8230000138282776, 0.8270000219345093, 0.8293333053588867, 0.8256666660308838, 0.8230000138282776, 0.8206666707992554, 0.8320000171661377, 0.8293333053588867, 0.82833331823349, 0.8140000104904175, 0.8213333487510681, 0.8216666579246521]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [8, 2, 3, 0, 3], [0, 1, 0, 2], [53, 39], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [2, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 9, 8, 1, 4, 1, 6, 2, 8], [3, 0, 0, 3, 4, 4, 3, 1, 2, 0], [16, 99, 96, 88, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 6, 3, 3, 1, 2, 1, 1, 1, 8, 5, 3, 3], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(sigma, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3035969734191895, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [89, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 6, 3, 9], [0, 2, 0, 3], [16, 16, 48], [1, 0], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 5, 1, 4, 8, 8, 8], [0, 0, 0, 3, 0, 3, 3, 2, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.pow(sigma, tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32))), sigma))), sigma), tf.math.sqrt(tf.math.sqrt(beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 3, 1, 0, 1, 1, 20, 12, 8, 4], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 2, 2, 0, 3, 4], [0, 1, 0, 2, 1], [39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 3, 3], [16, 16], [0, 1], [0], [0], [39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 4, 4, 2, 2, 9], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1, 31]], "fitness": -0.09971428662538528, "mapping_values": [1, 11, 6, 5, 2, 1, 0, 1, 1, 2, 1, 1, 1, 22, 12, 10, 7], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), grad), alpha)), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma), tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), alpha))))), beta), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.310173749923706, 2.310188055038452, 2.312537670135498, 2.3179376125335693, 2.3330726623535156, 2.380157470703125, 2.5192644596099854, 2.834221124649048], "accuracy": [0.09008057415485382, 0.09311848133802414, 0.09681680053472519, 0.09325055778026581, 0.09998679161071777, 0.10315678268671036, 0.09628847241401672, 0.1018359512090683], "val_loss": [2.309035062789917, 2.3092358112335205, 2.3094019889831543, 2.311673402786255, 2.3249592781066895, 2.365922689437866, 2.474236011505127, 2.7441439628601074], "val_accuracy": [0.09366666525602341, 0.0976666659116745, 0.10000000149011612, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [79, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 5, 1, 1, 4, 6, 6, 5, 2], [0, 2, 0, 3, 2, 0, 2, 5, 5, 4], [16, 16, 90], [0, 0, 1, 1], [0, 2], [0, 5], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 0, 4, 2, 2], [0, 0, 0, 3, 4, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.08942857384681702, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.math.square(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), tf.math.subtract(tf.math.pow(beta, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.divide_no_nan(beta, tf.math.square(grad)), tf.math.add(grad, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(sigma, tf.math.negative(grad)))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)), alpha)", "other_info": {"loss": [2.308947801589966, 2.309953451156616, 2.3097355365753174, 2.308629035949707, 2.3084518909454346, 2.308206558227539], "accuracy": [0.09272222965955734, 0.09272222965955734, 0.09100515395402908, 0.09140139818191528, 0.09100515395402908, 0.09708096832036972], "val_loss": [2.309406042098999, 2.309325933456421, 2.309277296066284, 2.3092434406280518, 2.309215545654297, 2.309192419052124], "val_accuracy": [0.08233333379030228, 0.08166666328907013, 0.0806666687130928, 0.07966666668653488, 0.0793333351612091, 0.0793333351612091]}, "mapping_values": [1, 2, 1, 1, 1, 23, 13, 10, 3, 4, 2, 2, 1, 17, 9, 8, 4], "tree_depth": 17}]