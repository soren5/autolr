[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8768571615219116, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222250461578369, 1.8634382486343384, 1.386461853981018, 1.0833044052124023, 0.9265413284301758, 0.8440244197845459, 0.7689846158027649, 0.7217835783958435, 0.6946391463279724, 0.6591481566429138, 0.6302332282066345, 0.6071098446846008, 0.58745938539505, 0.5740339159965515, 0.5700055360794067, 0.5476945638656616, 0.5300565958023071, 0.515175998210907, 0.5132865309715271, 0.49766114354133606, 0.4853062033653259, 0.4709930121898651, 0.4710473418235779, 0.45622146129608154, 0.4409819543361664, 0.44101276993751526, 0.42332780361175537, 0.42639458179473877, 0.413105309009552, 0.4150063693523407, 0.4078751504421234, 0.3973477780818939, 0.39182016253471375, 0.3888950049877167, 0.3774554133415222, 0.3726383447647095, 0.3688918352127075, 0.3662937879562378, 0.34987398982048035, 0.35581469535827637, 0.34829020500183105, 0.33901554346084595, 0.33875879645347595, 0.33434274792671204, 0.3242861330509186, 0.3246440291404724, 0.316322922706604, 0.3147198557853699, 0.30453887581825256, 0.30218783020973206, 0.3011622130870819, 0.2966826260089874], "accuracy": [0.2744683623313904, 0.4897635579109192, 0.5694096088409424, 0.6217144131660461, 0.6646413803100586, 0.6939638257026672, 0.7255316376686096, 0.7404569983482361, 0.7494386434555054, 0.7559106945991516, 0.7676661014556885, 0.7788931727409363, 0.7827235460281372, 0.7905164361000061, 0.7917051911354065, 0.7971205711364746, 0.8080834746360779, 0.8150838613510132, 0.8153480291366577, 0.8183859586715698, 0.8239334225654602, 0.830669641494751, 0.8300092220306396, 0.8387266993522644, 0.8397833704948425, 0.8421608805656433, 0.8455950617790222, 0.8449346423149109, 0.852331280708313, 0.8475762605667114, 0.850350022315979, 0.8577466607093811, 0.8562937378883362, 0.8622375130653381, 0.8676528930664062, 0.8672566413879395, 0.867520809173584, 0.8693699836730957, 0.8765024542808533, 0.8693699836730957, 0.8729361891746521, 0.8742570281028748, 0.8754457831382751, 0.878351628780365, 0.8824461698532104, 0.8805969953536987, 0.8819178342819214, 0.8868049383163452, 0.887597382068634, 0.8906353116035461, 0.887201189994812, 0.8918240666389465], "val_loss": [2.0386195182800293, 1.5141637325286865, 1.0538526773452759, 0.8596723675727844, 0.7759342193603516, 0.7192841172218323, 0.6771690249443054, 0.6437584757804871, 0.6193508505821228, 0.5922199487686157, 0.5729194283485413, 0.5551856756210327, 0.5385822653770447, 0.5257654786109924, 0.5165361166000366, 0.5011810660362244, 0.4919561743736267, 0.48552361130714417, 0.47933295369148254, 0.4656471014022827, 0.4598849415779114, 0.45053231716156006, 0.4469571113586426, 0.437753826379776, 0.434342622756958, 0.42675578594207764, 0.4235270917415619, 0.4175274670124054, 0.41885218024253845, 0.4114329516887665, 0.4080221652984619, 0.403830349445343, 0.40030863881111145, 0.3936823010444641, 0.39308154582977295, 0.3908149003982544, 0.38946422934532166, 0.38555654883384705, 0.385292649269104, 0.37694936990737915, 0.3787061274051666, 0.3754332959651947, 0.37116917967796326, 0.3721087574958801, 0.36685043573379517, 0.36866259574890137, 0.3663710057735443, 0.36438125371932983, 0.3633136749267578, 0.36815738677978516, 0.3613807260990143, 0.3633389472961426], "val_accuracy": [0.5276666879653931, 0.6579999923706055, 0.6809999942779541, 0.7016666531562805, 0.7269999980926514, 0.7383333444595337, 0.7506666779518127, 0.7563333511352539, 0.7643333077430725, 0.7766666412353516, 0.7789999842643738, 0.7913333177566528, 0.79666668176651, 0.8036666512489319, 0.8026666641235352, 0.8106666803359985, 0.8183333277702332, 0.8220000267028809, 0.8230000138282776, 0.8293333053588867, 0.831333339214325, 0.8403333425521851, 0.8343333601951599, 0.8423333168029785, 0.8403333425521851, 0.8443333506584167, 0.8450000286102295, 0.8473333120346069, 0.8479999899864197, 0.846666693687439, 0.8566666841506958, 0.8539999723434448, 0.8546666502952576, 0.8583333492279053, 0.8573333621025085, 0.8600000143051147, 0.859666645526886, 0.8603333234786987, 0.8616666793823242, 0.8673333525657654, 0.8629999756813049, 0.8666666746139526, 0.8646666407585144, 0.8646666407585144, 0.8706666827201843, 0.8673333525657654, 0.8726666569709778, 0.8659999966621399, 0.8703333139419556, 0.8643333315849304, 0.8693333268165588, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8557142615318298, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222273826599121, 1.8697701692581177, 1.3928945064544678, 1.089298129081726, 0.9255644679069519, 0.8266193270683289, 0.7637795805931091, 0.7164789438247681, 0.6754364967346191, 0.650597333908081, 0.6163259148597717, 0.5984538793563843, 0.5811389088630676, 0.5607691407203674, 0.5477413535118103, 0.5370063781738281, 0.5218613147735596, 0.5106226205825806, 0.49256691336631775, 0.49240726232528687, 0.46907198429107666, 0.46491047739982605, 0.4577857255935669, 0.44122424721717834, 0.4278496503829956, 0.4328228235244751, 0.4187069237232208, 0.4091227948665619, 0.40758898854255676, 0.4043894410133362, 0.39086446166038513, 0.39621502161026], "accuracy": [0.27803459763526917, 0.4830273389816284, 0.5670320987701416, 0.6155065298080444, 0.6724342703819275, 0.7058512568473816, 0.7187954187393188, 0.7382115721702576, 0.7523444890975952, 0.7623828053474426, 0.7730814814567566, 0.7791573405265808, 0.7840443849563599, 0.7921014428138733, 0.7989697456359863, 0.7988376617431641, 0.8094043135643005, 0.8120459914207458, 0.8198388814926147, 0.8185180425643921, 0.8244617581367493, 0.8309338092803955, 0.8356888294219971, 0.8404437899589539, 0.8412362933158875, 0.8426892161369324, 0.8482366800308228, 0.852859616279602, 0.8506141901016235, 0.8568220734596252, 0.8577466607093811, 0.8603883385658264], "val_loss": [2.0407421588897705, 1.515810251235962, 1.0370177030563354, 0.8289625644683838, 0.7435006499290466, 0.6839503645896912, 0.6412295699119568, 0.6089601516723633, 0.5890941023826599, 0.562471330165863, 0.5479750037193298, 0.5307247638702393, 0.5201064348220825, 0.5037562251091003, 0.5003569722175598, 0.4881919026374817, 0.4849397838115692, 0.4814412295818329, 0.4633411467075348, 0.46116769313812256, 0.4497790038585663, 0.4458537995815277, 0.43996545672416687, 0.43292513489723206, 0.43029773235321045, 0.4290049374103546, 0.4194614589214325, 0.4205073118209839, 0.4121721088886261, 0.4113590121269226, 0.4110482633113861, 0.4116324186325073], "val_accuracy": [0.5583333373069763, 0.6653333306312561, 0.687666654586792, 0.7123333215713501, 0.7360000014305115, 0.753333330154419, 0.7616666555404663, 0.7796666622161865, 0.7850000262260437, 0.7913333177566528, 0.7953333258628845, 0.8046666383743286, 0.8116666674613953, 0.8100000023841858, 0.8086666464805603, 0.8183333277702332, 0.8173333406448364, 0.8203333616256714, 0.8353333473205566, 0.8326666951179504, 0.8366666436195374, 0.840666651725769, 0.8446666598320007, 0.8493333458900452, 0.8443333506584167, 0.8493333458900452, 0.8569999933242798, 0.8473333120346069, 0.8543333411216736, 0.8546666502952576, 0.8536666631698608, 0.8503333330154419]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 1], [0, 3], [0, 2], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.845714271068573, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.291693687438965, 2.1865715980529785, 1.7553296089172363, 1.33437979221344, 1.0780712366104126, 0.9103837609291077, 0.8635155558586121, 0.8122596740722656, 0.7679827213287354, 0.7410663366317749, 0.7278377413749695, 0.6957393884658813, 0.6590030789375305, 0.6300734281539917, 0.6142391562461853, 0.591940701007843, 0.5783251523971558, 0.5799445509910583, 0.5639862418174744, 0.5556637644767761, 0.5479574799537659, 0.5422362089157104, 0.5308734774589539, 0.5166765451431274, 0.5107052326202393, 0.5002472400665283, 0.49321886897087097, 0.48889556527137756, 0.4761224091053009, 0.45781195163726807, 0.4624366760253906, 0.4527971148490906, 0.43148425221443176, 0.43351852893829346, 0.4232402741909027, 0.4338255822658539, 0.4028710424900055, 0.4097188413143158, 0.4132027328014374, 0.40130385756492615, 0.3898817300796509, 0.38857319951057434, 0.3904210031032562], "accuracy": [0.1320829540491104, 0.3295469582080841, 0.43230748176574707, 0.5448421835899353, 0.64231938123703, 0.6618676781654358, 0.6841896772384644, 0.6935675740242004, 0.7137762308120728, 0.7092854380607605, 0.7248712182044983, 0.7417778372764587, 0.7469290494918823, 0.7663452625274658, 0.7626469135284424, 0.7683265209197998, 0.7795535326004028, 0.7808743715286255, 0.7829877138137817, 0.7931581139564514, 0.7903843522071838, 0.7886672616004944, 0.7996301651000977, 0.8017435073852539, 0.8062343001365662, 0.8055738806724548, 0.8115176558494568, 0.8087438941001892, 0.8128384351730347, 0.8183859586715698, 0.828820526599884, 0.8256505131721497, 0.8319904804229736, 0.8393871188163757, 0.8400475382804871, 0.8359529972076416, 0.8465195894241333, 0.8433496356010437, 0.8425571322441101, 0.8465195894241333, 0.8529917001724243, 0.848368763923645, 0.8454629778862], "val_loss": [2.245938777923584, 2.0148003101348877, 1.1351960897445679, 0.8654366731643677, 0.7484113574028015, 0.6884010434150696, 0.6557241082191467, 0.6349132657051086, 0.6318800449371338, 0.5983839631080627, 0.5633693933486938, 0.5504781603813171, 0.5325546264648438, 0.5169512033462524, 0.5137158632278442, 0.4951425790786743, 0.48399439454078674, 0.4904865324497223, 0.4854108393192291, 0.4772823452949524, 0.48455610871315, 0.474030464887619, 0.47832179069519043, 0.47079363465309143, 0.46888062357902527, 0.4524756371974945, 0.45410001277923584, 0.44495028257369995, 0.43862760066986084, 0.4306893050670624, 0.42291495203971863, 0.4090380072593689, 0.41374439001083374, 0.4149829149246216, 0.4146454930305481, 0.4140666127204895, 0.42018574476242065, 0.4191473424434662, 0.4115237593650818, 0.40866634249687195, 0.40956270694732666, 0.4076871871948242, 0.41022244095802307], "val_accuracy": [0.4176666736602783, 0.4413333237171173, 0.6520000100135803, 0.6976666450500488, 0.7183333039283752, 0.734666645526886, 0.7480000257492065, 0.7440000176429749, 0.7543333172798157, 0.7630000114440918, 0.7796666622161865, 0.7833333611488342, 0.7990000247955322, 0.8053333163261414, 0.8043333292007446, 0.8109999895095825, 0.8213333487510681, 0.8213333487510681, 0.8196666836738586, 0.8186666369438171, 0.8213333487510681, 0.8256666660308838, 0.8180000185966492, 0.8320000171661377, 0.8393333554267883, 0.8316666483879089, 0.8326666951179504, 0.8493333458900452, 0.8423333168029785, 0.8513333201408386, 0.8506666421890259, 0.8553333282470703, 0.8586666584014893, 0.8576666712760925, 0.8489999771118164, 0.8493333458900452, 0.8579999804496765, 0.8616666793823242, 0.8586666584014893, 0.8523333072662354, 0.8546666502952576, 0.8560000061988831, 0.8556666374206543]}, "mapping_values": [1, 10, 5, 5, 3, 4, 2, 2, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 2, 0, 1, 3, 7, 9, 1], [0, 3, 6, 2, 3, 0], [0, 27, 87], [1], [0], [2], [0]], "fitness": -0.821142852306366, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.add(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), grad), tf.math.subtract(beta, sigma))), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.7018804550170898, 0.9482309818267822, 0.7431043982505798, 0.6853898167610168, 0.6407111287117004, 0.6191107034683228, 0.5896669030189514, 0.6096835732460022, 0.5915322303771973, 0.5559788942337036, 0.5714606046676636, 0.569056510925293, 0.565330445766449, 0.6546906232833862], "accuracy": [0.4675736427307129, 0.6734909415245056, 0.7279091477394104, 0.7452120184898376, 0.7589486241340637, 0.7721568942070007, 0.7844406366348267, 0.7895918488502502, 0.7898560166358948, 0.7994980812072754, 0.7959318161010742, 0.8010830879211426, 0.7987055778503418, 0.7917051911354065], "val_loss": [0.7756465077400208, 0.6941165328025818, 0.5957676768302917, 0.5497405529022217, 0.5274932980537415, 0.5242041945457458, 0.5891088247299194, 0.5395660996437073, 0.5326313376426697, 0.5897733569145203, 0.5713528394699097, 0.545090913772583, 0.6572800874710083, 0.5769659280776978], "val_accuracy": [0.7183333039283752, 0.7639999985694885, 0.7723333239555359, 0.7929999828338623, 0.8083333373069763, 0.8033333420753479, 0.8073333501815796, 0.8069999814033508, 0.8263333439826965, 0.8103333115577698, 0.8240000009536743, 0.8080000281333923, 0.8256666660308838, 0.8100000023841858]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 15, 9, 6, 3, 1, 0, 1, 0], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [0, 2, 3, 0, 3, 4, 4, 2, 6, 4, 7, 5, 5, 0, 1], [0, 1, 0, 2, 2, 0, 0, 1, 3, 2, 0], [39, 39, 2, 97, 14], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 9, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 42, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 26, 15, 11, 5, 10, 6, 4, 2, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.pow(tf.math.add(tf.math.divide_no_nan(tf.math.pow(grad, grad), tf.math.add(tf.math.square(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.negative(tf.math.subtract(alpha, grad)))), grad), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(sigma, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1], [2, 2, 3, 0, 3, 4, 1], [0, 1, 0, 1, 1, 0, 2], [39, 37, 49], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 2, 8], [1, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 8, 6, 8, 1, 4, 1, 2, 2, 8, 9], [4, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 54, 55, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 7, 7, 3, 1, 0, 1, 0, 2, 1, 1, 1, 20, 12, 8, 5], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), alpha)), tf.math.pow(tf.math.subtract(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(grad, tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.add(sigma, tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))))), sigma)), tf.math.sqrt(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3], [1, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 6, 3, 0, 5, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 76, 99, 61, 1]], "fitness": -0.09342857450246811, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.311669111251831, 2.3090391159057617, 2.309561252593994, 2.30989146232605, 2.3101015090942383, 2.3103721141815186], "accuracy": [0.08757099509239197, 0.09536388516426086, 0.09113723784685135, 0.09391097724437714, 0.09589222073554993, 0.09285431355237961], "val_loss": [2.3078181743621826, 2.3078181743621826, 2.3078181743621826, 2.3078181743621826, 2.3078181743621826, 2.3078181743621826], "val_accuracy": [0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}, "mapping_values": [1, 2, 1, 1, 0, 8, 5, 3, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 2, 4, 3], [0, 1, 0, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [2, 4, 1, 3], [37, 16], [0, 1], [0], [0], [0], [0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [0, 21]], "fitness": -0.0925714299082756, "mapping_values": [1, 10, 5, 5, 2, 9, 5, 4, 0, 2, 1, 1, 1, 3, 1, 2, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(beta), grad), tf.math.multiply(alpha, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.310105800628662, 2.30935001373291, 2.3101296424865723, 2.310577154159546, 2.31141996383667, 2.309650182723999], "accuracy": [0.08717474341392517, 0.09285431355237961, 0.0936468094587326, 0.09760929644107819, 0.08875974267721176, 0.09509972482919693], "val_loss": [2.3082966804504395, 2.3082966804504395, 2.3082966804504395, 2.3082966804504395, 2.3082966804504395, 2.3082966804504395], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}]