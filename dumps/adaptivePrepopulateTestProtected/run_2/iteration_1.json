[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8631428480148315, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223928689956665, 1.872135043144226, 1.390397310256958, 1.0875040292739868, 0.931922197341919, 0.8290881514549255, 0.7621635794639587, 0.7358366250991821, 0.6876312494277954, 0.6563035845756531, 0.632442831993103, 0.6164954900741577, 0.5919244885444641, 0.5829605460166931, 0.5681706070899963, 0.551311194896698, 0.5422223210334778, 0.5306169390678406, 0.5158964395523071, 0.5077179670333862, 0.4938583970069885, 0.4909801781177521, 0.472075492143631, 0.46755272150039673, 0.45282891392707825, 0.450733482837677, 0.4415033757686615, 0.43196871876716614, 0.4266049265861511, 0.4195760488510132, 0.4036409556865692, 0.41181185841560364, 0.4037378430366516, 0.3987623155117035, 0.39144524931907654, 0.3831365406513214, 0.3774571716785431, 0.3773548901081085, 0.37000641226768494, 0.37040963768959045, 0.35662633180618286, 0.3529205620288849, 0.34859052300453186, 0.34740111231803894, 0.3431754410266876, 0.3304647207260132, 0.33423659205436707, 0.32423707842826843, 0.317550390958786, 0.31134310364723206, 0.3143421411514282, 0.3092615604400635, 0.3013363182544708, 0.30147886276245117, 0.30022352933883667, 0.2933639585971832, 0.27748826146125793, 0.2872168719768524, 0.27495163679122925, 0.28196606040000916, 0.2748720347881317, 0.2668215036392212], "accuracy": [0.27182671427726746, 0.4843481779098511, 0.5692775249481201, 0.6180161237716675, 0.6664905548095703, 0.7096816897392273, 0.7265883088111877, 0.7358341217041016, 0.7518161535263062, 0.7691190242767334, 0.7758552432060242, 0.780610203742981, 0.7880068421363831, 0.7873464822769165, 0.7981772422790527, 0.804649293422699, 0.8057059645652771, 0.8127063512802124, 0.8212917447090149, 0.8182538747787476, 0.8280280232429504, 0.8259146809577942, 0.8360850811004639, 0.830669641494751, 0.8388587832450867, 0.8401796221733093, 0.8474441766738892, 0.8459912538528442, 0.8504821062088013, 0.8533879518508911, 0.8552370667457581, 0.8578787446022034, 0.8585391640663147, 0.8584070801734924, 0.863558292388916, 0.8634262084960938, 0.8651432991027832, 0.869502067565918, 0.8689737319946289, 0.8687095642089844, 0.8742570281028748, 0.8767666220664978, 0.8761062026023865, 0.8759741187095642, 0.8808611631393433, 0.8811253309249878, 0.8791441321372986, 0.8825782537460327, 0.8842953443527222, 0.8878615498542786, 0.8873332738876343, 0.8873332738876343, 0.8918240666389465, 0.8906353116035461, 0.8956544995307922, 0.8927486538887024, 0.9017302989959717, 0.898428201675415, 0.8968431949615479, 0.895918607711792, 0.9008057117462158, 0.9055606722831726], "val_loss": [2.041461229324341, 1.5221993923187256, 1.0419083833694458, 0.8351836204528809, 0.7462688684463501, 0.6923638582229614, 0.643740177154541, 0.6188275814056396, 0.5925360918045044, 0.5641840100288391, 0.5494758486747742, 0.5344474911689758, 0.5222393274307251, 0.5135359168052673, 0.498867392539978, 0.4879835546016693, 0.47785335779190063, 0.4717300534248352, 0.459615558385849, 0.4544309079647064, 0.4460260272026062, 0.4410524368286133, 0.43367627263069153, 0.4334241449832916, 0.42625245451927185, 0.42908453941345215, 0.41702795028686523, 0.41337865591049194, 0.41185876727104187, 0.40558576583862305, 0.40207770466804504, 0.39767247438430786, 0.39823001623153687, 0.3899371027946472, 0.38812580704689026, 0.38980916142463684, 0.3853013515472412, 0.3854421377182007, 0.3790302872657776, 0.3830221891403198, 0.3774715065956116, 0.372773677110672, 0.3729594647884369, 0.3734579384326935, 0.3685547709465027, 0.36629387736320496, 0.3631603717803955, 0.36494937539100647, 0.36158642172813416, 0.36197590827941895, 0.3622815012931824, 0.35914355516433716, 0.36035293340682983, 0.3598179221153259, 0.3588697612285614, 0.3523533046245575, 0.3551984131336212, 0.3536922335624695, 0.35718396306037903, 0.3527745008468628, 0.35123372077941895, 0.35508397221565247], "val_accuracy": [0.5559999942779541, 0.6493333578109741, 0.6809999942779541, 0.7183333039283752, 0.7433333396911621, 0.7563333511352539, 0.7680000066757202, 0.7789999842643738, 0.7850000262260437, 0.7963333129882812, 0.8019999861717224, 0.8140000104904175, 0.8163333535194397, 0.8133333325386047, 0.8230000138282776, 0.8276666402816772, 0.8316666483879089, 0.8343333601951599, 0.8389999866485596, 0.8416666388511658, 0.8456666469573975, 0.843999981880188, 0.8493333458900452, 0.8486666679382324, 0.8463333249092102, 0.8460000157356262, 0.8553333282470703, 0.8553333282470703, 0.8603333234786987, 0.8606666922569275, 0.8600000143051147, 0.8619999885559082, 0.8586666584014893, 0.8640000224113464, 0.8640000224113464, 0.8633333444595337, 0.8650000095367432, 0.8653333187103271, 0.8659999966621399, 0.8613333106040955, 0.8673333525657654, 0.8683333396911621, 0.8666666746139526, 0.8696666955947876, 0.8730000257492065, 0.8696666955947876, 0.8713333606719971, 0.8686666488647461, 0.871666669845581, 0.8733333349227905, 0.875333309173584, 0.8713333606719971, 0.8766666650772095, 0.8706666827201843, 0.8736666440963745, 0.8763333559036255, 0.8796666860580444, 0.8796666860580444, 0.875333309173584, 0.878000020980835, 0.8756666779518127, 0.8766666650772095]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 1, 1], [0, 5, 1], [0, 3], [0], [0, 0, 0, 0, 1], [0, 2, 9, 0], [0], [0, 86], [0, 1], [0], [1], [0]], "fitness": -0.8600000143051147, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293623685836792, 2.186764717102051, 1.7541275024414062, 1.3443307876586914, 1.0854315757751465, 0.9324946403503418, 0.8623872995376587, 0.8355240225791931, 0.774380087852478, 0.7531469464302063, 0.717860221862793, 0.6928965449333191, 0.661728024482727, 0.6412537097930908, 0.6243652105331421, 0.6012553572654724, 0.5913869738578796, 0.586117684841156, 0.5677984356880188, 0.5514876246452332, 0.5510321259498596, 0.5406541228294373, 0.522711455821991, 0.5105294585227966, 0.5068081617355347, 0.507838785648346, 0.48694896697998047, 0.4832824468612671, 0.4735189378261566, 0.470857173204422, 0.4561344087123871, 0.43771854043006897, 0.44018086791038513, 0.41813018918037415, 0.4219384491443634, 0.41330572962760925, 0.4040180742740631, 0.3943135142326355, 0.39567723870277405, 0.39270153641700745, 0.3851781189441681, 0.3803168535232544, 0.3641749918460846, 0.35517847537994385, 0.35597264766693115, 0.3481992781162262, 0.35687270760536194], "accuracy": [0.12772421538829803, 0.3323206901550293, 0.44551578164100647, 0.5481442213058472, 0.6215823292732239, 0.6544709801673889, 0.6791704893112183, 0.6913221478462219, 0.7017567157745361, 0.7084929347038269, 0.722229540348053, 0.7323999404907227, 0.7428345084190369, 0.7544577717781067, 0.7563069462776184, 0.7651565074920654, 0.7741381525993347, 0.7745344042778015, 0.780610203742981, 0.7882710099220276, 0.7832518815994263, 0.7885351777076721, 0.793422281742096, 0.8059701323509216, 0.8050455451011658, 0.8063663840293884, 0.8094043135643005, 0.821820080280304, 0.8175934553146362, 0.817989706993103, 0.826310932636261, 0.8360850811004639, 0.832650899887085, 0.8416325449943542, 0.8374059200286865, 0.8490291833877563, 0.8495575189590454, 0.8536521196365356, 0.8446704745292664, 0.8467837572097778, 0.850350022315979, 0.8507462739944458, 0.8623695969581604, 0.8621054291725159, 0.860652506351471, 0.8623695969581604, 0.8614450097084045], "val_loss": [2.2450807094573975, 2.01399302482605, 1.1198734045028687, 0.8855985403060913, 0.7735812067985535, 0.7349087595939636, 0.6996268630027771, 0.6446163654327393, 0.628092348575592, 0.6189060211181641, 0.5738522410392761, 0.5441526770591736, 0.5276796221733093, 0.5201771259307861, 0.5174251198768616, 0.4884522259235382, 0.4819169044494629, 0.4883247911930084, 0.4744310677051544, 0.47711077332496643, 0.4676136076450348, 0.47020772099494934, 0.4527515172958374, 0.44588932394981384, 0.43071460723876953, 0.42808589339256287, 0.42291319370269775, 0.4292372763156891, 0.4232174754142761, 0.4150194525718689, 0.4104846119880676, 0.4150061011314392, 0.41446614265441895, 0.39617374539375305, 0.3967856764793396, 0.3971841633319855, 0.401276171207428, 0.38994139432907104, 0.40331852436065674, 0.3912956416606903, 0.392710417509079, 0.3848850131034851, 0.37754276394844055, 0.40022948384284973, 0.3904462158679962, 0.38450387120246887, 0.3911312222480774], "val_accuracy": [0.4126666784286499, 0.468666672706604, 0.6499999761581421, 0.7046666741371155, 0.7200000286102295, 0.7266666889190674, 0.7283333539962769, 0.7603333592414856, 0.7636666893959045, 0.7789999842643738, 0.7863333225250244, 0.7826666831970215, 0.809333324432373, 0.7993333339691162, 0.8116666674613953, 0.8133333325386047, 0.8163333535194397, 0.8193333148956299, 0.8186666369438171, 0.8086666464805603, 0.8183333277702332, 0.8183333277702332, 0.831333339214325, 0.8296666741371155, 0.8363333344459534, 0.8386666774749756, 0.8506666421890259, 0.8473333120346069, 0.8543333411216736, 0.8493333458900452, 0.8586666584014893, 0.856333315372467, 0.859333336353302, 0.8613333106040955, 0.8579999804496765, 0.8633333444595337, 0.8633333444595337, 0.8653333187103271, 0.8603333234786987, 0.8636666536331177, 0.8679999709129333, 0.8700000047683716, 0.8700000047683716, 0.8659999966621399, 0.8696666955947876, 0.8690000176429749, 0.8693333268165588]}, "mapping_values": [1, 10, 5, 5, 3, 5, 3, 2, 1, 5, 4, 1, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8462857007980347, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2217941284179688, 1.862364411354065, 1.379660725593567, 1.0755254030227661, 0.9238176345825195, 0.8102442622184753, 0.7537858486175537, 0.7109159827232361, 0.6754093766212463, 0.6374226212501526, 0.6195662021636963, 0.5803685188293457, 0.5751724243164062, 0.5519026517868042, 0.5416520833969116, 0.5285071730613708, 0.5206782817840576, 0.5123335123062134, 0.4808233380317688, 0.480278342962265, 0.45979198813438416, 0.4604697823524475, 0.45136645436286926, 0.45032674074172974, 0.43359822034835815, 0.4281519055366516, 0.4181396961212158, 0.41259604692459106, 0.4096889793872833, 0.4021793603897095, 0.3990183472633362, 0.3847332298755646, 0.3744984269142151, 0.3764338493347168, 0.37131279706954956, 0.3680037260055542, 0.36372697353363037], "accuracy": [0.28160083293914795, 0.4935939908027649, 0.5732399821281433, 0.6296393871307373, 0.6672830581665039, 0.7117950320243835, 0.7236824631690979, 0.7421740889549255, 0.750231146812439, 0.765949010848999, 0.7725531458854675, 0.7909126877784729, 0.7852331399917603, 0.7951393723487854, 0.802271842956543, 0.8070268034934998, 0.8138951063156128, 0.8149517774581909, 0.8252542614936829, 0.828292191028595, 0.8330471515655518, 0.8323867321014404, 0.8356888294219971, 0.8387266993522644, 0.8500858545303345, 0.8454629778862, 0.8515387773513794, 0.8469158411026001, 0.8535200357437134, 0.8564258217811584, 0.8576145768165588, 0.8588033318519592, 0.8625016212463379, 0.8658037185668945, 0.8654074668884277, 0.8656716346740723, 0.8693699836730957], "val_loss": [2.0367772579193115, 1.501162052154541, 1.0141304731369019, 0.8172609210014343, 0.7300403714179993, 0.6806809902191162, 0.642556369304657, 0.610116720199585, 0.5854491591453552, 0.5630233287811279, 0.5445375442504883, 0.5286354422569275, 0.519180953502655, 0.5037385821342468, 0.49522289633750916, 0.4893505871295929, 0.479805588722229, 0.4770456850528717, 0.46377623081207275, 0.4623602330684662, 0.4586930274963379, 0.4503096640110016, 0.44286003708839417, 0.4443681538105011, 0.4342273771762848, 0.43347692489624023, 0.4301714599132538, 0.4268290102481842, 0.418954461812973, 0.4163800776004791, 0.4128972887992859, 0.40883374214172363, 0.40599706768989563, 0.4042198956012726, 0.4056944251060486, 0.4003741145133972, 0.39441242814064026], "val_accuracy": [0.5193333625793457, 0.668666660785675, 0.6926666498184204, 0.7099999785423279, 0.7323333621025085, 0.7403333187103271, 0.7580000162124634, 0.765333354473114, 0.777999997138977, 0.7820000052452087, 0.79666668176651, 0.7986666560173035, 0.8076666593551636, 0.8133333325386047, 0.8143333196640015, 0.8173333406448364, 0.8216666579246521, 0.8196666836738586, 0.8296666741371155, 0.8263333439826965, 0.82833331823349, 0.8289999961853027, 0.8379999995231628, 0.8360000252723694, 0.8426666855812073, 0.8399999737739563, 0.840666651725769, 0.8453333377838135, 0.8483333587646484, 0.8443333506584167, 0.8473333120346069, 0.8560000061988831, 0.8556666374206543, 0.8526666760444641, 0.8536666631698608, 0.8553333282470703, 0.8560000061988831]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0], [0, 4, 0, 9, 6, 5, 9, 3, 1, 6, 8, 0, 2, 9], [0, 6, 2, 5], [0, 8, 74, 23], [1], [0], [2], [0]], "fitness": -0.8159999847412109, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.square(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), tf.math.negative(grad)), tf.math.add(beta, grad)), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5092737674713135, 0.8086664080619812, 0.6734251976013184, 0.6477317810058594, 0.5952067971229553, 0.5602526664733887, 0.5492621660232544, 0.5145703554153442, 0.5061805248260498, 0.5080968737602234, 0.5231887102127075, 0.4862481653690338, 0.475759357213974, 0.5048728585243225, 0.4844071567058563, 0.5241017937660217, 0.49106594920158386, 0.47794023156166077, 0.5151230096817017, 0.5091509222984314, 0.5299614667892456, 0.5165868401527405, 0.5853172540664673], "accuracy": [0.4757627844810486, 0.7166820764541626, 0.7544577717781067, 0.7563069462776184, 0.7790252566337585, 0.7923656105995178, 0.8082155585289001, 0.8127063512802124, 0.8177255392074585, 0.8219521641731262, 0.816008448600769, 0.8335754871368408, 0.8265751004219055, 0.8259146809577942, 0.8350284099578857, 0.8277638554573059, 0.8348963260650635, 0.8302733898162842, 0.8329150676727295, 0.8337075710296631, 0.8182538747787476, 0.8404437899589539, 0.8273676037788391], "val_loss": [0.8570665717124939, 0.6370302438735962, 0.5979782938957214, 0.544083297252655, 0.5557523965835571, 0.5343923568725586, 0.5332193374633789, 0.5400531888008118, 0.48821327090263367, 0.6071409583091736, 0.5276802778244019, 0.513625979423523, 0.5320106744766235, 0.6239914894104004, 0.6053867340087891, 0.5668731927871704, 0.5678057670593262, 0.5623377561569214, 0.6303415298461914, 0.5530487298965454, 0.7092427015304565, 0.623482346534729, 0.7091202735900879], "val_accuracy": [0.6956666707992554, 0.7696666717529297, 0.7733333110809326, 0.7919999957084656, 0.8063333630561829, 0.8213333487510681, 0.815666675567627, 0.824999988079071, 0.8209999799728394, 0.8360000252723694, 0.8263333439826965, 0.8343333601951599, 0.8389999866485596, 0.82833331823349, 0.8336666822433472, 0.8376666903495789, 0.8333333134651184, 0.8393333554267883, 0.8386666774749756, 0.8209999799728394, 0.831333339214325, 0.8303333520889282, 0.8040000200271606]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 18, 14, 4, 4, 1, 0, 1, 0], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [8, 2, 3, 0, 3], [0, 1, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 8], [0, 2, 0, 3], [52, 16], [0, 1], [0], [0], [71], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 8, 6, 1, 5, 7], [1, 3, 4, 2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 1, 10, 6, 4, 2, 2, 1, 1, 1, 10, 6, 4, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.sqrt(alpha), tf.math.divide_no_nan(tf.math.subtract(sigma, grad), tf.math.square(beta))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 7, 1, 3], [0, 0, 1, 0, 2], [83, 91, 27], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 0, 2, 2], [16, 16], [0, 1], [0], [0], [0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 4, 5, 4, 6, 8, 1, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 18, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 2, 2, 1, 1, 1, 12, 7, 5, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.constant(1.0, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [210185408.0, 3944781568.0, 18631278592.0, 51487690752.0, 110896111616.0, 203261689856.0], "accuracy": [0.09787346422672272, 0.10302469879388809, 0.1022322028875351, 0.09813763201236725, 0.1002509593963623, 0.09932637959718704], "val_loss": [956276160.0, 7648529920.0, 25811890176.0, 61181566976.0, 119492296704.0, 206479605760.0], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 1], [0, 1, 1, 2], [39, 39], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [8, 2, 8, 0, 3, 5], [0, 2, 3, 3], [13, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1], [6, 3, 3, 6, 8, 1, 4, 1, 2, 2, 8, 8, 0, 5], [0, 0, 3, 3, 0, 3, 3, 2, 2, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 5, 3, 2, 1, 2, 1, 1, 1, 24, 14, 10, 3], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.subtract(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.sqrt(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(sigma, sigma))), tf.math.subtract(tf.math.add(tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma), sigma), tf.math.sqrt(tf.math.sqrt(beta))))), beta), tf.math.negative(tf.math.square(grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 2, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 2, 2, 1, 4, 2, 4, 2, 8], [0, 0, 2, 4, 0, 0, 3, 1, 2, 0], [44, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 17, 8, 9, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(grad, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(sigma, alpha))), beta)", "other_info": {"loss": [2.6093626022338867, 2.3088114261627197, 2.3051252365112305, 2.3042454719543457, 2.303959846496582, 2.303941249847412, 2.3037211894989014, 2.303558588027954, 2.30332612991333, 2.3033249378204346, 2.3033456802368164], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09893012791872025, 0.09747721254825592, 0.09140139818191528, 0.09509972482919693, 0.09774138033390045, 0.09734513610601425, 0.09536388516426086, 0.09377889335155487, 0.09694888442754745], "val_loss": [2.3138656616210938, 2.3065550327301025, 2.3044326305389404, 2.3027169704437256, 2.3037171363830566, 2.303058624267578, 2.3027355670928955, 2.3028299808502197, 2.3029162883758545, 2.3028082847595215, 2.302678346633911], "val_accuracy": [0.10133333504199982, 0.09700000286102295, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10233332961797714, 0.10000000149011612, 0.10100000351667404, 0.09700000286102295, 0.10100000351667404, 0.09833333641290665]}}]