[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8768571615219116, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222250461578369, 1.8634382486343384, 1.386461853981018, 1.0833044052124023, 0.9265413284301758, 0.8440244197845459, 0.7689846158027649, 0.7217835783958435, 0.6946391463279724, 0.6591481566429138, 0.6302332282066345, 0.6071098446846008, 0.58745938539505, 0.5740339159965515, 0.5700055360794067, 0.5476945638656616, 0.5300565958023071, 0.515175998210907, 0.5132865309715271, 0.49766114354133606, 0.4853062033653259, 0.4709930121898651, 0.4710473418235779, 0.45622146129608154, 0.4409819543361664, 0.44101276993751526, 0.42332780361175537, 0.42639458179473877, 0.413105309009552, 0.4150063693523407, 0.4078751504421234, 0.3973477780818939, 0.39182016253471375, 0.3888950049877167, 0.3774554133415222, 0.3726383447647095, 0.3688918352127075, 0.3662937879562378, 0.34987398982048035, 0.35581469535827637, 0.34829020500183105, 0.33901554346084595, 0.33875879645347595, 0.33434274792671204, 0.3242861330509186, 0.3246440291404724, 0.316322922706604, 0.3147198557853699, 0.30453887581825256, 0.30218783020973206, 0.3011622130870819, 0.2966826260089874], "accuracy": [0.2744683623313904, 0.4897635579109192, 0.5694096088409424, 0.6217144131660461, 0.6646413803100586, 0.6939638257026672, 0.7255316376686096, 0.7404569983482361, 0.7494386434555054, 0.7559106945991516, 0.7676661014556885, 0.7788931727409363, 0.7827235460281372, 0.7905164361000061, 0.7917051911354065, 0.7971205711364746, 0.8080834746360779, 0.8150838613510132, 0.8153480291366577, 0.8183859586715698, 0.8239334225654602, 0.830669641494751, 0.8300092220306396, 0.8387266993522644, 0.8397833704948425, 0.8421608805656433, 0.8455950617790222, 0.8449346423149109, 0.852331280708313, 0.8475762605667114, 0.850350022315979, 0.8577466607093811, 0.8562937378883362, 0.8622375130653381, 0.8676528930664062, 0.8672566413879395, 0.867520809173584, 0.8693699836730957, 0.8765024542808533, 0.8693699836730957, 0.8729361891746521, 0.8742570281028748, 0.8754457831382751, 0.878351628780365, 0.8824461698532104, 0.8805969953536987, 0.8819178342819214, 0.8868049383163452, 0.887597382068634, 0.8906353116035461, 0.887201189994812, 0.8918240666389465], "val_loss": [2.0386195182800293, 1.5141637325286865, 1.0538526773452759, 0.8596723675727844, 0.7759342193603516, 0.7192841172218323, 0.6771690249443054, 0.6437584757804871, 0.6193508505821228, 0.5922199487686157, 0.5729194283485413, 0.5551856756210327, 0.5385822653770447, 0.5257654786109924, 0.5165361166000366, 0.5011810660362244, 0.4919561743736267, 0.48552361130714417, 0.47933295369148254, 0.4656471014022827, 0.4598849415779114, 0.45053231716156006, 0.4469571113586426, 0.437753826379776, 0.434342622756958, 0.42675578594207764, 0.4235270917415619, 0.4175274670124054, 0.41885218024253845, 0.4114329516887665, 0.4080221652984619, 0.403830349445343, 0.40030863881111145, 0.3936823010444641, 0.39308154582977295, 0.3908149003982544, 0.38946422934532166, 0.38555654883384705, 0.385292649269104, 0.37694936990737915, 0.3787061274051666, 0.3754332959651947, 0.37116917967796326, 0.3721087574958801, 0.36685043573379517, 0.36866259574890137, 0.3663710057735443, 0.36438125371932983, 0.3633136749267578, 0.36815738677978516, 0.3613807260990143, 0.3633389472961426], "val_accuracy": [0.5276666879653931, 0.6579999923706055, 0.6809999942779541, 0.7016666531562805, 0.7269999980926514, 0.7383333444595337, 0.7506666779518127, 0.7563333511352539, 0.7643333077430725, 0.7766666412353516, 0.7789999842643738, 0.7913333177566528, 0.79666668176651, 0.8036666512489319, 0.8026666641235352, 0.8106666803359985, 0.8183333277702332, 0.8220000267028809, 0.8230000138282776, 0.8293333053588867, 0.831333339214325, 0.8403333425521851, 0.8343333601951599, 0.8423333168029785, 0.8403333425521851, 0.8443333506584167, 0.8450000286102295, 0.8473333120346069, 0.8479999899864197, 0.846666693687439, 0.8566666841506958, 0.8539999723434448, 0.8546666502952576, 0.8583333492279053, 0.8573333621025085, 0.8600000143051147, 0.859666645526886, 0.8603333234786987, 0.8616666793823242, 0.8673333525657654, 0.8629999756813049, 0.8666666746139526, 0.8646666407585144, 0.8646666407585144, 0.8706666827201843, 0.8673333525657654, 0.8726666569709778, 0.8659999966621399, 0.8703333139419556, 0.8643333315849304, 0.8693333268165588, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8728571534156799, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2226245403289795, 1.870027780532837, 1.3902950286865234, 1.0923247337341309, 0.9341360926628113, 0.8377888798713684, 0.7800735235214233, 0.7251201868057251, 0.6848384737968445, 0.6571978330612183, 0.6321366429328918, 0.6160626411437988, 0.6021295189857483, 0.5772550106048584, 0.5647082328796387, 0.5454515218734741, 0.5316628813743591, 0.5143713355064392, 0.5063403248786926, 0.500764787197113, 0.4844069182872772, 0.47341904044151306, 0.4706166088581085, 0.45540639758110046, 0.4424128532409668, 0.44102242588996887, 0.43261513113975525, 0.4288737177848816, 0.41773200035095215, 0.411554217338562, 0.4099220037460327, 0.3982555568218231, 0.39158183336257935, 0.3826999068260193, 0.37923771142959595, 0.36720579862594604, 0.36625364422798157, 0.3598034083843231, 0.35526105761528015, 0.3493136763572693, 0.3431414067745209, 0.3397391140460968, 0.33192652463912964, 0.33333802223205566], "accuracy": [0.2727513015270233, 0.4885748326778412, 0.5629374980926514, 0.6168273687362671, 0.6664905548095703, 0.6952846646308899, 0.7207766771316528, 0.7329282760620117, 0.7495707273483276, 0.7623828053474426, 0.7688548564910889, 0.7740060687065125, 0.7844406366348267, 0.7918372750282288, 0.7980451583862305, 0.8030643463134766, 0.8072909712791443, 0.8132346868515015, 0.8138951063156128, 0.8185180425643921, 0.8284242749214172, 0.8286884427070618, 0.8318583965301514, 0.8370096683502197, 0.8408400416374207, 0.8425571322441101, 0.8485008478164673, 0.846387505531311, 0.8510104417800903, 0.8525954484939575, 0.8531237840652466, 0.8577466607093811, 0.8610487580299377, 0.8618412613868713, 0.8673887252807617, 0.8659358024597168, 0.8665962219238281, 0.8685774803161621, 0.8753136992454529, 0.8732003569602966, 0.878351628780365, 0.8750495314598083, 0.8799365758895874, 0.8804649114608765], "val_loss": [2.040067434310913, 1.5197499990463257, 1.0440069437026978, 0.8389893174171448, 0.7510449290275574, 0.6982804536819458, 0.6521032452583313, 0.6187856197357178, 0.5887553095817566, 0.5639165043830872, 0.5442124605178833, 0.5296298861503601, 0.5176533460617065, 0.5014710426330566, 0.48675337433815, 0.4798113703727722, 0.4673464298248291, 0.46076351404190063, 0.4503540098667145, 0.44913387298583984, 0.4378013610839844, 0.4290851950645447, 0.4246438443660736, 0.41900691390037537, 0.4178597033023834, 0.41085049510002136, 0.4075377583503723, 0.40810275077819824, 0.4036281704902649, 0.4020532965660095, 0.39675527811050415, 0.3907257616519928, 0.39329761266708374, 0.38412585854530334, 0.3830863833427429, 0.38259366154670715, 0.3747009336948395, 0.3796091675758362, 0.37693852186203003, 0.3761993944644928, 0.37374433875083923, 0.3707975149154663, 0.3732353448867798, 0.3750246465206146], "val_accuracy": [0.5363333225250244, 0.656333327293396, 0.6840000152587891, 0.70333331823349, 0.7246666550636292, 0.7400000095367432, 0.7540000081062317, 0.7706666588783264, 0.7816666960716248, 0.7889999747276306, 0.793666660785675, 0.8100000023841858, 0.8130000233650208, 0.8193333148956299, 0.82833331823349, 0.8289999961853027, 0.8316666483879089, 0.8323333263397217, 0.8420000076293945, 0.843666672706604, 0.8399999737739563, 0.8456666469573975, 0.8486666679382324, 0.8450000286102295, 0.8450000286102295, 0.8526666760444641, 0.8529999852180481, 0.8529999852180481, 0.8550000190734863, 0.8569999933242798, 0.8560000061988831, 0.8576666712760925, 0.8600000143051147, 0.8663333058357239, 0.8653333187103271, 0.8629999756813049, 0.8673333525657654, 0.8629999756813049, 0.8706666827201843, 0.8653333187103271, 0.8633333444595337, 0.8690000176429749, 0.8659999966621399, 0.8640000224113464]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 4], [0, 5], [0], [1], [0], [2], [0]], "fitness": -0.8162857294082642, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.644968032836914, 0.8633362054824829, 0.6940072178840637, 0.6332694292068481, 0.6005640029907227, 0.5997559428215027, 0.5590953230857849, 0.5192441344261169, 0.5179418921470642, 0.5127368569374084, 0.4869469106197357, 0.4909333288669586, 0.5070357322692871, 0.4755716323852539, 0.47124481201171875, 0.46604418754577637], "accuracy": [0.4655923843383789, 0.6942279934883118, 0.750231146812439, 0.7754589915275574, 0.7766477465629578, 0.7839123010635376, 0.7991018295288086, 0.8088759779930115, 0.8138951063156128, 0.8203672170639038, 0.8212917447090149, 0.8214238286018372, 0.8244617581367493, 0.8333113193511963, 0.8318583965301514, 0.8347642421722412], "val_loss": [0.8620082139968872, 0.6205952167510986, 0.5502189993858337, 0.5145154595375061, 0.5106101632118225, 0.49381908774375916, 0.4803543984889984, 0.4983011484146118, 0.4987848401069641, 0.542353093624115, 0.5091601014137268, 0.5111597776412964, 0.5581445693969727, 0.47812268137931824, 0.5328416228294373, 0.5157763957977295], "val_accuracy": [0.6743333339691162, 0.765333354473114, 0.7979999780654907, 0.8116666674613953, 0.812666654586792, 0.8286666870117188, 0.8303333520889282, 0.8223333358764648, 0.8349999785423279, 0.8176666498184204, 0.8413333296775818, 0.8339999914169312, 0.8356666564941406, 0.8333333134651184, 0.8270000219345093, 0.8339999914169312]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 1], [0, 4], [0, 5], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8145714402198792, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2922017574310303, 2.1875901222229004, 1.7637583017349243, 1.3475961685180664, 1.0505902767181396, 0.9035552144050598, 0.8289228081703186, 0.7965375781059265, 0.741763174533844, 0.7135828137397766, 0.6994547843933105, 0.6791353821754456, 0.6399640440940857, 0.6174179911613464, 0.6053563952445984, 0.572647213935852, 0.561221182346344, 0.557555615901947, 0.5365279912948608, 0.5180608034133911, 0.5274003148078918, 0.51133131980896, 0.5042669177055359, 0.49370548129081726, 0.4768737256526947, 0.47245216369628906, 0.46900469064712524, 0.4582034647464752, 0.4466117024421692, 0.4444679021835327, 0.42048949003219604, 0.41753309965133667, 0.408810019493103, 0.40320348739624023, 0.3954942226409912, 0.40284863114356995], "accuracy": [0.12812046706676483, 0.32122573256492615, 0.43323206901550293, 0.5478800535202026, 0.6367719173431396, 0.6696605682373047, 0.698190450668335, 0.7104741930961609, 0.7128516435623169, 0.7236824631690979, 0.7413815855979919, 0.7409853339195251, 0.7553823590278625, 0.7655527591705322, 0.7677981853485107, 0.7803460359573364, 0.7844406366348267, 0.7829877138137817, 0.793422281742096, 0.8018755912780762, 0.7987055778503418, 0.8074230551719666, 0.8101968169212341, 0.8098005652427673, 0.8181217908859253, 0.8193105459213257, 0.8228767514228821, 0.8257825970649719, 0.8313300609588623, 0.8300092220306396, 0.832650899887085, 0.8424250483512878, 0.8467837572097778, 0.841500461101532, 0.8521991968154907, 0.8482366800308228], "val_loss": [2.24578595161438, 2.0140321254730225, 1.100321888923645, 0.8318643569946289, 0.7320329546928406, 0.6673012971878052, 0.6293441653251648, 0.6278904676437378, 0.622036874294281, 0.5844807028770447, 0.5632328987121582, 0.5407301187515259, 0.531812310218811, 0.5150634050369263, 0.5047307014465332, 0.5052369236946106, 0.4913462698459625, 0.4764288663864136, 0.4694182872772217, 0.4685647785663605, 0.4640456438064575, 0.4668973684310913, 0.46308451890945435, 0.45483121275901794, 0.44789794087409973, 0.43771785497665405, 0.4350361227989197, 0.4438667893409729, 0.4248676300048828, 0.4218546450138092, 0.42086389660835266, 0.41510632634162903, 0.41389673948287964, 0.4063072204589844, 0.4039117395877838, 0.3961511254310608], "val_accuracy": [0.3930000066757202, 0.42800000309944153, 0.6596666574478149, 0.7120000123977661, 0.7400000095367432, 0.7609999775886536, 0.762333333492279, 0.7603333592414856, 0.7643333077430725, 0.7713333368301392, 0.777999997138977, 0.793666660785675, 0.7910000085830688, 0.8053333163261414, 0.8023333549499512, 0.8063333630561829, 0.8233333230018616, 0.8230000138282776, 0.8149999976158142, 0.8199999928474426, 0.8273333311080933, 0.8230000138282776, 0.8236666917800903, 0.8320000171661377, 0.8403333425521851, 0.8456666469573975, 0.8429999947547913, 0.8410000205039978, 0.8423333168029785, 0.8486666679382324, 0.8546666502952576, 0.8533333539962769, 0.847000002861023, 0.8506666421890259, 0.847000002861023, 0.8489999771118164]}, "mapping_values": [1, 10, 5, 5, 3, 4, 2, 2, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [4, 1, 3, 1, 3, 5, 3, 8, 5, 8], [0, 0, 1, 0, 2, 0, 1], [83, 99, 27, 26], [0, 0, 1, 1], [0, 3], [0, 2], [16, 16], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 10, 7, 4, 4, 2, 2, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha)), tf.math.subtract(tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.square(tf.math.sqrt(alpha)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 4, 0, 3, 8], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1], [5, 2, 3, 0, 3, 1, 8, 3, 4, 2, 2, 0, 1], [0, 2, 2, 3, 2, 4, 2, 1, 1, 1], [16, 16], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 9, 4, 1, 4, 2, 8], [0, 4, 0, 3, 0, 0, 3, 1, 2, 0], [28, 99, 96, 99, 63, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 2, 23, 13, 10, 1, 2, 1, 1, 0, 16, 9, 7, 5], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.math.subtract(tf.math.sqrt(beta), tf.math.multiply(tf.math.pow(tf.math.add(grad, beta), grad), tf.math.add(tf.math.negative(tf.math.subtract(beta, alpha)), alpha))), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), grad)), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 2, 2, 0, 3, 3], [0, 1, 0, 2, 3], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 3, 3], [16, 50], [0, 1], [0], [0], [99], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 8, 6, 8, 2, 4, 1, 4, 2, 8, 5], [0, 0, 0, 3, 0, 3, 3, 1, 4, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 2, 1, 1, 1, 21, 12, 9, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), grad), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.math.pow(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma), sigma), tf.math.sqrt(tf.math.square(alpha))))), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 1], [8, 2, 9, 0, 3, 9, 3], [2, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 2, 3, 0, 3, 0, 5], [0, 3, 0, 3], [16, 1], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0], [6, 3, 3, 6, 8, 1, 5, 1, 4, 1, 8], [0, 0, 0, 3, 3, 0, 3, 1, 2, 0], [16, 99, 96, 67, 61, 24]], "fitness": -0.08971428871154785, "mapping_values": [1, 9, 7, 2, 2, 11, 7, 4, 2, 2, 1, 1, 1, 12, 6, 6, 4], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.square(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, sigma))), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.310389757156372, 2.3089892864227295, 2.3094637393951416, 2.3110270500183105, 2.310210704803467, 2.3107032775878906], "accuracy": [0.09232597798109055, 0.09298639744520187, 0.09206181764602661, 0.09351472556591034, 0.09021265059709549, 0.09087307006120682], "val_loss": [2.308763265609741, 2.308763265609741, 2.308763265609741, 2.308763265609741, 2.308763265609741, 2.308763265609741], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}}]