[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8768571615219116, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222250461578369, 1.8634382486343384, 1.386461853981018, 1.0833044052124023, 0.9265413284301758, 0.8440244197845459, 0.7689846158027649, 0.7217835783958435, 0.6946391463279724, 0.6591481566429138, 0.6302332282066345, 0.6071098446846008, 0.58745938539505, 0.5740339159965515, 0.5700055360794067, 0.5476945638656616, 0.5300565958023071, 0.515175998210907, 0.5132865309715271, 0.49766114354133606, 0.4853062033653259, 0.4709930121898651, 0.4710473418235779, 0.45622146129608154, 0.4409819543361664, 0.44101276993751526, 0.42332780361175537, 0.42639458179473877, 0.413105309009552, 0.4150063693523407, 0.4078751504421234, 0.3973477780818939, 0.39182016253471375, 0.3888950049877167, 0.3774554133415222, 0.3726383447647095, 0.3688918352127075, 0.3662937879562378, 0.34987398982048035, 0.35581469535827637, 0.34829020500183105, 0.33901554346084595, 0.33875879645347595, 0.33434274792671204, 0.3242861330509186, 0.3246440291404724, 0.316322922706604, 0.3147198557853699, 0.30453887581825256, 0.30218783020973206, 0.3011622130870819, 0.2966826260089874], "accuracy": [0.2744683623313904, 0.4897635579109192, 0.5694096088409424, 0.6217144131660461, 0.6646413803100586, 0.6939638257026672, 0.7255316376686096, 0.7404569983482361, 0.7494386434555054, 0.7559106945991516, 0.7676661014556885, 0.7788931727409363, 0.7827235460281372, 0.7905164361000061, 0.7917051911354065, 0.7971205711364746, 0.8080834746360779, 0.8150838613510132, 0.8153480291366577, 0.8183859586715698, 0.8239334225654602, 0.830669641494751, 0.8300092220306396, 0.8387266993522644, 0.8397833704948425, 0.8421608805656433, 0.8455950617790222, 0.8449346423149109, 0.852331280708313, 0.8475762605667114, 0.850350022315979, 0.8577466607093811, 0.8562937378883362, 0.8622375130653381, 0.8676528930664062, 0.8672566413879395, 0.867520809173584, 0.8693699836730957, 0.8765024542808533, 0.8693699836730957, 0.8729361891746521, 0.8742570281028748, 0.8754457831382751, 0.878351628780365, 0.8824461698532104, 0.8805969953536987, 0.8819178342819214, 0.8868049383163452, 0.887597382068634, 0.8906353116035461, 0.887201189994812, 0.8918240666389465], "val_loss": [2.0386195182800293, 1.5141637325286865, 1.0538526773452759, 0.8596723675727844, 0.7759342193603516, 0.7192841172218323, 0.6771690249443054, 0.6437584757804871, 0.6193508505821228, 0.5922199487686157, 0.5729194283485413, 0.5551856756210327, 0.5385822653770447, 0.5257654786109924, 0.5165361166000366, 0.5011810660362244, 0.4919561743736267, 0.48552361130714417, 0.47933295369148254, 0.4656471014022827, 0.4598849415779114, 0.45053231716156006, 0.4469571113586426, 0.437753826379776, 0.434342622756958, 0.42675578594207764, 0.4235270917415619, 0.4175274670124054, 0.41885218024253845, 0.4114329516887665, 0.4080221652984619, 0.403830349445343, 0.40030863881111145, 0.3936823010444641, 0.39308154582977295, 0.3908149003982544, 0.38946422934532166, 0.38555654883384705, 0.385292649269104, 0.37694936990737915, 0.3787061274051666, 0.3754332959651947, 0.37116917967796326, 0.3721087574958801, 0.36685043573379517, 0.36866259574890137, 0.3663710057735443, 0.36438125371932983, 0.3633136749267578, 0.36815738677978516, 0.3613807260990143, 0.3633389472961426], "val_accuracy": [0.5276666879653931, 0.6579999923706055, 0.6809999942779541, 0.7016666531562805, 0.7269999980926514, 0.7383333444595337, 0.7506666779518127, 0.7563333511352539, 0.7643333077430725, 0.7766666412353516, 0.7789999842643738, 0.7913333177566528, 0.79666668176651, 0.8036666512489319, 0.8026666641235352, 0.8106666803359985, 0.8183333277702332, 0.8220000267028809, 0.8230000138282776, 0.8293333053588867, 0.831333339214325, 0.8403333425521851, 0.8343333601951599, 0.8423333168029785, 0.8403333425521851, 0.8443333506584167, 0.8450000286102295, 0.8473333120346069, 0.8479999899864197, 0.846666693687439, 0.8566666841506958, 0.8539999723434448, 0.8546666502952576, 0.8583333492279053, 0.8573333621025085, 0.8600000143051147, 0.859666645526886, 0.8603333234786987, 0.8616666793823242, 0.8673333525657654, 0.8629999756813049, 0.8666666746139526, 0.8646666407585144, 0.8646666407585144, 0.8706666827201843, 0.8673333525657654, 0.8726666569709778, 0.8659999966621399, 0.8703333139419556, 0.8643333315849304, 0.8693333268165588, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8608571290969849, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2230048179626465, 1.865944504737854, 1.399101734161377, 1.0985496044158936, 0.9369492530822754, 0.8398192524909973, 0.7765089273452759, 0.7315222024917603, 0.688984215259552, 0.6595858931541443, 0.6280359029769897, 0.6033657789230347, 0.583111584186554, 0.570137619972229, 0.5602533221244812, 0.5434122681617737, 0.5293347239494324, 0.5206007957458496, 0.5046476721763611, 0.48937860131263733, 0.47356298565864563, 0.48054659366607666, 0.46616238355636597, 0.45951130986213684, 0.45248568058013916, 0.44339776039123535, 0.4302901029586792, 0.4281987249851227, 0.4199814200401306, 0.41091153025627136, 0.40115997195243835, 0.39957764744758606, 0.3933440148830414, 0.38260987401008606, 0.3787701427936554, 0.37816938757896423, 0.36734268069267273, 0.36919519305229187, 0.36581236124038696, 0.3541930615901947, 0.3526849150657654], "accuracy": [0.2759212851524353, 0.48566898703575134, 0.5596354603767395, 0.6136573553085327, 0.6691322326660156, 0.6959450244903564, 0.7170783281326294, 0.7339849472045898, 0.7518161535263062, 0.7589486241340637, 0.7732135653495789, 0.7794214487075806, 0.791441023349762, 0.7996301651000977, 0.7955356240272522, 0.804649293422699, 0.8145555257797241, 0.8133667707443237, 0.8195747137069702, 0.8301413059234619, 0.8360850811004639, 0.828820526599884, 0.8319904804229736, 0.8366134166717529, 0.8389908671379089, 0.8469158411026001, 0.8491612672805786, 0.8479725122451782, 0.8551049828529358, 0.8584070801734924, 0.8603883385658264, 0.8625016212463379, 0.8647470474243164, 0.8654074668884277, 0.8644828796386719, 0.86553955078125, 0.8730682730674744, 0.8705587387084961, 0.8705587387084961, 0.8742570281028748, 0.8792761564254761], "val_loss": [2.043243885040283, 1.5218839645385742, 1.052948236465454, 0.8381521105766296, 0.742509126663208, 0.6823412179946899, 0.6418060660362244, 0.6061017513275146, 0.5830740332603455, 0.5622786283493042, 0.5481457710266113, 0.5300539135932922, 0.5256105661392212, 0.5137726068496704, 0.4984676241874695, 0.49263182282447815, 0.47963911294937134, 0.47255322337150574, 0.4639055132865906, 0.4575742185115814, 0.45515990257263184, 0.44819971919059753, 0.44873249530792236, 0.44418543577194214, 0.43429240584373474, 0.4245413839817047, 0.42100515961647034, 0.4243544638156891, 0.41651204228401184, 0.4133435785770416, 0.40746259689331055, 0.40760335326194763, 0.4000459909439087, 0.40790489315986633, 0.39869457483291626, 0.3940240740776062, 0.4025844633579254, 0.39613574743270874, 0.39284223318099976, 0.38641130924224854, 0.3937486708164215], "val_accuracy": [0.5263333320617676, 0.6506666541099548, 0.668666660785675, 0.6996666789054871, 0.7326666712760925, 0.753000020980835, 0.7693333625793457, 0.7766666412353516, 0.7839999794960022, 0.7950000166893005, 0.7973333597183228, 0.8036666512489319, 0.8073333501815796, 0.812666654586792, 0.8176666498184204, 0.8236666917800903, 0.8266666531562805, 0.8293333053588867, 0.8316666483879089, 0.8363333344459534, 0.8366666436195374, 0.8366666436195374, 0.8389999866485596, 0.840666651725769, 0.8420000076293945, 0.8433333039283752, 0.8500000238418579, 0.8473333120346069, 0.8533333539962769, 0.8539999723434448, 0.8489999771118164, 0.8479999899864197, 0.8586666584014893, 0.8583333492279053, 0.8579999804496765, 0.8613333106040955, 0.8529999852180481, 0.8553333282470703, 0.8606666922569275, 0.8603333234786987, 0.8579999804496765]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 4, 5, 1, 4, 8, 6, 1, 5, 7, 9, 3, 2, 0, 0], [0, 0, 5, 0, 3, 1, 0, 5], [0, 82, 14, 15, 25], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8571428656578064, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.square(tf.math.subtract(tf.math.pow(tf.math.sqrt(tf.math.divide_no_nan(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))), tf.math.multiply(grad, tf.math.add(tf.math.negative(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), grad)))), tf.math.negative(alpha)), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293330430984497, 2.1909356117248535, 1.7799938917160034, 1.364641547203064, 1.0780222415924072, 0.9080355763435364, 0.8405646085739136, 0.8111334443092346, 0.7614766359329224, 0.7426585555076599, 0.7001407146453857, 0.6859570741653442, 0.6308032274246216, 0.6150994300842285, 0.5972751379013062, 0.5844698548316956, 0.5699383616447449, 0.5647258758544922, 0.5476635694503784, 0.5435612797737122, 0.5200155377388, 0.49855321645736694, 0.49323898553848267, 0.4839165210723877, 0.4791744351387024, 0.4649151563644409, 0.4614046812057495, 0.45041584968566895, 0.4432421326637268, 0.4268708825111389, 0.42154461145401, 0.4339188039302826, 0.4155200123786926, 0.39924389123916626, 0.38981619477272034, 0.3870859742164612, 0.3797799050807953, 0.3730567991733551, 0.37486323714256287, 0.36578088998794556, 0.3710874021053314, 0.35015276074409485], "accuracy": [0.1274600476026535, 0.3237352967262268, 0.4349491596221924, 0.5361247062683105, 0.6255448460578918, 0.6688680648803711, 0.6861709356307983, 0.6947563290596008, 0.7121912837028503, 0.7094175219535828, 0.7333245277404785, 0.7376832365989685, 0.7535332441329956, 0.7618544697761536, 0.770439863204956, 0.7773081660270691, 0.7844406366348267, 0.7853652238845825, 0.7907806038856506, 0.7950072884559631, 0.8000264167785645, 0.8101968169212341, 0.8101968169212341, 0.8219521641731262, 0.8191784620285034, 0.821820080280304, 0.8253863453865051, 0.8308017253875732, 0.8335754871368408, 0.8407079577445984, 0.8405758738517761, 0.8372738361358643, 0.8399154543876648, 0.8479725122451782, 0.8477083444595337, 0.8540483713150024, 0.8558974862098694, 0.8569541573524475, 0.8573504090309143, 0.860652506351471, 0.8590674996376038, 0.868049144744873], "val_loss": [2.246264934539795, 2.01607346534729, 1.123990774154663, 0.885952889919281, 0.7562742233276367, 0.6907936334609985, 0.673656165599823, 0.6579230427742004, 0.6261274218559265, 0.5942387580871582, 0.5697987675666809, 0.5552975535392761, 0.5414313077926636, 0.5279157757759094, 0.5242553949356079, 0.5207533836364746, 0.5217345952987671, 0.5139510631561279, 0.5152879357337952, 0.5017798542976379, 0.49675822257995605, 0.4989013373851776, 0.4825655221939087, 0.4753067195415497, 0.48033642768859863, 0.4722447991371155, 0.4676365852355957, 0.4660382568836212, 0.45506641268730164, 0.44737452268600464, 0.45549726486206055, 0.4434431195259094, 0.4363599121570587, 0.43868887424468994, 0.44532686471939087, 0.4374449849128723, 0.43431395292282104, 0.44164803624153137, 0.4252172112464905, 0.4136522114276886, 0.42865604162216187, 0.4349595010280609], "val_accuracy": [0.42533332109451294, 0.46266666054725647, 0.6539999842643738, 0.6909999847412109, 0.7170000076293945, 0.7353333234786987, 0.7526666522026062, 0.7553333044052124, 0.7523333430290222, 0.7639999985694885, 0.765333354473114, 0.7816666960716248, 0.7926666736602783, 0.7976666688919067, 0.7943333387374878, 0.7986666560173035, 0.8033333420753479, 0.8106666803359985, 0.8163333535194397, 0.8203333616256714, 0.8209999799728394, 0.8266666531562805, 0.8309999704360962, 0.8326666951179504, 0.8323333263397217, 0.8373333215713501, 0.8389999866485596, 0.847000002861023, 0.8503333330154419, 0.8493333458900452, 0.8516666889190674, 0.8546666502952576, 0.8543333411216736, 0.8560000061988831, 0.8569999933242798, 0.8543333411216736, 0.862666666507721, 0.859666645526886, 0.8573333621025085, 0.8556666374206543, 0.8610000014305115, 0.8579999804496765]}, "mapping_values": [1, 10, 5, 5, 3, 23, 15, 8, 5, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 24}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 2], [0, 4], [0], [1], [0], [2], [0]], "fitness": -0.8274285793304443, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5056061744689941, 0.8478745222091675, 0.7367535829544067, 0.6580250859260559, 0.5941894054412842, 0.5791313052177429, 0.5647773742675781, 0.5223314166069031, 0.517170250415802, 0.5334188342094421, 0.5037636160850525, 0.4928789436817169, 0.4922504723072052, 0.4940745234489441, 0.47742363810539246, 0.4917210638523102], "accuracy": [0.49372607469558716, 0.71100252866745, 0.7346453666687012, 0.7695152759552002, 0.7792893648147583, 0.7928939461708069, 0.7961959838867188, 0.8086118102073669, 0.8132346868515015, 0.8058380484580994, 0.8181217908859253, 0.8222163319587708, 0.8325188159942627, 0.8132346868515015, 0.8230088353157043, 0.8257825970649719], "val_loss": [0.9239564538002014, 0.6178569197654724, 0.5566950440406799, 0.551652193069458, 0.5121145844459534, 0.4922507405281067, 0.501041829586029, 0.5430441498756409, 0.5106866955757141, 0.4904170632362366, 0.5022444725036621, 0.5026153326034546, 0.540935754776001, 0.5413878560066223, 0.519451916217804, 0.5541104674339294], "val_accuracy": [0.6946666836738586, 0.7639999985694885, 0.7933333516120911, 0.7943333387374878, 0.8119999766349792, 0.8196666836738586, 0.8203333616256714, 0.8100000023841858, 0.8176666498184204, 0.8296666741371155, 0.8349999785423279, 0.8336666822433472, 0.8320000171661377, 0.8116666674613953, 0.8273333311080933, 0.8293333053588867]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [96, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 4, 0, 3, 0, 0, 3, 4, 2, 0], [16, 7, 96, 99, 61, 1]], "fitness": -0.3157142996788025, "mapping_values": [1, 9, 5, 4, 2, 6, 3, 3, 2, 2, 1, 1, 1, 12, 6, 6, 4], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.constant(1.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.28188157081604, 2.276822328567505, 2.2784407138824463, 2.27685284614563, 2.276015281677246, 2.276790142059326], "accuracy": [0.17474573850631714, 0.1768590658903122, 0.17778365314006805, 0.17778365314006805, 0.1795007288455963, 0.18663319945335388], "val_loss": [2.2733871936798096, 2.273385524749756, 2.2733848094940186, 2.2733843326568604, 2.273383855819702, 2.273383617401123], "val_accuracy": [0.3153333365917206, 0.3153333365917206, 0.3153333365917206, 0.3153333365917206, 0.3153333365917206, 0.3153333365917206]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 9, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [8], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [1, 3, 5, 6, 8, 4, 4, 1, 4, 2, 8, 7, 6, 1], [0, 0, 0, 3, 4, 0, 3, 1, 2, 0, 7, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 2, 2, 0, 1, 2, 1, 1, 1, 26, 14, 12, 6], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.pow(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), sigma)), tf.math.subtract(grad, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), tf.math.add(tf.math.sqrt(tf.math.add(alpha, beta)), tf.math.divide_no_nan(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 4, 3], [0, 2, 0, 2, 1], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 5, 4, 1, 4, 2, 8, 6], [1, 4, 6, 0, 1, 7, 4, 4, 0, 2], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 10, 6, 4, 2, 2, 1, 1, 1, 22, 12, 10, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, grad), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(grad), tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.subtract(alpha, tf.math.pow(grad, tf.math.add(grad, tf.math.sqrt(tf.math.divide_no_nan(grad, tf.constant(1.0, shape=shape, dtype=tf.float32)))))), beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1022322028875351, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [0, 1, 3, 9, 3], [0, 0, 0, 2, 3], [74, 39, 63], [0, 0], [0, 9], [0, 2, 0, 3], [91, 16], [0, 1], [0], [0], [99], [0, 1, 0, 1], [7, 5], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [0, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 3, 2, 2, 0, 1, 2, 1, 1, 1, 4, 2, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3038434982299805, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}]