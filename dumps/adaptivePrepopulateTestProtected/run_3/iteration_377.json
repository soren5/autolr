[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8808571696281433, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223215103149414, 1.8640538454055786, 1.390925645828247, 1.0857504606246948, 0.9175904989242554, 0.8278062343597412, 0.75929194688797, 0.7150763869285583, 0.6742342710494995, 0.6527069211006165, 0.6226239800453186, 0.6030511260032654, 0.5812473893165588, 0.5698184370994568, 0.5517233610153198, 0.5318202376365662, 0.5262278914451599, 0.5063096284866333, 0.4941454231739044, 0.4912639260292053, 0.47673994302749634, 0.46776485443115234, 0.45580968260765076, 0.45419755578041077, 0.4471202790737152, 0.4368197023868561, 0.4238806366920471, 0.41453513503074646, 0.41017231345176697, 0.4062040150165558, 0.40386685729026794, 0.3953916132450104, 0.39355871081352234, 0.3836102783679962, 0.37635838985443115, 0.3735085725784302, 0.363672137260437, 0.35395750403404236, 0.35972025990486145, 0.34721699357032776, 0.3442964553833008, 0.335767537355423, 0.3300938904285431, 0.32407090067863464, 0.32112976908683777, 0.3181473910808563, 0.31370431184768677, 0.3087446987628937, 0.3084625005722046, 0.30203962326049805, 0.293395072221756, 0.2889169156551361, 0.2914500832557678, 0.28307828307151794, 0.28207361698150635, 0.2786792516708374, 0.27818819880485535, 0.26387521624565125], "accuracy": [0.27222296595573425, 0.5027077198028564, 0.5674283504486084, 0.6277902722358704, 0.6709813475608826, 0.7058512568473816, 0.7269845604896545, 0.7415136694908142, 0.7586844563484192, 0.7617223858833313, 0.783119797706604, 0.7832518815994263, 0.7926297783851624, 0.8001585006713867, 0.807158887386322, 0.8103289008140564, 0.8133667707443237, 0.8190463781356812, 0.8247259259223938, 0.8271034359931946, 0.8298771381378174, 0.8341038227081299, 0.8366134166717529, 0.839519202709198, 0.8404437899589539, 0.848368763923645, 0.8515387773513794, 0.8564258217811584, 0.8529917001724243, 0.8585391640663147, 0.8515387773513794, 0.863558292388916, 0.8615770936012268, 0.8640866279602051, 0.8652753829956055, 0.8671245574951172, 0.8720116019248962, 0.8771628737449646, 0.8705587387084961, 0.876370370388031, 0.8787478804588318, 0.8784837126731873, 0.8828424215316772, 0.8842953443527222, 0.884691596031189, 0.8840311765670776, 0.8891823887825012, 0.8894465565681458, 0.8899748921394348, 0.8932769894599915, 0.8945978283882141, 0.8980319499969482, 0.896446943283081, 0.8988244533538818, 0.9019944667816162, 0.901862382888794, 0.8985602855682373, 0.904768168926239], "val_loss": [2.039530038833618, 1.5154659748077393, 1.039007544517517, 0.8366694450378418, 0.7400773167610168, 0.6859951019287109, 0.6454513669013977, 0.6114123463630676, 0.5899704694747925, 0.5724708437919617, 0.5533395409584045, 0.5345184803009033, 0.5225448608398438, 0.5092709064483643, 0.500229001045227, 0.49316829442977905, 0.480929970741272, 0.4729439616203308, 0.4688349962234497, 0.4563703238964081, 0.45455607771873474, 0.44636544585227966, 0.44144734740257263, 0.4332112669944763, 0.42851945757865906, 0.4277913272380829, 0.4196922183036804, 0.41600528359413147, 0.4114539325237274, 0.4113328456878662, 0.4059373438358307, 0.4033544063568115, 0.40210506319999695, 0.3963744640350342, 0.39264819025993347, 0.39112263917922974, 0.384288489818573, 0.383841872215271, 0.3804401755332947, 0.3786342442035675, 0.3777892291545868, 0.37486007809638977, 0.37355443835258484, 0.37450093030929565, 0.36811116337776184, 0.3697490096092224, 0.3684578537940979, 0.370509535074234, 0.36476588249206543, 0.36312252283096313, 0.361527681350708, 0.36036449670791626, 0.3581533133983612, 0.3633516728878021, 0.35499346256256104, 0.3547135293483734, 0.35882508754730225, 0.35363712906837463], "val_accuracy": [0.5473333597183228, 0.6496666669845581, 0.6846666932106018, 0.6959999799728394, 0.7279999852180481, 0.7450000047683716, 0.7580000162124634, 0.7713333368301392, 0.7763333320617676, 0.7816666960716248, 0.7963333129882812, 0.8109999895095825, 0.8116666674613953, 0.8113333582878113, 0.8116666674613953, 0.8186666369438171, 0.8259999752044678, 0.8236666917800903, 0.828000009059906, 0.8360000252723694, 0.8323333263397217, 0.8373333215713501, 0.8373333215713501, 0.8366666436195374, 0.843666672706604, 0.843999981880188, 0.846666693687439, 0.8483333587646484, 0.8493333458900452, 0.847000002861023, 0.8476666808128357, 0.8496666550636292, 0.8510000109672546, 0.8519999980926514, 0.8553333282470703, 0.8556666374206543, 0.8583333492279053, 0.859333336353302, 0.8560000061988831, 0.862333357334137, 0.8636666536331177, 0.859666645526886, 0.8636666536331177, 0.8643333315849304, 0.8653333187103271, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.8709999918937683, 0.8690000176429749, 0.8686666488647461, 0.8653333187103271, 0.8733333349227905, 0.8679999709129333, 0.8709999918937683, 0.8706666827201843, 0.8703333139419556, 0.8693333268165588]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.845714271068573, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224733352661133, 1.869434118270874, 1.3975223302841187, 1.08979070186615, 0.9247140288352966, 0.8331424593925476, 0.7733713984489441, 0.7256967425346375, 0.6847788095474243, 0.6645922064781189, 0.6292334794998169, 0.616313099861145, 0.5976331830024719, 0.5800999402999878, 0.5737113356590271, 0.5523332357406616, 0.5323147177696228, 0.5175126194953918, 0.5139111280441284, 0.5088658332824707, 0.4948737919330597, 0.4816720485687256, 0.47507646679878235, 0.47132107615470886, 0.4527227282524109, 0.44943034648895264, 0.4510240852832794, 0.4340983033180237, 0.43161460757255554, 0.4339151680469513, 0.42075902223587036, 0.4136735200881958, 0.4067648649215698, 0.3965153098106384, 0.38801053166389465, 0.3853701651096344, 0.38206276297569275, 0.37627333402633667, 0.37315234541893005, 0.36612042784690857, 0.3678329586982727, 0.3569018542766571, 0.3461529016494751, 0.3480105698108673, 0.33424851298332214, 0.33646026253700256, 0.3369627296924591, 0.32350465655326843, 0.3164125680923462, 0.3174423277378082, 0.31775200366973877, 0.31443172693252563, 0.3069162666797638, 0.3065718114376068, 0.29396960139274597, 0.2958970069885254, 0.28890296816825867, 0.28657540678977966, 0.2914581894874573, 0.2814342975616455, 0.27457883954048157, 0.2714383006095886, 0.26561883091926575, 0.2609143555164337, 0.257836252450943, 0.2591458559036255, 0.2519473135471344, 0.25095486640930176, 0.2443120926618576, 0.2424105703830719, 0.24556279182434082, 0.23161478340625763, 0.2331850677728653, 0.22515547275543213, 0.22969557344913483, 0.2237684726715088, 0.2229240983724594, 0.2163170576095581, 0.20649248361587524, 0.2056589424610138, 0.20633748173713684, 0.20048357546329498, 0.20551913976669312, 0.20324863493442535, 0.19802941381931305, 0.19451475143432617, 0.18519635498523712, 0.1859544813632965, 0.1807212382555008, 0.1803743839263916, 0.17826788127422333, 0.17805969715118408, 0.17984814941883087], "accuracy": [0.270109623670578, 0.4924052357673645, 0.5571258664131165, 0.6203936338424683, 0.6666226387023926, 0.7033417224884033, 0.724210798740387, 0.7368907928466797, 0.7519482374191284, 0.7557786107063293, 0.7675340175628662, 0.7745344042778015, 0.7799497842788696, 0.7918372750282288, 0.7861577272415161, 0.8058380484580994, 0.8074230551719666, 0.8112534880638123, 0.8131026029586792, 0.8136309385299683, 0.8216879963874817, 0.8253863453865051, 0.8304054737091064, 0.8260467648506165, 0.837537944316864, 0.8368775844573975, 0.8366134166717529, 0.8441421389579773, 0.8438779711723328, 0.841500461101532, 0.8524633646011353, 0.8516708612442017, 0.8540483713150024, 0.8598600029945374, 0.8578787446022034, 0.8642187118530273, 0.8632941246032715, 0.8667283058166504, 0.8656716346740723, 0.8679170608520508, 0.8687095642089844, 0.8704266548156738, 0.8728041052818298, 0.873860776424408, 0.8786157965660095, 0.8779553771018982, 0.8768987059593201, 0.8837670087814331, 0.8861445188522339, 0.8837670087814331, 0.882710337638855, 0.8848236799240112, 0.8920882344245911, 0.8905032277107239, 0.8924844861030579, 0.8967111110687256, 0.8934090733528137, 0.895918607711792, 0.8924844861030579, 0.896446943283081, 0.9008057117462158, 0.9002773761749268, 0.90423983335495, 0.9052965044975281, 0.9079381823539734, 0.908730685710907, 0.9089948534965515, 0.9088627696037292, 0.9097873568534851, 0.9122969508171082, 0.9101836085319519, 0.9177123308181763, 0.9152027368545532, 0.9190331697463989, 0.9157310724258423, 0.9214106202125549, 0.9194294214248657, 0.9215427041053772, 0.9282789826393127, 0.9253731369972229, 0.9247127175331116, 0.9286752343177795, 0.9288073182106018, 0.9269581437110901, 0.9282789826393127, 0.9285431504249573, 0.9340906143188477, 0.9329018592834473, 0.9332981109619141, 0.9343547821044922, 0.935279369354248, 0.9346189498901367, 0.9377889037132263], "val_loss": [2.041816473007202, 1.5199296474456787, 1.0389748811721802, 0.8324008584022522, 0.745498776435852, 0.6806733012199402, 0.6389350295066833, 0.6049064993858337, 0.5911900997161865, 0.5658648014068604, 0.545283854007721, 0.5336777567863464, 0.5221400856971741, 0.5069933533668518, 0.5006240010261536, 0.48622918128967285, 0.4797379672527313, 0.47162219882011414, 0.463858962059021, 0.462924063205719, 0.45615333318710327, 0.4576420783996582, 0.4441865086555481, 0.43785741925239563, 0.432050496339798, 0.4277292490005493, 0.4232875108718872, 0.4217248558998108, 0.41596493124961853, 0.41437438130378723, 0.4114921987056732, 0.40522363781929016, 0.4025513231754303, 0.3982502520084381, 0.39717748761177063, 0.39393606781959534, 0.39410415291786194, 0.39073729515075684, 0.39037850499153137, 0.38387927412986755, 0.3850267827510834, 0.3823719918727875, 0.38007864356040955, 0.3792296051979065, 0.37953656911849976, 0.37905916571617126, 0.37069398164749146, 0.37819212675094604, 0.3681282699108124, 0.36892253160476685, 0.36746296286582947, 0.3686814308166504, 0.3669145405292511, 0.3622942268848419, 0.36710694432258606, 0.3613722622394562, 0.3639029264450073, 0.36579862236976624, 0.3655620515346527, 0.3596266210079193, 0.3661443591117859, 0.35778093338012695, 0.3583635985851288, 0.3562283515930176, 0.35759004950523376, 0.3584963083267212, 0.35534802079200745, 0.3521163761615753, 0.3584425449371338, 0.3545515835285187, 0.3549078404903412, 0.35662370920181274, 0.3500480055809021, 0.35254889726638794, 0.3570692539215088, 0.35101383924484253, 0.35918620228767395, 0.35607099533081055, 0.35542887449264526, 0.36365818977355957, 0.35750454664230347, 0.3513582646846771, 0.3567538559436798, 0.3537881374359131, 0.3514794409275055, 0.35947442054748535, 0.357464998960495, 0.36112430691719055, 0.35894662141799927, 0.36243146657943726, 0.3621804118156433, 0.3648531436920166, 0.3637206256389618], "val_accuracy": [0.5360000133514404, 0.6603333353996277, 0.6890000104904175, 0.7056666612625122, 0.7353333234786987, 0.7440000176429749, 0.762666642665863, 0.7699999809265137, 0.7776666879653931, 0.7853333353996277, 0.7950000166893005, 0.7963333129882812, 0.8009999990463257, 0.809333324432373, 0.8106666803359985, 0.8230000138282776, 0.8243333101272583, 0.8289999961853027, 0.8309999704360962, 0.8326666951179504, 0.8360000252723694, 0.8306666612625122, 0.8403333425521851, 0.8413333296775818, 0.8489999771118164, 0.8510000109672546, 0.8506666421890259, 0.8513333201408386, 0.8560000061988831, 0.8550000190734863, 0.8529999852180481, 0.8546666502952576, 0.8579999804496765, 0.8576666712760925, 0.8566666841506958, 0.8586666584014893, 0.859000027179718, 0.8600000143051147, 0.8603333234786987, 0.8619999885559082, 0.8663333058357239, 0.8616666793823242, 0.8619999885559082, 0.8636666536331177, 0.8640000224113464, 0.8666666746139526, 0.8643333315849304, 0.8619999885559082, 0.8650000095367432, 0.8656666874885559, 0.8693333268165588, 0.8683333396911621, 0.8693333268165588, 0.8703333139419556, 0.8700000047683716, 0.8693333268165588, 0.8690000176429749, 0.8690000176429749, 0.871666669845581, 0.8703333139419556, 0.8703333139419556, 0.8723333477973938, 0.8756666779518127, 0.874666690826416, 0.874666690826416, 0.8763333559036255, 0.875333309173584, 0.874666690826416, 0.8759999871253967, 0.8733333349227905, 0.8773333430290222, 0.8776666522026062, 0.8766666650772095, 0.878333330154419, 0.8803333044052124, 0.878333330154419, 0.8773333430290222, 0.878000020980835, 0.8809999823570251, 0.8790000081062317, 0.8823333382606506, 0.8813333511352539, 0.8833333253860474, 0.8816666603088379, 0.8836666941642761, 0.8820000290870667, 0.8830000162124634, 0.8853333592414856, 0.8836666941642761, 0.8836666941642761, 0.8809999823570251, 0.8833333253860474, 0.8849999904632568]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [2, 2, 3, 0, 3, 3, 2, 4, 6, 3, 0, 7, 9, 3, 8, 0, 8], [0, 1, 0, 2, 3, 1, 2, 0, 0, 3, 3], [39, 39, 30, 3, 65], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 3, 0, 3, 5], [0, 3, 0, 3], [68, 16], [0, 0], [9], [1], [99], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 2, 3, 6, 8, 1, 4, 1, 4, 9, 8, 8], [0, 0, 0, 2, 0, 0, 3, 1, 2, 4], [57, 21, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 28, 17, 11, 5, 6, 4, 2, 1, 1, 1, 0, 1, 20, 12, 8, 6], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.pow(tf.math.divide_no_nan(tf.math.multiply(grad, grad), tf.math.negative(alpha)), tf.math.add(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.sqrt(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))))), tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))), tf.math.negative(grad)), tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.negative(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), beta), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), sigma), tf.math.sqrt(tf.math.sqrt(alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 0, 3, 0, 3], [0, 1, 0, 2], [15, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 1, 6], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [2, 0, 3, 3, 8, 5, 2, 1, 4, 2, 8], [0, 3, 1, 3, 0, 0, 3, 1, 2, 0], [16, 99, 47, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.negative(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(sigma), alpha))), tf.math.square(sigma))", "other_info": {"loss": [2.303226947784424, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}, "mapping_values": [1, 6, 4, 2, 1, 9, 5, 4, 2, 2, 1, 1, 1, 10, 6, 4, 1], "tree_depth": 13}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 2, 0, 3], [1, 1, 0, 2], [39, 71], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 2, 3, 0, 3, 9], [0, 2, 0, 3], [82, 12], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0], [9, 2, 3, 2, 8, 2, 4, 1, 4, 2, 8], [0, 0, 0, 3, 4, 0, 3, 1, 2, 0], [16, 99, 38, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 1, 0, 1, 1, 2, 1, 1, 1, 1, 1, 0, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(alpha), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3039026260375977, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [1, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 4, 0, 2, 2, 3, 4, 8], [0, 0, 0, 3, 0, 4, 3, 1, 2, 0, 7, 1], [16, 99, 96, 99, 97, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 10, 6, 4, 2, 2, 1, 1, 1, 26, 14, 12, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(alpha), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.negative(grad)))), tf.math.add(sigma, tf.math.add(tf.math.multiply(alpha, beta), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.sqrt(grad), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}]