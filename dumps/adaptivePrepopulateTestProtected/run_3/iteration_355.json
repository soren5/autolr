[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8808571696281433, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223215103149414, 1.8640538454055786, 1.390925645828247, 1.0857504606246948, 0.9175904989242554, 0.8278062343597412, 0.75929194688797, 0.7150763869285583, 0.6742342710494995, 0.6527069211006165, 0.6226239800453186, 0.6030511260032654, 0.5812473893165588, 0.5698184370994568, 0.5517233610153198, 0.5318202376365662, 0.5262278914451599, 0.5063096284866333, 0.4941454231739044, 0.4912639260292053, 0.47673994302749634, 0.46776485443115234, 0.45580968260765076, 0.45419755578041077, 0.4471202790737152, 0.4368197023868561, 0.4238806366920471, 0.41453513503074646, 0.41017231345176697, 0.4062040150165558, 0.40386685729026794, 0.3953916132450104, 0.39355871081352234, 0.3836102783679962, 0.37635838985443115, 0.3735085725784302, 0.363672137260437, 0.35395750403404236, 0.35972025990486145, 0.34721699357032776, 0.3442964553833008, 0.335767537355423, 0.3300938904285431, 0.32407090067863464, 0.32112976908683777, 0.3181473910808563, 0.31370431184768677, 0.3087446987628937, 0.3084625005722046, 0.30203962326049805, 0.293395072221756, 0.2889169156551361, 0.2914500832557678, 0.28307828307151794, 0.28207361698150635, 0.2786792516708374, 0.27818819880485535, 0.26387521624565125], "accuracy": [0.27222296595573425, 0.5027077198028564, 0.5674283504486084, 0.6277902722358704, 0.6709813475608826, 0.7058512568473816, 0.7269845604896545, 0.7415136694908142, 0.7586844563484192, 0.7617223858833313, 0.783119797706604, 0.7832518815994263, 0.7926297783851624, 0.8001585006713867, 0.807158887386322, 0.8103289008140564, 0.8133667707443237, 0.8190463781356812, 0.8247259259223938, 0.8271034359931946, 0.8298771381378174, 0.8341038227081299, 0.8366134166717529, 0.839519202709198, 0.8404437899589539, 0.848368763923645, 0.8515387773513794, 0.8564258217811584, 0.8529917001724243, 0.8585391640663147, 0.8515387773513794, 0.863558292388916, 0.8615770936012268, 0.8640866279602051, 0.8652753829956055, 0.8671245574951172, 0.8720116019248962, 0.8771628737449646, 0.8705587387084961, 0.876370370388031, 0.8787478804588318, 0.8784837126731873, 0.8828424215316772, 0.8842953443527222, 0.884691596031189, 0.8840311765670776, 0.8891823887825012, 0.8894465565681458, 0.8899748921394348, 0.8932769894599915, 0.8945978283882141, 0.8980319499969482, 0.896446943283081, 0.8988244533538818, 0.9019944667816162, 0.901862382888794, 0.8985602855682373, 0.904768168926239], "val_loss": [2.039530038833618, 1.5154659748077393, 1.039007544517517, 0.8366694450378418, 0.7400773167610168, 0.6859951019287109, 0.6454513669013977, 0.6114123463630676, 0.5899704694747925, 0.5724708437919617, 0.5533395409584045, 0.5345184803009033, 0.5225448608398438, 0.5092709064483643, 0.500229001045227, 0.49316829442977905, 0.480929970741272, 0.4729439616203308, 0.4688349962234497, 0.4563703238964081, 0.45455607771873474, 0.44636544585227966, 0.44144734740257263, 0.4332112669944763, 0.42851945757865906, 0.4277913272380829, 0.4196922183036804, 0.41600528359413147, 0.4114539325237274, 0.4113328456878662, 0.4059373438358307, 0.4033544063568115, 0.40210506319999695, 0.3963744640350342, 0.39264819025993347, 0.39112263917922974, 0.384288489818573, 0.383841872215271, 0.3804401755332947, 0.3786342442035675, 0.3777892291545868, 0.37486007809638977, 0.37355443835258484, 0.37450093030929565, 0.36811116337776184, 0.3697490096092224, 0.3684578537940979, 0.370509535074234, 0.36476588249206543, 0.36312252283096313, 0.361527681350708, 0.36036449670791626, 0.3581533133983612, 0.3633516728878021, 0.35499346256256104, 0.3547135293483734, 0.35882508754730225, 0.35363712906837463], "val_accuracy": [0.5473333597183228, 0.6496666669845581, 0.6846666932106018, 0.6959999799728394, 0.7279999852180481, 0.7450000047683716, 0.7580000162124634, 0.7713333368301392, 0.7763333320617676, 0.7816666960716248, 0.7963333129882812, 0.8109999895095825, 0.8116666674613953, 0.8113333582878113, 0.8116666674613953, 0.8186666369438171, 0.8259999752044678, 0.8236666917800903, 0.828000009059906, 0.8360000252723694, 0.8323333263397217, 0.8373333215713501, 0.8373333215713501, 0.8366666436195374, 0.843666672706604, 0.843999981880188, 0.846666693687439, 0.8483333587646484, 0.8493333458900452, 0.847000002861023, 0.8476666808128357, 0.8496666550636292, 0.8510000109672546, 0.8519999980926514, 0.8553333282470703, 0.8556666374206543, 0.8583333492279053, 0.859333336353302, 0.8560000061988831, 0.862333357334137, 0.8636666536331177, 0.859666645526886, 0.8636666536331177, 0.8643333315849304, 0.8653333187103271, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.8709999918937683, 0.8690000176429749, 0.8686666488647461, 0.8653333187103271, 0.8733333349227905, 0.8679999709129333, 0.8709999918937683, 0.8706666827201843, 0.8703333139419556, 0.8693333268165588]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8679999709129333, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223022222518921, 1.865847110748291, 1.3853141069412231, 1.0769884586334229, 0.9276247620582581, 0.8211955428123474, 0.7533251643180847, 0.7197824120521545, 0.6829701662063599, 0.6476902365684509, 0.6274908185005188, 0.6033052206039429, 0.5761973261833191, 0.5739679336547852, 0.5577125549316406, 0.5396630167961121, 0.5222008228302002, 0.5090497732162476, 0.5065245032310486, 0.4970281720161438, 0.48042771220207214, 0.478739857673645, 0.47053492069244385, 0.4608805477619171, 0.4487276077270508, 0.44236984848976135, 0.4364641606807709, 0.4270029067993164, 0.41595524549484253, 0.41991689801216125, 0.41029614210128784, 0.4003962576389313, 0.38929298520088196, 0.38342440128326416, 0.38103780150413513, 0.37955230474472046, 0.3764466941356659, 0.37315940856933594, 0.3659592270851135, 0.364650696516037, 0.3545922040939331, 0.35318315029144287, 0.34090080857276917, 0.3453555703163147, 0.3317071795463562, 0.3315261900424957, 0.33130747079849243, 0.3266702890396118, 0.3200908303260803, 0.3151412606239319, 0.3096213936805725, 0.30023878812789917, 0.3003081679344177, 0.29375016689300537, 0.29079028964042664, 0.28785595297813416, 0.2865225076675415, 0.2850673496723175, 0.2725553512573242, 0.2720879018306732, 0.267257958650589, 0.2625510096549988, 0.26245200634002686, 0.25988176465034485, 0.25235071778297424, 0.2472359836101532, 0.24655060470104218, 0.24175190925598145, 0.24237701296806335], "accuracy": [0.26878878474235535, 0.49491479992866516, 0.5742966532707214, 0.6264694333076477, 0.6622639298439026, 0.7034738063812256, 0.728701651096344, 0.7460044622421265, 0.752740740776062, 0.7609298825263977, 0.7718927264213562, 0.77677983045578, 0.7881389260292053, 0.7918372750282288, 0.8016114234924316, 0.8061022162437439, 0.8109893202781677, 0.8186501264572144, 0.8164047002792358, 0.8193105459213257, 0.8241975903511047, 0.8248580098152161, 0.830669641494751, 0.8367455005645752, 0.8368775844573975, 0.8399154543876648, 0.845859169960022, 0.8490291833877563, 0.850350022315979, 0.8469158411026001, 0.8520671129226685, 0.8577466607093811, 0.8595958352088928, 0.8599920868873596, 0.8601241707801819, 0.8627657890319824, 0.8628978729248047, 0.8659358024597168, 0.8681812286376953, 0.8640866279602051, 0.8708229064941406, 0.8732003569602966, 0.8757099509239197, 0.8765024542808533, 0.8787478804588318, 0.8813894987106323, 0.8815215826034546, 0.878351628780365, 0.8821820020675659, 0.8877294659614563, 0.8898428082466125, 0.889050304889679, 0.887597382068634, 0.8893144726753235, 0.8960506916046143, 0.8930128216743469, 0.8942015767097473, 0.8976356983184814, 0.9026548862457275, 0.9000132083892822, 0.9058248400688171, 0.9029190540313721, 0.9038436412811279, 0.904768168926239, 0.906749427318573, 0.9108440279960632, 0.9083344340324402, 0.9121648669242859, 0.9132214784622192], "val_loss": [2.0337839126586914, 1.5011008977890015, 1.0220186710357666, 0.81783527135849, 0.7325000762939453, 0.6798909306526184, 0.6314981579780579, 0.6022016406059265, 0.5785607695579529, 0.5628016591072083, 0.5425873398780823, 0.5291433334350586, 0.5125501751899719, 0.5007132887840271, 0.4925808906555176, 0.4824281930923462, 0.4720069169998169, 0.46847543120384216, 0.4606831967830658, 0.45454683899879456, 0.4439268112182617, 0.4435066878795624, 0.4330023527145386, 0.4308502972126007, 0.42308056354522705, 0.4256899952888489, 0.41351988911628723, 0.40973979234695435, 0.4092673361301422, 0.4072333872318268, 0.3976351022720337, 0.3956637382507324, 0.39264440536499023, 0.3960258662700653, 0.38500407338142395, 0.39229726791381836, 0.3835344612598419, 0.38364940881729126, 0.37747204303741455, 0.37543126940727234, 0.37388932704925537, 0.37541618943214417, 0.3725314140319824, 0.3686145544052124, 0.365761399269104, 0.36923810839653015, 0.3626748323440552, 0.3637426793575287, 0.3622983694076538, 0.3589654266834259, 0.35778385400772095, 0.3540339767932892, 0.3549736440181732, 0.356239378452301, 0.3488330841064453, 0.34889787435531616, 0.34739169478416443, 0.3496330678462982, 0.3501659035682678, 0.3481793701648712, 0.34385982155799866, 0.35259199142456055, 0.3443325161933899, 0.3434520661830902, 0.3475410044193268, 0.3441953659057617, 0.34211868047714233, 0.34223589301109314, 0.3463771939277649], "val_accuracy": [0.5709999799728394, 0.6776666641235352, 0.6996666789054871, 0.7146666646003723, 0.7393333315849304, 0.7570000290870667, 0.7723333239555359, 0.7826666831970215, 0.7906666398048401, 0.7893333435058594, 0.8033333420753479, 0.8080000281333923, 0.8106666803359985, 0.8183333277702332, 0.8220000267028809, 0.828000009059906, 0.8333333134651184, 0.8296666741371155, 0.8346666693687439, 0.8410000205039978, 0.8426666855812073, 0.8426666855812073, 0.8446666598320007, 0.8460000157356262, 0.8513333201408386, 0.846666693687439, 0.8510000109672546, 0.8536666631698608, 0.8513333201408386, 0.8516666889190674, 0.856333315372467, 0.8560000061988831, 0.8573333621025085, 0.856333315372467, 0.8600000143051147, 0.8586666584014893, 0.8636666536331177, 0.862333357334137, 0.8643333315849304, 0.8610000014305115, 0.8676666617393494, 0.8636666536331177, 0.8683333396911621, 0.8683333396911621, 0.8713333606719971, 0.8656666874885559, 0.8706666827201843, 0.871666669845581, 0.8740000128746033, 0.8700000047683716, 0.8736666440963745, 0.875, 0.875333309173584, 0.878000020980835, 0.8776666522026062, 0.8736666440963745, 0.875333309173584, 0.8790000081062317, 0.8759999871253967, 0.8796666860580444, 0.8826666474342346, 0.8736666440963745, 0.8809999823570251, 0.8856666684150696, 0.878000020980835, 0.8820000290870667, 0.8790000081062317, 0.8836666941642761, 0.8813333511352539]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [6, 3, 3, 4, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 10, 6, 4, 2, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303525924682617, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 36], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [6, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 3, 3, 1, 8, 0, 4, 1, 4, 2, 8, 0, 6], [0, 0, 0, 3, 0, 0, 2, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 9, 5, 4, 2, 2, 1, 1, 1, 23, 13, 10, 6], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.sqrt(tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), beta), tf.math.sqrt(tf.math.negative(tf.math.divide_no_nan(alpha, beta)))))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 0, 0, 3], [0, 2, 0, 2], [88, 63], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 4, 3, 5], [0, 2, 0, 3, 4], [48, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [6, 3, 3, 6, 4, 1, 4, 1, 4, 2, 8, 1, 8, 2, 7, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 4, 5, 6, 5], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.negative(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.math.sqrt(tf.math.subtract(alpha, beta)))))), tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.math.add(grad, grad)), tf.math.add(grad, tf.math.sqrt(grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}, "mapping_values": [1, 6, 4, 2, 1, 11, 6, 5, 2, 2, 1, 1, 1, 30, 16, 14, 6], "tree_depth": 23}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [3, 2, 3, 0, 3, 6], [0, 2, 0, 2, 2, 1], [39, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 8, 0, 2, 8], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [93], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 0, 1, 9, 0, 5, 4], [0, 0, 0, 3, 0, 0, 3, 4, 2, 0, 1], [16, 99, 96, 99, 16, 1, 10]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 6, 6, 2, 5, 3, 2, 1, 2, 1, 1, 1, 28, 17, 11, 7], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.divide_no_nan(grad, alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.negative(tf.math.subtract(sigma, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), grad)), tf.math.negative(tf.math.square(beta))), tf.math.pow(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}]