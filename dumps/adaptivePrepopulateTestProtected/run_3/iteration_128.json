[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.878000020980835, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223759174346924, 1.8681567907333374, 1.3971633911132812, 1.1021500825881958, 0.9438490867614746, 0.8268281817436218, 0.7700234055519104, 0.7182450890541077, 0.6839274764060974, 0.655160665512085, 0.6316797733306885, 0.6046612858772278, 0.586663544178009, 0.5732303261756897, 0.5552444458007812, 0.5382086634635925, 0.5205084085464478, 0.5141545534133911, 0.49866363406181335, 0.4905571937561035, 0.48713892698287964, 0.4630949795246124, 0.46493759751319885, 0.4510720372200012, 0.4456666111946106, 0.4411585330963135, 0.43109801411628723, 0.4194287657737732, 0.41647717356681824, 0.4177640676498413, 0.39898860454559326, 0.3982110619544983, 0.3941095173358917, 0.3838343918323517, 0.38270825147628784, 0.38132011890411377, 0.3706604242324829, 0.3630581796169281, 0.35970449447631836, 0.3585955500602722, 0.3488880693912506, 0.3406795859336853, 0.3434852361679077, 0.34305644035339355, 0.32770219445228577, 0.3274216949939728, 0.3164256513118744, 0.31487780809402466, 0.31453031301498413, 0.3020377457141876, 0.3013147711753845, 0.29238083958625793, 0.30650538206100464, 0.2886098325252533, 0.28784143924713135, 0.28922179341316223, 0.27991431951522827, 0.27731093764305115, 0.27029022574424744, 0.2677718997001648, 0.2672445476055145], "accuracy": [0.27182671427726746, 0.4913485646247864, 0.5609562993049622, 0.6095628142356873, 0.6618676781654358, 0.6997754573822021, 0.7215691208839417, 0.7407211661338806, 0.7508915662765503, 0.7592127919197083, 0.7656848430633545, 0.7798177003860474, 0.7849689722061157, 0.789459764957428, 0.7991018295288086, 0.806630551815033, 0.81112140417099, 0.8088759779930115, 0.8210275769233704, 0.8181217908859253, 0.826310932636261, 0.8333113193511963, 0.8294808864593506, 0.8401796221733093, 0.8409721255302429, 0.8436138033866882, 0.8459912538528442, 0.8519350290298462, 0.8485008478164673, 0.8490291833877563, 0.856689989566803, 0.8573504090309143, 0.8615770936012268, 0.8644828796386719, 0.8605204224586487, 0.8614450097084045, 0.8671245574951172, 0.8726720213890076, 0.8732003569602966, 0.8689737319946289, 0.8762382864952087, 0.8798044919967651, 0.8717474341392517, 0.8825782537460327, 0.8840311765670776, 0.8845595121383667, 0.8885219693183899, 0.8865407705307007, 0.8887861371040344, 0.894069492816925, 0.8918240666389465, 0.8953903317451477, 0.8860124349594116, 0.8988244533538818, 0.8992207050323486, 0.8956544995307922, 0.9014661312103271, 0.89988112449646, 0.900409460067749, 0.9046360850334167, 0.9033153057098389], "val_loss": [2.0386126041412354, 1.5089809894561768, 1.0396978855133057, 0.8277255296707153, 0.7414798736572266, 0.6867381930351257, 0.6452507376670837, 0.6096968054771423, 0.5920496582984924, 0.5695558786392212, 0.550778865814209, 0.5315823554992676, 0.5166425704956055, 0.5040237307548523, 0.4927339255809784, 0.48035380244255066, 0.4752146899700165, 0.4640548527240753, 0.45926037430763245, 0.4498494863510132, 0.44989997148513794, 0.43486902117729187, 0.4302854835987091, 0.42699891328811646, 0.4222937822341919, 0.4179273545742035, 0.4156407117843628, 0.40615877509117126, 0.40567347407341003, 0.40483561158180237, 0.4008205533027649, 0.3957735300064087, 0.3910598158836365, 0.39842313528060913, 0.38378071784973145, 0.3824272155761719, 0.37983548641204834, 0.3832281529903412, 0.37993335723876953, 0.37290528416633606, 0.37028563022613525, 0.3697679340839386, 0.369826078414917, 0.3630952835083008, 0.3613884747028351, 0.3612003028392792, 0.3630628287792206, 0.35836127400398254, 0.35707563161849976, 0.3544061779975891, 0.35439038276672363, 0.35541149973869324, 0.34793493151664734, 0.355723112821579, 0.3566884696483612, 0.3480426073074341, 0.35176366567611694, 0.34468159079551697, 0.3469727337360382, 0.34757280349731445, 0.34379008412361145], "val_accuracy": [0.546999990940094, 0.6536666750907898, 0.6856666803359985, 0.7066666483879089, 0.7366666793823242, 0.7536666393280029, 0.7599999904632568, 0.7720000147819519, 0.7706666588783264, 0.7926666736602783, 0.7963333129882812, 0.7956666946411133, 0.8103333115577698, 0.809333324432373, 0.8220000267028809, 0.8226666450500488, 0.8243333101272583, 0.8330000042915344, 0.8349999785423279, 0.8370000123977661, 0.8333333134651184, 0.8429999947547913, 0.8463333249092102, 0.8446666598320007, 0.8476666808128357, 0.8479999899864197, 0.8450000286102295, 0.8506666421890259, 0.8496666550636292, 0.8529999852180481, 0.8556666374206543, 0.8556666374206543, 0.8586666584014893, 0.8526666760444641, 0.8576666712760925, 0.8610000014305115, 0.859000027179718, 0.8616666793823242, 0.8653333187103271, 0.8673333525657654, 0.8673333525657654, 0.8659999966621399, 0.8693333268165588, 0.8690000176429749, 0.8726666569709778, 0.8726666569709778, 0.8740000128746033, 0.8730000257492065, 0.871999979019165, 0.8759999871253967, 0.874666690826416, 0.871999979019165, 0.8806666731834412, 0.8776666522026062, 0.8706666827201843, 0.8820000290870667, 0.878333330154419, 0.878000020980835, 0.8806666731834412, 0.8793333172798157, 0.878333330154419]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8617143034934998, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2243003845214844, 1.8643659353256226, 1.3944733142852783, 1.1079280376434326, 0.9340296983718872, 0.8388659358024597, 0.775789201259613, 0.7302227020263672, 0.6925610303878784, 0.6655541062355042, 0.6290062069892883, 0.6104671359062195, 0.5888141989707947, 0.5694838762283325, 0.564175009727478, 0.5491222143173218, 0.535467803478241, 0.5165389776229858, 0.5110477805137634, 0.497114360332489, 0.48378342390060425, 0.4720725119113922, 0.46057194471359253, 0.46221837401390076, 0.4499692916870117, 0.4399252235889435, 0.4232807457447052, 0.41550129652023315, 0.41953369975090027, 0.4003589451313019, 0.40841731429100037, 0.3932970464229584, 0.3807128071784973, 0.37767714262008667, 0.37179532647132874, 0.3742625415325165, 0.3650990128517151, 0.35791122913360596, 0.35272425413131714, 0.3538680374622345, 0.34862586855888367, 0.33570659160614014, 0.3348524272441864, 0.3338707387447357, 0.33240213990211487, 0.3182116150856018, 0.3159986436367035, 0.3104596734046936, 0.302650511264801, 0.30745023488998413, 0.30322688817977905, 0.2986507713794708, 0.29008662700653076, 0.28290942311286926, 0.2832535207271576, 0.2684022784233093, 0.2751446068286896, 0.27344903349876404, 0.27011412382125854], "accuracy": [0.2736758589744568, 0.49253731966018677, 0.55791836977005, 0.6164311170578003, 0.6606789231300354, 0.7012283802032471, 0.7160216569900513, 0.7346453666687012, 0.7464007139205933, 0.7537974119186401, 0.7695152759552002, 0.7761194109916687, 0.7858935594558716, 0.791441023349762, 0.8001585006713867, 0.8001585006713867, 0.8083476424217224, 0.8132346868515015, 0.8156121969223022, 0.8212917447090149, 0.8222163319587708, 0.8304054737091064, 0.8364813327789307, 0.8333113193511963, 0.8374059200286865, 0.8437458872795105, 0.8475762605667114, 0.8510104417800903, 0.8466516733169556, 0.8537842035293579, 0.8495575189590454, 0.8573504090309143, 0.8607845902442932, 0.8627657890319824, 0.8664641380310059, 0.8684453964233398, 0.8646149635314941, 0.86553955078125, 0.8710870146751404, 0.8726720213890076, 0.8730682730674744, 0.8802007436752319, 0.8794082403182983, 0.8768987059593201, 0.8778232932090759, 0.8849557638168335, 0.8864086866378784, 0.8883898854255676, 0.8887861371040344, 0.8886540532112122, 0.8905032277107239, 0.889578640460968, 0.8931449055671692, 0.8996169567108154, 0.8977677822113037, 0.9019944667816162, 0.8982961177825928, 0.8975036144256592, 0.8994848728179932], "val_loss": [2.038853406906128, 1.5110914707183838, 1.0344176292419434, 0.8263702988624573, 0.7386218905448914, 0.6758090853691101, 0.6349514722824097, 0.5980328917503357, 0.5746985077857971, 0.5499797463417053, 0.5337842106819153, 0.5152469873428345, 0.5018174648284912, 0.4915687143802643, 0.4853665828704834, 0.47410356998443604, 0.4674493372440338, 0.4568304717540741, 0.4511149823665619, 0.43689602613449097, 0.4343007504940033, 0.4271240532398224, 0.4206458330154419, 0.41767629981040955, 0.4114967882633209, 0.40892818570137024, 0.4045144319534302, 0.39811596274375916, 0.39757996797561646, 0.4031250774860382, 0.3917582631111145, 0.3890385627746582, 0.3894200325012207, 0.3845413327217102, 0.3801770806312561, 0.38133305311203003, 0.37957945466041565, 0.3750269412994385, 0.37179791927337646, 0.3763202726840973, 0.3700881004333496, 0.36846843361854553, 0.3637491464614868, 0.3627774119377136, 0.3661689758300781, 0.36340585350990295, 0.3606732487678528, 0.35778337717056274, 0.3607567846775055, 0.35793963074684143, 0.35703346133232117, 0.35791000723838806, 0.3535943329334259, 0.35550040006637573, 0.3515896797180176, 0.3540310859680176, 0.35804399847984314, 0.35397037863731384, 0.35024333000183105], "val_accuracy": [0.5476666688919067, 0.6639999747276306, 0.6946666836738586, 0.7163333296775818, 0.7453333139419556, 0.7613333463668823, 0.7706666588783264, 0.7876666784286499, 0.7956666946411133, 0.8083333373069763, 0.8109999895095825, 0.8159999847412109, 0.82833331823349, 0.8270000219345093, 0.8303333520889282, 0.8363333344459534, 0.8356666564941406, 0.8379999995231628, 0.8403333425521851, 0.8523333072662354, 0.847000002861023, 0.8556666374206543, 0.856333315372467, 0.859666645526886, 0.8610000014305115, 0.8606666922569275, 0.8646666407585144, 0.8650000095367432, 0.8693333268165588, 0.8603333234786987, 0.8659999966621399, 0.8679999709129333, 0.8700000047683716, 0.8709999918937683, 0.8763333559036255, 0.8709999918937683, 0.8709999918937683, 0.8726666569709778, 0.8769999742507935, 0.874666690826416, 0.878333330154419, 0.874666690826416, 0.878000020980835, 0.8793333172798157, 0.8776666522026062, 0.875, 0.8796666860580444, 0.8796666860580444, 0.8799999952316284, 0.8793333172798157, 0.8799999952316284, 0.8793333172798157, 0.8816666603088379, 0.8843333125114441, 0.8793333172798157, 0.8836666941642761, 0.8766666650772095, 0.8809999823570251, 0.8843333125114441]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 0, 0, 2], [39, 39, 12], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 2, 3], [16, 16], [0, 1], [0], [0], [37], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 8, 1, 4, 2, 1], [4, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 17, 61, 1]], "fitness": -0.7917143106460571, "mapping_values": [1, 9, 5, 4, 3, 10, 6, 4, 1, 2, 1, 1, 1, 13, 7, 6, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(beta, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3253798484802246, 2.3467977046966553, 2.3387317657470703, 2.3011443614959717, 2.2423501014709473, 2.0344760417938232, 1.437186598777771, 1.1417180299758911, 0.9819120764732361, 0.9086511731147766, 0.8995674848556519, 0.8033981323242188, 0.8095498085021973, 0.7309404611587524, 0.717301607131958, 0.7577834129333496, 0.6978153586387634, 0.6392908692359924, 0.6642613410949707, 0.6286674737930298, 0.6166892051696777, 0.6053211688995361, 0.5843058228492737, 0.5722464919090271, 0.578761875629425, 0.5551491975784302, 0.5356482863426208], "accuracy": [0.08255184441804886, 0.07211729139089584, 0.0750231146812439, 0.11015717685222626, 0.2386738806962967, 0.39941883087158203, 0.5202747583389282, 0.5894861817359924, 0.6441685557365417, 0.663848876953125, 0.6672830581665039, 0.6968696117401123, 0.6971337795257568, 0.7150970697402954, 0.728701651096344, 0.7215691208839417, 0.7259278893470764, 0.7573636174201965, 0.7425703406333923, 0.7589486241340637, 0.7638356685638428, 0.7658169269561768, 0.7841764688491821, 0.7769119143486023, 0.770439863204956, 0.7890635132789612, 0.7923656105995178], "val_loss": [2.3452224731445312, 2.3500611782073975, 2.3203232288360596, 2.2697994709014893, 2.1601600646972656, 1.6268818378448486, 1.0292139053344727, 0.9019871354103088, 0.823798656463623, 0.8588961362838745, 0.7189050912857056, 0.717439591884613, 0.6966554522514343, 0.6389244198799133, 0.7142094969749451, 0.7095555663108826, 0.578622043132782, 0.6207514405250549, 0.5430935621261597, 0.5872614979743958, 0.5652661919593811, 0.506178081035614, 0.5590794086456299, 0.516956090927124, 0.551491916179657, 0.5047364830970764, 0.5897030234336853], "val_accuracy": [0.0846666693687439, 0.08399999886751175, 0.08733333647251129, 0.22599999606609344, 0.4833333194255829, 0.6140000224113464, 0.6556666493415833, 0.6763333082199097, 0.6723333597183228, 0.6293333172798157, 0.6993333101272583, 0.7043333053588867, 0.7153333425521851, 0.753000020980835, 0.7099999785423279, 0.7160000205039978, 0.7670000195503235, 0.7459999918937683, 0.7803333401679993, 0.7536666393280029, 0.7706666588783264, 0.8050000071525574, 0.7873333096504211, 0.7910000085830688, 0.7786666750907898, 0.8033333420753479, 0.7823333144187927]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 1, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(alpha, sigma)), alpha))), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3047432899475098, 2.3025851249694824, 2.3025853633880615, 2.3025851249694824, 2.3025853633880615, 2.302586078643799], "accuracy": [0.1006472036242485, 0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025851249694824, 2.3025851249694824, 2.3025848865509033, 2.3025853633880615, 2.3025858402252197, 2.3025870323181152], "val_accuracy": [0.10133333504199982, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 2, 3, 0, 3, 5, 5], [0, 2, 0, 2], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [6, 6, 3, 6, 8, 1, 4, 1, 4, 2, 8, 3], [4, 4, 0, 3, 0, 0, 3, 4, 4, 4, 5], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 11, 7, 4, 2, 2, 1, 1, 1, 23, 12, 11, 3], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.square(beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma), tf.math.sqrt(tf.math.multiply(grad, grad)))))), grad), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 4, 9], [0, 1, 0, 1], [39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [1, 2, 0, 2], [50, 16], [0, 1], [0], [0], [5], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 3, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 1, 3, 1, 3, 2], [16, 99, 96, 99, 8, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 1, 0, 1, 0, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.30325984954834, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}]