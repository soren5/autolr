[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8822857141494751, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585750579834, 1.8655762672424316, 1.394430160522461, 1.0773245096206665, 0.9378393888473511, 0.8425824046134949, 0.7776632308959961, 0.736241340637207, 0.6971188187599182, 0.6732122302055359, 0.644855797290802, 0.6276965141296387, 0.6100340485572815, 0.5899673104286194, 0.5746485590934753, 0.5484329462051392, 0.5425268411636353, 0.5357900857925415, 0.5214410424232483, 0.5127171874046326, 0.4895091950893402, 0.4932740032672882, 0.48551443219184875, 0.47113916277885437, 0.46571049094200134, 0.450914591550827, 0.438728004693985, 0.4414178729057312, 0.4245515465736389, 0.4182806611061096, 0.4126766324043274, 0.41352686285972595, 0.4031256139278412, 0.40064555406570435, 0.3982388377189636, 0.38566267490386963, 0.38400527834892273, 0.3741128146648407, 0.36422181129455566, 0.36170411109924316, 0.35991787910461426, 0.35666367411613464, 0.3521813750267029, 0.34583958983421326, 0.34736087918281555, 0.34181836247444153, 0.33650368452072144, 0.33141741156578064, 0.3230496346950531, 0.3225416839122772, 0.315096914768219, 0.3059031665325165, 0.3058394491672516, 0.3017319440841675, 0.29568877816200256, 0.2933836281299591, 0.28774771094322205, 0.2856961190700531, 0.2802303731441498, 0.2779994010925293, 0.274711549282074, 0.2719985842704773, 0.2586328387260437, 0.2598455548286438, 0.2622571289539337, 0.25739434361457825, 0.2502012252807617, 0.2544722855091095, 0.24556587636470795, 0.24580754339694977, 0.23948103189468384, 0.23949603736400604, 0.23484042286872864, 0.22871272265911102, 0.2256491780281067, 0.22479403018951416, 0.21744707226753235, 0.21390178799629211, 0.21272219717502594], "accuracy": [0.2785629332065582, 0.49451854825019836, 0.559899628162384, 0.6215823292732239, 0.6654338836669922, 0.6950204968452454, 0.7181349992752075, 0.7322678565979004, 0.7441553473472595, 0.7483819723129272, 0.7627789974212646, 0.7717606425285339, 0.7728173136711121, 0.78113853931427, 0.7882710099220276, 0.7993659973144531, 0.7976489067077637, 0.8074230551719666, 0.8128384351730347, 0.8198388814926147, 0.8212917447090149, 0.819970965385437, 0.8272355198860168, 0.8350284099578857, 0.8305375576019287, 0.8387266993522644, 0.846387505531311, 0.8433496356010437, 0.8504821062088013, 0.8524633646011353, 0.8535200357437134, 0.854708731174469, 0.856689989566803, 0.8551049828529358, 0.8593316674232483, 0.8615770936012268, 0.8628978729248047, 0.8702945709228516, 0.8691058158874512, 0.871879518032074, 0.8722757697105408, 0.8691058158874512, 0.8733324408531189, 0.8800686597824097, 0.8795403242111206, 0.8755778670310974, 0.8768987059593201, 0.8829745054244995, 0.8824461698532104, 0.8823140859603882, 0.887201189994812, 0.8897107243537903, 0.8889182209968567, 0.8927486538887024, 0.8902390599250793, 0.8953903317451477, 0.8980319499969482, 0.8976356983184814, 0.900409460067749, 0.89552241563797, 0.9025228023529053, 0.8989565372467041, 0.9056927561759949, 0.9085986018180847, 0.9030511379241943, 0.9066173434257507, 0.9101836085319519, 0.9083344340324402, 0.909259021282196, 0.9099194407463074, 0.9126931428909302, 0.9140139818191528, 0.9119006991386414, 0.9171839952468872, 0.9169198274612427, 0.9185048341751099, 0.9218068718910217, 0.9185048341751099, 0.9196935892105103], "val_loss": [2.033445358276367, 1.5042319297790527, 1.0271512269973755, 0.8147247433662415, 0.7278039455413818, 0.68117356300354, 0.6306353211402893, 0.5966841578483582, 0.5751398801803589, 0.5460951328277588, 0.5314993858337402, 0.509799063205719, 0.4957965612411499, 0.4792602062225342, 0.46671679615974426, 0.45267683267593384, 0.4441072940826416, 0.4356139600276947, 0.42943108081817627, 0.4255247414112091, 0.41811680793762207, 0.4163394272327423, 0.39929893612861633, 0.3969916105270386, 0.39089226722717285, 0.387652188539505, 0.3844633102416992, 0.3824205696582794, 0.3749690353870392, 0.3701930642127991, 0.36967378854751587, 0.36689504981040955, 0.3585263788700104, 0.3587398827075958, 0.36267170310020447, 0.3561091423034668, 0.35379692912101746, 0.3499273955821991, 0.34701839089393616, 0.3467637896537781, 0.3424672484397888, 0.33951225876808167, 0.3386255204677582, 0.34044384956359863, 0.33945050835609436, 0.33684298396110535, 0.3322163224220276, 0.33181649446487427, 0.32827115058898926, 0.3312568664550781, 0.3297465741634369, 0.3256674110889435, 0.3234780728816986, 0.32119208574295044, 0.3232716917991638, 0.3209094703197479, 0.31944912672042847, 0.3157532513141632, 0.3144265413284302, 0.31676045060157776, 0.31425556540489197, 0.3131799101829529, 0.3147056996822357, 0.3154993951320648, 0.31771615147590637, 0.31545644998550415, 0.3127000629901886, 0.31382524967193604, 0.31026333570480347, 0.3147730529308319, 0.30829918384552, 0.3107443153858185, 0.31316936016082764, 0.30297672748565674, 0.30325081944465637, 0.30436232686042786, 0.3072424829006195, 0.30681705474853516, 0.3061434030532837], "val_accuracy": [0.5526666641235352, 0.6666666865348816, 0.687333345413208, 0.7083333134651184, 0.731333315372467, 0.7446666955947876, 0.7606666684150696, 0.762666642665863, 0.7873333096504211, 0.7889999747276306, 0.7973333597183228, 0.8056666851043701, 0.8193333148956299, 0.8259999752044678, 0.8289999961853027, 0.8410000205039978, 0.8453333377838135, 0.8450000286102295, 0.8489999771118164, 0.847000002861023, 0.8516666889190674, 0.856333315372467, 0.859333336353302, 0.856333315372467, 0.8633333444595337, 0.8640000224113464, 0.8656666874885559, 0.8646666407585144, 0.8679999709129333, 0.8696666955947876, 0.8640000224113464, 0.8686666488647461, 0.8713333606719971, 0.8709999918937683, 0.8703333139419556, 0.8723333477973938, 0.871999979019165, 0.874666690826416, 0.8723333477973938, 0.8759999871253967, 0.8726666569709778, 0.875333309173584, 0.8790000081062317, 0.8756666779518127, 0.8726666569709778, 0.8769999742507935, 0.8796666860580444, 0.8796666860580444, 0.8806666731834412, 0.8793333172798157, 0.8813333511352539, 0.8840000033378601, 0.8840000033378601, 0.8843333125114441, 0.8809999823570251, 0.8856666684150696, 0.8866666555404663, 0.8833333253860474, 0.8866666555404663, 0.8843333125114441, 0.8856666684150696, 0.8880000114440918, 0.887333333492279, 0.8883333206176758, 0.8866666555404663, 0.8896666765213013, 0.8863333463668823, 0.8853333592414856, 0.890999972820282, 0.8870000243186951, 0.8883333206176758, 0.8883333206176758, 0.8916666507720947, 0.8939999938011169, 0.8896666765213013, 0.8916666507720947, 0.890999972820282, 0.8926666378974915, 0.8913333415985107]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8717142939567566, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2216885089874268, 1.8658438920974731, 1.394737720489502, 1.089005947113037, 0.945471465587616, 0.8450702428817749, 0.7826278209686279, 0.7317166924476624, 0.694703221321106, 0.6655646562576294, 0.6323413848876953, 0.6154860854148865, 0.5978645086288452, 0.5764142274856567, 0.5621592402458191, 0.5446870923042297, 0.5308697819709778, 0.5206834673881531, 0.5089079737663269, 0.49508512020111084, 0.48460227251052856, 0.4780670404434204, 0.4714326560497284, 0.46923357248306274, 0.4537014961242676, 0.45390748977661133, 0.4378310441970825, 0.4299148619174957, 0.41962531208992004, 0.4119206666946411, 0.4051433503627777, 0.405958354473114, 0.3933294713497162, 0.38459500670433044, 0.3789184093475342, 0.377658486366272, 0.3695640563964844, 0.3660303056240082, 0.3661347031593323, 0.3629370927810669, 0.3437651991844177, 0.3394831418991089, 0.336209774017334, 0.3373587727546692, 0.32743123173713684, 0.3273434340953827, 0.3201662302017212, 0.3186012804508209, 0.3083169758319855, 0.30288219451904297, 0.30310148000717163, 0.29124948382377625, 0.29207175970077515, 0.28724339604377747, 0.2859659790992737, 0.28161191940307617, 0.27108249068260193, 0.27526432275772095, 0.26588547229766846, 0.26425987482070923, 0.26531994342803955, 0.26188090443611145, 0.25798603892326355, 0.2525407373905182, 0.24441319704055786, 0.23791266977787018, 0.23747162520885468, 0.23372220993041992, 0.2263832539319992, 0.22262567281723022, 0.2202168107032776, 0.22650262713432312, 0.22058023512363434, 0.21403485536575317], "accuracy": [0.27777042984962463, 0.48448026180267334, 0.561880886554718, 0.6193369626998901, 0.6668868064880371, 0.7008321285247803, 0.720380425453186, 0.7382115721702576, 0.7495707273483276, 0.7560427784919739, 0.7705719470977783, 0.7769119143486023, 0.7861577272415161, 0.7956677079200745, 0.8000264167785645, 0.8012151718139648, 0.8042530417442322, 0.809140145778656, 0.8127063512802124, 0.8210275769233704, 0.8280280232429504, 0.8305375576019287, 0.8323867321014404, 0.8325188159942627, 0.839519202709198, 0.8380662798881531, 0.8449346423149109, 0.8519350290298462, 0.8496896028518677, 0.850350022315979, 0.8595958352088928, 0.8569541573524475, 0.8638224601745605, 0.8647470474243164, 0.867520809173584, 0.8658037185668945, 0.8705587387084961, 0.871879518032074, 0.8720116019248962, 0.8730682730674744, 0.8794082403182983, 0.8811253309249878, 0.8804649114608765, 0.8809932470321655, 0.882710337638855, 0.8840311765670776, 0.887597382068634, 0.8882578015327454, 0.8912957310676575, 0.893541157245636, 0.8919561505317688, 0.8942015767097473, 0.896446943283081, 0.8963148593902588, 0.9000132083892822, 0.9013340473175049, 0.9037115573883057, 0.90423983335495, 0.9082023501396179, 0.9093911051750183, 0.9058248400688171, 0.9051644206047058, 0.9097873568534851, 0.9144102334976196, 0.9121648669242859, 0.9138818979263306, 0.9145423173904419, 0.9158631563186646, 0.9199577569961548, 0.9192973375320435, 0.9210143685340881, 0.9171839952468872, 0.921938955783844, 0.9248448014259338], "val_loss": [2.0387749671936035, 1.5155500173568726, 1.0448088645935059, 0.841175377368927, 0.7544921636581421, 0.7047160863876343, 0.6584104895591736, 0.6256108283996582, 0.599309504032135, 0.5743595957756042, 0.557019829750061, 0.5421429872512817, 0.5249712467193604, 0.5129818320274353, 0.5012169480323792, 0.4878949522972107, 0.4836888015270233, 0.4719144403934479, 0.4666038453578949, 0.4597598910331726, 0.4529711902141571, 0.4577798545360565, 0.4378284513950348, 0.4353971779346466, 0.4285997450351715, 0.42824268341064453, 0.41952505707740784, 0.41439706087112427, 0.409961998462677, 0.4092140197753906, 0.4071309268474579, 0.40446603298187256, 0.39924564957618713, 0.39618179202079773, 0.39532437920570374, 0.3886602520942688, 0.3879096806049347, 0.38737645745277405, 0.3883633613586426, 0.3796479403972626, 0.3751792013645172, 0.3766311705112457, 0.37495970726013184, 0.3703196346759796, 0.3712480068206787, 0.3707999587059021, 0.37525585293769836, 0.3670782744884491, 0.36485132575035095, 0.3603251278400421, 0.3616298735141754, 0.3630693852901459, 0.3575170636177063, 0.35703861713409424, 0.3561324179172516, 0.35622042417526245, 0.3552834987640381, 0.35190072655677795, 0.35374486446380615, 0.35251688957214355, 0.34973078966140747, 0.3523048460483551, 0.35376012325286865, 0.3468194901943207, 0.35417309403419495, 0.3476840555667877, 0.34311434626579285, 0.35185328125953674, 0.3450649380683899, 0.34681180119514465, 0.34851449728012085, 0.3453007936477661, 0.3448711037635803, 0.3467376232147217], "val_accuracy": [0.5203333497047424, 0.6386666893959045, 0.6766666769981384, 0.6980000138282776, 0.7326666712760925, 0.7450000047683716, 0.7559999823570251, 0.7613333463668823, 0.7793333530426025, 0.7833333611488342, 0.7860000133514404, 0.7960000038146973, 0.8033333420753479, 0.8050000071525574, 0.8109999895095825, 0.8140000104904175, 0.815666675567627, 0.8256666660308838, 0.8289999961853027, 0.8293333053588867, 0.8316666483879089, 0.8263333439826965, 0.840666651725769, 0.8373333215713501, 0.843999981880188, 0.8399999737739563, 0.8446666598320007, 0.8473333120346069, 0.8483333587646484, 0.8556666374206543, 0.8526666760444641, 0.8523333072662354, 0.8546666502952576, 0.856333315372467, 0.8556666374206543, 0.8606666922569275, 0.8610000014305115, 0.862666666507721, 0.8583333492279053, 0.8619999885559082, 0.8646666407585144, 0.862666666507721, 0.8686666488647461, 0.8679999709129333, 0.8723333477973938, 0.8700000047683716, 0.8669999837875366, 0.8673333525657654, 0.8730000257492065, 0.8736666440963745, 0.8730000257492065, 0.8726666569709778, 0.875333309173584, 0.8736666440963745, 0.8773333430290222, 0.8769999742507935, 0.874666690826416, 0.8786666393280029, 0.8793333172798157, 0.8776666522026062, 0.8796666860580444, 0.8820000290870667, 0.8786666393280029, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506, 0.8830000162124634, 0.8826666474342346, 0.8883333206176758, 0.8846666812896729, 0.8840000033378601, 0.8830000162124634, 0.8866666555404663, 0.8859999775886536]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1], [0, 2, 3, 0, 3, 6, 7, 0, 4, 5, 9], [0, 0, 0, 2, 1, 2], [39, 39, 12, 2], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 0, 0, 3], [16, 16, 8], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 9, 8, 7], [0, 0, 0, 3, 0, 4, 3, 1, 2, 0], [16, 99, 96, 99, 61, 56]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 11, 6, 4, 6, 3, 3, 3, 2, 1, 1, 1, 21, 12, 9, 5], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.add(tf.math.negative(tf.math.pow(alpha, tf.math.square(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))), grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), grad)), sigma), tf.math.sqrt(tf.math.add(alpha, beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [5, 2, 3, 0, 3, 5], [3, 2, 0, 3], [16, 16], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [1, 2, 5, 1, 3, 2, 5, 2, 4, 4, 2, 7, 3, 9, 3, 3, 1, 5, 8, 2, 2, 9], [0, 3, 0, 0, 3, 0, 6, 6, 1, 0, 5, 0, 2, 0, 6], [99, 18, 0, 38, 74, 21, 97, 58, 93], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [6, 3, 3, 9, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 4, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 9, 5, 4, 1, 37, 22, 15, 9, 18, 10, 8, 5], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(tf.math.subtract(tf.math.multiply(sigma, tf.math.add(tf.math.square(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), sigma))), tf.math.pow(tf.math.pow(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), grad), tf.math.add(tf.math.add(grad, tf.math.multiply(alpha, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.multiply(tf.math.subtract(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(tf.math.add(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), beta))), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(grad, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), tf.math.subtract(grad, tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 9, 3, 0, 6], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1, 1], [6], [0, 7], [99], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [1, 3, 3, 6, 8, 1, 4, 1, 4, 3, 3], [0, 0, 0, 1, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 0, 1, 9, 5, 4, 2, 3, 1, 2, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3036680221557617, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 2, 3, 9, 3], [1, 1, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 8], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 8, 4, 2, 8], [0, 0, 0, 2, 0, 0, 3, 1, 2, 0], [80, 99, 96, 15, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 0, 9, 5, 4, 2, 2, 1, 1, 1, 15, 8, 7, 5], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.multiply(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(sigma))))", "other_info": {"loss": [4.1676530838012695, 2.3536648750305176, 2.3143703937530518, 2.4378905296325684, 2.349771022796631, 2.386845588684082, 2.4400548934936523], "accuracy": [0.1018359512090683, 0.10249637067317963, 0.10474177449941635, 0.09985470771789551, 0.09509972482919693, 0.09985470771789551, 0.09642054885625839], "val_loss": [2.3303980827331543, 2.3035526275634766, 2.3684208393096924, 2.3409664630889893, 2.3613290786743164, 2.409777879714966, 2.4641239643096924], "val_accuracy": [0.09533333033323288, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}]