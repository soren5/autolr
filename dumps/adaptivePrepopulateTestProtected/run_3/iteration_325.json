[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8808571696281433, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223215103149414, 1.8640538454055786, 1.390925645828247, 1.0857504606246948, 0.9175904989242554, 0.8278062343597412, 0.75929194688797, 0.7150763869285583, 0.6742342710494995, 0.6527069211006165, 0.6226239800453186, 0.6030511260032654, 0.5812473893165588, 0.5698184370994568, 0.5517233610153198, 0.5318202376365662, 0.5262278914451599, 0.5063096284866333, 0.4941454231739044, 0.4912639260292053, 0.47673994302749634, 0.46776485443115234, 0.45580968260765076, 0.45419755578041077, 0.4471202790737152, 0.4368197023868561, 0.4238806366920471, 0.41453513503074646, 0.41017231345176697, 0.4062040150165558, 0.40386685729026794, 0.3953916132450104, 0.39355871081352234, 0.3836102783679962, 0.37635838985443115, 0.3735085725784302, 0.363672137260437, 0.35395750403404236, 0.35972025990486145, 0.34721699357032776, 0.3442964553833008, 0.335767537355423, 0.3300938904285431, 0.32407090067863464, 0.32112976908683777, 0.3181473910808563, 0.31370431184768677, 0.3087446987628937, 0.3084625005722046, 0.30203962326049805, 0.293395072221756, 0.2889169156551361, 0.2914500832557678, 0.28307828307151794, 0.28207361698150635, 0.2786792516708374, 0.27818819880485535, 0.26387521624565125], "accuracy": [0.27222296595573425, 0.5027077198028564, 0.5674283504486084, 0.6277902722358704, 0.6709813475608826, 0.7058512568473816, 0.7269845604896545, 0.7415136694908142, 0.7586844563484192, 0.7617223858833313, 0.783119797706604, 0.7832518815994263, 0.7926297783851624, 0.8001585006713867, 0.807158887386322, 0.8103289008140564, 0.8133667707443237, 0.8190463781356812, 0.8247259259223938, 0.8271034359931946, 0.8298771381378174, 0.8341038227081299, 0.8366134166717529, 0.839519202709198, 0.8404437899589539, 0.848368763923645, 0.8515387773513794, 0.8564258217811584, 0.8529917001724243, 0.8585391640663147, 0.8515387773513794, 0.863558292388916, 0.8615770936012268, 0.8640866279602051, 0.8652753829956055, 0.8671245574951172, 0.8720116019248962, 0.8771628737449646, 0.8705587387084961, 0.876370370388031, 0.8787478804588318, 0.8784837126731873, 0.8828424215316772, 0.8842953443527222, 0.884691596031189, 0.8840311765670776, 0.8891823887825012, 0.8894465565681458, 0.8899748921394348, 0.8932769894599915, 0.8945978283882141, 0.8980319499969482, 0.896446943283081, 0.8988244533538818, 0.9019944667816162, 0.901862382888794, 0.8985602855682373, 0.904768168926239], "val_loss": [2.039530038833618, 1.5154659748077393, 1.039007544517517, 0.8366694450378418, 0.7400773167610168, 0.6859951019287109, 0.6454513669013977, 0.6114123463630676, 0.5899704694747925, 0.5724708437919617, 0.5533395409584045, 0.5345184803009033, 0.5225448608398438, 0.5092709064483643, 0.500229001045227, 0.49316829442977905, 0.480929970741272, 0.4729439616203308, 0.4688349962234497, 0.4563703238964081, 0.45455607771873474, 0.44636544585227966, 0.44144734740257263, 0.4332112669944763, 0.42851945757865906, 0.4277913272380829, 0.4196922183036804, 0.41600528359413147, 0.4114539325237274, 0.4113328456878662, 0.4059373438358307, 0.4033544063568115, 0.40210506319999695, 0.3963744640350342, 0.39264819025993347, 0.39112263917922974, 0.384288489818573, 0.383841872215271, 0.3804401755332947, 0.3786342442035675, 0.3777892291545868, 0.37486007809638977, 0.37355443835258484, 0.37450093030929565, 0.36811116337776184, 0.3697490096092224, 0.3684578537940979, 0.370509535074234, 0.36476588249206543, 0.36312252283096313, 0.361527681350708, 0.36036449670791626, 0.3581533133983612, 0.3633516728878021, 0.35499346256256104, 0.3547135293483734, 0.35882508754730225, 0.35363712906837463], "val_accuracy": [0.5473333597183228, 0.6496666669845581, 0.6846666932106018, 0.6959999799728394, 0.7279999852180481, 0.7450000047683716, 0.7580000162124634, 0.7713333368301392, 0.7763333320617676, 0.7816666960716248, 0.7963333129882812, 0.8109999895095825, 0.8116666674613953, 0.8113333582878113, 0.8116666674613953, 0.8186666369438171, 0.8259999752044678, 0.8236666917800903, 0.828000009059906, 0.8360000252723694, 0.8323333263397217, 0.8373333215713501, 0.8373333215713501, 0.8366666436195374, 0.843666672706604, 0.843999981880188, 0.846666693687439, 0.8483333587646484, 0.8493333458900452, 0.847000002861023, 0.8476666808128357, 0.8496666550636292, 0.8510000109672546, 0.8519999980926514, 0.8553333282470703, 0.8556666374206543, 0.8583333492279053, 0.859333336353302, 0.8560000061988831, 0.862333357334137, 0.8636666536331177, 0.859666645526886, 0.8636666536331177, 0.8643333315849304, 0.8653333187103271, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.8709999918937683, 0.8690000176429749, 0.8686666488647461, 0.8653333187103271, 0.8733333349227905, 0.8679999709129333, 0.8709999918937683, 0.8706666827201843, 0.8703333139419556, 0.8693333268165588]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8571428656578064, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22428822517395, 1.866015076637268, 1.3904491662979126, 1.0875554084777832, 0.9339439868927002, 0.8417888283729553, 0.778580904006958, 0.7262035012245178, 0.6897238492965698, 0.680862545967102, 0.6325141787528992, 0.619538426399231, 0.5972194075584412, 0.5777698159217834, 0.5639077425003052, 0.5480397343635559, 0.5286232829093933, 0.5249638557434082, 0.5102846622467041, 0.5053554773330688, 0.4982548654079437, 0.4861551821231842, 0.4754699766635895, 0.4653483033180237, 0.45814889669418335, 0.44732245802879333, 0.44672340154647827, 0.4390961229801178, 0.4283233880996704, 0.4181281328201294, 0.4127659499645233, 0.4108203053474426, 0.40020254254341125, 0.39960941672325134, 0.3940556049346924, 0.38921570777893066, 0.3820614218711853, 0.3767131567001343, 0.372509628534317, 0.3634648323059082, 0.35784921050071716, 0.34921348094940186, 0.35010290145874023, 0.3392941653728485, 0.3401651978492737, 0.33556196093559265, 0.3362763822078705, 0.32518258690834045, 0.32243359088897705, 0.3146224915981293, 0.31703177094459534, 0.30606791377067566, 0.30325138568878174, 0.30222776532173157, 0.29717007279396057, 0.2917916774749756, 0.2815099358558655, 0.2837992012500763, 0.2840645909309387, 0.27352985739707947, 0.27301305532455444, 0.25695502758026123, 0.26060935854911804, 0.2644641399383545], "accuracy": [0.2690529525279999, 0.49148064851760864, 0.5683529376983643, 0.6234315037727356, 0.6675472259521484, 0.7021529674530029, 0.7206445932388306, 0.735569953918457, 0.7486461400985718, 0.7519482374191284, 0.7705719470977783, 0.7728173136711121, 0.7866860628128052, 0.7874785661697388, 0.7980451583862305, 0.8014793395996094, 0.8137630224227905, 0.8105930685997009, 0.8149517774581909, 0.8216879963874817, 0.821820080280304, 0.8244617581367493, 0.8315942287445068, 0.8319904804229736, 0.8396512866020203, 0.839519202709198, 0.837537944316864, 0.8438779711723328, 0.8471800088882446, 0.8558974862098694, 0.8557654023170471, 0.8576145768165588, 0.8582749962806702, 0.8565579056739807, 0.8588033318519592, 0.8588033318519592, 0.8603883385658264, 0.8672566413879395, 0.8698983192443848, 0.8734645247459412, 0.8713511824607849, 0.8709549307823181, 0.8753136992454529, 0.8799365758895874, 0.8751816153526306, 0.8770307898521423, 0.8792761564254761, 0.8813894987106323, 0.8813894987106323, 0.8836349248886108, 0.8873332738876343, 0.8893144726753235, 0.8907673954963684, 0.891559898853302, 0.8897107243537903, 0.8919561505317688, 0.8969752788543701, 0.8961827754974365, 0.9002773761749268, 0.897899866104126, 0.9029190540313721, 0.9116365313529968, 0.9030511379241943, 0.9045040011405945], "val_loss": [2.042792320251465, 1.515049934387207, 1.0403927564620972, 0.8313674926757812, 0.7383937239646912, 0.6824102401733398, 0.6433374285697937, 0.6012331247329712, 0.5879504680633545, 0.5486400723457336, 0.5325047373771667, 0.5174093246459961, 0.5101632475852966, 0.4911769926548004, 0.47806990146636963, 0.47155049443244934, 0.4586315453052521, 0.4538607895374298, 0.4416610598564148, 0.44296595454216003, 0.4328586459159851, 0.4283628463745117, 0.4170153737068176, 0.4163804054260254, 0.4033445119857788, 0.407935231924057, 0.4011644423007965, 0.39810872077941895, 0.3913706839084625, 0.39078161120414734, 0.3781641721725464, 0.378307580947876, 0.3775781989097595, 0.372161865234375, 0.3742092251777649, 0.3690917491912842, 0.3633595407009125, 0.36257681250572205, 0.3611122667789459, 0.3565335273742676, 0.351244181394577, 0.3527202010154724, 0.348092645406723, 0.34975308179855347, 0.3538106679916382, 0.3426949977874756, 0.3445403277873993, 0.3424554169178009, 0.3360406756401062, 0.3397260010242462, 0.3413570821285248, 0.3311999440193176, 0.33277368545532227, 0.33349907398223877, 0.3369487524032593, 0.3288114070892334, 0.3326281011104584, 0.3233402669429779, 0.3274678587913513, 0.3263998031616211, 0.32744941115379333, 0.3220025300979614, 0.32209324836730957, 0.32820093631744385], "val_accuracy": [0.5299999713897705, 0.6393333077430725, 0.6886666417121887, 0.715666651725769, 0.7363333106040955, 0.7576666474342346, 0.7673333287239075, 0.7803333401679993, 0.7876666784286499, 0.8040000200271606, 0.8136666417121887, 0.8203333616256714, 0.8153333067893982, 0.8253333568572998, 0.8360000252723694, 0.8323333263397217, 0.8389999866485596, 0.840666651725769, 0.8460000157356262, 0.843666672706604, 0.8489999771118164, 0.846666693687439, 0.8546666502952576, 0.8529999852180481, 0.8603333234786987, 0.856333315372467, 0.8579999804496765, 0.862333357334137, 0.8633333444595337, 0.8613333106040955, 0.8679999709129333, 0.8640000224113464, 0.8633333444595337, 0.8683333396911621, 0.8679999709129333, 0.8673333525657654, 0.8696666955947876, 0.8706666827201843, 0.8703333139419556, 0.8730000257492065, 0.874666690826416, 0.871666669845581, 0.8730000257492065, 0.8740000128746033, 0.8723333477973938, 0.8766666650772095, 0.875333309173584, 0.875, 0.8759999871253967, 0.8766666650772095, 0.8776666522026062, 0.8799999952316284, 0.8799999952316284, 0.8786666393280029, 0.8790000081062317, 0.8809999823570251, 0.8796666860580444, 0.8843333125114441, 0.8849999904632568, 0.8820000290870667, 0.8833333253860474, 0.8836666941642761, 0.8806666731834412, 0.8836666941642761]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [2, 2, 3, 0, 3, 8], [0, 1, 0, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [1, 2, 0, 2], [16, 16], [0, 1], [0], [0], [50], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 5, 4, 2, 8], [0, 0, 0, 3, 0, 3, 3, 1, 2, 0], [16, 99, 96, 99, 80, 1]], "fitness": -0.13171428442001343, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(alpha), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.pow(sigma, sigma)), alpha)", "other_info": {"loss": [141357.828125, 964077486080.0, 2.2239874952619622e+17, 1.9659910729541525e+31, NaN, 3.573392876642477e+27], "accuracy": [0.12191256135702133, 0.10170386731624603, 0.09377889335155487, 0.11134592443704605, 0.10447761416435242, 0.09959053993225098], "val_loss": [128426.484375, 65291417550848.0, 489014608003072.0, 1.2429436699159696e+29, 2.3449891978947238e+22, 3.0488884386036363e+29], "val_accuracy": [0.13433332741260529, 0.07000000029802322, 0.06866666674613953, 0.11733333021402359, 0.09966666996479034, 0.09966666996479034]}, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 2, 1, 1, 1, 17, 9, 8, 4], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [3, 2, 6, 0, 3, 6], [0, 1, 0, 2, 2, 3], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 0, 3, 6, 5, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 16, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 6, 6, 2, 10, 6, 4, 2, 2, 1, 1, 1, 4, 2, 2, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.divide_no_nan(grad, grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [7.512868881225586, 58.5460090637207, 201.20033264160156, 488.5475158691406, 1009.0460815429688, 1778.2364501953125], "accuracy": [0.09760929644107819, 0.10342095047235489, 0.1018359512090683, 0.10394927859306335, 0.10051512718200684, 0.1018359512090683], "val_loss": [20.388952255249023, 95.27796936035156, 263.78070068359375, 574.4342041015625, 1075.45068359375, 1815.4793701171875], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 4], [0, 1, 0, 1], [35, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 2, 3, 0, 3, 5], [0, 2, 0, 3, 1], [16, 16], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 1, 2, 9], [0, 4, 0, 4, 0, 0, 3, 1, 4, 0], [16, 99, 96, 81, 61, 75]], "fitness": -0.09971428662538528, "mapping_values": [1, 9, 5, 4, 2, 10, 5, 5, 2, 2, 1, 1, 1, 10, 5, 5, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), alpha), tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [4.265640963534284e+21, 5.614026854743335e+21, 4.978717566109061e+21, 5.062045418214484e+21, 5.001799640099242e+21, 5.162854555223499e+21], "accuracy": [0.09985470771789551, 0.10962884873151779, 0.10289261490106583, 0.09998679161071777, 0.10460969805717468, 0.10593052208423615], "val_loss": [3.954790132354197e+21, 3.954790132354197e+21, 3.954790132354197e+21, 3.954790132354197e+21, 3.954790132354197e+21, 3.954790132354197e+21], "val_accuracy": [0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1], [0, 2, 3, 0, 3, 6, 9, 8], [0, 1, 0, 2], [93, 39, 15], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 5, 2, 8], [0, 0, 2, 3, 0, 0, 3, 1, 2, 1], [16, 43, 96, 99, 19, 72]], "fitness": -0.08914285898208618, "mapping_values": [1, 12, 8, 4, 3, 10, 6, 4, 2, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(beta), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [2.3073737621307373, 2.3075406551361084, 2.307302951812744, 2.3084471225738525, 2.3084402084350586, 2.3079113960266113], "accuracy": [0.09166556596755981, 0.09166556596755981, 0.09338264167308807, 0.09259014576673508, 0.0874389111995697, 0.09179764986038208], "val_loss": [2.3070168495178223, 2.307016372680664, 2.307016372680664, 2.307015895843506, 2.307015895843506, 2.3070156574249268], "val_accuracy": [0.0820000022649765, 0.0820000022649765, 0.0820000022649765, 0.0820000022649765, 0.0820000022649765, 0.0820000022649765]}}]