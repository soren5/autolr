[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8808571696281433, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223215103149414, 1.8640538454055786, 1.390925645828247, 1.0857504606246948, 0.9175904989242554, 0.8278062343597412, 0.75929194688797, 0.7150763869285583, 0.6742342710494995, 0.6527069211006165, 0.6226239800453186, 0.6030511260032654, 0.5812473893165588, 0.5698184370994568, 0.5517233610153198, 0.5318202376365662, 0.5262278914451599, 0.5063096284866333, 0.4941454231739044, 0.4912639260292053, 0.47673994302749634, 0.46776485443115234, 0.45580968260765076, 0.45419755578041077, 0.4471202790737152, 0.4368197023868561, 0.4238806366920471, 0.41453513503074646, 0.41017231345176697, 0.4062040150165558, 0.40386685729026794, 0.3953916132450104, 0.39355871081352234, 0.3836102783679962, 0.37635838985443115, 0.3735085725784302, 0.363672137260437, 0.35395750403404236, 0.35972025990486145, 0.34721699357032776, 0.3442964553833008, 0.335767537355423, 0.3300938904285431, 0.32407090067863464, 0.32112976908683777, 0.3181473910808563, 0.31370431184768677, 0.3087446987628937, 0.3084625005722046, 0.30203962326049805, 0.293395072221756, 0.2889169156551361, 0.2914500832557678, 0.28307828307151794, 0.28207361698150635, 0.2786792516708374, 0.27818819880485535, 0.26387521624565125], "accuracy": [0.27222296595573425, 0.5027077198028564, 0.5674283504486084, 0.6277902722358704, 0.6709813475608826, 0.7058512568473816, 0.7269845604896545, 0.7415136694908142, 0.7586844563484192, 0.7617223858833313, 0.783119797706604, 0.7832518815994263, 0.7926297783851624, 0.8001585006713867, 0.807158887386322, 0.8103289008140564, 0.8133667707443237, 0.8190463781356812, 0.8247259259223938, 0.8271034359931946, 0.8298771381378174, 0.8341038227081299, 0.8366134166717529, 0.839519202709198, 0.8404437899589539, 0.848368763923645, 0.8515387773513794, 0.8564258217811584, 0.8529917001724243, 0.8585391640663147, 0.8515387773513794, 0.863558292388916, 0.8615770936012268, 0.8640866279602051, 0.8652753829956055, 0.8671245574951172, 0.8720116019248962, 0.8771628737449646, 0.8705587387084961, 0.876370370388031, 0.8787478804588318, 0.8784837126731873, 0.8828424215316772, 0.8842953443527222, 0.884691596031189, 0.8840311765670776, 0.8891823887825012, 0.8894465565681458, 0.8899748921394348, 0.8932769894599915, 0.8945978283882141, 0.8980319499969482, 0.896446943283081, 0.8988244533538818, 0.9019944667816162, 0.901862382888794, 0.8985602855682373, 0.904768168926239], "val_loss": [2.039530038833618, 1.5154659748077393, 1.039007544517517, 0.8366694450378418, 0.7400773167610168, 0.6859951019287109, 0.6454513669013977, 0.6114123463630676, 0.5899704694747925, 0.5724708437919617, 0.5533395409584045, 0.5345184803009033, 0.5225448608398438, 0.5092709064483643, 0.500229001045227, 0.49316829442977905, 0.480929970741272, 0.4729439616203308, 0.4688349962234497, 0.4563703238964081, 0.45455607771873474, 0.44636544585227966, 0.44144734740257263, 0.4332112669944763, 0.42851945757865906, 0.4277913272380829, 0.4196922183036804, 0.41600528359413147, 0.4114539325237274, 0.4113328456878662, 0.4059373438358307, 0.4033544063568115, 0.40210506319999695, 0.3963744640350342, 0.39264819025993347, 0.39112263917922974, 0.384288489818573, 0.383841872215271, 0.3804401755332947, 0.3786342442035675, 0.3777892291545868, 0.37486007809638977, 0.37355443835258484, 0.37450093030929565, 0.36811116337776184, 0.3697490096092224, 0.3684578537940979, 0.370509535074234, 0.36476588249206543, 0.36312252283096313, 0.361527681350708, 0.36036449670791626, 0.3581533133983612, 0.3633516728878021, 0.35499346256256104, 0.3547135293483734, 0.35882508754730225, 0.35363712906837463], "val_accuracy": [0.5473333597183228, 0.6496666669845581, 0.6846666932106018, 0.6959999799728394, 0.7279999852180481, 0.7450000047683716, 0.7580000162124634, 0.7713333368301392, 0.7763333320617676, 0.7816666960716248, 0.7963333129882812, 0.8109999895095825, 0.8116666674613953, 0.8113333582878113, 0.8116666674613953, 0.8186666369438171, 0.8259999752044678, 0.8236666917800903, 0.828000009059906, 0.8360000252723694, 0.8323333263397217, 0.8373333215713501, 0.8373333215713501, 0.8366666436195374, 0.843666672706604, 0.843999981880188, 0.846666693687439, 0.8483333587646484, 0.8493333458900452, 0.847000002861023, 0.8476666808128357, 0.8496666550636292, 0.8510000109672546, 0.8519999980926514, 0.8553333282470703, 0.8556666374206543, 0.8583333492279053, 0.859333336353302, 0.8560000061988831, 0.862333357334137, 0.8636666536331177, 0.859666645526886, 0.8636666536331177, 0.8643333315849304, 0.8653333187103271, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.8709999918937683, 0.8690000176429749, 0.8686666488647461, 0.8653333187103271, 0.8733333349227905, 0.8679999709129333, 0.8709999918937683, 0.8706666827201843, 0.8703333139419556, 0.8693333268165588]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.871999979019165, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2220709323883057, 1.86483895778656, 1.3778356313705444, 1.0782631635665894, 0.9337419271469116, 0.8407838344573975, 0.7739124298095703, 0.7228872776031494, 0.6918388605117798, 0.6699500679969788, 0.6439370512962341, 0.6153818368911743, 0.589826226234436, 0.5715716481208801, 0.5551125407218933, 0.540048360824585, 0.5211997032165527, 0.5212459564208984, 0.4957418739795685, 0.4965139925479889, 0.4831306040287018, 0.46721965074539185, 0.4675374925136566, 0.45530128479003906, 0.44019076228141785, 0.4361034631729126, 0.42944130301475525, 0.4245571792125702, 0.41214659810066223, 0.40785354375839233, 0.3957151472568512, 0.3976929783821106, 0.3896803557872772, 0.38228750228881836, 0.3807236850261688, 0.38076579570770264, 0.3714238405227661, 0.3570437431335449, 0.35775652527809143, 0.3495369553565979, 0.34620919823646545, 0.3375621736049652, 0.33895015716552734, 0.328100323677063, 0.3265596628189087, 0.332092821598053, 0.3199789524078369, 0.31132084131240845, 0.30095380544662476, 0.30787524580955505, 0.2940901219844818, 0.29089874029159546, 0.2922969460487366, 0.2902902066707611, 0.28437086939811707, 0.2795636057853699, 0.27612006664276123, 0.26555442810058594, 0.2703551948070526, 0.2679217457771301, 0.25762078166007996, 0.2653220295906067, 0.25902026891708374, 0.2504826784133911, 0.24560467898845673, 0.23703451454639435, 0.24384649097919464, 0.23160450160503387, 0.23441259562969208, 0.23055776953697205, 0.22340518236160278, 0.2180253267288208, 0.21343155205249786, 0.2094791978597641, 0.21402661502361298], "accuracy": [0.27644962072372437, 0.4913485646247864, 0.5703341960906982, 0.6235635876655579, 0.6637167930603027, 0.6959450244903564, 0.7259278893470764, 0.7423061728477478, 0.7486461400985718, 0.7555144429206848, 0.7670056819915771, 0.7786290049552917, 0.789459764957428, 0.793950617313385, 0.7998943328857422, 0.8079513907432556, 0.8082155585289001, 0.8137630224227905, 0.8224804997444153, 0.8197067975997925, 0.8305375576019287, 0.8317263126373291, 0.832650899887085, 0.8378021121025085, 0.8465195894241333, 0.8393871188163757, 0.8467837572097778, 0.8498216867446899, 0.8533879518508911, 0.8555012345314026, 0.8558974862098694, 0.8564258217811584, 0.8652753829956055, 0.8605204224586487, 0.8613129258155823, 0.8621054291725159, 0.8684453964233398, 0.8741249442100525, 0.8692378997802734, 0.8758420348167419, 0.8712190985679626, 0.878879964351654, 0.8766345381736755, 0.8811253309249878, 0.8798044919967651, 0.8845595121383667, 0.8853520154953003, 0.8868049383163452, 0.8912957310676575, 0.8882578015327454, 0.893541157245636, 0.8975036144256592, 0.8928807377815247, 0.89552241563797, 0.8977677822113037, 0.9022586345672607, 0.9021265506744385, 0.9043719172477722, 0.9029190540313721, 0.9059569239616394, 0.9062210917472839, 0.9060890078544617, 0.9062210917472839, 0.9116365313529968, 0.9119006991386414, 0.915070652961731, 0.9138818979263306, 0.9189010858535767, 0.9125610589981079, 0.9181085824966431, 0.9181085824966431, 0.9204860925674438, 0.9231277108192444, 0.9248448014259338, 0.9214106202125549], "val_loss": [2.0389487743377686, 1.5129631757736206, 1.048006534576416, 0.8439053297042847, 0.753559410572052, 0.7072463631629944, 0.6669910550117493, 0.6276806592941284, 0.6020830273628235, 0.5895379781723022, 0.5676221251487732, 0.5502293109893799, 0.5343397259712219, 0.5190014839172363, 0.510848879814148, 0.49956777691841125, 0.49041348695755005, 0.48406216502189636, 0.4751337170600891, 0.4680722653865814, 0.4623751640319824, 0.45850470662117004, 0.44963768124580383, 0.44928333163261414, 0.4412294924259186, 0.4362002909183502, 0.4331306219100952, 0.4292858839035034, 0.423479288816452, 0.4201584458351135, 0.41821157932281494, 0.4140063524246216, 0.4115869104862213, 0.4103734493255615, 0.41213667392730713, 0.4096069037914276, 0.4000990688800812, 0.40094196796417236, 0.3950543999671936, 0.3947818875312805, 0.3917437791824341, 0.3961031436920166, 0.3912816047668457, 0.38916292786598206, 0.39218074083328247, 0.3852118253707886, 0.38888436555862427, 0.3826456665992737, 0.3799624741077423, 0.37971997261047363, 0.37800174951553345, 0.37758928537368774, 0.3740414083003998, 0.3721000850200653, 0.37540364265441895, 0.37550488114356995, 0.3718688189983368, 0.38421890139579773, 0.36614835262298584, 0.36576464772224426, 0.37814566493034363, 0.36261165142059326, 0.3717685639858246, 0.36020174622535706, 0.368516206741333, 0.3670978248119354, 0.360970139503479, 0.3677336573600769, 0.3672601580619812, 0.3674711585044861, 0.3603390157222748, 0.36298680305480957, 0.3663424551486969, 0.3678765892982483, 0.3650420010089874], "val_accuracy": [0.5203333497047424, 0.6690000295639038, 0.6893333196640015, 0.6983333230018616, 0.7350000143051147, 0.7513333559036255, 0.7559999823570251, 0.7713333368301392, 0.781000018119812, 0.7816666960716248, 0.8016666769981384, 0.8009999990463257, 0.8146666884422302, 0.8199999928474426, 0.8209999799728394, 0.828000009059906, 0.8330000042915344, 0.8356666564941406, 0.8370000123977661, 0.8396666646003723, 0.8403333425521851, 0.846666693687439, 0.847000002861023, 0.8460000157356262, 0.8489999771118164, 0.8529999852180481, 0.8493333458900452, 0.8519999980926514, 0.8536666631698608, 0.8579999804496765, 0.8550000190734863, 0.8553333282470703, 0.8579999804496765, 0.8586666584014893, 0.8543333411216736, 0.8610000014305115, 0.8616666793823242, 0.8603333234786987, 0.8619999885559082, 0.8586666584014893, 0.8679999709129333, 0.8613333106040955, 0.862333357334137, 0.8659999966621399, 0.8613333106040955, 0.8683333396911621, 0.8686666488647461, 0.8676666617393494, 0.8696666955947876, 0.8709999918937683, 0.8700000047683716, 0.8696666955947876, 0.8696666955947876, 0.8726666569709778, 0.8730000257492065, 0.8723333477973938, 0.8733333349227905, 0.8686666488647461, 0.8723333477973938, 0.8713333606719971, 0.8693333268165588, 0.8759999871253967, 0.8709999918937683, 0.8763333559036255, 0.8726666569709778, 0.8733333349227905, 0.8736666440963745, 0.8769999742507935, 0.8743333220481873, 0.8793333172798157, 0.8786666393280029, 0.8786666393280029, 0.878000020980835, 0.8736666440963745, 0.878000020980835]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 3, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 9, 1, 4, 1, 4, 2, 8], [0, 1, 0, 3, 0, 0, 3, 4, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.12028571218252182, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))), grad)", "other_info": {"loss": [84172120064.0, 93095378944.0, 94806638592.0, 94252875776.0, 93116702720.0, 95481323520.0], "accuracy": [0.09113723784685135, 0.09708096832036972, 0.09377889335155487, 0.09192973375320435, 0.09338264167308807, 0.0944393053650856], "val_loss": [71839203328.0, 71840079872.0, 71841849344.0, 71845847040.0, 71846920192.0, 71846002688.0], "val_accuracy": [0.1080000028014183, 0.1080000028014183, 0.1080000028014183, 0.1080000028014183, 0.1080000028014183, 0.1080000028014183]}, "mapping_values": [1, 9, 5, 4, 2, 7, 4, 3, 2, 2, 1, 1, 1, 17, 9, 8, 5], "tree_depth": 16}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [45, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 0], [0, 5, 3, 0, 3, 5], [0, 2, 0, 3], [16, 34], [0, 1], [0], [0], [25], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 2, 6, 8, 1, 4, 1, 4, 0, 8], [0, 0, 0, 0, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.negative(tf.math.sqrt(beta)))", "other_info": {"loss": [874951.5625, 16201690.0, 40407572.0, 66327756.0, 91127320.0, 117205096.0], "accuracy": [0.09959053993225098, 0.10276053100824356, 0.09734513610601425, 0.09879804402589798, 0.1026284471154213, 0.1018359512090683], "val_loss": [5222183.5, 22772674.0, 41567292.0, 60631056.0, 80121464.0, 100194040.0], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}, "mapping_values": [1, 7, 4, 3, 2, 2, 1, 1, 1, 2, 1, 1, 1, 20, 11, 9, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 2, 0, 2], [39, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [5], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1], [1, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 1, 0, 5, 9, 0, 0, 8], [0, 0, 0, 3, 0, 0, 3, 1, 4, 0], [16, 99, 96, 52, 38, 1, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 6, 3, 3, 2, 2, 1, 1, 1, 28, 18, 10, 7], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), sigma)), tf.math.sqrt(tf.math.subtract(alpha, grad)))), tf.math.negative(tf.math.square(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.negative(tf.math.sqrt(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 9], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 2], [2, 2, 0, 3, 5], [16, 16], [0, 1], [0], [0], [53], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 2, 6, 8, 1, 4, 1, 4, 2, 8], [0, 1, 3, 4, 3, 0, 1, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(beta), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.sqrt(sigma), tf.math.subtract(grad, sigma)), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, alpha)))))", "other_info": {"loss": [2651.594970703125, 2760.96728515625, 1796.94677734375, 1503.904052734375, 1359.4722900390625, 1297.5721435546875], "accuracy": [0.10276053100824356, 0.10394927859306335, 0.09813763201236725, 0.09826971590518951, 0.09509972482919693, 0.09655263274908066], "val_loss": [3038.309326171875, 1970.1839599609375, 1273.6273193359375, 1402.96435546875, 1207.628173828125, 1320.0972900390625], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10066666454076767]}, "mapping_values": [1, 7, 5, 2, 2, 11, 6, 5, 1, 2, 1, 1, 1, 16, 8, 8, 2], "tree_depth": 13}]