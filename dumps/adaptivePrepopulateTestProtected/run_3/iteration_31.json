[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.87628573179245, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221153497695923, 1.8690768480300903, 1.3930829763412476, 1.0920813083648682, 0.946754515171051, 0.8386176228523254, 0.7666530013084412, 0.7169585227966309, 0.6927855014801025, 0.6578141450881958, 0.6284602284431458, 0.6175082921981812, 0.5932229161262512, 0.5866845846176147, 0.5698589086532593, 0.5537236928939819, 0.5400969386100769, 0.5237241387367249, 0.5110511779785156, 0.4987642467021942, 0.4859139025211334, 0.48274683952331543, 0.4702848792076111, 0.46559596061706543, 0.4571192264556885, 0.45048508048057556, 0.43323010206222534, 0.43672871589660645, 0.4228549599647522, 0.4158686399459839, 0.40923213958740234, 0.3978442847728729, 0.3938561677932739, 0.39290058612823486, 0.3881992995738983, 0.372427374124527, 0.3708527982234955, 0.3674342930316925, 0.3639999032020569, 0.3603408634662628, 0.34736937284469604, 0.34856680035591125, 0.3419991731643677, 0.3314146399497986, 0.33113908767700195, 0.3256821036338806, 0.32241684198379517, 0.31129369139671326, 0.31209611892700195, 0.31315377354621887, 0.29969727993011475, 0.30303266644477844, 0.2969401776790619, 0.2884080111980438, 0.2830028831958771, 0.2803061902523041, 0.284909725189209, 0.2756250500679016, 0.27255335450172424, 0.267034113407135, 0.26680734753608704, 0.26125890016555786, 0.25913572311401367, 0.2510053515434265, 0.24825863540172577, 0.2431088238954544, 0.24655894935131073], "accuracy": [0.27077004313468933, 0.488971084356308, 0.5671641826629639, 0.6252806782722473, 0.6592260003089905, 0.698718786239624, 0.7232862114906311, 0.7390040755271912, 0.7467969655990601, 0.7652885913848877, 0.7759873270988464, 0.7729493975639343, 0.7843085527420044, 0.7873464822769165, 0.7947431206703186, 0.7976489067077637, 0.8076872229576111, 0.8117818236351013, 0.8136309385299683, 0.8247259259223938, 0.8227446675300598, 0.8274996876716614, 0.8329150676727295, 0.829216718673706, 0.8379341959953308, 0.8426892161369324, 0.8479725122451782, 0.8446704745292664, 0.8507462739944458, 0.8500858545303345, 0.8543124794960022, 0.8582749962806702, 0.8609166741371155, 0.86118084192276, 0.8593316674232483, 0.8659358024597168, 0.8634262084960938, 0.872407853603363, 0.8688416481018066, 0.8714832663536072, 0.8737286925315857, 0.8730682730674744, 0.8749174475669861, 0.8821820020675659, 0.8799365758895874, 0.8815215826034546, 0.8837670087814331, 0.8878615498542786, 0.8838990926742554, 0.8853520154953003, 0.891559898853302, 0.8865407705307007, 0.8905032277107239, 0.8963148593902588, 0.896446943283081, 0.8969752788543701, 0.8951261639595032, 0.9002773761749268, 0.89988112449646, 0.8986923694610596, 0.901862382888794, 0.9029190540313721, 0.9019944667816162, 0.9062210917472839, 0.9074098467826843, 0.9082023501396179, 0.9084665179252625], "val_loss": [2.033933639526367, 1.5043776035308838, 1.0385841131210327, 0.8348872661590576, 0.748683512210846, 0.6962888240814209, 0.6452283263206482, 0.6097168326377869, 0.5908951163291931, 0.5654791593551636, 0.5485540628433228, 0.5308454632759094, 0.5217159986495972, 0.5026088356971741, 0.4924180805683136, 0.4941955506801605, 0.47913697361946106, 0.46788424253463745, 0.4600522518157959, 0.45553308725357056, 0.4523840844631195, 0.45103052258491516, 0.4417187571525574, 0.43125733733177185, 0.42781078815460205, 0.4263964891433716, 0.4191243350505829, 0.41350650787353516, 0.4158003032207489, 0.4085052013397217, 0.4044939875602722, 0.3971168100833893, 0.39628612995147705, 0.39976948499679565, 0.3952869176864624, 0.3888694643974304, 0.3912425935268402, 0.3875867426395416, 0.38649430871009827, 0.3814649283885956, 0.38066309690475464, 0.37854698300361633, 0.3797750174999237, 0.3766616880893707, 0.37332388758659363, 0.3710525631904602, 0.36949723958969116, 0.37775883078575134, 0.36838436126708984, 0.3662301003932953, 0.36757656931877136, 0.36328125, 0.36480098962783813, 0.3676953911781311, 0.3622332215309143, 0.36552929878234863, 0.35753536224365234, 0.368220716714859, 0.3614383041858673, 0.3567075729370117, 0.3559085726737976, 0.35341039299964905, 0.35565683245658875, 0.3598191440105438, 0.3541577160358429, 0.35910654067993164, 0.356111079454422], "val_accuracy": [0.5270000100135803, 0.6653333306312561, 0.6803333163261414, 0.7123333215713501, 0.734666645526886, 0.7536666393280029, 0.7680000066757202, 0.7770000100135803, 0.7826666831970215, 0.793666660785675, 0.7990000247955322, 0.8090000152587891, 0.8040000200271606, 0.8149999976158142, 0.8186666369438171, 0.8149999976158142, 0.8223333358764648, 0.8259999752044678, 0.8303333520889282, 0.8316666483879089, 0.8326666951179504, 0.8306666612625122, 0.8346666693687439, 0.8429999947547913, 0.8423333168029785, 0.8420000076293945, 0.8479999899864197, 0.8500000238418579, 0.8456666469573975, 0.8443333506584167, 0.8479999899864197, 0.8539999723434448, 0.8560000061988831, 0.8486666679382324, 0.8513333201408386, 0.8603333234786987, 0.8546666502952576, 0.8569999933242798, 0.8569999933242798, 0.862333357334137, 0.8629999756813049, 0.8600000143051147, 0.8629999756813049, 0.862666666507721, 0.8650000095367432, 0.8643333315849304, 0.8629999756813049, 0.8636666536331177, 0.8679999709129333, 0.8650000095367432, 0.8683333396911621, 0.8690000176429749, 0.8683333396911621, 0.8666666746139526, 0.8703333139419556, 0.8686666488647461, 0.8736666440963745, 0.8679999709129333, 0.8706666827201843, 0.8709999918937683, 0.8730000257492065, 0.8743333220481873, 0.871999979019165, 0.8733333349227905, 0.8740000128746033, 0.8693333268165588, 0.8740000128746033]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8757143020629883, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224942684173584, 1.871252417564392, 1.4030088186264038, 1.1126313209533691, 0.9514383673667908, 0.8503857254981995, 0.782963216304779, 0.7396091818809509, 0.6956003904342651, 0.6692837476730347, 0.640775740146637, 0.6248799562454224, 0.6041319370269775, 0.5865982174873352, 0.5675014853477478, 0.5443732142448425, 0.5456271767616272, 0.5241827368736267, 0.5193917155265808, 0.5024247169494629, 0.4910954236984253, 0.4831080734729767, 0.4668230414390564, 0.4690859615802765, 0.45782211422920227, 0.4481227993965149, 0.4421629309654236, 0.4310210943222046, 0.42798489332199097, 0.4178285002708435, 0.4071178138256073, 0.404636949300766, 0.4017072916030884, 0.38652274012565613, 0.38605740666389465, 0.37575364112854004, 0.370294988155365, 0.36878088116645813, 0.34956854581832886, 0.3614441454410553, 0.3559930622577667, 0.35438573360443115], "accuracy": [0.2603355050086975, 0.48725399374961853, 0.5583146214485168, 0.6087703108787537, 0.6668868064880371, 0.6970016956329346, 0.7128516435623169, 0.7260599732398987, 0.7473253011703491, 0.7541936039924622, 0.7622507214546204, 0.7734777331352234, 0.7815347909927368, 0.7853652238845825, 0.791441023349762, 0.800818920135498, 0.8029322624206543, 0.8057059645652771, 0.8137630224227905, 0.8175934553146362, 0.8247259259223938, 0.8272355198860168, 0.8350284099578857, 0.8343679904937744, 0.8378021121025085, 0.8393871188163757, 0.8438779711723328, 0.8475762605667114, 0.8466516733169556, 0.8516708612442017, 0.8551049828529358, 0.8532558679580688, 0.8560295701026917, 0.8654074668884277, 0.8628978729248047, 0.8664641380310059, 0.8663320541381836, 0.8741249442100525, 0.8746532797813416, 0.8688416481018066, 0.8751816153526306, 0.8779553771018982], "val_loss": [2.0415730476379395, 1.5183463096618652, 1.0452349185943604, 0.8339993357658386, 0.7390525937080383, 0.6841753721237183, 0.638613224029541, 0.6076778769493103, 0.5734540224075317, 0.5533197522163391, 0.5473722219467163, 0.5241111516952515, 0.5079604983329773, 0.4931032657623291, 0.48346272110939026, 0.4688679575920105, 0.462714284658432, 0.4560721516609192, 0.45192620158195496, 0.43939468264579773, 0.4317445456981659, 0.42161795496940613, 0.42339539527893066, 0.41693204641342163, 0.41076424717903137, 0.4012649357318878, 0.3966442048549652, 0.39179670810699463, 0.3886090815067291, 0.38680964708328247, 0.3777235448360443, 0.37476491928100586, 0.3723231554031372, 0.3675600588321686, 0.3652341365814209, 0.3619065284729004, 0.3575423061847687, 0.3563610017299652, 0.3549671769142151, 0.3545798361301422, 0.35228368639945984, 0.35171443223953247], "val_accuracy": [0.546999990940094, 0.6473333239555359, 0.687333345413208, 0.706333339214325, 0.7400000095367432, 0.7546666860580444, 0.7633333206176758, 0.7770000100135803, 0.7916666865348816, 0.8036666512489319, 0.8083333373069763, 0.8130000233650208, 0.8190000057220459, 0.8253333568572998, 0.8320000171661377, 0.8399999737739563, 0.8396666646003723, 0.8393333554267883, 0.8420000076293945, 0.847000002861023, 0.8536666631698608, 0.8503333330154419, 0.8556666374206543, 0.8529999852180481, 0.8566666841506958, 0.859000027179718, 0.859000027179718, 0.8643333315849304, 0.8619999885559082, 0.8656666874885559, 0.8646666407585144, 0.8673333525657654, 0.871666669845581, 0.8650000095367432, 0.8650000095367432, 0.871666669845581, 0.874666690826416, 0.8706666827201843, 0.8723333477973938, 0.8686666488647461, 0.8736666440963745, 0.871999979019165]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 1], [39, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 6], [0, 0, 0, 3], [16, 95, 7], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 6, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 1, 1, 2, 0], [42, 99, 96, 99, 61, 1]], "fitness": -0.7954285740852356, "mapping_values": [1, 9, 5, 4, 2, 6, 3, 3, 3, 2, 1, 1, 0, 16, 8, 8, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, alpha)))", "other_info": {"loss": [1.9801024198532104, 1.7727992534637451, 0.9453448057174683, 0.7979751825332642, 0.747684121131897, 0.7004165053367615, 0.6818326711654663, 0.6785587072372437, 0.6924155354499817, 0.6890008449554443, 0.7005009055137634, 0.6798111200332642, 0.7455711364746094, 0.8494414687156677], "accuracy": [0.33443403244018555, 0.44987452030181885, 0.6559239029884338, 0.7107383608818054, 0.7215691208839417, 0.728701651096344, 0.7477215528488159, 0.7469290494918823, 0.7401928305625916, 0.7471932172775269, 0.7326641082763672, 0.739928662776947, 0.7300224304199219, 0.7074362635612488], "val_loss": [2.6043033599853516, 0.8724970817565918, 0.6436914205551147, 0.6442546844482422, 0.5916699767112732, 0.5939548015594482, 0.5938635468482971, 0.5839055180549622, 0.5449828505516052, 0.5861014127731323, 0.5636942982673645, 0.6043435335159302, 0.6927311420440674, 0.7545088529586792], "val_accuracy": [0.4860000014305115, 0.6703333258628845, 0.7643333077430725, 0.7770000100135803, 0.7776666879653931, 0.7806666493415833, 0.7616666555404663, 0.7716666460037231, 0.8040000200271606, 0.7973333597183228, 0.7889999747276306, 0.7943333387374878, 0.7926666736602783, 0.7676666378974915]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5, 1], [0, 2, 0, 3, 4], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 6, 6, 8, 1, 4, 1, 4, 2, 9], [0, 0, 0, 3, 0, 0, 4, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10085714608430862, "mapping_values": [1, 9, 5, 4, 2, 12, 7, 5, 2, 2, 1, 1, 1, 20, 11, 9, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(beta), tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), grad)))), alpha), tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.30957293510437, 2.308271646499634, 2.3093106746673584, 2.309046745300293, 2.3088033199310303, 2.3090527057647705, 2.3074846267700195, 2.3095874786376953, 2.3085834980010986, 2.3097567558288574, 2.307330369949341], "accuracy": [0.09140139818191528, 0.09840179979801178, 0.09325055778026581, 0.09470347315073013, 0.0956280529499054, 0.09615638852119446, 0.09272222965955734, 0.09655263274908066, 0.09338264167308807, 0.09259014576673508, 0.09708096832036972], "val_loss": [2.3075029850006104, 2.3071696758270264, 2.306981325149536, 2.306859254837036, 2.306774139404297, 2.306708574295044, 2.3066582679748535, 2.3066186904907227, 2.306584358215332, 2.306556224822998, 2.3065311908721924], "val_accuracy": [0.10066666454076767, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10133333504199982, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 0], [0, 2, 3, 6, 3], [2, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 98], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 0, 10, 6, 4, 2, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3033196926116943, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [1, 2, 3, 0, 2, 4, 7, 1], [0, 1, 0, 2, 3, 3, 0, 2], [39, 39, 61], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 8, 1, 3, 5], [0, 2, 3, 3], [16, 32], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [4, 6, 3, 1, 8, 1, 4, 1, 4, 2, 5, 6, 4, 7, 5, 8, 5, 8, 4], [0, 0, 4, 3, 1, 0, 2, 1, 4, 0, 1, 7, 3, 1], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 8, 8, 3, 10, 6, 4, 1, 2, 1, 1, 1, 33, 19, 14, 4], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.pow(tf.math.add(tf.math.subtract(grad, grad), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta)), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma))), tf.math.subtract(alpha, tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), beta)))), alpha), tf.math.add(tf.math.square(tf.math.divide_no_nan(grad, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha))), tf.math.add(tf.math.square(tf.math.sqrt(tf.math.square(tf.math.sqrt(grad)))), tf.math.pow(sigma, alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09628847241401672, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}]