[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8862857222557068, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222418785095215, 1.8632627725601196, 1.3950724601745605, 1.0979150533676147, 0.9474178552627563, 0.8543937802314758, 0.7783248424530029, 0.7376496195793152, 0.7006842494010925, 0.6746688485145569, 0.647553563117981, 0.6295329928398132, 0.6112891435623169, 0.58865886926651, 0.5667527914047241, 0.5575993657112122, 0.5467248558998108, 0.5289703011512756, 0.5205997824668884, 0.5110849142074585, 0.5064045786857605, 0.4867391884326935, 0.4731372892856598, 0.47443822026252747, 0.46410614252090454, 0.4545186161994934, 0.445819616317749, 0.4367676079273224, 0.4321127235889435, 0.4275900721549988, 0.4177286922931671, 0.40700381994247437, 0.40491974353790283, 0.3923063576221466, 0.38597339391708374, 0.37638187408447266, 0.3749813437461853, 0.3708414137363434, 0.369646281003952, 0.3635149896144867, 0.3594855070114136, 0.3503628671169281, 0.3338625133037567, 0.3396199643611908, 0.33679017424583435, 0.3303111493587494, 0.3275522291660309, 0.3153315782546997, 0.3093845844268799, 0.31660354137420654, 0.313541054725647, 0.3128948211669922, 0.2977619469165802, 0.30230653285980225, 0.298944890499115, 0.28947505354881287, 0.2822195291519165, 0.2778712213039398, 0.2668195366859436, 0.26853811740875244, 0.26283398270606995, 0.2662760019302368, 0.2576100528240204, 0.25102800130844116, 0.2539205849170685, 0.25087955594062805, 0.24508193135261536], "accuracy": [0.280940443277359, 0.48685774207115173, 0.5665037631988525, 0.616299033164978, 0.6625280380249023, 0.6930392384529114, 0.7169462442398071, 0.7320036888122559, 0.7375511527061462, 0.7491744756698608, 0.7672698497772217, 0.7670056819915771, 0.7745344042778015, 0.7876105904579163, 0.7906485199928284, 0.7994980812072754, 0.802800178527832, 0.8068947196006775, 0.8117818236351013, 0.8153480291366577, 0.8181217908859253, 0.829216718673706, 0.8300092220306396, 0.8238013386726379, 0.8325188159942627, 0.8385946154594421, 0.8372738361358643, 0.842028796672821, 0.8451988101005554, 0.8481045961380005, 0.8515387773513794, 0.8549728989601135, 0.8516708612442017, 0.8603883385658264, 0.8598600029945374, 0.8667283058166504, 0.8636903762817383, 0.8636903762817383, 0.8677849769592285, 0.8704266548156738, 0.8758420348167419, 0.8739928603172302, 0.8790120482444763, 0.8768987059593201, 0.8751816153526306, 0.8794082403182983, 0.8813894987106323, 0.8860124349594116, 0.8874653577804565, 0.8856161832809448, 0.8838990926742554, 0.8877294659614563, 0.8918240666389465, 0.8918240666389465, 0.8922203183174133, 0.8953903317451477, 0.89552241563797, 0.9002773761749268, 0.9049002528190613, 0.9034473896026611, 0.9035794734954834, 0.9038436412811279, 0.9085986018180847, 0.9095231890678406, 0.9095231890678406, 0.909259021282196, 0.910711944103241], "val_loss": [2.0414316654205322, 1.5168657302856445, 1.0494927167892456, 0.8396123051643372, 0.7532041668891907, 0.6975494027137756, 0.6532282829284668, 0.6188269853591919, 0.5909113883972168, 0.5747429728507996, 0.5562715530395508, 0.5392115712165833, 0.5226473808288574, 0.5080817937850952, 0.49551260471343994, 0.4949219524860382, 0.48097461462020874, 0.46894019842147827, 0.4645398259162903, 0.4554585814476013, 0.44845467805862427, 0.44272810220718384, 0.4365209937095642, 0.4303407371044159, 0.42757970094680786, 0.42137086391448975, 0.4158954322338104, 0.4094981253147125, 0.40614867210388184, 0.40746310353279114, 0.39686036109924316, 0.39440515637397766, 0.39069101214408875, 0.3898474872112274, 0.3889416456222534, 0.3833497166633606, 0.387736976146698, 0.3792175352573395, 0.3778442442417145, 0.37528878450393677, 0.3729557991027832, 0.37016138434410095, 0.36690768599510193, 0.36455467343330383, 0.36386409401893616, 0.3628668487071991, 0.365796834230423, 0.36076274514198303, 0.3599783480167389, 0.35867130756378174, 0.35705167055130005, 0.35411083698272705, 0.3552299737930298, 0.3651564121246338, 0.36276260018348694, 0.34837988018989563, 0.34821584820747375, 0.3528410792350769, 0.3496720790863037, 0.3506317138671875, 0.34951722621917725, 0.3443804085254669, 0.345913290977478, 0.3461855351924896, 0.3431210517883301, 0.348863810300827, 0.3426092565059662], "val_accuracy": [0.5373333096504211, 0.6570000052452087, 0.6759999990463257, 0.7110000252723694, 0.7286666631698608, 0.7419999837875366, 0.7590000033378601, 0.7616666555404663, 0.7836666703224182, 0.7903333306312561, 0.7886666655540466, 0.8006666898727417, 0.809333324432373, 0.8183333277702332, 0.8146666884422302, 0.8140000104904175, 0.8233333230018616, 0.8289999961853027, 0.8326666951179504, 0.8363333344459534, 0.8389999866485596, 0.8366666436195374, 0.8363333344459534, 0.8489999771118164, 0.847000002861023, 0.8519999980926514, 0.8533333539962769, 0.8560000061988831, 0.8573333621025085, 0.8539999723434448, 0.8619999885559082, 0.862666666507721, 0.8656666874885559, 0.8629999756813049, 0.8646666407585144, 0.8636666536331177, 0.8603333234786987, 0.8659999966621399, 0.8673333525657654, 0.8673333525657654, 0.8713333606719971, 0.8703333139419556, 0.8713333606719971, 0.871666669845581, 0.8736666440963745, 0.8730000257492065, 0.871999979019165, 0.874666690826416, 0.875333309173584, 0.874666690826416, 0.875, 0.8786666393280029, 0.8776666522026062, 0.8743333220481873, 0.8723333477973938, 0.8833333253860474, 0.8826666474342346, 0.8790000081062317, 0.8836666941642761, 0.878333330154419, 0.8820000290870667, 0.887666642665863, 0.8820000290870667, 0.8803333044052124, 0.8830000162124634, 0.8846666812896729, 0.8856666684150696]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8625714182853699, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2213685512542725, 1.8638644218444824, 1.3827632665634155, 1.0849717855453491, 0.9318726658821106, 0.8429449200630188, 0.7660977840423584, 0.7270143032073975, 0.6925455331802368, 0.650458574295044, 0.6340717673301697, 0.609423041343689, 0.5891028642654419, 0.5756457448005676, 0.5520134568214417, 0.5331732034683228, 0.5232319235801697, 0.5192993879318237, 0.4990116357803345, 0.48994314670562744, 0.48256418108940125, 0.47160667181015015, 0.46246930956840515, 0.44957873225212097, 0.4450639486312866, 0.4326602518558502, 0.43299129605293274, 0.4262854754924774, 0.4072985053062439, 0.4063134491443634, 0.4002941846847534, 0.3964560031890869, 0.3895840644836426, 0.38074493408203125, 0.37514951825141907, 0.367060124874115, 0.3708021342754364, 0.3589869737625122, 0.3546820282936096, 0.3497340679168701, 0.345160573720932, 0.3399813771247864, 0.33758994936943054, 0.3270818591117859, 0.3299461305141449, 0.3257105052471161, 0.32661882042884827, 0.3161157965660095, 0.3052687346935272, 0.3107844889163971, 0.2965123653411865, 0.29123133420944214, 0.29280245304107666, 0.2921232581138611, 0.28092673420906067], "accuracy": [0.28384625911712646, 0.49332982301712036, 0.5676925182342529, 0.6277902722358704, 0.6761326193809509, 0.6988508701324463, 0.7228899598121643, 0.7376832365989685, 0.748778223991394, 0.7643640041351318, 0.7712323069572449, 0.778761088848114, 0.7864218950271606, 0.7961959838867188, 0.7981772422790527, 0.8095363974571228, 0.8112534880638123, 0.8165367841720581, 0.8203672170639038, 0.8239334225654602, 0.8277638554573059, 0.8330471515655518, 0.8333113193511963, 0.8387266993522644, 0.8364813327789307, 0.845859169960022, 0.844010055065155, 0.8477083444595337, 0.8514066934585571, 0.8529917001724243, 0.8555012345314026, 0.8601241707801819, 0.8642187118530273, 0.8636903762817383, 0.8642187118530273, 0.8669924736022949, 0.8610487580299377, 0.8706908226013184, 0.8702945709228516, 0.8729361891746521, 0.8726720213890076, 0.8772949576377869, 0.8770307898521423, 0.8803328275680542, 0.8795403242111206, 0.8864086866378784, 0.8784837126731873, 0.8878615498542786, 0.8868049383163452, 0.8849557638168335, 0.8905032277107239, 0.8899748921394348, 0.8897107243537903, 0.8956544995307922, 0.8967111110687256], "val_loss": [2.037949800491333, 1.514994502067566, 1.0481517314910889, 0.8487153053283691, 0.765953540802002, 0.7154189348220825, 0.6686703562736511, 0.6359654664993286, 0.6144115924835205, 0.5927062630653381, 0.5734694600105286, 0.5565353035926819, 0.5457736849784851, 0.5296063423156738, 0.5276080965995789, 0.5090028643608093, 0.5006523728370667, 0.4962358772754669, 0.4844488203525543, 0.4783160388469696, 0.4713374078273773, 0.4774247109889984, 0.4658251106739044, 0.4532802700996399, 0.4473806917667389, 0.4494014382362366, 0.4478118419647217, 0.4360648989677429, 0.43263036012649536, 0.42992138862609863, 0.423357754945755, 0.4234665036201477, 0.420380562543869, 0.4138319194316864, 0.41737279295921326, 0.4144149720668793, 0.4106690287590027, 0.40554365515708923, 0.40695714950561523, 0.4047294855117798, 0.4013552665710449, 0.39978763461112976, 0.3963662087917328, 0.4029240012168884, 0.40025585889816284, 0.39319491386413574, 0.3905469477176666, 0.39076611399650574, 0.3955753445625305, 0.3851814270019531, 0.3890650272369385, 0.39147624373435974, 0.3824779987335205, 0.3850271701812744, 0.3836997151374817], "val_accuracy": [0.5223333239555359, 0.6539999842643738, 0.6893333196640015, 0.7086666822433472, 0.7360000014305115, 0.7419999837875366, 0.7563333511352539, 0.7616666555404663, 0.7706666588783264, 0.781000018119812, 0.7923333048820496, 0.7983333468437195, 0.8003333210945129, 0.812666654586792, 0.8076666593551636, 0.8163333535194397, 0.8216666579246521, 0.8193333148956299, 0.8296666741371155, 0.8306666612625122, 0.8356666564941406, 0.8256666660308838, 0.8333333134651184, 0.8433333039283752, 0.8460000157356262, 0.843666672706604, 0.8399999737739563, 0.8476666808128357, 0.843666672706604, 0.8460000157356262, 0.8513333201408386, 0.8513333201408386, 0.8500000238418579, 0.8546666502952576, 0.8486666679382324, 0.8506666421890259, 0.8553333282470703, 0.856333315372467, 0.8560000061988831, 0.8550000190734863, 0.859333336353302, 0.859333336353302, 0.8583333492279053, 0.8573333621025085, 0.8586666584014893, 0.8619999885559082, 0.862333357334137, 0.8633333444595337, 0.859333336353302, 0.8690000176429749, 0.8616666793823242, 0.859333336353302, 0.8669999837875366, 0.8653333187103271, 0.8629999756813049]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 3, 4, 1, 4, 2, 6], [4, 0, 0, 3, 0, 0, 3, 1, 2, 4], [16, 99, 15, 50, 61, 1]], "fitness": -0.7877143025398254, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 12, 6, 6, 4], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(sigma, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.1212761402130127, 1.2991560697555542, 0.957968533039093, 0.857888400554657, 0.8233076333999634, 0.7949577569961548, 0.7708776593208313, 0.7684483528137207, 0.7520968317985535, 0.741208553314209, 0.7308080792427063, 0.724674642086029, 0.7282556295394897, 0.7151519656181335, 0.7208141088485718, 0.7077761292457581, 0.7046077847480774, 0.7064417004585266, 0.7099387645721436, 0.696599006652832, 0.6900355815887451, 0.6960510611534119, 0.6903595328330994, 0.6928207278251648, 0.6838147640228271, 0.6893380880355835, 0.6875815391540527, 0.6787706613540649, 0.6834105849266052, 0.676589846611023, 0.6807968020439148, 0.6733955144882202, 0.6690391302108765, 0.6735498309135437, 0.6792637705802917, 0.6653096675872803, 0.6724346280097961, 0.6643552780151367], "accuracy": [0.26601505279541016, 0.5528992414474487, 0.6551313996315002, 0.687887966632843, 0.6955488324165344, 0.7111346125602722, 0.7193237543106079, 0.7182670831680298, 0.7191916704177856, 0.7215691208839417, 0.7273808121681213, 0.733060359954834, 0.7325320243835449, 0.735569953918457, 0.7310791015625, 0.7354378700256348, 0.7351737022399902, 0.7412495017051697, 0.7317395210266113, 0.7442874312400818, 0.7456082701683044, 0.7400607466697693, 0.7408532500267029, 0.7429665923118591, 0.7457403540611267, 0.7442874312400818, 0.7445515990257263, 0.746268630027771, 0.7436270117759705, 0.7457403540611267, 0.7479857206344604, 0.7503632307052612, 0.7466648817062378, 0.7526086568832397, 0.7465327978134155, 0.7526086568832397, 0.7503632307052612, 0.752740740776062], "val_loss": [1.3095966577529907, 0.8877068161964417, 0.73749178647995, 0.697049081325531, 0.6730136275291443, 0.6582043170928955, 0.6433265209197998, 0.633386492729187, 0.6301611065864563, 0.6199957728385925, 0.6135880947113037, 0.6118170619010925, 0.6076892614364624, 0.6046422719955444, 0.6021267175674438, 0.6003710031509399, 0.5978171229362488, 0.5950295329093933, 0.5950542092323303, 0.5916104316711426, 0.5890534520149231, 0.5887637734413147, 0.5861496329307556, 0.5847669243812561, 0.5824138522148132, 0.5825905203819275, 0.5804381966590881, 0.5796523094177246, 0.5784007906913757, 0.5776796340942383, 0.5768241882324219, 0.574981153011322, 0.5732131004333496, 0.5726980566978455, 0.572258710861206, 0.5718976855278015, 0.5703608393669128, 0.5688283443450928], "val_accuracy": [0.5886666774749756, 0.6940000057220459, 0.7350000143051147, 0.7459999918937683, 0.7580000162124634, 0.7593333125114441, 0.7583333253860474, 0.7716666460037231, 0.7726666927337646, 0.7739999890327454, 0.7736666798591614, 0.7766666412353516, 0.777999997138977, 0.7806666493415833, 0.7833333611488342, 0.7803333401679993, 0.7829999923706055, 0.7839999794960022, 0.7883333563804626, 0.7876666784286499, 0.7839999794960022, 0.7870000004768372, 0.7879999876022339, 0.7893333435058594, 0.7879999876022339, 0.7913333177566528, 0.7893333435058594, 0.7900000214576721, 0.7903333306312561, 0.7906666398048401, 0.7940000295639038, 0.7926666736602783, 0.7953333258628845, 0.7929999828338623, 0.7943333387374878, 0.793666660785675, 0.7926666736602783, 0.7953333258628845]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 4, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 4, 5], [0, 2, 0, 3], [85, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [6, 3, 3, 6, 8, 2, 4, 2, 4, 2, 8], [0, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 9, 5, 4, 2, 2, 1, 1, 1, 16, 8, 8, 3], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), beta), tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.sqrt(grad))), tf.math.add(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, alpha)))", "other_info": {"loss": [2.3043203353881836, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025853633880615, 2.3025853633880615], "accuracy": [0.0940430611371994, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025872707366943, 2.3025872707366943, 2.3025872707366943, 2.3025872707366943, 2.3025872707366943, 2.3025872707366943], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 1], [39, 39], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 1, 1], [3, 2, 0, 3, 5], [50, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 0, 3, 0, 8, 1, 4, 1, 4, 2, 2, 5], [3, 0, 0, 3, 0, 0, 3, 1, 1, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 11, 6, 5, 1, 2, 1, 1, 1, 21, 12, 9, 4], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.subtract(grad, beta)), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(sigma, tf.math.negative(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)))), sigma))))), tf.math.add(tf.math.square(alpha), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09509972482919693, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0], [0, 2, 0, 2, 3, 1, 1, 8, 6, 8, 0, 7, 2, 6, 2, 8, 2, 3, 0, 3, 4, 5, 2, 9, 2, 1, 6, 5, 0, 8, 6, 5, 9, 9], [0, 1, 0, 2, 2, 2, 2, 3, 3, 3, 1, 3, 2, 3, 3, 3, 1], [39, 97, 15, 58, 97], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 6, 3, 0, 3, 5], [0, 2, 0, 2], [16, 16], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [6, 3, 3, 6, 2, 1, 4, 1, 4, 2, 8, 5], [0, 4, 0, 3, 0, 0, 3, 1, 2, 0, 6], [16, 99, 96, 99, 28, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 51, 34, 17, 5, 10, 6, 4, 2, 2, 1, 1, 1, 23, 12, 11, 5], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(grad, grad))), tf.math.sqrt(tf.math.divide_no_nan(tf.math.sqrt(tf.math.negative(grad)), tf.math.add(grad, tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.negative(grad), tf.math.multiply(tf.math.pow(tf.math.square(tf.math.add(grad, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), grad), alpha)), grad)), grad), grad), tf.math.add(tf.math.subtract(tf.math.divide_no_nan(grad, tf.math.square(tf.math.negative(tf.math.sqrt(tf.math.divide_no_nan(tf.math.square(grad), alpha))))), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(sigma, tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), alpha)), tf.math.add(tf.math.sqrt(beta), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.square(grad))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}]