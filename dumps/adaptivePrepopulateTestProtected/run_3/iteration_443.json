[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8811428546905518, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2237746715545654, 1.8723686933517456, 1.3995952606201172, 1.0951578617095947, 0.9308109879493713, 0.8378576636314392, 0.7867980003356934, 0.7403825521469116, 0.7074968218803406, 0.6667766571044922, 0.6467143297195435, 0.6252685785293579, 0.6010545492172241, 0.592832088470459, 0.5694352388381958, 0.5546401739120483, 0.5457968711853027, 0.5263527035713196, 0.5090768933296204, 0.5048046112060547, 0.4915485680103302, 0.4950409531593323, 0.48390650749206543, 0.4653860628604889, 0.45890092849731445, 0.4539474546909332, 0.45054811239242554, 0.4434168338775635, 0.4299618601799011, 0.42732325196266174, 0.42083144187927246, 0.41875892877578735, 0.4139094650745392, 0.40237316489219666, 0.3879244327545166, 0.38828617334365845, 0.3872472941875458, 0.38174712657928467, 0.37753409147262573, 0.37368708848953247, 0.3667537569999695, 0.3609304130077362, 0.3514280617237091, 0.3454590141773224, 0.34209492802619934, 0.3294583857059479, 0.32658490538597107, 0.3237888813018799, 0.32169947028160095, 0.32040613889694214, 0.31856244802474976, 0.3111935555934906, 0.3040423095226288, 0.3039085268974304, 0.29984933137893677, 0.29860955476760864, 0.28763389587402344, 0.28644928336143494, 0.2838956117630005, 0.28346431255340576, 0.28013065457344055, 0.2724190354347229, 0.27310502529144287], "accuracy": [0.27420419454574585, 0.48051777482032776, 0.5654470920562744, 0.6198652982711792, 0.6709813475608826, 0.7000396251678467, 0.7174745798110962, 0.7283053994178772, 0.7400607466697693, 0.7589486241340637, 0.7675340175628662, 0.774798572063446, 0.7807422876358032, 0.7844406366348267, 0.793422281742096, 0.7984414100646973, 0.8030643463134766, 0.8128384351730347, 0.8185180425643921, 0.8169330358505249, 0.8182538747787476, 0.8228767514228821, 0.8251221776008606, 0.8399154543876648, 0.8416325449943542, 0.8403117060661316, 0.837537944316864, 0.8465195894241333, 0.8466516733169556, 0.8490291833877563, 0.8502179384231567, 0.8535200357437134, 0.8474441766738892, 0.858671247959137, 0.8619733452796936, 0.8652753829956055, 0.8643507957458496, 0.8625016212463379, 0.8665962219238281, 0.8665962219238281, 0.8704266548156738, 0.8721436858177185, 0.8747853636741638, 0.8749174475669861, 0.8805969953536987, 0.8824461698532104, 0.8840311765670776, 0.8821820020675659, 0.8858803510665894, 0.8850878477096558, 0.8824461698532104, 0.8881257176399231, 0.8928807377815247, 0.8902390599250793, 0.8939374089241028, 0.89552241563797, 0.8973715305328369, 0.8942015767097473, 0.89988112449646, 0.8997490406036377, 0.8969752788543701, 0.9014661312103271, 0.9029190540313721], "val_loss": [2.037389039993286, 1.511842966079712, 1.0359350442886353, 0.8279245495796204, 0.7450146675109863, 0.6904571652412415, 0.6491749286651611, 0.6089303493499756, 0.584378719329834, 0.558230996131897, 0.5482743382453918, 0.526901125907898, 0.5176275968551636, 0.49789905548095703, 0.48785078525543213, 0.4802698493003845, 0.4741758704185486, 0.4558241367340088, 0.446842759847641, 0.4397415220737457, 0.43689489364624023, 0.43105411529541016, 0.42206501960754395, 0.41691854596138, 0.41364946961402893, 0.4036501348018646, 0.4026815593242645, 0.40334782004356384, 0.3973897397518158, 0.3922448456287384, 0.386177659034729, 0.3828100562095642, 0.3804466128349304, 0.3790411651134491, 0.37225663661956787, 0.3669360876083374, 0.36680835485458374, 0.3673231899738312, 0.3597688376903534, 0.35926786065101624, 0.36098331212997437, 0.35272863507270813, 0.3481261432170868, 0.3572690486907959, 0.34953010082244873, 0.34897640347480774, 0.3506835401058197, 0.34860289096832275, 0.34379568696022034, 0.3427906930446625, 0.34296849370002747, 0.3384943902492523, 0.33897867798805237, 0.33991867303848267, 0.338674932718277, 0.3346634805202484, 0.3385751247406006, 0.33232465386390686, 0.332682728767395, 0.3382399082183838, 0.3326888978481293, 0.3314237594604492, 0.3316805958747864], "val_accuracy": [0.5120000243186951, 0.6606666445732117, 0.6880000233650208, 0.7093333601951599, 0.7293333411216736, 0.7519999742507935, 0.762333333492279, 0.7699999809265137, 0.7879999876022339, 0.7946666479110718, 0.7926666736602783, 0.8096666932106018, 0.8113333582878113, 0.8176666498184204, 0.8233333230018616, 0.8213333487510681, 0.824999988079071, 0.8360000252723694, 0.8379999995231628, 0.8379999995231628, 0.8423333168029785, 0.8443333506584167, 0.8483333587646484, 0.8460000157356262, 0.8496666550636292, 0.8569999933242798, 0.8519999980926514, 0.8516666889190674, 0.8583333492279053, 0.8550000190734863, 0.856333315372467, 0.8610000014305115, 0.859000027179718, 0.8640000224113464, 0.8629999756813049, 0.8646666407585144, 0.8676666617393494, 0.8656666874885559, 0.8673333525657654, 0.8650000095367432, 0.8700000047683716, 0.8713333606719971, 0.8730000257492065, 0.8696666955947876, 0.8726666569709778, 0.8733333349227905, 0.8726666569709778, 0.8736666440963745, 0.8726666569709778, 0.8730000257492065, 0.8740000128746033, 0.8790000081062317, 0.878333330154419, 0.878333330154419, 0.8776666522026062, 0.878000020980835, 0.8793333172798157, 0.8846666812896729, 0.8759999871253967, 0.8769999742507935, 0.8823333382606506, 0.878333330154419, 0.8826666474342346]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8637142777442932, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221342086791992, 1.8597444295883179, 1.3876045942306519, 1.082983374595642, 0.9304025173187256, 0.825517475605011, 0.7626177072525024, 0.7065687775611877, 0.6766857504844666, 0.6456917524337769, 0.6201016902923584, 0.6141204833984375, 0.581648588180542, 0.562282919883728, 0.5445252656936646, 0.539683997631073, 0.5216512680053711, 0.5139517188072205, 0.49913641810417175, 0.48583635687828064, 0.47894012928009033, 0.46984580159187317, 0.45442476868629456, 0.44752153754234314, 0.44293591380119324, 0.43568649888038635, 0.42922526597976685, 0.41301921010017395, 0.41766566038131714, 0.40724384784698486, 0.3958074748516083, 0.39504945278167725, 0.3925626575946808, 0.37810108065605164, 0.3757626712322235, 0.36705684661865234, 0.36301887035369873, 0.3579474985599518, 0.3504851460456848, 0.34700632095336914, 0.3527113199234009, 0.34971171617507935, 0.3352951407432556, 0.32790496945381165, 0.32723820209503174, 0.32291126251220703, 0.31427866220474243, 0.31145453453063965, 0.3080083429813385, 0.3099258840084076, 0.30161550641059875, 0.2943566143512726, 0.29281455278396606, 0.2856028378009796, 0.2847384214401245, 0.2839997708797455, 0.27261456847190857, 0.26475390791893005, 0.27100223302841187, 0.26270508766174316, 0.25185638666152954, 0.25363174080848694, 0.24843043088912964, 0.25168174505233765, 0.24730180203914642, 0.2475896179676056, 0.2418321669101715, 0.23284922540187836, 0.22420264780521393, 0.23119914531707764, 0.22144116461277008, 0.2234533578157425, 0.2158450335264206, 0.20942141115665436, 0.2126583456993103, 0.20781826972961426, 0.2043493092060089, 0.19797727465629578, 0.19866685569286346, 0.19964507222175598, 0.19806766510009766, 0.19144727289676666, 0.18558728694915771, 0.18496273458003998, 0.18092910945415497, 0.18171730637550354], "accuracy": [0.2739400267601013, 0.49293357133865356, 0.5723153948783875, 0.6234315037727356, 0.6705851554870605, 0.7041342258453369, 0.7265883088111877, 0.7446836829185486, 0.7580240368843079, 0.7638356685638428, 0.7741381525993347, 0.7774402499198914, 0.7902522683143616, 0.7918372750282288, 0.8034605979919434, 0.8063663840293884, 0.8140271902084351, 0.8131026029586792, 0.8175934553146362, 0.828292191028595, 0.8302733898162842, 0.8314621448516846, 0.8355567455291748, 0.842028796672821, 0.832650899887085, 0.8422929644584656, 0.8449346423149109, 0.8553691506385803, 0.852859616279602, 0.8527275323867798, 0.8603883385658264, 0.8595958352088928, 0.858671247959137, 0.8671245574951172, 0.8646149635314941, 0.8664641380310059, 0.8713511824607849, 0.8734645247459412, 0.8747853636741638, 0.8798044919967651, 0.8747853636741638, 0.8721436858177185, 0.8784837126731873, 0.8823140859603882, 0.8828424215316772, 0.8844274282455444, 0.8881257176399231, 0.8906353116035461, 0.8906353116035461, 0.8906353116035461, 0.8938053250312805, 0.8918240666389465, 0.8926165699958801, 0.8972394466400146, 0.8960506916046143, 0.8952582478523254, 0.9008057117462158, 0.9062210917472839, 0.901862382888794, 0.9076740145683289, 0.9088627696037292, 0.9093911051750183, 0.9108440279960632, 0.908730685710907, 0.9103156924247742, 0.908730685710907, 0.9119006991386414, 0.915070652961731, 0.9192973375320435, 0.9159952402114868, 0.9220710396766663, 0.9162594079971313, 0.9256373047828674, 0.9256373047828674, 0.9212785363197327, 0.9253731369972229, 0.9272223114967346, 0.9305243492126465, 0.9272223114967346, 0.9277506470680237, 0.927882730960846, 0.9285431504249573, 0.9340906143188477, 0.9351472854614258, 0.9354114532470703, 0.9354114532470703], "val_loss": [2.0382211208343506, 1.50938081741333, 1.0398898124694824, 0.834318220615387, 0.7400403618812561, 0.6829283833503723, 0.6378394961357117, 0.6094467043876648, 0.5775953531265259, 0.5584397912025452, 0.5517189502716064, 0.5302839875221252, 0.5119109153747559, 0.4977695345878601, 0.4897371828556061, 0.48072633147239685, 0.4711240231990814, 0.4604851007461548, 0.45164620876312256, 0.4416534900665283, 0.43983590602874756, 0.4310305714607239, 0.42333999276161194, 0.41927647590637207, 0.4176521897315979, 0.406386137008667, 0.4025789797306061, 0.3994397521018982, 0.39553752541542053, 0.39340776205062866, 0.3911186456680298, 0.38884595036506653, 0.3800598680973053, 0.37890276312828064, 0.37549662590026855, 0.371511846780777, 0.37036657333374023, 0.367310494184494, 0.36165502667427063, 0.36684098839759827, 0.36974865198135376, 0.35836905241012573, 0.3547511398792267, 0.3515969514846802, 0.3524264991283417, 0.34878626465797424, 0.34754678606987, 0.3456311821937561, 0.34360814094543457, 0.34234386682510376, 0.3403864800930023, 0.34154874086380005, 0.3377681374549866, 0.33347082138061523, 0.3384303152561188, 0.3334142565727234, 0.33281412720680237, 0.3313080370426178, 0.3322555720806122, 0.3298056125640869, 0.3297234773635864, 0.32333076000213623, 0.3233729302883148, 0.3237101137638092, 0.3244684934616089, 0.32578063011169434, 0.32454973459243774, 0.3249335289001465, 0.32763683795928955, 0.3189418315887451, 0.3173573315143585, 0.32236504554748535, 0.31923818588256836, 0.31961941719055176, 0.3175021708011627, 0.32016146183013916, 0.32615000009536743, 0.3197896182537079, 0.3202778398990631, 0.32178446650505066, 0.31985920667648315, 0.3177831768989563, 0.31971660256385803, 0.3189716339111328, 0.3179243206977844, 0.3184472322463989], "val_accuracy": [0.5149999856948853, 0.6473333239555359, 0.6653333306312561, 0.6993333101272583, 0.7266666889190674, 0.7433333396911621, 0.7583333253860474, 0.7703333497047424, 0.7793333530426025, 0.7829999923706055, 0.7823333144187927, 0.7896666526794434, 0.8009999990463257, 0.8086666464805603, 0.8053333163261414, 0.8109999895095825, 0.8206666707992554, 0.8256666660308838, 0.8223333358764648, 0.8309999704360962, 0.8316666483879089, 0.8393333554267883, 0.8416666388511658, 0.843999981880188, 0.8429999947547913, 0.8486666679382324, 0.8526666760444641, 0.8496666550636292, 0.8510000109672546, 0.8550000190734863, 0.8539999723434448, 0.8619999885559082, 0.859000027179718, 0.8586666584014893, 0.8629999756813049, 0.8606666922569275, 0.8579999804496765, 0.8679999709129333, 0.8690000176429749, 0.862333357334137, 0.8610000014305115, 0.8683333396911621, 0.8713333606719971, 0.871999979019165, 0.8679999709129333, 0.8713333606719971, 0.8709999918937683, 0.8736666440963745, 0.8796666860580444, 0.8776666522026062, 0.875333309173584, 0.8756666779518127, 0.8786666393280029, 0.8799999952316284, 0.874666690826416, 0.8799999952316284, 0.8816666603088379, 0.8809999823570251, 0.8786666393280029, 0.8830000162124634, 0.8793333172798157, 0.8853333592414856, 0.8820000290870667, 0.8809999823570251, 0.8799999952316284, 0.8856666684150696, 0.8836666941642761, 0.8820000290870667, 0.8826666474342346, 0.8863333463668823, 0.887333333492279, 0.8859999775886536, 0.8870000243186951, 0.8880000114440918, 0.8883333206176758, 0.8863333463668823, 0.8840000033378601, 0.8899999856948853, 0.8859999775886536, 0.8856666684150696, 0.8920000195503235, 0.890999972820282, 0.8880000114440918, 0.887666642665863, 0.890666663646698, 0.8916666507720947]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 3, 0, 6, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 2, 4, 1, 3, 2, 8], [4, 0, 0, 3, 0, 0, 4, 1, 2, 0], [16, 93, 96, 55, 61, 53]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 1, 0, 1, 1, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), grad)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 0], [0, 9, 3, 0, 3], [0, 1, 0, 2], [70, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 3, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 3, 6, 4, 2, 8], [0, 0, 0, 4, 0, 0, 3, 1, 2, 0], [68, 99, 23, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 0, 1, 10, 6, 4, 2, 2, 1, 1, 1, 18, 9, 9, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), grad))), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 1], [6, 2, 0, 0, 3], [1, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 6, 5, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 9, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 4, 1, 2, 0], [16, 99, 63, 99, 61, 97]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 9, 5, 4, 2, 2, 1, 1, 1, 16, 9, 7, 6], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.negative(alpha), alpha), tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.constant(1.0, shape=shape, dtype=tf.float32))), sigma), tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), grad)))", "other_info": {"loss": [4115.42431640625, 527590.125, 31414964.0, 19880462.0, 1567573760.0, 3649855488.0, 11713435648.0], "accuracy": [0.09826971590518951, 0.10210011899471283, 0.09285431355237961, 0.09377889335155487, 0.09879804402589798, 0.0952318087220192, 0.09615638852119446], "val_loss": [47748.5234375, 41635516.0, 7609316.0, 13661781.0, 143368064.0, 7807432704.0, 11749179392.0], "val_accuracy": [0.10100000351667404, 0.10133333504199982, 0.057999998331069946, 0.07800000160932541, 0.1003333330154419, 0.10100000351667404, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 2, 2, 3], [16, 86], [0, 0], [0, 9], [3], [71], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 1, 3, 0, 0, 3, 1, 1, 0], [16, 99, 96, 99, 18, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 9, 5, 4, 1, 2, 2, 0, 1, 21, 11, 10, 5], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(alpha, sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(alpha), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [419357261824.0, 17070880194560.0, 111640116723712.0, 346739924008960.0, 728783405449216.0, 1155991655677952.0], "accuracy": [0.09377889335155487, 0.1018359512090683, 0.10051512718200684, 0.10289261490106583, 0.09919429570436478, 0.09800554811954498], "val_loss": [2790060982272.0, 40454938689536.0, 170302633934848.0, 415825479598080.0, 737721433718784.0, 1068625779752960.0], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}]