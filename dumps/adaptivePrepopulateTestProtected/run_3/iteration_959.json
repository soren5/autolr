[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8862857222557068, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222418785095215, 1.8632627725601196, 1.3950724601745605, 1.0979150533676147, 0.9474178552627563, 0.8543937802314758, 0.7783248424530029, 0.7376496195793152, 0.7006842494010925, 0.6746688485145569, 0.647553563117981, 0.6295329928398132, 0.6112891435623169, 0.58865886926651, 0.5667527914047241, 0.5575993657112122, 0.5467248558998108, 0.5289703011512756, 0.5205997824668884, 0.5110849142074585, 0.5064045786857605, 0.4867391884326935, 0.4731372892856598, 0.47443822026252747, 0.46410614252090454, 0.4545186161994934, 0.445819616317749, 0.4367676079273224, 0.4321127235889435, 0.4275900721549988, 0.4177286922931671, 0.40700381994247437, 0.40491974353790283, 0.3923063576221466, 0.38597339391708374, 0.37638187408447266, 0.3749813437461853, 0.3708414137363434, 0.369646281003952, 0.3635149896144867, 0.3594855070114136, 0.3503628671169281, 0.3338625133037567, 0.3396199643611908, 0.33679017424583435, 0.3303111493587494, 0.3275522291660309, 0.3153315782546997, 0.3093845844268799, 0.31660354137420654, 0.313541054725647, 0.3128948211669922, 0.2977619469165802, 0.30230653285980225, 0.298944890499115, 0.28947505354881287, 0.2822195291519165, 0.2778712213039398, 0.2668195366859436, 0.26853811740875244, 0.26283398270606995, 0.2662760019302368, 0.2576100528240204, 0.25102800130844116, 0.2539205849170685, 0.25087955594062805, 0.24508193135261536], "accuracy": [0.280940443277359, 0.48685774207115173, 0.5665037631988525, 0.616299033164978, 0.6625280380249023, 0.6930392384529114, 0.7169462442398071, 0.7320036888122559, 0.7375511527061462, 0.7491744756698608, 0.7672698497772217, 0.7670056819915771, 0.7745344042778015, 0.7876105904579163, 0.7906485199928284, 0.7994980812072754, 0.802800178527832, 0.8068947196006775, 0.8117818236351013, 0.8153480291366577, 0.8181217908859253, 0.829216718673706, 0.8300092220306396, 0.8238013386726379, 0.8325188159942627, 0.8385946154594421, 0.8372738361358643, 0.842028796672821, 0.8451988101005554, 0.8481045961380005, 0.8515387773513794, 0.8549728989601135, 0.8516708612442017, 0.8603883385658264, 0.8598600029945374, 0.8667283058166504, 0.8636903762817383, 0.8636903762817383, 0.8677849769592285, 0.8704266548156738, 0.8758420348167419, 0.8739928603172302, 0.8790120482444763, 0.8768987059593201, 0.8751816153526306, 0.8794082403182983, 0.8813894987106323, 0.8860124349594116, 0.8874653577804565, 0.8856161832809448, 0.8838990926742554, 0.8877294659614563, 0.8918240666389465, 0.8918240666389465, 0.8922203183174133, 0.8953903317451477, 0.89552241563797, 0.9002773761749268, 0.9049002528190613, 0.9034473896026611, 0.9035794734954834, 0.9038436412811279, 0.9085986018180847, 0.9095231890678406, 0.9095231890678406, 0.909259021282196, 0.910711944103241], "val_loss": [2.0414316654205322, 1.5168657302856445, 1.0494927167892456, 0.8396123051643372, 0.7532041668891907, 0.6975494027137756, 0.6532282829284668, 0.6188269853591919, 0.5909113883972168, 0.5747429728507996, 0.5562715530395508, 0.5392115712165833, 0.5226473808288574, 0.5080817937850952, 0.49551260471343994, 0.4949219524860382, 0.48097461462020874, 0.46894019842147827, 0.4645398259162903, 0.4554585814476013, 0.44845467805862427, 0.44272810220718384, 0.4365209937095642, 0.4303407371044159, 0.42757970094680786, 0.42137086391448975, 0.4158954322338104, 0.4094981253147125, 0.40614867210388184, 0.40746310353279114, 0.39686036109924316, 0.39440515637397766, 0.39069101214408875, 0.3898474872112274, 0.3889416456222534, 0.3833497166633606, 0.387736976146698, 0.3792175352573395, 0.3778442442417145, 0.37528878450393677, 0.3729557991027832, 0.37016138434410095, 0.36690768599510193, 0.36455467343330383, 0.36386409401893616, 0.3628668487071991, 0.365796834230423, 0.36076274514198303, 0.3599783480167389, 0.35867130756378174, 0.35705167055130005, 0.35411083698272705, 0.3552299737930298, 0.3651564121246338, 0.36276260018348694, 0.34837988018989563, 0.34821584820747375, 0.3528410792350769, 0.3496720790863037, 0.3506317138671875, 0.34951722621917725, 0.3443804085254669, 0.345913290977478, 0.3461855351924896, 0.3431210517883301, 0.348863810300827, 0.3426092565059662], "val_accuracy": [0.5373333096504211, 0.6570000052452087, 0.6759999990463257, 0.7110000252723694, 0.7286666631698608, 0.7419999837875366, 0.7590000033378601, 0.7616666555404663, 0.7836666703224182, 0.7903333306312561, 0.7886666655540466, 0.8006666898727417, 0.809333324432373, 0.8183333277702332, 0.8146666884422302, 0.8140000104904175, 0.8233333230018616, 0.8289999961853027, 0.8326666951179504, 0.8363333344459534, 0.8389999866485596, 0.8366666436195374, 0.8363333344459534, 0.8489999771118164, 0.847000002861023, 0.8519999980926514, 0.8533333539962769, 0.8560000061988831, 0.8573333621025085, 0.8539999723434448, 0.8619999885559082, 0.862666666507721, 0.8656666874885559, 0.8629999756813049, 0.8646666407585144, 0.8636666536331177, 0.8603333234786987, 0.8659999966621399, 0.8673333525657654, 0.8673333525657654, 0.8713333606719971, 0.8703333139419556, 0.8713333606719971, 0.871666669845581, 0.8736666440963745, 0.8730000257492065, 0.871999979019165, 0.874666690826416, 0.875333309173584, 0.874666690826416, 0.875, 0.8786666393280029, 0.8776666522026062, 0.8743333220481873, 0.8723333477973938, 0.8833333253860474, 0.8826666474342346, 0.8790000081062317, 0.8836666941642761, 0.878333330154419, 0.8820000290870667, 0.887666642665863, 0.8820000290870667, 0.8803333044052124, 0.8830000162124634, 0.8846666812896729, 0.8856666684150696]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8734285831451416, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221026659011841, 1.8611598014831543, 1.3912967443466187, 1.0932152271270752, 0.9518483877182007, 0.8400098085403442, 0.7826700210571289, 0.7262464761734009, 0.6937318444252014, 0.6612901091575623, 0.6377078294754028, 0.610015332698822, 0.5856189727783203, 0.5761772990226746, 0.551362156867981, 0.5364919304847717, 0.53421550989151, 0.5317851305007935, 0.5057053565979004, 0.4977753460407257, 0.4925241470336914, 0.4770430326461792, 0.4652172923088074, 0.4566745162010193, 0.4563708007335663, 0.4402860999107361, 0.4342247545719147, 0.43148234486579895, 0.42342934012413025, 0.4174189269542694, 0.4099252223968506, 0.4009956419467926, 0.39952149987220764, 0.3944021463394165, 0.3910072147846222, 0.38572612404823303, 0.3738163411617279, 0.375739187002182, 0.36599427461624146, 0.3631427586078644, 0.3650503158569336, 0.35248807072639465, 0.3466794490814209, 0.3386761248111725, 0.3333459496498108, 0.3310506045818329, 0.32736295461654663, 0.32735177874565125, 0.32617437839508057, 0.3187149465084076, 0.3139284551143646, 0.30705785751342773, 0.30443519353866577, 0.30294665694236755, 0.29348787665367126, 0.29392752051353455, 0.28460630774497986, 0.28582140803337097, 0.2777429223060608, 0.27009814977645874, 0.27284637093544006, 0.262080579996109, 0.25982263684272766, 0.26514747738838196, 0.2546786665916443, 0.24947409331798553, 0.24600408971309662, 0.24190975725650787, 0.237128347158432, 0.24222666025161743, 0.2295827865600586, 0.22926877439022064, 0.2270752191543579, 0.2196841537952423, 0.22329017519950867, 0.21926181018352509, 0.21148672699928284, 0.2068164348602295, 0.2117224782705307, 0.2029065489768982, 0.20378850400447845, 0.20125024020671844, 0.19776786863803864], "accuracy": [0.2806762754917145, 0.48368775844573975, 0.565711259841919, 0.6210539937019348, 0.6635847091674805, 0.6971337795257568, 0.7148329019546509, 0.7362303733825684, 0.7450799345970154, 0.7556465268135071, 0.765949010848999, 0.7740060687065125, 0.7853652238845825, 0.7864218950271606, 0.7965922355651855, 0.8037247657775879, 0.8042530417442322, 0.8075551390647888, 0.8191784620285034, 0.8248580098152161, 0.8216879963874817, 0.8272355198860168, 0.8399154543876648, 0.8359529972076416, 0.8378021121025085, 0.8391229510307312, 0.8433496356010437, 0.8470479249954224, 0.850350022315979, 0.8515387773513794, 0.8519350290298462, 0.8614450097084045, 0.8576145768165588, 0.859199583530426, 0.8631620407104492, 0.8638224601745605, 0.8688416481018066, 0.86553955078125, 0.8672566413879395, 0.870030403137207, 0.8714832663536072, 0.8754457831382751, 0.8762382864952087, 0.8805969953536987, 0.8798044919967651, 0.8833707571029663, 0.886672854423523, 0.8817857503890991, 0.8817857503890991, 0.8838990926742554, 0.8844274282455444, 0.8902390599250793, 0.8923524022102356, 0.8951261639595032, 0.894069492816925, 0.893541157245636, 0.8990886211395264, 0.8994848728179932, 0.8988244533538818, 0.9056927561759949, 0.8981640338897705, 0.9070135951042175, 0.9064852595329285, 0.9050323367118835, 0.9085986018180847, 0.9126931428909302, 0.9089948534965515, 0.9126931428909302, 0.9178444147109985, 0.9126931428909302, 0.9198256731033325, 0.9154669046401978, 0.9207502603530884, 0.9182406663894653, 0.9179764986038208, 0.9216747879981995, 0.9247127175331116, 0.930260181427002, 0.9232597947120667, 0.9280148148536682, 0.9261656403541565, 0.9270902276039124, 0.9293355941772461], "val_loss": [2.039867401123047, 1.5158227682113647, 1.058788776397705, 0.8600987792015076, 0.7753801941871643, 0.7121819853782654, 0.6741856336593628, 0.6385481953620911, 0.605674147605896, 0.5852859616279602, 0.5743296146392822, 0.5502427220344543, 0.5404863953590393, 0.525750994682312, 0.5164493918418884, 0.5123042464256287, 0.5027514696121216, 0.4936833381652832, 0.4843865633010864, 0.4806724786758423, 0.4750872850418091, 0.46731826663017273, 0.4627998471260071, 0.4589957296848297, 0.45440778136253357, 0.4506765604019165, 0.44321292638778687, 0.444222092628479, 0.43569743633270264, 0.43570148944854736, 0.42983439564704895, 0.42694172263145447, 0.4243003726005554, 0.42400363087654114, 0.41793742775917053, 0.41822800040245056, 0.4146580398082733, 0.41160669922828674, 0.4109119176864624, 0.40454554557800293, 0.4072703421115875, 0.3997463881969452, 0.3997928202152252, 0.3965141177177429, 0.39599746465682983, 0.39165550470352173, 0.39027538895606995, 0.3920568823814392, 0.3878635764122009, 0.391958624124527, 0.39239904284477234, 0.3838818669319153, 0.3841993510723114, 0.38190364837646484, 0.3837108910083771, 0.3806535601615906, 0.3760014772415161, 0.3817988336086273, 0.3730044662952423, 0.37767642736434937, 0.3758094012737274, 0.37355077266693115, 0.3788033127784729, 0.3670693337917328, 0.36942577362060547, 0.36697250604629517, 0.36763009428977966, 0.37376880645751953, 0.37404072284698486, 0.3698006272315979, 0.36848214268684387, 0.37628820538520813, 0.37233853340148926, 0.3682345449924469, 0.38178905844688416, 0.3679705262184143, 0.3688933551311493, 0.36576586961746216, 0.36256909370422363, 0.3760492205619812, 0.3708803355693817, 0.367847204208374, 0.3736947476863861], "val_accuracy": [0.5299999713897705, 0.6439999938011169, 0.6806666851043701, 0.7009999752044678, 0.7203333377838135, 0.7453333139419556, 0.7559999823570251, 0.7703333497047424, 0.7716666460037231, 0.7856666445732117, 0.7773333191871643, 0.7993333339691162, 0.7979999780654907, 0.8113333582878113, 0.8080000281333923, 0.8183333277702332, 0.815666675567627, 0.8180000185966492, 0.8276666402816772, 0.8270000219345093, 0.8236666917800903, 0.8316666483879089, 0.8403333425521851, 0.8346666693687439, 0.8376666903495789, 0.8410000205039978, 0.8416666388511658, 0.8410000205039978, 0.8426666855812073, 0.843666672706604, 0.846666693687439, 0.8460000157356262, 0.8493333458900452, 0.8493333458900452, 0.8500000238418579, 0.8483333587646484, 0.8503333330154419, 0.8526666760444641, 0.8523333072662354, 0.8556666374206543, 0.8513333201408386, 0.8583333492279053, 0.856333315372467, 0.8556666374206543, 0.8569999933242798, 0.8603333234786987, 0.8603333234786987, 0.8573333621025085, 0.859333336353302, 0.8610000014305115, 0.8603333234786987, 0.8633333444595337, 0.8610000014305115, 0.8633333444595337, 0.8663333058357239, 0.8650000095367432, 0.8676666617393494, 0.862333357334137, 0.8666666746139526, 0.8646666407585144, 0.8656666874885559, 0.8700000047683716, 0.8696666955947876, 0.8669999837875366, 0.8669999837875366, 0.8703333139419556, 0.8676666617393494, 0.8686666488647461, 0.8686666488647461, 0.8706666827201843, 0.8703333139419556, 0.8693333268165588, 0.8696666955947876, 0.8730000257492065, 0.8666666746139526, 0.871666669845581, 0.8736666440963745, 0.8759999871253967, 0.8740000128746033, 0.8723333477973938, 0.871666669845581, 0.871999979019165, 0.8709999918937683]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0], [0, 2, 3, 2, 3, 0, 4, 9], [0, 1, 0, 2, 3], [39, 39, 35], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0], [0, 2, 3, 0, 3, 5, 0, 0, 5, 9], [0, 2, 0, 0], [96, 16, 50], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 6, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 2, 2, 0], [74, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 8, 5, 3, 13, 10, 3, 3, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.negative(tf.math.pow(grad, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.negative(tf.math.negative(tf.math.square(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), sigma)))), beta)), tf.math.sqrt(beta)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303797960281372, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [4, 2, 3, 9, 5], [0, 1, 0, 2], [63, 39, 41], [1, 0, 0, 0, 1, 1, 0, 0, 0, 1], [0, 2, 3, 2, 3, 1], [0, 2, 0, 3], [28, 16], [0, 1], [0], [0], [80], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 3, 6, 9, 1, 4, 1, 4, 2, 8, 7, 4, 7, 6, 9], [2, 0, 3, 3, 0, 0, 3, 1, 2, 4, 7, 1], [16, 17, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 5, 3, 3, 1, 0, 1, 1, 2, 1, 1, 1, 28, 16, 12, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.square(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(beta, tf.math.subtract(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), sigma)), tf.math.pow(sigma, tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))))), sigma), tf.math.sqrt(tf.math.add(alpha, tf.math.pow(beta, grad)))), tf.math.add(tf.math.divide_no_nan(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), grad), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 8, 3, 9, 6], [1, 2, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 8, 1, 1, 2, 8, 3, 2, 2, 7], [0, 0, 4, 3, 0, 0, 3, 4, 2, 0, 0, 5, 7], [90, 26, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 4, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 28, 15, 13, 6], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))), sigma)), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.math.sqrt(tf.math.multiply(grad, beta)))))), tf.math.add(tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.add(grad, grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 8, 3, 0, 2], [2, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0], [1, 2, 3, 0, 1, 5, 9], [0, 2, 0, 3], [16, 16, 97], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 1, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.09285714477300644, "mapping_values": [1, 6, 4, 2, 0, 11, 7, 4, 3, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.negative(grad), alpha))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(alpha, tf.math.subtract(tf.math.pow(sigma, alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.3089680671691895, 2.3096253871917725, 2.310696840286255, 2.3097152709960938, 2.3094489574432373, 2.3101179599761963], "accuracy": [0.09285431355237961, 0.09351472556591034, 0.08968432247638702, 0.09338264167308807, 0.0936468094587326, 0.0940430611371994], "val_loss": [2.3087780475616455, 2.3087780475616455, 2.3087780475616455, 2.3087780475616455, 2.3087780475616455, 2.3087780475616455], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}]