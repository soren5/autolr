[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8822857141494751, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585750579834, 1.8655762672424316, 1.394430160522461, 1.0773245096206665, 0.9378393888473511, 0.8425824046134949, 0.7776632308959961, 0.736241340637207, 0.6971188187599182, 0.6732122302055359, 0.644855797290802, 0.6276965141296387, 0.6100340485572815, 0.5899673104286194, 0.5746485590934753, 0.5484329462051392, 0.5425268411636353, 0.5357900857925415, 0.5214410424232483, 0.5127171874046326, 0.4895091950893402, 0.4932740032672882, 0.48551443219184875, 0.47113916277885437, 0.46571049094200134, 0.450914591550827, 0.438728004693985, 0.4414178729057312, 0.4245515465736389, 0.4182806611061096, 0.4126766324043274, 0.41352686285972595, 0.4031256139278412, 0.40064555406570435, 0.3982388377189636, 0.38566267490386963, 0.38400527834892273, 0.3741128146648407, 0.36422181129455566, 0.36170411109924316, 0.35991787910461426, 0.35666367411613464, 0.3521813750267029, 0.34583958983421326, 0.34736087918281555, 0.34181836247444153, 0.33650368452072144, 0.33141741156578064, 0.3230496346950531, 0.3225416839122772, 0.315096914768219, 0.3059031665325165, 0.3058394491672516, 0.3017319440841675, 0.29568877816200256, 0.2933836281299591, 0.28774771094322205, 0.2856961190700531, 0.2802303731441498, 0.2779994010925293, 0.274711549282074, 0.2719985842704773, 0.2586328387260437, 0.2598455548286438, 0.2622571289539337, 0.25739434361457825, 0.2502012252807617, 0.2544722855091095, 0.24556587636470795, 0.24580754339694977, 0.23948103189468384, 0.23949603736400604, 0.23484042286872864, 0.22871272265911102, 0.2256491780281067, 0.22479403018951416, 0.21744707226753235, 0.21390178799629211, 0.21272219717502594], "accuracy": [0.2785629332065582, 0.49451854825019836, 0.559899628162384, 0.6215823292732239, 0.6654338836669922, 0.6950204968452454, 0.7181349992752075, 0.7322678565979004, 0.7441553473472595, 0.7483819723129272, 0.7627789974212646, 0.7717606425285339, 0.7728173136711121, 0.78113853931427, 0.7882710099220276, 0.7993659973144531, 0.7976489067077637, 0.8074230551719666, 0.8128384351730347, 0.8198388814926147, 0.8212917447090149, 0.819970965385437, 0.8272355198860168, 0.8350284099578857, 0.8305375576019287, 0.8387266993522644, 0.846387505531311, 0.8433496356010437, 0.8504821062088013, 0.8524633646011353, 0.8535200357437134, 0.854708731174469, 0.856689989566803, 0.8551049828529358, 0.8593316674232483, 0.8615770936012268, 0.8628978729248047, 0.8702945709228516, 0.8691058158874512, 0.871879518032074, 0.8722757697105408, 0.8691058158874512, 0.8733324408531189, 0.8800686597824097, 0.8795403242111206, 0.8755778670310974, 0.8768987059593201, 0.8829745054244995, 0.8824461698532104, 0.8823140859603882, 0.887201189994812, 0.8897107243537903, 0.8889182209968567, 0.8927486538887024, 0.8902390599250793, 0.8953903317451477, 0.8980319499969482, 0.8976356983184814, 0.900409460067749, 0.89552241563797, 0.9025228023529053, 0.8989565372467041, 0.9056927561759949, 0.9085986018180847, 0.9030511379241943, 0.9066173434257507, 0.9101836085319519, 0.9083344340324402, 0.909259021282196, 0.9099194407463074, 0.9126931428909302, 0.9140139818191528, 0.9119006991386414, 0.9171839952468872, 0.9169198274612427, 0.9185048341751099, 0.9218068718910217, 0.9185048341751099, 0.9196935892105103], "val_loss": [2.033445358276367, 1.5042319297790527, 1.0271512269973755, 0.8147247433662415, 0.7278039455413818, 0.68117356300354, 0.6306353211402893, 0.5966841578483582, 0.5751398801803589, 0.5460951328277588, 0.5314993858337402, 0.509799063205719, 0.4957965612411499, 0.4792602062225342, 0.46671679615974426, 0.45267683267593384, 0.4441072940826416, 0.4356139600276947, 0.42943108081817627, 0.4255247414112091, 0.41811680793762207, 0.4163394272327423, 0.39929893612861633, 0.3969916105270386, 0.39089226722717285, 0.387652188539505, 0.3844633102416992, 0.3824205696582794, 0.3749690353870392, 0.3701930642127991, 0.36967378854751587, 0.36689504981040955, 0.3585263788700104, 0.3587398827075958, 0.36267170310020447, 0.3561091423034668, 0.35379692912101746, 0.3499273955821991, 0.34701839089393616, 0.3467637896537781, 0.3424672484397888, 0.33951225876808167, 0.3386255204677582, 0.34044384956359863, 0.33945050835609436, 0.33684298396110535, 0.3322163224220276, 0.33181649446487427, 0.32827115058898926, 0.3312568664550781, 0.3297465741634369, 0.3256674110889435, 0.3234780728816986, 0.32119208574295044, 0.3232716917991638, 0.3209094703197479, 0.31944912672042847, 0.3157532513141632, 0.3144265413284302, 0.31676045060157776, 0.31425556540489197, 0.3131799101829529, 0.3147056996822357, 0.3154993951320648, 0.31771615147590637, 0.31545644998550415, 0.3127000629901886, 0.31382524967193604, 0.31026333570480347, 0.3147730529308319, 0.30829918384552, 0.3107443153858185, 0.31316936016082764, 0.30297672748565674, 0.30325081944465637, 0.30436232686042786, 0.3072424829006195, 0.30681705474853516, 0.3061434030532837], "val_accuracy": [0.5526666641235352, 0.6666666865348816, 0.687333345413208, 0.7083333134651184, 0.731333315372467, 0.7446666955947876, 0.7606666684150696, 0.762666642665863, 0.7873333096504211, 0.7889999747276306, 0.7973333597183228, 0.8056666851043701, 0.8193333148956299, 0.8259999752044678, 0.8289999961853027, 0.8410000205039978, 0.8453333377838135, 0.8450000286102295, 0.8489999771118164, 0.847000002861023, 0.8516666889190674, 0.856333315372467, 0.859333336353302, 0.856333315372467, 0.8633333444595337, 0.8640000224113464, 0.8656666874885559, 0.8646666407585144, 0.8679999709129333, 0.8696666955947876, 0.8640000224113464, 0.8686666488647461, 0.8713333606719971, 0.8709999918937683, 0.8703333139419556, 0.8723333477973938, 0.871999979019165, 0.874666690826416, 0.8723333477973938, 0.8759999871253967, 0.8726666569709778, 0.875333309173584, 0.8790000081062317, 0.8756666779518127, 0.8726666569709778, 0.8769999742507935, 0.8796666860580444, 0.8796666860580444, 0.8806666731834412, 0.8793333172798157, 0.8813333511352539, 0.8840000033378601, 0.8840000033378601, 0.8843333125114441, 0.8809999823570251, 0.8856666684150696, 0.8866666555404663, 0.8833333253860474, 0.8866666555404663, 0.8843333125114441, 0.8856666684150696, 0.8880000114440918, 0.887333333492279, 0.8883333206176758, 0.8866666555404663, 0.8896666765213013, 0.8863333463668823, 0.8853333592414856, 0.890999972820282, 0.8870000243186951, 0.8883333206176758, 0.8883333206176758, 0.8916666507720947, 0.8939999938011169, 0.8896666765213013, 0.8916666507720947, 0.890999972820282, 0.8926666378974915, 0.8913333415985107]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8728571534156799, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2236156463623047, 1.8704042434692383, 1.4041547775268555, 1.0992834568023682, 0.9444092512130737, 0.8563011288642883, 0.7861273288726807, 0.7263626456260681, 0.6972560882568359, 0.663445770740509, 0.6363552212715149, 0.61506587266922, 0.5986567139625549, 0.575035035610199, 0.5597490668296814, 0.546156108379364, 0.5364600419998169, 0.5171105861663818, 0.5025666356086731, 0.49356403946876526, 0.49355390667915344, 0.47843435406684875, 0.4746130406856537, 0.45407634973526, 0.4467022716999054, 0.44018539786338806, 0.43422120809555054, 0.4236660599708557, 0.42115309834480286, 0.4174458086490631, 0.41192299127578735, 0.40092936158180237, 0.39094409346580505, 0.38405078649520874, 0.37756097316741943, 0.3784691095352173, 0.36563482880592346, 0.3617417514324188, 0.35927972197532654, 0.35634931921958923, 0.353019654750824, 0.34459248185157776, 0.3315850496292114, 0.33234041929244995, 0.3270007073879242, 0.322761595249176, 0.314342737197876, 0.31861627101898193, 0.3084571659564972, 0.3076396882534027, 0.30185627937316895, 0.2994953691959381], "accuracy": [0.2755250334739685, 0.4865935742855072, 0.5558050274848938, 0.6169594526290894, 0.6671509742736816, 0.6933034062385559, 0.7149649858474731, 0.735041618347168, 0.7464007139205933, 0.7552502751350403, 0.76542067527771, 0.7794214487075806, 0.7848368883132935, 0.789988100528717, 0.796328067779541, 0.8059701323509216, 0.8053097128868103, 0.8207634687423706, 0.8210275769233704, 0.8269713521003723, 0.8253863453865051, 0.8330471515655518, 0.8304054737091064, 0.8392550349235535, 0.8429533839225769, 0.8467837572097778, 0.847840428352356, 0.8524633646011353, 0.8491612672805786, 0.850350022315979, 0.8539162874221802, 0.8573504090309143, 0.8640866279602051, 0.863029956817627, 0.8688416481018066, 0.8639545440673828, 0.8693699836730957, 0.8702945709228516, 0.8710870146751404, 0.8766345381736755, 0.8759741187095642, 0.8791441321372986, 0.8845595121383667, 0.8828424215316772, 0.885219931602478, 0.8858803510665894, 0.8898428082466125, 0.8849557638168335, 0.8874653577804565, 0.8927486538887024, 0.8894465565681458, 0.8951261639595032], "val_loss": [2.044675827026367, 1.5317453145980835, 1.075791835784912, 0.8770183324813843, 0.7812880873680115, 0.7175341248512268, 0.6717931628227234, 0.6348691582679749, 0.6069899797439575, 0.5858098268508911, 0.5611706376075745, 0.5410150289535522, 0.5328662991523743, 0.5108707547187805, 0.49795445799827576, 0.4919688403606415, 0.47441789507865906, 0.47070008516311646, 0.4571199119091034, 0.4460618495941162, 0.4443484842777252, 0.4361998438835144, 0.433839350938797, 0.4269232153892517, 0.4196476936340332, 0.41648566722869873, 0.40744563937187195, 0.40713876485824585, 0.4046465754508972, 0.3963574171066284, 0.39955419301986694, 0.3939928412437439, 0.38852086663246155, 0.384044349193573, 0.3848876655101776, 0.3811933994293213, 0.3822021782398224, 0.37499743700027466, 0.38005179166793823, 0.373385488986969, 0.3795448839664459, 0.36801785230636597, 0.3665647804737091, 0.36672261357307434, 0.3645939826965332, 0.3634185791015625, 0.3570505678653717, 0.360425740480423, 0.3621236979961395, 0.3569776117801666, 0.36062556505203247, 0.35791027545928955], "val_accuracy": [0.5350000262260437, 0.6423333287239075, 0.6726666688919067, 0.6926666498184204, 0.7236666679382324, 0.7403333187103271, 0.7556666731834412, 0.7676666378974915, 0.777999997138977, 0.784333348274231, 0.7923333048820496, 0.7993333339691162, 0.8006666898727417, 0.8130000233650208, 0.8130000233650208, 0.8213333487510681, 0.8233333230018616, 0.8266666531562805, 0.8330000042915344, 0.8353333473205566, 0.8346666693687439, 0.8343333601951599, 0.8389999866485596, 0.8433333039283752, 0.8450000286102295, 0.8523333072662354, 0.8510000109672546, 0.8506666421890259, 0.8543333411216736, 0.8576666712760925, 0.8539999723434448, 0.856333315372467, 0.859333336353302, 0.8646666407585144, 0.8606666922569275, 0.8636666536331177, 0.8579999804496765, 0.8669999837875366, 0.8659999966621399, 0.8696666955947876, 0.8659999966621399, 0.8713333606719971, 0.8740000128746033, 0.8726666569709778, 0.871666669845581, 0.875333309173584, 0.8769999742507935, 0.8733333349227905, 0.8713333606719971, 0.8766666650772095, 0.8743333220481873, 0.8743333220481873]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [4, 2, 3, 0, 3, 6, 2, 8, 6, 6], [0, 1, 0, 2, 0, 1, 0, 1, 3], [39, 54, 79, 10], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [3, 2, 0, 3], [16, 8], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 4, 6, 2, 8], [0, 4, 0, 3, 0, 0, 4, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.7597143054008484, "mapping_values": [1, 19, 10, 9, 4, 10, 6, 4, 1, 2, 1, 1, 1, 14, 7, 7, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.divide_no_nan(tf.math.add(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(alpha, tf.math.divide_no_nan(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), alpha)))), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), grad)))", "other_info": {"loss": [2.308924913406372, 2.298339605331421, 2.2746031284332275, 2.2341134548187256, 2.132683515548706, 1.8338552713394165, 1.3743642568588257, 1.1085492372512817, 1.0237048864364624, 0.9326951503753662, 0.8559204339981079, 0.8363264799118042, 0.7873435616493225, 0.81694096326828, 0.7428086400032043, 0.7691983580589294, 0.6998967528343201, 0.68797367811203, 0.740879476070404, 0.6661846041679382, 0.6787863969802856, 0.6533036231994629, 0.6246604919433594], "accuracy": [0.09377889335155487, 0.11596883088350296, 0.17250032722949982, 0.2645621597766876, 0.3727380931377411, 0.4543653428554535, 0.5392946600914001, 0.6061286330223083, 0.6392814517021179, 0.658961832523346, 0.685510516166687, 0.6848500967025757, 0.7113987803459167, 0.6861709356307983, 0.7205125093460083, 0.7143045663833618, 0.7364945411682129, 0.7388719916343689, 0.7124554514884949, 0.7454761862754822, 0.7400607466697693, 0.7588165402412415, 0.7623828053474426], "val_loss": [2.302009344100952, 2.282477617263794, 2.2486820220947266, 2.179309368133545, 1.9809707403182983, 1.4451677799224854, 1.0183743238449097, 0.9395421743392944, 0.7915682196617126, 0.756071150302887, 0.7075221538543701, 0.7238150835037231, 0.7122066020965576, 0.6668112874031067, 0.6299281120300293, 0.6571613550186157, 0.6338120102882385, 0.6043452024459839, 0.6281309723854065, 0.6353718042373657, 0.6534425616264343, 0.6167012453079224, 0.6433311104774475], "val_accuracy": [0.0963333323597908, 0.16033333539962769, 0.3683333396911621, 0.4690000116825104, 0.5230000019073486, 0.6413333415985107, 0.6866666674613953, 0.6653333306312561, 0.7093333601951599, 0.7203333377838135, 0.7360000014305115, 0.7243333458900452, 0.7336666584014893, 0.7433333396911621, 0.7540000081062317, 0.7260000109672546, 0.7409999966621399, 0.7620000243186951, 0.7336666584014893, 0.7310000061988831, 0.7333333492279053, 0.7463333606719971, 0.7276666760444641]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [9, 2, 6, 0, 3], [2, 1, 0, 0], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 1], [16, 16], [0, 0, 1], [5, 8], [1], [99], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 0, 8, 1, 4, 1, 4, 2, 8, 9], [0, 0, 0, 3, 0, 0, 4, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.sqrt(alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))))), grad), tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}, "mapping_values": [1, 1, 1, 0, 1, 10, 6, 4, 2, 3, 2, 1, 0, 20, 12, 8, 6], "tree_depth": 20}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 0, 8, 2, 3, 5], [0, 1, 0, 0, 1, 2], [39, 82, 93], [1, 0, 0, 0, 1, 1, 0, 0, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [6, 3, 3, 6, 8, 1, 2, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [86, 37, 96, 64, 91, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 10, 6, 3, 1, 0, 1, 1, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))), tf.math.sqrt(tf.math.add(tf.math.multiply(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), alpha))), tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))))", "other_info": {"loss": [2.3029563426971436, 2.3025903701782227, 2.3026819229125977, 2.30275821685791, 2.3033556938171387, 2.3051793575286865], "accuracy": [0.10394927859306335, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3026034832000732, 2.302666425704956, 2.3028156757354736, 2.3032326698303223, 2.3045878410339355, 2.3093299865722656], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 0], [39, 39, 44], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 3, 3, 5, 2], [0, 2, 0, 3, 0, 0], [16, 16, 75, 6], [0, 1], [0], [0], [65], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 6, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 3, 0, 3, 3, 2, 2], [16, 99, 96, 99, 61, 76]], "fitness": -0.09028571099042892, "mapping_values": [1, 9, 5, 4, 3, 13, 7, 6, 4, 2, 1, 1, 1, 11, 6, 5, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.add(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, sigma))", "other_info": {"loss": [2.3102974891662598, 2.310122013092041, 2.3090367317199707, 2.309699058532715, 2.3088653087615967, 2.309696674346924], "accuracy": [0.09232597798109055, 0.09642054885625839, 0.09338264167308807, 0.09153348207473755, 0.0956280529499054, 0.09232597798109055], "val_loss": [2.308647394180298, 2.308647394180298, 2.308647394180298, 2.308647394180298, 2.308647394180298, 2.308647394180298], "val_accuracy": [0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555]}}]