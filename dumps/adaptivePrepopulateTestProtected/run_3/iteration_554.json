[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8822857141494751, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585750579834, 1.8655762672424316, 1.394430160522461, 1.0773245096206665, 0.9378393888473511, 0.8425824046134949, 0.7776632308959961, 0.736241340637207, 0.6971188187599182, 0.6732122302055359, 0.644855797290802, 0.6276965141296387, 0.6100340485572815, 0.5899673104286194, 0.5746485590934753, 0.5484329462051392, 0.5425268411636353, 0.5357900857925415, 0.5214410424232483, 0.5127171874046326, 0.4895091950893402, 0.4932740032672882, 0.48551443219184875, 0.47113916277885437, 0.46571049094200134, 0.450914591550827, 0.438728004693985, 0.4414178729057312, 0.4245515465736389, 0.4182806611061096, 0.4126766324043274, 0.41352686285972595, 0.4031256139278412, 0.40064555406570435, 0.3982388377189636, 0.38566267490386963, 0.38400527834892273, 0.3741128146648407, 0.36422181129455566, 0.36170411109924316, 0.35991787910461426, 0.35666367411613464, 0.3521813750267029, 0.34583958983421326, 0.34736087918281555, 0.34181836247444153, 0.33650368452072144, 0.33141741156578064, 0.3230496346950531, 0.3225416839122772, 0.315096914768219, 0.3059031665325165, 0.3058394491672516, 0.3017319440841675, 0.29568877816200256, 0.2933836281299591, 0.28774771094322205, 0.2856961190700531, 0.2802303731441498, 0.2779994010925293, 0.274711549282074, 0.2719985842704773, 0.2586328387260437, 0.2598455548286438, 0.2622571289539337, 0.25739434361457825, 0.2502012252807617, 0.2544722855091095, 0.24556587636470795, 0.24580754339694977, 0.23948103189468384, 0.23949603736400604, 0.23484042286872864, 0.22871272265911102, 0.2256491780281067, 0.22479403018951416, 0.21744707226753235, 0.21390178799629211, 0.21272219717502594], "accuracy": [0.2785629332065582, 0.49451854825019836, 0.559899628162384, 0.6215823292732239, 0.6654338836669922, 0.6950204968452454, 0.7181349992752075, 0.7322678565979004, 0.7441553473472595, 0.7483819723129272, 0.7627789974212646, 0.7717606425285339, 0.7728173136711121, 0.78113853931427, 0.7882710099220276, 0.7993659973144531, 0.7976489067077637, 0.8074230551719666, 0.8128384351730347, 0.8198388814926147, 0.8212917447090149, 0.819970965385437, 0.8272355198860168, 0.8350284099578857, 0.8305375576019287, 0.8387266993522644, 0.846387505531311, 0.8433496356010437, 0.8504821062088013, 0.8524633646011353, 0.8535200357437134, 0.854708731174469, 0.856689989566803, 0.8551049828529358, 0.8593316674232483, 0.8615770936012268, 0.8628978729248047, 0.8702945709228516, 0.8691058158874512, 0.871879518032074, 0.8722757697105408, 0.8691058158874512, 0.8733324408531189, 0.8800686597824097, 0.8795403242111206, 0.8755778670310974, 0.8768987059593201, 0.8829745054244995, 0.8824461698532104, 0.8823140859603882, 0.887201189994812, 0.8897107243537903, 0.8889182209968567, 0.8927486538887024, 0.8902390599250793, 0.8953903317451477, 0.8980319499969482, 0.8976356983184814, 0.900409460067749, 0.89552241563797, 0.9025228023529053, 0.8989565372467041, 0.9056927561759949, 0.9085986018180847, 0.9030511379241943, 0.9066173434257507, 0.9101836085319519, 0.9083344340324402, 0.909259021282196, 0.9099194407463074, 0.9126931428909302, 0.9140139818191528, 0.9119006991386414, 0.9171839952468872, 0.9169198274612427, 0.9185048341751099, 0.9218068718910217, 0.9185048341751099, 0.9196935892105103], "val_loss": [2.033445358276367, 1.5042319297790527, 1.0271512269973755, 0.8147247433662415, 0.7278039455413818, 0.68117356300354, 0.6306353211402893, 0.5966841578483582, 0.5751398801803589, 0.5460951328277588, 0.5314993858337402, 0.509799063205719, 0.4957965612411499, 0.4792602062225342, 0.46671679615974426, 0.45267683267593384, 0.4441072940826416, 0.4356139600276947, 0.42943108081817627, 0.4255247414112091, 0.41811680793762207, 0.4163394272327423, 0.39929893612861633, 0.3969916105270386, 0.39089226722717285, 0.387652188539505, 0.3844633102416992, 0.3824205696582794, 0.3749690353870392, 0.3701930642127991, 0.36967378854751587, 0.36689504981040955, 0.3585263788700104, 0.3587398827075958, 0.36267170310020447, 0.3561091423034668, 0.35379692912101746, 0.3499273955821991, 0.34701839089393616, 0.3467637896537781, 0.3424672484397888, 0.33951225876808167, 0.3386255204677582, 0.34044384956359863, 0.33945050835609436, 0.33684298396110535, 0.3322163224220276, 0.33181649446487427, 0.32827115058898926, 0.3312568664550781, 0.3297465741634369, 0.3256674110889435, 0.3234780728816986, 0.32119208574295044, 0.3232716917991638, 0.3209094703197479, 0.31944912672042847, 0.3157532513141632, 0.3144265413284302, 0.31676045060157776, 0.31425556540489197, 0.3131799101829529, 0.3147056996822357, 0.3154993951320648, 0.31771615147590637, 0.31545644998550415, 0.3127000629901886, 0.31382524967193604, 0.31026333570480347, 0.3147730529308319, 0.30829918384552, 0.3107443153858185, 0.31316936016082764, 0.30297672748565674, 0.30325081944465637, 0.30436232686042786, 0.3072424829006195, 0.30681705474853516, 0.3061434030532837], "val_accuracy": [0.5526666641235352, 0.6666666865348816, 0.687333345413208, 0.7083333134651184, 0.731333315372467, 0.7446666955947876, 0.7606666684150696, 0.762666642665863, 0.7873333096504211, 0.7889999747276306, 0.7973333597183228, 0.8056666851043701, 0.8193333148956299, 0.8259999752044678, 0.8289999961853027, 0.8410000205039978, 0.8453333377838135, 0.8450000286102295, 0.8489999771118164, 0.847000002861023, 0.8516666889190674, 0.856333315372467, 0.859333336353302, 0.856333315372467, 0.8633333444595337, 0.8640000224113464, 0.8656666874885559, 0.8646666407585144, 0.8679999709129333, 0.8696666955947876, 0.8640000224113464, 0.8686666488647461, 0.8713333606719971, 0.8709999918937683, 0.8703333139419556, 0.8723333477973938, 0.871999979019165, 0.874666690826416, 0.8723333477973938, 0.8759999871253967, 0.8726666569709778, 0.875333309173584, 0.8790000081062317, 0.8756666779518127, 0.8726666569709778, 0.8769999742507935, 0.8796666860580444, 0.8796666860580444, 0.8806666731834412, 0.8793333172798157, 0.8813333511352539, 0.8840000033378601, 0.8840000033378601, 0.8843333125114441, 0.8809999823570251, 0.8856666684150696, 0.8866666555404663, 0.8833333253860474, 0.8866666555404663, 0.8843333125114441, 0.8856666684150696, 0.8880000114440918, 0.887333333492279, 0.8883333206176758, 0.8866666555404663, 0.8896666765213013, 0.8863333463668823, 0.8853333592414856, 0.890999972820282, 0.8870000243186951, 0.8883333206176758, 0.8883333206176758, 0.8916666507720947, 0.8939999938011169, 0.8896666765213013, 0.8916666507720947, 0.890999972820282, 0.8926666378974915, 0.8913333415985107]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8531428575515747, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2247259616851807, 1.8704602718353271, 1.3975002765655518, 1.0869395732879639, 0.9347038269042969, 0.8291578888893127, 0.7589207291603088, 0.7105417251586914, 0.6885597109794617, 0.6539708971977234, 0.6295397281646729, 0.6038715839385986, 0.5855446457862854, 0.5722929835319519, 0.5467028021812439, 0.5362564921379089, 0.5255051255226135, 0.5060085654258728, 0.4945298433303833, 0.4846698045730591, 0.4813985526561737, 0.47719866037368774, 0.4654628038406372, 0.4493376910686493, 0.4374917149543762, 0.4359600245952606, 0.43143776059150696, 0.42153021693229675, 0.4228968918323517, 0.4168683886528015, 0.40778693556785583, 0.4023630917072296, 0.38937196135520935, 0.38109341263771057, 0.3810294270515442, 0.36694470047950745, 0.3623647093772888, 0.3584367036819458, 0.3533821702003479, 0.35276898741722107, 0.34282228350639343, 0.3355676233768463, 0.3356401324272156, 0.32762640714645386, 0.32609814405441284, 0.3199053108692169, 0.3218185305595398, 0.30509838461875916, 0.30355536937713623, 0.3156939446926117, 0.2946232557296753, 0.2966839373111725, 0.29785242676734924, 0.288798063993454, 0.2898186147212982, 0.2776763141155243, 0.2817431092262268, 0.2787695825099945, 0.2623869776725769, 0.2657115161418915, 0.2602824568748474, 0.2588135302066803, 0.2590533494949341, 0.25641533732414246, 0.24719828367233276, 0.2474626898765564, 0.2457057386636734, 0.24033379554748535, 0.23723219335079193, 0.2230982482433319, 0.22945331037044525, 0.22647303342819214, 0.22609828412532806, 0.21682436764240265, 0.21445487439632416, 0.21827803552150726], "accuracy": [0.27327960729599, 0.49689605832099915, 0.564258337020874, 0.6255448460578918, 0.6616035103797913, 0.7074362635612488, 0.7275128960609436, 0.7467969655990601, 0.7519482374191284, 0.7646281719207764, 0.767930269241333, 0.7771760821342468, 0.7848368883132935, 0.7924976944923401, 0.8030643463134766, 0.8088759779930115, 0.8045172095298767, 0.817461371421814, 0.8226125836372375, 0.822348415851593, 0.8286884427070618, 0.8308017253875732, 0.8321225643157959, 0.8421608805656433, 0.842028796672821, 0.8396512866020203, 0.8471800088882446, 0.8507462739944458, 0.8491612672805786, 0.8520671129226685, 0.8536521196365356, 0.8502179384231567, 0.8623695969581604, 0.8640866279602051, 0.8599920868873596, 0.8684453964233398, 0.8688416481018066, 0.8753136992454529, 0.8730682730674744, 0.8722757697105408, 0.8739928603172302, 0.8799365758895874, 0.8798044919967651, 0.882710337638855, 0.8800686597824097, 0.8849557638168335, 0.883238673210144, 0.891559898853302, 0.8879936337471008, 0.8882578015327454, 0.894069492816925, 0.8918240666389465, 0.8902390599250793, 0.8944657444953918, 0.8928807377815247, 0.8980319499969482, 0.8992207050323486, 0.900409460067749, 0.9027869701385498, 0.9045040011405945, 0.9054285883903503, 0.909259021282196, 0.9022586345672607, 0.9083344340324402, 0.9119006991386414, 0.9109761118888855, 0.9121648669242859, 0.9146744012832642, 0.913089394569397, 0.919561505317688, 0.9174481630325317, 0.9191652536392212, 0.9177123308181763, 0.9216747879981995, 0.9256373047828674, 0.9210143685340881], "val_loss": [2.0443899631500244, 1.5261791944503784, 1.0576421022415161, 0.8400330543518066, 0.7538245320320129, 0.6974645256996155, 0.6488022208213806, 0.6204496026039124, 0.5947257280349731, 0.5805497765541077, 0.5635714530944824, 0.5514428615570068, 0.5389415621757507, 0.5194642543792725, 0.5110647678375244, 0.505391538143158, 0.49265217781066895, 0.482452929019928, 0.47560545802116394, 0.4706900119781494, 0.46683162450790405, 0.45918864011764526, 0.4495305120944977, 0.4444875419139862, 0.44475406408309937, 0.43921300768852234, 0.42951318621635437, 0.4310210049152374, 0.4318746328353882, 0.4320792555809021, 0.4172113537788391, 0.4146674871444702, 0.41153618693351746, 0.40826791524887085, 0.407604455947876, 0.4088631868362427, 0.4009011685848236, 0.39710307121276855, 0.39629629254341125, 0.397040456533432, 0.3953806161880493, 0.3952362537384033, 0.3873338997364044, 0.38856732845306396, 0.386593759059906, 0.3867052495479584, 0.3804856836795807, 0.3826107680797577, 0.3814803957939148, 0.37919676303863525, 0.3791925311088562, 0.37897443771362305, 0.3771795928478241, 0.3736264109611511, 0.3718550205230713, 0.3719537854194641, 0.3761158585548401, 0.37300440669059753, 0.3697253465652466, 0.3671141266822815, 0.37057217955589294, 0.37235045433044434, 0.36936017870903015, 0.36792871356010437, 0.3732031285762787, 0.3677469491958618, 0.36386367678642273, 0.36867427825927734, 0.36265355348587036, 0.37006253004074097, 0.3609914183616638, 0.3639620840549469, 0.36189478635787964, 0.36812540888786316, 0.3641917407512665, 0.36337539553642273], "val_accuracy": [0.543666660785675, 0.6556666493415833, 0.6796666383743286, 0.7133333086967468, 0.7289999723434448, 0.7473333477973938, 0.7630000114440918, 0.7696666717529297, 0.7770000100135803, 0.7896666526794434, 0.7926666736602783, 0.7956666946411133, 0.8050000071525574, 0.8130000233650208, 0.8090000152587891, 0.8183333277702332, 0.8253333568572998, 0.82833331823349, 0.8330000042915344, 0.831333339214325, 0.8363333344459534, 0.8399999737739563, 0.8429999947547913, 0.8446666598320007, 0.843666672706604, 0.8460000157356262, 0.8500000238418579, 0.8493333458900452, 0.8456666469573975, 0.8483333587646484, 0.856333315372467, 0.8529999852180481, 0.8556666374206543, 0.8566666841506958, 0.8556666374206543, 0.8560000061988831, 0.859333336353302, 0.8560000061988831, 0.8633333444595337, 0.8576666712760925, 0.862333357334137, 0.8600000143051147, 0.8603333234786987, 0.8636666536331177, 0.8646666407585144, 0.8666666746139526, 0.8640000224113464, 0.8650000095367432, 0.8676666617393494, 0.8683333396911621, 0.8696666955947876, 0.8706666827201843, 0.8686666488647461, 0.8690000176429749, 0.8713333606719971, 0.871666669845581, 0.8693333268165588, 0.8713333606719971, 0.8730000257492065, 0.8740000128746033, 0.8713333606719971, 0.8733333349227905, 0.874666690826416, 0.875, 0.8723333477973938, 0.8700000047683716, 0.8756666779518127, 0.8740000128746033, 0.875, 0.8736666440963745, 0.8790000081062317, 0.8740000128746033, 0.8756666779518127, 0.8726666569709778, 0.8786666393280029, 0.874666690826416]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0], [0, 2, 3, 0, 2, 5, 8, 8, 4, 3, 9], [3, 2, 0, 3, 1], [15, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 4, 0, 3, 0, 0, 3, 4, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.75342857837677, "mapping_values": [1, 9, 5, 4, 2, 16, 11, 5, 2, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.math.add(tf.math.square(tf.math.sqrt(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.pow(grad, tf.math.multiply(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, grad)))", "other_info": {"loss": [2.308950185775757, 2.2972428798675537, 2.2747955322265625, 2.2333054542541504, 2.13319730758667, 1.8520551919937134, 1.3769525289535522, 1.1276907920837402, 0.9777388572692871, 0.9922913908958435, 0.8765308856964111, 0.8482924103736877, 0.8260626196861267, 0.7939780354499817, 0.7509590983390808, 0.7580247521400452, 0.7086935043334961, 0.716817319393158], "accuracy": [0.09549596905708313, 0.11570466309785843, 0.1768590658903122, 0.25941091775894165, 0.36349228024482727, 0.43547746539115906, 0.5444459319114685, 0.5997886657714844, 0.6523576974868774, 0.6557918190956116, 0.6749438643455505, 0.6882842183113098, 0.6881521344184875, 0.7055870890617371, 0.7137762308120728, 0.7168141603469849, 0.7293620109558105, 0.7329282760620117], "val_loss": [2.301945686340332, 2.2827658653259277, 2.2499701976776123, 2.1823835372924805, 1.9880696535110474, 1.4738065004348755, 1.0526000261306763, 0.9067016839981079, 0.9945688247680664, 0.9211745858192444, 0.7268872261047363, 0.8181858658790588, 0.6980962157249451, 0.6981246471405029, 0.7494618892669678, 0.6964581608772278, 0.703007161617279, 0.6790059208869934], "val_accuracy": [0.10400000214576721, 0.1666666716337204, 0.37566667795181274, 0.4480000138282776, 0.5410000085830688, 0.6393333077430725, 0.6596666574478149, 0.6693333387374878, 0.6549999713897705, 0.640333354473114, 0.7200000286102295, 0.6809999942779541, 0.7379999756813049, 0.7286666631698608, 0.7020000219345093, 0.7203333377838135, 0.7356666922569275, 0.7269999980926514]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [10], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 3, 4, 1, 4, 2, 8], [4, 0, 4, 3, 0, 0, 3, 1, 2, 0], [16, 40, 96, 99, 61, 5]], "fitness": -0.4034285843372345, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)), tf.math.multiply(tf.math.pow(sigma, tf.math.subtract(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), alpha)), tf.math.add(tf.math.sqrt(beta), tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.5704615116119385, 2.2373034954071045, 3.1584627628326416, 2.3494155406951904, 2.3156559467315674, 2.305631637573242, 2.304018020629883], "accuracy": [0.13261127471923828, 0.21397437155246735, 0.26376965641975403, 0.09998679161071777, 0.10077928751707077, 0.09998679161071777, 0.10381719470024109], "val_loss": [2.3163998126983643, 1.4586067199707031, 2.38614821434021, 2.321700096130371, 2.3062424659729004, 2.303537368774414, 2.303640842437744], "val_accuracy": [0.09866666793823242, 0.4126666784286499, 0.0963333323597908, 0.0963333323597908, 0.10300000011920929, 0.10300000011920929, 0.09533333033323288]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 3, 0, 3], [16, 16], [0, 1], [0], [0], [69], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 5, 4, 2, 2], [0, 0, 4, 1, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 8, 4, 4, 2, 2, 1, 1, 1, 17, 9, 8, 4], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, alpha))), tf.math.square(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 7, 3], [0, 1, 0, 2, 3, 3], [31, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1, 1], [2], [0, 6], [53], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 4, 4, 2, 8, 5], [0, 0, 1, 3, 0, 3, 3, 1, 2, 0], [75, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 7, 6, 2, 10, 6, 4, 2, 3, 1, 2, 1, 22, 12, 10, 4], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, grad))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha)), tf.math.pow(sigma, tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)))), sigma), tf.math.sqrt(tf.math.square(alpha))), beta), tf.constant(1.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}]