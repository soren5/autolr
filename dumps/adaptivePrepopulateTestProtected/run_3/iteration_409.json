[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8808571696281433, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223215103149414, 1.8640538454055786, 1.390925645828247, 1.0857504606246948, 0.9175904989242554, 0.8278062343597412, 0.75929194688797, 0.7150763869285583, 0.6742342710494995, 0.6527069211006165, 0.6226239800453186, 0.6030511260032654, 0.5812473893165588, 0.5698184370994568, 0.5517233610153198, 0.5318202376365662, 0.5262278914451599, 0.5063096284866333, 0.4941454231739044, 0.4912639260292053, 0.47673994302749634, 0.46776485443115234, 0.45580968260765076, 0.45419755578041077, 0.4471202790737152, 0.4368197023868561, 0.4238806366920471, 0.41453513503074646, 0.41017231345176697, 0.4062040150165558, 0.40386685729026794, 0.3953916132450104, 0.39355871081352234, 0.3836102783679962, 0.37635838985443115, 0.3735085725784302, 0.363672137260437, 0.35395750403404236, 0.35972025990486145, 0.34721699357032776, 0.3442964553833008, 0.335767537355423, 0.3300938904285431, 0.32407090067863464, 0.32112976908683777, 0.3181473910808563, 0.31370431184768677, 0.3087446987628937, 0.3084625005722046, 0.30203962326049805, 0.293395072221756, 0.2889169156551361, 0.2914500832557678, 0.28307828307151794, 0.28207361698150635, 0.2786792516708374, 0.27818819880485535, 0.26387521624565125], "accuracy": [0.27222296595573425, 0.5027077198028564, 0.5674283504486084, 0.6277902722358704, 0.6709813475608826, 0.7058512568473816, 0.7269845604896545, 0.7415136694908142, 0.7586844563484192, 0.7617223858833313, 0.783119797706604, 0.7832518815994263, 0.7926297783851624, 0.8001585006713867, 0.807158887386322, 0.8103289008140564, 0.8133667707443237, 0.8190463781356812, 0.8247259259223938, 0.8271034359931946, 0.8298771381378174, 0.8341038227081299, 0.8366134166717529, 0.839519202709198, 0.8404437899589539, 0.848368763923645, 0.8515387773513794, 0.8564258217811584, 0.8529917001724243, 0.8585391640663147, 0.8515387773513794, 0.863558292388916, 0.8615770936012268, 0.8640866279602051, 0.8652753829956055, 0.8671245574951172, 0.8720116019248962, 0.8771628737449646, 0.8705587387084961, 0.876370370388031, 0.8787478804588318, 0.8784837126731873, 0.8828424215316772, 0.8842953443527222, 0.884691596031189, 0.8840311765670776, 0.8891823887825012, 0.8894465565681458, 0.8899748921394348, 0.8932769894599915, 0.8945978283882141, 0.8980319499969482, 0.896446943283081, 0.8988244533538818, 0.9019944667816162, 0.901862382888794, 0.8985602855682373, 0.904768168926239], "val_loss": [2.039530038833618, 1.5154659748077393, 1.039007544517517, 0.8366694450378418, 0.7400773167610168, 0.6859951019287109, 0.6454513669013977, 0.6114123463630676, 0.5899704694747925, 0.5724708437919617, 0.5533395409584045, 0.5345184803009033, 0.5225448608398438, 0.5092709064483643, 0.500229001045227, 0.49316829442977905, 0.480929970741272, 0.4729439616203308, 0.4688349962234497, 0.4563703238964081, 0.45455607771873474, 0.44636544585227966, 0.44144734740257263, 0.4332112669944763, 0.42851945757865906, 0.4277913272380829, 0.4196922183036804, 0.41600528359413147, 0.4114539325237274, 0.4113328456878662, 0.4059373438358307, 0.4033544063568115, 0.40210506319999695, 0.3963744640350342, 0.39264819025993347, 0.39112263917922974, 0.384288489818573, 0.383841872215271, 0.3804401755332947, 0.3786342442035675, 0.3777892291545868, 0.37486007809638977, 0.37355443835258484, 0.37450093030929565, 0.36811116337776184, 0.3697490096092224, 0.3684578537940979, 0.370509535074234, 0.36476588249206543, 0.36312252283096313, 0.361527681350708, 0.36036449670791626, 0.3581533133983612, 0.3633516728878021, 0.35499346256256104, 0.3547135293483734, 0.35882508754730225, 0.35363712906837463], "val_accuracy": [0.5473333597183228, 0.6496666669845581, 0.6846666932106018, 0.6959999799728394, 0.7279999852180481, 0.7450000047683716, 0.7580000162124634, 0.7713333368301392, 0.7763333320617676, 0.7816666960716248, 0.7963333129882812, 0.8109999895095825, 0.8116666674613953, 0.8113333582878113, 0.8116666674613953, 0.8186666369438171, 0.8259999752044678, 0.8236666917800903, 0.828000009059906, 0.8360000252723694, 0.8323333263397217, 0.8373333215713501, 0.8373333215713501, 0.8366666436195374, 0.843666672706604, 0.843999981880188, 0.846666693687439, 0.8483333587646484, 0.8493333458900452, 0.847000002861023, 0.8476666808128357, 0.8496666550636292, 0.8510000109672546, 0.8519999980926514, 0.8553333282470703, 0.8556666374206543, 0.8583333492279053, 0.859333336353302, 0.8560000061988831, 0.862333357334137, 0.8636666536331177, 0.859666645526886, 0.8636666536331177, 0.8643333315849304, 0.8653333187103271, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.8709999918937683, 0.8690000176429749, 0.8686666488647461, 0.8653333187103271, 0.8733333349227905, 0.8679999709129333, 0.8709999918937683, 0.8706666827201843, 0.8703333139419556, 0.8693333268165588]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8591428399085999, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2233242988586426, 1.8700505495071411, 1.388658046722412, 1.0849531888961792, 0.9335113167762756, 0.8364467620849609, 0.7590181827545166, 0.7198185324668884, 0.6775190234184265, 0.663871169090271, 0.6282666921615601, 0.6132974028587341, 0.5884293913841248, 0.5714941620826721, 0.5581589937210083, 0.5459954142570496, 0.5361593961715698, 0.5177045464515686, 0.5117020606994629, 0.49765995144844055, 0.4876328408718109, 0.48322594165802, 0.47574901580810547, 0.4674215018749237, 0.45889973640441895, 0.4546521306037903, 0.4394836127758026, 0.43721216917037964, 0.4214106500148773, 0.42441728711128235, 0.41455909609794617, 0.39969077706336975, 0.39379221200942993, 0.3909871280193329, 0.3864743411540985, 0.38364627957344055, 0.3817124366760254, 0.37364333868026733, 0.3703274428844452, 0.36385318636894226, 0.3585091829299927, 0.3575665354728699, 0.3517700731754303, 0.34290561079978943, 0.3323681950569153, 0.3334450423717499, 0.3273618519306183, 0.32944047451019287, 0.3204978108406067, 0.31704947352409363, 0.3115347623825073, 0.3053414523601532, 0.2996046841144562, 0.29851242899894714, 0.29212355613708496, 0.285623162984848, 0.28279030323028564, 0.28454479575157166, 0.27820032835006714, 0.2797064781188965, 0.2713533341884613, 0.2635684907436371, 0.26528361439704895, 0.2613588869571686, 0.25486522912979126, 0.25118517875671387, 0.25187721848487854, 0.2500377595424652, 0.2384938895702362, 0.24957340955734253, 0.23609589040279388, 0.23172050714492798, 0.23156067728996277, 0.2263338714838028, 0.23160642385482788], "accuracy": [0.27605336904525757, 0.499009370803833, 0.5712587237358093, 0.6242240071296692, 0.6676793098449707, 0.7024171352386475, 0.72672039270401, 0.7358341217041016, 0.7540615797042847, 0.759609043598175, 0.7708360552787781, 0.7798177003860474, 0.7828556299209595, 0.789988100528717, 0.7973847389221191, 0.8018755912780762, 0.8062343001365662, 0.8146876096725464, 0.8197067975997925, 0.8219521641731262, 0.8235371708869934, 0.8255184292793274, 0.832650899887085, 0.8298771381378174, 0.8330471515655518, 0.8396512866020203, 0.8459912538528442, 0.8409721255302429, 0.848368763923645, 0.8482366800308228, 0.8527275323867798, 0.8537842035293579, 0.8574824929237366, 0.8613129258155823, 0.8636903762817383, 0.8668603897094727, 0.8650112152099609, 0.8701624870300293, 0.8650112152099609, 0.8691058158874512, 0.8679170608520508, 0.8726720213890076, 0.873860776424408, 0.8768987059593201, 0.8796724081039429, 0.8787478804588318, 0.882710337638855, 0.8841632604598999, 0.8816536664962769, 0.8821820020675659, 0.8902390599250793, 0.8861445188522339, 0.8930128216743469, 0.8905032277107239, 0.8981640338897705, 0.8963148593902588, 0.8985602855682373, 0.8980319499969482, 0.9009377956390381, 0.898428201675415, 0.9008057117462158, 0.9055606722831726, 0.9055606722831726, 0.9039757251739502, 0.9055606722831726, 0.9072777628898621, 0.9096552729606628, 0.9095231890678406, 0.9117686152458191, 0.9095231890678406, 0.9159952402114868, 0.9161273241043091, 0.9105798602104187, 0.9194294214248657, 0.9185048341751099], "val_loss": [2.044609308242798, 1.5223915576934814, 1.0580040216445923, 0.8406983017921448, 0.7506904006004333, 0.6923004388809204, 0.6463504433631897, 0.6134629845619202, 0.585675060749054, 0.5690392851829529, 0.550131618976593, 0.5336408019065857, 0.5232269167900085, 0.5006778240203857, 0.4958619773387909, 0.4864397346973419, 0.4725345969200134, 0.4608341455459595, 0.45932307839393616, 0.44794216752052307, 0.4410710334777832, 0.43709421157836914, 0.434668630361557, 0.43034887313842773, 0.41911083459854126, 0.4112917482852936, 0.41370323300361633, 0.404061496257782, 0.4022688865661621, 0.39489468932151794, 0.38868969678878784, 0.386383980512619, 0.3850575089454651, 0.38039371371269226, 0.3843854069709778, 0.37750232219696045, 0.37809863686561584, 0.3693569302558899, 0.3727053999900818, 0.37089791893959045, 0.3696381747722626, 0.36619603633880615, 0.3617047071456909, 0.36051854491233826, 0.357035368680954, 0.3548632860183716, 0.3557978570461273, 0.360008180141449, 0.35475683212280273, 0.34976476430892944, 0.34673812985420227, 0.35010892152786255, 0.34534960985183716, 0.34646907448768616, 0.3443242907524109, 0.3487524390220642, 0.34230780601501465, 0.3430393934249878, 0.3477245271205902, 0.34028226137161255, 0.3421851396560669, 0.33716657757759094, 0.33523231744766235, 0.3360637128353119, 0.33455076813697815, 0.3331521451473236, 0.33449891209602356, 0.3376067578792572, 0.3346605896949768, 0.3352460563182831, 0.34228986501693726, 0.3404763638973236, 0.3354293704032898, 0.3365634083747864, 0.33425554633140564], "val_accuracy": [0.5446666479110718, 0.6553333401679993, 0.6710000038146973, 0.7146666646003723, 0.7366666793823242, 0.7553333044052124, 0.762666642665863, 0.7753333449363708, 0.7893333435058594, 0.7889999747276306, 0.7973333597183228, 0.8109999895095825, 0.809333324432373, 0.8209999799728394, 0.8230000138282776, 0.8276666402816772, 0.8316666483879089, 0.8346666693687439, 0.8326666951179504, 0.8403333425521851, 0.8416666388511658, 0.8496666550636292, 0.8413333296775818, 0.8413333296775818, 0.8516666889190674, 0.8526666760444641, 0.8523333072662354, 0.8503333330154419, 0.8586666584014893, 0.8586666584014893, 0.8616666793823242, 0.8633333444595337, 0.8613333106040955, 0.8629999756813049, 0.8613333106040955, 0.8616666793823242, 0.8653333187103271, 0.8679999709129333, 0.8676666617393494, 0.8673333525657654, 0.8653333187103271, 0.8690000176429749, 0.8693333268165588, 0.8706666827201843, 0.871666669845581, 0.8743333220481873, 0.8733333349227905, 0.8690000176429749, 0.871999979019165, 0.8733333349227905, 0.8769999742507935, 0.8759999871253967, 0.8740000128746033, 0.8773333430290222, 0.8790000081062317, 0.8756666779518127, 0.8799999952316284, 0.8786666393280029, 0.8763333559036255, 0.878333330154419, 0.8790000081062317, 0.8820000290870667, 0.8816666603088379, 0.8786666393280029, 0.8836666941642761, 0.8830000162124634, 0.8833333253860474, 0.8840000033378601, 0.8790000081062317, 0.8853333592414856, 0.8793333172798157, 0.8790000081062317, 0.8773333430290222, 0.8853333592414856, 0.8820000290870667]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 4, 0, 3], [0, 1, 2, 2], [55, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 0], [16, 59, 74], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 4, 2, 0], [16, 99, 96, 99, 95, 1]], "fitness": -0.12200000137090683, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 3, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))), sigma), grad)", "other_info": {"loss": [9.336973226392871e+20, 1.0495125239754444e+21, 1.0637062515198001e+21, 1.1044256179194146e+21, 1.062597169742816e+21, 1.0732891374706586e+21], "accuracy": [0.11345925182104111, 0.11636507511138916, 0.11015717685222626, 0.11161009222269058, 0.11147800832986832, 0.11610091477632523], "val_loss": [7.117802695695364e+20, 7.117802695695364e+20, 7.117854064878614e+20, 7.117854064878614e+20, 7.117854064878614e+20, 7.117854064878614e+20], "val_accuracy": [0.12300000339746475, 0.12300000339746475, 0.12300000339746475, 0.12300000339746475, 0.12300000339746475, 0.12300000339746475]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 1], [0, 3, 0, 2], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 1, 6, 8, 1, 4, 1, 4, 2, 8], [0, 3, 0, 3, 0, 2, 3, 1, 4, 0], [0, 11, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 8, 4, 4, 2, 2, 1, 1, 1, 21, 11, 10, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(sigma, tf.math.pow(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(beta, sigma)))), alpha), tf.math.add(tf.math.sqrt(grad), tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10236428678035736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 2, 3, 0, 3, 6], [0, 1, 0, 2, 0], [39, 39, 54], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0], [0, 2, 3, 1, 3, 5, 9], [0, 3, 0, 3], [16, 16, 59], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 6, 4, 2, 2, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 3], [67, 99, 96, 99, 87, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, alpha)))", "other_info": {"loss": [2.3040857315063477, 2.3025851249694824, 2.302584409713745, 2.302584648132324, 2.302584409713745, 2.3025851249694824], "accuracy": [0.10447761416435242, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.10553427785634995, 0.09998679161071777], "val_loss": [2.3025851249694824, 2.3025853633880615, 2.3025851249694824, 2.302584648132324, 2.3025848865509033, 2.3025848865509033], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10100000351667404, 0.10100000351667404]}, "mapping_values": [1, 11, 6, 5, 3, 11, 7, 4, 3, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 2, 3, 0, 3, 7, 8, 6, 0, 2, 6, 5, 9], [0, 1, 0, 2, 1, 0, 2], [54, 39, 37, 47], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 8, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 2, 1, 4, 2, 8], [0, 0, 2, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.0925714299082756, "mapping_values": [1, 20, 13, 7, 4, 6, 4, 2, 1, 1, 0, 1, 1, 16, 8, 8, 4], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.divide_no_nan(alpha, tf.math.negative(tf.math.add(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.square(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), grad)))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(beta, sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)))), sigma), alpha)", "other_info": {"loss": [2.3095409870147705, 2.3095364570617676, 2.3096485137939453, 2.3091537952423096, 2.310393810272217, 2.310601234436035], "accuracy": [0.09192973375320435, 0.0940430611371994, 0.09338264167308807, 0.08994849026203156, 0.09140139818191528, 0.08757099509239197], "val_loss": [2.308363437652588, 2.308363437652588, 2.308363437652588, 2.308363437652588, 2.308363437652588, 2.308363437652588], "val_accuracy": [0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918]}}]