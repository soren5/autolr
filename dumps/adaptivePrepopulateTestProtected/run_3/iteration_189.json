[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8808571696281433, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223215103149414, 1.8640538454055786, 1.390925645828247, 1.0857504606246948, 0.9175904989242554, 0.8278062343597412, 0.75929194688797, 0.7150763869285583, 0.6742342710494995, 0.6527069211006165, 0.6226239800453186, 0.6030511260032654, 0.5812473893165588, 0.5698184370994568, 0.5517233610153198, 0.5318202376365662, 0.5262278914451599, 0.5063096284866333, 0.4941454231739044, 0.4912639260292053, 0.47673994302749634, 0.46776485443115234, 0.45580968260765076, 0.45419755578041077, 0.4471202790737152, 0.4368197023868561, 0.4238806366920471, 0.41453513503074646, 0.41017231345176697, 0.4062040150165558, 0.40386685729026794, 0.3953916132450104, 0.39355871081352234, 0.3836102783679962, 0.37635838985443115, 0.3735085725784302, 0.363672137260437, 0.35395750403404236, 0.35972025990486145, 0.34721699357032776, 0.3442964553833008, 0.335767537355423, 0.3300938904285431, 0.32407090067863464, 0.32112976908683777, 0.3181473910808563, 0.31370431184768677, 0.3087446987628937, 0.3084625005722046, 0.30203962326049805, 0.293395072221756, 0.2889169156551361, 0.2914500832557678, 0.28307828307151794, 0.28207361698150635, 0.2786792516708374, 0.27818819880485535, 0.26387521624565125], "accuracy": [0.27222296595573425, 0.5027077198028564, 0.5674283504486084, 0.6277902722358704, 0.6709813475608826, 0.7058512568473816, 0.7269845604896545, 0.7415136694908142, 0.7586844563484192, 0.7617223858833313, 0.783119797706604, 0.7832518815994263, 0.7926297783851624, 0.8001585006713867, 0.807158887386322, 0.8103289008140564, 0.8133667707443237, 0.8190463781356812, 0.8247259259223938, 0.8271034359931946, 0.8298771381378174, 0.8341038227081299, 0.8366134166717529, 0.839519202709198, 0.8404437899589539, 0.848368763923645, 0.8515387773513794, 0.8564258217811584, 0.8529917001724243, 0.8585391640663147, 0.8515387773513794, 0.863558292388916, 0.8615770936012268, 0.8640866279602051, 0.8652753829956055, 0.8671245574951172, 0.8720116019248962, 0.8771628737449646, 0.8705587387084961, 0.876370370388031, 0.8787478804588318, 0.8784837126731873, 0.8828424215316772, 0.8842953443527222, 0.884691596031189, 0.8840311765670776, 0.8891823887825012, 0.8894465565681458, 0.8899748921394348, 0.8932769894599915, 0.8945978283882141, 0.8980319499969482, 0.896446943283081, 0.8988244533538818, 0.9019944667816162, 0.901862382888794, 0.8985602855682373, 0.904768168926239], "val_loss": [2.039530038833618, 1.5154659748077393, 1.039007544517517, 0.8366694450378418, 0.7400773167610168, 0.6859951019287109, 0.6454513669013977, 0.6114123463630676, 0.5899704694747925, 0.5724708437919617, 0.5533395409584045, 0.5345184803009033, 0.5225448608398438, 0.5092709064483643, 0.500229001045227, 0.49316829442977905, 0.480929970741272, 0.4729439616203308, 0.4688349962234497, 0.4563703238964081, 0.45455607771873474, 0.44636544585227966, 0.44144734740257263, 0.4332112669944763, 0.42851945757865906, 0.4277913272380829, 0.4196922183036804, 0.41600528359413147, 0.4114539325237274, 0.4113328456878662, 0.4059373438358307, 0.4033544063568115, 0.40210506319999695, 0.3963744640350342, 0.39264819025993347, 0.39112263917922974, 0.384288489818573, 0.383841872215271, 0.3804401755332947, 0.3786342442035675, 0.3777892291545868, 0.37486007809638977, 0.37355443835258484, 0.37450093030929565, 0.36811116337776184, 0.3697490096092224, 0.3684578537940979, 0.370509535074234, 0.36476588249206543, 0.36312252283096313, 0.361527681350708, 0.36036449670791626, 0.3581533133983612, 0.3633516728878021, 0.35499346256256104, 0.3547135293483734, 0.35882508754730225, 0.35363712906837463], "val_accuracy": [0.5473333597183228, 0.6496666669845581, 0.6846666932106018, 0.6959999799728394, 0.7279999852180481, 0.7450000047683716, 0.7580000162124634, 0.7713333368301392, 0.7763333320617676, 0.7816666960716248, 0.7963333129882812, 0.8109999895095825, 0.8116666674613953, 0.8113333582878113, 0.8116666674613953, 0.8186666369438171, 0.8259999752044678, 0.8236666917800903, 0.828000009059906, 0.8360000252723694, 0.8323333263397217, 0.8373333215713501, 0.8373333215713501, 0.8366666436195374, 0.843666672706604, 0.843999981880188, 0.846666693687439, 0.8483333587646484, 0.8493333458900452, 0.847000002861023, 0.8476666808128357, 0.8496666550636292, 0.8510000109672546, 0.8519999980926514, 0.8553333282470703, 0.8556666374206543, 0.8583333492279053, 0.859333336353302, 0.8560000061988831, 0.862333357334137, 0.8636666536331177, 0.859666645526886, 0.8636666536331177, 0.8643333315849304, 0.8653333187103271, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.8709999918937683, 0.8690000176429749, 0.8686666488647461, 0.8653333187103271, 0.8733333349227905, 0.8679999709129333, 0.8709999918937683, 0.8706666827201843, 0.8703333139419556, 0.8693333268165588]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8585714101791382, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2225072383880615, 1.8604151010513306, 1.3876545429229736, 1.1048760414123535, 0.9350457787513733, 0.8349577188491821, 0.7657177448272705, 0.7188105583190918, 0.6873149871826172, 0.648814857006073, 0.6293900609016418, 0.6152449250221252, 0.5928994417190552, 0.5754534006118774, 0.5591128468513489, 0.5408974885940552, 0.528723418712616, 0.5154992341995239, 0.5000146627426147, 0.4853571653366089, 0.4848144054412842, 0.46764490008354187, 0.464823842048645, 0.4518807828426361, 0.4483572244644165, 0.44171008467674255, 0.43213412165641785, 0.4207442104816437, 0.42067644000053406, 0.40951216220855713, 0.40299198031425476, 0.4008871614933014, 0.3909890949726105, 0.38377395272254944, 0.3781704306602478, 0.37636038661003113, 0.36353811621665955, 0.3577318489551544, 0.3538263440132141, 0.3497052788734436, 0.34860533475875854, 0.34359636902809143, 0.33247026801109314, 0.33060845732688904, 0.3225969970226288, 0.31670117378234863, 0.3156510591506958, 0.320571631193161, 0.3058987557888031, 0.30322563648223877, 0.2939748466014862, 0.2905879616737366, 0.29333263635635376, 0.2840362787246704, 0.28179842233657837, 0.27376091480255127, 0.2770747244358063, 0.271407812833786, 0.2679669260978699, 0.26147276163101196, 0.25970304012298584, 0.2561555504798889, 0.2540292739868164, 0.2470998466014862, 0.24156543612480164, 0.24338199198246002, 0.2374076098203659, 0.23401270806789398, 0.2332383692264557, 0.2264089286327362, 0.22564175724983215, 0.22031772136688232, 0.21590667963027954, 0.21884417533874512, 0.2149602323770523], "accuracy": [0.26799631118774414, 0.4982168674468994, 0.5670320987701416, 0.6128648519515991, 0.6686038970947266, 0.7000396251678467, 0.724210798740387, 0.7392682433128357, 0.7515519857406616, 0.763439416885376, 0.7745344042778015, 0.7718927264213562, 0.7889314293861389, 0.789459764957428, 0.8013472557067871, 0.8043851256370544, 0.8101968169212341, 0.8138951063156128, 0.8227446675300598, 0.8330471515655518, 0.8300092220306396, 0.8342359066009521, 0.8339717388153076, 0.8409721255302429, 0.8446704745292664, 0.845859169960022, 0.8469158411026001, 0.8527275323867798, 0.8514066934585571, 0.8536521196365356, 0.8564258217811584, 0.858671247959137, 0.8640866279602051, 0.8651432991027832, 0.8706908226013184, 0.8665962219238281, 0.8716153502464294, 0.8706908226013184, 0.8742570281028748, 0.878351628780365, 0.8770307898521423, 0.8802007436752319, 0.8831065893173218, 0.8821820020675659, 0.8829745054244995, 0.8891823887825012, 0.8908994793891907, 0.8887861371040344, 0.8953903317451477, 0.8903711438179016, 0.8947299122810364, 0.8972394466400146, 0.8972394466400146, 0.8993527889251709, 0.9006736278533936, 0.9056927561759949, 0.9037115573883057, 0.9039757251739502, 0.9033153057098389, 0.9084665179252625, 0.9049002528190613, 0.9074098467826843, 0.9088627696037292, 0.9097873568534851, 0.91124027967453, 0.9134856462478638, 0.9167877435684204, 0.9183727502822876, 0.9162594079971313, 0.9199577569961548, 0.91559898853302, 0.9222031235694885, 0.9224672913551331, 0.9227314591407776, 0.9241843819618225], "val_loss": [2.0327720642089844, 1.5042105913162231, 1.020512342453003, 0.8161503672599792, 0.7256199717521667, 0.6689785718917847, 0.6207916140556335, 0.58663010597229, 0.5631738901138306, 0.5435254573822021, 0.5268188714981079, 0.5165939331054688, 0.501660943031311, 0.48481112718582153, 0.47574350237846375, 0.4612507224082947, 0.4534996747970581, 0.45076513290405273, 0.4340957701206207, 0.4291086494922638, 0.4233579635620117, 0.41909921169281006, 0.4120693504810333, 0.41293594241142273, 0.4071798622608185, 0.39562156796455383, 0.3981322944164276, 0.3921072483062744, 0.3878268897533417, 0.37808260321617126, 0.3774909973144531, 0.37317603826522827, 0.3688269555568695, 0.3674793243408203, 0.3677876889705658, 0.36231958866119385, 0.3597623407840729, 0.3570239245891571, 0.3579897880554199, 0.3603018522262573, 0.35232558846473694, 0.35611265897750854, 0.34479841589927673, 0.34678998589515686, 0.3423020541667938, 0.3444725275039673, 0.3438539206981659, 0.341693639755249, 0.33940473198890686, 0.33841297030448914, 0.33663466572761536, 0.3370620012283325, 0.3343311846256256, 0.33142244815826416, 0.33413147926330566, 0.33045271039009094, 0.3300740122795105, 0.33395645022392273, 0.3304135799407959, 0.326594740152359, 0.3318038880825043, 0.3265233337879181, 0.3282761573791504, 0.3292907178401947, 0.3347703814506531, 0.33065828680992126, 0.32944801449775696, 0.32767125964164734, 0.33227765560150146, 0.3236032724380493, 0.33689942955970764, 0.3243250250816345, 0.32642391324043274, 0.3318503499031067, 0.3366342782974243], "val_accuracy": [0.5296666622161865, 0.6636666655540466, 0.6913333535194397, 0.7113333344459534, 0.746999979019165, 0.7616666555404663, 0.7733333110809326, 0.7900000214576721, 0.8009999990463257, 0.8029999732971191, 0.8113333582878113, 0.815666675567627, 0.8266666531562805, 0.8273333311080933, 0.8373333215713501, 0.8383333086967468, 0.8403333425521851, 0.8420000076293945, 0.8510000109672546, 0.8476666808128357, 0.8513333201408386, 0.8496666550636292, 0.8560000061988831, 0.8533333539962769, 0.8606666922569275, 0.8613333106040955, 0.8576666712760925, 0.8610000014305115, 0.8619999885559082, 0.8659999966621399, 0.8640000224113464, 0.8669999837875366, 0.8676666617393494, 0.8673333525657654, 0.8686666488647461, 0.8730000257492065, 0.8733333349227905, 0.8743333220481873, 0.8713333606719971, 0.8700000047683716, 0.8740000128746033, 0.8740000128746033, 0.878333330154419, 0.8740000128746033, 0.8813333511352539, 0.878000020980835, 0.8756666779518127, 0.8799999952316284, 0.8799999952316284, 0.8826666474342346, 0.8859999775886536, 0.8813333511352539, 0.8799999952316284, 0.8856666684150696, 0.887333333492279, 0.8870000243186951, 0.8886666893959045, 0.8843333125114441, 0.8859999775886536, 0.8883333206176758, 0.8866666555404663, 0.8889999985694885, 0.887666642665863, 0.8883333206176758, 0.8840000033378601, 0.8889999985694885, 0.8916666507720947, 0.887333333492279, 0.8889999985694885, 0.8949999809265137, 0.8883333206176758, 0.8893333077430725, 0.8889999985694885, 0.890999972820282, 0.8880000114440918]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 1, 0, 9], [0, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 0], [0, 0, 9, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1], [2, 3, 2, 4, 2, 1, 8, 0, 8, 9, 9, 2], [0, 6, 7, 2, 1, 2], [99, 16, 58], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [9, 3, 3, 6, 8, 1, 2, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 2, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 5, 2, 2, 2, 1, 1, 1, 18, 12, 6, 3, 1, 1, 0, 1], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(grad, tf.math.pow(tf.math.add(grad, tf.math.subtract(tf.math.sqrt(tf.math.negative(tf.math.sqrt(beta))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, beta))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3034212589263916, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [8, 2, 3, 0, 3, 0], [0, 1, 0, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [6, 3, 3, 6, 8, 6, 4, 1, 4, 2, 8, 1, 4], [4, 0, 0, 3, 4, 0, 3, 1, 2, 0, 7, 1], [16, 99, 96, 99, 61, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 2, 6, 3, 3, 2, 2, 1, 1, 0, 25, 13, 12, 4], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.math.pow(tf.math.add(grad, tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.pow(sigma, alpha), beta)), tf.constant(1.0, shape=shape, dtype=tf.float32)))), grad), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [4, 2, 3, 0, 3, 5], [0, 1, 0, 2, 1], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 9, 1, 3, 5], [2, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 1, 2, 0, 7, 5, 3, 3, 9, 2, 9, 8], [4, 0, 0, 3, 0, 0, 2, 4, 2, 0, 2, 6, 3, 1], [16, 99, 96, 99, 61, 1, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 6, 4, 2, 1, 2, 1, 1, 1, 35, 21, 14, 7], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.square(alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(sigma, tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), beta)))), tf.math.subtract(tf.math.add(grad, beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.add(tf.math.square(tf.math.multiply(beta, tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))), sigma))), tf.math.add(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [23, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [14, 16], [0, 1], [0], [0], [0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 6, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 95, 99, 61, 1]], "fitness": -0.0908571407198906, "mapping_values": [1, 9, 5, 4, 2, 6, 3, 3, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3098998069763184, 2.30991268157959, 2.310572862625122, 2.30973219871521, 2.3104724884033203, 2.3101446628570557], "accuracy": [0.08981640636920929, 0.09628847241401672, 0.08955223858356476, 0.09311848133802414, 0.08915598690509796, 0.09496764093637466], "val_loss": [2.3077731132507324, 2.3077731132507324, 2.3077731132507324, 2.3077731132507324, 2.3077731132507324, 2.3077731132507324], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}]