[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.878000020980835, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223759174346924, 1.8681567907333374, 1.3971633911132812, 1.1021500825881958, 0.9438490867614746, 0.8268281817436218, 0.7700234055519104, 0.7182450890541077, 0.6839274764060974, 0.655160665512085, 0.6316797733306885, 0.6046612858772278, 0.586663544178009, 0.5732303261756897, 0.5552444458007812, 0.5382086634635925, 0.5205084085464478, 0.5141545534133911, 0.49866363406181335, 0.4905571937561035, 0.48713892698287964, 0.4630949795246124, 0.46493759751319885, 0.4510720372200012, 0.4456666111946106, 0.4411585330963135, 0.43109801411628723, 0.4194287657737732, 0.41647717356681824, 0.4177640676498413, 0.39898860454559326, 0.3982110619544983, 0.3941095173358917, 0.3838343918323517, 0.38270825147628784, 0.38132011890411377, 0.3706604242324829, 0.3630581796169281, 0.35970449447631836, 0.3585955500602722, 0.3488880693912506, 0.3406795859336853, 0.3434852361679077, 0.34305644035339355, 0.32770219445228577, 0.3274216949939728, 0.3164256513118744, 0.31487780809402466, 0.31453031301498413, 0.3020377457141876, 0.3013147711753845, 0.29238083958625793, 0.30650538206100464, 0.2886098325252533, 0.28784143924713135, 0.28922179341316223, 0.27991431951522827, 0.27731093764305115, 0.27029022574424744, 0.2677718997001648, 0.2672445476055145], "accuracy": [0.27182671427726746, 0.4913485646247864, 0.5609562993049622, 0.6095628142356873, 0.6618676781654358, 0.6997754573822021, 0.7215691208839417, 0.7407211661338806, 0.7508915662765503, 0.7592127919197083, 0.7656848430633545, 0.7798177003860474, 0.7849689722061157, 0.789459764957428, 0.7991018295288086, 0.806630551815033, 0.81112140417099, 0.8088759779930115, 0.8210275769233704, 0.8181217908859253, 0.826310932636261, 0.8333113193511963, 0.8294808864593506, 0.8401796221733093, 0.8409721255302429, 0.8436138033866882, 0.8459912538528442, 0.8519350290298462, 0.8485008478164673, 0.8490291833877563, 0.856689989566803, 0.8573504090309143, 0.8615770936012268, 0.8644828796386719, 0.8605204224586487, 0.8614450097084045, 0.8671245574951172, 0.8726720213890076, 0.8732003569602966, 0.8689737319946289, 0.8762382864952087, 0.8798044919967651, 0.8717474341392517, 0.8825782537460327, 0.8840311765670776, 0.8845595121383667, 0.8885219693183899, 0.8865407705307007, 0.8887861371040344, 0.894069492816925, 0.8918240666389465, 0.8953903317451477, 0.8860124349594116, 0.8988244533538818, 0.8992207050323486, 0.8956544995307922, 0.9014661312103271, 0.89988112449646, 0.900409460067749, 0.9046360850334167, 0.9033153057098389], "val_loss": [2.0386126041412354, 1.5089809894561768, 1.0396978855133057, 0.8277255296707153, 0.7414798736572266, 0.6867381930351257, 0.6452507376670837, 0.6096968054771423, 0.5920496582984924, 0.5695558786392212, 0.550778865814209, 0.5315823554992676, 0.5166425704956055, 0.5040237307548523, 0.4927339255809784, 0.48035380244255066, 0.4752146899700165, 0.4640548527240753, 0.45926037430763245, 0.4498494863510132, 0.44989997148513794, 0.43486902117729187, 0.4302854835987091, 0.42699891328811646, 0.4222937822341919, 0.4179273545742035, 0.4156407117843628, 0.40615877509117126, 0.40567347407341003, 0.40483561158180237, 0.4008205533027649, 0.3957735300064087, 0.3910598158836365, 0.39842313528060913, 0.38378071784973145, 0.3824272155761719, 0.37983548641204834, 0.3832281529903412, 0.37993335723876953, 0.37290528416633606, 0.37028563022613525, 0.3697679340839386, 0.369826078414917, 0.3630952835083008, 0.3613884747028351, 0.3612003028392792, 0.3630628287792206, 0.35836127400398254, 0.35707563161849976, 0.3544061779975891, 0.35439038276672363, 0.35541149973869324, 0.34793493151664734, 0.355723112821579, 0.3566884696483612, 0.3480426073074341, 0.35176366567611694, 0.34468159079551697, 0.3469727337360382, 0.34757280349731445, 0.34379008412361145], "val_accuracy": [0.546999990940094, 0.6536666750907898, 0.6856666803359985, 0.7066666483879089, 0.7366666793823242, 0.7536666393280029, 0.7599999904632568, 0.7720000147819519, 0.7706666588783264, 0.7926666736602783, 0.7963333129882812, 0.7956666946411133, 0.8103333115577698, 0.809333324432373, 0.8220000267028809, 0.8226666450500488, 0.8243333101272583, 0.8330000042915344, 0.8349999785423279, 0.8370000123977661, 0.8333333134651184, 0.8429999947547913, 0.8463333249092102, 0.8446666598320007, 0.8476666808128357, 0.8479999899864197, 0.8450000286102295, 0.8506666421890259, 0.8496666550636292, 0.8529999852180481, 0.8556666374206543, 0.8556666374206543, 0.8586666584014893, 0.8526666760444641, 0.8576666712760925, 0.8610000014305115, 0.859000027179718, 0.8616666793823242, 0.8653333187103271, 0.8673333525657654, 0.8673333525657654, 0.8659999966621399, 0.8693333268165588, 0.8690000176429749, 0.8726666569709778, 0.8726666569709778, 0.8740000128746033, 0.8730000257492065, 0.871999979019165, 0.8759999871253967, 0.874666690826416, 0.871999979019165, 0.8806666731834412, 0.8776666522026062, 0.8706666827201843, 0.8820000290870667, 0.878333330154419, 0.878000020980835, 0.8806666731834412, 0.8793333172798157, 0.878333330154419]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8634285926818848, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2242298126220703, 1.8667538166046143, 1.3970224857330322, 1.0861010551452637, 0.9372579455375671, 0.8220123052597046, 0.7653437852859497, 0.7291218638420105, 0.6885276436805725, 0.6563896536827087, 0.6366398930549622, 0.605427622795105, 0.5803583264350891, 0.5689144134521484, 0.5568882822990417, 0.5407038331031799, 0.5279757380485535, 0.516270101070404, 0.4994441568851471, 0.49964308738708496, 0.4886537194252014, 0.4680812656879425, 0.46126797795295715, 0.45352688431739807, 0.44742050766944885, 0.43751975893974304, 0.443472295999527, 0.4350671172142029, 0.4096241891384125, 0.41701918840408325, 0.4172942042350769, 0.401876837015152, 0.4012075960636139, 0.3988727629184723, 0.3854442536830902, 0.38533124327659607, 0.3746299147605896, 0.3722147047519684, 0.366235613822937, 0.3576550781726837, 0.34932681918144226, 0.35328519344329834, 0.34860965609550476, 0.33865317702293396, 0.33324360847473145, 0.32564523816108704, 0.32018202543258667, 0.3202895522117615, 0.3167842924594879, 0.31426170468330383, 0.3045046627521515, 0.3025474548339844, 0.297246515750885, 0.29280465841293335, 0.2910844385623932, 0.28147923946380615, 0.27696701884269714, 0.2825944125652313, 0.2815248966217041, 0.2711039185523987, 0.2613562047481537, 0.26974937319755554, 0.2555254399776459, 0.25049567222595215, 0.25398796796798706, 0.25552302598953247, 0.2513355016708374, 0.24587593972682953, 0.24257612228393555, 0.23595109581947327, 0.23823785781860352, 0.2282130867242813, 0.23283721506595612, 0.22365017235279083, 0.22387371957302094, 0.21442976593971252, 0.2147977352142334, 0.2138126641511917, 0.20526409149169922, 0.20461148023605347, 0.20175884664058685, 0.19970287382602692, 0.19612157344818115, 0.1950652301311493, 0.19026581943035126, 0.1870604008436203], "accuracy": [0.26997753977775574, 0.48910316824913025, 0.570202112197876, 0.6203936338424683, 0.6692643165588379, 0.7040021419525146, 0.7260599732398987, 0.7359662055969238, 0.7516840696334839, 0.7619865536689758, 0.7703077793121338, 0.7759873270988464, 0.7890635132789612, 0.791969358921051, 0.7944789528846741, 0.8043851256370544, 0.8062343001365662, 0.8168009519577026, 0.8182538747787476, 0.8181217908859253, 0.8235371708869934, 0.8345000743865967, 0.8325188159942627, 0.8381983637809753, 0.8384625315666199, 0.8388587832450867, 0.8409721255302429, 0.8450667262077332, 0.8507462739944458, 0.8488970994949341, 0.8490291833877563, 0.8555012345314026, 0.8585391640663147, 0.8537842035293579, 0.8647470474243164, 0.8585391640663147, 0.8658037185668945, 0.8651432991027832, 0.8683133125305176, 0.8708229064941406, 0.8765024542808533, 0.8749174475669861, 0.8753136992454529, 0.8819178342819214, 0.878879964351654, 0.8819178342819214, 0.8862766027450562, 0.8835028409957886, 0.8889182209968567, 0.8835028409957886, 0.8926165699958801, 0.8908994793891907, 0.8893144726753235, 0.8949940800666809, 0.8910315632820129, 0.9002773761749268, 0.8994848728179932, 0.8953903317451477, 0.897899866104126, 0.9015982151031494, 0.9051644206047058, 0.9019944667816162, 0.9083344340324402, 0.9078060984611511, 0.9119006991386414, 0.9093911051750183, 0.9052965044975281, 0.9093911051750183, 0.9119006991386414, 0.9142781496047974, 0.9173160791397095, 0.9126931428909302, 0.9170519113540649, 0.9167877435684204, 0.919561505317688, 0.9207502603530884, 0.9224672913551331, 0.9232597947120667, 0.9261656403541565, 0.9260335564613342, 0.9269581437110901, 0.9251089692115784, 0.930260181427002, 0.9306564331054688, 0.9314489364624023, 0.9321093559265137], "val_loss": [2.0371546745300293, 1.5126984119415283, 1.039010763168335, 0.8345581293106079, 0.7399532198905945, 0.6820703148841858, 0.6402162909507751, 0.6031941175460815, 0.5813655853271484, 0.5540071725845337, 0.5325397253036499, 0.5140788555145264, 0.4985114634037018, 0.4832856357097626, 0.47504863142967224, 0.4653817415237427, 0.45147907733917236, 0.44633519649505615, 0.4332491159439087, 0.4335363805294037, 0.42528751492500305, 0.42067378759384155, 0.4054405093193054, 0.40267205238342285, 0.40450847148895264, 0.39464396238327026, 0.3944104313850403, 0.39014264941215515, 0.3872521221637726, 0.38296276330947876, 0.3758980333805084, 0.3901453912258148, 0.37033647298812866, 0.3723694980144501, 0.36509111523628235, 0.3672822117805481, 0.3574851155281067, 0.36376407742500305, 0.35756856203079224, 0.3565460741519928, 0.35148289799690247, 0.35581982135772705, 0.3571501076221466, 0.3495112359523773, 0.3465600609779358, 0.3446444869041443, 0.34035831689834595, 0.34002721309661865, 0.3392345905303955, 0.3401854932308197, 0.34140723943710327, 0.3362686038017273, 0.33220431208610535, 0.32993993163108826, 0.33557572960853577, 0.3302551805973053, 0.3368930518627167, 0.32915714383125305, 0.32848650217056274, 0.3320651948451996, 0.3314734697341919, 0.32880860567092896, 0.33293309807777405, 0.3291465640068054, 0.3299686312675476, 0.3211958706378937, 0.3284139931201935, 0.3210369646549225, 0.32444730401039124, 0.32202136516571045, 0.32266828417778015, 0.3196585178375244, 0.3208850920200348, 0.3211284279823303, 0.3185867965221405, 0.3217666447162628, 0.3212260603904724, 0.31967827677726746, 0.31951844692230225, 0.3185025155544281, 0.3180355131626129, 0.3225104510784149, 0.32549774646759033, 0.3227759301662445, 0.32387763261795044, 0.32463154196739197], "val_accuracy": [0.5440000295639038, 0.6656666398048401, 0.6813333630561829, 0.7129999995231628, 0.7353333234786987, 0.75, 0.762666642665863, 0.7753333449363708, 0.7886666655540466, 0.7886666655540466, 0.8006666898727417, 0.812666654586792, 0.8136666417121887, 0.8226666450500488, 0.8236666917800903, 0.8309999704360962, 0.8336666822433472, 0.8366666436195374, 0.8370000123977661, 0.8389999866485596, 0.847000002861023, 0.8463333249092102, 0.8550000190734863, 0.8539999723434448, 0.8493333458900452, 0.8556666374206543, 0.8569999933242798, 0.859333336353302, 0.8606666922569275, 0.8556666374206543, 0.8610000014305115, 0.862666666507721, 0.8606666922569275, 0.8643333315849304, 0.8663333058357239, 0.8656666874885559, 0.8659999966621399, 0.8686666488647461, 0.8696666955947876, 0.871666669845581, 0.8679999709129333, 0.8683333396911621, 0.8703333139419556, 0.871666669845581, 0.8723333477973938, 0.871999979019165, 0.8736666440963745, 0.8743333220481873, 0.8776666522026062, 0.8736666440963745, 0.8726666569709778, 0.8743333220481873, 0.878333330154419, 0.8766666650772095, 0.8769999742507935, 0.8790000081062317, 0.8796666860580444, 0.878333330154419, 0.878000020980835, 0.8799999952316284, 0.8790000081062317, 0.878333330154419, 0.8759999871253967, 0.8840000033378601, 0.8806666731834412, 0.8846666812896729, 0.8803333044052124, 0.8840000033378601, 0.8813333511352539, 0.8859999775886536, 0.8840000033378601, 0.8836666941642761, 0.8863333463668823, 0.8853333592414856, 0.8836666941642761, 0.8833333253860474, 0.8830000162124634, 0.8880000114440918, 0.8859999775886536, 0.8863333463668823, 0.8883333206176758, 0.8836666941642761, 0.8846666812896729, 0.8866666555404663, 0.887666642665863, 0.8859999775886536]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 2, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 0, 0, 1, 1, 1], [0, 3, 6], [0, 0, 7], [99, 65], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 3, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 6, 3, 3, 2, 6, 3, 3, 2, 16, 8, 8, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, sigma)))", "other_info": {"loss": [4.507177829742432, 2.402935743331909, 2.3050994873046875, 2.388035297393799, 2.391226053237915, 2.3446996212005615, 2.370804786682129], "accuracy": [0.09694888442754745, 0.10315678268671036, 0.10157178342342377, 0.10434553027153015, 0.09840179979801178, 0.09813763201236725, 0.1010434553027153], "val_loss": [2.374368190765381, 2.3032891750335693, 2.3093674182891846, 2.3861334323883057, 2.3337948322296143, 2.356450080871582, 2.386059522628784], "val_accuracy": [0.10000000149011612, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0], [0, 2, 3, 0, 3], [0, 1, 0, 2], [8, 49], [0, 1, 0, 0, 1, 1, 0, 1, 0, 0], [0, 1, 6, 0, 3, 5], [1, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 9, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 4, 0, 3, 1, 2, 0], [16, 99, 85, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 2, 1, 1, 0, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3038432598114014, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [2, 2, 3, 0, 3], [1, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 3, 4, 3, 5, 3, 7, 5, 6], [0, 2, 0, 3, 3, 3, 3, 0], [16, 16, 0], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 4, 2, 1, 7, 6, 2, 9, 5, 6, 7], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 3, 4, 0, 5, 5, 2, 6], [16, 99, 5, 99, 61, 1, 92, 33]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 1, 18, 10, 8, 3, 2, 1, 1, 1, 38, 21, 17, 8], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(alpha), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta)), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), grad), tf.math.square(tf.math.divide_no_nan(grad, tf.constant(0.0, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(tf.math.sqrt(sigma), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma), alpha), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.square(sigma)))))), grad)), tf.math.divide_no_nan(tf.math.add(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), grad), grad))), beta), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 4, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 2, 0, 9, 5], [0, 3, 3, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 9, 8, 3, 8], [0, 0, 0, 3, 0, 0, 3, 1, 1, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.0860000029206276, "mapping_values": [1, 9, 5, 4, 2, 8, 6, 2, 2, 2, 1, 1, 1, 14, 8, 6, 6], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), sigma)), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3085360527038574, 2.3088011741638184, 2.309566020965576, 2.3086607456207275, 2.309393882751465, 2.3090779781341553], "accuracy": [0.09377889335155487, 0.09800554811954498, 0.09074098616838455, 0.0944393053650856, 0.08955223858356476, 0.08955223858356476], "val_loss": [2.3088462352752686, 2.3087735176086426, 2.308729410171509, 2.3086986541748047, 2.3086745738983154, 2.3086540699005127], "val_accuracy": [0.09166666865348816, 0.09066666662693024, 0.09066666662693024, 0.08966666460037231, 0.09033333510160446, 0.09000000357627869]}}]