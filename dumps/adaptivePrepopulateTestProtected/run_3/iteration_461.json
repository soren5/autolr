[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8822857141494751, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585750579834, 1.8655762672424316, 1.394430160522461, 1.0773245096206665, 0.9378393888473511, 0.8425824046134949, 0.7776632308959961, 0.736241340637207, 0.6971188187599182, 0.6732122302055359, 0.644855797290802, 0.6276965141296387, 0.6100340485572815, 0.5899673104286194, 0.5746485590934753, 0.5484329462051392, 0.5425268411636353, 0.5357900857925415, 0.5214410424232483, 0.5127171874046326, 0.4895091950893402, 0.4932740032672882, 0.48551443219184875, 0.47113916277885437, 0.46571049094200134, 0.450914591550827, 0.438728004693985, 0.4414178729057312, 0.4245515465736389, 0.4182806611061096, 0.4126766324043274, 0.41352686285972595, 0.4031256139278412, 0.40064555406570435, 0.3982388377189636, 0.38566267490386963, 0.38400527834892273, 0.3741128146648407, 0.36422181129455566, 0.36170411109924316, 0.35991787910461426, 0.35666367411613464, 0.3521813750267029, 0.34583958983421326, 0.34736087918281555, 0.34181836247444153, 0.33650368452072144, 0.33141741156578064, 0.3230496346950531, 0.3225416839122772, 0.315096914768219, 0.3059031665325165, 0.3058394491672516, 0.3017319440841675, 0.29568877816200256, 0.2933836281299591, 0.28774771094322205, 0.2856961190700531, 0.2802303731441498, 0.2779994010925293, 0.274711549282074, 0.2719985842704773, 0.2586328387260437, 0.2598455548286438, 0.2622571289539337, 0.25739434361457825, 0.2502012252807617, 0.2544722855091095, 0.24556587636470795, 0.24580754339694977, 0.23948103189468384, 0.23949603736400604, 0.23484042286872864, 0.22871272265911102, 0.2256491780281067, 0.22479403018951416, 0.21744707226753235, 0.21390178799629211, 0.21272219717502594], "accuracy": [0.2785629332065582, 0.49451854825019836, 0.559899628162384, 0.6215823292732239, 0.6654338836669922, 0.6950204968452454, 0.7181349992752075, 0.7322678565979004, 0.7441553473472595, 0.7483819723129272, 0.7627789974212646, 0.7717606425285339, 0.7728173136711121, 0.78113853931427, 0.7882710099220276, 0.7993659973144531, 0.7976489067077637, 0.8074230551719666, 0.8128384351730347, 0.8198388814926147, 0.8212917447090149, 0.819970965385437, 0.8272355198860168, 0.8350284099578857, 0.8305375576019287, 0.8387266993522644, 0.846387505531311, 0.8433496356010437, 0.8504821062088013, 0.8524633646011353, 0.8535200357437134, 0.854708731174469, 0.856689989566803, 0.8551049828529358, 0.8593316674232483, 0.8615770936012268, 0.8628978729248047, 0.8702945709228516, 0.8691058158874512, 0.871879518032074, 0.8722757697105408, 0.8691058158874512, 0.8733324408531189, 0.8800686597824097, 0.8795403242111206, 0.8755778670310974, 0.8768987059593201, 0.8829745054244995, 0.8824461698532104, 0.8823140859603882, 0.887201189994812, 0.8897107243537903, 0.8889182209968567, 0.8927486538887024, 0.8902390599250793, 0.8953903317451477, 0.8980319499969482, 0.8976356983184814, 0.900409460067749, 0.89552241563797, 0.9025228023529053, 0.8989565372467041, 0.9056927561759949, 0.9085986018180847, 0.9030511379241943, 0.9066173434257507, 0.9101836085319519, 0.9083344340324402, 0.909259021282196, 0.9099194407463074, 0.9126931428909302, 0.9140139818191528, 0.9119006991386414, 0.9171839952468872, 0.9169198274612427, 0.9185048341751099, 0.9218068718910217, 0.9185048341751099, 0.9196935892105103], "val_loss": [2.033445358276367, 1.5042319297790527, 1.0271512269973755, 0.8147247433662415, 0.7278039455413818, 0.68117356300354, 0.6306353211402893, 0.5966841578483582, 0.5751398801803589, 0.5460951328277588, 0.5314993858337402, 0.509799063205719, 0.4957965612411499, 0.4792602062225342, 0.46671679615974426, 0.45267683267593384, 0.4441072940826416, 0.4356139600276947, 0.42943108081817627, 0.4255247414112091, 0.41811680793762207, 0.4163394272327423, 0.39929893612861633, 0.3969916105270386, 0.39089226722717285, 0.387652188539505, 0.3844633102416992, 0.3824205696582794, 0.3749690353870392, 0.3701930642127991, 0.36967378854751587, 0.36689504981040955, 0.3585263788700104, 0.3587398827075958, 0.36267170310020447, 0.3561091423034668, 0.35379692912101746, 0.3499273955821991, 0.34701839089393616, 0.3467637896537781, 0.3424672484397888, 0.33951225876808167, 0.3386255204677582, 0.34044384956359863, 0.33945050835609436, 0.33684298396110535, 0.3322163224220276, 0.33181649446487427, 0.32827115058898926, 0.3312568664550781, 0.3297465741634369, 0.3256674110889435, 0.3234780728816986, 0.32119208574295044, 0.3232716917991638, 0.3209094703197479, 0.31944912672042847, 0.3157532513141632, 0.3144265413284302, 0.31676045060157776, 0.31425556540489197, 0.3131799101829529, 0.3147056996822357, 0.3154993951320648, 0.31771615147590637, 0.31545644998550415, 0.3127000629901886, 0.31382524967193604, 0.31026333570480347, 0.3147730529308319, 0.30829918384552, 0.3107443153858185, 0.31316936016082764, 0.30297672748565674, 0.30325081944465637, 0.30436232686042786, 0.3072424829006195, 0.30681705474853516, 0.3061434030532837], "val_accuracy": [0.5526666641235352, 0.6666666865348816, 0.687333345413208, 0.7083333134651184, 0.731333315372467, 0.7446666955947876, 0.7606666684150696, 0.762666642665863, 0.7873333096504211, 0.7889999747276306, 0.7973333597183228, 0.8056666851043701, 0.8193333148956299, 0.8259999752044678, 0.8289999961853027, 0.8410000205039978, 0.8453333377838135, 0.8450000286102295, 0.8489999771118164, 0.847000002861023, 0.8516666889190674, 0.856333315372467, 0.859333336353302, 0.856333315372467, 0.8633333444595337, 0.8640000224113464, 0.8656666874885559, 0.8646666407585144, 0.8679999709129333, 0.8696666955947876, 0.8640000224113464, 0.8686666488647461, 0.8713333606719971, 0.8709999918937683, 0.8703333139419556, 0.8723333477973938, 0.871999979019165, 0.874666690826416, 0.8723333477973938, 0.8759999871253967, 0.8726666569709778, 0.875333309173584, 0.8790000081062317, 0.8756666779518127, 0.8726666569709778, 0.8769999742507935, 0.8796666860580444, 0.8796666860580444, 0.8806666731834412, 0.8793333172798157, 0.8813333511352539, 0.8840000033378601, 0.8840000033378601, 0.8843333125114441, 0.8809999823570251, 0.8856666684150696, 0.8866666555404663, 0.8833333253860474, 0.8866666555404663, 0.8843333125114441, 0.8856666684150696, 0.8880000114440918, 0.887333333492279, 0.8883333206176758, 0.8866666555404663, 0.8896666765213013, 0.8863333463668823, 0.8853333592414856, 0.890999972820282, 0.8870000243186951, 0.8883333206176758, 0.8883333206176758, 0.8916666507720947, 0.8939999938011169, 0.8896666765213013, 0.8916666507720947, 0.890999972820282, 0.8926666378974915, 0.8913333415985107]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8708571195602417, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222952365875244, 1.8670203685760498, 1.3852986097335815, 1.0950729846954346, 0.9292481541633606, 0.8279947638511658, 0.7664409279823303, 0.7268669605255127, 0.6761034727096558, 0.6470744013786316, 0.6177042126655579, 0.6023232936859131, 0.5851806402206421, 0.5585142970085144, 0.5451116561889648, 0.5286462903022766, 0.5146043300628662, 0.5078393220901489, 0.491066575050354, 0.4847569167613983, 0.4748995304107666, 0.46610134840011597, 0.4566554129123688, 0.4498834013938904, 0.4465748071670532, 0.4290561378002167, 0.42014989256858826, 0.4092346727848053, 0.4061858355998993, 0.4075026214122772, 0.3949947655200958, 0.3854931890964508, 0.3889497220516205, 0.3756582736968994, 0.3755919635295868, 0.3678704798221588, 0.3595268428325653, 0.35614871978759766, 0.3489026427268982, 0.3437415659427643, 0.3501078486442566, 0.333246111869812, 0.33335989713668823, 0.3280178904533386, 0.3226536214351654, 0.31229668855667114, 0.3181533217430115, 0.31301483511924744, 0.30100181698799133, 0.2957911789417267, 0.29393473267555237, 0.2924579381942749, 0.2852461040019989, 0.28843823075294495, 0.2734825611114502, 0.2736230790615082, 0.2697696387767792, 0.2681640088558197, 0.2662714421749115, 0.2626712918281555, 0.26064491271972656, 0.24745522439479828, 0.2505584955215454, 0.2504042983055115, 0.24682654440402985, 0.2403583973646164, 0.23339371383190155, 0.230169877409935, 0.22733888030052185], "accuracy": [0.2723550498485565, 0.48566898703575134, 0.5717870593070984, 0.6174877882003784, 0.6684718132019043, 0.7028133869171143, 0.7294940948486328, 0.7408532500267029, 0.7565711140632629, 0.7662131786346436, 0.7729493975639343, 0.7862898111343384, 0.7868181467056274, 0.7997622489929199, 0.8070268034934998, 0.8138951063156128, 0.8149517774581909, 0.8164047002792358, 0.8269713521003723, 0.8273676037788391, 0.8317263126373291, 0.8393871188163757, 0.837537944316864, 0.8422929644584656, 0.8400475382804871, 0.8467837572097778, 0.8512746095657349, 0.8560295701026917, 0.8569541573524475, 0.8551049828529358, 0.8602562546730042, 0.863029956817627, 0.8619733452796936, 0.8693699836730957, 0.8638224601745605, 0.8725399374961853, 0.8737286925315857, 0.8722757697105408, 0.8766345381736755, 0.8767666220664978, 0.8796724081039429, 0.880729079246521, 0.8798044919967651, 0.8811253309249878, 0.887597382068634, 0.8911636471748352, 0.8869370222091675, 0.8883898854255676, 0.8947299122810364, 0.8948619961738586, 0.8918240666389465, 0.8947299122810364, 0.8942015767097473, 0.9013340473175049, 0.8976356983184814, 0.8993527889251709, 0.9002773761749268, 0.9019944667816162, 0.9078060984611511, 0.9008057117462158, 0.9072777628898621, 0.9145423173904419, 0.9070135951042175, 0.9103156924247742, 0.9119006991386414, 0.9093911051750183, 0.9169198274612427, 0.9153348207473755, 0.9190331697463989], "val_loss": [2.0400397777557373, 1.514572262763977, 1.0418612957000732, 0.838977038860321, 0.7509336471557617, 0.6900922656059265, 0.6466666460037231, 0.6160076856613159, 0.5884918570518494, 0.5680158138275146, 0.5528378486633301, 0.537426769733429, 0.5207582712173462, 0.5129294991493225, 0.5006163120269775, 0.49170225858688354, 0.4819210469722748, 0.4751221835613251, 0.4711766242980957, 0.4626568555831909, 0.4572541415691376, 0.45322009921073914, 0.4481823742389679, 0.4414197504520416, 0.4413124620914459, 0.435009241104126, 0.4256436228752136, 0.4249890446662903, 0.42342618107795715, 0.41729357838630676, 0.41469377279281616, 0.4100249409675598, 0.40692704916000366, 0.4066404700279236, 0.40590977668762207, 0.3991028666496277, 0.394124835729599, 0.39687004685401917, 0.3928205668926239, 0.39803624153137207, 0.38937875628471375, 0.38604190945625305, 0.3864595592021942, 0.3791118264198303, 0.38116979598999023, 0.3887377977371216, 0.38376447558403015, 0.3796890079975128, 0.37377792596817017, 0.371808797121048, 0.38015493750572205, 0.37650635838508606, 0.37074193358421326, 0.3675040006637573, 0.3703061640262604, 0.36934223771095276, 0.36662057042121887, 0.37618759274482727, 0.36342039704322815, 0.3688907027244568, 0.36350831389427185, 0.36966532468795776, 0.3625052869319916, 0.3559432327747345, 0.36096280813217163, 0.35902270674705505, 0.35703718662261963, 0.35849303007125854, 0.356493204832077], "val_accuracy": [0.5479999780654907, 0.6520000100135803, 0.6743333339691162, 0.7039999961853027, 0.7289999723434448, 0.746999979019165, 0.7633333206176758, 0.7793333530426025, 0.7863333225250244, 0.7996666431427002, 0.8003333210945129, 0.8113333582878113, 0.8153333067893982, 0.8109999895095825, 0.8166666626930237, 0.8216666579246521, 0.8259999752044678, 0.8299999833106995, 0.8299999833106995, 0.8353333473205566, 0.8333333134651184, 0.8376666903495789, 0.8413333296775818, 0.8349999785423279, 0.8393333554267883, 0.8416666388511658, 0.843666672706604, 0.8426666855812073, 0.8433333039283752, 0.8456666469573975, 0.8483333587646484, 0.8450000286102295, 0.847000002861023, 0.8503333330154419, 0.846666693687439, 0.8513333201408386, 0.8516666889190674, 0.8489999771118164, 0.8526666760444641, 0.8503333330154419, 0.8536666631698608, 0.8529999852180481, 0.8546666502952576, 0.8560000061988831, 0.8573333621025085, 0.8583333492279053, 0.8566666841506958, 0.856333315372467, 0.859000027179718, 0.8603333234786987, 0.8546666502952576, 0.8546666502952576, 0.862333357334137, 0.8613333106040955, 0.8616666793823242, 0.8640000224113464, 0.862666666507721, 0.8586666584014893, 0.8619999885559082, 0.8633333444595337, 0.8659999966621399, 0.8633333444595337, 0.8656666874885559, 0.8713333606719971, 0.8640000224113464, 0.8656666874885559, 0.8686666488647461, 0.8656666874885559, 0.8663333058357239]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 2, 3], [0, 1, 0, 2], [39, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 76], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 3, 9, 9, 2, 2, 8], [0, 0, 0, 4, 0, 0, 3, 1, 2, 4], [95, 66, 12, 99, 61, 1]], "fitness": -0.7725714445114136, "mapping_values": [1, 6, 3, 3, 2, 6, 3, 3, 2, 2, 1, 1, 1, 12, 8, 4, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), tf.constant(1.0, shape=shape, dtype=tf.float32))), grad), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.296252965927124, 2.2629575729370117, 2.2192845344543457, 2.1489014625549316, 2.0270304679870605, 1.8299243450164795, 1.578038215637207, 1.3656140565872192, 1.2298322916030884, 1.1379070281982422, 1.0552191734313965, 1.0043861865997314, 0.961536705493927, 0.9316577911376953, 0.8982093334197998, 0.8839373588562012, 0.85442715883255, 0.8463128209114075, 0.8161711692810059, 0.8057735562324524, 0.7912263870239258, 0.7832148671150208, 0.7761955261230469, 0.7620290517807007, 0.7479994893074036, 0.7555991411209106, 0.7331190705299377, 0.7243634462356567, 0.720923900604248, 0.7108277082443237, 0.7010044455528259, 0.7040136456489563, 0.6919237375259399, 0.6901102662086487, 0.684552788734436, 0.6781078577041626, 0.6826485991477966, 0.6737246513366699, 0.6722850799560547, 0.6628327965736389, 0.6521022319793701, 0.6522986888885498, 0.6572653651237488, 0.6473325490951538, 0.6393749713897705, 0.6453366279602051], "accuracy": [0.11610091477632523, 0.20353981852531433, 0.2903183102607727, 0.3553031384944916, 0.40628713369369507, 0.4511953592300415, 0.5000660419464111, 0.5458987951278687, 0.5793157815933228, 0.6026945114135742, 0.6287148594856262, 0.6419231295585632, 0.6637167930603027, 0.6635847091674805, 0.6765288710594177, 0.6769251227378845, 0.6889446377754211, 0.6917183995246887, 0.7046625018119812, 0.7043983340263367, 0.7111346125602722, 0.718399167060852, 0.7154933214187622, 0.7228899598121643, 0.7255316376686096, 0.7213049530982971, 0.7272487282752991, 0.735041618347168, 0.7342491149902344, 0.7364945411682129, 0.7382115721702576, 0.7364945411682129, 0.7498348951339722, 0.7427024245262146, 0.744419515132904, 0.7469290494918823, 0.7467969655990601, 0.7497028112411499, 0.7483819723129272, 0.7582882046699524, 0.7567031979560852, 0.7541936039924622, 0.7573636174201965, 0.7622507214546204, 0.76106196641922, 0.7618544697761536], "val_loss": [2.2734787464141846, 2.234703540802002, 2.1751456260681152, 2.0723519325256348, 1.8940544128417969, 1.6261311769485474, 1.3470590114593506, 1.1484735012054443, 1.0245298147201538, 0.9413231015205383, 0.8818241357803345, 0.8403134942054749, 0.8070896863937378, 0.7778640389442444, 0.7552350163459778, 0.7332236170768738, 0.7181126475334167, 0.7001680731773376, 0.6859003305435181, 0.6752562522888184, 0.6628924608230591, 0.6588977575302124, 0.6499165296554565, 0.6413019299507141, 0.6297087669372559, 0.6320475339889526, 0.6241782903671265, 0.6136859655380249, 0.6166726350784302, 0.6032447814941406, 0.5982186794281006, 0.5944951772689819, 0.5896772742271423, 0.5853559374809265, 0.5862453579902649, 0.5751941204071045, 0.5801206231117249, 0.5748109817504883, 0.5672057867050171, 0.5676054954528809, 0.5592986941337585, 0.5618305802345276, 0.5559059381484985, 0.5557397603988647, 0.5485092997550964, 0.5466810464859009], "val_accuracy": [0.22466666996479034, 0.4126666784286499, 0.44966667890548706, 0.4959999918937683, 0.5479999780654907, 0.612333357334137, 0.6306666731834412, 0.6496666669845581, 0.67166668176651, 0.6850000023841858, 0.6940000057220459, 0.7020000219345093, 0.7153333425521851, 0.7153333425521851, 0.7243333458900452, 0.7369999885559082, 0.7333333492279053, 0.7443333268165588, 0.7526666522026062, 0.7546666860580444, 0.7590000033378601, 0.7603333592414856, 0.762666642665863, 0.7639999985694885, 0.7693333625793457, 0.7710000276565552, 0.7673333287239075, 0.7743333578109741, 0.7639999985694885, 0.7756666541099548, 0.7786666750907898, 0.781000018119812, 0.7836666703224182, 0.784333348274231, 0.7773333191871643, 0.7926666736602783, 0.784333348274231, 0.7873333096504211, 0.7919999957084656, 0.7870000004768372, 0.8029999732971191, 0.7903333306312561, 0.796999990940094, 0.7996666431427002, 0.8023333549499512, 0.800000011920929]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 0, 1], [8, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 1, 0, 2, 5], [0, 1, 2, 3], [16, 16], [0, 1, 1], [4], [0, 3], [12], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1], [6, 6, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 4, 4, 3, 1, 0, 3, 4, 2, 0], [16, 99, 61, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 1, 3, 1, 2, 1, 16, 8, 8, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), alpha), tf.math.add(beta, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(grad, sigma))), tf.math.subtract(alpha, tf.constant(1.0, shape=shape, dtype=tf.float32)))), sigma), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 0], [39, 39, 81], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [4, 0, 0, 3, 0, 4, 3, 1, 2, 0], [16, 99, 96, 30, 63, 17]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 3, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1], [0, 2, 3, 0, 8, 9], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [6, 3, 3, 6, 8, 1, 2, 1, 6, 2, 8], [0, 0, 0, 3, 0, 0, 3, 4, 2, 1], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 6, 2, 2, 9, 5, 4, 2, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), grad), tf.math.add(beta, tf.math.sqrt(alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}]