[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8822857141494751, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585750579834, 1.8655762672424316, 1.394430160522461, 1.0773245096206665, 0.9378393888473511, 0.8425824046134949, 0.7776632308959961, 0.736241340637207, 0.6971188187599182, 0.6732122302055359, 0.644855797290802, 0.6276965141296387, 0.6100340485572815, 0.5899673104286194, 0.5746485590934753, 0.5484329462051392, 0.5425268411636353, 0.5357900857925415, 0.5214410424232483, 0.5127171874046326, 0.4895091950893402, 0.4932740032672882, 0.48551443219184875, 0.47113916277885437, 0.46571049094200134, 0.450914591550827, 0.438728004693985, 0.4414178729057312, 0.4245515465736389, 0.4182806611061096, 0.4126766324043274, 0.41352686285972595, 0.4031256139278412, 0.40064555406570435, 0.3982388377189636, 0.38566267490386963, 0.38400527834892273, 0.3741128146648407, 0.36422181129455566, 0.36170411109924316, 0.35991787910461426, 0.35666367411613464, 0.3521813750267029, 0.34583958983421326, 0.34736087918281555, 0.34181836247444153, 0.33650368452072144, 0.33141741156578064, 0.3230496346950531, 0.3225416839122772, 0.315096914768219, 0.3059031665325165, 0.3058394491672516, 0.3017319440841675, 0.29568877816200256, 0.2933836281299591, 0.28774771094322205, 0.2856961190700531, 0.2802303731441498, 0.2779994010925293, 0.274711549282074, 0.2719985842704773, 0.2586328387260437, 0.2598455548286438, 0.2622571289539337, 0.25739434361457825, 0.2502012252807617, 0.2544722855091095, 0.24556587636470795, 0.24580754339694977, 0.23948103189468384, 0.23949603736400604, 0.23484042286872864, 0.22871272265911102, 0.2256491780281067, 0.22479403018951416, 0.21744707226753235, 0.21390178799629211, 0.21272219717502594], "accuracy": [0.2785629332065582, 0.49451854825019836, 0.559899628162384, 0.6215823292732239, 0.6654338836669922, 0.6950204968452454, 0.7181349992752075, 0.7322678565979004, 0.7441553473472595, 0.7483819723129272, 0.7627789974212646, 0.7717606425285339, 0.7728173136711121, 0.78113853931427, 0.7882710099220276, 0.7993659973144531, 0.7976489067077637, 0.8074230551719666, 0.8128384351730347, 0.8198388814926147, 0.8212917447090149, 0.819970965385437, 0.8272355198860168, 0.8350284099578857, 0.8305375576019287, 0.8387266993522644, 0.846387505531311, 0.8433496356010437, 0.8504821062088013, 0.8524633646011353, 0.8535200357437134, 0.854708731174469, 0.856689989566803, 0.8551049828529358, 0.8593316674232483, 0.8615770936012268, 0.8628978729248047, 0.8702945709228516, 0.8691058158874512, 0.871879518032074, 0.8722757697105408, 0.8691058158874512, 0.8733324408531189, 0.8800686597824097, 0.8795403242111206, 0.8755778670310974, 0.8768987059593201, 0.8829745054244995, 0.8824461698532104, 0.8823140859603882, 0.887201189994812, 0.8897107243537903, 0.8889182209968567, 0.8927486538887024, 0.8902390599250793, 0.8953903317451477, 0.8980319499969482, 0.8976356983184814, 0.900409460067749, 0.89552241563797, 0.9025228023529053, 0.8989565372467041, 0.9056927561759949, 0.9085986018180847, 0.9030511379241943, 0.9066173434257507, 0.9101836085319519, 0.9083344340324402, 0.909259021282196, 0.9099194407463074, 0.9126931428909302, 0.9140139818191528, 0.9119006991386414, 0.9171839952468872, 0.9169198274612427, 0.9185048341751099, 0.9218068718910217, 0.9185048341751099, 0.9196935892105103], "val_loss": [2.033445358276367, 1.5042319297790527, 1.0271512269973755, 0.8147247433662415, 0.7278039455413818, 0.68117356300354, 0.6306353211402893, 0.5966841578483582, 0.5751398801803589, 0.5460951328277588, 0.5314993858337402, 0.509799063205719, 0.4957965612411499, 0.4792602062225342, 0.46671679615974426, 0.45267683267593384, 0.4441072940826416, 0.4356139600276947, 0.42943108081817627, 0.4255247414112091, 0.41811680793762207, 0.4163394272327423, 0.39929893612861633, 0.3969916105270386, 0.39089226722717285, 0.387652188539505, 0.3844633102416992, 0.3824205696582794, 0.3749690353870392, 0.3701930642127991, 0.36967378854751587, 0.36689504981040955, 0.3585263788700104, 0.3587398827075958, 0.36267170310020447, 0.3561091423034668, 0.35379692912101746, 0.3499273955821991, 0.34701839089393616, 0.3467637896537781, 0.3424672484397888, 0.33951225876808167, 0.3386255204677582, 0.34044384956359863, 0.33945050835609436, 0.33684298396110535, 0.3322163224220276, 0.33181649446487427, 0.32827115058898926, 0.3312568664550781, 0.3297465741634369, 0.3256674110889435, 0.3234780728816986, 0.32119208574295044, 0.3232716917991638, 0.3209094703197479, 0.31944912672042847, 0.3157532513141632, 0.3144265413284302, 0.31676045060157776, 0.31425556540489197, 0.3131799101829529, 0.3147056996822357, 0.3154993951320648, 0.31771615147590637, 0.31545644998550415, 0.3127000629901886, 0.31382524967193604, 0.31026333570480347, 0.3147730529308319, 0.30829918384552, 0.3107443153858185, 0.31316936016082764, 0.30297672748565674, 0.30325081944465637, 0.30436232686042786, 0.3072424829006195, 0.30681705474853516, 0.3061434030532837], "val_accuracy": [0.5526666641235352, 0.6666666865348816, 0.687333345413208, 0.7083333134651184, 0.731333315372467, 0.7446666955947876, 0.7606666684150696, 0.762666642665863, 0.7873333096504211, 0.7889999747276306, 0.7973333597183228, 0.8056666851043701, 0.8193333148956299, 0.8259999752044678, 0.8289999961853027, 0.8410000205039978, 0.8453333377838135, 0.8450000286102295, 0.8489999771118164, 0.847000002861023, 0.8516666889190674, 0.856333315372467, 0.859333336353302, 0.856333315372467, 0.8633333444595337, 0.8640000224113464, 0.8656666874885559, 0.8646666407585144, 0.8679999709129333, 0.8696666955947876, 0.8640000224113464, 0.8686666488647461, 0.8713333606719971, 0.8709999918937683, 0.8703333139419556, 0.8723333477973938, 0.871999979019165, 0.874666690826416, 0.8723333477973938, 0.8759999871253967, 0.8726666569709778, 0.875333309173584, 0.8790000081062317, 0.8756666779518127, 0.8726666569709778, 0.8769999742507935, 0.8796666860580444, 0.8796666860580444, 0.8806666731834412, 0.8793333172798157, 0.8813333511352539, 0.8840000033378601, 0.8840000033378601, 0.8843333125114441, 0.8809999823570251, 0.8856666684150696, 0.8866666555404663, 0.8833333253860474, 0.8866666555404663, 0.8843333125114441, 0.8856666684150696, 0.8880000114440918, 0.887333333492279, 0.8883333206176758, 0.8866666555404663, 0.8896666765213013, 0.8863333463668823, 0.8853333592414856, 0.890999972820282, 0.8870000243186951, 0.8883333206176758, 0.8883333206176758, 0.8916666507720947, 0.8939999938011169, 0.8896666765213013, 0.8916666507720947, 0.890999972820282, 0.8926666378974915, 0.8913333415985107]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8591428399085999, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224364995956421, 1.8661563396453857, 1.3849196434020996, 1.0772192478179932, 0.9289048314094543, 0.8348633646965027, 0.7651486396789551, 0.7263988256454468, 0.6923041939735413, 0.6608338356018066, 0.6343739032745361, 0.6179079413414001, 0.5903421640396118, 0.5778967142105103, 0.5635690093040466, 0.5447074770927429, 0.5313819050788879, 0.5154451131820679, 0.5017644762992859, 0.5038021206855774, 0.4872468411922455, 0.4773365557193756, 0.47334080934524536, 0.45990005135536194, 0.45069217681884766, 0.4400632083415985, 0.43676093220710754, 0.4290768802165985, 0.4186692535877228, 0.40652140974998474, 0.4107484519481659, 0.40128469467163086, 0.3975833058357239, 0.38767921924591064, 0.38226351141929626, 0.3765583336353302, 0.3696511685848236, 0.3739079236984253, 0.3630966544151306, 0.36146143078804016, 0.35386547446250916, 0.34539327025413513, 0.34191009402275085, 0.34099164605140686, 0.32878464460372925, 0.3259190022945404, 0.31977978348731995, 0.32531049847602844, 0.3169443905353546, 0.3137912154197693, 0.30200308561325073, 0.29874831438064575, 0.29141154885292053, 0.2910228371620178, 0.2843729555606842, 0.2825791835784912, 0.28447839617729187, 0.27400919795036316, 0.26818960905075073], "accuracy": [0.2744683623313904, 0.49148064851760864, 0.5752212405204773, 0.6229031682014465, 0.668339729309082, 0.7008321285247803, 0.722757875919342, 0.7396644949913025, 0.746268630027771, 0.7609298825263977, 0.7666094303131104, 0.7700436115264893, 0.7798177003860474, 0.7872143983840942, 0.7943468689918518, 0.8047813773155212, 0.8047813773155212, 0.8121780753135681, 0.8138951063156128, 0.8231409192085266, 0.8247259259223938, 0.8277638554573059, 0.8341038227081299, 0.837141752243042, 0.8368775844573975, 0.844010055065155, 0.8438779711723328, 0.8448025584220886, 0.8461233377456665, 0.8521991968154907, 0.8525954484939575, 0.8589354157447815, 0.8588033318519592, 0.8638224601745605, 0.8589354157447815, 0.8681812286376953, 0.8709549307823181, 0.8654074668884277, 0.8701624870300293, 0.870030403137207, 0.8766345381736755, 0.8746532797813416, 0.8778232932090759, 0.878351628780365, 0.8836349248886108, 0.8849557638168335, 0.8883898854255676, 0.8850878477096558, 0.889050304889679, 0.8889182209968567, 0.8918240666389465, 0.8911636471748352, 0.8923524022102356, 0.8973715305328369, 0.8994848728179932, 0.8985602855682373, 0.8960506916046143, 0.9026548862457275, 0.9025228023529053], "val_loss": [2.0414018630981445, 1.5160423517227173, 1.0451076030731201, 0.8410983681678772, 0.753252387046814, 0.7018144726753235, 0.6608619093894958, 0.6275248527526855, 0.5998683571815491, 0.5796882510185242, 0.5585488080978394, 0.5463317036628723, 0.5289143919944763, 0.5179935693740845, 0.5045018196105957, 0.4910455048084259, 0.4916221499443054, 0.4781477153301239, 0.46824145317077637, 0.4657883644104004, 0.4571526348590851, 0.4512064754962921, 0.4443337917327881, 0.4341519773006439, 0.4339779317378998, 0.4288162291049957, 0.4235600233078003, 0.41968271136283875, 0.41507306694984436, 0.4130793511867523, 0.41091862320899963, 0.40211430191993713, 0.4064979553222656, 0.39871281385421753, 0.3967393934726715, 0.39620649814605713, 0.3919490575790405, 0.38724297285079956, 0.39102527499198914, 0.38490810990333557, 0.38557812571525574, 0.3742749094963074, 0.3788369596004486, 0.37208935618400574, 0.37393519282341003, 0.3724144995212555, 0.3745615780353546, 0.3696557581424713, 0.3642635941505432, 0.3614071309566498, 0.36769527196884155, 0.3597293198108673, 0.36136987805366516, 0.3576301336288452, 0.35732561349868774, 0.3546907901763916, 0.35553064942359924, 0.3557766377925873, 0.35790178179740906], "val_accuracy": [0.54666668176651, 0.6553333401679993, 0.6803333163261414, 0.7096666693687439, 0.7329999804496765, 0.7429999709129333, 0.7506666779518127, 0.7633333206176758, 0.7793333530426025, 0.781333327293396, 0.7926666736602783, 0.8026666641235352, 0.8080000281333923, 0.809333324432373, 0.8236666917800903, 0.8240000009536743, 0.8226666450500488, 0.8289999961853027, 0.8346666693687439, 0.8343333601951599, 0.8396666646003723, 0.843999981880188, 0.8399999737739563, 0.8489999771118164, 0.8493333458900452, 0.8523333072662354, 0.8556666374206543, 0.8560000061988831, 0.8569999933242798, 0.8600000143051147, 0.859000027179718, 0.8629999756813049, 0.859000027179718, 0.8646666407585144, 0.8646666407585144, 0.8629999756813049, 0.8663333058357239, 0.8683333396911621, 0.8703333139419556, 0.8693333268165588, 0.8650000095367432, 0.8740000128746033, 0.8730000257492065, 0.875, 0.8759999871253967, 0.8759999871253967, 0.8769999742507935, 0.875, 0.8803333044052124, 0.8813333511352539, 0.878000020980835, 0.8769999742507935, 0.8769999742507935, 0.8836666941642761, 0.8830000162124634, 0.8823333382606506, 0.8806666731834412, 0.8820000290870667, 0.8826666474342346]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [2, 1, 3, 0, 3, 0], [0, 1, 0, 2, 3], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 1, 0, 3], [16, 16], [0, 0, 1], [0, 5], [3], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 5, 8], [0, 4, 0, 4, 0, 0, 1, 1, 2, 0], [16, 37, 96, 99, 21, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 2, 3, 2, 1, 0, 12, 6, 6, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.sqrt(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), tf.math.subtract(grad, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.constant(1.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.311056613922119, 2.3184328079223633, 2.325404405593872, 2.3314003944396973, 2.339693069458008, 2.347703695297241, 2.3569529056549072, 2.364947557449341, 2.374253273010254, 2.388559579849243, 2.4032371044158936, 2.4201319217681885, 2.4374167919158936, 2.4620048999786377, 2.489302396774292, 2.5320687294006348, 2.5843188762664795, 2.660033941268921, 2.7849783897399902, 3.07035756111145, 4.173612594604492, 7.371134281158447], "accuracy": [0.0952318087220192, 0.07898560166358948, 0.08321225643157959, 0.07555144280195236, 0.0738343670964241, 0.07687227427959442, 0.07000396400690079, 0.07198520749807358, 0.07251353561878204, 0.06828688085079193, 0.07053229212760925, 0.07211729139089584, 0.07449477910995483, 0.07330603897571564, 0.07687227427959442, 0.07832518965005875, 0.08294808864593506, 0.08770307898521423, 0.09232597798109055, 0.09774138033390045, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3157715797424316, 2.3228156566619873, 2.3302066326141357, 2.3379786014556885, 2.346195936203003, 2.3551242351531982, 2.364793300628662, 2.3754162788391113, 2.387268543243408, 2.40085506439209, 2.416504144668579, 2.434645175933838, 2.45620059967041, 2.4826929569244385, 2.516087293624878, 2.5612971782684326, 2.6244020462036133, 2.721682548522949, 2.9015045166015625, 3.4093434810638428, 5.951156139373779, 9.032267570495605], "val_accuracy": [0.08966666460037231, 0.08966666460037231, 0.09066666662693024, 0.09066666662693024, 0.09133332967758179, 0.09133332967758179, 0.09166666865348816, 0.09133332967758179, 0.09133332967758179, 0.09233333170413971, 0.09433333575725555, 0.09433333575725555, 0.0949999988079071, 0.09566666930913925, 0.09733333438634872, 0.09866666793823242, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 9, 3, 0, 3], [0, 2, 2, 2], [39, 39], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5, 1, 6], [0, 2, 0, 3, 5, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 0, 2, 4, 1, 4, 2, 8, 7, 1, 3], [0, 0, 0, 3, 0, 0, 3, 1, 2, 4, 5, 3, 3], [16, 99, 50, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 0, 1, 14, 8, 6, 2, 2, 1, 1, 1, 27, 14, 13, 5], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(beta), tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, grad)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.negative(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.math.subtract(sigma, alpha), beta))), grad)))), tf.math.multiply(grad, sigma)), sigma)", "other_info": {"loss": [2.303802728652954, 2.302584648132324, 2.302584648132324, 2.3025851249694824, 2.302584648132324, 2.3025851249694824], "accuracy": [0.10381719470024109, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.302586555480957, 2.302586793899536, 2.302586555480957, 2.302586555480957, 2.302586793899536, 2.3025870323181152], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 4, 3], [0, 1, 0, 2], [39, 39], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 9, 5], [0, 2, 0, 3], [10, 16], [1, 1], [2], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 0, 1, 5, 2, 3, 4, 3, 3, 2, 6, 5, 8, 0, 7, 1], [0, 0, 0, 3, 0, 0, 3, 4, 2, 1, 5, 5, 7, 2, 1, 5, 0, 7, 7], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 2, 1, 1, 1, 1, 0, 1, 1, 45, 26, 19, 6], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), tf.math.negative(tf.math.subtract(tf.math.square(sigma), tf.math.add(tf.math.multiply(tf.math.pow(tf.math.multiply(grad, tf.math.multiply(beta, tf.math.add(alpha, tf.math.divide_no_nan(grad, grad)))), tf.math.square(grad)), beta), tf.math.sqrt(alpha))))))), grad)), tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad), grad))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 2, 3, 0, 3, 3], [0, 1, 0, 2, 0], [39, 39, 20], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5, 6, 0], [0, 2, 0, 3, 0, 0], [16, 16, 17, 77], [1, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 4, 1, 3, 0, 0, 3, 1, 4, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 14, 8, 6, 4, 1, 0, 1, 1, 1, 0, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), grad), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.divide_no_nan(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3041465282440186, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}]