[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8808571696281433, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223215103149414, 1.8640538454055786, 1.390925645828247, 1.0857504606246948, 0.9175904989242554, 0.8278062343597412, 0.75929194688797, 0.7150763869285583, 0.6742342710494995, 0.6527069211006165, 0.6226239800453186, 0.6030511260032654, 0.5812473893165588, 0.5698184370994568, 0.5517233610153198, 0.5318202376365662, 0.5262278914451599, 0.5063096284866333, 0.4941454231739044, 0.4912639260292053, 0.47673994302749634, 0.46776485443115234, 0.45580968260765076, 0.45419755578041077, 0.4471202790737152, 0.4368197023868561, 0.4238806366920471, 0.41453513503074646, 0.41017231345176697, 0.4062040150165558, 0.40386685729026794, 0.3953916132450104, 0.39355871081352234, 0.3836102783679962, 0.37635838985443115, 0.3735085725784302, 0.363672137260437, 0.35395750403404236, 0.35972025990486145, 0.34721699357032776, 0.3442964553833008, 0.335767537355423, 0.3300938904285431, 0.32407090067863464, 0.32112976908683777, 0.3181473910808563, 0.31370431184768677, 0.3087446987628937, 0.3084625005722046, 0.30203962326049805, 0.293395072221756, 0.2889169156551361, 0.2914500832557678, 0.28307828307151794, 0.28207361698150635, 0.2786792516708374, 0.27818819880485535, 0.26387521624565125], "accuracy": [0.27222296595573425, 0.5027077198028564, 0.5674283504486084, 0.6277902722358704, 0.6709813475608826, 0.7058512568473816, 0.7269845604896545, 0.7415136694908142, 0.7586844563484192, 0.7617223858833313, 0.783119797706604, 0.7832518815994263, 0.7926297783851624, 0.8001585006713867, 0.807158887386322, 0.8103289008140564, 0.8133667707443237, 0.8190463781356812, 0.8247259259223938, 0.8271034359931946, 0.8298771381378174, 0.8341038227081299, 0.8366134166717529, 0.839519202709198, 0.8404437899589539, 0.848368763923645, 0.8515387773513794, 0.8564258217811584, 0.8529917001724243, 0.8585391640663147, 0.8515387773513794, 0.863558292388916, 0.8615770936012268, 0.8640866279602051, 0.8652753829956055, 0.8671245574951172, 0.8720116019248962, 0.8771628737449646, 0.8705587387084961, 0.876370370388031, 0.8787478804588318, 0.8784837126731873, 0.8828424215316772, 0.8842953443527222, 0.884691596031189, 0.8840311765670776, 0.8891823887825012, 0.8894465565681458, 0.8899748921394348, 0.8932769894599915, 0.8945978283882141, 0.8980319499969482, 0.896446943283081, 0.8988244533538818, 0.9019944667816162, 0.901862382888794, 0.8985602855682373, 0.904768168926239], "val_loss": [2.039530038833618, 1.5154659748077393, 1.039007544517517, 0.8366694450378418, 0.7400773167610168, 0.6859951019287109, 0.6454513669013977, 0.6114123463630676, 0.5899704694747925, 0.5724708437919617, 0.5533395409584045, 0.5345184803009033, 0.5225448608398438, 0.5092709064483643, 0.500229001045227, 0.49316829442977905, 0.480929970741272, 0.4729439616203308, 0.4688349962234497, 0.4563703238964081, 0.45455607771873474, 0.44636544585227966, 0.44144734740257263, 0.4332112669944763, 0.42851945757865906, 0.4277913272380829, 0.4196922183036804, 0.41600528359413147, 0.4114539325237274, 0.4113328456878662, 0.4059373438358307, 0.4033544063568115, 0.40210506319999695, 0.3963744640350342, 0.39264819025993347, 0.39112263917922974, 0.384288489818573, 0.383841872215271, 0.3804401755332947, 0.3786342442035675, 0.3777892291545868, 0.37486007809638977, 0.37355443835258484, 0.37450093030929565, 0.36811116337776184, 0.3697490096092224, 0.3684578537940979, 0.370509535074234, 0.36476588249206543, 0.36312252283096313, 0.361527681350708, 0.36036449670791626, 0.3581533133983612, 0.3633516728878021, 0.35499346256256104, 0.3547135293483734, 0.35882508754730225, 0.35363712906837463], "val_accuracy": [0.5473333597183228, 0.6496666669845581, 0.6846666932106018, 0.6959999799728394, 0.7279999852180481, 0.7450000047683716, 0.7580000162124634, 0.7713333368301392, 0.7763333320617676, 0.7816666960716248, 0.7963333129882812, 0.8109999895095825, 0.8116666674613953, 0.8113333582878113, 0.8116666674613953, 0.8186666369438171, 0.8259999752044678, 0.8236666917800903, 0.828000009059906, 0.8360000252723694, 0.8323333263397217, 0.8373333215713501, 0.8373333215713501, 0.8366666436195374, 0.843666672706604, 0.843999981880188, 0.846666693687439, 0.8483333587646484, 0.8493333458900452, 0.847000002861023, 0.8476666808128357, 0.8496666550636292, 0.8510000109672546, 0.8519999980926514, 0.8553333282470703, 0.8556666374206543, 0.8583333492279053, 0.859333336353302, 0.8560000061988831, 0.862333357334137, 0.8636666536331177, 0.859666645526886, 0.8636666536331177, 0.8643333315849304, 0.8653333187103271, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.8709999918937683, 0.8690000176429749, 0.8686666488647461, 0.8653333187103271, 0.8733333349227905, 0.8679999709129333, 0.8709999918937683, 0.8706666827201843, 0.8703333139419556, 0.8693333268165588]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.871999979019165, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222698450088501, 1.8620049953460693, 1.3830256462097168, 1.1074539422988892, 0.9456729292869568, 0.8432120084762573, 0.7820090055465698, 0.7365907430648804, 0.6938828229904175, 0.6681140661239624, 0.6390472054481506, 0.6191312074661255, 0.5935941934585571, 0.5863098502159119, 0.5710356831550598, 0.552496075630188, 0.5434239506721497, 0.5303072929382324, 0.5188683271408081, 0.49907153844833374, 0.4991986155509949, 0.4878242611885071, 0.4680415391921997, 0.4680689573287964, 0.4600663185119629, 0.4517042338848114, 0.44075217843055725, 0.4376409649848938, 0.4312560260295868, 0.42361611127853394, 0.4221475124359131, 0.40997108817100525, 0.406205415725708, 0.40523210167884827, 0.3979945182800293, 0.38826146721839905, 0.37887659668922424, 0.37277477979660034, 0.37086957693099976, 0.3629918396472931, 0.361014723777771, 0.3475162982940674, 0.3517651855945587, 0.34882667660713196, 0.34114396572113037, 0.33252769708633423, 0.3283384442329407, 0.31977951526641846, 0.3249669075012207, 0.3157399594783783, 0.3100183606147766, 0.3087180256843567, 0.30478882789611816, 0.3053377866744995, 0.30005303025245667, 0.2926608622074127, 0.29259708523750305, 0.28934794664382935, 0.27983683347702026, 0.28337812423706055, 0.28197991847991943, 0.2749209702014923, 0.26504939794540405, 0.2688394784927368, 0.2613587975502014, 0.25978580117225647, 0.24567286670207977, 0.24945886433124542, 0.23889918625354767, 0.24610330164432526, 0.2432706654071808, 0.23498818278312683], "accuracy": [0.27658170461654663, 0.49953770637512207, 0.5676925182342529, 0.6100911498069763, 0.6641130447387695, 0.6992471218109131, 0.7169462442398071, 0.7275128960609436, 0.752212405204773, 0.7572315335273743, 0.7638356685638428, 0.7745344042778015, 0.7845727205276489, 0.7860256433486938, 0.7886672616004944, 0.7965922355651855, 0.8049134612083435, 0.8039889335632324, 0.8120459914207458, 0.8189142942428589, 0.8175934553146362, 0.822348415851593, 0.8293488025665283, 0.8348963260650635, 0.8310658931732178, 0.8418967127799988, 0.844010055065155, 0.8408400416374207, 0.8442742228507996, 0.8485008478164673, 0.8455950617790222, 0.8510104417800903, 0.8502179384231567, 0.856689989566803, 0.8569541573524475, 0.8585391640663147, 0.8642187118530273, 0.8669924736022949, 0.8626337051391602, 0.8687095642089844, 0.8701624870300293, 0.8712190985679626, 0.8735966086387634, 0.8733324408531189, 0.8750495314598083, 0.8765024542808533, 0.8800686597824097, 0.8848236799240112, 0.8794082403182983, 0.8848236799240112, 0.8835028409957886, 0.889578640460968, 0.8926165699958801, 0.8897107243537903, 0.8894465565681458, 0.8919561505317688, 0.8936732411384583, 0.8923524022102356, 0.8951261639595032, 0.8943336606025696, 0.897899866104126, 0.9031832218170166, 0.900409460067749, 0.9019944667816162, 0.9050323367118835, 0.9064852595329285, 0.9093911051750183, 0.9095231890678406, 0.91559898853302, 0.9104477763175964, 0.9120327830314636, 0.9138818979263306], "val_loss": [2.0411460399627686, 1.5177584886550903, 1.0506449937820435, 0.8504394292831421, 0.7658960819244385, 0.7043588161468506, 0.6564551591873169, 0.6211448311805725, 0.5958429574966431, 0.5760115385055542, 0.5592839121818542, 0.5379982590675354, 0.5258757472038269, 0.5170499086380005, 0.5041321516036987, 0.4970165193080902, 0.4860720932483673, 0.47476789355278015, 0.4707769453525543, 0.46129247546195984, 0.45518919825553894, 0.4484333097934723, 0.44500911235809326, 0.43830329179763794, 0.43281957507133484, 0.4331212639808655, 0.42050692439079285, 0.4238024950027466, 0.4210233688354492, 0.4213179647922516, 0.4124082922935486, 0.40939629077911377, 0.41407206654548645, 0.4106990694999695, 0.40067586302757263, 0.3920949399471283, 0.3997764587402344, 0.391347736120224, 0.39088815450668335, 0.38784298300743103, 0.3885180950164795, 0.38512277603149414, 0.3835526406764984, 0.38572901487350464, 0.37970981001853943, 0.3770202100276947, 0.3836804926395416, 0.3795778751373291, 0.3738836646080017, 0.3716748058795929, 0.3734799921512604, 0.3719366788864136, 0.3687469959259033, 0.36694401502609253, 0.37020450830459595, 0.36196398735046387, 0.3653181493282318, 0.3618895411491394, 0.36284273862838745, 0.36380699276924133, 0.37829163670539856, 0.3638550639152527, 0.3609233498573303, 0.3609580397605896, 0.35854536294937134, 0.35862043499946594, 0.35738036036491394, 0.3627718389034271, 0.35385116934776306, 0.36116543412208557, 0.3574211001396179, 0.354958176612854], "val_accuracy": [0.5226666927337646, 0.6489999890327454, 0.675000011920929, 0.7066666483879089, 0.7283333539962769, 0.7406666874885559, 0.7620000243186951, 0.7696666717529297, 0.7806666493415833, 0.7883333563804626, 0.7943333387374878, 0.8053333163261414, 0.809333324432373, 0.812333345413208, 0.8203333616256714, 0.8173333406448364, 0.8220000267028809, 0.82833331823349, 0.8276666402816772, 0.8316666483879089, 0.8339999914169312, 0.8356666564941406, 0.8379999995231628, 0.8416666388511658, 0.8426666855812073, 0.8426666855812073, 0.8473333120346069, 0.8456666469573975, 0.8503333330154419, 0.8489999771118164, 0.8479999899864197, 0.8536666631698608, 0.8506666421890259, 0.8496666550636292, 0.8529999852180481, 0.8603333234786987, 0.8566666841506958, 0.8553333282470703, 0.856333315372467, 0.8610000014305115, 0.859666645526886, 0.8613333106040955, 0.8613333106040955, 0.8613333106040955, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.862333357334137, 0.8673333525657654, 0.8706666827201843, 0.8676666617393494, 0.8676666617393494, 0.8696666955947876, 0.8713333606719971, 0.8700000047683716, 0.8713333606719971, 0.8700000047683716, 0.8733333349227905, 0.8723333477973938, 0.8736666440963745, 0.8676666617393494, 0.8726666569709778, 0.8740000128746033, 0.8766666650772095, 0.875333309173584, 0.8756666779518127, 0.8796666860580444, 0.8759999871253967, 0.8763333559036255, 0.8743333220481873, 0.8756666779518127, 0.8790000081062317]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 3, 0, 3], [16, 16], [0, 1], [0], [0], [99], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 6, 6, 8, 1, 4, 1, 4, 2, 8], [0, 4, 0, 3, 2, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 10, 6, 4, 2, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3039400577545166, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1], [0, 2, 3, 0, 3, 8, 2, 5, 0], [0, 1, 0, 2, 3], [39, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 9], [0, 2, 0, 3], [16, 16], [0, 1], [9], [0], [80], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1], [4, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 8, 1, 5, 1, 3, 1, 1, 5, 7, 7, 4, 8, 1], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 6, 6, 2, 4, 7, 7, 6, 5, 7], [16, 99, 96, 99, 61, 16]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 9, 5, 2, 6, 3, 3, 2, 1, 1, 0, 1, 43, 24, 19, 6], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.square(grad), tf.math.negative(grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma), tf.math.sqrt(tf.math.sqrt(alpha)))))), beta), tf.math.subtract(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.multiply(grad, tf.math.subtract(tf.math.subtract(grad, beta), grad)), tf.math.square(tf.math.add(grad, tf.math.add(tf.math.pow(tf.math.sqrt(grad), grad), tf.math.subtract(grad, grad)))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 2, 0, 3], [0, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 6, 0, 3, 5], [0, 3, 0, 3], [16, 96], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 0, 3, 6, 8, 3, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 1], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 2, 1, 1, 1, 2, 1, 1, 1, 11, 6, 5, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.multiply(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [3.103133201599121, 4.8232574462890625, 6.109093189239502, 6.972690582275391, 7.745439529418945, 8.39129638671875], "accuracy": [0.09985470771789551, 0.10579843819141388, 0.10487385839223862, 0.10011887550354004, 0.10408136248588562, 0.09589222073554993], "val_loss": [3.4438114166259766, 4.442494869232178, 5.204897880554199, 5.822970867156982, 6.34521484375, 6.799064636230469], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 2], [0, 1, 0, 0], [39, 39, 92], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5, 6], [3, 2, 0, 3, 5], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 6, 3, 8, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 4, 4, 0], [16, 99, 96, 99, 23, 1]], "fitness": -0.056285712867975235, "mapping_values": [1, 9, 5, 4, 3, 12, 7, 5, 1, 2, 1, 1, 1, 17, 9, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.math.multiply(tf.math.square(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), sigma))), grad)", "other_info": {"loss": [277570322432.0, 366854537216.0, 355583852544.0, 354196062208.0, 359229652992.0, 363339350016.0], "accuracy": [0.08149518072605133, 0.08638224750757217, 0.07779685407876968, 0.08638224750757217, 0.07977809756994247, 0.08228767663240433], "val_loss": [308344913920.0, 308344913920.0, 308344913920.0, 308344913920.0, 308344913920.0, 308344913920.0], "val_accuracy": [0.06400000303983688, 0.06400000303983688, 0.06400000303983688, 0.06400000303983688, 0.06400000303983688, 0.06400000303983688]}}]