[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.878000020980835, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223759174346924, 1.8681567907333374, 1.3971633911132812, 1.1021500825881958, 0.9438490867614746, 0.8268281817436218, 0.7700234055519104, 0.7182450890541077, 0.6839274764060974, 0.655160665512085, 0.6316797733306885, 0.6046612858772278, 0.586663544178009, 0.5732303261756897, 0.5552444458007812, 0.5382086634635925, 0.5205084085464478, 0.5141545534133911, 0.49866363406181335, 0.4905571937561035, 0.48713892698287964, 0.4630949795246124, 0.46493759751319885, 0.4510720372200012, 0.4456666111946106, 0.4411585330963135, 0.43109801411628723, 0.4194287657737732, 0.41647717356681824, 0.4177640676498413, 0.39898860454559326, 0.3982110619544983, 0.3941095173358917, 0.3838343918323517, 0.38270825147628784, 0.38132011890411377, 0.3706604242324829, 0.3630581796169281, 0.35970449447631836, 0.3585955500602722, 0.3488880693912506, 0.3406795859336853, 0.3434852361679077, 0.34305644035339355, 0.32770219445228577, 0.3274216949939728, 0.3164256513118744, 0.31487780809402466, 0.31453031301498413, 0.3020377457141876, 0.3013147711753845, 0.29238083958625793, 0.30650538206100464, 0.2886098325252533, 0.28784143924713135, 0.28922179341316223, 0.27991431951522827, 0.27731093764305115, 0.27029022574424744, 0.2677718997001648, 0.2672445476055145], "accuracy": [0.27182671427726746, 0.4913485646247864, 0.5609562993049622, 0.6095628142356873, 0.6618676781654358, 0.6997754573822021, 0.7215691208839417, 0.7407211661338806, 0.7508915662765503, 0.7592127919197083, 0.7656848430633545, 0.7798177003860474, 0.7849689722061157, 0.789459764957428, 0.7991018295288086, 0.806630551815033, 0.81112140417099, 0.8088759779930115, 0.8210275769233704, 0.8181217908859253, 0.826310932636261, 0.8333113193511963, 0.8294808864593506, 0.8401796221733093, 0.8409721255302429, 0.8436138033866882, 0.8459912538528442, 0.8519350290298462, 0.8485008478164673, 0.8490291833877563, 0.856689989566803, 0.8573504090309143, 0.8615770936012268, 0.8644828796386719, 0.8605204224586487, 0.8614450097084045, 0.8671245574951172, 0.8726720213890076, 0.8732003569602966, 0.8689737319946289, 0.8762382864952087, 0.8798044919967651, 0.8717474341392517, 0.8825782537460327, 0.8840311765670776, 0.8845595121383667, 0.8885219693183899, 0.8865407705307007, 0.8887861371040344, 0.894069492816925, 0.8918240666389465, 0.8953903317451477, 0.8860124349594116, 0.8988244533538818, 0.8992207050323486, 0.8956544995307922, 0.9014661312103271, 0.89988112449646, 0.900409460067749, 0.9046360850334167, 0.9033153057098389], "val_loss": [2.0386126041412354, 1.5089809894561768, 1.0396978855133057, 0.8277255296707153, 0.7414798736572266, 0.6867381930351257, 0.6452507376670837, 0.6096968054771423, 0.5920496582984924, 0.5695558786392212, 0.550778865814209, 0.5315823554992676, 0.5166425704956055, 0.5040237307548523, 0.4927339255809784, 0.48035380244255066, 0.4752146899700165, 0.4640548527240753, 0.45926037430763245, 0.4498494863510132, 0.44989997148513794, 0.43486902117729187, 0.4302854835987091, 0.42699891328811646, 0.4222937822341919, 0.4179273545742035, 0.4156407117843628, 0.40615877509117126, 0.40567347407341003, 0.40483561158180237, 0.4008205533027649, 0.3957735300064087, 0.3910598158836365, 0.39842313528060913, 0.38378071784973145, 0.3824272155761719, 0.37983548641204834, 0.3832281529903412, 0.37993335723876953, 0.37290528416633606, 0.37028563022613525, 0.3697679340839386, 0.369826078414917, 0.3630952835083008, 0.3613884747028351, 0.3612003028392792, 0.3630628287792206, 0.35836127400398254, 0.35707563161849976, 0.3544061779975891, 0.35439038276672363, 0.35541149973869324, 0.34793493151664734, 0.355723112821579, 0.3566884696483612, 0.3480426073074341, 0.35176366567611694, 0.34468159079551697, 0.3469727337360382, 0.34757280349731445, 0.34379008412361145], "val_accuracy": [0.546999990940094, 0.6536666750907898, 0.6856666803359985, 0.7066666483879089, 0.7366666793823242, 0.7536666393280029, 0.7599999904632568, 0.7720000147819519, 0.7706666588783264, 0.7926666736602783, 0.7963333129882812, 0.7956666946411133, 0.8103333115577698, 0.809333324432373, 0.8220000267028809, 0.8226666450500488, 0.8243333101272583, 0.8330000042915344, 0.8349999785423279, 0.8370000123977661, 0.8333333134651184, 0.8429999947547913, 0.8463333249092102, 0.8446666598320007, 0.8476666808128357, 0.8479999899864197, 0.8450000286102295, 0.8506666421890259, 0.8496666550636292, 0.8529999852180481, 0.8556666374206543, 0.8556666374206543, 0.8586666584014893, 0.8526666760444641, 0.8576666712760925, 0.8610000014305115, 0.859000027179718, 0.8616666793823242, 0.8653333187103271, 0.8673333525657654, 0.8673333525657654, 0.8659999966621399, 0.8693333268165588, 0.8690000176429749, 0.8726666569709778, 0.8726666569709778, 0.8740000128746033, 0.8730000257492065, 0.871999979019165, 0.8759999871253967, 0.874666690826416, 0.871999979019165, 0.8806666731834412, 0.8776666522026062, 0.8706666827201843, 0.8820000290870667, 0.878333330154419, 0.878000020980835, 0.8806666731834412, 0.8793333172798157, 0.878333330154419]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8622857332229614, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2197048664093018, 1.8525086641311646, 1.369890570640564, 1.0582207441329956, 0.9250950217247009, 0.8070055246353149, 0.7649472951889038, 0.6981562972068787, 0.6699579358100891, 0.641883909702301, 0.6093810796737671, 0.5973172187805176, 0.5823333859443665, 0.5575395822525024, 0.5429866313934326, 0.5230976939201355, 0.5189172625541687, 0.5062240362167358, 0.4821757972240448, 0.4740293323993683, 0.4777178466320038, 0.4682457447052002, 0.4570651650428772, 0.4416957199573517, 0.4286297857761383, 0.43994399905204773, 0.4201987683773041, 0.41086074709892273, 0.4005710780620575, 0.39376798272132874, 0.3930949568748474, 0.39790764451026917, 0.39181652665138245, 0.37363889813423157, 0.3685286343097687, 0.3594992160797119, 0.3614962100982666, 0.3566942512989044, 0.34390461444854736, 0.3426845967769623, 0.3397216498851776, 0.3365476727485657, 0.3284744322299957, 0.3247153162956238, 0.3172801434993744, 0.3167029321193695, 0.3062061667442322, 0.30952122807502747, 0.3052634596824646, 0.301345556974411, 0.2976756691932678, 0.2964550256729126, 0.2879250645637512, 0.28439709544181824, 0.27548834681510925, 0.2773889899253845, 0.26823049783706665, 0.26520872116088867, 0.26500093936920166], "accuracy": [0.2852991819381714, 0.5064060091972351, 0.5779950022697449, 0.6316206455230713, 0.6741513609886169, 0.7125874757766724, 0.7259278893470764, 0.7407211661338806, 0.7573636174201965, 0.7697794437408447, 0.7750627398490906, 0.7798177003860474, 0.7852331399917603, 0.7973847389221191, 0.7951393723487854, 0.8074230551719666, 0.8074230551719666, 0.8145555257797241, 0.8228767514228821, 0.828292191028595, 0.829216718673706, 0.8335754871368408, 0.830669641494751, 0.8409721255302429, 0.8462554216384888, 0.8442742228507996, 0.845859169960022, 0.8502179384231567, 0.8555012345314026, 0.8576145768165588, 0.8557654023170471, 0.8555012345314026, 0.8585391640663147, 0.8627657890319824, 0.8639545440673828, 0.8691058158874512, 0.8685774803161621, 0.8745211958885193, 0.8751816153526306, 0.8765024542808533, 0.8770307898521423, 0.8766345381736755, 0.8816536664962769, 0.8842953443527222, 0.8845595121383667, 0.8870691061019897, 0.8916919827461243, 0.8865407705307007, 0.8885219693183899, 0.889578640460968, 0.8902390599250793, 0.8931449055671692, 0.896446943283081, 0.8957865834236145, 0.8960506916046143, 0.8985602855682373, 0.9031832218170166, 0.8996169567108154, 0.9019944667816162], "val_loss": [2.035449981689453, 1.5005286931991577, 1.0262647867202759, 0.8305588364601135, 0.7322726249694824, 0.6800819635391235, 0.6332500576972961, 0.599754810333252, 0.5734168291091919, 0.5530778169631958, 0.5344621539115906, 0.5216817855834961, 0.510847270488739, 0.49252721667289734, 0.4819413721561432, 0.4730205833911896, 0.4637714922428131, 0.45291125774383545, 0.4472969174385071, 0.43963000178337097, 0.43474280834198, 0.4269523620605469, 0.42329251766204834, 0.41786453127861023, 0.4134249687194824, 0.40630337595939636, 0.4041135311126709, 0.39766088128089905, 0.3965924084186554, 0.3948090374469757, 0.3954712748527527, 0.39114314317703247, 0.3815116286277771, 0.3787892758846283, 0.3783581554889679, 0.37065428495407104, 0.3709231913089752, 0.37286877632141113, 0.3679632842540741, 0.3656857907772064, 0.3662715554237366, 0.3615153133869171, 0.35710763931274414, 0.3567171096801758, 0.35381370782852173, 0.35409292578697205, 0.35671648383140564, 0.35340824723243713, 0.35097405314445496, 0.3480096757411957, 0.3434419631958008, 0.34559178352355957, 0.3481103181838989, 0.34051695466041565, 0.34629979729652405, 0.34084758162498474, 0.3433168828487396, 0.34121230244636536, 0.3432196378707886], "val_accuracy": [0.5336666703224182, 0.6570000052452087, 0.6846666932106018, 0.7043333053588867, 0.734333336353302, 0.7546666860580444, 0.7683333158493042, 0.7773333191871643, 0.7910000085830688, 0.7913333177566528, 0.8080000281333923, 0.8106666803359985, 0.8116666674613953, 0.8256666660308838, 0.8273333311080933, 0.8273333311080933, 0.8346666693687439, 0.8426666855812073, 0.8403333425521851, 0.8456666469573975, 0.8489999771118164, 0.8503333330154419, 0.8489999771118164, 0.8533333539962769, 0.8566666841506958, 0.8566666841506958, 0.8556666374206543, 0.8553333282470703, 0.859333336353302, 0.8579999804496765, 0.8613333106040955, 0.862333357334137, 0.8650000095367432, 0.8676666617393494, 0.8673333525657654, 0.8646666407585144, 0.8650000095367432, 0.8700000047683716, 0.8706666827201843, 0.8709999918937683, 0.8709999918937683, 0.8709999918937683, 0.874666690826416, 0.8726666569709778, 0.8743333220481873, 0.8726666569709778, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8759999871253967, 0.878000020980835, 0.8769999742507935, 0.8730000257492065, 0.8796666860580444, 0.8769999742507935, 0.8786666393280029, 0.8769999742507935, 0.8790000081062317, 0.8766666650772095]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1], [6, 3, 3, 6, 8, 1, 4, 4, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.7902857065200806, "mapping_values": [1, 9, 5, 4, 2, 7, 4, 3, 2, 2, 1, 1, 1, 18, 9, 9, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))), alpha), beta)", "other_info": {"loss": [3.1283016204833984, 2.3124310970306396, 2.2005512714385986, 1.9055324792861938, 1.452122688293457, 1.156590223312378, 1.0155692100524902, 0.9277350306510925, 0.8754382729530334, 0.8458114862442017, 0.833964467048645, 0.8168491721153259, 0.7917163968086243, 0.792815089225769, 0.7627410292625427, 0.770251452922821, 0.7697578072547913, 0.7613312602043152, 0.7597783803939819, 0.7559430003166199, 0.7469878196716309, 0.7489616274833679, 0.7393028736114502, 0.7435924410820007, 0.7392682433128357, 0.7358348369598389, 0.7226220965385437, 0.7283903956413269, 0.7296281456947327, 0.7319691777229309, 0.726173460483551, 0.7274717688560486, 0.7290970087051392, 0.710818886756897, 0.713675856590271, 0.7203104496002197, 0.7151041626930237, 0.710233211517334, 0.7091807126998901, 0.6978898048400879, 0.7078442573547363, 0.718477189540863], "accuracy": [0.11728965491056442, 0.11161009222269058, 0.19693566858768463, 0.34262317419052124, 0.4924052357673645, 0.5896182656288147, 0.6473385095596313, 0.6639809608459473, 0.6860388517379761, 0.6926429867744446, 0.6959450244903564, 0.7013604640960693, 0.7120591998100281, 0.7055870890617371, 0.7226257920265198, 0.7136441469192505, 0.7251353859901428, 0.722229540348053, 0.7194558382034302, 0.7181349992752075, 0.7268524765968323, 0.7277770638465881, 0.7243428826332092, 0.7251353859901428, 0.7224937081336975, 0.7367587089538574, 0.7384757399559021, 0.7342491149902344, 0.7289658188819885, 0.733060359954834, 0.7323999404907227, 0.7403249144554138, 0.7343811988830566, 0.7386078238487244, 0.7386078238487244, 0.7372870445251465, 0.7318716049194336, 0.7408532500267029, 0.7392682433128357, 0.7466648817062378, 0.7337207794189453, 0.7364945411682129], "val_loss": [2.331303119659424, 2.2640695571899414, 1.9861077070236206, 1.4051291942596436, 1.0652697086334229, 0.8721919059753418, 0.786164402961731, 0.7241050004959106, 0.694124162197113, 0.6792367100715637, 0.6722862124443054, 0.6574711203575134, 0.6419694423675537, 0.6403391361236572, 0.6279087066650391, 0.6302778124809265, 0.623477578163147, 0.616696834564209, 0.6160526275634766, 0.6173898577690125, 0.6108952760696411, 0.6087222099304199, 0.6086696982383728, 0.6032490134239197, 0.6040931940078735, 0.6070091724395752, 0.598317563533783, 0.5979612469673157, 0.5968405604362488, 0.5988249778747559, 0.5950244665145874, 0.5891841650009155, 0.5870633721351624, 0.5911375284194946, 0.5895594954490662, 0.5875259041786194, 0.588735818862915, 0.5855321288108826, 0.5865846872329712, 0.5842583775520325, 0.5838796496391296, 0.58218914270401], "val_accuracy": [0.09833333641290665, 0.17399999499320984, 0.33033332228660583, 0.5220000147819519, 0.6526666879653931, 0.7049999833106995, 0.7409999966621399, 0.7433333396911621, 0.7590000033378601, 0.7540000081062317, 0.7546666860580444, 0.7649999856948853, 0.7646666765213013, 0.7710000276565552, 0.7743333578109741, 0.7713333368301392, 0.7726666927337646, 0.7766666412353516, 0.7863333225250244, 0.7746666669845581, 0.7786666750907898, 0.7826666831970215, 0.7766666412353516, 0.7870000004768372, 0.778333306312561, 0.7799999713897705, 0.7806666493415833, 0.7889999747276306, 0.7873333096504211, 0.7886666655540466, 0.7900000214576721, 0.7900000214576721, 0.7850000262260437, 0.7956666946411133, 0.7826666831970215, 0.784333348274231, 0.7963333129882812, 0.7946666479110718, 0.7910000085830688, 0.7953333258628845, 0.7933333516120911, 0.7900000214576721]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [4, 2, 3, 0, 3, 4, 9, 2, 7, 1, 0, 1], [0, 1, 0, 2, 0, 0, 3, 1, 3], [39, 39, 71, 52, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1], [0, 2, 8, 0, 8, 5, 8, 0], [0, 1, 0, 3], [16, 78], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 7, 2, 6, 9], [0, 5, 7, 1], [99, 34], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 9, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 4]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 12, 9, 5, 10, 8, 2, 1, 10, 6, 4, 2, 16, 9, 7, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.add(tf.math.subtract(tf.math.negative(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)))), tf.math.subtract(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.negative(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.square(tf.math.sqrt(tf.math.negative(alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), grad), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09589222073554993, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 1], [0, 2, 0, 2], [39, 39], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5, 8, 4, 0], [0, 2, 0, 3, 3], [16, 16], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [4, 0, 0, 3, 0, 0, 3, 1, 2, 0], [89, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 14, 9, 5, 2, 2, 1, 1, 0, 21, 11, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.sqrt(tf.math.pow(grad, tf.math.negative(grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 2], [0, 1, 0, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 5, 3, 5], [0, 2, 0, 3], [16, 50], [0, 1], [0], [0], [99], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 4, 4, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 6, 3, 3, 2, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3030736446380615, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}]