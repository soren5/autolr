[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8808571696281433, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223215103149414, 1.8640538454055786, 1.390925645828247, 1.0857504606246948, 0.9175904989242554, 0.8278062343597412, 0.75929194688797, 0.7150763869285583, 0.6742342710494995, 0.6527069211006165, 0.6226239800453186, 0.6030511260032654, 0.5812473893165588, 0.5698184370994568, 0.5517233610153198, 0.5318202376365662, 0.5262278914451599, 0.5063096284866333, 0.4941454231739044, 0.4912639260292053, 0.47673994302749634, 0.46776485443115234, 0.45580968260765076, 0.45419755578041077, 0.4471202790737152, 0.4368197023868561, 0.4238806366920471, 0.41453513503074646, 0.41017231345176697, 0.4062040150165558, 0.40386685729026794, 0.3953916132450104, 0.39355871081352234, 0.3836102783679962, 0.37635838985443115, 0.3735085725784302, 0.363672137260437, 0.35395750403404236, 0.35972025990486145, 0.34721699357032776, 0.3442964553833008, 0.335767537355423, 0.3300938904285431, 0.32407090067863464, 0.32112976908683777, 0.3181473910808563, 0.31370431184768677, 0.3087446987628937, 0.3084625005722046, 0.30203962326049805, 0.293395072221756, 0.2889169156551361, 0.2914500832557678, 0.28307828307151794, 0.28207361698150635, 0.2786792516708374, 0.27818819880485535, 0.26387521624565125], "accuracy": [0.27222296595573425, 0.5027077198028564, 0.5674283504486084, 0.6277902722358704, 0.6709813475608826, 0.7058512568473816, 0.7269845604896545, 0.7415136694908142, 0.7586844563484192, 0.7617223858833313, 0.783119797706604, 0.7832518815994263, 0.7926297783851624, 0.8001585006713867, 0.807158887386322, 0.8103289008140564, 0.8133667707443237, 0.8190463781356812, 0.8247259259223938, 0.8271034359931946, 0.8298771381378174, 0.8341038227081299, 0.8366134166717529, 0.839519202709198, 0.8404437899589539, 0.848368763923645, 0.8515387773513794, 0.8564258217811584, 0.8529917001724243, 0.8585391640663147, 0.8515387773513794, 0.863558292388916, 0.8615770936012268, 0.8640866279602051, 0.8652753829956055, 0.8671245574951172, 0.8720116019248962, 0.8771628737449646, 0.8705587387084961, 0.876370370388031, 0.8787478804588318, 0.8784837126731873, 0.8828424215316772, 0.8842953443527222, 0.884691596031189, 0.8840311765670776, 0.8891823887825012, 0.8894465565681458, 0.8899748921394348, 0.8932769894599915, 0.8945978283882141, 0.8980319499969482, 0.896446943283081, 0.8988244533538818, 0.9019944667816162, 0.901862382888794, 0.8985602855682373, 0.904768168926239], "val_loss": [2.039530038833618, 1.5154659748077393, 1.039007544517517, 0.8366694450378418, 0.7400773167610168, 0.6859951019287109, 0.6454513669013977, 0.6114123463630676, 0.5899704694747925, 0.5724708437919617, 0.5533395409584045, 0.5345184803009033, 0.5225448608398438, 0.5092709064483643, 0.500229001045227, 0.49316829442977905, 0.480929970741272, 0.4729439616203308, 0.4688349962234497, 0.4563703238964081, 0.45455607771873474, 0.44636544585227966, 0.44144734740257263, 0.4332112669944763, 0.42851945757865906, 0.4277913272380829, 0.4196922183036804, 0.41600528359413147, 0.4114539325237274, 0.4113328456878662, 0.4059373438358307, 0.4033544063568115, 0.40210506319999695, 0.3963744640350342, 0.39264819025993347, 0.39112263917922974, 0.384288489818573, 0.383841872215271, 0.3804401755332947, 0.3786342442035675, 0.3777892291545868, 0.37486007809638977, 0.37355443835258484, 0.37450093030929565, 0.36811116337776184, 0.3697490096092224, 0.3684578537940979, 0.370509535074234, 0.36476588249206543, 0.36312252283096313, 0.361527681350708, 0.36036449670791626, 0.3581533133983612, 0.3633516728878021, 0.35499346256256104, 0.3547135293483734, 0.35882508754730225, 0.35363712906837463], "val_accuracy": [0.5473333597183228, 0.6496666669845581, 0.6846666932106018, 0.6959999799728394, 0.7279999852180481, 0.7450000047683716, 0.7580000162124634, 0.7713333368301392, 0.7763333320617676, 0.7816666960716248, 0.7963333129882812, 0.8109999895095825, 0.8116666674613953, 0.8113333582878113, 0.8116666674613953, 0.8186666369438171, 0.8259999752044678, 0.8236666917800903, 0.828000009059906, 0.8360000252723694, 0.8323333263397217, 0.8373333215713501, 0.8373333215713501, 0.8366666436195374, 0.843666672706604, 0.843999981880188, 0.846666693687439, 0.8483333587646484, 0.8493333458900452, 0.847000002861023, 0.8476666808128357, 0.8496666550636292, 0.8510000109672546, 0.8519999980926514, 0.8553333282470703, 0.8556666374206543, 0.8583333492279053, 0.859333336353302, 0.8560000061988831, 0.862333357334137, 0.8636666536331177, 0.859666645526886, 0.8636666536331177, 0.8643333315849304, 0.8653333187103271, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.8709999918937683, 0.8690000176429749, 0.8686666488647461, 0.8653333187103271, 0.8733333349227905, 0.8679999709129333, 0.8709999918937683, 0.8706666827201843, 0.8703333139419556, 0.8693333268165588]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8745714426040649, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.220240831375122, 1.8531522750854492, 1.3779791593551636, 1.0777629613876343, 0.9305146932601929, 0.8313786387443542, 0.7651815414428711, 0.7249028086662292, 0.6940990686416626, 0.6597967147827148, 0.6267043352127075, 0.614702045917511, 0.5929944515228271, 0.5748799443244934, 0.5572136044502258, 0.5485619306564331, 0.5359047055244446, 0.5168814063072205, 0.5051597356796265, 0.49540168046951294, 0.49346086382865906, 0.47500312328338623, 0.4634656310081482, 0.45798978209495544, 0.44946765899658203, 0.4467799961566925, 0.43582844734191895, 0.42772895097732544, 0.4210617244243622, 0.4146212637424469, 0.4068234860897064, 0.4037710130214691, 0.3917537033557892, 0.3856479525566101, 0.380493700504303, 0.37319907546043396, 0.37266838550567627, 0.3617396950721741, 0.3596872091293335, 0.35926884412765503, 0.349869966506958, 0.3406205475330353, 0.34212785959243774, 0.32829657196998596, 0.32934296131134033, 0.32698652148246765, 0.3195493817329407, 0.31900233030319214, 0.3093093931674957, 0.3094777762889862, 0.29955631494522095, 0.30134326219558716, 0.2941628694534302, 0.2887822687625885, 0.2917903661727905, 0.2895987331867218, 0.27989259362220764, 0.26543381810188293, 0.27453121542930603, 0.263672798871994, 0.27288761734962463, 0.2548007071018219, 0.2546399235725403, 0.25346943736076355, 0.2521180808544159, 0.24047672748565674, 0.23840495944023132, 0.23557819426059723, 0.23930132389068604, 0.22932711243629456], "accuracy": [0.2654867172241211, 0.4974243938922882, 0.5624092221260071, 0.6232994198799133, 0.6651697158813477, 0.7000396251678467, 0.7209087014198303, 0.7318716049194336, 0.7452120184898376, 0.7593448758125305, 0.7670056819915771, 0.7744023203849792, 0.7783648371696472, 0.780610203742981, 0.7973847389221191, 0.7971205711364746, 0.8039889335632324, 0.8108572363853455, 0.8168009519577026, 0.8219521641731262, 0.8271034359931946, 0.8274996876716614, 0.8362171649932861, 0.8325188159942627, 0.8364813327789307, 0.8366134166717529, 0.8428213000297546, 0.8436138033866882, 0.8469158411026001, 0.8519350290298462, 0.8488970994949341, 0.8524633646011353, 0.8613129258155823, 0.858671247959137, 0.8610487580299377, 0.8639545440673828, 0.8648791313171387, 0.8683133125305176, 0.8705587387084961, 0.8681812286376953, 0.8728041052818298, 0.8755778670310974, 0.8762382864952087, 0.8820499181747437, 0.8805969953536987, 0.8802007436752319, 0.8844274282455444, 0.8811253309249878, 0.8887861371040344, 0.8894465565681458, 0.889050304889679, 0.8887861371040344, 0.8902390599250793, 0.8982961177825928, 0.8969752788543701, 0.8908994793891907, 0.9010698795318604, 0.9026548862457275, 0.8992207050323486, 0.9076740145683289, 0.8986923694610596, 0.9059569239616394, 0.906749427318573, 0.9070135951042175, 0.9059569239616394, 0.9101836085319519, 0.9120327830314636, 0.9115044474601746, 0.9100515246391296, 0.9128252267837524], "val_loss": [2.0327930450439453, 1.4966888427734375, 1.033510684967041, 0.8284754157066345, 0.7388701438903809, 0.6848951578140259, 0.6397958397865295, 0.606394350528717, 0.5855158567428589, 0.5651947259902954, 0.5444220900535583, 0.5293363928794861, 0.5166864991188049, 0.4979204833507538, 0.4946545362472534, 0.4867701828479767, 0.4667940139770508, 0.46229296922683716, 0.45138248801231384, 0.4545469284057617, 0.4376649856567383, 0.435058057308197, 0.42828133702278137, 0.4247460663318634, 0.41761237382888794, 0.41112175583839417, 0.40779757499694824, 0.4037106931209564, 0.39541763067245483, 0.3924272060394287, 0.38899651169776917, 0.39035895466804504, 0.3855244815349579, 0.3817591965198517, 0.3792492747306824, 0.38123542070388794, 0.37334176898002625, 0.37166526913642883, 0.36624571681022644, 0.36744290590286255, 0.36793896555900574, 0.35988157987594604, 0.3586941659450531, 0.3613119423389435, 0.3577664792537689, 0.3557873070240021, 0.35490870475769043, 0.35135626792907715, 0.3505859673023224, 0.3478638529777527, 0.3481118977069855, 0.3457455635070801, 0.34781819581985474, 0.3439776301383972, 0.34347429871559143, 0.34799695014953613, 0.339261919260025, 0.3414900600910187, 0.34107717871665955, 0.3389253616333008, 0.3427666425704956, 0.337207555770874, 0.3356785476207733, 0.3348108232021332, 0.3342649042606354, 0.3334506154060364, 0.33506593108177185, 0.3338563144207001, 0.3319167196750641, 0.3369603753089905], "val_accuracy": [0.5393333435058594, 0.656333327293396, 0.6850000023841858, 0.7073333263397217, 0.7360000014305115, 0.7473333477973938, 0.7666666507720947, 0.7766666412353516, 0.7870000004768372, 0.79666668176651, 0.8040000200271606, 0.8043333292007446, 0.8163333535194397, 0.8209999799728394, 0.8193333148956299, 0.8230000138282776, 0.8346666693687439, 0.8339999914169312, 0.843999981880188, 0.8423333168029785, 0.843666672706604, 0.8486666679382324, 0.8496666550636292, 0.8526666760444641, 0.8546666502952576, 0.8553333282470703, 0.859666645526886, 0.8576666712760925, 0.8569999933242798, 0.859666645526886, 0.8629999756813049, 0.8610000014305115, 0.8643333315849304, 0.8616666793823242, 0.8600000143051147, 0.8659999966621399, 0.8636666536331177, 0.8633333444595337, 0.871666669845581, 0.8679999709129333, 0.8679999709129333, 0.8679999709129333, 0.8686666488647461, 0.871999979019165, 0.8730000257492065, 0.874666690826416, 0.871666669845581, 0.8709999918937683, 0.875333309173584, 0.8776666522026062, 0.8786666393280029, 0.8763333559036255, 0.8790000081062317, 0.8793333172798157, 0.8809999823570251, 0.8733333349227905, 0.8803333044052124, 0.8813333511352539, 0.8799999952316284, 0.8790000081062317, 0.8830000162124634, 0.8806666731834412, 0.8813333511352539, 0.8809999823570251, 0.8849999904632568, 0.8826666474342346, 0.8820000290870667, 0.8836666941642761, 0.8843333125114441, 0.8809999823570251]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 5, 4], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 8, 3, 5, 3, 5], [0, 2, 2, 3], [96, 16], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 7, 2, 9, 1, 5], [0, 4, 7, 0], [99, 82, 94], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], [6, 2, 3, 6, 8, 1, 4, 1, 3, 2, 8, 5], [2, 0, 0, 4, 0, 0, 3, 1, 2, 0], [34, 99, 96, 99, 5, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 6, 4, 2, 1, 11, 7, 4, 3, 22, 12, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.square(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.math.square(grad))), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.math.square(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0], [0, 6, 3, 0, 3, 5, 8, 8, 2, 4, 9], [0, 2, 1, 2, 0], [39, 39, 78], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [0, 4, 3, 6, 0, 1, 2, 6, 5], [0, 6, 2, 0, 2, 0, 2], [89, 13, 85], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 1, 1, 1, 4, 2, 8], [0, 0, 0, 3, 0, 4, 4, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.math.square(alpha), tf.math.sqrt(tf.math.sqrt(tf.math.add(tf.math.pow(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.negative(tf.math.subtract(tf.math.add(grad, tf.math.divide_no_nan(tf.math.square(beta), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), beta)), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.subtract(grad, tf.math.subtract(grad, tf.math.pow(alpha, tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}, "mapping_values": [1, 16, 11, 5, 3, 10, 6, 4, 2, 16, 9, 7, 3, 21, 11, 10, 5], "tree_depth": 21}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 4, 0, 3], [0, 0, 0, 0], [39, 39, 33, 90], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 5, 0, 1, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [6, 3, 3, 6, 8, 1, 4, 1, 3, 2, 8], [1, 0, 0, 3, 0, 0, 3, 1, 2, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 4, 6, 4, 2, 1, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(alpha, tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [1, 0], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 0, 3, 6, 0, 1, 4, 1, 4, 2, 8], [2, 0, 0, 4, 4, 0, 3, 4, 2, 0], [16, 99, 96, 81, 61, 1]], "fitness": -0.09314285963773727, "mapping_values": [1, 9, 5, 4, 2, 9, 5, 4, 2, 1, 0, 1, 1, 11, 6, 5, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(beta, tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32))))), tf.math.subtract(grad, grad))", "other_info": {"loss": [2.309525966644287, 2.310523748397827, 2.308621406555176, 2.3095901012420654, 2.309868574142456, 2.309113025665283], "accuracy": [0.09060890227556229, 0.09272222965955734, 0.09840179979801178, 0.09087307006120682, 0.09192973375320435, 0.08717474341392517], "val_loss": [2.308781623840332, 2.308781623840332, 2.308781623840332, 2.308781623840332, 2.308781623840332, 2.308781623840332], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}]