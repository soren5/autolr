[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8757143020629883, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2224490642547607, 1.8675343990325928, 1.3939836025238037, 1.0927708148956299, 0.9404754638671875, 0.843849241733551, 0.7721466422080994, 0.7262260317802429, 0.6833308339118958, 0.6551293134689331, 0.6342591643333435, 0.6063357591629028, 0.5894114971160889, 0.5630450248718262, 0.5653029680252075, 0.5470729470252991, 0.5323475003242493, 0.5214682221412659, 0.5072728991508484, 0.4921358525753021, 0.4860784709453583, 0.4787559509277344, 0.4597107470035553, 0.4659897983074188, 0.4577959179878235, 0.4413664937019348, 0.4400829076766968, 0.42729705572128296, 0.42480337619781494, 0.4147000014781952, 0.4078267216682434, 0.40303489565849304, 0.39573609828948975, 0.3881356716156006, 0.3801533281803131, 0.3769753575325012, 0.37094807624816895, 0.36736586689949036, 0.37323513627052307, 0.36098161339759827, 0.34507474303245544, 0.34743914008140564, 0.34368041157722473, 0.33095982670783997, 0.32870543003082275, 0.32367658615112305, 0.32409581542015076, 0.3211810886859894, 0.3120701313018799, 0.31045442819595337, 0.3032769560813904, 0.30337560176849365, 0.29582297801971436, 0.29006415605545044, 0.2880508303642273, 0.28300508856773376, 0.2801433503627777, 0.2763940989971161, 0.2741786241531372, 0.26906004548072815, 0.2651638984680176, 0.2566206157207489, 0.26367518305778503, 0.2519575357437134], "accuracy": [0.27658170461654663, 0.49385812878608704, 0.5719191431999207, 0.6159027814865112, 0.6682076454162598, 0.6946242451667786, 0.7185312509536743, 0.733060359954834, 0.7493065595626831, 0.7617223858833313, 0.7683265209197998, 0.7799497842788696, 0.7829877138137817, 0.7980451583862305, 0.7992339134216309, 0.804649293422699, 0.8092722296714783, 0.8104609847068787, 0.8193105459213257, 0.8228767514228821, 0.8272355198860168, 0.8252542614936829, 0.8376700282096863, 0.8348963260650635, 0.8422929644584656, 0.8424250483512878, 0.8444063067436218, 0.8512746095657349, 0.8488970994949341, 0.8491612672805786, 0.8557654023170471, 0.8536521196365356, 0.8539162874221802, 0.8628978729248047, 0.8634262084960938, 0.8638224601745605, 0.8673887252807617, 0.870030403137207, 0.8684453964233398, 0.8704266548156738, 0.8747853636741638, 0.8750495314598083, 0.8746532797813416, 0.8787478804588318, 0.8829745054244995, 0.8828424215316772, 0.8833707571029663, 0.8842953443527222, 0.8841632604598999, 0.8882578015327454, 0.8903711438179016, 0.8894465565681458, 0.891559898853302, 0.8948619961738586, 0.8968431949615479, 0.8988244533538818, 0.8960506916046143, 0.9017302989959717, 0.9019944667816162, 0.89988112449646, 0.9017302989959717, 0.9071456789970398, 0.9039757251739502, 0.9082023501396179], "val_loss": [2.036843776702881, 1.5161906480789185, 1.0445137023925781, 0.8340126872062683, 0.7392319440841675, 0.6852213740348816, 0.6332608461380005, 0.5959271192550659, 0.5714350342750549, 0.549830973148346, 0.5222745537757874, 0.5133263468742371, 0.49633684754371643, 0.4777461290359497, 0.4722379446029663, 0.4595833718776703, 0.45239517092704773, 0.4480498731136322, 0.43859392404556274, 0.4262703061103821, 0.42883649468421936, 0.4152919054031372, 0.41032952070236206, 0.4077501893043518, 0.3949292004108429, 0.39100560545921326, 0.3824780285358429, 0.3815884590148926, 0.37856918573379517, 0.372124582529068, 0.37195006012916565, 0.3686104416847229, 0.3633952736854553, 0.3569556474685669, 0.35764214396476746, 0.35445699095726013, 0.35251298546791077, 0.3492286503314972, 0.3514643609523773, 0.34624624252319336, 0.34437841176986694, 0.3405534625053406, 0.3368695080280304, 0.3358098268508911, 0.33687594532966614, 0.3372238874435425, 0.34350210428237915, 0.32805559039115906, 0.33228394389152527, 0.32754582166671753, 0.33014562726020813, 0.3276408612728119, 0.3226785361766815, 0.325215607881546, 0.3204743564128876, 0.3180955946445465, 0.318777471780777, 0.3154444694519043, 0.31414422392845154, 0.32395991683006287, 0.3196926712989807, 0.319996178150177, 0.31522229313850403, 0.3184100091457367], "val_accuracy": [0.5546666383743286, 0.6629999876022339, 0.6823333501815796, 0.7110000252723694, 0.737333357334137, 0.7473333477973938, 0.762666642665863, 0.7816666960716248, 0.7850000262260437, 0.7983333468437195, 0.8059999942779541, 0.8096666932106018, 0.8116666674613953, 0.8259999752044678, 0.8330000042915344, 0.8309999704360962, 0.8303333520889282, 0.8336666822433472, 0.8360000252723694, 0.846666693687439, 0.8493333458900452, 0.8553333282470703, 0.847000002861023, 0.8463333249092102, 0.8606666922569275, 0.8629999756813049, 0.8613333106040955, 0.8633333444595337, 0.8636666536331177, 0.8666666746139526, 0.8663333058357239, 0.8659999966621399, 0.8700000047683716, 0.8736666440963745, 0.8736666440963745, 0.8740000128746033, 0.8730000257492065, 0.8766666650772095, 0.8776666522026062, 0.8740000128746033, 0.878333330154419, 0.8776666522026062, 0.8830000162124634, 0.8806666731834412, 0.8803333044052124, 0.8820000290870667, 0.8809999823570251, 0.8863333463668823, 0.8799999952316284, 0.8826666474342346, 0.8833333253860474, 0.8849999904632568, 0.8893333077430725, 0.8846666812896729, 0.8896666765213013, 0.8893333077430725, 0.8856666684150696, 0.890333354473114, 0.8923333287239075, 0.8896666765213013, 0.890666663646698, 0.887333333492279, 0.8916666507720947, 0.8880000114440918]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8574285507202148, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2242653369903564, 1.8654372692108154, 1.3991082906723022, 1.089187502861023, 0.9405162930488586, 0.8486537337303162, 0.7747718691825867, 0.7273074388504028, 0.6938613057136536, 0.6669562458992004, 0.6435891389846802, 0.6186704039573669, 0.5988227725028992, 0.5739418864250183, 0.5568001866340637, 0.5440201163291931, 0.5359750986099243, 0.5239378809928894, 0.5042827725410461, 0.4909229874610901, 0.48127904534339905, 0.4671684503555298, 0.46864262223243713, 0.4608471393585205, 0.4488896131515503, 0.4373951256275177, 0.4328955113887787, 0.42659905552864075, 0.41943359375, 0.4171348512172699, 0.3996568024158478, 0.39494165778160095, 0.3847964107990265, 0.3899073600769043, 0.373674601316452, 0.3708743155002594, 0.36338597536087036, 0.36030977964401245, 0.36543917655944824, 0.3567628264427185, 0.34956660866737366, 0.3462101221084595, 0.3436534106731415, 0.33499589562416077, 0.32144293189048767, 0.32684269547462463, 0.32602235674858093, 0.3143584430217743, 0.3080005347728729, 0.31232401728630066, 0.30231818556785583, 0.30205294489860535, 0.2976668179035187, 0.28732678294181824, 0.2831343114376068, 0.28407397866249084, 0.27443039417266846, 0.27457571029663086, 0.268110454082489, 0.271782249212265, 0.26418980956077576, 0.2649126648902893, 0.2535410225391388, 0.24786105751991272, 0.2519605755805969], "accuracy": [0.2566371560096741, 0.4892352521419525, 0.5609562993049622, 0.6164311170578003, 0.6672830581665039, 0.6923788189888, 0.7230220437049866, 0.7309470176696777, 0.7504953145980835, 0.7535332441329956, 0.7622507214546204, 0.7757231593132019, 0.7840443849563599, 0.7969884872436523, 0.7994980812072754, 0.8054417967796326, 0.8064984679222107, 0.8129705190658569, 0.8152159452438354, 0.8212917447090149, 0.8276317715644836, 0.8329150676727295, 0.8308017253875732, 0.835160493850708, 0.8374059200286865, 0.8438779711723328, 0.8436138033866882, 0.8486329317092896, 0.8504821062088013, 0.845859169960022, 0.8560295701026917, 0.859199583530426, 0.8590674996376038, 0.8631620407104492, 0.86118084192276, 0.8647470474243164, 0.8698983192443848, 0.8687095642089844, 0.8658037185668945, 0.870030403137207, 0.8746532797813416, 0.8717474341392517, 0.8765024542808533, 0.8742570281028748, 0.8816536664962769, 0.8862766027450562, 0.8794082403182983, 0.887597382068634, 0.8912957310676575, 0.8868049383163452, 0.8914278149604797, 0.8928807377815247, 0.8944657444953918, 0.8943336606025696, 0.897899866104126, 0.895918607711792, 0.9015982151031494, 0.8988244533538818, 0.9015982151031494, 0.8994848728179932, 0.9012019634246826, 0.9013340473175049, 0.9091269373893738, 0.9089948534965515, 0.9059569239616394], "val_loss": [2.0391712188720703, 1.5124083757400513, 1.0461655855178833, 0.8469324707984924, 0.7632908821105957, 0.710501492023468, 0.658316433429718, 0.6228271126747131, 0.6009827256202698, 0.5746005177497864, 0.5627970099449158, 0.5457547307014465, 0.5251322984695435, 0.5131984353065491, 0.4990413784980774, 0.49239134788513184, 0.47990384697914124, 0.4762885272502899, 0.46406087279319763, 0.4551754593849182, 0.4446026086807251, 0.4388633966445923, 0.43390125036239624, 0.4270283877849579, 0.423287570476532, 0.4195159375667572, 0.41193246841430664, 0.4062415361404419, 0.4047187566757202, 0.40461465716362, 0.39546361565589905, 0.3919523060321808, 0.39037349820137024, 0.38578107953071594, 0.3865962624549866, 0.38015609979629517, 0.3818007707595825, 0.3756328523159027, 0.37375837564468384, 0.369742214679718, 0.37525129318237305, 0.37595483660697937, 0.3724079728126526, 0.36713337898254395, 0.3653908669948578, 0.3597455322742462, 0.36528292298316956, 0.3589232563972473, 0.35676515102386475, 0.363116055727005, 0.3536950945854187, 0.35104215145111084, 0.35100916028022766, 0.35180509090423584, 0.34827563166618347, 0.3469044864177704, 0.34832873940467834, 0.34596940875053406, 0.34739843010902405, 0.3465085029602051, 0.34299734234809875, 0.34336405992507935, 0.3429219424724579, 0.3441943824291229, 0.3398360311985016], "val_accuracy": [0.5013333559036255, 0.6583333611488342, 0.6830000281333923, 0.7096666693687439, 0.7300000190734863, 0.7436666488647461, 0.7699999809265137, 0.7773333191871643, 0.7803333401679993, 0.7960000038146973, 0.7960000038146973, 0.8096666932106018, 0.8180000185966492, 0.8213333487510681, 0.8270000219345093, 0.8273333311080933, 0.8289999961853027, 0.8349999785423279, 0.8363333344459534, 0.8383333086967468, 0.8450000286102295, 0.8473333120346069, 0.846666693687439, 0.8516666889190674, 0.8523333072662354, 0.8503333330154419, 0.8579999804496765, 0.859000027179718, 0.8576666712760925, 0.8566666841506958, 0.8613333106040955, 0.8650000095367432, 0.8666666746139526, 0.8666666746139526, 0.8676666617393494, 0.8669999837875366, 0.8683333396911621, 0.8706666827201843, 0.8696666955947876, 0.8709999918937683, 0.8679999709129333, 0.8690000176429749, 0.8650000095367432, 0.8690000176429749, 0.8733333349227905, 0.875, 0.8663333058357239, 0.874666690826416, 0.8769999742507935, 0.8726666569709778, 0.8736666440963745, 0.8769999742507935, 0.878000020980835, 0.8793333172798157, 0.878333330154419, 0.8759999871253967, 0.8773333430290222, 0.8799999952316284, 0.8790000081062317, 0.8820000290870667, 0.878000020980835, 0.8773333430290222, 0.8766666650772095, 0.8820000290870667, 0.8803333044052124]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [3, 2, 3, 0, 3], [0, 1, 0, 2, 2], [39, 18], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5, 7], [0, 2, 0, 3, 1], [5, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0], [6, 3, 3, 6, 8, 1, 4, 1, 8, 2, 9, 8], [0, 0, 4, 3, 0, 0, 4, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), grad)), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.math.square(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}, "mapping_values": [1, 10, 5, 5, 2, 12, 7, 5, 2, 2, 1, 1, 1, 20, 12, 8, 5], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 1, 0, 2], [39, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [21, 16], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1], [6, 3, 0, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 1, 0, 4, 3, 1, 2, 0], [16, 99, 96, 62, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 6, 3, 3, 2, 2, 1, 1, 1, 11, 6, 5, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(alpha, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [2.3028757572174072, 2.3025851249694824, 2.302584648132324, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10527011007070541, 0.10513802617788315, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025851249694824, 2.3025848865509033, 2.3025848865509033, 2.3025848865509033, 2.3025851249694824, 2.3025848865509033], "val_accuracy": [0.10133333504199982, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 0, 0, 2], [39, 39, 73], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [6, 2, 3, 0, 1, 5, 2, 3], [0, 2, 0, 3, 5, 5, 5], [16, 85], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 2, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 2, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 24, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 3, 15, 8, 7, 2, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.subtract(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.add(grad, tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303844928741455, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10170386731624603, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [2, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 15], [0, 1], [0], [4], [7], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [4, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [4, 0, 0, 3, 0, 4, 3, 1, 2, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}, "mapping_values": [1, 8, 4, 4, 2, 6, 3, 3, 2, 2, 1, 1, 0, 21, 11, 10, 3], "tree_depth": 18}]