[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8822857141494751, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585750579834, 1.8655762672424316, 1.394430160522461, 1.0773245096206665, 0.9378393888473511, 0.8425824046134949, 0.7776632308959961, 0.736241340637207, 0.6971188187599182, 0.6732122302055359, 0.644855797290802, 0.6276965141296387, 0.6100340485572815, 0.5899673104286194, 0.5746485590934753, 0.5484329462051392, 0.5425268411636353, 0.5357900857925415, 0.5214410424232483, 0.5127171874046326, 0.4895091950893402, 0.4932740032672882, 0.48551443219184875, 0.47113916277885437, 0.46571049094200134, 0.450914591550827, 0.438728004693985, 0.4414178729057312, 0.4245515465736389, 0.4182806611061096, 0.4126766324043274, 0.41352686285972595, 0.4031256139278412, 0.40064555406570435, 0.3982388377189636, 0.38566267490386963, 0.38400527834892273, 0.3741128146648407, 0.36422181129455566, 0.36170411109924316, 0.35991787910461426, 0.35666367411613464, 0.3521813750267029, 0.34583958983421326, 0.34736087918281555, 0.34181836247444153, 0.33650368452072144, 0.33141741156578064, 0.3230496346950531, 0.3225416839122772, 0.315096914768219, 0.3059031665325165, 0.3058394491672516, 0.3017319440841675, 0.29568877816200256, 0.2933836281299591, 0.28774771094322205, 0.2856961190700531, 0.2802303731441498, 0.2779994010925293, 0.274711549282074, 0.2719985842704773, 0.2586328387260437, 0.2598455548286438, 0.2622571289539337, 0.25739434361457825, 0.2502012252807617, 0.2544722855091095, 0.24556587636470795, 0.24580754339694977, 0.23948103189468384, 0.23949603736400604, 0.23484042286872864, 0.22871272265911102, 0.2256491780281067, 0.22479403018951416, 0.21744707226753235, 0.21390178799629211, 0.21272219717502594], "accuracy": [0.2785629332065582, 0.49451854825019836, 0.559899628162384, 0.6215823292732239, 0.6654338836669922, 0.6950204968452454, 0.7181349992752075, 0.7322678565979004, 0.7441553473472595, 0.7483819723129272, 0.7627789974212646, 0.7717606425285339, 0.7728173136711121, 0.78113853931427, 0.7882710099220276, 0.7993659973144531, 0.7976489067077637, 0.8074230551719666, 0.8128384351730347, 0.8198388814926147, 0.8212917447090149, 0.819970965385437, 0.8272355198860168, 0.8350284099578857, 0.8305375576019287, 0.8387266993522644, 0.846387505531311, 0.8433496356010437, 0.8504821062088013, 0.8524633646011353, 0.8535200357437134, 0.854708731174469, 0.856689989566803, 0.8551049828529358, 0.8593316674232483, 0.8615770936012268, 0.8628978729248047, 0.8702945709228516, 0.8691058158874512, 0.871879518032074, 0.8722757697105408, 0.8691058158874512, 0.8733324408531189, 0.8800686597824097, 0.8795403242111206, 0.8755778670310974, 0.8768987059593201, 0.8829745054244995, 0.8824461698532104, 0.8823140859603882, 0.887201189994812, 0.8897107243537903, 0.8889182209968567, 0.8927486538887024, 0.8902390599250793, 0.8953903317451477, 0.8980319499969482, 0.8976356983184814, 0.900409460067749, 0.89552241563797, 0.9025228023529053, 0.8989565372467041, 0.9056927561759949, 0.9085986018180847, 0.9030511379241943, 0.9066173434257507, 0.9101836085319519, 0.9083344340324402, 0.909259021282196, 0.9099194407463074, 0.9126931428909302, 0.9140139818191528, 0.9119006991386414, 0.9171839952468872, 0.9169198274612427, 0.9185048341751099, 0.9218068718910217, 0.9185048341751099, 0.9196935892105103], "val_loss": [2.033445358276367, 1.5042319297790527, 1.0271512269973755, 0.8147247433662415, 0.7278039455413818, 0.68117356300354, 0.6306353211402893, 0.5966841578483582, 0.5751398801803589, 0.5460951328277588, 0.5314993858337402, 0.509799063205719, 0.4957965612411499, 0.4792602062225342, 0.46671679615974426, 0.45267683267593384, 0.4441072940826416, 0.4356139600276947, 0.42943108081817627, 0.4255247414112091, 0.41811680793762207, 0.4163394272327423, 0.39929893612861633, 0.3969916105270386, 0.39089226722717285, 0.387652188539505, 0.3844633102416992, 0.3824205696582794, 0.3749690353870392, 0.3701930642127991, 0.36967378854751587, 0.36689504981040955, 0.3585263788700104, 0.3587398827075958, 0.36267170310020447, 0.3561091423034668, 0.35379692912101746, 0.3499273955821991, 0.34701839089393616, 0.3467637896537781, 0.3424672484397888, 0.33951225876808167, 0.3386255204677582, 0.34044384956359863, 0.33945050835609436, 0.33684298396110535, 0.3322163224220276, 0.33181649446487427, 0.32827115058898926, 0.3312568664550781, 0.3297465741634369, 0.3256674110889435, 0.3234780728816986, 0.32119208574295044, 0.3232716917991638, 0.3209094703197479, 0.31944912672042847, 0.3157532513141632, 0.3144265413284302, 0.31676045060157776, 0.31425556540489197, 0.3131799101829529, 0.3147056996822357, 0.3154993951320648, 0.31771615147590637, 0.31545644998550415, 0.3127000629901886, 0.31382524967193604, 0.31026333570480347, 0.3147730529308319, 0.30829918384552, 0.3107443153858185, 0.31316936016082764, 0.30297672748565674, 0.30325081944465637, 0.30436232686042786, 0.3072424829006195, 0.30681705474853516, 0.3061434030532837], "val_accuracy": [0.5526666641235352, 0.6666666865348816, 0.687333345413208, 0.7083333134651184, 0.731333315372467, 0.7446666955947876, 0.7606666684150696, 0.762666642665863, 0.7873333096504211, 0.7889999747276306, 0.7973333597183228, 0.8056666851043701, 0.8193333148956299, 0.8259999752044678, 0.8289999961853027, 0.8410000205039978, 0.8453333377838135, 0.8450000286102295, 0.8489999771118164, 0.847000002861023, 0.8516666889190674, 0.856333315372467, 0.859333336353302, 0.856333315372467, 0.8633333444595337, 0.8640000224113464, 0.8656666874885559, 0.8646666407585144, 0.8679999709129333, 0.8696666955947876, 0.8640000224113464, 0.8686666488647461, 0.8713333606719971, 0.8709999918937683, 0.8703333139419556, 0.8723333477973938, 0.871999979019165, 0.874666690826416, 0.8723333477973938, 0.8759999871253967, 0.8726666569709778, 0.875333309173584, 0.8790000081062317, 0.8756666779518127, 0.8726666569709778, 0.8769999742507935, 0.8796666860580444, 0.8796666860580444, 0.8806666731834412, 0.8793333172798157, 0.8813333511352539, 0.8840000033378601, 0.8840000033378601, 0.8843333125114441, 0.8809999823570251, 0.8856666684150696, 0.8866666555404663, 0.8833333253860474, 0.8866666555404663, 0.8843333125114441, 0.8856666684150696, 0.8880000114440918, 0.887333333492279, 0.8883333206176758, 0.8866666555404663, 0.8896666765213013, 0.8863333463668823, 0.8853333592414856, 0.890999972820282, 0.8870000243186951, 0.8883333206176758, 0.8883333206176758, 0.8916666507720947, 0.8939999938011169, 0.8896666765213013, 0.8916666507720947, 0.890999972820282, 0.8926666378974915, 0.8913333415985107]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8665714263916016, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2225184440612793, 1.8686212301254272, 1.3906641006469727, 1.0971142053604126, 0.940211296081543, 0.8441168665885925, 0.7763234972953796, 0.7206258177757263, 0.6856625080108643, 0.6520501971244812, 0.629284679889679, 0.6057044863700867, 0.5797489285469055, 0.5697521567344666, 0.5484060645103455, 0.5231266617774963, 0.534703254699707, 0.5148060321807861, 0.5012797117233276, 0.48983633518218994, 0.490276962518692, 0.47935494780540466, 0.4646780788898468, 0.4553203582763672, 0.4465023875236511, 0.4449537396430969, 0.42964982986450195, 0.42416277527809143, 0.415964275598526, 0.4147498607635498, 0.40198156237602234, 0.39569324254989624, 0.39120978116989136, 0.38562822341918945, 0.3848080337047577, 0.38351336121559143, 0.3741834759712219, 0.3625897467136383, 0.3678569197654724, 0.3541249632835388, 0.3520450294017792, 0.3456016182899475, 0.3372204303741455, 0.33288583159446716, 0.33851662278175354, 0.32916343212127686, 0.32339194416999817, 0.3216392695903778, 0.3160337209701538, 0.31465405225753784, 0.31351661682128906, 0.3058735132217407, 0.3026815950870514, 0.2956397235393524, 0.2899971604347229, 0.2882694602012634, 0.2859592139720917, 0.2751743197441101, 0.2834114730358124, 0.26974284648895264, 0.27199849486351013, 0.270053893327713, 0.2577066123485565, 0.25385424494743347, 0.2524753510951996, 0.25150516629219055, 0.24665877223014832, 0.2492070347070694, 0.23601052165031433, 0.23880529403686523, 0.2342052012681961, 0.2281457632780075, 0.23012183606624603, 0.22683222591876984, 0.220140740275383, 0.21950048208236694, 0.2159949392080307, 0.2107771784067154, 0.2105148285627365, 0.2091093212366104, 0.20371784269809723, 0.19574032723903656, 0.19789892435073853, 0.19059397280216217, 0.19672086834907532, 0.19436030089855194, 0.18235883116722107, 0.18190480768680573, 0.18395406007766724], "accuracy": [0.27724209427833557, 0.4913485646247864, 0.5704662799835205, 0.6174877882003784, 0.6610751748085022, 0.696209192276001, 0.7197200059890747, 0.7368907928466797, 0.7499669790267944, 0.7585523724555969, 0.7680623531341553, 0.7766477465629578, 0.7877426743507385, 0.7924976944923401, 0.8016114234924316, 0.8132346868515015, 0.8024039268493652, 0.8112534880638123, 0.8204993009567261, 0.8226125836372375, 0.8201030492782593, 0.824329674243927, 0.8313300609588623, 0.8403117060661316, 0.8359529972076416, 0.8401796221733093, 0.8465195894241333, 0.8466516733169556, 0.8473120927810669, 0.8524633646011353, 0.8557654023170471, 0.8578787446022034, 0.8613129258155823, 0.8613129258155823, 0.8610487580299377, 0.8647470474243164, 0.8658037185668945, 0.8683133125305176, 0.8705587387084961, 0.8732003569602966, 0.8720116019248962, 0.8728041052818298, 0.878351628780365, 0.8833707571029663, 0.8770307898521423, 0.883238673210144, 0.8837670087814331, 0.885219931602478, 0.8868049383163452, 0.8853520154953003, 0.8862766027450562, 0.8926165699958801, 0.8914278149604797, 0.89552241563797, 0.8938053250312805, 0.8948619961738586, 0.89552241563797, 0.9010698795318604, 0.8949940800666809, 0.9015982151031494, 0.9039757251739502, 0.906749427318573, 0.9064852595329285, 0.910711944103241, 0.908730685710907, 0.9108440279960632, 0.9095231890678406, 0.9097873568534851, 0.913617730140686, 0.9141460657119751, 0.9154669046401978, 0.9215427041053772, 0.9162594079971313, 0.9194294214248657, 0.9220710396766663, 0.919561505317688, 0.9256373047828674, 0.9255052208900452, 0.9227314591407776, 0.9223352074623108, 0.9225993752479553, 0.9290714859962463, 0.9299960136413574, 0.9314489364624023, 0.9280148148536682, 0.9288073182106018, 0.9351472854614258, 0.9359397888183594, 0.9331660270690918], "val_loss": [2.039280414581299, 1.5107413530349731, 1.03917396068573, 0.8299003839492798, 0.7446708083152771, 0.6951326727867126, 0.6460944414138794, 0.6121008396148682, 0.5918381214141846, 0.5691576600074768, 0.5572091341018677, 0.540177583694458, 0.52972811460495, 0.5168025493621826, 0.5022159814834595, 0.49534833431243896, 0.4862169325351715, 0.482750803232193, 0.47313207387924194, 0.4688107371330261, 0.46689167618751526, 0.45229196548461914, 0.45348867774009705, 0.4502301514148712, 0.43964526057243347, 0.44006291031837463, 0.42734140157699585, 0.43321892619132996, 0.4220023453235626, 0.4224444031715393, 0.41900208592414856, 0.4143446087837219, 0.41640111804008484, 0.4077800214290619, 0.40743792057037354, 0.4076663851737976, 0.40349081158638, 0.3991110920906067, 0.3995988667011261, 0.3951399624347687, 0.3908882141113281, 0.3934732973575592, 0.3906398415565491, 0.3883180022239685, 0.387077271938324, 0.3871004283428192, 0.38628101348876953, 0.38566485047340393, 0.38365182280540466, 0.3862120509147644, 0.38806694746017456, 0.3803577423095703, 0.3830500841140747, 0.384762704372406, 0.37715813517570496, 0.374074786901474, 0.37578529119491577, 0.37748080492019653, 0.37203341722488403, 0.37563493847846985, 0.3697456121444702, 0.37153902649879456, 0.37541863322257996, 0.3690078854560852, 0.37555208802223206, 0.37015706300735474, 0.37540698051452637, 0.37271249294281006, 0.3691382110118866, 0.37148845195770264, 0.37664660811424255, 0.37402409315109253, 0.3796328902244568, 0.3678504228591919, 0.37758293747901917, 0.36797407269477844, 0.37029603123664856, 0.3741251528263092, 0.3771575391292572, 0.3766937255859375, 0.3725416660308838, 0.38093024492263794, 0.37855392694473267, 0.3746446967124939, 0.37769579887390137, 0.3697706162929535, 0.3768778145313263, 0.3730449676513672, 0.37604960799217224], "val_accuracy": [0.5253333449363708, 0.6536666750907898, 0.6830000281333923, 0.7129999995231628, 0.7289999723434448, 0.7456666827201843, 0.7593333125114441, 0.7673333287239075, 0.7713333368301392, 0.7850000262260437, 0.7906666398048401, 0.7979999780654907, 0.8016666769981384, 0.812666654586792, 0.8130000233650208, 0.8159999847412109, 0.8273333311080933, 0.8276666402816772, 0.8303333520889282, 0.8276666402816772, 0.8316666483879089, 0.8420000076293945, 0.8373333215713501, 0.8413333296775818, 0.8479999899864197, 0.843666672706604, 0.8463333249092102, 0.8446666598320007, 0.8539999723434448, 0.8513333201408386, 0.8550000190734863, 0.859666645526886, 0.8569999933242798, 0.8566666841506958, 0.8579999804496765, 0.8556666374206543, 0.8613333106040955, 0.8633333444595337, 0.859666645526886, 0.8633333444595337, 0.8663333058357239, 0.8636666536331177, 0.8653333187103271, 0.8676666617393494, 0.8679999709129333, 0.8666666746139526, 0.8709999918937683, 0.8676666617393494, 0.8696666955947876, 0.8659999966621399, 0.8650000095367432, 0.8723333477973938, 0.8700000047683716, 0.8703333139419556, 0.8713333606719971, 0.8730000257492065, 0.8690000176429749, 0.8706666827201843, 0.871999979019165, 0.875, 0.874666690826416, 0.8740000128746033, 0.8740000128746033, 0.8773333430290222, 0.8763333559036255, 0.878000020980835, 0.875333309173584, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8766666650772095, 0.8793333172798157, 0.871999979019165, 0.8806666731834412, 0.8743333220481873, 0.8790000081062317, 0.8816666603088379, 0.8816666603088379, 0.8813333511352539, 0.8823333382606506, 0.8809999823570251, 0.8776666522026062, 0.8799999952316284, 0.8856666684150696, 0.8769999742507935, 0.8830000162124634, 0.8809999823570251, 0.8836666941642761, 0.8846666812896729]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [92, 46], [0, 1], [0], [2], [74], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 2, 1, 4, 1, 4, 2, 8], [4, 1, 0, 3, 0, 0, 3, 1, 4, 0], [16, 94, 96, 99, 61, 18]], "fitness": -0.1397142857313156, "mapping_values": [1, 6, 3, 3, 1, 10, 6, 4, 2, 2, 1, 1, 0, 17, 8, 9, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(alpha, tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))))), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha))), grad)", "other_info": {"loss": [59138808.0, 168981808.0, 11734066176.0, 11597779968.0, 11458109440.0, 12005960704.0, 11308069888.0, 11689341952.0], "accuracy": [0.08809932321310043, 0.09219389408826828, 0.12455421686172485, 0.11596883088350296, 0.11372341960668564, 0.10619468986988068, 0.11306300014257431, 0.11913882195949554], "val_loss": [149926624.0, 10672769024.0, 10672801792.0, 10859626496.0, 10868724736.0, 10900548608.0, 11146905600.0, 11203330048.0], "val_accuracy": [0.09733333438634872, 0.13600000739097595, 0.1366666704416275, 0.1146666631102562, 0.1133333370089531, 0.10866666585206985, 0.1003333330154419, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 0], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 2, 0, 2, 0], [16, 12, 96, 99, 72, 48]], "fitness": -0.11028571426868439, "mapping_values": [1, 8, 5, 3, 2, 10, 6, 4, 2, 2, 1, 1, 1, 16, 8, 8, 6], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), tf.math.subtract(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3079910278320312, 2.302635431289673, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09179764986038208, 0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3027148246765137, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.11266666650772095, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [1, 2, 3, 0, 3], [1, 2, 0, 2], [39, 39], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5, 1], [0, 2, 0, 3, 3], [76, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 0, 1, 4, 1, 4, 8, 8, 3], [0, 0, 0, 2, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 1, 12, 7, 5, 2, 2, 1, 1, 1, 22, 12, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(alpha, tf.math.add(tf.math.multiply(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(beta), tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.negative(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), beta))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(sigma))))), tf.math.sqrt(tf.math.multiply(alpha, beta))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 5, 3], [0, 1, 0, 2], [89, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 2, 5], [0, 2, 0, 3], [25, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 6, 4, 1, 4, 2, 8], [4, 0, 0, 3, 0, 0, 3, 3, 2, 0], [9, 99, 48, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 1, 0, 1, 1, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.square(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.divide_no_nan(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), sigma), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}]