[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8862857222557068, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222418785095215, 1.8632627725601196, 1.3950724601745605, 1.0979150533676147, 0.9474178552627563, 0.8543937802314758, 0.7783248424530029, 0.7376496195793152, 0.7006842494010925, 0.6746688485145569, 0.647553563117981, 0.6295329928398132, 0.6112891435623169, 0.58865886926651, 0.5667527914047241, 0.5575993657112122, 0.5467248558998108, 0.5289703011512756, 0.5205997824668884, 0.5110849142074585, 0.5064045786857605, 0.4867391884326935, 0.4731372892856598, 0.47443822026252747, 0.46410614252090454, 0.4545186161994934, 0.445819616317749, 0.4367676079273224, 0.4321127235889435, 0.4275900721549988, 0.4177286922931671, 0.40700381994247437, 0.40491974353790283, 0.3923063576221466, 0.38597339391708374, 0.37638187408447266, 0.3749813437461853, 0.3708414137363434, 0.369646281003952, 0.3635149896144867, 0.3594855070114136, 0.3503628671169281, 0.3338625133037567, 0.3396199643611908, 0.33679017424583435, 0.3303111493587494, 0.3275522291660309, 0.3153315782546997, 0.3093845844268799, 0.31660354137420654, 0.313541054725647, 0.3128948211669922, 0.2977619469165802, 0.30230653285980225, 0.298944890499115, 0.28947505354881287, 0.2822195291519165, 0.2778712213039398, 0.2668195366859436, 0.26853811740875244, 0.26283398270606995, 0.2662760019302368, 0.2576100528240204, 0.25102800130844116, 0.2539205849170685, 0.25087955594062805, 0.24508193135261536], "accuracy": [0.280940443277359, 0.48685774207115173, 0.5665037631988525, 0.616299033164978, 0.6625280380249023, 0.6930392384529114, 0.7169462442398071, 0.7320036888122559, 0.7375511527061462, 0.7491744756698608, 0.7672698497772217, 0.7670056819915771, 0.7745344042778015, 0.7876105904579163, 0.7906485199928284, 0.7994980812072754, 0.802800178527832, 0.8068947196006775, 0.8117818236351013, 0.8153480291366577, 0.8181217908859253, 0.829216718673706, 0.8300092220306396, 0.8238013386726379, 0.8325188159942627, 0.8385946154594421, 0.8372738361358643, 0.842028796672821, 0.8451988101005554, 0.8481045961380005, 0.8515387773513794, 0.8549728989601135, 0.8516708612442017, 0.8603883385658264, 0.8598600029945374, 0.8667283058166504, 0.8636903762817383, 0.8636903762817383, 0.8677849769592285, 0.8704266548156738, 0.8758420348167419, 0.8739928603172302, 0.8790120482444763, 0.8768987059593201, 0.8751816153526306, 0.8794082403182983, 0.8813894987106323, 0.8860124349594116, 0.8874653577804565, 0.8856161832809448, 0.8838990926742554, 0.8877294659614563, 0.8918240666389465, 0.8918240666389465, 0.8922203183174133, 0.8953903317451477, 0.89552241563797, 0.9002773761749268, 0.9049002528190613, 0.9034473896026611, 0.9035794734954834, 0.9038436412811279, 0.9085986018180847, 0.9095231890678406, 0.9095231890678406, 0.909259021282196, 0.910711944103241], "val_loss": [2.0414316654205322, 1.5168657302856445, 1.0494927167892456, 0.8396123051643372, 0.7532041668891907, 0.6975494027137756, 0.6532282829284668, 0.6188269853591919, 0.5909113883972168, 0.5747429728507996, 0.5562715530395508, 0.5392115712165833, 0.5226473808288574, 0.5080817937850952, 0.49551260471343994, 0.4949219524860382, 0.48097461462020874, 0.46894019842147827, 0.4645398259162903, 0.4554585814476013, 0.44845467805862427, 0.44272810220718384, 0.4365209937095642, 0.4303407371044159, 0.42757970094680786, 0.42137086391448975, 0.4158954322338104, 0.4094981253147125, 0.40614867210388184, 0.40746310353279114, 0.39686036109924316, 0.39440515637397766, 0.39069101214408875, 0.3898474872112274, 0.3889416456222534, 0.3833497166633606, 0.387736976146698, 0.3792175352573395, 0.3778442442417145, 0.37528878450393677, 0.3729557991027832, 0.37016138434410095, 0.36690768599510193, 0.36455467343330383, 0.36386409401893616, 0.3628668487071991, 0.365796834230423, 0.36076274514198303, 0.3599783480167389, 0.35867130756378174, 0.35705167055130005, 0.35411083698272705, 0.3552299737930298, 0.3651564121246338, 0.36276260018348694, 0.34837988018989563, 0.34821584820747375, 0.3528410792350769, 0.3496720790863037, 0.3506317138671875, 0.34951722621917725, 0.3443804085254669, 0.345913290977478, 0.3461855351924896, 0.3431210517883301, 0.348863810300827, 0.3426092565059662], "val_accuracy": [0.5373333096504211, 0.6570000052452087, 0.6759999990463257, 0.7110000252723694, 0.7286666631698608, 0.7419999837875366, 0.7590000033378601, 0.7616666555404663, 0.7836666703224182, 0.7903333306312561, 0.7886666655540466, 0.8006666898727417, 0.809333324432373, 0.8183333277702332, 0.8146666884422302, 0.8140000104904175, 0.8233333230018616, 0.8289999961853027, 0.8326666951179504, 0.8363333344459534, 0.8389999866485596, 0.8366666436195374, 0.8363333344459534, 0.8489999771118164, 0.847000002861023, 0.8519999980926514, 0.8533333539962769, 0.8560000061988831, 0.8573333621025085, 0.8539999723434448, 0.8619999885559082, 0.862666666507721, 0.8656666874885559, 0.8629999756813049, 0.8646666407585144, 0.8636666536331177, 0.8603333234786987, 0.8659999966621399, 0.8673333525657654, 0.8673333525657654, 0.8713333606719971, 0.8703333139419556, 0.8713333606719971, 0.871666669845581, 0.8736666440963745, 0.8730000257492065, 0.871999979019165, 0.874666690826416, 0.875333309173584, 0.874666690826416, 0.875, 0.8786666393280029, 0.8776666522026062, 0.8743333220481873, 0.8723333477973938, 0.8833333253860474, 0.8826666474342346, 0.8790000081062317, 0.8836666941642761, 0.878333330154419, 0.8820000290870667, 0.887666642665863, 0.8820000290870667, 0.8803333044052124, 0.8830000162124634, 0.8846666812896729, 0.8856666684150696]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8560000061988831, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2228775024414062, 1.8721405267715454, 1.3962112665176392, 1.0939139127731323, 0.938170850276947, 0.8466542363166809, 0.7768049240112305, 0.7244179844856262, 0.6968837380409241, 0.6603671312332153, 0.6310063004493713, 0.6155498623847961, 0.5925275683403015, 0.5698597431182861, 0.5562658309936523, 0.5402885675430298, 0.5226340293884277, 0.5171456336975098, 0.5087423324584961, 0.49806925654411316, 0.48250433802604675, 0.48150452971458435, 0.4628845751285553, 0.4661341607570648, 0.451399028301239, 0.44725069403648376, 0.43356743454933167, 0.4315768778324127, 0.4119860827922821, 0.41533806920051575, 0.41252899169921875, 0.4028795063495636, 0.3860282897949219, 0.38680949807167053, 0.38447821140289307, 0.3796349763870239, 0.3692265748977661, 0.36154186725616455, 0.3603881597518921, 0.36580201983451843, 0.3536800444126129, 0.3488195538520813, 0.3373221755027771, 0.3432520627975464, 0.32727789878845215, 0.3265184760093689, 0.3251413404941559, 0.3136740028858185, 0.31795036792755127, 0.30809906125068665, 0.30640578269958496, 0.2962554395198822, 0.30117031931877136], "accuracy": [0.2709021270275116, 0.4865935742855072, 0.5628054141998291, 0.6135252714157104, 0.6618676781654358, 0.6922467350959778, 0.7189275026321411, 0.7401928305625916, 0.7481178045272827, 0.7582882046699524, 0.7733456492424011, 0.7808743715286255, 0.7845727205276489, 0.7928939461708069, 0.8010830879211426, 0.8055738806724548, 0.8161405324935913, 0.8142913579940796, 0.8136309385299683, 0.8212917447090149, 0.8278959393501282, 0.8256505131721497, 0.830669641494751, 0.8350284099578857, 0.8341038227081299, 0.8363492488861084, 0.847840428352356, 0.8459912538528442, 0.8492933511734009, 0.8508783578872681, 0.8531237840652466, 0.8562937378883362, 0.8609166741371155, 0.8603883385658264, 0.8627657890319824, 0.8648791313171387, 0.8672566413879395, 0.8693699836730957, 0.8661999702453613, 0.8688416481018066, 0.8722757697105408, 0.8754457831382751, 0.8780874609947205, 0.8794082403182983, 0.8787478804588318, 0.8796724081039429, 0.8819178342819214, 0.8907673954963684, 0.8854840993881226, 0.8877294659614563, 0.8848236799240112, 0.8930128216743469, 0.891559898853302], "val_loss": [2.0372605323791504, 1.5128008127212524, 1.0396168231964111, 0.8337075114250183, 0.7514031529426575, 0.6941356062889099, 0.6521120667457581, 0.6154816746711731, 0.5918508768081665, 0.5669539570808411, 0.5438797473907471, 0.5293182730674744, 0.5192773342132568, 0.5116555094718933, 0.49670636653900146, 0.4845401346683502, 0.4708654284477234, 0.4646454155445099, 0.45938578248023987, 0.4499027132987976, 0.4423486292362213, 0.4329613149166107, 0.42843618988990784, 0.42488980293273926, 0.4175836145877838, 0.41323763132095337, 0.4105759561061859, 0.403708815574646, 0.39836937189102173, 0.3918970823287964, 0.3914403021335602, 0.3861619532108307, 0.3839404284954071, 0.3780290484428406, 0.3769252896308899, 0.37784478068351746, 0.3707119822502136, 0.364017128944397, 0.3633447289466858, 0.36118173599243164, 0.36095893383026123, 0.3534626364707947, 0.35629159212112427, 0.3519206643104553, 0.35516130924224854, 0.3467575013637543, 0.3454582095146179, 0.3435485064983368, 0.3430088758468628, 0.3434562087059021, 0.3400026261806488, 0.3405531942844391, 0.3353314697742462], "val_accuracy": [0.5486666560173035, 0.6473333239555359, 0.6886666417121887, 0.7036666870117188, 0.7206666469573975, 0.7406666874885559, 0.750333309173584, 0.7593333125114441, 0.7683333158493042, 0.7806666493415833, 0.7906666398048401, 0.7983333468437195, 0.8019999861717224, 0.8046666383743286, 0.8119999766349792, 0.8130000233650208, 0.8220000267028809, 0.8266666531562805, 0.8303333520889282, 0.8370000123977661, 0.8443333506584167, 0.8446666598320007, 0.843666672706604, 0.8483333587646484, 0.8506666421890259, 0.8516666889190674, 0.8556666374206543, 0.8583333492279053, 0.859333336353302, 0.8606666922569275, 0.8640000224113464, 0.8619999885559082, 0.8619999885559082, 0.8650000095367432, 0.8640000224113464, 0.8659999966621399, 0.8676666617393494, 0.871666669845581, 0.8690000176429749, 0.8650000095367432, 0.8686666488647461, 0.871999979019165, 0.8690000176429749, 0.8733333349227905, 0.8723333477973938, 0.8756666779518127, 0.874666690826416, 0.8799999952316284, 0.8766666650772095, 0.874666690826416, 0.8786666393280029, 0.8740000128746033, 0.8786666393280029]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 93], [0, 1], [0], [0], [84], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 1, 2, 8], [0, 0, 0, 3, 0, 3, 4, 1, 2, 0], [82, 99, 96, 99, 61, 1]], "fitness": -0.24199999868869781, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, grad)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.242436647415161, 2.2961487770080566, 2.3826417922973633, 2.455191135406494, 2.542311668395996, 2.6342692375183105], "accuracy": [0.19112402200698853, 0.1916523575782776, 0.17923656105995178, 0.17197199165821075, 0.16391493380069733, 0.15480121970176697], "val_loss": [2.1440467834472656, 2.1792235374450684, 2.2245302200317383, 2.278318405151367, 2.339725971221924, 2.406902551651001], "val_accuracy": [0.23766666650772095, 0.2133333384990692, 0.1913333386182785, 0.17366667091846466, 0.1586666703224182, 0.14266666769981384]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1], [6, 2, 3, 2, 1, 3, 3, 1, 9, 4, 4, 8], [2, 1, 0, 0, 2, 3, 0, 0, 1, 3], [39, 39, 99, 21, 11], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [27, 16], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 1, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 24, 78, 1, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 22, 12, 10, 5, 1, 0, 1, 1, 2, 1, 1, 1, 10, 5, 5, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.add(grad, alpha), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.multiply(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), grad), tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.sqrt(grad)))), lambda shape,  alpha, beta, grad: tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), sigma), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.303579807281494, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09470347315073013, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 0, 1, 1, 1], [4, 1], [0, 1, 5], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 0, 3, 6, 8, 1, 4, 1, 8, 2, 8], [0, 0, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 76, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 1, 0, 1, 1, 5, 2, 3, 1, 16, 9, 7, 4], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)))))), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 0, 3], [0, 1, 0, 2, 1], [60, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0], [0, 2, 3, 0, 5, 4], [0, 2, 0, 3], [16, 16], [0, 1, 1], [3], [0, 6], [0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [6, 1, 3, 6, 8, 1, 4, 1, 4, 2, 1, 0, 2, 3, 2], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 1, 7, 3, 4], [16, 99, 96, 75, 61, 1]], "fitness": -0.08942857384681702, "mapping_values": [1, 10, 5, 5, 2, 8, 5, 3, 2, 3, 1, 2, 1, 29, 15, 14, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.subtract(beta, tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), alpha), grad), sigma))), grad))", "other_info": {"loss": [2.309532880783081, 2.309471368789673, 2.310398578643799, 2.3105127811431885, 2.310858726501465, 2.3112590312957764], "accuracy": [0.09245806187391281, 0.09391097724437714, 0.08757099509239197, 0.09245806187391281, 0.09060890227556229, 0.09166556596755981], "val_loss": [2.308631658554077, 2.308631658554077, 2.308631658554077, 2.308631658554077, 2.308631658554077, 2.308631658554077], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}]