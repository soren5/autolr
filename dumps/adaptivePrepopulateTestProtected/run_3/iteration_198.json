[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8808571696281433, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223215103149414, 1.8640538454055786, 1.390925645828247, 1.0857504606246948, 0.9175904989242554, 0.8278062343597412, 0.75929194688797, 0.7150763869285583, 0.6742342710494995, 0.6527069211006165, 0.6226239800453186, 0.6030511260032654, 0.5812473893165588, 0.5698184370994568, 0.5517233610153198, 0.5318202376365662, 0.5262278914451599, 0.5063096284866333, 0.4941454231739044, 0.4912639260292053, 0.47673994302749634, 0.46776485443115234, 0.45580968260765076, 0.45419755578041077, 0.4471202790737152, 0.4368197023868561, 0.4238806366920471, 0.41453513503074646, 0.41017231345176697, 0.4062040150165558, 0.40386685729026794, 0.3953916132450104, 0.39355871081352234, 0.3836102783679962, 0.37635838985443115, 0.3735085725784302, 0.363672137260437, 0.35395750403404236, 0.35972025990486145, 0.34721699357032776, 0.3442964553833008, 0.335767537355423, 0.3300938904285431, 0.32407090067863464, 0.32112976908683777, 0.3181473910808563, 0.31370431184768677, 0.3087446987628937, 0.3084625005722046, 0.30203962326049805, 0.293395072221756, 0.2889169156551361, 0.2914500832557678, 0.28307828307151794, 0.28207361698150635, 0.2786792516708374, 0.27818819880485535, 0.26387521624565125], "accuracy": [0.27222296595573425, 0.5027077198028564, 0.5674283504486084, 0.6277902722358704, 0.6709813475608826, 0.7058512568473816, 0.7269845604896545, 0.7415136694908142, 0.7586844563484192, 0.7617223858833313, 0.783119797706604, 0.7832518815994263, 0.7926297783851624, 0.8001585006713867, 0.807158887386322, 0.8103289008140564, 0.8133667707443237, 0.8190463781356812, 0.8247259259223938, 0.8271034359931946, 0.8298771381378174, 0.8341038227081299, 0.8366134166717529, 0.839519202709198, 0.8404437899589539, 0.848368763923645, 0.8515387773513794, 0.8564258217811584, 0.8529917001724243, 0.8585391640663147, 0.8515387773513794, 0.863558292388916, 0.8615770936012268, 0.8640866279602051, 0.8652753829956055, 0.8671245574951172, 0.8720116019248962, 0.8771628737449646, 0.8705587387084961, 0.876370370388031, 0.8787478804588318, 0.8784837126731873, 0.8828424215316772, 0.8842953443527222, 0.884691596031189, 0.8840311765670776, 0.8891823887825012, 0.8894465565681458, 0.8899748921394348, 0.8932769894599915, 0.8945978283882141, 0.8980319499969482, 0.896446943283081, 0.8988244533538818, 0.9019944667816162, 0.901862382888794, 0.8985602855682373, 0.904768168926239], "val_loss": [2.039530038833618, 1.5154659748077393, 1.039007544517517, 0.8366694450378418, 0.7400773167610168, 0.6859951019287109, 0.6454513669013977, 0.6114123463630676, 0.5899704694747925, 0.5724708437919617, 0.5533395409584045, 0.5345184803009033, 0.5225448608398438, 0.5092709064483643, 0.500229001045227, 0.49316829442977905, 0.480929970741272, 0.4729439616203308, 0.4688349962234497, 0.4563703238964081, 0.45455607771873474, 0.44636544585227966, 0.44144734740257263, 0.4332112669944763, 0.42851945757865906, 0.4277913272380829, 0.4196922183036804, 0.41600528359413147, 0.4114539325237274, 0.4113328456878662, 0.4059373438358307, 0.4033544063568115, 0.40210506319999695, 0.3963744640350342, 0.39264819025993347, 0.39112263917922974, 0.384288489818573, 0.383841872215271, 0.3804401755332947, 0.3786342442035675, 0.3777892291545868, 0.37486007809638977, 0.37355443835258484, 0.37450093030929565, 0.36811116337776184, 0.3697490096092224, 0.3684578537940979, 0.370509535074234, 0.36476588249206543, 0.36312252283096313, 0.361527681350708, 0.36036449670791626, 0.3581533133983612, 0.3633516728878021, 0.35499346256256104, 0.3547135293483734, 0.35882508754730225, 0.35363712906837463], "val_accuracy": [0.5473333597183228, 0.6496666669845581, 0.6846666932106018, 0.6959999799728394, 0.7279999852180481, 0.7450000047683716, 0.7580000162124634, 0.7713333368301392, 0.7763333320617676, 0.7816666960716248, 0.7963333129882812, 0.8109999895095825, 0.8116666674613953, 0.8113333582878113, 0.8116666674613953, 0.8186666369438171, 0.8259999752044678, 0.8236666917800903, 0.828000009059906, 0.8360000252723694, 0.8323333263397217, 0.8373333215713501, 0.8373333215713501, 0.8366666436195374, 0.843666672706604, 0.843999981880188, 0.846666693687439, 0.8483333587646484, 0.8493333458900452, 0.847000002861023, 0.8476666808128357, 0.8496666550636292, 0.8510000109672546, 0.8519999980926514, 0.8553333282470703, 0.8556666374206543, 0.8583333492279053, 0.859333336353302, 0.8560000061988831, 0.862333357334137, 0.8636666536331177, 0.859666645526886, 0.8636666536331177, 0.8643333315849304, 0.8653333187103271, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.8709999918937683, 0.8690000176429749, 0.8686666488647461, 0.8653333187103271, 0.8733333349227905, 0.8679999709129333, 0.8709999918937683, 0.8706666827201843, 0.8703333139419556, 0.8693333268165588]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8688571453094482, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223191976547241, 1.8656952381134033, 1.3936264514923096, 1.0854703187942505, 0.9283499121665955, 0.8296025395393372, 0.7682562470436096, 0.710497260093689, 0.6754540801048279, 0.645656168460846, 0.6249756813049316, 0.5986897349357605, 0.5868526101112366, 0.5663384795188904, 0.5511001348495483, 0.5281413197517395, 0.5223734974861145, 0.505982518196106, 0.4971903860569, 0.4840773046016693, 0.4852314293384552, 0.46868064999580383, 0.4561820328235626, 0.44977036118507385, 0.43928849697113037, 0.43527328968048096, 0.4319725036621094, 0.4218675494194031, 0.39597392082214355, 0.4021207392215729, 0.3998672366142273, 0.3890303373336792, 0.3842813968658447, 0.3760312795639038, 0.3749353587627411, 0.3669918477535248, 0.3579446077346802, 0.35747030377388, 0.35024285316467285, 0.34483200311660767, 0.3514697551727295, 0.34454813599586487, 0.3413090109825134, 0.32118892669677734, 0.3282656669616699, 0.3182000517845154, 0.3199280798435211, 0.3040717840194702, 0.3057188093662262, 0.3036566376686096, 0.3032344579696655, 0.294442355632782, 0.29318758845329285, 0.2904055714607239, 0.2849609851837158, 0.278292715549469, 0.27748915553092957, 0.27570247650146484, 0.27117305994033813, 0.26324203610420227, 0.2571617662906647, 0.2534145712852478, 0.2574431002140045, 0.2508664131164551, 0.2459956705570221, 0.24633775651454926, 0.2387193739414215], "accuracy": [0.27539294958114624, 0.4897635579109192, 0.5620129704475403, 0.6256769299507141, 0.668339729309082, 0.702681303024292, 0.7206445932388306, 0.7368907928466797, 0.752740740776062, 0.7655527591705322, 0.7720248103141785, 0.778761088848114, 0.787082314491272, 0.7960638999938965, 0.7961959838867188, 0.8086118102073669, 0.8096684813499451, 0.8141592741012573, 0.8240655064582825, 0.8202351331710815, 0.8185180425643921, 0.8322546482086182, 0.8362171649932861, 0.837537944316864, 0.8455950617790222, 0.8462554216384888, 0.8491612672805786, 0.8508783578872681, 0.8584070801734924, 0.8537842035293579, 0.852859616279602, 0.8614450097084045, 0.8646149635314941, 0.8642187118530273, 0.8621054291725159, 0.8689737319946289, 0.8697662353515625, 0.869502067565918, 0.8751816153526306, 0.8753136992454529, 0.8739928603172302, 0.8749174475669861, 0.8771628737449646, 0.8857482671737671, 0.8825782537460327, 0.8882578015327454, 0.8833707571029663, 0.8930128216743469, 0.893541157245636, 0.8914278149604797, 0.8907673954963684, 0.8963148593902588, 0.8992207050323486, 0.8931449055671692, 0.8993527889251709, 0.8993527889251709, 0.8972394466400146, 0.9025228023529053, 0.9034473896026611, 0.9051644206047058, 0.9083344340324402, 0.9089948534965515, 0.906749427318573, 0.9103156924247742, 0.9125610589981079, 0.9132214784622192, 0.9120327830314636], "val_loss": [2.034426212310791, 1.5037680864334106, 1.0185716152191162, 0.8059777021408081, 0.724341869354248, 0.6713882088661194, 0.6255524754524231, 0.5924007296562195, 0.5692299604415894, 0.5487385392189026, 0.5386753678321838, 0.5232181549072266, 0.508683979511261, 0.49691617488861084, 0.4902048408985138, 0.4768252372741699, 0.47726428508758545, 0.46079427003860474, 0.4533652663230896, 0.45228278636932373, 0.44162288308143616, 0.4343738555908203, 0.43283727765083313, 0.423656165599823, 0.4219958782196045, 0.41581615805625916, 0.41109976172447205, 0.40706348419189453, 0.40375861525535583, 0.4001180827617645, 0.39396682381629944, 0.39340195059776306, 0.3892621695995331, 0.3928772807121277, 0.3877376616001129, 0.38498950004577637, 0.38174358010292053, 0.37775155901908875, 0.37418293952941895, 0.37473544478416443, 0.3754200339317322, 0.3731408417224884, 0.3738393485546112, 0.3680993616580963, 0.36895492672920227, 0.36455875635147095, 0.3655824065208435, 0.35955455899238586, 0.3600057065486908, 0.36616814136505127, 0.3573007881641388, 0.3561444580554962, 0.35497230291366577, 0.355643093585968, 0.3501342833042145, 0.3551449775695801, 0.351803183555603, 0.34862881898880005, 0.34720125794410706, 0.3508301079273224, 0.3485915958881378, 0.3465266227722168, 0.34800419211387634, 0.3504178524017334, 0.3445824384689331, 0.34721270203590393, 0.3427697718143463], "val_accuracy": [0.5609999895095825, 0.6693333387374878, 0.6973333358764648, 0.718666672706604, 0.7433333396911621, 0.7559999823570251, 0.768666684627533, 0.7789999842643738, 0.7926666736602783, 0.7996666431427002, 0.8016666769981384, 0.8100000023841858, 0.8196666836738586, 0.8246666789054871, 0.824999988079071, 0.82833331823349, 0.8330000042915344, 0.8336666822433472, 0.8389999866485596, 0.8386666774749756, 0.8426666855812073, 0.8453333377838135, 0.8413333296775818, 0.8460000157356262, 0.846666693687439, 0.8519999980926514, 0.8496666550636292, 0.8513333201408386, 0.8519999980926514, 0.8506666421890259, 0.8553333282470703, 0.8579999804496765, 0.8629999756813049, 0.8556666374206543, 0.859666645526886, 0.8643333315849304, 0.862666666507721, 0.8656666874885559, 0.862666666507721, 0.8650000095367432, 0.8653333187103271, 0.8663333058357239, 0.8643333315849304, 0.8700000047683716, 0.8683333396911621, 0.8676666617393494, 0.871666669845581, 0.8686666488647461, 0.8693333268165588, 0.8743333220481873, 0.8693333268165588, 0.871999979019165, 0.8733333349227905, 0.874666690826416, 0.8759999871253967, 0.8759999871253967, 0.878000020980835, 0.8756666779518127, 0.878333330154419, 0.8803333044052124, 0.878000020980835, 0.8809999823570251, 0.8799999952316284, 0.875333309173584, 0.8799999952316284, 0.8763333559036255, 0.8786666393280029]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 2, 3], [0, 0, 0, 2, 3], [39, 39, 48], [1, 0, 0, 0, 1, 0, 0, 0, 0, 1], [0, 2, 0, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 0, 1, 1], [0, 2], [0, 6], [64], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 5, 1, 4, 1, 8, 2, 8], [0, 2, 4, 3, 0, 0, 3, 0, 2, 0], [16, 99, 96, 94, 61, 71]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 1, 0, 1, 1, 4, 2, 2, 1, 17, 9, 8, 4], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), grad)), grad)), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.square(tf.math.subtract(beta, tf.math.pow(grad, sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))), sigma), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 2, 0, 3], [0, 1, 0, 2], [41, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 2], [16, 36], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 9], [0, 4, 0, 3, 0, 0, 3, 1, 2, 4], [16, 99, 9, 81, 61, 1]], "fitness": -0.09228571504354477, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 2, 2, 1, 1, 1, 21, 12, 9, 5], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.square(beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(sigma, tf.math.add(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))), sigma)))), tf.math.sqrt(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), alpha), beta)", "other_info": {"loss": [2.310431480407715, 2.3104071617126465, 2.309755325317383, 2.3105804920196533, 2.3096981048583984, 2.310898542404175], "accuracy": [0.08981640636920929, 0.08942015469074249, 0.1006472036242485, 0.09285431355237961, 0.09232597798109055, 0.08836349099874496], "val_loss": [2.310197591781616, 2.310197591781616, 2.310197591781616, 2.310197591781616, 2.310197591781616, 2.310197591781616], "val_accuracy": [0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [3, 2, 3, 0, 3, 0, 0], [0, 1, 0, 2, 1], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0], [0, 8, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [6, 0, 6, 6, 8, 5, 4, 1, 4, 2, 8], [1, 0, 0, 3, 0, 4, 3, 1, 2, 4], [16, 21, 96, 1, 61, 1]], "fitness": -0.08971428871154785, "mapping_values": [1, 12, 7, 5, 2, 6, 4, 2, 1, 2, 1, 1, 1, 3, 1, 2, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.negative(grad))), alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.310065746307373, 2.3093485832214355, 2.308946371078491, 2.3099265098571777, 2.310441017150879, 2.3092353343963623], "accuracy": [0.09153348207473755, 0.09536388516426086, 0.09377889335155487, 0.09034473448991776, 0.0886276587843895, 0.09325055778026581], "val_loss": [2.309532880783081, 2.309532880783081, 2.309532880783081, 2.309532880783081, 2.309532880783081, 2.309532880783081], "val_accuracy": [0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [1, 2, 0, 3], [56, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 0, 4, 2, 8], [0, 0, 0, 3, 4, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.07314285635948181, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(alpha, beta), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(sigma, tf.math.negative(grad)))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)), alpha)", "other_info": {"loss": [2.308168649673462, 2.3060522079467773, 2.3060903549194336, 2.3060646057128906, 2.305837631225586, 2.3065640926361084, 2.306016683578491, 2.3054795265197754, 2.306151866912842, 2.3065760135650635, 2.3056440353393555, 2.3061203956604004], "accuracy": [0.08955223858356476, 0.09245806187391281, 0.08915598690509796, 0.08440100401639938, 0.08902391046285629, 0.08545766770839691, 0.08334434032440186, 0.09100515395402908, 0.08492933213710785, 0.07858935743570328, 0.09008057415485382, 0.08308017253875732], "val_loss": [2.306514024734497, 2.30610990524292, 2.305969476699829, 2.3059139251708984, 2.3058903217315674, 2.305879831314087, 2.305875301361084, 2.305873155593872, 2.3058722019195557, 2.3058714866638184, 2.3058714866638184, 2.3058714866638184], "val_accuracy": [0.07433333247900009, 0.07466666400432587, 0.07400000095367432, 0.07466666400432587, 0.07466666400432587, 0.07466666400432587, 0.07500000298023224, 0.07500000298023224, 0.07500000298023224, 0.07500000298023224, 0.07500000298023224, 0.07500000298023224]}, "mapping_values": [1, 6, 3, 3, 2, 6, 3, 3, 1, 2, 1, 1, 1, 17, 9, 8, 4], "tree_depth": 16}]