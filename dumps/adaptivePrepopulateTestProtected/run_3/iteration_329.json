[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8808571696281433, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223215103149414, 1.8640538454055786, 1.390925645828247, 1.0857504606246948, 0.9175904989242554, 0.8278062343597412, 0.75929194688797, 0.7150763869285583, 0.6742342710494995, 0.6527069211006165, 0.6226239800453186, 0.6030511260032654, 0.5812473893165588, 0.5698184370994568, 0.5517233610153198, 0.5318202376365662, 0.5262278914451599, 0.5063096284866333, 0.4941454231739044, 0.4912639260292053, 0.47673994302749634, 0.46776485443115234, 0.45580968260765076, 0.45419755578041077, 0.4471202790737152, 0.4368197023868561, 0.4238806366920471, 0.41453513503074646, 0.41017231345176697, 0.4062040150165558, 0.40386685729026794, 0.3953916132450104, 0.39355871081352234, 0.3836102783679962, 0.37635838985443115, 0.3735085725784302, 0.363672137260437, 0.35395750403404236, 0.35972025990486145, 0.34721699357032776, 0.3442964553833008, 0.335767537355423, 0.3300938904285431, 0.32407090067863464, 0.32112976908683777, 0.3181473910808563, 0.31370431184768677, 0.3087446987628937, 0.3084625005722046, 0.30203962326049805, 0.293395072221756, 0.2889169156551361, 0.2914500832557678, 0.28307828307151794, 0.28207361698150635, 0.2786792516708374, 0.27818819880485535, 0.26387521624565125], "accuracy": [0.27222296595573425, 0.5027077198028564, 0.5674283504486084, 0.6277902722358704, 0.6709813475608826, 0.7058512568473816, 0.7269845604896545, 0.7415136694908142, 0.7586844563484192, 0.7617223858833313, 0.783119797706604, 0.7832518815994263, 0.7926297783851624, 0.8001585006713867, 0.807158887386322, 0.8103289008140564, 0.8133667707443237, 0.8190463781356812, 0.8247259259223938, 0.8271034359931946, 0.8298771381378174, 0.8341038227081299, 0.8366134166717529, 0.839519202709198, 0.8404437899589539, 0.848368763923645, 0.8515387773513794, 0.8564258217811584, 0.8529917001724243, 0.8585391640663147, 0.8515387773513794, 0.863558292388916, 0.8615770936012268, 0.8640866279602051, 0.8652753829956055, 0.8671245574951172, 0.8720116019248962, 0.8771628737449646, 0.8705587387084961, 0.876370370388031, 0.8787478804588318, 0.8784837126731873, 0.8828424215316772, 0.8842953443527222, 0.884691596031189, 0.8840311765670776, 0.8891823887825012, 0.8894465565681458, 0.8899748921394348, 0.8932769894599915, 0.8945978283882141, 0.8980319499969482, 0.896446943283081, 0.8988244533538818, 0.9019944667816162, 0.901862382888794, 0.8985602855682373, 0.904768168926239], "val_loss": [2.039530038833618, 1.5154659748077393, 1.039007544517517, 0.8366694450378418, 0.7400773167610168, 0.6859951019287109, 0.6454513669013977, 0.6114123463630676, 0.5899704694747925, 0.5724708437919617, 0.5533395409584045, 0.5345184803009033, 0.5225448608398438, 0.5092709064483643, 0.500229001045227, 0.49316829442977905, 0.480929970741272, 0.4729439616203308, 0.4688349962234497, 0.4563703238964081, 0.45455607771873474, 0.44636544585227966, 0.44144734740257263, 0.4332112669944763, 0.42851945757865906, 0.4277913272380829, 0.4196922183036804, 0.41600528359413147, 0.4114539325237274, 0.4113328456878662, 0.4059373438358307, 0.4033544063568115, 0.40210506319999695, 0.3963744640350342, 0.39264819025993347, 0.39112263917922974, 0.384288489818573, 0.383841872215271, 0.3804401755332947, 0.3786342442035675, 0.3777892291545868, 0.37486007809638977, 0.37355443835258484, 0.37450093030929565, 0.36811116337776184, 0.3697490096092224, 0.3684578537940979, 0.370509535074234, 0.36476588249206543, 0.36312252283096313, 0.361527681350708, 0.36036449670791626, 0.3581533133983612, 0.3633516728878021, 0.35499346256256104, 0.3547135293483734, 0.35882508754730225, 0.35363712906837463], "val_accuracy": [0.5473333597183228, 0.6496666669845581, 0.6846666932106018, 0.6959999799728394, 0.7279999852180481, 0.7450000047683716, 0.7580000162124634, 0.7713333368301392, 0.7763333320617676, 0.7816666960716248, 0.7963333129882812, 0.8109999895095825, 0.8116666674613953, 0.8113333582878113, 0.8116666674613953, 0.8186666369438171, 0.8259999752044678, 0.8236666917800903, 0.828000009059906, 0.8360000252723694, 0.8323333263397217, 0.8373333215713501, 0.8373333215713501, 0.8366666436195374, 0.843666672706604, 0.843999981880188, 0.846666693687439, 0.8483333587646484, 0.8493333458900452, 0.847000002861023, 0.8476666808128357, 0.8496666550636292, 0.8510000109672546, 0.8519999980926514, 0.8553333282470703, 0.8556666374206543, 0.8583333492279053, 0.859333336353302, 0.8560000061988831, 0.862333357334137, 0.8636666536331177, 0.859666645526886, 0.8636666536331177, 0.8643333315849304, 0.8653333187103271, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.8709999918937683, 0.8690000176429749, 0.8686666488647461, 0.8653333187103271, 0.8733333349227905, 0.8679999709129333, 0.8709999918937683, 0.8706666827201843, 0.8703333139419556, 0.8693333268165588]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8688571453094482, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2228572368621826, 1.8582347631454468, 1.3936227560043335, 1.0908091068267822, 0.9349082112312317, 0.8230242729187012, 0.775550365447998, 0.7196808457374573, 0.6881440877914429, 0.6590530276298523, 0.6376219391822815, 0.6119982004165649, 0.5870474576950073, 0.5774721503257751, 0.5576769709587097, 0.5447332859039307, 0.5310840606689453, 0.5165134072303772, 0.5051432251930237, 0.4921753704547882, 0.48589375615119934, 0.4688359797000885, 0.46592897176742554, 0.4485119581222534, 0.44439980387687683, 0.43398067355155945, 0.4289839565753937, 0.4292386770248413, 0.42103973031044006, 0.41282930970191956, 0.40368232131004333, 0.4000774323940277, 0.3865789473056793, 0.38610151410102844, 0.38083240389823914, 0.3718755543231964, 0.3623387813568115, 0.354839950799942, 0.3499848246574402, 0.3521764278411865, 0.3504467010498047, 0.3467692732810974, 0.336465984582901, 0.3304920494556427], "accuracy": [0.2797516882419586, 0.5003302097320557, 0.559899628162384, 0.615770697593689, 0.6684718132019043, 0.7067758440971375, 0.7235503792762756, 0.7390040755271912, 0.7497028112411499, 0.7580240368843079, 0.76542067527771, 0.7795535326004028, 0.7858935594558716, 0.7891955971717834, 0.8034605979919434, 0.8063663840293884, 0.8083476424217224, 0.8165367841720581, 0.8222163319587708, 0.8271034359931946, 0.8301413059234619, 0.8300092220306396, 0.8322546482086182, 0.8413683772087097, 0.843481719493866, 0.8462554216384888, 0.8491612672805786, 0.8465195894241333, 0.8539162874221802, 0.8578787446022034, 0.8561616539955139, 0.8560295701026917, 0.8623695969581604, 0.8613129258155823, 0.8689737319946289, 0.867520809173584, 0.8753136992454529, 0.8730682730674744, 0.8779553771018982, 0.8747853636741638, 0.8710870146751404, 0.8762382864952087, 0.8770307898521423, 0.8804649114608765], "val_loss": [2.0404062271118164, 1.5149223804473877, 1.0510188341140747, 0.8448997139930725, 0.7573899030685425, 0.6965333819389343, 0.6618712544441223, 0.6247061491012573, 0.6024731993675232, 0.5772322416305542, 0.5604322552680969, 0.5446518659591675, 0.5293344259262085, 0.5151317119598389, 0.5044085383415222, 0.4978162348270416, 0.490408718585968, 0.474232941865921, 0.4663582444190979, 0.46152710914611816, 0.44929084181785583, 0.45047518610954285, 0.4402291774749756, 0.4346131980419159, 0.42900121212005615, 0.42597949504852295, 0.42553067207336426, 0.41646629571914673, 0.41288861632347107, 0.4121563732624054, 0.40469345450401306, 0.4045262336730957, 0.3968370258808136, 0.4010081887245178, 0.3916643559932709, 0.3930520713329315, 0.38702693581581116, 0.38742804527282715, 0.3817611038684845, 0.38584741950035095, 0.38356688618659973, 0.38130825757980347, 0.3789578080177307, 0.37438851594924927], "val_accuracy": [0.5356666445732117, 0.6579999923706055, 0.6746666431427002, 0.7126666903495789, 0.7386666536331177, 0.7549999952316284, 0.7639999985694885, 0.7736666798591614, 0.7793333530426025, 0.7906666398048401, 0.7946666479110718, 0.7950000166893005, 0.8080000281333923, 0.8133333325386047, 0.815666675567627, 0.8216666579246521, 0.8190000057220459, 0.8316666483879089, 0.8330000042915344, 0.8370000123977661, 0.8410000205039978, 0.840666651725769, 0.8423333168029785, 0.8486666679382324, 0.846666693687439, 0.8496666550636292, 0.8506666421890259, 0.8539999723434448, 0.8543333411216736, 0.856333315372467, 0.8539999723434448, 0.8539999723434448, 0.8586666584014893, 0.8566666841506958, 0.8569999933242798, 0.8606666922569275, 0.8600000143051147, 0.8633333444595337, 0.8669999837875366, 0.8643333315849304, 0.8613333106040955, 0.8643333315849304, 0.8633333444595337, 0.8640000224113464]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 4, 3, 0, 3], [2, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 1, 0, 3, 2], [2, 2, 0, 1], [16, 62], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [6, 3, 3, 6, 8, 5, 4, 1, 1, 2, 8], [0, 0, 0, 3, 0, 0, 0, 1, 0, 0], [16, 86, 96, 99, 61, 1]], "fitness": -0.7571428418159485, "mapping_values": [1, 9, 5, 4, 1, 7, 4, 3, 1, 2, 1, 1, 0, 10, 5, 5, 4], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.negative(grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.negative(beta), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), sigma), tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.308650255203247, 2.2955636978149414, 2.271540403366089, 2.2411611080169678, 2.1955504417419434, 2.1234848499298096, 1.9959639310836792, 1.7778292894363403, 1.5162699222564697, 1.3504462242126465, 1.372304916381836, 1.3352155685424805, 1.2210355997085571, 1.0569618940353394, 0.9354766607284546, 0.9035792946815491, 0.9189188480377197, 0.884718656539917, 0.8477672934532166, 0.837561309337616, 0.8128345012664795, 0.8074349164962769, 0.8014829754829407, 0.7840183973312378, 0.7693432569503784, 0.7487735748291016], "accuracy": [0.09325055778026581, 0.12072381377220154, 0.18240654468536377, 0.2673358917236328, 0.3381323516368866, 0.3704926669597626, 0.40430590510368347, 0.43508124351501465, 0.4748381972312927, 0.5123497843742371, 0.5391625761985779, 0.5831462144851685, 0.617751955986023, 0.6395456194877625, 0.650640606880188, 0.667811393737793, 0.6682076454162598, 0.6749438643455505, 0.6851142644882202, 0.6991150379180908, 0.7022850513458252, 0.6971337795257568, 0.700700044631958, 0.7003037929534912, 0.7046625018119812, 0.7028133869171143], "val_loss": [2.2999773025512695, 2.2791125774383545, 2.2494754791259766, 2.209444284439087, 2.147890090942383, 2.038651466369629, 1.840247392654419, 1.5206702947616577, 1.1632299423217773, 0.9560654163360596, 0.8922664523124695, 0.8698530197143555, 0.8060427904129028, 0.7402482032775879, 0.733614981174469, 0.781333327293396, 0.7644746899604797, 0.7025640606880188, 0.666888952255249, 0.6483777761459351, 0.6414236426353455, 0.6503585577011108, 0.6456494331359863, 0.6332620978355408, 0.6190489530563354, 0.6063635349273682], "val_accuracy": [0.1003333330154419, 0.1889999955892563, 0.41499999165534973, 0.4519999921321869, 0.453000009059906, 0.4580000042915344, 0.5009999871253967, 0.5946666598320007, 0.6579999923706055, 0.6636666655540466, 0.6793333292007446, 0.690666675567627, 0.7123333215713501, 0.7266666889190674, 0.7360000014305115, 0.737666666507721, 0.7406666874885559, 0.7516666650772095, 0.7473333477973938, 0.753000020980835, 0.7620000243186951, 0.7570000290870667, 0.7536666393280029, 0.7590000033378601, 0.749666690826416, 0.7476666569709778]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 0, 0, 1], [39, 39, 29], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0], [0, 2, 3, 0, 3, 5, 6, 0, 7, 9, 6, 2, 0, 9], [0, 2, 0, 3, 2, 2], [16, 16, 57, 63], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 2, 1, 4, 1, 4, 0, 8], [0, 4, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.11114285886287689, "mapping_values": [1, 9, 5, 4, 3, 20, 14, 6, 4, 2, 1, 1, 1, 17, 8, 9, 4], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, beta))))), tf.math.add(beta, tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha))), beta)))", "other_info": {"loss": [22535504658432.0, 27249839439872.0, 27278807400448.0, NaN, NaN, NaN], "accuracy": [0.11808215826749802, 0.11676132678985596, 0.11900673806667328, 0.10289261490106583, 0.09998679161071777, 0.09998679161071777], "val_loss": [20996230742016.0, 20996230742016.0, 20996230742016.0, NaN, NaN, NaN], "val_accuracy": [0.11133333295583725, 0.11133333295583725, 0.11133333295583725, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 2, 2], [39, 39], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 3, 3], [16, 16], [0, 0, 1], [0, 5], [0], [57], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 0, 9], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}, "mapping_values": [1, 9, 5, 4, 1, 1, 0, 1, 1, 3, 2, 1, 1, 22, 13, 9, 6], "tree_depth": 18}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [9, 2, 8, 0, 3], [2, 1, 0, 1], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [3, 2, 0, 2], [16, 16], [0, 1], [0], [0], [99], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 4, 3, 6, 3, 1, 4, 1, 4, 2, 8], [0, 4, 0, 3, 0, 0, 3, 1, 1, 0], [81, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 10, 6, 4, 1, 2, 1, 1, 1, 2, 1, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1101015936.0, 21585934336.0, 100415315968.0, 277549154304.0, 592295624704.0, 1102590771200.0], "accuracy": [0.09708096832036972, 0.0952318087220192, 0.10315678268671036, 0.10170386731624603, 0.1002509593963623, 0.09813763201236725], "val_loss": [5238879232.0, 41905885184.0, 141425000448.0, 335225815040.0, 654728298496.0, 1131358060544.0], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}]