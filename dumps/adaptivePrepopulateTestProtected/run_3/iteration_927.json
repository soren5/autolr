[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8862857222557068, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222418785095215, 1.8632627725601196, 1.3950724601745605, 1.0979150533676147, 0.9474178552627563, 0.8543937802314758, 0.7783248424530029, 0.7376496195793152, 0.7006842494010925, 0.6746688485145569, 0.647553563117981, 0.6295329928398132, 0.6112891435623169, 0.58865886926651, 0.5667527914047241, 0.5575993657112122, 0.5467248558998108, 0.5289703011512756, 0.5205997824668884, 0.5110849142074585, 0.5064045786857605, 0.4867391884326935, 0.4731372892856598, 0.47443822026252747, 0.46410614252090454, 0.4545186161994934, 0.445819616317749, 0.4367676079273224, 0.4321127235889435, 0.4275900721549988, 0.4177286922931671, 0.40700381994247437, 0.40491974353790283, 0.3923063576221466, 0.38597339391708374, 0.37638187408447266, 0.3749813437461853, 0.3708414137363434, 0.369646281003952, 0.3635149896144867, 0.3594855070114136, 0.3503628671169281, 0.3338625133037567, 0.3396199643611908, 0.33679017424583435, 0.3303111493587494, 0.3275522291660309, 0.3153315782546997, 0.3093845844268799, 0.31660354137420654, 0.313541054725647, 0.3128948211669922, 0.2977619469165802, 0.30230653285980225, 0.298944890499115, 0.28947505354881287, 0.2822195291519165, 0.2778712213039398, 0.2668195366859436, 0.26853811740875244, 0.26283398270606995, 0.2662760019302368, 0.2576100528240204, 0.25102800130844116, 0.2539205849170685, 0.25087955594062805, 0.24508193135261536], "accuracy": [0.280940443277359, 0.48685774207115173, 0.5665037631988525, 0.616299033164978, 0.6625280380249023, 0.6930392384529114, 0.7169462442398071, 0.7320036888122559, 0.7375511527061462, 0.7491744756698608, 0.7672698497772217, 0.7670056819915771, 0.7745344042778015, 0.7876105904579163, 0.7906485199928284, 0.7994980812072754, 0.802800178527832, 0.8068947196006775, 0.8117818236351013, 0.8153480291366577, 0.8181217908859253, 0.829216718673706, 0.8300092220306396, 0.8238013386726379, 0.8325188159942627, 0.8385946154594421, 0.8372738361358643, 0.842028796672821, 0.8451988101005554, 0.8481045961380005, 0.8515387773513794, 0.8549728989601135, 0.8516708612442017, 0.8603883385658264, 0.8598600029945374, 0.8667283058166504, 0.8636903762817383, 0.8636903762817383, 0.8677849769592285, 0.8704266548156738, 0.8758420348167419, 0.8739928603172302, 0.8790120482444763, 0.8768987059593201, 0.8751816153526306, 0.8794082403182983, 0.8813894987106323, 0.8860124349594116, 0.8874653577804565, 0.8856161832809448, 0.8838990926742554, 0.8877294659614563, 0.8918240666389465, 0.8918240666389465, 0.8922203183174133, 0.8953903317451477, 0.89552241563797, 0.9002773761749268, 0.9049002528190613, 0.9034473896026611, 0.9035794734954834, 0.9038436412811279, 0.9085986018180847, 0.9095231890678406, 0.9095231890678406, 0.909259021282196, 0.910711944103241], "val_loss": [2.0414316654205322, 1.5168657302856445, 1.0494927167892456, 0.8396123051643372, 0.7532041668891907, 0.6975494027137756, 0.6532282829284668, 0.6188269853591919, 0.5909113883972168, 0.5747429728507996, 0.5562715530395508, 0.5392115712165833, 0.5226473808288574, 0.5080817937850952, 0.49551260471343994, 0.4949219524860382, 0.48097461462020874, 0.46894019842147827, 0.4645398259162903, 0.4554585814476013, 0.44845467805862427, 0.44272810220718384, 0.4365209937095642, 0.4303407371044159, 0.42757970094680786, 0.42137086391448975, 0.4158954322338104, 0.4094981253147125, 0.40614867210388184, 0.40746310353279114, 0.39686036109924316, 0.39440515637397766, 0.39069101214408875, 0.3898474872112274, 0.3889416456222534, 0.3833497166633606, 0.387736976146698, 0.3792175352573395, 0.3778442442417145, 0.37528878450393677, 0.3729557991027832, 0.37016138434410095, 0.36690768599510193, 0.36455467343330383, 0.36386409401893616, 0.3628668487071991, 0.365796834230423, 0.36076274514198303, 0.3599783480167389, 0.35867130756378174, 0.35705167055130005, 0.35411083698272705, 0.3552299737930298, 0.3651564121246338, 0.36276260018348694, 0.34837988018989563, 0.34821584820747375, 0.3528410792350769, 0.3496720790863037, 0.3506317138671875, 0.34951722621917725, 0.3443804085254669, 0.345913290977478, 0.3461855351924896, 0.3431210517883301, 0.348863810300827, 0.3426092565059662], "val_accuracy": [0.5373333096504211, 0.6570000052452087, 0.6759999990463257, 0.7110000252723694, 0.7286666631698608, 0.7419999837875366, 0.7590000033378601, 0.7616666555404663, 0.7836666703224182, 0.7903333306312561, 0.7886666655540466, 0.8006666898727417, 0.809333324432373, 0.8183333277702332, 0.8146666884422302, 0.8140000104904175, 0.8233333230018616, 0.8289999961853027, 0.8326666951179504, 0.8363333344459534, 0.8389999866485596, 0.8366666436195374, 0.8363333344459534, 0.8489999771118164, 0.847000002861023, 0.8519999980926514, 0.8533333539962769, 0.8560000061988831, 0.8573333621025085, 0.8539999723434448, 0.8619999885559082, 0.862666666507721, 0.8656666874885559, 0.8629999756813049, 0.8646666407585144, 0.8636666536331177, 0.8603333234786987, 0.8659999966621399, 0.8673333525657654, 0.8673333525657654, 0.8713333606719971, 0.8703333139419556, 0.8713333606719971, 0.871666669845581, 0.8736666440963745, 0.8730000257492065, 0.871999979019165, 0.874666690826416, 0.875333309173584, 0.874666690826416, 0.875, 0.8786666393280029, 0.8776666522026062, 0.8743333220481873, 0.8723333477973938, 0.8833333253860474, 0.8826666474342346, 0.8790000081062317, 0.8836666941642761, 0.878333330154419, 0.8820000290870667, 0.887666642665863, 0.8820000290870667, 0.8803333044052124, 0.8830000162124634, 0.8846666812896729, 0.8856666684150696]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8751428723335266, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2225515842437744, 1.866381287574768, 1.3933310508728027, 1.0887778997421265, 0.9317376613616943, 0.8341922163963318, 0.762843132019043, 0.7205890417098999, 0.6920670866966248, 0.6588080525398254, 0.6181438565254211, 0.6078928112983704, 0.5803899168968201, 0.5702812075614929, 0.5480323433876038, 0.5308923125267029, 0.5194388628005981, 0.5139617919921875, 0.5018686056137085, 0.4850693643093109, 0.46967071294784546, 0.47280463576316833, 0.4623323678970337, 0.45579975843429565, 0.44942352175712585, 0.4346476197242737, 0.42774900794029236, 0.4235851466655731, 0.41101211309432983, 0.407393217086792, 0.4045603275299072, 0.39019960165023804, 0.38412919640541077, 0.37961962819099426, 0.3773500621318817, 0.3728223145008087, 0.3607247471809387, 0.36360594630241394, 0.3510757386684418, 0.35719284415245056, 0.34299924969673157, 0.33806121349334717, 0.3370440602302551, 0.3335164487361908, 0.32695841789245605, 0.3260752856731415, 0.32027891278266907, 0.3035302460193634, 0.3106591999530792, 0.30230090022087097, 0.3052706718444824, 0.2928653359413147, 0.2946793735027313, 0.28636905550956726, 0.2792668640613556, 0.27602216601371765, 0.2724441885948181, 0.2701456844806671, 0.27126413583755493, 0.26782411336898804, 0.26328375935554504], "accuracy": [0.2747325301170349, 0.4900277256965637, 0.5604279637336731, 0.6199973821640015, 0.6729626059532166, 0.7028133869171143, 0.7290979027748108, 0.7400607466697693, 0.750231146812439, 0.7605336308479309, 0.7779685854911804, 0.7761194109916687, 0.7906485199928284, 0.7921014428138733, 0.8014793395996094, 0.8031964302062988, 0.8142913579940796, 0.8185180425643921, 0.8161405324935913, 0.8249900937080383, 0.8334434032440186, 0.8286884427070618, 0.8322546482086182, 0.8421608805656433, 0.8407079577445984, 0.8496896028518677, 0.8461233377456665, 0.8436138033866882, 0.8532558679580688, 0.8519350290298462, 0.8511425256729126, 0.8580108284950256, 0.8632941246032715, 0.8660678863525391, 0.8669924736022949, 0.8704266548156738, 0.8687095642089844, 0.8705587387084961, 0.8795403242111206, 0.8734645247459412, 0.8813894987106323, 0.876370370388031, 0.882710337638855, 0.8817857503890991, 0.8820499181747437, 0.8831065893173218, 0.885219931602478, 0.8902390599250793, 0.8893144726753235, 0.8942015767097473, 0.8923524022102356, 0.8960506916046143, 0.8945978283882141, 0.8953903317451477, 0.8977677822113037, 0.9027869701385498, 0.9033153057098389, 0.9013340473175049, 0.9039757251739502, 0.9045040011405945, 0.9041078090667725], "val_loss": [2.038496971130371, 1.5214221477508545, 1.0580573081970215, 0.8574259281158447, 0.7691085338592529, 0.71256023645401, 0.662599503993988, 0.6361308693885803, 0.6042178273200989, 0.5832094550132751, 0.5665385723114014, 0.5488138794898987, 0.53081214427948, 0.5168942213058472, 0.5093724131584167, 0.4986821711063385, 0.4859565794467926, 0.4783935248851776, 0.4660942256450653, 0.46416497230529785, 0.4554281532764435, 0.44953298568725586, 0.4456520080566406, 0.4428968131542206, 0.43796804547309875, 0.42730894684791565, 0.4260158836841583, 0.41965219378471375, 0.4174617528915405, 0.41088753938674927, 0.41353705525398254, 0.4092826247215271, 0.40465080738067627, 0.39699992537498474, 0.3972401022911072, 0.39343470335006714, 0.4013599455356598, 0.38597264885902405, 0.3828141391277313, 0.38265687227249146, 0.3847334384918213, 0.3813667893409729, 0.3749684691429138, 0.3754165768623352, 0.3717360496520996, 0.37193089723587036, 0.3696841895580292, 0.3703475892543793, 0.36576274037361145, 0.36926448345184326, 0.36129429936408997, 0.3650893270969391, 0.3598371148109436, 0.3632810115814209, 0.3566933572292328, 0.3576892912387848, 0.356849730014801, 0.3580988347530365, 0.3574582636356354, 0.35942721366882324, 0.35605761408805847], "val_accuracy": [0.534333348274231, 0.6446666717529297, 0.6726666688919067, 0.6956666707992554, 0.7183333039283752, 0.7336666584014893, 0.7516666650772095, 0.7670000195503235, 0.7676666378974915, 0.784333348274231, 0.793666660785675, 0.7926666736602783, 0.8036666512489319, 0.8100000023841858, 0.8113333582878113, 0.8223333358764648, 0.8286666870117188, 0.8273333311080933, 0.8370000123977661, 0.8349999785423279, 0.8416666388511658, 0.8463333249092102, 0.8429999947547913, 0.8450000286102295, 0.8456666469573975, 0.8529999852180481, 0.8496666550636292, 0.8560000061988831, 0.8586666584014893, 0.8583333492279053, 0.8523333072662354, 0.859000027179718, 0.8610000014305115, 0.8650000095367432, 0.8650000095367432, 0.8650000095367432, 0.8640000224113464, 0.8703333139419556, 0.8726666569709778, 0.8690000176429749, 0.8686666488647461, 0.8693333268165588, 0.871999979019165, 0.8740000128746033, 0.8730000257492065, 0.8759999871253967, 0.8766666650772095, 0.8726666569709778, 0.8740000128746033, 0.8740000128746033, 0.878000020980835, 0.8786666393280029, 0.8766666650772095, 0.875, 0.8803333044052124, 0.8816666603088379, 0.8799999952316284, 0.8796666860580444, 0.8790000081062317, 0.8769999742507935, 0.8786666393280029]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 3, 4], [0, 1, 0, 2], [39, 91], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [4, 2, 5, 0, 3, 5, 2], [0, 2, 0, 3, 0], [16, 16, 8], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 5, 8, 2, 0, 4, 0, 2, 8, 5, 3, 2, 2, 1, 5, 7, 4, 0], [0, 0, 0, 3, 0, 0, 3, 4, 2, 0, 1, 2, 0, 7, 5, 4, 1, 4, 5], [37, 99, 96, 90, 61, 16, 98]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 12, 7, 5, 3, 2, 1, 1, 1, 47, 28, 19, 7], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.square(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), beta), tf.math.multiply(tf.math.square(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(sigma, tf.math.add(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), sigma)))), tf.math.sqrt(tf.math.square(grad)))), beta), tf.math.sqrt(tf.math.add(tf.math.negative(tf.math.pow(tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha)), beta)), tf.math.sqrt(tf.math.square(tf.math.multiply(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.math.subtract(tf.math.square(grad), tf.math.add(grad, tf.math.pow(tf.math.negative(grad), alpha))), grad), grad)))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 9, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 0, 0, 3, 5], [0, 2, 0, 3], [16, 74], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 1, 7, 1, 6, 2, 3, 0, 5, 2], [0, 4, 3, 4, 0, 5, 7, 5], [99, 46], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 4, 3, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 4, 1, 2, 6, 4, 2, 1, 18, 10, 8, 2, 21, 11, 10, 6], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(grad, sigma), grad)), tf.math.multiply(tf.math.negative(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad))), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(sigma, grad), tf.math.add(tf.math.sqrt(sigma), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 1, 2, 2], [51, 39], [1, 0, 0, 0, 0, 1, 0, 1, 0, 0], [0, 2, 3, 0, 5, 5], [0, 2, 0, 3], [16, 91], [0, 1], [0], [0], [99], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 3, 3, 6, 6, 5, 4, 1, 4, 8, 8, 5, 9, 1, 5, 5, 1, 3, 1, 9], [0, 0, 0, 3, 0, 0, 3, 1, 0, 0, 3], [16, 99, 96, 99, 61, 1, 24, 9, 17]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 0, 1, 0, 1, 1, 2, 1, 1, 1, 31, 20, 11, 9], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.square(tf.math.pow(tf.math.subtract(tf.math.pow(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.square(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), sigma)), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), sigma)), tf.math.square(alpha)), tf.math.square(tf.math.subtract(tf.math.multiply(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [89, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 2], [16, 16], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 5, 6, 8, 6, 4, 1, 4, 2, 8], [0, 0, 0, 3, 4, 0, 3, 1, 2, 0], [16, 99, 42, 99, 61, 1]], "fitness": -0.0917142853140831, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 2, 1, 0, 1, 1, 17, 9, 8, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(grad, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha)", "other_info": {"loss": [2.3080215454101562, 2.3101139068603516, 2.309781551361084, 2.3091471195220947, 2.3103556632995605, 2.310260534286499], "accuracy": [0.0948355570435524, 0.08809932321310043, 0.09166556596755981, 0.08889182657003403, 0.08558975160121918, 0.09628847241401672], "val_loss": [2.3085644245147705, 2.3085644245147705, 2.3085644245147705, 2.3085644245147705, 2.3085644245147705, 2.3085644245147705], "val_accuracy": [0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231]}}]