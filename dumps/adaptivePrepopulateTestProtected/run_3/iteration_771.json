[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8822857141494751, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585750579834, 1.8655762672424316, 1.394430160522461, 1.0773245096206665, 0.9378393888473511, 0.8425824046134949, 0.7776632308959961, 0.736241340637207, 0.6971188187599182, 0.6732122302055359, 0.644855797290802, 0.6276965141296387, 0.6100340485572815, 0.5899673104286194, 0.5746485590934753, 0.5484329462051392, 0.5425268411636353, 0.5357900857925415, 0.5214410424232483, 0.5127171874046326, 0.4895091950893402, 0.4932740032672882, 0.48551443219184875, 0.47113916277885437, 0.46571049094200134, 0.450914591550827, 0.438728004693985, 0.4414178729057312, 0.4245515465736389, 0.4182806611061096, 0.4126766324043274, 0.41352686285972595, 0.4031256139278412, 0.40064555406570435, 0.3982388377189636, 0.38566267490386963, 0.38400527834892273, 0.3741128146648407, 0.36422181129455566, 0.36170411109924316, 0.35991787910461426, 0.35666367411613464, 0.3521813750267029, 0.34583958983421326, 0.34736087918281555, 0.34181836247444153, 0.33650368452072144, 0.33141741156578064, 0.3230496346950531, 0.3225416839122772, 0.315096914768219, 0.3059031665325165, 0.3058394491672516, 0.3017319440841675, 0.29568877816200256, 0.2933836281299591, 0.28774771094322205, 0.2856961190700531, 0.2802303731441498, 0.2779994010925293, 0.274711549282074, 0.2719985842704773, 0.2586328387260437, 0.2598455548286438, 0.2622571289539337, 0.25739434361457825, 0.2502012252807617, 0.2544722855091095, 0.24556587636470795, 0.24580754339694977, 0.23948103189468384, 0.23949603736400604, 0.23484042286872864, 0.22871272265911102, 0.2256491780281067, 0.22479403018951416, 0.21744707226753235, 0.21390178799629211, 0.21272219717502594], "accuracy": [0.2785629332065582, 0.49451854825019836, 0.559899628162384, 0.6215823292732239, 0.6654338836669922, 0.6950204968452454, 0.7181349992752075, 0.7322678565979004, 0.7441553473472595, 0.7483819723129272, 0.7627789974212646, 0.7717606425285339, 0.7728173136711121, 0.78113853931427, 0.7882710099220276, 0.7993659973144531, 0.7976489067077637, 0.8074230551719666, 0.8128384351730347, 0.8198388814926147, 0.8212917447090149, 0.819970965385437, 0.8272355198860168, 0.8350284099578857, 0.8305375576019287, 0.8387266993522644, 0.846387505531311, 0.8433496356010437, 0.8504821062088013, 0.8524633646011353, 0.8535200357437134, 0.854708731174469, 0.856689989566803, 0.8551049828529358, 0.8593316674232483, 0.8615770936012268, 0.8628978729248047, 0.8702945709228516, 0.8691058158874512, 0.871879518032074, 0.8722757697105408, 0.8691058158874512, 0.8733324408531189, 0.8800686597824097, 0.8795403242111206, 0.8755778670310974, 0.8768987059593201, 0.8829745054244995, 0.8824461698532104, 0.8823140859603882, 0.887201189994812, 0.8897107243537903, 0.8889182209968567, 0.8927486538887024, 0.8902390599250793, 0.8953903317451477, 0.8980319499969482, 0.8976356983184814, 0.900409460067749, 0.89552241563797, 0.9025228023529053, 0.8989565372467041, 0.9056927561759949, 0.9085986018180847, 0.9030511379241943, 0.9066173434257507, 0.9101836085319519, 0.9083344340324402, 0.909259021282196, 0.9099194407463074, 0.9126931428909302, 0.9140139818191528, 0.9119006991386414, 0.9171839952468872, 0.9169198274612427, 0.9185048341751099, 0.9218068718910217, 0.9185048341751099, 0.9196935892105103], "val_loss": [2.033445358276367, 1.5042319297790527, 1.0271512269973755, 0.8147247433662415, 0.7278039455413818, 0.68117356300354, 0.6306353211402893, 0.5966841578483582, 0.5751398801803589, 0.5460951328277588, 0.5314993858337402, 0.509799063205719, 0.4957965612411499, 0.4792602062225342, 0.46671679615974426, 0.45267683267593384, 0.4441072940826416, 0.4356139600276947, 0.42943108081817627, 0.4255247414112091, 0.41811680793762207, 0.4163394272327423, 0.39929893612861633, 0.3969916105270386, 0.39089226722717285, 0.387652188539505, 0.3844633102416992, 0.3824205696582794, 0.3749690353870392, 0.3701930642127991, 0.36967378854751587, 0.36689504981040955, 0.3585263788700104, 0.3587398827075958, 0.36267170310020447, 0.3561091423034668, 0.35379692912101746, 0.3499273955821991, 0.34701839089393616, 0.3467637896537781, 0.3424672484397888, 0.33951225876808167, 0.3386255204677582, 0.34044384956359863, 0.33945050835609436, 0.33684298396110535, 0.3322163224220276, 0.33181649446487427, 0.32827115058898926, 0.3312568664550781, 0.3297465741634369, 0.3256674110889435, 0.3234780728816986, 0.32119208574295044, 0.3232716917991638, 0.3209094703197479, 0.31944912672042847, 0.3157532513141632, 0.3144265413284302, 0.31676045060157776, 0.31425556540489197, 0.3131799101829529, 0.3147056996822357, 0.3154993951320648, 0.31771615147590637, 0.31545644998550415, 0.3127000629901886, 0.31382524967193604, 0.31026333570480347, 0.3147730529308319, 0.30829918384552, 0.3107443153858185, 0.31316936016082764, 0.30297672748565674, 0.30325081944465637, 0.30436232686042786, 0.3072424829006195, 0.30681705474853516, 0.3061434030532837], "val_accuracy": [0.5526666641235352, 0.6666666865348816, 0.687333345413208, 0.7083333134651184, 0.731333315372467, 0.7446666955947876, 0.7606666684150696, 0.762666642665863, 0.7873333096504211, 0.7889999747276306, 0.7973333597183228, 0.8056666851043701, 0.8193333148956299, 0.8259999752044678, 0.8289999961853027, 0.8410000205039978, 0.8453333377838135, 0.8450000286102295, 0.8489999771118164, 0.847000002861023, 0.8516666889190674, 0.856333315372467, 0.859333336353302, 0.856333315372467, 0.8633333444595337, 0.8640000224113464, 0.8656666874885559, 0.8646666407585144, 0.8679999709129333, 0.8696666955947876, 0.8640000224113464, 0.8686666488647461, 0.8713333606719971, 0.8709999918937683, 0.8703333139419556, 0.8723333477973938, 0.871999979019165, 0.874666690826416, 0.8723333477973938, 0.8759999871253967, 0.8726666569709778, 0.875333309173584, 0.8790000081062317, 0.8756666779518127, 0.8726666569709778, 0.8769999742507935, 0.8796666860580444, 0.8796666860580444, 0.8806666731834412, 0.8793333172798157, 0.8813333511352539, 0.8840000033378601, 0.8840000033378601, 0.8843333125114441, 0.8809999823570251, 0.8856666684150696, 0.8866666555404663, 0.8833333253860474, 0.8866666555404663, 0.8843333125114441, 0.8856666684150696, 0.8880000114440918, 0.887333333492279, 0.8883333206176758, 0.8866666555404663, 0.8896666765213013, 0.8863333463668823, 0.8853333592414856, 0.890999972820282, 0.8870000243186951, 0.8883333206176758, 0.8883333206176758, 0.8916666507720947, 0.8939999938011169, 0.8896666765213013, 0.8916666507720947, 0.890999972820282, 0.8926666378974915, 0.8913333415985107]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8625714182853699, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2244787216186523, 1.8690698146820068, 1.3880044221878052, 1.0849593877792358, 0.9272639751434326, 0.8295464515686035, 0.7581251263618469, 0.715813159942627, 0.6841715574264526, 0.6613859534263611, 0.63013756275177, 0.6156716346740723, 0.5988433957099915, 0.5810073018074036, 0.5573515892028809, 0.5473269820213318, 0.5308292508125305, 0.5253086090087891, 0.4975776970386505, 0.4888903498649597, 0.47642654180526733, 0.4677664637565613, 0.4575280249118805, 0.45229873061180115, 0.44815793633461, 0.4355190694332123, 0.42898494005203247, 0.41764768958091736, 0.4206145703792572, 0.40465885400772095, 0.40512850880622864, 0.39667725563049316, 0.39067089557647705, 0.387245774269104, 0.37465012073516846, 0.3698730766773224, 0.37207189202308655, 0.3650725185871124, 0.34925609827041626, 0.34439364075660706, 0.3464232385158539, 0.34533631801605225, 0.34179505705833435, 0.3272254467010498, 0.3251356780529022, 0.3168240785598755, 0.3207232654094696, 0.31432247161865234, 0.3088788390159607, 0.3002646267414093, 0.2991364896297455, 0.28690922260284424, 0.28789961338043213, 0.2850218415260315, 0.28027933835983276, 0.2760964632034302, 0.2740589678287506, 0.27203670144081116, 0.2598184049129486, 0.26351454854011536, 0.2579939067363739, 0.25575998425483704, 0.24488823115825653, 0.2537594437599182, 0.2436826080083847], "accuracy": [0.2615242302417755, 0.4893673360347748, 0.5634658336639404, 0.6164311170578003, 0.665830135345459, 0.6979262828826904, 0.7256637215614319, 0.7367587089538574, 0.7486461400985718, 0.7604015469551086, 0.765949010848999, 0.7800818681716919, 0.7758552432060242, 0.7895918488502502, 0.7946110367774963, 0.7965922355651855, 0.8017435073852539, 0.8108572363853455, 0.8220842480659485, 0.821820080280304, 0.8269713521003723, 0.8329150676727295, 0.8330471515655518, 0.835160493850708, 0.8389908671379089, 0.8421608805656433, 0.8451988101005554, 0.8504821062088013, 0.8500858545303345, 0.8564258217811584, 0.8582749962806702, 0.8578787446022034, 0.8593316674232483, 0.8594637513160706, 0.8689737319946289, 0.8671245574951172, 0.8668603897094727, 0.8665962219238281, 0.8721436858177185, 0.8791441321372986, 0.8746532797813416, 0.8697662353515625, 0.8778232932090759, 0.8800686597824097, 0.882710337638855, 0.8840311765670776, 0.8828424215316772, 0.8885219693183899, 0.8893144726753235, 0.8911636471748352, 0.8916919827461243, 0.8951261639595032, 0.8947299122810364, 0.8956544995307922, 0.8960506916046143, 0.8956544995307922, 0.9029190540313721, 0.9017302989959717, 0.9052965044975281, 0.9030511379241943, 0.9063531756401062, 0.9074098467826843, 0.9113723635673523, 0.9091269373893738, 0.9133535623550415], "val_loss": [2.0405454635620117, 1.5173366069793701, 1.0419502258300781, 0.8366616368293762, 0.7502712607383728, 0.6973469257354736, 0.6557708978652954, 0.622121274471283, 0.6026409268379211, 0.583513081073761, 0.5601726770401001, 0.546204686164856, 0.5276050567626953, 0.5224223136901855, 0.5079836249351501, 0.4956170320510864, 0.4963814318180084, 0.4800751805305481, 0.47146305441856384, 0.4600139856338501, 0.45642194151878357, 0.4496617019176483, 0.4442623257637024, 0.44190657138824463, 0.4342348277568817, 0.43050867319107056, 0.42617008090019226, 0.42394548654556274, 0.42246878147125244, 0.41947856545448303, 0.41435956954956055, 0.41213974356651306, 0.41179585456848145, 0.40648794174194336, 0.40327051281929016, 0.40112829208374023, 0.3996162414550781, 0.39663225412368774, 0.3959873914718628, 0.39329999685287476, 0.39349812269210815, 0.39596471190452576, 0.3891049325466156, 0.3883334994316101, 0.3831504285335541, 0.39135539531707764, 0.3830395042896271, 0.37959155440330505, 0.38656583428382874, 0.3794107735157013, 0.3840091824531555, 0.37884923815727234, 0.3792930543422699, 0.3769715130329132, 0.3738213777542114, 0.37205687165260315, 0.37314489483833313, 0.3751923441886902, 0.37114062905311584, 0.36887577176094055, 0.3706221878528595, 0.3653491139411926, 0.3707437217235565, 0.3686283230781555, 0.3651711046695709], "val_accuracy": [0.559333324432373, 0.6629999876022339, 0.6890000104904175, 0.7136666774749756, 0.734333336353302, 0.7429999709129333, 0.7630000114440918, 0.7680000066757202, 0.7846666574478149, 0.7926666736602783, 0.8009999990463257, 0.8029999732971191, 0.8153333067893982, 0.8130000233650208, 0.8196666836738586, 0.8266666531562805, 0.8233333230018616, 0.8330000042915344, 0.8349999785423279, 0.8416666388511658, 0.8379999995231628, 0.8423333168029785, 0.8453333377838135, 0.8453333377838135, 0.8506666421890259, 0.8506666421890259, 0.8543333411216736, 0.8529999852180481, 0.8500000238418579, 0.8583333492279053, 0.8546666502952576, 0.8539999723434448, 0.8546666502952576, 0.8573333621025085, 0.8600000143051147, 0.8579999804496765, 0.8603333234786987, 0.8613333106040955, 0.862333357334137, 0.8663333058357239, 0.8653333187103271, 0.8610000014305115, 0.862333357334137, 0.8653333187103271, 0.8669999837875366, 0.862666666507721, 0.8696666955947876, 0.871666669845581, 0.8686666488647461, 0.8723333477973938, 0.8709999918937683, 0.8690000176429749, 0.874666690826416, 0.8743333220481873, 0.8726666569709778, 0.878333330154419, 0.8763333559036255, 0.8743333220481873, 0.8773333430290222, 0.8816666603088379, 0.8809999823570251, 0.8796666860580444, 0.8773333430290222, 0.8786666393280029, 0.8799999952316284]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 0, 1, 1], [0, 2, 9, 5, 3], [0, 1, 0, 2], [57, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [8, 2, 3, 1, 3, 5], [0, 2, 0, 1, 2], [5, 16], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 1], [4, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8157142996788025, "mapping_values": [1, 2, 1, 1, 1, 11, 6, 5, 2, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(alpha))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha))))", "other_info": {"loss": [2.3095033168792725, 2.2975804805755615, 2.2750015258789062, 2.2333967685699463, 2.1343090534210205, 1.8489420413970947, 1.3980934619903564, 1.1513737440109253, 1.0184688568115234, 0.9454889297485352, 0.86196368932724, 0.8425996899604797, 0.8701454997062683, 0.7686315774917603, 0.7833871841430664, 0.7608820796012878, 0.7246618866920471, 0.6902363896369934, 0.7384284138679504, 0.6936729550361633, 0.683822751045227, 0.6649962663650513, 0.6796111464500427, 0.6247707605361938, 0.616890013217926, 0.6002103686332703, 0.6186692118644714, 0.5921374559402466, 0.581778883934021, 0.57103031873703, 0.5634106397628784, 0.5305386185646057, 0.541090190410614, 0.5298993587493896, 0.524248480796814, 0.507258415222168, 0.4908720850944519, 0.5259516835212708, 0.5026946663856506, 0.48601293563842773, 0.4680328965187073, 0.45096907019615173, 0.4616413116455078, 0.4494839012622833, 0.4399518668651581, 0.43835076689720154, 0.4208698272705078], "accuracy": [0.0874389111995697, 0.11134592443704605, 0.17500990629196167, 0.2662792205810547, 0.35781270265579224, 0.44947826862335205, 0.5336151123046875, 0.5914674401283264, 0.6479989290237427, 0.6646413803100586, 0.6811517477035522, 0.6889446377754211, 0.6737551093101501, 0.717870831489563, 0.7096816897392273, 0.7145687341690063, 0.7234182953834534, 0.7376832365989685, 0.72672039270401, 0.7347774505615234, 0.741909921169281, 0.743891179561615, 0.7405890822410583, 0.7648923397064209, 0.7594769597053528, 0.7740060687065125, 0.7627789974212646, 0.7717606425285339, 0.7802139520645142, 0.7835160493850708, 0.7845727205276489, 0.800818920135498, 0.791441023349762, 0.796328067779541, 0.8020076751708984, 0.8049134612083435, 0.8137630224227905, 0.807158887386322, 0.8090080618858337, 0.811649739742279, 0.8309338092803955, 0.8335754871368408, 0.8281601071357727, 0.8273676037788391, 0.8366134166717529, 0.8404437899589539, 0.8445383906364441], "val_loss": [2.302198648452759, 2.283067226409912, 2.250438928604126, 2.1826021671295166, 1.9883882999420166, 1.4676958322525024, 1.0415757894515991, 0.9092631936073303, 0.8003495335578918, 0.7592322826385498, 0.7798328399658203, 0.7326785326004028, 0.7184786796569824, 0.652518630027771, 0.6872327327728271, 0.6526296138763428, 0.6294729709625244, 0.6292098164558411, 0.5882791876792908, 0.6017551422119141, 0.632372260093689, 0.6505585312843323, 0.5595694184303284, 0.5554460883140564, 0.5955461263656616, 0.5753116011619568, 0.5223574042320251, 0.5734821557998657, 0.5295958518981934, 0.6184916496276855, 0.5304118990898132, 0.4684068262577057, 0.46974751353263855, 0.5286658406257629, 0.4598734676837921, 0.44431576132774353, 0.5247419476509094, 0.4769412577152252, 0.46705862879753113, 0.4305981993675232, 0.43494486808776855, 0.41250333189964294, 0.44812023639678955, 0.49215298891067505, 0.4626109302043915, 0.4425475299358368, 0.4346074163913727], "val_accuracy": [0.09433333575725555, 0.16633333265781403, 0.3863333463668823, 0.45899999141693115, 0.5543333292007446, 0.6136666536331177, 0.671999990940094, 0.6853333115577698, 0.7173333168029785, 0.7049999833106995, 0.6826666593551636, 0.7110000252723694, 0.7093333601951599, 0.7523333430290222, 0.746999979019165, 0.7506666779518127, 0.7463333606719971, 0.7583333253860474, 0.7713333368301392, 0.7723333239555359, 0.749666690826416, 0.7453333139419556, 0.7826666831970215, 0.7716666460037231, 0.7670000195503235, 0.7723333239555359, 0.7973333597183228, 0.7870000004768372, 0.7973333597183228, 0.7379999756813049, 0.7866666913032532, 0.8243333101272583, 0.8173333406448364, 0.7919999957084656, 0.8253333568572998, 0.8349999785423279, 0.8019999861717224, 0.8119999766349792, 0.8263333439826965, 0.8416666388511658, 0.8373333215713501, 0.8423333168029785, 0.8339999914169312, 0.8183333277702332, 0.8213333487510681, 0.8323333263397217, 0.8383333086967468]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 9, 3, 0, 3], [0, 1, 0, 0], [19, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1], [0, 2, 9, 0, 3, 5], [0, 1, 0, 3], [16, 16], [0, 1, 1], [2], [0, 6], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 4, 0, 3, 1, 2, 0], [16, 4, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 0, 1, 5, 4, 1, 2, 3, 1, 2, 1, 16, 8, 8, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(grad, tf.constant(1.0, shape=shape, dtype=tf.float32)))), sigma), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 1], [0, 2, 0, 2], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 3, 8, 7, 9], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 55, 96, 99, 61, 1, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 23, 13, 10, 7], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.math.pow(tf.math.multiply(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), sigma)), alpha))), beta), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [2, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 4, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), grad))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}]