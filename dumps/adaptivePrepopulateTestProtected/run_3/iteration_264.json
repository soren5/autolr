[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8808571696281433, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223215103149414, 1.8640538454055786, 1.390925645828247, 1.0857504606246948, 0.9175904989242554, 0.8278062343597412, 0.75929194688797, 0.7150763869285583, 0.6742342710494995, 0.6527069211006165, 0.6226239800453186, 0.6030511260032654, 0.5812473893165588, 0.5698184370994568, 0.5517233610153198, 0.5318202376365662, 0.5262278914451599, 0.5063096284866333, 0.4941454231739044, 0.4912639260292053, 0.47673994302749634, 0.46776485443115234, 0.45580968260765076, 0.45419755578041077, 0.4471202790737152, 0.4368197023868561, 0.4238806366920471, 0.41453513503074646, 0.41017231345176697, 0.4062040150165558, 0.40386685729026794, 0.3953916132450104, 0.39355871081352234, 0.3836102783679962, 0.37635838985443115, 0.3735085725784302, 0.363672137260437, 0.35395750403404236, 0.35972025990486145, 0.34721699357032776, 0.3442964553833008, 0.335767537355423, 0.3300938904285431, 0.32407090067863464, 0.32112976908683777, 0.3181473910808563, 0.31370431184768677, 0.3087446987628937, 0.3084625005722046, 0.30203962326049805, 0.293395072221756, 0.2889169156551361, 0.2914500832557678, 0.28307828307151794, 0.28207361698150635, 0.2786792516708374, 0.27818819880485535, 0.26387521624565125], "accuracy": [0.27222296595573425, 0.5027077198028564, 0.5674283504486084, 0.6277902722358704, 0.6709813475608826, 0.7058512568473816, 0.7269845604896545, 0.7415136694908142, 0.7586844563484192, 0.7617223858833313, 0.783119797706604, 0.7832518815994263, 0.7926297783851624, 0.8001585006713867, 0.807158887386322, 0.8103289008140564, 0.8133667707443237, 0.8190463781356812, 0.8247259259223938, 0.8271034359931946, 0.8298771381378174, 0.8341038227081299, 0.8366134166717529, 0.839519202709198, 0.8404437899589539, 0.848368763923645, 0.8515387773513794, 0.8564258217811584, 0.8529917001724243, 0.8585391640663147, 0.8515387773513794, 0.863558292388916, 0.8615770936012268, 0.8640866279602051, 0.8652753829956055, 0.8671245574951172, 0.8720116019248962, 0.8771628737449646, 0.8705587387084961, 0.876370370388031, 0.8787478804588318, 0.8784837126731873, 0.8828424215316772, 0.8842953443527222, 0.884691596031189, 0.8840311765670776, 0.8891823887825012, 0.8894465565681458, 0.8899748921394348, 0.8932769894599915, 0.8945978283882141, 0.8980319499969482, 0.896446943283081, 0.8988244533538818, 0.9019944667816162, 0.901862382888794, 0.8985602855682373, 0.904768168926239], "val_loss": [2.039530038833618, 1.5154659748077393, 1.039007544517517, 0.8366694450378418, 0.7400773167610168, 0.6859951019287109, 0.6454513669013977, 0.6114123463630676, 0.5899704694747925, 0.5724708437919617, 0.5533395409584045, 0.5345184803009033, 0.5225448608398438, 0.5092709064483643, 0.500229001045227, 0.49316829442977905, 0.480929970741272, 0.4729439616203308, 0.4688349962234497, 0.4563703238964081, 0.45455607771873474, 0.44636544585227966, 0.44144734740257263, 0.4332112669944763, 0.42851945757865906, 0.4277913272380829, 0.4196922183036804, 0.41600528359413147, 0.4114539325237274, 0.4113328456878662, 0.4059373438358307, 0.4033544063568115, 0.40210506319999695, 0.3963744640350342, 0.39264819025993347, 0.39112263917922974, 0.384288489818573, 0.383841872215271, 0.3804401755332947, 0.3786342442035675, 0.3777892291545868, 0.37486007809638977, 0.37355443835258484, 0.37450093030929565, 0.36811116337776184, 0.3697490096092224, 0.3684578537940979, 0.370509535074234, 0.36476588249206543, 0.36312252283096313, 0.361527681350708, 0.36036449670791626, 0.3581533133983612, 0.3633516728878021, 0.35499346256256104, 0.3547135293483734, 0.35882508754730225, 0.35363712906837463], "val_accuracy": [0.5473333597183228, 0.6496666669845581, 0.6846666932106018, 0.6959999799728394, 0.7279999852180481, 0.7450000047683716, 0.7580000162124634, 0.7713333368301392, 0.7763333320617676, 0.7816666960716248, 0.7963333129882812, 0.8109999895095825, 0.8116666674613953, 0.8113333582878113, 0.8116666674613953, 0.8186666369438171, 0.8259999752044678, 0.8236666917800903, 0.828000009059906, 0.8360000252723694, 0.8323333263397217, 0.8373333215713501, 0.8373333215713501, 0.8366666436195374, 0.843666672706604, 0.843999981880188, 0.846666693687439, 0.8483333587646484, 0.8493333458900452, 0.847000002861023, 0.8476666808128357, 0.8496666550636292, 0.8510000109672546, 0.8519999980926514, 0.8553333282470703, 0.8556666374206543, 0.8583333492279053, 0.859333336353302, 0.8560000061988831, 0.862333357334137, 0.8636666536331177, 0.859666645526886, 0.8636666536331177, 0.8643333315849304, 0.8653333187103271, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.8709999918937683, 0.8690000176429749, 0.8686666488647461, 0.8653333187103271, 0.8733333349227905, 0.8679999709129333, 0.8709999918937683, 0.8706666827201843, 0.8703333139419556, 0.8693333268165588]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8691428303718567, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224882125854492, 1.8709279298782349, 1.410861849784851, 1.1038645505905151, 0.9408913254737854, 0.8370504379272461, 0.774747371673584, 0.7200185656547546, 0.6844577193260193, 0.6570030450820923, 0.6252253651618958, 0.6076040863990784, 0.5940324664115906, 0.5829758644104004, 0.5519118905067444, 0.5401028990745544, 0.5224397778511047, 0.5135602355003357, 0.5039127469062805, 0.4931982755661011, 0.48107388615608215, 0.4714702069759369, 0.46517127752304077, 0.4511381685733795, 0.4477308690547943, 0.43629491329193115, 0.4381863474845886, 0.42861005663871765, 0.4257820248603821, 0.41295579075813293, 0.40953147411346436, 0.4034349322319031, 0.38918760418891907, 0.38074442744255066, 0.3777669072151184, 0.3783643841743469, 0.36811575293540955, 0.3711613416671753, 0.3644651770591736, 0.35781562328338623, 0.34804925322532654, 0.3482971787452698, 0.3424302935600281, 0.3388623595237732, 0.33656376600265503, 0.32274430990219116, 0.3225838243961334, 0.319954514503479, 0.30874449014663696, 0.3145644962787628, 0.3092016279697418, 0.3000253438949585, 0.29489371180534363, 0.2903718054294586, 0.2886122465133667, 0.2881958782672882, 0.2762868106365204, 0.2752986550331116, 0.26575830578804016, 0.2694961428642273, 0.2666648030281067], "accuracy": [0.2661471366882324, 0.4913485646247864, 0.553031325340271, 0.6056002974510193, 0.6602826714515686, 0.6935675740242004, 0.7168141603469849, 0.7341170310974121, 0.7491744756698608, 0.7582882046699524, 0.7730814814567566, 0.7737419009208679, 0.7825914621353149, 0.7837802171707153, 0.7997622489929199, 0.8018755912780762, 0.8105930685997009, 0.8216879963874817, 0.8215559124946594, 0.8247259259223938, 0.8269713521003723, 0.8317263126373291, 0.8364813327789307, 0.8372738361358643, 0.8393871188163757, 0.841500461101532, 0.8461233377456665, 0.847840428352356, 0.8479725122451782, 0.8558974862098694, 0.8544445633888245, 0.8552370667457581, 0.8650112152099609, 0.8667283058166504, 0.8716153502464294, 0.8692378997802734, 0.8702945709228516, 0.872407853603363, 0.8734645247459412, 0.8762382864952087, 0.873860776424408, 0.876370370388031, 0.8761062026023865, 0.8808611631393433, 0.8844274282455444, 0.887597382068634, 0.885219931602478, 0.8894465565681458, 0.8889182209968567, 0.8885219693183899, 0.8932769894599915, 0.8948619961738586, 0.9000132083892822, 0.8943336606025696, 0.8975036144256592, 0.8977677822113037, 0.8985602855682373, 0.9015982151031494, 0.9056927561759949, 0.9029190540313721, 0.9062210917472839], "val_loss": [2.0349857807159424, 1.5040351152420044, 1.0259073972702026, 0.8138456344604492, 0.726961076259613, 0.6683874726295471, 0.6275782585144043, 0.5886065363883972, 0.5689563155174255, 0.5490928888320923, 0.5344398617744446, 0.5135042667388916, 0.5010125041007996, 0.4925079047679901, 0.4862273037433624, 0.4683629274368286, 0.46223294734954834, 0.45575082302093506, 0.44439083337783813, 0.44532957673072815, 0.4375547170639038, 0.43038052320480347, 0.42362287640571594, 0.4187655746936798, 0.4175810217857361, 0.41417285799980164, 0.40879344940185547, 0.40419939160346985, 0.40213000774383545, 0.395298570394516, 0.3903530538082123, 0.3864011764526367, 0.38303834199905396, 0.37896302342414856, 0.37801557779312134, 0.3789442181587219, 0.37212935090065, 0.37115567922592163, 0.3673689663410187, 0.3652339577674866, 0.3676633834838867, 0.36015385389328003, 0.362990140914917, 0.36011841893196106, 0.3601229786872864, 0.35664403438568115, 0.3552637994289398, 0.3505275845527649, 0.355830579996109, 0.3506803810596466, 0.3494255244731903, 0.34487804770469666, 0.3440931439399719, 0.34157347679138184, 0.3385787308216095, 0.339027464389801, 0.34198909997940063, 0.3463297486305237, 0.3391495645046234, 0.338747501373291, 0.3329401910305023], "val_accuracy": [0.5353333353996277, 0.6736666560173035, 0.6940000057220459, 0.7263333201408386, 0.7429999709129333, 0.7630000114440918, 0.7730000019073486, 0.7863333225250244, 0.796999990940094, 0.8053333163261414, 0.8053333163261414, 0.8169999718666077, 0.8216666579246521, 0.8323333263397217, 0.8230000138282776, 0.8333333134651184, 0.8346666693687439, 0.8363333344459534, 0.8389999866485596, 0.8399999737739563, 0.8383333086967468, 0.8486666679382324, 0.8489999771118164, 0.8506666421890259, 0.8483333587646484, 0.8516666889190674, 0.8566666841506958, 0.8503333330154419, 0.8526666760444641, 0.8539999723434448, 0.8616666793823242, 0.8616666793823242, 0.8603333234786987, 0.8600000143051147, 0.8633333444595337, 0.8610000014305115, 0.8613333106040955, 0.8690000176429749, 0.8663333058357239, 0.8643333315849304, 0.8666666746139526, 0.8703333139419556, 0.8686666488647461, 0.8709999918937683, 0.8683333396911621, 0.8683333396911621, 0.8696666955947876, 0.8736666440963745, 0.871666669845581, 0.871999979019165, 0.8740000128746033, 0.8740000128746033, 0.8723333477973938, 0.8736666440963745, 0.8763333559036255, 0.8803333044052124, 0.8773333430290222, 0.8740000128746033, 0.8766666650772095, 0.8773333430290222, 0.8776666522026062]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 5, 3, 5], [3, 2, 0, 3], [16, 16], [0, 1, 1], [3], [0, 6], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 9, 3, 6, 8, 1, 4, 8, 4, 2, 8], [4, 0, 0, 3, 0, 0, 3, 1, 2, 2], [16, 99, 96, 99, 61, 1]], "fitness": -0.4242857098579407, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 1, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.square(grad), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4461889266967773, 2.2358908653259277, 2.5221774578094482, 2.3154430389404297, 2.356104850769043, 2.305168390274048, 2.3034250736236572], "accuracy": [0.19944524765014648, 0.15440496802330017, 0.1834632158279419, 0.10527011007070541, 0.10381719470024109, 0.09509972482919693, 0.09615638852119446], "val_loss": [2.2856853008270264, 2.164761781692505, 2.3039259910583496, 2.2393712997436523, 2.3061954975128174, 2.303208589553833, 2.3027331829071045], "val_accuracy": [0.10566666722297668, 0.42766666412353516, 0.09966666996479034, 0.10899999737739563, 0.10066666454076767, 0.09833333641290665, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 1, 0, 2], [18, 39], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1], [0, 1, 3, 0, 3, 5], [0, 0, 0, 3], [16, 16, 32], [0, 0, 1, 1], [0, 4], [0, 7], [99], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [4, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [4, 3, 0, 4, 0, 0, 0, 1, 2, 4], [16, 99, 96, 95, 61, 1]], "fitness": -0.14657142758369446, "mapping_values": [1, 9, 5, 4, 1, 10, 6, 4, 3, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.math.multiply(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.multiply(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.square(grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.347944974899292, 2.303593873977661, 2.385810613632202, 2.305996894836426, 2.3036158084869385, 2.303206443786621, 2.3030872344970703], "accuracy": [0.1900673657655716, 0.11187426000833511, 0.15519747138023376, 0.09615638852119446, 0.10051512718200684, 0.09721305221319199, 0.09325055778026581], "val_loss": [2.304203987121582, 2.2982852458953857, 2.3082144260406494, 2.303711175918579, 2.3028745651245117, 2.302570104598999, 2.302539110183716], "val_accuracy": [0.10233332961797714, 0.1509999930858612, 0.09799999743700027, 0.0989999994635582, 0.0989999994635582, 0.10233332961797714, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 2, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], [0, 2, 6, 0, 1, 5, 3, 3, 5, 3, 1, 8, 6, 1, 9, 7, 6, 9, 6, 6, 8, 1, 7, 0], [0, 1, 0, 2, 1, 2, 1, 4, 3, 5, 3, 4, 4, 3], [16, 16, 86, 67], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 8, 8, 1, 2, 1, 1, 2, 8], [0, 0, 0, 3, 0, 0, 1, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10400000214576721, "mapping_values": [1, 9, 5, 4, 2, 38, 24, 14, 4, 2, 1, 1, 0, 11, 6, 5, 4], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta)), tf.math.multiply(tf.math.square(tf.math.multiply(alpha, beta)), tf.math.subtract(tf.math.sqrt(tf.math.divide_no_nan(tf.math.subtract(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), alpha), tf.math.add(tf.math.divide_no_nan(grad, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.sqrt(grad), grad), tf.math.subtract(grad, tf.math.add(grad, grad)))))), tf.math.negative(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [20.97051429748535, 216.78579711914062, 1758.167724609375, 1746.908203125, 1773.056640625, 1830.9459228515625, 2364.2685546875, 3074.419677734375, 3224.650634765625, 3215.362548828125, 3218.8740234375], "accuracy": [0.09774138033390045, 0.0952318087220192, 0.10579843819141388, 0.10289261490106583, 0.1006472036242485, 0.10051512718200684, 0.09351472556591034, 0.08625016361474991, 0.09509972482919693, 0.09615638852119446, 0.10130762308835983], "val_loss": [50.09881591796875, 1332.22998046875, 1153.32470703125, 1155.837890625, 1124.2886962890625, 1121.845703125, 1872.814697265625, 2564.64453125, 2307.026611328125, 2259.05029296875, 2315.547119140625], "val_accuracy": [0.09966666996479034, 0.09933333098888397, 0.09799999743700027, 0.09833333641290665, 0.09399999678134918, 0.10566666722297668, 0.07066666334867477, 0.09700000286102295, 0.09333333373069763, 0.09166666865348816, 0.09233333170413971]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3], [0, 2, 0, 2], [89, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 3, 0, 3], [16, 69], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 0, 2, 8], [3, 4, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 82, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 10, 6, 4, 2, 2, 1, 1, 1, 17, 9, 8, 3], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(sigma, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))), sigma), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}]