[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8808571696281433, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223215103149414, 1.8640538454055786, 1.390925645828247, 1.0857504606246948, 0.9175904989242554, 0.8278062343597412, 0.75929194688797, 0.7150763869285583, 0.6742342710494995, 0.6527069211006165, 0.6226239800453186, 0.6030511260032654, 0.5812473893165588, 0.5698184370994568, 0.5517233610153198, 0.5318202376365662, 0.5262278914451599, 0.5063096284866333, 0.4941454231739044, 0.4912639260292053, 0.47673994302749634, 0.46776485443115234, 0.45580968260765076, 0.45419755578041077, 0.4471202790737152, 0.4368197023868561, 0.4238806366920471, 0.41453513503074646, 0.41017231345176697, 0.4062040150165558, 0.40386685729026794, 0.3953916132450104, 0.39355871081352234, 0.3836102783679962, 0.37635838985443115, 0.3735085725784302, 0.363672137260437, 0.35395750403404236, 0.35972025990486145, 0.34721699357032776, 0.3442964553833008, 0.335767537355423, 0.3300938904285431, 0.32407090067863464, 0.32112976908683777, 0.3181473910808563, 0.31370431184768677, 0.3087446987628937, 0.3084625005722046, 0.30203962326049805, 0.293395072221756, 0.2889169156551361, 0.2914500832557678, 0.28307828307151794, 0.28207361698150635, 0.2786792516708374, 0.27818819880485535, 0.26387521624565125], "accuracy": [0.27222296595573425, 0.5027077198028564, 0.5674283504486084, 0.6277902722358704, 0.6709813475608826, 0.7058512568473816, 0.7269845604896545, 0.7415136694908142, 0.7586844563484192, 0.7617223858833313, 0.783119797706604, 0.7832518815994263, 0.7926297783851624, 0.8001585006713867, 0.807158887386322, 0.8103289008140564, 0.8133667707443237, 0.8190463781356812, 0.8247259259223938, 0.8271034359931946, 0.8298771381378174, 0.8341038227081299, 0.8366134166717529, 0.839519202709198, 0.8404437899589539, 0.848368763923645, 0.8515387773513794, 0.8564258217811584, 0.8529917001724243, 0.8585391640663147, 0.8515387773513794, 0.863558292388916, 0.8615770936012268, 0.8640866279602051, 0.8652753829956055, 0.8671245574951172, 0.8720116019248962, 0.8771628737449646, 0.8705587387084961, 0.876370370388031, 0.8787478804588318, 0.8784837126731873, 0.8828424215316772, 0.8842953443527222, 0.884691596031189, 0.8840311765670776, 0.8891823887825012, 0.8894465565681458, 0.8899748921394348, 0.8932769894599915, 0.8945978283882141, 0.8980319499969482, 0.896446943283081, 0.8988244533538818, 0.9019944667816162, 0.901862382888794, 0.8985602855682373, 0.904768168926239], "val_loss": [2.039530038833618, 1.5154659748077393, 1.039007544517517, 0.8366694450378418, 0.7400773167610168, 0.6859951019287109, 0.6454513669013977, 0.6114123463630676, 0.5899704694747925, 0.5724708437919617, 0.5533395409584045, 0.5345184803009033, 0.5225448608398438, 0.5092709064483643, 0.500229001045227, 0.49316829442977905, 0.480929970741272, 0.4729439616203308, 0.4688349962234497, 0.4563703238964081, 0.45455607771873474, 0.44636544585227966, 0.44144734740257263, 0.4332112669944763, 0.42851945757865906, 0.4277913272380829, 0.4196922183036804, 0.41600528359413147, 0.4114539325237274, 0.4113328456878662, 0.4059373438358307, 0.4033544063568115, 0.40210506319999695, 0.3963744640350342, 0.39264819025993347, 0.39112263917922974, 0.384288489818573, 0.383841872215271, 0.3804401755332947, 0.3786342442035675, 0.3777892291545868, 0.37486007809638977, 0.37355443835258484, 0.37450093030929565, 0.36811116337776184, 0.3697490096092224, 0.3684578537940979, 0.370509535074234, 0.36476588249206543, 0.36312252283096313, 0.361527681350708, 0.36036449670791626, 0.3581533133983612, 0.3633516728878021, 0.35499346256256104, 0.3547135293483734, 0.35882508754730225, 0.35363712906837463], "val_accuracy": [0.5473333597183228, 0.6496666669845581, 0.6846666932106018, 0.6959999799728394, 0.7279999852180481, 0.7450000047683716, 0.7580000162124634, 0.7713333368301392, 0.7763333320617676, 0.7816666960716248, 0.7963333129882812, 0.8109999895095825, 0.8116666674613953, 0.8113333582878113, 0.8116666674613953, 0.8186666369438171, 0.8259999752044678, 0.8236666917800903, 0.828000009059906, 0.8360000252723694, 0.8323333263397217, 0.8373333215713501, 0.8373333215713501, 0.8366666436195374, 0.843666672706604, 0.843999981880188, 0.846666693687439, 0.8483333587646484, 0.8493333458900452, 0.847000002861023, 0.8476666808128357, 0.8496666550636292, 0.8510000109672546, 0.8519999980926514, 0.8553333282470703, 0.8556666374206543, 0.8583333492279053, 0.859333336353302, 0.8560000061988831, 0.862333357334137, 0.8636666536331177, 0.859666645526886, 0.8636666536331177, 0.8643333315849304, 0.8653333187103271, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.8709999918937683, 0.8690000176429749, 0.8686666488647461, 0.8653333187103271, 0.8733333349227905, 0.8679999709129333, 0.8709999918937683, 0.8706666827201843, 0.8703333139419556, 0.8693333268165588]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8717142939567566, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2236459255218506, 1.8689770698547363, 1.4020934104919434, 1.0953056812286377, 0.9477697014808655, 0.8433582186698914, 0.773779571056366, 0.7276821732521057, 0.6901377439498901, 0.6452614068984985, 0.6244865655899048, 0.5984323620796204, 0.5927977561950684, 0.5692211389541626, 0.5470228791236877, 0.5338349938392639, 0.5183350443840027, 0.5093797445297241, 0.49154070019721985, 0.4895007610321045, 0.4753587543964386, 0.4587714374065399, 0.45138630270957947, 0.4377875328063965, 0.43713364005088806, 0.432394415140152, 0.425468385219574, 0.4170854091644287, 0.406740665435791, 0.39895370602607727, 0.3916027843952179, 0.3953622579574585, 0.39123910665512085, 0.3807949423789978, 0.3785828649997711, 0.35970932245254517, 0.367556095123291, 0.36143869161605835, 0.3541669547557831, 0.34847626090049744, 0.34735581278800964, 0.34268662333488464, 0.33569562435150146, 0.3274027109146118, 0.322823166847229, 0.3141668140888214, 0.3100026547908783, 0.30447089672088623, 0.3050233721733093, 0.3003297448158264, 0.2947887182235718, 0.2936161458492279, 0.2926385998725891, 0.28771939873695374], "accuracy": [0.258090078830719, 0.4900277256965637, 0.5542200207710266, 0.618280291557312, 0.6539427042007446, 0.7020208835601807, 0.7276449799537659, 0.7428345084190369, 0.7523444890975952, 0.7664773464202881, 0.7730814814567566, 0.785101056098938, 0.7874785661697388, 0.7947431206703186, 0.802800178527832, 0.8042530417442322, 0.8161405324935913, 0.8212917447090149, 0.8238013386726379, 0.8272355198860168, 0.8338396549224854, 0.8364813327789307, 0.8400475382804871, 0.8426892161369324, 0.8417646288871765, 0.8449346423149109, 0.8457271456718445, 0.8549728989601135, 0.8525954484939575, 0.8584070801734924, 0.8589354157447815, 0.8577466607093811, 0.8540483713150024, 0.8642187118530273, 0.8681812286376953, 0.8704266548156738, 0.8658037185668945, 0.8688416481018066, 0.8717474341392517, 0.8729361891746521, 0.8728041052818298, 0.8767666220664978, 0.8776912093162537, 0.885219931602478, 0.8842953443527222, 0.8835028409957886, 0.8868049383163452, 0.8873332738876343, 0.8911636471748352, 0.8908994793891907, 0.8948619961738586, 0.8938053250312805, 0.893541157245636, 0.8982961177825928], "val_loss": [2.042836904525757, 1.5226902961730957, 1.050084114074707, 0.8361836075782776, 0.7515429854393005, 0.6887345314025879, 0.6411504149436951, 0.6068381071090698, 0.5854675769805908, 0.5603622794151306, 0.5515378713607788, 0.527188241481781, 0.5252416133880615, 0.5055215954780579, 0.49452096223831177, 0.4900520443916321, 0.4757450222969055, 0.468239426612854, 0.46048885583877563, 0.45468008518218994, 0.45073437690734863, 0.4414766728878021, 0.44285306334495544, 0.43114185333251953, 0.427930623292923, 0.4241423010826111, 0.42356374859809875, 0.41248705983161926, 0.41475874185562134, 0.40773114562034607, 0.4064088463783264, 0.406033456325531, 0.39795756340026855, 0.39828506112098694, 0.40239229798316956, 0.3929581642150879, 0.38499510288238525, 0.3872177302837372, 0.38366198539733887, 0.38747045397758484, 0.38064348697662354, 0.37815913558006287, 0.37649771571159363, 0.37343907356262207, 0.37432461977005005, 0.3710198700428009, 0.3698730170726776, 0.37207266688346863, 0.36387231945991516, 0.3696807324886322, 0.3656974136829376, 0.3587701916694641, 0.36492934823036194, 0.36561185121536255], "val_accuracy": [0.5026666522026062, 0.6493333578109741, 0.6796666383743286, 0.7080000042915344, 0.7306666374206543, 0.746999979019165, 0.7563333511352539, 0.7736666798591614, 0.781000018119812, 0.7879999876022339, 0.7923333048820496, 0.8063333630561829, 0.7956666946411133, 0.8133333325386047, 0.8166666626930237, 0.8153333067893982, 0.8286666870117188, 0.8259999752044678, 0.828000009059906, 0.8336666822433472, 0.8303333520889282, 0.8396666646003723, 0.8366666436195374, 0.843666672706604, 0.847000002861023, 0.843666672706604, 0.8450000286102295, 0.8500000238418579, 0.8500000238418579, 0.8493333458900452, 0.8519999980926514, 0.8493333458900452, 0.8526666760444641, 0.859333336353302, 0.8506666421890259, 0.8560000061988831, 0.8556666374206543, 0.8586666584014893, 0.8616666793823242, 0.856333315372467, 0.859666645526886, 0.8606666922569275, 0.8646666407585144, 0.8659999966621399, 0.8659999966621399, 0.8663333058357239, 0.8669999837875366, 0.8650000095367432, 0.8696666955947876, 0.8659999966621399, 0.8656666874885559, 0.8679999709129333, 0.8666666746139526, 0.8679999709129333]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3], [0, 1, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [4], [99], [1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 0, 3, 2, 8], [4, 4, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.7471428513526917, "mapping_values": [1, 9, 5, 4, 1, 10, 6, 4, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, grad)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.9616544246673584, 2.4903721809387207, 2.3104054927825928, 2.270578145980835, 2.0776190757751465, 1.8069286346435547, 1.431086540222168, 1.184543251991272, 1.11826753616333, 1.0458483695983887, 0.9757845997810364, 0.9532803297042847, 0.9580646753311157, 0.8947702050209045, 0.8514084219932556, 0.8740490674972534, 0.8864175081253052, 0.8224734663963318, 0.8012714385986328, 0.7947766780853271, 0.7851560711860657, 0.8024148344993591, 0.7779820561408997, 0.7674505710601807], "accuracy": [0.19653943181037903, 0.12561088800430298, 0.09509972482919693, 0.13710209727287292, 0.23946638405323029, 0.3681151866912842, 0.49214106798171997, 0.5719191431999207, 0.5921278595924377, 0.6174877882003784, 0.643772304058075, 0.6402060389518738, 0.6522256135940552, 0.6705851554870605, 0.68101966381073, 0.6775855422019958, 0.6699247360229492, 0.6877558827400208, 0.694360077381134, 0.6993792057037354, 0.6992471218109131, 0.6872276067733765, 0.7003037929534912, 0.7111346125602722], "val_loss": [2.2561228275299072, 2.3184361457824707, 2.3018689155578613, 2.192739963531494, 1.534132480621338, 1.2106924057006836, 1.0117521286010742, 1.2261539697647095, 1.0028473138809204, 0.9434767365455627, 0.8934526443481445, 0.7468006014823914, 0.8217610120773315, 0.7502965331077576, 0.8025715947151184, 0.9303312301635742, 0.7059195041656494, 0.7104770541191101, 0.7064845561981201, 0.6754337549209595, 0.6775086522102356, 0.7062892913818359, 0.7341282367706299, 0.6932551264762878], "val_accuracy": [0.11266666650772095, 0.10000000149011612, 0.1003333330154419, 0.14499999582767487, 0.4273333251476288, 0.5643333196640015, 0.628000020980835, 0.5370000004768372, 0.6336666941642761, 0.6159999966621399, 0.628000020980835, 0.7110000252723694, 0.7133333086967468, 0.7089999914169312, 0.687666654586792, 0.6916666626930237, 0.7236666679382324, 0.7326666712760925, 0.7363333106040955, 0.7239999771118164, 0.7310000061988831, 0.7089999914169312, 0.6756666898727417, 0.7126666903495789]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 3, 3, 0, 3], [0, 1, 0, 2], [81, 39], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [95], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [6, 2, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [45, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 6, 3, 3, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.negative(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(sigma, alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.3033125400543213, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3, 1, 5], [1, 1, 0, 2, 3], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1], [4, 1, 3, 5, 3, 5, 0, 0, 6], [0, 2, 0, 3, 5, 0], [16, 16, 89], [0, 1, 0, 0, 0, 1, 0, 1, 1], [6, 0, 8, 1, 4], [0, 4, 3, 5], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 5, 2, 8], [0, 2, 0, 3, 0, 1, 3, 1, 2, 0], [40, 33, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 1, 15, 9, 6, 3, 9, 5, 4, 1, 12, 6, 6, 3], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(alpha), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.square(grad), grad)))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.subtract(tf.math.multiply(tf.math.square(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad), tf.math.negative(tf.math.divide_no_nan(grad, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 5], [0, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [37, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [2, 0, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 5, 3, 2, 2, 1, 1, 1, 2, 1, 1, 1, 16, 8, 8, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(grad), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}]