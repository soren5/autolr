[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8822857141494751, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585750579834, 1.8655762672424316, 1.394430160522461, 1.0773245096206665, 0.9378393888473511, 0.8425824046134949, 0.7776632308959961, 0.736241340637207, 0.6971188187599182, 0.6732122302055359, 0.644855797290802, 0.6276965141296387, 0.6100340485572815, 0.5899673104286194, 0.5746485590934753, 0.5484329462051392, 0.5425268411636353, 0.5357900857925415, 0.5214410424232483, 0.5127171874046326, 0.4895091950893402, 0.4932740032672882, 0.48551443219184875, 0.47113916277885437, 0.46571049094200134, 0.450914591550827, 0.438728004693985, 0.4414178729057312, 0.4245515465736389, 0.4182806611061096, 0.4126766324043274, 0.41352686285972595, 0.4031256139278412, 0.40064555406570435, 0.3982388377189636, 0.38566267490386963, 0.38400527834892273, 0.3741128146648407, 0.36422181129455566, 0.36170411109924316, 0.35991787910461426, 0.35666367411613464, 0.3521813750267029, 0.34583958983421326, 0.34736087918281555, 0.34181836247444153, 0.33650368452072144, 0.33141741156578064, 0.3230496346950531, 0.3225416839122772, 0.315096914768219, 0.3059031665325165, 0.3058394491672516, 0.3017319440841675, 0.29568877816200256, 0.2933836281299591, 0.28774771094322205, 0.2856961190700531, 0.2802303731441498, 0.2779994010925293, 0.274711549282074, 0.2719985842704773, 0.2586328387260437, 0.2598455548286438, 0.2622571289539337, 0.25739434361457825, 0.2502012252807617, 0.2544722855091095, 0.24556587636470795, 0.24580754339694977, 0.23948103189468384, 0.23949603736400604, 0.23484042286872864, 0.22871272265911102, 0.2256491780281067, 0.22479403018951416, 0.21744707226753235, 0.21390178799629211, 0.21272219717502594], "accuracy": [0.2785629332065582, 0.49451854825019836, 0.559899628162384, 0.6215823292732239, 0.6654338836669922, 0.6950204968452454, 0.7181349992752075, 0.7322678565979004, 0.7441553473472595, 0.7483819723129272, 0.7627789974212646, 0.7717606425285339, 0.7728173136711121, 0.78113853931427, 0.7882710099220276, 0.7993659973144531, 0.7976489067077637, 0.8074230551719666, 0.8128384351730347, 0.8198388814926147, 0.8212917447090149, 0.819970965385437, 0.8272355198860168, 0.8350284099578857, 0.8305375576019287, 0.8387266993522644, 0.846387505531311, 0.8433496356010437, 0.8504821062088013, 0.8524633646011353, 0.8535200357437134, 0.854708731174469, 0.856689989566803, 0.8551049828529358, 0.8593316674232483, 0.8615770936012268, 0.8628978729248047, 0.8702945709228516, 0.8691058158874512, 0.871879518032074, 0.8722757697105408, 0.8691058158874512, 0.8733324408531189, 0.8800686597824097, 0.8795403242111206, 0.8755778670310974, 0.8768987059593201, 0.8829745054244995, 0.8824461698532104, 0.8823140859603882, 0.887201189994812, 0.8897107243537903, 0.8889182209968567, 0.8927486538887024, 0.8902390599250793, 0.8953903317451477, 0.8980319499969482, 0.8976356983184814, 0.900409460067749, 0.89552241563797, 0.9025228023529053, 0.8989565372467041, 0.9056927561759949, 0.9085986018180847, 0.9030511379241943, 0.9066173434257507, 0.9101836085319519, 0.9083344340324402, 0.909259021282196, 0.9099194407463074, 0.9126931428909302, 0.9140139818191528, 0.9119006991386414, 0.9171839952468872, 0.9169198274612427, 0.9185048341751099, 0.9218068718910217, 0.9185048341751099, 0.9196935892105103], "val_loss": [2.033445358276367, 1.5042319297790527, 1.0271512269973755, 0.8147247433662415, 0.7278039455413818, 0.68117356300354, 0.6306353211402893, 0.5966841578483582, 0.5751398801803589, 0.5460951328277588, 0.5314993858337402, 0.509799063205719, 0.4957965612411499, 0.4792602062225342, 0.46671679615974426, 0.45267683267593384, 0.4441072940826416, 0.4356139600276947, 0.42943108081817627, 0.4255247414112091, 0.41811680793762207, 0.4163394272327423, 0.39929893612861633, 0.3969916105270386, 0.39089226722717285, 0.387652188539505, 0.3844633102416992, 0.3824205696582794, 0.3749690353870392, 0.3701930642127991, 0.36967378854751587, 0.36689504981040955, 0.3585263788700104, 0.3587398827075958, 0.36267170310020447, 0.3561091423034668, 0.35379692912101746, 0.3499273955821991, 0.34701839089393616, 0.3467637896537781, 0.3424672484397888, 0.33951225876808167, 0.3386255204677582, 0.34044384956359863, 0.33945050835609436, 0.33684298396110535, 0.3322163224220276, 0.33181649446487427, 0.32827115058898926, 0.3312568664550781, 0.3297465741634369, 0.3256674110889435, 0.3234780728816986, 0.32119208574295044, 0.3232716917991638, 0.3209094703197479, 0.31944912672042847, 0.3157532513141632, 0.3144265413284302, 0.31676045060157776, 0.31425556540489197, 0.3131799101829529, 0.3147056996822357, 0.3154993951320648, 0.31771615147590637, 0.31545644998550415, 0.3127000629901886, 0.31382524967193604, 0.31026333570480347, 0.3147730529308319, 0.30829918384552, 0.3107443153858185, 0.31316936016082764, 0.30297672748565674, 0.30325081944465637, 0.30436232686042786, 0.3072424829006195, 0.30681705474853516, 0.3061434030532837], "val_accuracy": [0.5526666641235352, 0.6666666865348816, 0.687333345413208, 0.7083333134651184, 0.731333315372467, 0.7446666955947876, 0.7606666684150696, 0.762666642665863, 0.7873333096504211, 0.7889999747276306, 0.7973333597183228, 0.8056666851043701, 0.8193333148956299, 0.8259999752044678, 0.8289999961853027, 0.8410000205039978, 0.8453333377838135, 0.8450000286102295, 0.8489999771118164, 0.847000002861023, 0.8516666889190674, 0.856333315372467, 0.859333336353302, 0.856333315372467, 0.8633333444595337, 0.8640000224113464, 0.8656666874885559, 0.8646666407585144, 0.8679999709129333, 0.8696666955947876, 0.8640000224113464, 0.8686666488647461, 0.8713333606719971, 0.8709999918937683, 0.8703333139419556, 0.8723333477973938, 0.871999979019165, 0.874666690826416, 0.8723333477973938, 0.8759999871253967, 0.8726666569709778, 0.875333309173584, 0.8790000081062317, 0.8756666779518127, 0.8726666569709778, 0.8769999742507935, 0.8796666860580444, 0.8796666860580444, 0.8806666731834412, 0.8793333172798157, 0.8813333511352539, 0.8840000033378601, 0.8840000033378601, 0.8843333125114441, 0.8809999823570251, 0.8856666684150696, 0.8866666555404663, 0.8833333253860474, 0.8866666555404663, 0.8843333125114441, 0.8856666684150696, 0.8880000114440918, 0.887333333492279, 0.8883333206176758, 0.8866666555404663, 0.8896666765213013, 0.8863333463668823, 0.8853333592414856, 0.890999972820282, 0.8870000243186951, 0.8883333206176758, 0.8883333206176758, 0.8916666507720947, 0.8939999938011169, 0.8896666765213013, 0.8916666507720947, 0.890999972820282, 0.8926666378974915, 0.8913333415985107]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8585714101791382, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223329782485962, 1.8621296882629395, 1.3964245319366455, 1.0850727558135986, 0.9333149790763855, 0.8258652687072754, 0.773399293422699, 0.7216672897338867, 0.6861689686775208, 0.6553357839584351, 0.6320167779922485, 0.6037876605987549, 0.5895643830299377, 0.5665274262428284, 0.5584267377853394, 0.5487375259399414, 0.5279808044433594, 0.5104970335960388, 0.4993155896663666, 0.49280378222465515, 0.4856019616127014, 0.4704585373401642, 0.4657093286514282, 0.4568420946598053, 0.4452593922615051, 0.4416305124759674, 0.43019920587539673, 0.4278373420238495, 0.4235168993473053, 0.4086954891681671, 0.4049645960330963, 0.40359631180763245, 0.3909713625907898, 0.3918858468532562, 0.3796674311161041, 0.3783673048019409, 0.3736625015735626, 0.36692023277282715, 0.3639557659626007, 0.3523319959640503, 0.35540300607681274, 0.3510574698448181, 0.34155184030532837, 0.33845287561416626, 0.3286280930042267, 0.3316032290458679, 0.3240029513835907, 0.31719347834587097, 0.3140243887901306, 0.3093651831150055, 0.3053208589553833, 0.30382290482521057, 0.2929421067237854, 0.29482799768447876, 0.2889297306537628, 0.28892841935157776, 0.2818680703639984, 0.2740425169467926, 0.2739030420780182, 0.270615816116333, 0.262053906917572, 0.2601527273654938, 0.2611885666847229, 0.24685756862163544, 0.24734751880168915, 0.2528876066207886, 0.2395770400762558, 0.2404291033744812, 0.23434728384017944, 0.2315818816423416, 0.23406551778316498, 0.22814001142978668, 0.22355888783931732, 0.22345903515815735, 0.2176346629858017, 0.21354272961616516, 0.21203164756298065, 0.20845046639442444], "accuracy": [0.27024170756340027, 0.5005943775177002, 0.5675604343414307, 0.6254127621650696, 0.6723021864891052, 0.7045304179191589, 0.7253995537757874, 0.7388719916343689, 0.750759482383728, 0.7646281719207764, 0.7692511081695557, 0.7784969210624695, 0.7839123010635376, 0.7948752045631409, 0.7989697456359863, 0.8049134612083435, 0.8105930685997009, 0.8162726163864136, 0.8236692547798157, 0.8222163319587708, 0.8244617581367493, 0.833179235458374, 0.8360850811004639, 0.837141752243042, 0.8405758738517761, 0.8451988101005554, 0.845859169960022, 0.8495575189590454, 0.8518029451370239, 0.8543124794960022, 0.8518029451370239, 0.8577466607093811, 0.8621054291725159, 0.8589354157447815, 0.8692378997802734, 0.8628978729248047, 0.8648791313171387, 0.8681812286376953, 0.868049144744873, 0.8742570281028748, 0.8708229064941406, 0.873860776424408, 0.8800686597824097, 0.8780874609947205, 0.8804649114608765, 0.8784837126731873, 0.8821820020675659, 0.8842953443527222, 0.8886540532112122, 0.889578640460968, 0.8916919827461243, 0.8885219693183899, 0.893541157245636, 0.8936732411384583, 0.896446943283081, 0.8944657444953918, 0.9009377956390381, 0.8994848728179932, 0.90423983335495, 0.9008057117462158, 0.9006736278533936, 0.9050323367118835, 0.9019944667816162, 0.9109761118888855, 0.9052965044975281, 0.9076740145683289, 0.9128252267837524, 0.9132214784622192, 0.9145423173904419, 0.9117686152458191, 0.913089394569397, 0.9153348207473755, 0.9166556596755981, 0.9163914918899536, 0.9225993752479553, 0.9227314591407776, 0.9253731369972229, 0.9248448014259338], "val_loss": [2.042820930480957, 1.5242301225662231, 1.0550854206085205, 0.847624659538269, 0.7579390406608582, 0.7025001049041748, 0.6555863618850708, 0.6237629652023315, 0.5969058275222778, 0.5760809183120728, 0.5549935698509216, 0.5462217330932617, 0.5234379172325134, 0.5182119011878967, 0.5012137293815613, 0.4889128506183624, 0.47991663217544556, 0.47139430046081543, 0.46050649881362915, 0.45606735348701477, 0.45023804903030396, 0.44109806418418884, 0.43669819831848145, 0.4301949143409729, 0.4253253936767578, 0.42266154289245605, 0.41870686411857605, 0.411995530128479, 0.4036816358566284, 0.40487781167030334, 0.40474438667297363, 0.3974986970424652, 0.39302605390548706, 0.3875412940979004, 0.3844943046569824, 0.37971633672714233, 0.3789621591567993, 0.380778968334198, 0.37917712330818176, 0.37640729546546936, 0.37127989530563354, 0.3678308129310608, 0.36758843064308167, 0.3648565709590912, 0.3668234050273895, 0.36168166995048523, 0.3605365455150604, 0.36764103174209595, 0.35534074902534485, 0.35856103897094727, 0.3527233898639679, 0.3534252643585205, 0.35723811388015747, 0.35827693343162537, 0.3512818217277527, 0.352100670337677, 0.34829771518707275, 0.3519545793533325, 0.35003504157066345, 0.34578201174736023, 0.3457561731338501, 0.34869998693466187, 0.34243184328079224, 0.3473832905292511, 0.3477700650691986, 0.34339088201522827, 0.34340664744377136, 0.35059571266174316, 0.34273746609687805, 0.3456990420818329, 0.3443322479724884, 0.3439912497997284, 0.34299010038375854, 0.3457457423210144, 0.34567204117774963, 0.3388153612613678, 0.3442252576351166, 0.34419775009155273], "val_accuracy": [0.5526666641235352, 0.6586666703224182, 0.6773333549499512, 0.6990000009536743, 0.7269999980926514, 0.7423333525657654, 0.7566666603088379, 0.7703333497047424, 0.7793333530426025, 0.7879999876022339, 0.7923333048820496, 0.8016666769981384, 0.8056666851043701, 0.8119999766349792, 0.8166666626930237, 0.8216666579246521, 0.8303333520889282, 0.8266666531562805, 0.8309999704360962, 0.8360000252723694, 0.8370000123977661, 0.8399999737739563, 0.843999981880188, 0.843999981880188, 0.8420000076293945, 0.8456666469573975, 0.847000002861023, 0.8550000190734863, 0.8543333411216736, 0.8486666679382324, 0.8500000238418579, 0.8556666374206543, 0.8573333621025085, 0.8619999885559082, 0.8606666922569275, 0.8650000095367432, 0.8656666874885559, 0.862666666507721, 0.862666666507721, 0.8683333396911621, 0.8663333058357239, 0.8636666536331177, 0.8693333268165588, 0.8693333268165588, 0.8700000047683716, 0.8683333396911621, 0.8693333268165588, 0.8683333396911621, 0.8740000128746033, 0.875333309173584, 0.8726666569709778, 0.8786666393280029, 0.8690000176429749, 0.8796666860580444, 0.875333309173584, 0.8790000081062317, 0.8803333044052124, 0.8730000257492065, 0.8786666393280029, 0.8790000081062317, 0.8803333044052124, 0.8823333382606506, 0.8790000081062317, 0.8826666474342346, 0.8806666731834412, 0.8830000162124634, 0.8830000162124634, 0.8786666393280029, 0.8820000290870667, 0.8809999823570251, 0.8833333253860474, 0.8826666474342346, 0.8866666555404663, 0.8820000290870667, 0.8836666941642761, 0.8843333125114441, 0.8820000290870667, 0.8856666684150696]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 0], [39, 39, 90], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1, 1], [6], [0, 4], [99], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 1, 3, 6, 8, 1, 4, 1, 4, 9, 8], [0, 0, 0, 3, 4, 0, 3, 1, 2, 0], [16, 99, 43, 99, 61, 1]], "fitness": -0.10171428322792053, "mapping_values": [1, 9, 5, 4, 3, 2, 1, 1, 1, 3, 1, 2, 1, 10, 5, 5, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), sigma)), grad)", "other_info": {"loss": [6248031846400.0, 6970552614912.0, 6944472956928.0, 7131532099584.0, 7124146978816.0, 7227689140224.0], "accuracy": [0.08651433140039444, 0.08585391938686371, 0.08017434924840927, 0.08387266844511032, 0.08466517180204391, 0.08175934851169586], "val_loss": [5317789220864.0, 5317606768640.0, 5317501911040.0, 5317478318080.0, 5317426413568.0, 5317192581120.0], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 0, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 2], [16, 16], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 2, 3, 6, 8, 1, 4, 3, 6, 2, 8], [0, 0, 0, 3, 0, 0, 1, 1, 1, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 7, 4, 3, 2, 2, 1, 1, 1, 7, 3, 4, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.3035013675689697, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1], [9, 2, 3, 0, 3], [0, 2, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 1, 3, 0, 3, 5], [0, 2, 3, 0], [16, 16], [0, 1], [0], [0], [86], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 1, 1, 4, 1, 4, 2, 8], [0, 4, 0, 3, 0, 4, 3, 1, 2, 0], [9, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 10, 6, 4, 2, 2, 1, 1, 1, 17, 8, 9, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(grad, tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))), tf.math.pow(grad, tf.math.subtract(sigma, alpha))), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [8, 2, 3, 2, 3, 5, 4, 4, 3, 4, 9, 6, 6, 1], [0, 2, 3, 3, 1, 2, 4, 1, 5, 0, 2], [16, 16, 96], [0, 1], [0], [0], [11], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [8, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [3, 0, 0, 4, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 25, 14, 11, 3, 2, 1, 1, 1, 11, 6, 5, 3], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta)), tf.math.pow(grad, tf.math.pow(tf.math.multiply(grad, tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha)), tf.math.divide_no_nan(beta, grad)))), alpha), tf.math.divide_no_nan(tf.math.subtract(grad, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(tf.math.multiply(sigma, tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.subtract(grad, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876]}}]