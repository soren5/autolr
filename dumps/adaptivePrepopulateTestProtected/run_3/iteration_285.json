[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8808571696281433, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223215103149414, 1.8640538454055786, 1.390925645828247, 1.0857504606246948, 0.9175904989242554, 0.8278062343597412, 0.75929194688797, 0.7150763869285583, 0.6742342710494995, 0.6527069211006165, 0.6226239800453186, 0.6030511260032654, 0.5812473893165588, 0.5698184370994568, 0.5517233610153198, 0.5318202376365662, 0.5262278914451599, 0.5063096284866333, 0.4941454231739044, 0.4912639260292053, 0.47673994302749634, 0.46776485443115234, 0.45580968260765076, 0.45419755578041077, 0.4471202790737152, 0.4368197023868561, 0.4238806366920471, 0.41453513503074646, 0.41017231345176697, 0.4062040150165558, 0.40386685729026794, 0.3953916132450104, 0.39355871081352234, 0.3836102783679962, 0.37635838985443115, 0.3735085725784302, 0.363672137260437, 0.35395750403404236, 0.35972025990486145, 0.34721699357032776, 0.3442964553833008, 0.335767537355423, 0.3300938904285431, 0.32407090067863464, 0.32112976908683777, 0.3181473910808563, 0.31370431184768677, 0.3087446987628937, 0.3084625005722046, 0.30203962326049805, 0.293395072221756, 0.2889169156551361, 0.2914500832557678, 0.28307828307151794, 0.28207361698150635, 0.2786792516708374, 0.27818819880485535, 0.26387521624565125], "accuracy": [0.27222296595573425, 0.5027077198028564, 0.5674283504486084, 0.6277902722358704, 0.6709813475608826, 0.7058512568473816, 0.7269845604896545, 0.7415136694908142, 0.7586844563484192, 0.7617223858833313, 0.783119797706604, 0.7832518815994263, 0.7926297783851624, 0.8001585006713867, 0.807158887386322, 0.8103289008140564, 0.8133667707443237, 0.8190463781356812, 0.8247259259223938, 0.8271034359931946, 0.8298771381378174, 0.8341038227081299, 0.8366134166717529, 0.839519202709198, 0.8404437899589539, 0.848368763923645, 0.8515387773513794, 0.8564258217811584, 0.8529917001724243, 0.8585391640663147, 0.8515387773513794, 0.863558292388916, 0.8615770936012268, 0.8640866279602051, 0.8652753829956055, 0.8671245574951172, 0.8720116019248962, 0.8771628737449646, 0.8705587387084961, 0.876370370388031, 0.8787478804588318, 0.8784837126731873, 0.8828424215316772, 0.8842953443527222, 0.884691596031189, 0.8840311765670776, 0.8891823887825012, 0.8894465565681458, 0.8899748921394348, 0.8932769894599915, 0.8945978283882141, 0.8980319499969482, 0.896446943283081, 0.8988244533538818, 0.9019944667816162, 0.901862382888794, 0.8985602855682373, 0.904768168926239], "val_loss": [2.039530038833618, 1.5154659748077393, 1.039007544517517, 0.8366694450378418, 0.7400773167610168, 0.6859951019287109, 0.6454513669013977, 0.6114123463630676, 0.5899704694747925, 0.5724708437919617, 0.5533395409584045, 0.5345184803009033, 0.5225448608398438, 0.5092709064483643, 0.500229001045227, 0.49316829442977905, 0.480929970741272, 0.4729439616203308, 0.4688349962234497, 0.4563703238964081, 0.45455607771873474, 0.44636544585227966, 0.44144734740257263, 0.4332112669944763, 0.42851945757865906, 0.4277913272380829, 0.4196922183036804, 0.41600528359413147, 0.4114539325237274, 0.4113328456878662, 0.4059373438358307, 0.4033544063568115, 0.40210506319999695, 0.3963744640350342, 0.39264819025993347, 0.39112263917922974, 0.384288489818573, 0.383841872215271, 0.3804401755332947, 0.3786342442035675, 0.3777892291545868, 0.37486007809638977, 0.37355443835258484, 0.37450093030929565, 0.36811116337776184, 0.3697490096092224, 0.3684578537940979, 0.370509535074234, 0.36476588249206543, 0.36312252283096313, 0.361527681350708, 0.36036449670791626, 0.3581533133983612, 0.3633516728878021, 0.35499346256256104, 0.3547135293483734, 0.35882508754730225, 0.35363712906837463], "val_accuracy": [0.5473333597183228, 0.6496666669845581, 0.6846666932106018, 0.6959999799728394, 0.7279999852180481, 0.7450000047683716, 0.7580000162124634, 0.7713333368301392, 0.7763333320617676, 0.7816666960716248, 0.7963333129882812, 0.8109999895095825, 0.8116666674613953, 0.8113333582878113, 0.8116666674613953, 0.8186666369438171, 0.8259999752044678, 0.8236666917800903, 0.828000009059906, 0.8360000252723694, 0.8323333263397217, 0.8373333215713501, 0.8373333215713501, 0.8366666436195374, 0.843666672706604, 0.843999981880188, 0.846666693687439, 0.8483333587646484, 0.8493333458900452, 0.847000002861023, 0.8476666808128357, 0.8496666550636292, 0.8510000109672546, 0.8519999980926514, 0.8553333282470703, 0.8556666374206543, 0.8583333492279053, 0.859333336353302, 0.8560000061988831, 0.862333357334137, 0.8636666536331177, 0.859666645526886, 0.8636666536331177, 0.8643333315849304, 0.8653333187103271, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.8709999918937683, 0.8690000176429749, 0.8686666488647461, 0.8653333187103271, 0.8733333349227905, 0.8679999709129333, 0.8709999918937683, 0.8706666827201843, 0.8703333139419556, 0.8693333268165588]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8634285926818848, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.220597982406616, 1.8539988994598389, 1.3898210525512695, 1.09829843044281, 0.9415228962898254, 0.8361148834228516, 0.7763100862503052, 0.7263039946556091, 0.6950599551200867, 0.6622398495674133, 0.6436843276023865, 0.6129800081253052, 0.590213418006897, 0.5671328902244568, 0.5572395920753479, 0.5399199724197388, 0.5187330842018127, 0.5099057555198669, 0.5057297945022583, 0.49262458086013794, 0.4867860674858093, 0.4771696627140045, 0.4732741117477417, 0.45761343836784363, 0.44964537024497986, 0.44283056259155273, 0.43065401911735535, 0.4223809540271759, 0.4120214879512787, 0.4117750823497772, 0.4033852219581604, 0.38975369930267334, 0.3976028561592102, 0.3795835077762604, 0.3823046386241913, 0.3731161952018738, 0.3678838014602661, 0.36494317650794983, 0.3564641773700714, 0.35106778144836426, 0.34568455815315247, 0.342911958694458, 0.33506354689598083, 0.32915735244750977, 0.32271623611450195, 0.31876417994499207, 0.3161448836326599, 0.31603145599365234, 0.3069053292274475, 0.3039534389972687, 0.3004879653453827, 0.3007239103317261, 0.2878361642360687, 0.28680968284606934, 0.2800371050834656, 0.2848304212093353, 0.27309438586235046, 0.26881328225135803, 0.26679590344429016, 0.2622234523296356, 0.2594018578529358, 0.2550387680530548, 0.2560351490974426, 0.253360778093338, 0.2460719347000122, 0.24465367197990417], "accuracy": [0.278959184885025, 0.48712190985679626, 0.5712587237358093, 0.6196011304855347, 0.6674151420593262, 0.7046625018119812, 0.7199841737747192, 0.7416457533836365, 0.7483819723129272, 0.7532690763473511, 0.7625148296356201, 0.7758552432060242, 0.7862898111343384, 0.7932901978492737, 0.7998943328857422, 0.8018755912780762, 0.8087438941001892, 0.8204993009567261, 0.8158763647079468, 0.8185180425643921, 0.8251221776008606, 0.8277638554573059, 0.8310658931732178, 0.8338396549224854, 0.8360850811004639, 0.8404437899589539, 0.8430854678153992, 0.8488970994949341, 0.852331280708313, 0.8529917001724243, 0.8569541573524475, 0.8618412613868713, 0.8565579056739807, 0.8651432991027832, 0.8609166741371155, 0.8659358024597168, 0.8698983192443848, 0.8691058158874512, 0.8721436858177185, 0.8728041052818298, 0.8728041052818298, 0.8795403242111206, 0.8778232932090759, 0.8803328275680542, 0.8820499181747437, 0.8848236799240112, 0.8878615498542786, 0.8899748921394348, 0.8850878477096558, 0.8887861371040344, 0.8886540532112122, 0.8907673954963684, 0.8956544995307922, 0.8926165699958801, 0.8981640338897705, 0.8963148593902588, 0.9031832218170166, 0.9006736278533936, 0.8992207050323486, 0.9012019634246826, 0.9049002528190613, 0.9076740145683289, 0.9066173434257507, 0.9085986018180847, 0.9115044474601746, 0.9085986018180847], "val_loss": [2.030456304550171, 1.5023597478866577, 1.0451054573059082, 0.8457789421081543, 0.7629033327102661, 0.7053030729293823, 0.6646783947944641, 0.6272802948951721, 0.607738196849823, 0.5903768539428711, 0.5606245398521423, 0.5462120771408081, 0.5283071994781494, 0.5220481753349304, 0.502357006072998, 0.49252307415008545, 0.48187270760536194, 0.47311627864837646, 0.4619837999343872, 0.4606071710586548, 0.4547097086906433, 0.4433634877204895, 0.4426345229148865, 0.4312081038951874, 0.424378365278244, 0.4235629141330719, 0.4188586473464966, 0.41230806708335876, 0.4058263897895813, 0.41197308897972107, 0.3980071246623993, 0.401082843542099, 0.3922072649002075, 0.3966239392757416, 0.38949185609817505, 0.38847020268440247, 0.3840070068836212, 0.37617290019989014, 0.38332316279411316, 0.3749675750732422, 0.369724839925766, 0.3714863955974579, 0.36950719356536865, 0.3717494606971741, 0.36577802896499634, 0.3665967881679535, 0.3591809868812561, 0.36394184827804565, 0.35659652948379517, 0.35946956276893616, 0.3558701276779175, 0.3596813976764679, 0.34842485189437866, 0.35176217555999756, 0.350806325674057, 0.3485601842403412, 0.3499487042427063, 0.34761133790016174, 0.34747934341430664, 0.34753915667533875, 0.34275317192077637, 0.34324902296066284, 0.34390637278556824, 0.33673232793807983, 0.34851986169815063, 0.3371434211730957], "val_accuracy": [0.5183333158493042, 0.6589999794960022, 0.6790000200271606, 0.706333339214325, 0.7303333282470703, 0.7476666569709778, 0.7523333430290222, 0.7680000066757202, 0.7820000052452087, 0.7733333110809326, 0.793666660785675, 0.8050000071525574, 0.8149999976158142, 0.815666675567627, 0.824999988079071, 0.8256666660308838, 0.8349999785423279, 0.8333333134651184, 0.8426666855812073, 0.8393333554267883, 0.8426666855812073, 0.8496666550636292, 0.8443333506584167, 0.8500000238418579, 0.8529999852180481, 0.8526666760444641, 0.8573333621025085, 0.856333315372467, 0.8606666922569275, 0.856333315372467, 0.8613333106040955, 0.8629999756813049, 0.8669999837875366, 0.8663333058357239, 0.8659999966621399, 0.8669999837875366, 0.8669999837875366, 0.8679999709129333, 0.8633333444595337, 0.8709999918937683, 0.8696666955947876, 0.871666669845581, 0.8709999918937683, 0.8666666746139526, 0.8743333220481873, 0.8740000128746033, 0.8763333559036255, 0.8713333606719971, 0.8786666393280029, 0.8759999871253967, 0.8773333430290222, 0.874666690826416, 0.8826666474342346, 0.8796666860580444, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8830000162124634, 0.8846666812896729, 0.8823333382606506, 0.8889999985694885, 0.8790000081062317, 0.8840000033378601, 0.8846666812896729, 0.8806666731834412, 0.887666642665863]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 0, 0, 2], [39, 39, 58], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 3, 1, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [5, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 3], [0, 0, 0, 3, 0, 4, 2, 1, 2, 0], [16, 99, 96, 78, 61, 91]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 3, 10, 6, 4, 1, 2, 1, 1, 1, 22, 12, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(alpha, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.math.pow(tf.math.add(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), grad), beta), tf.math.sqrt(tf.math.multiply(alpha, beta))))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 3, 8, 1, 4, 1, 4, 2, 8, 8, 3, 7], [0, 0, 0, 3, 4, 0, 3, 1, 2, 0, 2, 1], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(grad, tf.math.pow(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.sqrt(tf.math.multiply(sigma, alpha)))), beta)))), tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), beta)), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 26, 14, 12, 5], "tree_depth": 23}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 34], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 4, 3, 0, 3, 1, 8], [0, 2, 1, 3, 4], [16, 87], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 4, 1, 4, 1, 4, 2, 8, 6, 1], [0, 0, 0, 3, 0, 3, 3, 0, 2, 0, 0, 0, 4], [16, 99, 96, 99, 61, 1, 5, 14]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 12, 7, 5, 1, 2, 1, 1, 0, 26, 13, 13, 8], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(alpha, tf.math.subtract(grad, tf.math.sqrt(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(sigma, sigma))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.subtract(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [3, 2, 0, 3], [16, 16], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1], [6, 3, 1, 6, 8, 1, 4, 1, 4, 2, 8], [0, 4, 0, 3, 0, 0, 3, 1, 2, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 0, 2, 1, 1, 0, 1, 0, 1, 1, 10, 5, 5, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)))), sigma), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [25301.78125, 2.4398491382598877, 2.334550380706787, 2.602179765701294, 3.8875036239624023, 5.4547271728515625, 9.10452651977539, 14.508001327514648, 19.66922950744629, 24.308767318725586, 32.125614166259766], "accuracy": [0.11979923397302628, 0.09826971590518951, 0.10328886657953262, 0.10342095047235489, 0.09668471664190292, 0.09509972482919693, 0.09272222965955734, 0.10355303436517715, 0.1006472036242485, 0.09694888442754745, 0.09866596013307571], "val_loss": [2.8906028270721436, 2.3345227241516113, 2.3932552337646484, 3.2068350315093994, 4.332774639129639, 7.358509063720703, 11.980010032653809, 16.934938430786133, 23.897396087646484, 26.835865020751953, 39.643089294433594], "val_accuracy": [0.0989999994635582, 0.10133333504199982, 0.09833333641290665, 0.09933333098888397, 0.10133333504199982, 0.10233332961797714, 0.09833333641290665, 0.10133333504199982, 0.10100000351667404, 0.10133333504199982, 0.09933333098888397]}}]