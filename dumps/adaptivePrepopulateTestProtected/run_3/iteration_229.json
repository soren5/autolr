[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8808571696281433, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223215103149414, 1.8640538454055786, 1.390925645828247, 1.0857504606246948, 0.9175904989242554, 0.8278062343597412, 0.75929194688797, 0.7150763869285583, 0.6742342710494995, 0.6527069211006165, 0.6226239800453186, 0.6030511260032654, 0.5812473893165588, 0.5698184370994568, 0.5517233610153198, 0.5318202376365662, 0.5262278914451599, 0.5063096284866333, 0.4941454231739044, 0.4912639260292053, 0.47673994302749634, 0.46776485443115234, 0.45580968260765076, 0.45419755578041077, 0.4471202790737152, 0.4368197023868561, 0.4238806366920471, 0.41453513503074646, 0.41017231345176697, 0.4062040150165558, 0.40386685729026794, 0.3953916132450104, 0.39355871081352234, 0.3836102783679962, 0.37635838985443115, 0.3735085725784302, 0.363672137260437, 0.35395750403404236, 0.35972025990486145, 0.34721699357032776, 0.3442964553833008, 0.335767537355423, 0.3300938904285431, 0.32407090067863464, 0.32112976908683777, 0.3181473910808563, 0.31370431184768677, 0.3087446987628937, 0.3084625005722046, 0.30203962326049805, 0.293395072221756, 0.2889169156551361, 0.2914500832557678, 0.28307828307151794, 0.28207361698150635, 0.2786792516708374, 0.27818819880485535, 0.26387521624565125], "accuracy": [0.27222296595573425, 0.5027077198028564, 0.5674283504486084, 0.6277902722358704, 0.6709813475608826, 0.7058512568473816, 0.7269845604896545, 0.7415136694908142, 0.7586844563484192, 0.7617223858833313, 0.783119797706604, 0.7832518815994263, 0.7926297783851624, 0.8001585006713867, 0.807158887386322, 0.8103289008140564, 0.8133667707443237, 0.8190463781356812, 0.8247259259223938, 0.8271034359931946, 0.8298771381378174, 0.8341038227081299, 0.8366134166717529, 0.839519202709198, 0.8404437899589539, 0.848368763923645, 0.8515387773513794, 0.8564258217811584, 0.8529917001724243, 0.8585391640663147, 0.8515387773513794, 0.863558292388916, 0.8615770936012268, 0.8640866279602051, 0.8652753829956055, 0.8671245574951172, 0.8720116019248962, 0.8771628737449646, 0.8705587387084961, 0.876370370388031, 0.8787478804588318, 0.8784837126731873, 0.8828424215316772, 0.8842953443527222, 0.884691596031189, 0.8840311765670776, 0.8891823887825012, 0.8894465565681458, 0.8899748921394348, 0.8932769894599915, 0.8945978283882141, 0.8980319499969482, 0.896446943283081, 0.8988244533538818, 0.9019944667816162, 0.901862382888794, 0.8985602855682373, 0.904768168926239], "val_loss": [2.039530038833618, 1.5154659748077393, 1.039007544517517, 0.8366694450378418, 0.7400773167610168, 0.6859951019287109, 0.6454513669013977, 0.6114123463630676, 0.5899704694747925, 0.5724708437919617, 0.5533395409584045, 0.5345184803009033, 0.5225448608398438, 0.5092709064483643, 0.500229001045227, 0.49316829442977905, 0.480929970741272, 0.4729439616203308, 0.4688349962234497, 0.4563703238964081, 0.45455607771873474, 0.44636544585227966, 0.44144734740257263, 0.4332112669944763, 0.42851945757865906, 0.4277913272380829, 0.4196922183036804, 0.41600528359413147, 0.4114539325237274, 0.4113328456878662, 0.4059373438358307, 0.4033544063568115, 0.40210506319999695, 0.3963744640350342, 0.39264819025993347, 0.39112263917922974, 0.384288489818573, 0.383841872215271, 0.3804401755332947, 0.3786342442035675, 0.3777892291545868, 0.37486007809638977, 0.37355443835258484, 0.37450093030929565, 0.36811116337776184, 0.3697490096092224, 0.3684578537940979, 0.370509535074234, 0.36476588249206543, 0.36312252283096313, 0.361527681350708, 0.36036449670791626, 0.3581533133983612, 0.3633516728878021, 0.35499346256256104, 0.3547135293483734, 0.35882508754730225, 0.35363712906837463], "val_accuracy": [0.5473333597183228, 0.6496666669845581, 0.6846666932106018, 0.6959999799728394, 0.7279999852180481, 0.7450000047683716, 0.7580000162124634, 0.7713333368301392, 0.7763333320617676, 0.7816666960716248, 0.7963333129882812, 0.8109999895095825, 0.8116666674613953, 0.8113333582878113, 0.8116666674613953, 0.8186666369438171, 0.8259999752044678, 0.8236666917800903, 0.828000009059906, 0.8360000252723694, 0.8323333263397217, 0.8373333215713501, 0.8373333215713501, 0.8366666436195374, 0.843666672706604, 0.843999981880188, 0.846666693687439, 0.8483333587646484, 0.8493333458900452, 0.847000002861023, 0.8476666808128357, 0.8496666550636292, 0.8510000109672546, 0.8519999980926514, 0.8553333282470703, 0.8556666374206543, 0.8583333492279053, 0.859333336353302, 0.8560000061988831, 0.862333357334137, 0.8636666536331177, 0.859666645526886, 0.8636666536331177, 0.8643333315849304, 0.8653333187103271, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.8709999918937683, 0.8690000176429749, 0.8686666488647461, 0.8653333187103271, 0.8733333349227905, 0.8679999709129333, 0.8709999918937683, 0.8706666827201843, 0.8703333139419556, 0.8693333268165588]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8679999709129333, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.226179838180542, 1.8746591806411743, 1.4004971981048584, 1.0973151922225952, 0.9407451748847961, 0.8373094201087952, 0.7746038436889648, 0.7331445217132568, 0.6789391040802002, 0.6599248647689819, 0.6352469325065613, 0.6175355315208435, 0.5943566560745239, 0.576005220413208, 0.5628617405891418, 0.5409412980079651, 0.528913140296936, 0.5175355076789856, 0.5096675753593445, 0.49493077397346497, 0.48984983563423157, 0.46855393052101135, 0.4648991823196411, 0.46075132489204407, 0.4533178508281708, 0.4403211176395416, 0.4338931739330292, 0.4232058525085449, 0.4217449128627777, 0.4177072048187256, 0.40569543838500977, 0.4007258415222168, 0.398359090089798, 0.3863050937652588, 0.38382208347320557, 0.38376855850219727, 0.37764665484428406, 0.3743691146373749, 0.36223897337913513, 0.35468176007270813, 0.3606000542640686, 0.3561001420021057, 0.3411177396774292, 0.3451898396015167, 0.34344568848609924, 0.3334699273109436, 0.32333388924598694, 0.32145145535469055, 0.32293570041656494, 0.32564255595207214, 0.3126237690448761, 0.3088274896144867, 0.3029521107673645, 0.3035569489002228, 0.3016914129257202, 0.29300370812416077, 0.2934202253818512, 0.2851805090904236, 0.2767871916294098, 0.2716316282749176, 0.2726326882839203, 0.2657713294029236, 0.25991350412368774, 0.26344025135040283, 0.2621440887451172, 0.2590847313404083, 0.24910907447338104, 0.2505438029766083, 0.23990565538406372, 0.24032872915267944, 0.23318544030189514, 0.23223073780536652, 0.22380758821964264, 0.22299598157405853], "accuracy": [0.2665433883666992, 0.4802536070346832, 0.5565975308418274, 0.6230352520942688, 0.6619997620582581, 0.6956809163093567, 0.7211728692054749, 0.7322678565979004, 0.752740740776062, 0.7520803213119507, 0.7712323069572449, 0.7724210619926453, 0.7837802171707153, 0.7891955971717834, 0.7956677079200745, 0.804649293422699, 0.8084797263145447, 0.813498854637146, 0.8113855719566345, 0.819970965385437, 0.8234050869941711, 0.8271034359931946, 0.8301413059234619, 0.8356888294219971, 0.8358209133148193, 0.8428213000297546, 0.8486329317092896, 0.8467837572097778, 0.8506141901016235, 0.8535200357437134, 0.8577466607093811, 0.8564258217811584, 0.8551049828529358, 0.8613129258155823, 0.863558292388916, 0.8603883385658264, 0.8615770936012268, 0.8634262084960938, 0.8712190985679626, 0.8685774803161621, 0.8689737319946289, 0.8713511824607849, 0.8761062026023865, 0.8755778670310974, 0.8761062026023865, 0.8774270415306091, 0.8860124349594116, 0.8816536664962769, 0.8835028409957886, 0.878351628780365, 0.8845595121383667, 0.887597382068634, 0.8910315632820129, 0.887597382068634, 0.8943336606025696, 0.8927486538887024, 0.8943336606025696, 0.8971073627471924, 0.9015982151031494, 0.9043719172477722, 0.9000132083892822, 0.8988244533538818, 0.9064852595329285, 0.9071456789970398, 0.9037115573883057, 0.9059569239616394, 0.9093911051750183, 0.9082023501396179, 0.9141460657119751, 0.9121648669242859, 0.9167877435684204, 0.9174481630325317, 0.9225993752479553, 0.9189010858535767], "val_loss": [2.0398881435394287, 1.5138126611709595, 1.0378459692001343, 0.8300778269767761, 0.7493851184844971, 0.6921364665031433, 0.6477438807487488, 0.619536280632019, 0.5897513628005981, 0.5672164559364319, 0.5489116311073303, 0.5346054434776306, 0.5258468985557556, 0.5116392970085144, 0.5000758171081543, 0.4829384386539459, 0.4773830473423004, 0.46924784779548645, 0.4731607735157013, 0.46221089363098145, 0.4517914652824402, 0.44997256994247437, 0.44083958864212036, 0.4319278299808502, 0.42763346433639526, 0.4234142601490021, 0.4149401783943176, 0.416207492351532, 0.4063744843006134, 0.40662240982055664, 0.4045405983924866, 0.4048021137714386, 0.3949662744998932, 0.39698565006256104, 0.392162024974823, 0.3904639184474945, 0.39006999135017395, 0.3864964544773102, 0.38500308990478516, 0.383723646402359, 0.3806995153427124, 0.3773671090602875, 0.374991774559021, 0.3764267563819885, 0.37239500880241394, 0.3737674951553345, 0.37114161252975464, 0.3649885952472687, 0.3727817237377167, 0.3642188310623169, 0.362916499376297, 0.35946813225746155, 0.3593691289424896, 0.363497793674469, 0.35592135787010193, 0.3551245927810669, 0.35700008273124695, 0.3547724485397339, 0.3537245988845825, 0.35970720648765564, 0.36040031909942627, 0.3486019968986511, 0.3493461012840271, 0.3497151732444763, 0.34900715947151184, 0.34910792112350464, 0.3439900577068329, 0.3467468321323395, 0.3455524444580078, 0.3450187146663666, 0.3449077010154724, 0.3456861972808838, 0.3500528037548065, 0.3472716510295868], "val_accuracy": [0.5479999780654907, 0.6586666703224182, 0.6836666464805603, 0.7046666741371155, 0.7286666631698608, 0.7429999709129333, 0.7536666393280029, 0.7639999985694885, 0.778333306312561, 0.7873333096504211, 0.7956666946411133, 0.7976666688919067, 0.8043333292007446, 0.8103333115577698, 0.8146666884422302, 0.8176666498184204, 0.8216666579246521, 0.8293333053588867, 0.8193333148956299, 0.8293333053588867, 0.8343333601951599, 0.8309999704360962, 0.8363333344459534, 0.8410000205039978, 0.8416666388511658, 0.8420000076293945, 0.8473333120346069, 0.8489999771118164, 0.8510000109672546, 0.8546666502952576, 0.8506666421890259, 0.8516666889190674, 0.859000027179718, 0.8586666584014893, 0.859000027179718, 0.8606666922569275, 0.859000027179718, 0.8616666793823242, 0.8603333234786987, 0.8616666793823242, 0.862333357334137, 0.8633333444595337, 0.8619999885559082, 0.8673333525657654, 0.8690000176429749, 0.8656666874885559, 0.8690000176429749, 0.871666669845581, 0.8693333268165588, 0.8703333139419556, 0.874666690826416, 0.8763333559036255, 0.875333309173584, 0.8769999742507935, 0.875333309173584, 0.8776666522026062, 0.8703333139419556, 0.874666690826416, 0.8736666440963745, 0.878333330154419, 0.8759999871253967, 0.8766666650772095, 0.8759999871253967, 0.8776666522026062, 0.8796666860580444, 0.8790000081062317, 0.8796666860580444, 0.8799999952316284, 0.8823333382606506, 0.8803333044052124, 0.8816666603088379, 0.8820000290870667, 0.8776666522026062, 0.8803333044052124]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [1, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 4, 0, 2, 1, 0, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 10, 6, 4, 1, 2, 1, 1, 1, 20, 10, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(alpha), tf.math.multiply(tf.math.square(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), grad))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), beta))), tf.math.pow(alpha, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1], [0, 2, 3, 0, 3, 8, 5, 6, 5, 7, 1, 1, 1, 4, 5, 2, 8, 9, 2, 4, 1, 7, 6, 6, 2, 4, 9], [0, 2, 0, 3, 4, 0, 0, 1, 0, 5, 4, 5, 1, 5, 0, 2, 5], [16, 16, 74, 51, 77, 35, 82, 25], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 2, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 40, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 44, 27, 17, 8, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.math.sqrt(tf.math.square(tf.math.divide_no_nan(tf.math.square(tf.math.add(tf.math.subtract(tf.math.subtract(tf.math.subtract(tf.math.pow(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.sqrt(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, grad))), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.subtract(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))), grad)), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(grad, grad), tf.math.pow(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), grad)), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), beta))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), sigma)), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [2.303839683532715, 2.302584648132324, 2.302584171295166, 2.3025808334350586, 2.302578926086426, 2.302536725997925, 2.302499771118164, 2.302424907684326, 2.3024635314941406, 2.335916042327881], "accuracy": [0.10170386731624603, 0.10698718577623367, 0.10566636174917221, 0.10130762308835983, 0.10394927859306335, 0.09998679161071777, 0.10434553027153015, 0.10434553027153015, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025851249694824, 2.3025851249694824, 2.3025853633880615, 2.302582263946533, 2.3025624752044678, 2.302574396133423, 2.3025693893432617, 2.3046181201934814, 2.7198779582977295], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.0989999994635582, 0.09666666388511658, 0.10100000351667404, 0.10100000351667404, 0.09966666996479034, 0.10066666454076767, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], [0, 2, 3, 3, 3, 3, 3, 6, 5, 7, 0, 6, 6, 4, 7], [0, 1, 2, 2, 0, 2, 2, 0, 0, 1, 3, 0, 0], [39, 39, 5, 3, 11, 6], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 8, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 3, 6, 3, 1, 4, 1, 4, 2, 8], [1, 2, 0, 3, 0, 0, 3, 1, 1, 0], [16, 94, 96, 99, 70, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 28, 15, 13, 6, 1, 0, 1, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(grad, grad)), tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.pow(grad, grad), tf.math.add(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), alpha)), grad)), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 5, 1], [0, 1, 0, 0], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [3], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], [6, 3, 6, 6, 8, 1, 4, 1, 4, 2, 8, 2], [0, 0, 0, 3, 0, 0, 3, 1, 1, 0, 7], [16, 99, 96, 99, 61, 1]], "fitness": -0.08914285898208618, "mapping_values": [1, 7, 4, 3, 2, 10, 6, 4, 2, 2, 1, 1, 0, 23, 12, 11, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(alpha), tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad)))", "other_info": {"loss": [2.3100454807281494, 2.3103809356689453, 2.3090779781341553, 2.309838056564331, 2.3102643489837646, 2.309133291244507], "accuracy": [0.09417514503002167, 0.08994849026203156, 0.09298639744520187, 0.09602430462837219, 0.09206181764602661, 0.09642054885625839], "val_loss": [2.308712959289551, 2.308712959289551, 2.308712959289551, 2.308712959289551, 2.308712959289551, 2.308712959289551], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}}]