[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8862857222557068, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222418785095215, 1.8632627725601196, 1.3950724601745605, 1.0979150533676147, 0.9474178552627563, 0.8543937802314758, 0.7783248424530029, 0.7376496195793152, 0.7006842494010925, 0.6746688485145569, 0.647553563117981, 0.6295329928398132, 0.6112891435623169, 0.58865886926651, 0.5667527914047241, 0.5575993657112122, 0.5467248558998108, 0.5289703011512756, 0.5205997824668884, 0.5110849142074585, 0.5064045786857605, 0.4867391884326935, 0.4731372892856598, 0.47443822026252747, 0.46410614252090454, 0.4545186161994934, 0.445819616317749, 0.4367676079273224, 0.4321127235889435, 0.4275900721549988, 0.4177286922931671, 0.40700381994247437, 0.40491974353790283, 0.3923063576221466, 0.38597339391708374, 0.37638187408447266, 0.3749813437461853, 0.3708414137363434, 0.369646281003952, 0.3635149896144867, 0.3594855070114136, 0.3503628671169281, 0.3338625133037567, 0.3396199643611908, 0.33679017424583435, 0.3303111493587494, 0.3275522291660309, 0.3153315782546997, 0.3093845844268799, 0.31660354137420654, 0.313541054725647, 0.3128948211669922, 0.2977619469165802, 0.30230653285980225, 0.298944890499115, 0.28947505354881287, 0.2822195291519165, 0.2778712213039398, 0.2668195366859436, 0.26853811740875244, 0.26283398270606995, 0.2662760019302368, 0.2576100528240204, 0.25102800130844116, 0.2539205849170685, 0.25087955594062805, 0.24508193135261536], "accuracy": [0.280940443277359, 0.48685774207115173, 0.5665037631988525, 0.616299033164978, 0.6625280380249023, 0.6930392384529114, 0.7169462442398071, 0.7320036888122559, 0.7375511527061462, 0.7491744756698608, 0.7672698497772217, 0.7670056819915771, 0.7745344042778015, 0.7876105904579163, 0.7906485199928284, 0.7994980812072754, 0.802800178527832, 0.8068947196006775, 0.8117818236351013, 0.8153480291366577, 0.8181217908859253, 0.829216718673706, 0.8300092220306396, 0.8238013386726379, 0.8325188159942627, 0.8385946154594421, 0.8372738361358643, 0.842028796672821, 0.8451988101005554, 0.8481045961380005, 0.8515387773513794, 0.8549728989601135, 0.8516708612442017, 0.8603883385658264, 0.8598600029945374, 0.8667283058166504, 0.8636903762817383, 0.8636903762817383, 0.8677849769592285, 0.8704266548156738, 0.8758420348167419, 0.8739928603172302, 0.8790120482444763, 0.8768987059593201, 0.8751816153526306, 0.8794082403182983, 0.8813894987106323, 0.8860124349594116, 0.8874653577804565, 0.8856161832809448, 0.8838990926742554, 0.8877294659614563, 0.8918240666389465, 0.8918240666389465, 0.8922203183174133, 0.8953903317451477, 0.89552241563797, 0.9002773761749268, 0.9049002528190613, 0.9034473896026611, 0.9035794734954834, 0.9038436412811279, 0.9085986018180847, 0.9095231890678406, 0.9095231890678406, 0.909259021282196, 0.910711944103241], "val_loss": [2.0414316654205322, 1.5168657302856445, 1.0494927167892456, 0.8396123051643372, 0.7532041668891907, 0.6975494027137756, 0.6532282829284668, 0.6188269853591919, 0.5909113883972168, 0.5747429728507996, 0.5562715530395508, 0.5392115712165833, 0.5226473808288574, 0.5080817937850952, 0.49551260471343994, 0.4949219524860382, 0.48097461462020874, 0.46894019842147827, 0.4645398259162903, 0.4554585814476013, 0.44845467805862427, 0.44272810220718384, 0.4365209937095642, 0.4303407371044159, 0.42757970094680786, 0.42137086391448975, 0.4158954322338104, 0.4094981253147125, 0.40614867210388184, 0.40746310353279114, 0.39686036109924316, 0.39440515637397766, 0.39069101214408875, 0.3898474872112274, 0.3889416456222534, 0.3833497166633606, 0.387736976146698, 0.3792175352573395, 0.3778442442417145, 0.37528878450393677, 0.3729557991027832, 0.37016138434410095, 0.36690768599510193, 0.36455467343330383, 0.36386409401893616, 0.3628668487071991, 0.365796834230423, 0.36076274514198303, 0.3599783480167389, 0.35867130756378174, 0.35705167055130005, 0.35411083698272705, 0.3552299737930298, 0.3651564121246338, 0.36276260018348694, 0.34837988018989563, 0.34821584820747375, 0.3528410792350769, 0.3496720790863037, 0.3506317138671875, 0.34951722621917725, 0.3443804085254669, 0.345913290977478, 0.3461855351924896, 0.3431210517883301, 0.348863810300827, 0.3426092565059662], "val_accuracy": [0.5373333096504211, 0.6570000052452087, 0.6759999990463257, 0.7110000252723694, 0.7286666631698608, 0.7419999837875366, 0.7590000033378601, 0.7616666555404663, 0.7836666703224182, 0.7903333306312561, 0.7886666655540466, 0.8006666898727417, 0.809333324432373, 0.8183333277702332, 0.8146666884422302, 0.8140000104904175, 0.8233333230018616, 0.8289999961853027, 0.8326666951179504, 0.8363333344459534, 0.8389999866485596, 0.8366666436195374, 0.8363333344459534, 0.8489999771118164, 0.847000002861023, 0.8519999980926514, 0.8533333539962769, 0.8560000061988831, 0.8573333621025085, 0.8539999723434448, 0.8619999885559082, 0.862666666507721, 0.8656666874885559, 0.8629999756813049, 0.8646666407585144, 0.8636666536331177, 0.8603333234786987, 0.8659999966621399, 0.8673333525657654, 0.8673333525657654, 0.8713333606719971, 0.8703333139419556, 0.8713333606719971, 0.871666669845581, 0.8736666440963745, 0.8730000257492065, 0.871999979019165, 0.874666690826416, 0.875333309173584, 0.874666690826416, 0.875, 0.8786666393280029, 0.8776666522026062, 0.8743333220481873, 0.8723333477973938, 0.8833333253860474, 0.8826666474342346, 0.8790000081062317, 0.8836666941642761, 0.878333330154419, 0.8820000290870667, 0.887666642665863, 0.8820000290870667, 0.8803333044052124, 0.8830000162124634, 0.8846666812896729, 0.8856666684150696]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8585714101791382, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.218923568725586, 1.8556687831878662, 1.3821300268173218, 1.0858852863311768, 0.9371640682220459, 0.8361299633979797, 0.7659187912940979, 0.7273520231246948, 0.6792409420013428, 0.6508804559707642, 0.6249512434005737, 0.6095045208930969, 0.5913451910018921, 0.567033588886261, 0.5523834228515625, 0.5335784554481506, 0.5242368578910828, 0.5153899788856506, 0.5006804466247559, 0.4933770000934601, 0.48419106006622314, 0.47195106744766235, 0.4689347743988037, 0.4542140066623688, 0.4408821165561676, 0.4432648718357086, 0.4323433041572571, 0.4208623170852661, 0.4112582802772522, 0.4078949987888336, 0.4031868875026703, 0.39325541257858276, 0.38551241159439087, 0.3823413848876953, 0.37451156973838806, 0.36671000719070435, 0.36259207129478455, 0.3576434850692749, 0.3562442362308502, 0.34454068541526794, 0.3425651490688324, 0.33486151695251465, 0.33409667015075684, 0.3259531557559967, 0.32227206230163574, 0.31858786940574646, 0.31273308396339417, 0.3095557987689972, 0.31029239296913147, 0.30508100986480713, 0.29890456795692444, 0.29518499970436096, 0.29513072967529297, 0.2859118580818176, 0.2846003472805023, 0.28251153230667114, 0.2738977074623108, 0.26925891637802124, 0.2734217643737793, 0.2687656879425049, 0.26753532886505127, 0.2547493875026703, 0.2523508071899414, 0.24745821952819824, 0.24627098441123962, 0.23979638516902924, 0.24169562757015228, 0.23407986760139465, 0.23131421208381653, 0.22603875398635864, 0.21529661118984222, 0.2216387540102005, 0.21564824879169464, 0.22106720507144928, 0.21216021478176117, 0.20410747826099396, 0.20381323993206024, 0.20148885250091553, 0.1960894614458084, 0.19029320776462555, 0.18349125981330872], "accuracy": [0.27684587240219116, 0.49068814516067505, 0.568220853805542, 0.6250165104866028, 0.6631884574890137, 0.7036058902740479, 0.7210407853126526, 0.7326641082763672, 0.7534011602401733, 0.767930269241333, 0.7740060687065125, 0.7777044177055359, 0.7829877138137817, 0.7967243194580078, 0.8029322624206543, 0.8074230551719666, 0.8169330358505249, 0.8164047002792358, 0.8208954930305481, 0.8227446675300598, 0.8261788487434387, 0.8323867321014404, 0.8310658931732178, 0.8408400416374207, 0.8470479249954224, 0.8413683772087097, 0.8433496356010437, 0.8502179384231567, 0.8555012345314026, 0.8533879518508911, 0.8553691506385803, 0.8602562546730042, 0.860652506351471, 0.86118084192276, 0.8656716346740723, 0.8687095642089844, 0.8722757697105408, 0.8710870146751404, 0.8766345381736755, 0.8758420348167419, 0.8767666220664978, 0.8795403242111206, 0.8770307898521423, 0.8823140859603882, 0.8850878477096558, 0.8854840993881226, 0.8842953443527222, 0.8868049383163452, 0.885219931602478, 0.8889182209968567, 0.891559898853302, 0.8932769894599915, 0.8924844861030579, 0.8939374089241028, 0.8951261639595032, 0.8981640338897705, 0.9013340473175049, 0.8992207050323486, 0.8948619961738586, 0.9006736278533936, 0.898428201675415, 0.9066173434257507, 0.9089948534965515, 0.9076740145683289, 0.9101836085319519, 0.9145423173904419, 0.9152027368545532, 0.9144102334976196, 0.917580246925354, 0.9191652536392212, 0.9196935892105103, 0.9218068718910217, 0.9255052208900452, 0.9203540086746216, 0.9231277108192444, 0.9261656403541565, 0.9245806336402893, 0.924448549747467, 0.9297318458557129, 0.9311847686767578, 0.9323735237121582], "val_loss": [2.0263450145721436, 1.4891750812530518, 1.0171735286712646, 0.8092294931411743, 0.7293429374694824, 0.6680431962013245, 0.6312863230705261, 0.5980786681175232, 0.5691795945167542, 0.5468465685844421, 0.5256272554397583, 0.5100757479667664, 0.5003756284713745, 0.4899568259716034, 0.4760436713695526, 0.4671594202518463, 0.45888981223106384, 0.4530785381793976, 0.44505876302719116, 0.4394775927066803, 0.4340013861656189, 0.428348183631897, 0.42270711064338684, 0.4172592759132385, 0.4092569053173065, 0.4075155556201935, 0.4041978716850281, 0.3950045704841614, 0.3888522684574127, 0.3915726840496063, 0.3812704384326935, 0.3790336847305298, 0.37628811597824097, 0.3751818537712097, 0.37424764037132263, 0.36794334650039673, 0.3674067258834839, 0.36489444971084595, 0.35838350653648376, 0.35692131519317627, 0.35307416319847107, 0.35477039217948914, 0.34875309467315674, 0.3440968692302704, 0.3455405533313751, 0.3490978479385376, 0.3449983298778534, 0.34047797322273254, 0.3402051031589508, 0.3368787169456482, 0.33761048316955566, 0.33999350666999817, 0.3359416425228119, 0.33117109537124634, 0.32716044783592224, 0.3327185809612274, 0.32507503032684326, 0.328732430934906, 0.326592355966568, 0.32309186458587646, 0.3236313462257385, 0.32156136631965637, 0.3243083357810974, 0.32040345668792725, 0.32026106119155884, 0.3251659870147705, 0.3207911252975464, 0.32057830691337585, 0.3200426697731018, 0.3152579665184021, 0.322836697101593, 0.31893211603164673, 0.3194155693054199, 0.3199746608734131, 0.3148125410079956, 0.31460025906562805, 0.31792575120925903, 0.32049399614334106, 0.31830453872680664, 0.32089635729789734, 0.3203114867210388], "val_accuracy": [0.5246666669845581, 0.6696666479110718, 0.6930000185966492, 0.715666651725769, 0.7279999852180481, 0.7603333592414856, 0.7590000033378601, 0.7789999842643738, 0.7883333563804626, 0.8006666898727417, 0.8026666641235352, 0.8130000233650208, 0.8220000267028809, 0.8240000009536743, 0.82833331823349, 0.8276666402816772, 0.8356666564941406, 0.8379999995231628, 0.8370000123977661, 0.8416666388511658, 0.8433333039283752, 0.847000002861023, 0.8446666598320007, 0.8479999899864197, 0.8526666760444641, 0.8533333539962769, 0.8550000190734863, 0.8610000014305115, 0.8616666793823242, 0.859666645526886, 0.8619999885559082, 0.8619999885559082, 0.8643333315849304, 0.8663333058357239, 0.8643333315849304, 0.8663333058357239, 0.8679999709129333, 0.8700000047683716, 0.8709999918937683, 0.8696666955947876, 0.871999979019165, 0.8733333349227905, 0.8740000128746033, 0.8733333349227905, 0.8733333349227905, 0.8743333220481873, 0.8776666522026062, 0.8736666440963745, 0.8726666569709778, 0.8769999742507935, 0.8799999952316284, 0.875, 0.8786666393280029, 0.8826666474342346, 0.8853333592414856, 0.8820000290870667, 0.8859999775886536, 0.8843333125114441, 0.8786666393280029, 0.8853333592414856, 0.8863333463668823, 0.8863333463668823, 0.8856666684150696, 0.8883333206176758, 0.8859999775886536, 0.8816666603088379, 0.887666642665863, 0.887333333492279, 0.8916666507720947, 0.890666663646698, 0.8836666941642761, 0.8913333415985107, 0.890999972820282, 0.8930000066757202, 0.8939999938011169, 0.8946666717529297, 0.890999972820282, 0.8920000195503235, 0.8930000066757202, 0.890666663646698, 0.8920000195503235]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 1, 3, 5, 3, 4, 0, 7], [0, 2, 0, 2, 3, 3], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [9, 2, 3, 1, 3, 5], [1, 2, 0, 3], [34, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1], [6, 3, 3, 5, 8, 3, 4, 1, 4, 2, 2, 2], [0, 1, 0, 3, 0, 0, 3, 1, 4, 4, 2], [16, 99, 96, 30, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 8, 6, 2, 1, 1, 0, 1, 2, 1, 1, 1, 23, 12, 11, 4], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.pow(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.negative(tf.math.add(grad, grad)))), lambda shape,  alpha, beta, grad: tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.sqrt(tf.math.multiply(alpha, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(sigma, tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), sigma)))))), tf.math.add(tf.math.add(alpha, grad), grad)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 8, 3], [2, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1], [0, 2, 3, 8, 3, 5, 8, 7, 3, 4, 7, 7, 3, 1, 7, 9], [0, 2, 0, 3, 0, 0, 4, 3, 0, 5, 0], [16, 16, 42, 68, 2, 65, 63], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 6, 1, 4, 2, 8], [0, 0, 0, 1, 0, 0, 3, 0, 1, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 27, 16, 11, 7, 2, 1, 1, 1, 12, 6, 6, 5], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.sqrt(grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.add(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), grad)), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), grad), tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))))))), grad), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(alpha, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 0], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 3, 6, 7, 1, 1, 9, 8, 6], [0, 2, 0, 3, 0, 0, 3, 1, 2, 0, 2, 6, 3, 4, 4], [16, 79, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 1, 0, 1, 1, 2, 1, 1, 1, 33, 18, 15, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(beta, tf.math.pow(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.multiply(tf.math.divide_no_nan(beta, tf.math.add(tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(beta, grad)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.sqrt(sigma)), tf.math.divide_no_nan(grad, grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 9, 3, 0, 3, 6], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 3, 8, 4, 4, 1, 4, 2, 8], [0, 0, 0, 4, 2, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.0917142853140831, "mapping_values": [1, 9, 5, 4, 2, 2, 2, 0, 1, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), grad))), beta)), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, alpha))", "other_info": {"loss": [2.3106937408447266, 2.3104920387268066, 2.309518337249756, 2.3089399337768555, 2.3100152015686035, 2.3093528747558594], "accuracy": [0.09430722147226334, 0.09100515395402908, 0.0948355570435524, 0.09325055778026581, 0.09311848133802414, 0.0944393053650856], "val_loss": [2.307955026626587, 2.3078999519348145, 2.3078384399414062, 2.3077754974365234, 2.307706594467163, 2.3076329231262207], "val_accuracy": [0.09466666728258133, 0.09333333373069763, 0.09300000220537186, 0.09133332967758179, 0.09000000357627869, 0.08799999952316284]}}]