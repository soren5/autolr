[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8822857141494751, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585750579834, 1.8655762672424316, 1.394430160522461, 1.0773245096206665, 0.9378393888473511, 0.8425824046134949, 0.7776632308959961, 0.736241340637207, 0.6971188187599182, 0.6732122302055359, 0.644855797290802, 0.6276965141296387, 0.6100340485572815, 0.5899673104286194, 0.5746485590934753, 0.5484329462051392, 0.5425268411636353, 0.5357900857925415, 0.5214410424232483, 0.5127171874046326, 0.4895091950893402, 0.4932740032672882, 0.48551443219184875, 0.47113916277885437, 0.46571049094200134, 0.450914591550827, 0.438728004693985, 0.4414178729057312, 0.4245515465736389, 0.4182806611061096, 0.4126766324043274, 0.41352686285972595, 0.4031256139278412, 0.40064555406570435, 0.3982388377189636, 0.38566267490386963, 0.38400527834892273, 0.3741128146648407, 0.36422181129455566, 0.36170411109924316, 0.35991787910461426, 0.35666367411613464, 0.3521813750267029, 0.34583958983421326, 0.34736087918281555, 0.34181836247444153, 0.33650368452072144, 0.33141741156578064, 0.3230496346950531, 0.3225416839122772, 0.315096914768219, 0.3059031665325165, 0.3058394491672516, 0.3017319440841675, 0.29568877816200256, 0.2933836281299591, 0.28774771094322205, 0.2856961190700531, 0.2802303731441498, 0.2779994010925293, 0.274711549282074, 0.2719985842704773, 0.2586328387260437, 0.2598455548286438, 0.2622571289539337, 0.25739434361457825, 0.2502012252807617, 0.2544722855091095, 0.24556587636470795, 0.24580754339694977, 0.23948103189468384, 0.23949603736400604, 0.23484042286872864, 0.22871272265911102, 0.2256491780281067, 0.22479403018951416, 0.21744707226753235, 0.21390178799629211, 0.21272219717502594], "accuracy": [0.2785629332065582, 0.49451854825019836, 0.559899628162384, 0.6215823292732239, 0.6654338836669922, 0.6950204968452454, 0.7181349992752075, 0.7322678565979004, 0.7441553473472595, 0.7483819723129272, 0.7627789974212646, 0.7717606425285339, 0.7728173136711121, 0.78113853931427, 0.7882710099220276, 0.7993659973144531, 0.7976489067077637, 0.8074230551719666, 0.8128384351730347, 0.8198388814926147, 0.8212917447090149, 0.819970965385437, 0.8272355198860168, 0.8350284099578857, 0.8305375576019287, 0.8387266993522644, 0.846387505531311, 0.8433496356010437, 0.8504821062088013, 0.8524633646011353, 0.8535200357437134, 0.854708731174469, 0.856689989566803, 0.8551049828529358, 0.8593316674232483, 0.8615770936012268, 0.8628978729248047, 0.8702945709228516, 0.8691058158874512, 0.871879518032074, 0.8722757697105408, 0.8691058158874512, 0.8733324408531189, 0.8800686597824097, 0.8795403242111206, 0.8755778670310974, 0.8768987059593201, 0.8829745054244995, 0.8824461698532104, 0.8823140859603882, 0.887201189994812, 0.8897107243537903, 0.8889182209968567, 0.8927486538887024, 0.8902390599250793, 0.8953903317451477, 0.8980319499969482, 0.8976356983184814, 0.900409460067749, 0.89552241563797, 0.9025228023529053, 0.8989565372467041, 0.9056927561759949, 0.9085986018180847, 0.9030511379241943, 0.9066173434257507, 0.9101836085319519, 0.9083344340324402, 0.909259021282196, 0.9099194407463074, 0.9126931428909302, 0.9140139818191528, 0.9119006991386414, 0.9171839952468872, 0.9169198274612427, 0.9185048341751099, 0.9218068718910217, 0.9185048341751099, 0.9196935892105103], "val_loss": [2.033445358276367, 1.5042319297790527, 1.0271512269973755, 0.8147247433662415, 0.7278039455413818, 0.68117356300354, 0.6306353211402893, 0.5966841578483582, 0.5751398801803589, 0.5460951328277588, 0.5314993858337402, 0.509799063205719, 0.4957965612411499, 0.4792602062225342, 0.46671679615974426, 0.45267683267593384, 0.4441072940826416, 0.4356139600276947, 0.42943108081817627, 0.4255247414112091, 0.41811680793762207, 0.4163394272327423, 0.39929893612861633, 0.3969916105270386, 0.39089226722717285, 0.387652188539505, 0.3844633102416992, 0.3824205696582794, 0.3749690353870392, 0.3701930642127991, 0.36967378854751587, 0.36689504981040955, 0.3585263788700104, 0.3587398827075958, 0.36267170310020447, 0.3561091423034668, 0.35379692912101746, 0.3499273955821991, 0.34701839089393616, 0.3467637896537781, 0.3424672484397888, 0.33951225876808167, 0.3386255204677582, 0.34044384956359863, 0.33945050835609436, 0.33684298396110535, 0.3322163224220276, 0.33181649446487427, 0.32827115058898926, 0.3312568664550781, 0.3297465741634369, 0.3256674110889435, 0.3234780728816986, 0.32119208574295044, 0.3232716917991638, 0.3209094703197479, 0.31944912672042847, 0.3157532513141632, 0.3144265413284302, 0.31676045060157776, 0.31425556540489197, 0.3131799101829529, 0.3147056996822357, 0.3154993951320648, 0.31771615147590637, 0.31545644998550415, 0.3127000629901886, 0.31382524967193604, 0.31026333570480347, 0.3147730529308319, 0.30829918384552, 0.3107443153858185, 0.31316936016082764, 0.30297672748565674, 0.30325081944465637, 0.30436232686042786, 0.3072424829006195, 0.30681705474853516, 0.3061434030532837], "val_accuracy": [0.5526666641235352, 0.6666666865348816, 0.687333345413208, 0.7083333134651184, 0.731333315372467, 0.7446666955947876, 0.7606666684150696, 0.762666642665863, 0.7873333096504211, 0.7889999747276306, 0.7973333597183228, 0.8056666851043701, 0.8193333148956299, 0.8259999752044678, 0.8289999961853027, 0.8410000205039978, 0.8453333377838135, 0.8450000286102295, 0.8489999771118164, 0.847000002861023, 0.8516666889190674, 0.856333315372467, 0.859333336353302, 0.856333315372467, 0.8633333444595337, 0.8640000224113464, 0.8656666874885559, 0.8646666407585144, 0.8679999709129333, 0.8696666955947876, 0.8640000224113464, 0.8686666488647461, 0.8713333606719971, 0.8709999918937683, 0.8703333139419556, 0.8723333477973938, 0.871999979019165, 0.874666690826416, 0.8723333477973938, 0.8759999871253967, 0.8726666569709778, 0.875333309173584, 0.8790000081062317, 0.8756666779518127, 0.8726666569709778, 0.8769999742507935, 0.8796666860580444, 0.8796666860580444, 0.8806666731834412, 0.8793333172798157, 0.8813333511352539, 0.8840000033378601, 0.8840000033378601, 0.8843333125114441, 0.8809999823570251, 0.8856666684150696, 0.8866666555404663, 0.8833333253860474, 0.8866666555404663, 0.8843333125114441, 0.8856666684150696, 0.8880000114440918, 0.887333333492279, 0.8883333206176758, 0.8866666555404663, 0.8896666765213013, 0.8863333463668823, 0.8853333592414856, 0.890999972820282, 0.8870000243186951, 0.8883333206176758, 0.8883333206176758, 0.8916666507720947, 0.8939999938011169, 0.8896666765213013, 0.8916666507720947, 0.890999972820282, 0.8926666378974915, 0.8913333415985107]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8691428303718567, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222442626953125, 1.859157681465149, 1.3839715719223022, 1.1074514389038086, 0.9412794709205627, 0.8527774810791016, 0.7767773866653442, 0.7263146042823792, 0.6923929452896118, 0.6657461524009705, 0.6341710090637207, 0.6256773471832275, 0.5996429920196533, 0.5822253823280334, 0.571420431137085, 0.5518428087234497, 0.5487838983535767, 0.530035138130188, 0.5249263644218445, 0.5026345252990723, 0.4930739998817444, 0.4776952564716339, 0.47106853127479553, 0.4665764570236206, 0.46368464827537537, 0.4562683403491974, 0.4418465495109558, 0.43631476163864136, 0.4268478453159332, 0.41982945799827576, 0.42003458738327026, 0.4013095200061798, 0.4058871567249298, 0.3990696370601654, 0.3884008824825287, 0.38659921288490295, 0.3798365890979767, 0.3748156428337097, 0.36662325263023376, 0.35982441902160645, 0.36008334159851074, 0.35378289222717285, 0.35480284690856934, 0.3443017899990082, 0.3429594039916992, 0.3345666825771332, 0.3312634527683258, 0.31877243518829346, 0.3185759484767914, 0.3197184205055237, 0.30673331022262573, 0.3125280737876892, 0.2988816499710083, 0.30179470777511597, 0.2981244921684265, 0.2909321188926697, 0.28603559732437134, 0.2858034074306488, 0.28057461977005005, 0.2800411880016327, 0.2802349925041199, 0.2737366259098053, 0.26981639862060547, 0.25412023067474365, 0.25517287850379944, 0.2564033567905426, 0.25373074412345886, 0.24583326280117035, 0.24368613958358765, 0.23981328308582306, 0.23513908684253693, 0.23418812453746796, 0.23188991844654083], "accuracy": [0.2715625464916229, 0.48289525508880615, 0.5650508403778076, 0.6092986464500427, 0.6643772125244141, 0.7014925479888916, 0.7210407853126526, 0.7390040755271912, 0.7466648817062378, 0.7623828053474426, 0.7697794437408447, 0.7745344042778015, 0.7833839654922485, 0.7927618622779846, 0.7948752045631409, 0.8018755912780762, 0.7979130744934082, 0.8079513907432556, 0.8098005652427673, 0.8214238286018372, 0.8249900937080383, 0.8276317715644836, 0.8317263126373291, 0.83119797706604, 0.8318583965301514, 0.8383304476737976, 0.8425571322441101, 0.842028796672821, 0.8488970994949341, 0.8541803956031799, 0.847840428352356, 0.8555012345314026, 0.8565579056739807, 0.8578787446022034, 0.8613129258155823, 0.8632941246032715, 0.8625016212463379, 0.860652506351471, 0.8668603897094727, 0.8708229064941406, 0.8673887252807617, 0.8720116019248962, 0.872407853603363, 0.8741249442100525, 0.8728041052818298, 0.8800686597824097, 0.8796724081039429, 0.8853520154953003, 0.8862766027450562, 0.8812574148178101, 0.8894465565681458, 0.8877294659614563, 0.8944657444953918, 0.8869370222091675, 0.889578640460968, 0.8949940800666809, 0.8961827754974365, 0.894069492816925, 0.8957865834236145, 0.893541157245636, 0.8996169567108154, 0.8973715305328369, 0.8972394466400146, 0.9101836085319519, 0.9064852595329285, 0.9041078090667725, 0.9049002528190613, 0.9120327830314636, 0.9101836085319519, 0.9133535623550415, 0.9132214784622192, 0.9085986018180847, 0.9142781496047974], "val_loss": [2.0348422527313232, 1.5032445192337036, 1.0204172134399414, 0.8096569776535034, 0.7248948812484741, 0.6726633906364441, 0.6226146817207336, 0.5924018025398254, 0.5637295842170715, 0.5429189205169678, 0.5277633666992188, 0.5096515417098999, 0.49606382846832275, 0.48185408115386963, 0.478994220495224, 0.4680030941963196, 0.4634125828742981, 0.4559403955936432, 0.4427917003631592, 0.44004401564598083, 0.4287320077419281, 0.4319722354412079, 0.41945624351501465, 0.42144230008125305, 0.4157695174217224, 0.4109196662902832, 0.4036594331264496, 0.40055182576179504, 0.3988785743713379, 0.39512765407562256, 0.387704998254776, 0.38640040159225464, 0.3846372067928314, 0.3835047483444214, 0.3780476152896881, 0.37910327315330505, 0.3738982379436493, 0.3692797124385834, 0.3688109517097473, 0.36649397015571594, 0.3656376898288727, 0.3668704032897949, 0.36050474643707275, 0.3583928942680359, 0.35758060216903687, 0.3536732494831085, 0.3537347912788391, 0.3541737496852875, 0.3511661887168884, 0.3492203652858734, 0.35492756962776184, 0.3512861430644989, 0.3484887182712555, 0.34764155745506287, 0.3513150215148926, 0.3448230028152466, 0.34352320432662964, 0.3423944413661957, 0.3463190793991089, 0.3456456661224365, 0.34422817826271057, 0.34206414222717285, 0.33858877420425415, 0.3355157673358917, 0.34191325306892395, 0.3432442247867584, 0.341195672750473, 0.3432145118713379, 0.3347163200378418, 0.33656299114227295, 0.34025493264198303, 0.34130436182022095, 0.3351098895072937], "val_accuracy": [0.5223333239555359, 0.6819999814033508, 0.70333331823349, 0.7269999980926514, 0.7543333172798157, 0.7556666731834412, 0.7746666669845581, 0.781333327293396, 0.7850000262260437, 0.8059999942779541, 0.8036666512489319, 0.8143333196640015, 0.8133333325386047, 0.8213333487510681, 0.8173333406448364, 0.8253333568572998, 0.8263333439826965, 0.8333333134651184, 0.8370000123977661, 0.8389999866485596, 0.840666651725769, 0.8370000123977661, 0.8450000286102295, 0.846666693687439, 0.8473333120346069, 0.8446666598320007, 0.8519999980926514, 0.8500000238418579, 0.8533333539962769, 0.8529999852180481, 0.856333315372467, 0.8583333492279053, 0.8566666841506958, 0.8586666584014893, 0.8616666793823242, 0.859333336353302, 0.859000027179718, 0.8629999756813049, 0.8646666407585144, 0.862666666507721, 0.8600000143051147, 0.8679999709129333, 0.8669999837875366, 0.8676666617393494, 0.8686666488647461, 0.8686666488647461, 0.8686666488647461, 0.8700000047683716, 0.8709999918937683, 0.8693333268165588, 0.8696666955947876, 0.8713333606719971, 0.875333309173584, 0.8709999918937683, 0.8726666569709778, 0.871999979019165, 0.8759999871253967, 0.8736666440963745, 0.8730000257492065, 0.8740000128746033, 0.8733333349227905, 0.8776666522026062, 0.8793333172798157, 0.8803333044052124, 0.878333330154419, 0.875333309173584, 0.8759999871253967, 0.8806666731834412, 0.8763333559036255, 0.871999979019165, 0.8763333559036255, 0.8796666860580444, 0.878333330154419]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [0, 2, 3, 2, 3, 3, 7, 1, 4, 4, 5], [2, 1, 0, 2, 1, 3, 0, 0, 3, 1], [39, 60, 14], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [4, 2, 6, 0, 3, 5, 7], [0, 2, 0, 3, 5, 2], [16, 16], [0, 0, 0, 1, 0, 0, 1], [0, 5, 1, 2, 9], [0, 3], [99, 47], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 6, 4, 2, 8], [0, 0, 0, 3, 4, 0, 3, 4, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10885713994503021, "mapping_values": [1, 21, 11, 10, 3, 13, 7, 6, 2, 7, 5, 2, 2, 16, 8, 8, 4], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(grad, tf.math.multiply(tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(tf.math.pow(alpha, grad), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))))), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.square(grad), alpha))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.add(grad, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), grad)), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(sigma, grad))", "other_info": {"loss": [2.308666467666626, 2.308185577392578, 2.3057401180267334, 2.305001974105835, 2.3040976524353027, 2.3036813735961914, 2.3030989170074463, 2.302781343460083, 2.3026556968688965, 2.3026206493377686, 2.3025927543640137, 2.3025829792022705], "accuracy": [0.0952318087220192, 0.08928807079792023, 0.09206181764602661, 0.09021265059709549, 0.09298639744520187, 0.09430722147226334, 0.10170386731624603, 0.10117553919553757, 0.10236428678035736, 0.10117553919553757, 0.10038304328918457, 0.1006472036242485], "val_loss": [2.307832956314087, 2.3066461086273193, 2.305399179458618, 2.3042538166046143, 2.3034069538116455, 2.3029115200042725, 2.302680730819702, 2.302603006362915, 2.3025872707366943, 2.302586317062378, 2.3025858402252197, 2.3025853633880615], "val_accuracy": [0.07833333313465118, 0.07699999958276749, 0.0716666653752327, 0.07599999755620956, 0.08733333647251129, 0.10700000077486038, 0.10966666787862778, 0.10300000011920929, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 3, 3], [16, 16], [0, 1], [0], [0], [65], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 8], [0, 4, 0, 3, 0, 0, 3, 1, 4, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 7, 4, 3, 1, 2, 1, 1, 1, 22, 12, 10, 5], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(sigma, tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))))), sigma), tf.math.sqrt(tf.math.sqrt(alpha))), grad), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 2, 3], [0, 1, 0, 2, 2], [39, 32], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 3, 0, 3], [16, 16], [1, 1], [0], [0], [9], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 4, 0, 0, 3, 4, 2, 0], [16, 99, 23, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 6, 3, 3, 2, 1, 0, 1, 1, 21, 11, 10, 6], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), grad)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), tf.math.subtract(grad, tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)), grad))), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 8], [3, 2, 3, 3], [16, 83], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 2, 1, 4, 2, 8], [0, 1, 0, 3, 0, 4, 3, 1, 2, 0], [16, 99, 0, 99, 61, 1]], "fitness": -0.09028571099042892, "mapping_values": [1, 9, 5, 4, 2, 7, 4, 3, 0, 2, 1, 1, 1, 16, 8, 8, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(alpha, tf.constant(1.0, shape=shape, dtype=tf.float32))), sigma)), tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [2.3092570304870605, 2.310833692550659, 2.3100435733795166, 2.310455799102783, 2.310009479522705, 2.310471534729004], "accuracy": [0.08902391046285629, 0.09192973375320435, 0.09470347315073013, 0.08994849026203156, 0.08955223858356476, 0.08532558381557465], "val_loss": [2.3087046146392822, 2.3087046146392822, 2.3087046146392822, 2.3087046146392822, 2.3087046146392822, 2.3087046146392822], "val_accuracy": [0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}}]