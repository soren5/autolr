[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8822857141494751, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585750579834, 1.8655762672424316, 1.394430160522461, 1.0773245096206665, 0.9378393888473511, 0.8425824046134949, 0.7776632308959961, 0.736241340637207, 0.6971188187599182, 0.6732122302055359, 0.644855797290802, 0.6276965141296387, 0.6100340485572815, 0.5899673104286194, 0.5746485590934753, 0.5484329462051392, 0.5425268411636353, 0.5357900857925415, 0.5214410424232483, 0.5127171874046326, 0.4895091950893402, 0.4932740032672882, 0.48551443219184875, 0.47113916277885437, 0.46571049094200134, 0.450914591550827, 0.438728004693985, 0.4414178729057312, 0.4245515465736389, 0.4182806611061096, 0.4126766324043274, 0.41352686285972595, 0.4031256139278412, 0.40064555406570435, 0.3982388377189636, 0.38566267490386963, 0.38400527834892273, 0.3741128146648407, 0.36422181129455566, 0.36170411109924316, 0.35991787910461426, 0.35666367411613464, 0.3521813750267029, 0.34583958983421326, 0.34736087918281555, 0.34181836247444153, 0.33650368452072144, 0.33141741156578064, 0.3230496346950531, 0.3225416839122772, 0.315096914768219, 0.3059031665325165, 0.3058394491672516, 0.3017319440841675, 0.29568877816200256, 0.2933836281299591, 0.28774771094322205, 0.2856961190700531, 0.2802303731441498, 0.2779994010925293, 0.274711549282074, 0.2719985842704773, 0.2586328387260437, 0.2598455548286438, 0.2622571289539337, 0.25739434361457825, 0.2502012252807617, 0.2544722855091095, 0.24556587636470795, 0.24580754339694977, 0.23948103189468384, 0.23949603736400604, 0.23484042286872864, 0.22871272265911102, 0.2256491780281067, 0.22479403018951416, 0.21744707226753235, 0.21390178799629211, 0.21272219717502594], "accuracy": [0.2785629332065582, 0.49451854825019836, 0.559899628162384, 0.6215823292732239, 0.6654338836669922, 0.6950204968452454, 0.7181349992752075, 0.7322678565979004, 0.7441553473472595, 0.7483819723129272, 0.7627789974212646, 0.7717606425285339, 0.7728173136711121, 0.78113853931427, 0.7882710099220276, 0.7993659973144531, 0.7976489067077637, 0.8074230551719666, 0.8128384351730347, 0.8198388814926147, 0.8212917447090149, 0.819970965385437, 0.8272355198860168, 0.8350284099578857, 0.8305375576019287, 0.8387266993522644, 0.846387505531311, 0.8433496356010437, 0.8504821062088013, 0.8524633646011353, 0.8535200357437134, 0.854708731174469, 0.856689989566803, 0.8551049828529358, 0.8593316674232483, 0.8615770936012268, 0.8628978729248047, 0.8702945709228516, 0.8691058158874512, 0.871879518032074, 0.8722757697105408, 0.8691058158874512, 0.8733324408531189, 0.8800686597824097, 0.8795403242111206, 0.8755778670310974, 0.8768987059593201, 0.8829745054244995, 0.8824461698532104, 0.8823140859603882, 0.887201189994812, 0.8897107243537903, 0.8889182209968567, 0.8927486538887024, 0.8902390599250793, 0.8953903317451477, 0.8980319499969482, 0.8976356983184814, 0.900409460067749, 0.89552241563797, 0.9025228023529053, 0.8989565372467041, 0.9056927561759949, 0.9085986018180847, 0.9030511379241943, 0.9066173434257507, 0.9101836085319519, 0.9083344340324402, 0.909259021282196, 0.9099194407463074, 0.9126931428909302, 0.9140139818191528, 0.9119006991386414, 0.9171839952468872, 0.9169198274612427, 0.9185048341751099, 0.9218068718910217, 0.9185048341751099, 0.9196935892105103], "val_loss": [2.033445358276367, 1.5042319297790527, 1.0271512269973755, 0.8147247433662415, 0.7278039455413818, 0.68117356300354, 0.6306353211402893, 0.5966841578483582, 0.5751398801803589, 0.5460951328277588, 0.5314993858337402, 0.509799063205719, 0.4957965612411499, 0.4792602062225342, 0.46671679615974426, 0.45267683267593384, 0.4441072940826416, 0.4356139600276947, 0.42943108081817627, 0.4255247414112091, 0.41811680793762207, 0.4163394272327423, 0.39929893612861633, 0.3969916105270386, 0.39089226722717285, 0.387652188539505, 0.3844633102416992, 0.3824205696582794, 0.3749690353870392, 0.3701930642127991, 0.36967378854751587, 0.36689504981040955, 0.3585263788700104, 0.3587398827075958, 0.36267170310020447, 0.3561091423034668, 0.35379692912101746, 0.3499273955821991, 0.34701839089393616, 0.3467637896537781, 0.3424672484397888, 0.33951225876808167, 0.3386255204677582, 0.34044384956359863, 0.33945050835609436, 0.33684298396110535, 0.3322163224220276, 0.33181649446487427, 0.32827115058898926, 0.3312568664550781, 0.3297465741634369, 0.3256674110889435, 0.3234780728816986, 0.32119208574295044, 0.3232716917991638, 0.3209094703197479, 0.31944912672042847, 0.3157532513141632, 0.3144265413284302, 0.31676045060157776, 0.31425556540489197, 0.3131799101829529, 0.3147056996822357, 0.3154993951320648, 0.31771615147590637, 0.31545644998550415, 0.3127000629901886, 0.31382524967193604, 0.31026333570480347, 0.3147730529308319, 0.30829918384552, 0.3107443153858185, 0.31316936016082764, 0.30297672748565674, 0.30325081944465637, 0.30436232686042786, 0.3072424829006195, 0.30681705474853516, 0.3061434030532837], "val_accuracy": [0.5526666641235352, 0.6666666865348816, 0.687333345413208, 0.7083333134651184, 0.731333315372467, 0.7446666955947876, 0.7606666684150696, 0.762666642665863, 0.7873333096504211, 0.7889999747276306, 0.7973333597183228, 0.8056666851043701, 0.8193333148956299, 0.8259999752044678, 0.8289999961853027, 0.8410000205039978, 0.8453333377838135, 0.8450000286102295, 0.8489999771118164, 0.847000002861023, 0.8516666889190674, 0.856333315372467, 0.859333336353302, 0.856333315372467, 0.8633333444595337, 0.8640000224113464, 0.8656666874885559, 0.8646666407585144, 0.8679999709129333, 0.8696666955947876, 0.8640000224113464, 0.8686666488647461, 0.8713333606719971, 0.8709999918937683, 0.8703333139419556, 0.8723333477973938, 0.871999979019165, 0.874666690826416, 0.8723333477973938, 0.8759999871253967, 0.8726666569709778, 0.875333309173584, 0.8790000081062317, 0.8756666779518127, 0.8726666569709778, 0.8769999742507935, 0.8796666860580444, 0.8796666860580444, 0.8806666731834412, 0.8793333172798157, 0.8813333511352539, 0.8840000033378601, 0.8840000033378601, 0.8843333125114441, 0.8809999823570251, 0.8856666684150696, 0.8866666555404663, 0.8833333253860474, 0.8866666555404663, 0.8843333125114441, 0.8856666684150696, 0.8880000114440918, 0.887333333492279, 0.8883333206176758, 0.8866666555404663, 0.8896666765213013, 0.8863333463668823, 0.8853333592414856, 0.890999972820282, 0.8870000243186951, 0.8883333206176758, 0.8883333206176758, 0.8916666507720947, 0.8939999938011169, 0.8896666765213013, 0.8916666507720947, 0.890999972820282, 0.8926666378974915, 0.8913333415985107]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8622857332229614, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222898244857788, 1.8699294328689575, 1.390140414237976, 1.1033114194869995, 0.9275176525115967, 0.8353490829467773, 0.7674272060394287, 0.7159615755081177, 0.6841393709182739, 0.6432296633720398, 0.6216156482696533, 0.6092509627342224, 0.5810486078262329, 0.5598621964454651, 0.5442683100700378, 0.5348889231681824, 0.5218288898468018, 0.5072504281997681, 0.49419263005256653, 0.4899516701698303, 0.47805964946746826, 0.4668627679347992, 0.45769670605659485, 0.43746280670166016, 0.44144296646118164, 0.43537718057632446, 0.42280957102775574, 0.41359490156173706, 0.4139101207256317, 0.4090251922607422, 0.3946148157119751, 0.3834158182144165, 0.3878568410873413, 0.386951744556427, 0.3704514801502228, 0.36217933893203735, 0.3551962375640869, 0.3621165156364441, 0.35516729950904846, 0.34660592675209045, 0.3465671241283417, 0.33926162123680115, 0.32808440923690796, 0.3257664144039154, 0.326816588640213, 0.32205894589424133, 0.3145798444747925, 0.3140309154987335, 0.30096733570098877, 0.30734798312187195, 0.29968881607055664, 0.29641392827033997, 0.28779909014701843, 0.283511757850647, 0.28730371594429016, 0.2754950225353241, 0.2774888575077057, 0.2733471393585205, 0.2678197920322418, 0.25939980149269104, 0.2617148458957672, 0.25682133436203003], "accuracy": [0.2794875204563141, 0.4815744161605835, 0.5633337497711182, 0.6170915365219116, 0.6688680648803711, 0.6983225345611572, 0.724739134311676, 0.7378153204917908, 0.7573636174201965, 0.767401933670044, 0.7734777331352234, 0.7770439982414246, 0.7880068421363831, 0.7961959838867188, 0.7977809906005859, 0.8058380484580994, 0.8104609847068787, 0.816008448600769, 0.8162726163864136, 0.8206313848495483, 0.8269713521003723, 0.8259146809577942, 0.833179235458374, 0.8399154543876648, 0.8392550349235535, 0.8376700282096863, 0.8454629778862, 0.8535200357437134, 0.8508783578872681, 0.8519350290298462, 0.8568220734596252, 0.8646149635314941, 0.860652506351471, 0.8535200357437134, 0.8681812286376953, 0.8706908226013184, 0.8721436858177185, 0.8618412613868713, 0.8708229064941406, 0.8701624870300293, 0.8684453964233398, 0.8761062026023865, 0.8809932470321655, 0.8835028409957886, 0.8775591254234314, 0.8831065893173218, 0.8897107243537903, 0.8868049383163452, 0.891559898853302, 0.887201189994812, 0.8887861371040344, 0.8953903317451477, 0.8967111110687256, 0.8956544995307922, 0.8936732411384583, 0.9006736278533936, 0.8975036144256592, 0.9022586345672607, 0.9006736278533936, 0.901862382888794, 0.9043719172477722, 0.9071456789970398], "val_loss": [2.039806365966797, 1.5209790468215942, 1.0459988117218018, 0.8312210440635681, 0.7314718961715698, 0.6696491837501526, 0.6281489133834839, 0.5916852355003357, 0.567293643951416, 0.5491017699241638, 0.5300964117050171, 0.519597589969635, 0.5071538090705872, 0.49327367544174194, 0.4840536415576935, 0.47295433282852173, 0.461300790309906, 0.45700231194496155, 0.4540877640247345, 0.4435594975948334, 0.4335976839065552, 0.43251585960388184, 0.4251328110694885, 0.41710925102233887, 0.4222187101840973, 0.41973331570625305, 0.41182202100753784, 0.40152743458747864, 0.3984719216823578, 0.391589879989624, 0.39490705728530884, 0.39423421025276184, 0.38778194785118103, 0.3882509768009186, 0.3849439024925232, 0.3791765570640564, 0.37465596199035645, 0.3733442425727844, 0.37336766719818115, 0.37090516090393066, 0.3698377311229706, 0.36507299542427063, 0.3626900911331177, 0.36639875173568726, 0.36474093794822693, 0.3617798388004303, 0.3582535684108734, 0.3544856905937195, 0.36143603920936584, 0.35597333312034607, 0.355471670627594, 0.354147732257843, 0.3506224751472473, 0.35156431794166565, 0.3560192883014679, 0.35617366433143616, 0.3469729721546173, 0.34694790840148926, 0.35308679938316345, 0.34579166769981384, 0.34590640664100647, 0.3457409739494324], "val_accuracy": [0.528333306312561, 0.6600000262260437, 0.6930000185966492, 0.7160000205039978, 0.7463333606719971, 0.7590000033378601, 0.7696666717529297, 0.7856666445732117, 0.7916666865348816, 0.7950000166893005, 0.8036666512489319, 0.8133333325386047, 0.8100000023841858, 0.8203333616256714, 0.8226666450500488, 0.8236666917800903, 0.8316666483879089, 0.8370000123977661, 0.8353333473205566, 0.8410000205039978, 0.8416666388511658, 0.8420000076293945, 0.8429999947547913, 0.8500000238418579, 0.8483333587646484, 0.8456666469573975, 0.8513333201408386, 0.8513333201408386, 0.8533333539962769, 0.8529999852180481, 0.8586666584014893, 0.8529999852180481, 0.8569999933242798, 0.8569999933242798, 0.8546666502952576, 0.862666666507721, 0.8629999756813049, 0.8653333187103271, 0.8663333058357239, 0.8679999709129333, 0.8676666617393494, 0.8713333606719971, 0.8683333396911621, 0.8693333268165588, 0.8743333220481873, 0.874666690826416, 0.8723333477973938, 0.8756666779518127, 0.8713333606719971, 0.8726666569709778, 0.875, 0.875, 0.8759999871253967, 0.878000020980835, 0.8683333396911621, 0.8736666440963745, 0.8813333511352539, 0.878333330154419, 0.8773333430290222, 0.8803333044052124, 0.8799999952316284, 0.8773333430290222]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1], [6, 2, 3, 3, 3, 8, 3, 3, 9], [0, 2, 0, 2, 2, 0, 3], [39, 39, 12, 38], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 6, 3, 5], [0, 2, 0, 3, 4], [16, 16], [0, 1], [0], [2], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [6, 3, 3, 1, 8, 1, 4, 1, 4, 2, 8, 2, 2, 3, 3, 0, 0, 8, 7, 4, 0, 3, 7, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 7, 6, 2, 7, 1, 2, 1, 6, 6], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 9, 7, 4, 11, 6, 5, 2, 2, 1, 1, 0, 44, 25, 19, 6], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.sqrt(tf.math.multiply(tf.math.multiply(grad, grad), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), sigma)))), tf.math.sqrt(tf.math.add(alpha, beta)))), tf.math.add(tf.math.multiply(tf.math.multiply(tf.math.negative(tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.sqrt(grad)), grad), tf.math.add(tf.math.pow(tf.math.negative(tf.math.multiply(beta, grad)), tf.math.add(tf.math.add(tf.math.sqrt(alpha), beta), alpha)), grad))), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10170386731624603, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 1, 3, 0, 3], [0, 1, 2, 2], [39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 4, 5], [0, 2, 3, 3], [16, 16], [0, 0, 1, 1], [0, 4], [0, 1], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [6, 3, 3, 6, 3, 1, 4, 1, 3, 2, 8, 2, 0, 8, 7, 1], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 2, 7, 0, 6], [16, 99, 96, 99, 61, 1, 64]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 1, 4, 2, 2, 1, 30, 16, 14, 7], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha))), tf.math.multiply(tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.negative(tf.math.sqrt(beta)), tf.math.add(grad, tf.math.subtract(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), grad)))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3, 6, 6, 6], [0, 1, 0, 1, 3, 0, 3], [39, 39, 26], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 6, 3, 0, 3, 5], [0, 2, 1, 3], [16, 16], [1, 1], [2], [0], [38], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1], [6, 3, 3, 6, 8, 5, 4, 6, 0, 2, 8], [2, 0, 0, 3, 0, 0, 3, 1, 2, 0], [34, 99, 96, 99, 19, 1]], "fitness": -0.08971428871154785, "mapping_values": [1, 15, 8, 7, 3, 7, 4, 3, 1, 1, 0, 1, 1, 11, 6, 5, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), grad), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.square(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))), tf.constant(1.0, shape=shape, dtype=tf.float32))), sigma), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3090357780456543, 2.3103253841400146, 2.311038017272949, 2.309762477874756, 2.310600519180298, 2.311110019683838], "accuracy": [0.0940430611371994, 0.09509972482919693, 0.09272222965955734, 0.08691058307886124, 0.09192973375320435, 0.08730682730674744], "val_loss": [2.3095500469207764, 2.3095500469207764, 2.3095500469207764, 2.3095500469207764, 2.3095500469207764, 2.3095500469207764], "val_accuracy": [0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 3, 3, 0, 3, 9], [0, 0, 3, 3], [16, 16, 19], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 8, 1, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 2, 0, 3, 1, 2, 0], [16, 99, 96, 99, 51, 1]], "fitness": -0.08828571438789368, "mapping_values": [1, 9, 5, 4, 2, 9, 6, 3, 3, 2, 1, 1, 1, 11, 6, 5, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(sigma, beta))", "other_info": {"loss": [2.3095619678497314, 2.3104209899902344, 2.309788227081299, 2.3088879585266113, 2.3107004165649414, 2.309234380722046], "accuracy": [0.09602430462837219, 0.08849557489156723, 0.09074098616838455, 0.09179764986038208, 0.09074098616838455, 0.09179764986038208], "val_loss": [2.3089842796325684, 2.3089706897735596, 2.30896258354187, 2.3089568614959717, 2.308952569961548, 2.308948516845703], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.08933333307504654, 0.08933333307504654, 0.08900000154972076, 0.08900000154972076]}}]