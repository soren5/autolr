[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8822857141494751, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585750579834, 1.8655762672424316, 1.394430160522461, 1.0773245096206665, 0.9378393888473511, 0.8425824046134949, 0.7776632308959961, 0.736241340637207, 0.6971188187599182, 0.6732122302055359, 0.644855797290802, 0.6276965141296387, 0.6100340485572815, 0.5899673104286194, 0.5746485590934753, 0.5484329462051392, 0.5425268411636353, 0.5357900857925415, 0.5214410424232483, 0.5127171874046326, 0.4895091950893402, 0.4932740032672882, 0.48551443219184875, 0.47113916277885437, 0.46571049094200134, 0.450914591550827, 0.438728004693985, 0.4414178729057312, 0.4245515465736389, 0.4182806611061096, 0.4126766324043274, 0.41352686285972595, 0.4031256139278412, 0.40064555406570435, 0.3982388377189636, 0.38566267490386963, 0.38400527834892273, 0.3741128146648407, 0.36422181129455566, 0.36170411109924316, 0.35991787910461426, 0.35666367411613464, 0.3521813750267029, 0.34583958983421326, 0.34736087918281555, 0.34181836247444153, 0.33650368452072144, 0.33141741156578064, 0.3230496346950531, 0.3225416839122772, 0.315096914768219, 0.3059031665325165, 0.3058394491672516, 0.3017319440841675, 0.29568877816200256, 0.2933836281299591, 0.28774771094322205, 0.2856961190700531, 0.2802303731441498, 0.2779994010925293, 0.274711549282074, 0.2719985842704773, 0.2586328387260437, 0.2598455548286438, 0.2622571289539337, 0.25739434361457825, 0.2502012252807617, 0.2544722855091095, 0.24556587636470795, 0.24580754339694977, 0.23948103189468384, 0.23949603736400604, 0.23484042286872864, 0.22871272265911102, 0.2256491780281067, 0.22479403018951416, 0.21744707226753235, 0.21390178799629211, 0.21272219717502594], "accuracy": [0.2785629332065582, 0.49451854825019836, 0.559899628162384, 0.6215823292732239, 0.6654338836669922, 0.6950204968452454, 0.7181349992752075, 0.7322678565979004, 0.7441553473472595, 0.7483819723129272, 0.7627789974212646, 0.7717606425285339, 0.7728173136711121, 0.78113853931427, 0.7882710099220276, 0.7993659973144531, 0.7976489067077637, 0.8074230551719666, 0.8128384351730347, 0.8198388814926147, 0.8212917447090149, 0.819970965385437, 0.8272355198860168, 0.8350284099578857, 0.8305375576019287, 0.8387266993522644, 0.846387505531311, 0.8433496356010437, 0.8504821062088013, 0.8524633646011353, 0.8535200357437134, 0.854708731174469, 0.856689989566803, 0.8551049828529358, 0.8593316674232483, 0.8615770936012268, 0.8628978729248047, 0.8702945709228516, 0.8691058158874512, 0.871879518032074, 0.8722757697105408, 0.8691058158874512, 0.8733324408531189, 0.8800686597824097, 0.8795403242111206, 0.8755778670310974, 0.8768987059593201, 0.8829745054244995, 0.8824461698532104, 0.8823140859603882, 0.887201189994812, 0.8897107243537903, 0.8889182209968567, 0.8927486538887024, 0.8902390599250793, 0.8953903317451477, 0.8980319499969482, 0.8976356983184814, 0.900409460067749, 0.89552241563797, 0.9025228023529053, 0.8989565372467041, 0.9056927561759949, 0.9085986018180847, 0.9030511379241943, 0.9066173434257507, 0.9101836085319519, 0.9083344340324402, 0.909259021282196, 0.9099194407463074, 0.9126931428909302, 0.9140139818191528, 0.9119006991386414, 0.9171839952468872, 0.9169198274612427, 0.9185048341751099, 0.9218068718910217, 0.9185048341751099, 0.9196935892105103], "val_loss": [2.033445358276367, 1.5042319297790527, 1.0271512269973755, 0.8147247433662415, 0.7278039455413818, 0.68117356300354, 0.6306353211402893, 0.5966841578483582, 0.5751398801803589, 0.5460951328277588, 0.5314993858337402, 0.509799063205719, 0.4957965612411499, 0.4792602062225342, 0.46671679615974426, 0.45267683267593384, 0.4441072940826416, 0.4356139600276947, 0.42943108081817627, 0.4255247414112091, 0.41811680793762207, 0.4163394272327423, 0.39929893612861633, 0.3969916105270386, 0.39089226722717285, 0.387652188539505, 0.3844633102416992, 0.3824205696582794, 0.3749690353870392, 0.3701930642127991, 0.36967378854751587, 0.36689504981040955, 0.3585263788700104, 0.3587398827075958, 0.36267170310020447, 0.3561091423034668, 0.35379692912101746, 0.3499273955821991, 0.34701839089393616, 0.3467637896537781, 0.3424672484397888, 0.33951225876808167, 0.3386255204677582, 0.34044384956359863, 0.33945050835609436, 0.33684298396110535, 0.3322163224220276, 0.33181649446487427, 0.32827115058898926, 0.3312568664550781, 0.3297465741634369, 0.3256674110889435, 0.3234780728816986, 0.32119208574295044, 0.3232716917991638, 0.3209094703197479, 0.31944912672042847, 0.3157532513141632, 0.3144265413284302, 0.31676045060157776, 0.31425556540489197, 0.3131799101829529, 0.3147056996822357, 0.3154993951320648, 0.31771615147590637, 0.31545644998550415, 0.3127000629901886, 0.31382524967193604, 0.31026333570480347, 0.3147730529308319, 0.30829918384552, 0.3107443153858185, 0.31316936016082764, 0.30297672748565674, 0.30325081944465637, 0.30436232686042786, 0.3072424829006195, 0.30681705474853516, 0.3061434030532837], "val_accuracy": [0.5526666641235352, 0.6666666865348816, 0.687333345413208, 0.7083333134651184, 0.731333315372467, 0.7446666955947876, 0.7606666684150696, 0.762666642665863, 0.7873333096504211, 0.7889999747276306, 0.7973333597183228, 0.8056666851043701, 0.8193333148956299, 0.8259999752044678, 0.8289999961853027, 0.8410000205039978, 0.8453333377838135, 0.8450000286102295, 0.8489999771118164, 0.847000002861023, 0.8516666889190674, 0.856333315372467, 0.859333336353302, 0.856333315372467, 0.8633333444595337, 0.8640000224113464, 0.8656666874885559, 0.8646666407585144, 0.8679999709129333, 0.8696666955947876, 0.8640000224113464, 0.8686666488647461, 0.8713333606719971, 0.8709999918937683, 0.8703333139419556, 0.8723333477973938, 0.871999979019165, 0.874666690826416, 0.8723333477973938, 0.8759999871253967, 0.8726666569709778, 0.875333309173584, 0.8790000081062317, 0.8756666779518127, 0.8726666569709778, 0.8769999742507935, 0.8796666860580444, 0.8796666860580444, 0.8806666731834412, 0.8793333172798157, 0.8813333511352539, 0.8840000033378601, 0.8840000033378601, 0.8843333125114441, 0.8809999823570251, 0.8856666684150696, 0.8866666555404663, 0.8833333253860474, 0.8866666555404663, 0.8843333125114441, 0.8856666684150696, 0.8880000114440918, 0.887333333492279, 0.8883333206176758, 0.8866666555404663, 0.8896666765213013, 0.8863333463668823, 0.8853333592414856, 0.890999972820282, 0.8870000243186951, 0.8883333206176758, 0.8883333206176758, 0.8916666507720947, 0.8939999938011169, 0.8896666765213013, 0.8916666507720947, 0.890999972820282, 0.8926666378974915, 0.8913333415985107]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8677142858505249, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224292039871216, 1.8698278665542603, 1.4015381336212158, 1.0904563665390015, 0.9318581223487854, 0.8421716690063477, 0.7847386002540588, 0.7321536540985107, 0.7077698111534119, 0.6715115308761597, 0.6475458741188049, 0.6244953274726868, 0.6126360297203064, 0.5970020890235901, 0.5734966993331909, 0.5640727281570435, 0.5542454123497009, 0.5398725271224976, 0.52723628282547, 0.5102121233940125, 0.49954545497894287, 0.4877311885356903, 0.48806026577949524, 0.4702950119972229, 0.4707554876804352, 0.4563555121421814, 0.4566851854324341, 0.44404923915863037, 0.4400576651096344, 0.43455109000205994, 0.42732247710227966, 0.4237065315246582, 0.4128980338573456, 0.4094218313694, 0.399122029542923, 0.3944700360298157, 0.38363727927207947, 0.38735759258270264, 0.3758262097835541, 0.373687207698822, 0.3721124231815338, 0.3703707754611969, 0.3595326542854309, 0.35390639305114746, 0.35178813338279724, 0.3423292934894562, 0.34519925713539124, 0.3403206467628479, 0.33032068610191345, 0.33049362897872925, 0.32929158210754395, 0.3161759078502655, 0.3193899095058441, 0.3168583810329437, 0.3040308952331543, 0.3001762926578522, 0.3009549379348755, 0.286313533782959, 0.28661781549453735, 0.28473103046417236, 0.27956968545913696, 0.2736227810382843, 0.27464428544044495, 0.27863916754722595, 0.271095871925354, 0.26185739040374756, 0.2558663785457611, 0.26050934195518494, 0.25059959292411804], "accuracy": [0.27024170756340027, 0.4935939908027649, 0.5658433437347412, 0.6164311170578003, 0.6679434776306152, 0.6989829540252686, 0.7162858247756958, 0.7343811988830566, 0.7428345084190369, 0.7572315335273743, 0.7626469135284424, 0.7790252566337585, 0.780610203742981, 0.7837802171707153, 0.7976489067077637, 0.7993659973144531, 0.802800178527832, 0.805177628993988, 0.8146876096725464, 0.816008448600769, 0.8232730031013489, 0.828820526599884, 0.8297450542449951, 0.8322546482086182, 0.8368775844573975, 0.8416325449943542, 0.8391229510307312, 0.8444063067436218, 0.8450667262077332, 0.8502179384231567, 0.8491612672805786, 0.852859616279602, 0.8535200357437134, 0.8574824929237366, 0.8598600029945374, 0.8602562546730042, 0.8626337051391602, 0.863029956817627, 0.8660678863525391, 0.8692378997802734, 0.8685774803161621, 0.8660678863525391, 0.8709549307823181, 0.8729361891746521, 0.8742570281028748, 0.8799365758895874, 0.8790120482444763, 0.8804649114608765, 0.8815215826034546, 0.8836349248886108, 0.8850878477096558, 0.8861445188522339, 0.8856161832809448, 0.8862766027450562, 0.89552241563797, 0.8910315632820129, 0.8934090733528137, 0.8965790271759033, 0.9025228023529053, 0.9017302989959717, 0.9001452922821045, 0.9070135951042175, 0.9030511379241943, 0.9009377956390381, 0.9045040011405945, 0.9088627696037292, 0.9104477763175964, 0.9079381823539734, 0.9091269373893738], "val_loss": [2.037310838699341, 1.5105973482131958, 1.0376274585723877, 0.823981761932373, 0.7416506409645081, 0.6898816823959351, 0.6435056328773499, 0.6120497584342957, 0.5861078500747681, 0.5667470693588257, 0.5481646060943604, 0.5359978675842285, 0.5212520956993103, 0.5084633231163025, 0.4966195523738861, 0.48910051584243774, 0.477261483669281, 0.4718436002731323, 0.4601743221282959, 0.45074811577796936, 0.4503478705883026, 0.43842536211013794, 0.42983007431030273, 0.428668737411499, 0.42598047852516174, 0.4234652519226074, 0.4140486717224121, 0.41462504863739014, 0.4069695770740509, 0.4003114700317383, 0.3973568081855774, 0.39574316143989563, 0.3899748623371124, 0.3871442973613739, 0.3842659592628479, 0.38312438130378723, 0.3784808814525604, 0.3768945038318634, 0.3777775168418884, 0.37087491154670715, 0.36829060316085815, 0.36445870995521545, 0.36704427003860474, 0.3633781671524048, 0.36077144742012024, 0.3612331449985504, 0.3565100133419037, 0.3562658727169037, 0.3554307520389557, 0.35617074370384216, 0.3499414026737213, 0.35166406631469727, 0.3427088260650635, 0.35184481739997864, 0.3432154059410095, 0.3377959728240967, 0.339730441570282, 0.3376104533672333, 0.342189222574234, 0.3442145586013794, 0.3402831256389618, 0.3365219831466675, 0.33283761143684387, 0.3312649726867676, 0.34444645047187805, 0.34327271580696106, 0.33517247438430786, 0.32778292894363403, 0.33142536878585815], "val_accuracy": [0.5653333067893982, 0.6636666655540466, 0.6840000152587891, 0.7096666693687439, 0.7243333458900452, 0.7369999885559082, 0.7586666941642761, 0.765666663646698, 0.7816666960716248, 0.7879999876022339, 0.79666668176651, 0.8009999990463257, 0.812333345413208, 0.812666654586792, 0.8143333196640015, 0.8230000138282776, 0.8289999961853027, 0.8240000009536743, 0.8336666822433472, 0.8389999866485596, 0.8360000252723694, 0.8420000076293945, 0.8460000157356262, 0.8476666808128357, 0.8413333296775818, 0.8476666808128357, 0.8493333458900452, 0.8493333458900452, 0.8529999852180481, 0.856333315372467, 0.8539999723434448, 0.8523333072662354, 0.859666645526886, 0.8583333492279053, 0.8579999804496765, 0.8640000224113464, 0.862333357334137, 0.8619999885559082, 0.8603333234786987, 0.8650000095367432, 0.8659999966621399, 0.8650000095367432, 0.862666666507721, 0.8676666617393494, 0.8690000176429749, 0.8700000047683716, 0.871666669845581, 0.8709999918937683, 0.8740000128746033, 0.8683333396911621, 0.875333309173584, 0.8736666440963745, 0.8759999871253967, 0.8730000257492065, 0.8766666650772095, 0.8786666393280029, 0.8799999952316284, 0.8803333044052124, 0.8763333559036255, 0.8769999742507935, 0.8786666393280029, 0.8793333172798157, 0.8826666474342346, 0.8836666941642761, 0.8769999742507935, 0.878333330154419, 0.8806666731834412, 0.8823333382606506, 0.8820000290870667]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 1, 0, 2, 0], [39, 39, 19], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 5, 4, 3, 5], [0, 2, 0, 3], [57, 13], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 4, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 33, 18]], "fitness": -0.15800000727176666, "mapping_values": [1, 11, 6, 5, 3, 5, 3, 2, 1, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.square(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.square(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))))", "other_info": {"loss": [110498947072.0, 185128026112.0, 186132742144.0, 179560005632.0, 180961902592.0, 193510424576.0, 180537065472.0, 188015017984.0, 181073985536.0, 179734888448.0, 183287660544.0, 179862110208.0, 178559664128.0, 179037028352.0, 176491724800.0, 187350302720.0, 181588246528.0, 182967910400.0], "accuracy": [0.109232597053051, 0.11979923397302628, 0.12178047746419907, 0.1146479994058609, 0.1212521493434906, 0.1158367469906807, 0.11887465417385101, 0.11702549457550049, 0.11887465417385101, 0.11649715900421143, 0.12495046854019165, 0.11636507511138916, 0.11728965491056442, 0.12112006545066833, 0.12270505726337433, 0.12178047746419907, 0.11979923397302628, 0.11861048638820648], "val_loss": [171286904832.0, 171233247232.0, 172535119872.0, 172545572864.0, 172442370048.0, 172441141248.0, 172435308544.0, 172434341888.0, 165482561536.0, 165482004480.0, 165480742912.0, 165480202240.0, 165552766976.0, 165552144384.0, 165536055296.0, 165535711232.0, 165533450240.0, 165530009600.0], "val_accuracy": [0.16733333468437195, 0.16766667366027832, 0.16466666758060455, 0.16466666758060455, 0.1679999977350235, 0.16833333671092987, 0.16833333671092987, 0.16833333671092987, 0.16833333671092987, 0.16866666078567505, 0.16866666078567505, 0.16866666078567505, 0.1693333387374878, 0.1693333387374878, 0.16899999976158142, 0.16899999976158142, 0.16899999976158142, 0.16899999976158142]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 8], [0, 2, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 2, 3], [73, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 9, 3, 6, 9, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 9, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 1, 2, 1, 1, 1, 11, 7, 4, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), beta)), beta), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))))", "other_info": {"loss": [2.303246259689331, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 0, 3, 0, 4, 3, 1], [0, 1, 2, 2, 0, 2, 1], [39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 0], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [3], [2], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 4, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 9, 7, 2, 1, 0, 1, 1, 2, 1, 1, 0, 21, 11, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.math.negative(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), grad)), grad), tf.math.multiply(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), alpha))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.pow(sigma, tf.math.subtract(grad, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), alpha))), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 13], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 2, 5, 0, 3, 5, 1, 5], [0, 2, 0, 1], [16, 91], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 3, 6, 8, 2, 4, 9, 4, 2, 8], [0, 0, 0, 3, 0, 0, 4, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 12, 8, 4, 2, 2, 1, 1, 1, 16, 9, 7, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.square(beta), tf.math.subtract(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))", "other_info": {"loss": [2.303874969482422, 2.3025901317596436, 2.30259108543396, 2.3025898933410645, 2.3025898933410645, 2.3025901317596436, 2.3025896549224854, 2.3025896549224854, 2.3025906085968018, 2.302591562271118, 2.3025894165039062, 2.302591562271118, 2.30259370803833, 2.30259108543396], "accuracy": [0.09351472556591034, 0.09945846349000931, 0.09549596905708313, 0.09879804402589798, 0.09959053993225098, 0.09377889335155487, 0.10011887550354004, 0.09615638852119446, 0.09787346422672272, 0.09351472556591034, 0.09509972482919693, 0.09285431355237961, 0.10011887550354004, 0.09826971590518951], "val_loss": [2.3025870323181152, 2.3025870323181152, 2.302586555480957, 2.3025870323181152, 2.302586317062378, 2.3025875091552734, 2.3025870323181152, 2.3025870323181152, 2.302586555480957, 2.3025872707366943, 2.3025879859924316, 2.3025882244110107, 2.3025879859924316, 2.3025875091552734], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09966666996479034, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}]