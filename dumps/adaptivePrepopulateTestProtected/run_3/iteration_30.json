[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.87628573179245, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221153497695923, 1.8690768480300903, 1.3930829763412476, 1.0920813083648682, 0.946754515171051, 0.8386176228523254, 0.7666530013084412, 0.7169585227966309, 0.6927855014801025, 0.6578141450881958, 0.6284602284431458, 0.6175082921981812, 0.5932229161262512, 0.5866845846176147, 0.5698589086532593, 0.5537236928939819, 0.5400969386100769, 0.5237241387367249, 0.5110511779785156, 0.4987642467021942, 0.4859139025211334, 0.48274683952331543, 0.4702848792076111, 0.46559596061706543, 0.4571192264556885, 0.45048508048057556, 0.43323010206222534, 0.43672871589660645, 0.4228549599647522, 0.4158686399459839, 0.40923213958740234, 0.3978442847728729, 0.3938561677932739, 0.39290058612823486, 0.3881992995738983, 0.372427374124527, 0.3708527982234955, 0.3674342930316925, 0.3639999032020569, 0.3603408634662628, 0.34736937284469604, 0.34856680035591125, 0.3419991731643677, 0.3314146399497986, 0.33113908767700195, 0.3256821036338806, 0.32241684198379517, 0.31129369139671326, 0.31209611892700195, 0.31315377354621887, 0.29969727993011475, 0.30303266644477844, 0.2969401776790619, 0.2884080111980438, 0.2830028831958771, 0.2803061902523041, 0.284909725189209, 0.2756250500679016, 0.27255335450172424, 0.267034113407135, 0.26680734753608704, 0.26125890016555786, 0.25913572311401367, 0.2510053515434265, 0.24825863540172577, 0.2431088238954544, 0.24655894935131073], "accuracy": [0.27077004313468933, 0.488971084356308, 0.5671641826629639, 0.6252806782722473, 0.6592260003089905, 0.698718786239624, 0.7232862114906311, 0.7390040755271912, 0.7467969655990601, 0.7652885913848877, 0.7759873270988464, 0.7729493975639343, 0.7843085527420044, 0.7873464822769165, 0.7947431206703186, 0.7976489067077637, 0.8076872229576111, 0.8117818236351013, 0.8136309385299683, 0.8247259259223938, 0.8227446675300598, 0.8274996876716614, 0.8329150676727295, 0.829216718673706, 0.8379341959953308, 0.8426892161369324, 0.8479725122451782, 0.8446704745292664, 0.8507462739944458, 0.8500858545303345, 0.8543124794960022, 0.8582749962806702, 0.8609166741371155, 0.86118084192276, 0.8593316674232483, 0.8659358024597168, 0.8634262084960938, 0.872407853603363, 0.8688416481018066, 0.8714832663536072, 0.8737286925315857, 0.8730682730674744, 0.8749174475669861, 0.8821820020675659, 0.8799365758895874, 0.8815215826034546, 0.8837670087814331, 0.8878615498542786, 0.8838990926742554, 0.8853520154953003, 0.891559898853302, 0.8865407705307007, 0.8905032277107239, 0.8963148593902588, 0.896446943283081, 0.8969752788543701, 0.8951261639595032, 0.9002773761749268, 0.89988112449646, 0.8986923694610596, 0.901862382888794, 0.9029190540313721, 0.9019944667816162, 0.9062210917472839, 0.9074098467826843, 0.9082023501396179, 0.9084665179252625], "val_loss": [2.033933639526367, 1.5043776035308838, 1.0385841131210327, 0.8348872661590576, 0.748683512210846, 0.6962888240814209, 0.6452283263206482, 0.6097168326377869, 0.5908951163291931, 0.5654791593551636, 0.5485540628433228, 0.5308454632759094, 0.5217159986495972, 0.5026088356971741, 0.4924180805683136, 0.4941955506801605, 0.47913697361946106, 0.46788424253463745, 0.4600522518157959, 0.45553308725357056, 0.4523840844631195, 0.45103052258491516, 0.4417187571525574, 0.43125733733177185, 0.42781078815460205, 0.4263964891433716, 0.4191243350505829, 0.41350650787353516, 0.4158003032207489, 0.4085052013397217, 0.4044939875602722, 0.3971168100833893, 0.39628612995147705, 0.39976948499679565, 0.3952869176864624, 0.3888694643974304, 0.3912425935268402, 0.3875867426395416, 0.38649430871009827, 0.3814649283885956, 0.38066309690475464, 0.37854698300361633, 0.3797750174999237, 0.3766616880893707, 0.37332388758659363, 0.3710525631904602, 0.36949723958969116, 0.37775883078575134, 0.36838436126708984, 0.3662301003932953, 0.36757656931877136, 0.36328125, 0.36480098962783813, 0.3676953911781311, 0.3622332215309143, 0.36552929878234863, 0.35753536224365234, 0.368220716714859, 0.3614383041858673, 0.3567075729370117, 0.3559085726737976, 0.35341039299964905, 0.35565683245658875, 0.3598191440105438, 0.3541577160358429, 0.35910654067993164, 0.356111079454422], "val_accuracy": [0.5270000100135803, 0.6653333306312561, 0.6803333163261414, 0.7123333215713501, 0.734666645526886, 0.7536666393280029, 0.7680000066757202, 0.7770000100135803, 0.7826666831970215, 0.793666660785675, 0.7990000247955322, 0.8090000152587891, 0.8040000200271606, 0.8149999976158142, 0.8186666369438171, 0.8149999976158142, 0.8223333358764648, 0.8259999752044678, 0.8303333520889282, 0.8316666483879089, 0.8326666951179504, 0.8306666612625122, 0.8346666693687439, 0.8429999947547913, 0.8423333168029785, 0.8420000076293945, 0.8479999899864197, 0.8500000238418579, 0.8456666469573975, 0.8443333506584167, 0.8479999899864197, 0.8539999723434448, 0.8560000061988831, 0.8486666679382324, 0.8513333201408386, 0.8603333234786987, 0.8546666502952576, 0.8569999933242798, 0.8569999933242798, 0.862333357334137, 0.8629999756813049, 0.8600000143051147, 0.8629999756813049, 0.862666666507721, 0.8650000095367432, 0.8643333315849304, 0.8629999756813049, 0.8636666536331177, 0.8679999709129333, 0.8650000095367432, 0.8683333396911621, 0.8690000176429749, 0.8683333396911621, 0.8666666746139526, 0.8703333139419556, 0.8686666488647461, 0.8736666440963745, 0.8679999709129333, 0.8706666827201843, 0.8709999918937683, 0.8730000257492065, 0.8743333220481873, 0.871999979019165, 0.8733333349227905, 0.8740000128746033, 0.8693333268165588, 0.8740000128746033]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8759999871253967, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2236177921295166, 1.8678134679794312, 1.3911473751068115, 1.0911914110183716, 0.939166784286499, 0.8406006693840027, 0.7677450776100159, 0.7310236096382141, 0.6871815919876099, 0.6593660712242126, 0.6375833749771118, 0.6006481647491455, 0.603517472743988, 0.5754594802856445, 0.5642299056053162, 0.5478143692016602, 0.5363652110099792, 0.516363799571991, 0.5023934841156006, 0.49571266770362854, 0.49073994159698486, 0.4798901677131653, 0.4719010293483734, 0.46433311700820923, 0.4508499205112457, 0.4424644410610199, 0.4465043842792511, 0.42763206362724304, 0.42685744166374207, 0.4165972173213959, 0.40817537903785706, 0.40072983503341675, 0.394822895526886, 0.38599836826324463, 0.3868936598300934, 0.3793075382709503, 0.3759590983390808, 0.3712577521800995, 0.36459600925445557, 0.35862797498703003, 0.35430994629859924, 0.34480994939804077, 0.3413515090942383, 0.3349197506904602, 0.34086138010025024, 0.33308786153793335, 0.32645297050476074, 0.3170304298400879, 0.311801016330719, 0.3082039952278137, 0.3046635389328003, 0.29114916920661926, 0.2921544909477234, 0.28860437870025635, 0.2967015206813812, 0.2824200689792633, 0.2768756151199341, 0.2772303819656372, 0.2760688066482544, 0.26209577918052673, 0.2607495188713074, 0.2571547329425812, 0.2525028884410858, 0.25046807527542114, 0.24607518315315247, 0.24910065531730652, 0.23929756879806519, 0.23655351996421814, 0.23219725489616394, 0.22975046932697296, 0.2301604002714157, 0.22852455079555511, 0.2196299284696579, 0.21574699878692627], "accuracy": [0.2728833854198456, 0.4913485646247864, 0.5653150081634521, 0.6207898855209351, 0.6609430909156799, 0.6936996579170227, 0.7231541275978088, 0.7317395210266113, 0.748249888420105, 0.7609298825263977, 0.7660810947418213, 0.7819310426712036, 0.7803460359573364, 0.7866860628128052, 0.7955356240272522, 0.7985734939575195, 0.8039889335632324, 0.8124422430992126, 0.82683926820755, 0.8247259259223938, 0.8224804997444153, 0.8274996876716614, 0.828820526599884, 0.834632158279419, 0.8417646288871765, 0.8372738361358643, 0.8417646288871765, 0.8506141901016235, 0.8466516733169556, 0.8500858545303345, 0.8516708612442017, 0.8561616539955139, 0.8597279191017151, 0.8634262084960938, 0.8643507957458496, 0.8677849769592285, 0.8658037185668945, 0.8665962219238281, 0.8668603897094727, 0.8751816153526306, 0.8741249442100525, 0.8732003569602966, 0.8787478804588318, 0.8782195448875427, 0.878351628780365, 0.8795403242111206, 0.880729079246521, 0.8854840993881226, 0.8865407705307007, 0.8891823887825012, 0.8901069760322571, 0.8947299122810364, 0.8922203183174133, 0.8948619961738586, 0.8927486538887024, 0.9006736278533936, 0.89988112449646, 0.901862382888794, 0.8985602855682373, 0.9068815112113953, 0.9059569239616394, 0.9079381823539734, 0.9070135951042175, 0.9074098467826843, 0.9113723635673523, 0.9108440279960632, 0.915070652961731, 0.9148064851760864, 0.9138818979263306, 0.9178444147109985, 0.9181085824966431, 0.9182406663894653, 0.9192973375320435, 0.9203540086746216], "val_loss": [2.0424575805664062, 1.5200276374816895, 1.0481669902801514, 0.8438538312911987, 0.7597888708114624, 0.7003281116485596, 0.6519040465354919, 0.6154369711875916, 0.5903936624526978, 0.5606181025505066, 0.5442490577697754, 0.5253210067749023, 0.515999972820282, 0.5060765743255615, 0.4881499707698822, 0.47962453961372375, 0.4763563275337219, 0.4583386778831482, 0.45542725920677185, 0.4495517611503601, 0.4383700489997864, 0.4367651045322418, 0.42581042647361755, 0.42587167024612427, 0.4215356409549713, 0.41300660371780396, 0.40834861993789673, 0.40662410855293274, 0.3976578712463379, 0.39305728673934937, 0.3919043242931366, 0.38716185092926025, 0.37957704067230225, 0.3848285377025604, 0.3791749179363251, 0.37417611479759216, 0.3768386244773865, 0.36987829208374023, 0.36495351791381836, 0.3645842373371124, 0.3627302348613739, 0.35977795720100403, 0.35586848855018616, 0.36104488372802734, 0.3604494631290436, 0.3508273661136627, 0.3503742218017578, 0.35528796911239624, 0.3431343138217926, 0.3441668152809143, 0.34271660447120667, 0.34302425384521484, 0.34321925044059753, 0.335037499666214, 0.33976152539253235, 0.33680978417396545, 0.3347136378288269, 0.33486559987068176, 0.3327738344669342, 0.3321128189563751, 0.33088040351867676, 0.3278045356273651, 0.3269675374031067, 0.33105534315109253, 0.32605212926864624, 0.3260347843170166, 0.32939380407333374, 0.32473307847976685, 0.32214444875717163, 0.32295241951942444, 0.3234317898750305, 0.3266085684299469, 0.3234076201915741, 0.31915828585624695], "val_accuracy": [0.5590000152587891, 0.6586666703224182, 0.687666654586792, 0.7096666693687439, 0.7260000109672546, 0.7473333477973938, 0.7566666603088379, 0.7703333497047424, 0.7820000052452087, 0.7906666398048401, 0.8016666769981384, 0.8076666593551636, 0.8146666884422302, 0.815666675567627, 0.8203333616256714, 0.8303333520889282, 0.8273333311080933, 0.8349999785423279, 0.8353333473205566, 0.8360000252723694, 0.8429999947547913, 0.8420000076293945, 0.8426666855812073, 0.8453333377838135, 0.8479999899864197, 0.8489999771118164, 0.8539999723434448, 0.8529999852180481, 0.8560000061988831, 0.8610000014305115, 0.8606666922569275, 0.8603333234786987, 0.8636666536331177, 0.862333357334137, 0.8663333058357239, 0.862333357334137, 0.8646666407585144, 0.8669999837875366, 0.8676666617393494, 0.8679999709129333, 0.8676666617393494, 0.8679999709129333, 0.8683333396911621, 0.8643333315849304, 0.8690000176429749, 0.8709999918937683, 0.8726666569709778, 0.8706666827201843, 0.8730000257492065, 0.8756666779518127, 0.8759999871253967, 0.8730000257492065, 0.875, 0.8793333172798157, 0.874666690826416, 0.8766666650772095, 0.8803333044052124, 0.8799999952316284, 0.8766666650772095, 0.8826666474342346, 0.8816666603088379, 0.8843333125114441, 0.8803333044052124, 0.8773333430290222, 0.8849999904632568, 0.8836666941642761, 0.8833333253860474, 0.8806666731834412, 0.890999972820282, 0.8883333206176758, 0.887666642665863, 0.8826666474342346, 0.8803333044052124, 0.8893333077430725]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [4, 2, 3, 0, 3, 7, 6, 1, 4, 2, 1, 9, 7, 3, 8, 8, 9, 5, 3, 2, 1, 3, 7, 7, 9, 2, 3], [0, 1, 0, 2, 1, 0, 3, 0, 0, 3, 1, 2, 2, 2, 1, 2, 1, 1], [39, 39, 21, 57, 31, 84, 57, 9], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 2, 3, 0, 3, 3, 9, 9], [0, 2, 0, 3], [16, 16, 68, 72], [0, 1], [0], [0], [27], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 4, 3, 6, 8, 1, 4, 1, 4, 2, 8, 9], [0, 0, 0, 3, 0, 4, 3, 1, 2, 0], [16, 99, 96, 64, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(tf.math.divide_no_nan(tf.math.subtract(alpha, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(tf.math.subtract(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.multiply(tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.subtract(grad, alpha)), grad)))), tf.math.multiply(tf.math.add(grad, grad), tf.math.add(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), alpha)))), tf.math.add(grad, tf.math.multiply(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.pow(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.pow(sigma, tf.math.subtract(tf.math.pow(tf.math.add(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), grad), sigma), tf.math.sqrt(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), alpha)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}, "mapping_values": [1, 45, 27, 18, 8, 11, 8, 3, 4, 2, 1, 1, 1, 21, 12, 9, 5], "tree_depth": 23}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1], [0, 6, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [9, 2, 3, 0, 3, 5], [0, 2, 0, 3], [81, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 2, 3, 6, 1, 1, 4, 9, 4, 2, 8, 3], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 75, 49, 53, 16]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 1, 1, 0, 1, 2, 1, 1, 1, 22, 12, 10, 7], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), sigma))), tf.math.sqrt(tf.math.multiply(alpha, beta))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [320409344.0, 2041930240.0, 3401493248.0, 3992053504.0, 4257031936.0, 4391223808.0], "accuracy": [0.09734513610601425, 0.1002509593963623, 0.10011887550354004, 0.10210011899471283, 0.10117553919553757, 0.09589222073554993], "val_loss": [948067712.0, 2277839104.0, 2917467392.0, 3159077888.0, 3244008704.0, 3273176832.0], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0], [0, 9, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [6, 3, 3, 6, 3, 1, 4, 4, 4, 2, 8, 9, 3, 0, 9, 4, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 4, 7], [16, 99, 96, 99, 61, 1, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 2, 2, 0, 1, 2, 1, 1, 1, 28, 17, 11, 7], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), sigma), tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), alpha), beta), tf.math.multiply(tf.math.negative(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.sqrt(grad), grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 1, 0, 2], [39, 56], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 1, 3, 0, 3, 5, 1, 3, 6, 0, 0, 1], [0, 2, 0, 3, 5, 4, 0, 0], [16, 16, 80, 66], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.09371428936719894, "mapping_values": [1, 1, 0, 1, 0, 20, 12, 8, 4, 2, 1, 1, 1, 20, 10, 10, 6], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(beta), tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.negative(grad), tf.math.negative(tf.math.subtract(grad, grad))), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))))), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.309297561645508, 2.310821533203125, 2.3103420734405518, 2.308889389038086, 2.307905673980713, 2.3094301223754883, 2.3086886405944824, 2.307929277420044, 2.3086400032043457, 2.3080427646636963, 2.3080108165740967, 2.306408166885376], "accuracy": [0.09285431355237961, 0.09166556596755981, 0.09179764986038208, 0.08809932321310043, 0.09840179979801178, 0.08770307898521423, 0.09126931428909302, 0.09074098616838455, 0.09285431355237961, 0.09100515395402908, 0.09615638852119446, 0.09655263274908066], "val_loss": [2.3083038330078125, 2.308213233947754, 2.3081212043762207, 2.308021306991577, 2.307913064956665, 2.307795524597168, 2.307668924331665, 2.3075337409973145, 2.3073906898498535, 2.3072400093078613, 2.307081460952759, 2.3069167137145996], "val_accuracy": [0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08900000154972076, 0.08933333307504654, 0.08933333307504654, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231]}}]