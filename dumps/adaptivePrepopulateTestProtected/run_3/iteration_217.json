[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8808571696281433, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223215103149414, 1.8640538454055786, 1.390925645828247, 1.0857504606246948, 0.9175904989242554, 0.8278062343597412, 0.75929194688797, 0.7150763869285583, 0.6742342710494995, 0.6527069211006165, 0.6226239800453186, 0.6030511260032654, 0.5812473893165588, 0.5698184370994568, 0.5517233610153198, 0.5318202376365662, 0.5262278914451599, 0.5063096284866333, 0.4941454231739044, 0.4912639260292053, 0.47673994302749634, 0.46776485443115234, 0.45580968260765076, 0.45419755578041077, 0.4471202790737152, 0.4368197023868561, 0.4238806366920471, 0.41453513503074646, 0.41017231345176697, 0.4062040150165558, 0.40386685729026794, 0.3953916132450104, 0.39355871081352234, 0.3836102783679962, 0.37635838985443115, 0.3735085725784302, 0.363672137260437, 0.35395750403404236, 0.35972025990486145, 0.34721699357032776, 0.3442964553833008, 0.335767537355423, 0.3300938904285431, 0.32407090067863464, 0.32112976908683777, 0.3181473910808563, 0.31370431184768677, 0.3087446987628937, 0.3084625005722046, 0.30203962326049805, 0.293395072221756, 0.2889169156551361, 0.2914500832557678, 0.28307828307151794, 0.28207361698150635, 0.2786792516708374, 0.27818819880485535, 0.26387521624565125], "accuracy": [0.27222296595573425, 0.5027077198028564, 0.5674283504486084, 0.6277902722358704, 0.6709813475608826, 0.7058512568473816, 0.7269845604896545, 0.7415136694908142, 0.7586844563484192, 0.7617223858833313, 0.783119797706604, 0.7832518815994263, 0.7926297783851624, 0.8001585006713867, 0.807158887386322, 0.8103289008140564, 0.8133667707443237, 0.8190463781356812, 0.8247259259223938, 0.8271034359931946, 0.8298771381378174, 0.8341038227081299, 0.8366134166717529, 0.839519202709198, 0.8404437899589539, 0.848368763923645, 0.8515387773513794, 0.8564258217811584, 0.8529917001724243, 0.8585391640663147, 0.8515387773513794, 0.863558292388916, 0.8615770936012268, 0.8640866279602051, 0.8652753829956055, 0.8671245574951172, 0.8720116019248962, 0.8771628737449646, 0.8705587387084961, 0.876370370388031, 0.8787478804588318, 0.8784837126731873, 0.8828424215316772, 0.8842953443527222, 0.884691596031189, 0.8840311765670776, 0.8891823887825012, 0.8894465565681458, 0.8899748921394348, 0.8932769894599915, 0.8945978283882141, 0.8980319499969482, 0.896446943283081, 0.8988244533538818, 0.9019944667816162, 0.901862382888794, 0.8985602855682373, 0.904768168926239], "val_loss": [2.039530038833618, 1.5154659748077393, 1.039007544517517, 0.8366694450378418, 0.7400773167610168, 0.6859951019287109, 0.6454513669013977, 0.6114123463630676, 0.5899704694747925, 0.5724708437919617, 0.5533395409584045, 0.5345184803009033, 0.5225448608398438, 0.5092709064483643, 0.500229001045227, 0.49316829442977905, 0.480929970741272, 0.4729439616203308, 0.4688349962234497, 0.4563703238964081, 0.45455607771873474, 0.44636544585227966, 0.44144734740257263, 0.4332112669944763, 0.42851945757865906, 0.4277913272380829, 0.4196922183036804, 0.41600528359413147, 0.4114539325237274, 0.4113328456878662, 0.4059373438358307, 0.4033544063568115, 0.40210506319999695, 0.3963744640350342, 0.39264819025993347, 0.39112263917922974, 0.384288489818573, 0.383841872215271, 0.3804401755332947, 0.3786342442035675, 0.3777892291545868, 0.37486007809638977, 0.37355443835258484, 0.37450093030929565, 0.36811116337776184, 0.3697490096092224, 0.3684578537940979, 0.370509535074234, 0.36476588249206543, 0.36312252283096313, 0.361527681350708, 0.36036449670791626, 0.3581533133983612, 0.3633516728878021, 0.35499346256256104, 0.3547135293483734, 0.35882508754730225, 0.35363712906837463], "val_accuracy": [0.5473333597183228, 0.6496666669845581, 0.6846666932106018, 0.6959999799728394, 0.7279999852180481, 0.7450000047683716, 0.7580000162124634, 0.7713333368301392, 0.7763333320617676, 0.7816666960716248, 0.7963333129882812, 0.8109999895095825, 0.8116666674613953, 0.8113333582878113, 0.8116666674613953, 0.8186666369438171, 0.8259999752044678, 0.8236666917800903, 0.828000009059906, 0.8360000252723694, 0.8323333263397217, 0.8373333215713501, 0.8373333215713501, 0.8366666436195374, 0.843666672706604, 0.843999981880188, 0.846666693687439, 0.8483333587646484, 0.8493333458900452, 0.847000002861023, 0.8476666808128357, 0.8496666550636292, 0.8510000109672546, 0.8519999980926514, 0.8553333282470703, 0.8556666374206543, 0.8583333492279053, 0.859333336353302, 0.8560000061988831, 0.862333357334137, 0.8636666536331177, 0.859666645526886, 0.8636666536331177, 0.8643333315849304, 0.8653333187103271, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.8709999918937683, 0.8690000176429749, 0.8686666488647461, 0.8653333187103271, 0.8733333349227905, 0.8679999709129333, 0.8709999918937683, 0.8706666827201843, 0.8703333139419556, 0.8693333268165588]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8745714426040649, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2202484607696533, 1.8606573343276978, 1.386085033416748, 1.0937374830245972, 0.9355300664901733, 0.8416742086410522, 0.7712761759757996, 0.7325738072395325, 0.6899433135986328, 0.6535900235176086, 0.6351337432861328, 0.6145726442337036, 0.6008090972900391, 0.5829184055328369, 0.5700453519821167, 0.5482088327407837, 0.5456219911575317, 0.5303369164466858, 0.5150405764579773, 0.5055859088897705, 0.4899151921272278, 0.48833537101745605, 0.47764796018600464, 0.47352808713912964, 0.4588720500469208, 0.45473816990852356, 0.45035213232040405, 0.44271329045295715, 0.4325745105743408, 0.42499157786369324, 0.4158209264278412, 0.41555461287498474, 0.4106277525424957, 0.40570539236068726, 0.39690589904785156, 0.3902466893196106, 0.39395880699157715, 0.38128629326820374, 0.37244901061058044, 0.36885350942611694, 0.3662859797477722, 0.36075517535209656, 0.35500723123550415, 0.3541116714477539, 0.3380032777786255, 0.3414011001586914, 0.3340053856372833, 0.32960256934165955, 0.3315889537334442, 0.3212241232395172, 0.31344547867774963, 0.3156687021255493, 0.30622658133506775, 0.30782318115234375, 0.30278223752975464, 0.3054407835006714, 0.29632583260536194, 0.2955765128135681, 0.28357481956481934, 0.2780868411064148, 0.2737216651439667, 0.2703809142112732, 0.27238157391548157, 0.2648751139640808, 0.2677386999130249, 0.26363521814346313, 0.2569359838962555, 0.24995633959770203, 0.24976570904254913, 0.24995850026607513], "accuracy": [0.2805441915988922, 0.4896314740180969, 0.5639941692352295, 0.6164311170578003, 0.6637167930603027, 0.7021529674530029, 0.7205125093460083, 0.7302865982055664, 0.7512878179550171, 0.7637035846710205, 0.767930269241333, 0.776251494884491, 0.7812706232070923, 0.7911768555641174, 0.7961959838867188, 0.8050455451011658, 0.8045172095298767, 0.8067626357078552, 0.817461371421814, 0.8175934553146362, 0.8211596608161926, 0.8232730031013489, 0.82683926820755, 0.8329150676727295, 0.8337075710296631, 0.8411042094230652, 0.8348963260650635, 0.8405758738517761, 0.8455950617790222, 0.8506141901016235, 0.8533879518508911, 0.8502179384231567, 0.8511425256729126, 0.8537842035293579, 0.8557654023170471, 0.8625016212463379, 0.8549728989601135, 0.8610487580299377, 0.8638224601745605, 0.8656716346740723, 0.8671245574951172, 0.8681812286376953, 0.8739928603172302, 0.8725399374961853, 0.8796724081039429, 0.8758420348167419, 0.880729079246521, 0.8799365758895874, 0.8825782537460327, 0.8854840993881226, 0.8816536664962769, 0.8828424215316772, 0.8911636471748352, 0.885219931602478, 0.8905032277107239, 0.8849557638168335, 0.8914278149604797, 0.8930128216743469, 0.8994848728179932, 0.8992207050323486, 0.8996169567108154, 0.89988112449646, 0.9009377956390381, 0.9038436412811279, 0.9015982151031494, 0.9070135951042175, 0.9033153057098389, 0.9134856462478638, 0.9076740145683289, 0.9095231890678406], "val_loss": [2.0332562923431396, 1.5057412385940552, 1.0321614742279053, 0.8263628482818604, 0.734370768070221, 0.6727773547172546, 0.6292109489440918, 0.593479573726654, 0.5694586038589478, 0.5466925501823425, 0.536594033241272, 0.5174451470375061, 0.5024088025093079, 0.4943072497844696, 0.4895232021808624, 0.46972599625587463, 0.46395328640937805, 0.4565829336643219, 0.44935253262519836, 0.44398218393325806, 0.437347412109375, 0.4284694790840149, 0.4251115024089813, 0.42220503091812134, 0.416087806224823, 0.4090503752231598, 0.41183194518089294, 0.40416648983955383, 0.3959660530090332, 0.39328885078430176, 0.3913520574569702, 0.39714208245277405, 0.38655802607536316, 0.3825260400772095, 0.37797749042510986, 0.3798058331012726, 0.37425220012664795, 0.3757787346839905, 0.3707828223705292, 0.36771607398986816, 0.36914360523223877, 0.3654943108558655, 0.36359351873397827, 0.359887033700943, 0.35871362686157227, 0.3569619953632355, 0.3532628118991852, 0.35469546914100647, 0.35295963287353516, 0.349501371383667, 0.3507593274116516, 0.3442009389400482, 0.34570521116256714, 0.34586137533187866, 0.3462957441806793, 0.344088613986969, 0.3426560163497925, 0.35090771317481995, 0.3397640585899353, 0.34315410256385803, 0.3389051556587219, 0.3406176269054413, 0.3380327522754669, 0.3379264771938324, 0.33745381236076355, 0.3399489223957062, 0.339646577835083, 0.33886802196502686, 0.3396339416503906, 0.33725079894065857], "val_accuracy": [0.5519999861717224, 0.6663333177566528, 0.687333345413208, 0.7110000252723694, 0.7453333139419556, 0.7516666650772095, 0.7649999856948853, 0.7776666879653931, 0.7806666493415833, 0.7893333435058594, 0.7946666479110718, 0.815666675567627, 0.8080000281333923, 0.8176666498184204, 0.8199999928474426, 0.8266666531562805, 0.8363333344459534, 0.8309999704360962, 0.8376666903495789, 0.8366666436195374, 0.8429999947547913, 0.8493333458900452, 0.847000002861023, 0.8473333120346069, 0.8513333201408386, 0.856333315372467, 0.8573333621025085, 0.8586666584014893, 0.859666645526886, 0.8610000014305115, 0.8610000014305115, 0.8606666922569275, 0.8610000014305115, 0.8640000224113464, 0.8659999966621399, 0.8640000224113464, 0.8693333268165588, 0.8703333139419556, 0.8679999709129333, 0.8703333139419556, 0.8700000047683716, 0.8693333268165588, 0.8733333349227905, 0.875333309173584, 0.8713333606719971, 0.8726666569709778, 0.8759999871253967, 0.875, 0.8736666440963745, 0.8756666779518127, 0.8759999871253967, 0.8776666522026062, 0.8773333430290222, 0.8759999871253967, 0.8776666522026062, 0.8763333559036255, 0.8790000081062317, 0.8766666650772095, 0.8809999823570251, 0.8803333044052124, 0.8796666860580444, 0.8816666603088379, 0.8830000162124634, 0.8813333511352539, 0.8836666941642761, 0.8816666603088379, 0.8823333382606506, 0.8809999823570251, 0.8830000162124634, 0.8799999952316284]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 2, 0, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [6, 2, 3, 0, 3, 5], [0, 2, 0, 0], [16, 16, 64], [0, 1], [0], [0], [33], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [4, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.13199999928474426, "mapping_values": [1, 9, 5, 4, 2, 8, 4, 4, 3, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4947686195373535, 2.284238576889038, 2.304104804992676, 2.303088426589966, 2.252798318862915, 2.307525634765625, 2.304198980331421, 2.303351402282715, 2.30317759513855], "accuracy": [0.1982565075159073, 0.13551710546016693, 0.09826971590518951, 0.1006472036242485, 0.19138818979263306, 0.10157178342342377, 0.09602430462837219, 0.10289261490106583, 0.09945846349000931], "val_loss": [2.3040971755981445, 2.3042404651641846, 2.3027029037475586, 2.29917049407959, 2.3119688034057617, 2.304623603820801, 2.3029911518096924, 2.302588939666748, 2.3026134967803955], "val_accuracy": [0.09866666793823242, 0.09799999743700027, 0.09799999743700027, 0.1393333375453949, 0.10533333569765091, 0.10533333569765091, 0.09799999743700027, 0.09799999743700027, 0.10533333569765091]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 1], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 4, 9], [3, 2, 0, 3], [16, 16], [0, 1], [0], [0], [81], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 1, 3, 6, 8, 1, 1, 1, 4, 0, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 4], [16, 2, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 9, 6, 3, 2, 2, 1, 1, 1, 10, 5, 5, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(sigma, tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [3.079303503036499, 4.843233108520508, 6.104569435119629, 6.994723320007324, 7.791036605834961, 8.417927742004395], "accuracy": [0.10394927859306335, 0.10447761416435242, 0.09998679161071777, 0.10289261490106583, 0.09642054885625839, 0.09932637959718704], "val_loss": [3.445859432220459, 4.446100234985352, 5.209201335906982, 5.82757043838501, 6.349915981292725, 6.803767681121826], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 8, 3, 0, 3, 1], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 2, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [1], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 1, 4, 1, 5, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 30, 96, 99, 61, 75]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 2, 7, 4, 3, 2, 2, 1, 1, 0, 17, 9, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.subtract(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.math.subtract(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), sigma), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 9, 4, 3, 5], [0, 2, 0, 3], [55, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [6, 3, 2, 2, 8, 1, 4, 1, 4, 2, 8, 5, 9, 0, 6, 2, 5, 6, 8, 6], [0, 0, 4, 3, 0, 0, 3, 1, 2, 0, 4, 7, 3], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 6, 4, 2, 2, 2, 1, 1, 1, 33, 20, 13, 6], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.math.pow(tf.math.add(grad, tf.math.sqrt(sigma)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), sigma)), tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.math.square(tf.math.divide_no_nan(tf.math.sqrt(tf.math.divide_no_nan(grad, grad)), sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876]}}]