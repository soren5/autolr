[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8808571696281433, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223215103149414, 1.8640538454055786, 1.390925645828247, 1.0857504606246948, 0.9175904989242554, 0.8278062343597412, 0.75929194688797, 0.7150763869285583, 0.6742342710494995, 0.6527069211006165, 0.6226239800453186, 0.6030511260032654, 0.5812473893165588, 0.5698184370994568, 0.5517233610153198, 0.5318202376365662, 0.5262278914451599, 0.5063096284866333, 0.4941454231739044, 0.4912639260292053, 0.47673994302749634, 0.46776485443115234, 0.45580968260765076, 0.45419755578041077, 0.4471202790737152, 0.4368197023868561, 0.4238806366920471, 0.41453513503074646, 0.41017231345176697, 0.4062040150165558, 0.40386685729026794, 0.3953916132450104, 0.39355871081352234, 0.3836102783679962, 0.37635838985443115, 0.3735085725784302, 0.363672137260437, 0.35395750403404236, 0.35972025990486145, 0.34721699357032776, 0.3442964553833008, 0.335767537355423, 0.3300938904285431, 0.32407090067863464, 0.32112976908683777, 0.3181473910808563, 0.31370431184768677, 0.3087446987628937, 0.3084625005722046, 0.30203962326049805, 0.293395072221756, 0.2889169156551361, 0.2914500832557678, 0.28307828307151794, 0.28207361698150635, 0.2786792516708374, 0.27818819880485535, 0.26387521624565125], "accuracy": [0.27222296595573425, 0.5027077198028564, 0.5674283504486084, 0.6277902722358704, 0.6709813475608826, 0.7058512568473816, 0.7269845604896545, 0.7415136694908142, 0.7586844563484192, 0.7617223858833313, 0.783119797706604, 0.7832518815994263, 0.7926297783851624, 0.8001585006713867, 0.807158887386322, 0.8103289008140564, 0.8133667707443237, 0.8190463781356812, 0.8247259259223938, 0.8271034359931946, 0.8298771381378174, 0.8341038227081299, 0.8366134166717529, 0.839519202709198, 0.8404437899589539, 0.848368763923645, 0.8515387773513794, 0.8564258217811584, 0.8529917001724243, 0.8585391640663147, 0.8515387773513794, 0.863558292388916, 0.8615770936012268, 0.8640866279602051, 0.8652753829956055, 0.8671245574951172, 0.8720116019248962, 0.8771628737449646, 0.8705587387084961, 0.876370370388031, 0.8787478804588318, 0.8784837126731873, 0.8828424215316772, 0.8842953443527222, 0.884691596031189, 0.8840311765670776, 0.8891823887825012, 0.8894465565681458, 0.8899748921394348, 0.8932769894599915, 0.8945978283882141, 0.8980319499969482, 0.896446943283081, 0.8988244533538818, 0.9019944667816162, 0.901862382888794, 0.8985602855682373, 0.904768168926239], "val_loss": [2.039530038833618, 1.5154659748077393, 1.039007544517517, 0.8366694450378418, 0.7400773167610168, 0.6859951019287109, 0.6454513669013977, 0.6114123463630676, 0.5899704694747925, 0.5724708437919617, 0.5533395409584045, 0.5345184803009033, 0.5225448608398438, 0.5092709064483643, 0.500229001045227, 0.49316829442977905, 0.480929970741272, 0.4729439616203308, 0.4688349962234497, 0.4563703238964081, 0.45455607771873474, 0.44636544585227966, 0.44144734740257263, 0.4332112669944763, 0.42851945757865906, 0.4277913272380829, 0.4196922183036804, 0.41600528359413147, 0.4114539325237274, 0.4113328456878662, 0.4059373438358307, 0.4033544063568115, 0.40210506319999695, 0.3963744640350342, 0.39264819025993347, 0.39112263917922974, 0.384288489818573, 0.383841872215271, 0.3804401755332947, 0.3786342442035675, 0.3777892291545868, 0.37486007809638977, 0.37355443835258484, 0.37450093030929565, 0.36811116337776184, 0.3697490096092224, 0.3684578537940979, 0.370509535074234, 0.36476588249206543, 0.36312252283096313, 0.361527681350708, 0.36036449670791626, 0.3581533133983612, 0.3633516728878021, 0.35499346256256104, 0.3547135293483734, 0.35882508754730225, 0.35363712906837463], "val_accuracy": [0.5473333597183228, 0.6496666669845581, 0.6846666932106018, 0.6959999799728394, 0.7279999852180481, 0.7450000047683716, 0.7580000162124634, 0.7713333368301392, 0.7763333320617676, 0.7816666960716248, 0.7963333129882812, 0.8109999895095825, 0.8116666674613953, 0.8113333582878113, 0.8116666674613953, 0.8186666369438171, 0.8259999752044678, 0.8236666917800903, 0.828000009059906, 0.8360000252723694, 0.8323333263397217, 0.8373333215713501, 0.8373333215713501, 0.8366666436195374, 0.843666672706604, 0.843999981880188, 0.846666693687439, 0.8483333587646484, 0.8493333458900452, 0.847000002861023, 0.8476666808128357, 0.8496666550636292, 0.8510000109672546, 0.8519999980926514, 0.8553333282470703, 0.8556666374206543, 0.8583333492279053, 0.859333336353302, 0.8560000061988831, 0.862333357334137, 0.8636666536331177, 0.859666645526886, 0.8636666536331177, 0.8643333315849304, 0.8653333187103271, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.8709999918937683, 0.8690000176429749, 0.8686666488647461, 0.8653333187103271, 0.8733333349227905, 0.8679999709129333, 0.8709999918937683, 0.8706666827201843, 0.8703333139419556, 0.8693333268165588]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8722857236862183, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2243645191192627, 1.877025842666626, 1.4155093431472778, 1.1061546802520752, 0.9484117031097412, 0.85361248254776, 0.7806716561317444, 0.7293790578842163, 0.7039153575897217, 0.6721145510673523, 0.6419846415519714, 0.6155874133110046, 0.6009761095046997, 0.5771146416664124, 0.555493950843811, 0.5477566719055176, 0.5348135232925415, 0.5295029282569885, 0.5098356604576111, 0.5057753324508667, 0.4918143153190613, 0.47781649231910706, 0.46974316239356995, 0.46006181836128235, 0.45158401131629944, 0.4567149877548218, 0.43810904026031494, 0.43208047747612, 0.4309845566749573, 0.42321282625198364, 0.4062196910381317, 0.4042835533618927, 0.39032045006752014, 0.38913434743881226, 0.37450024485588074, 0.37648722529411316, 0.3738803267478943, 0.36439767479896545, 0.3627169728279114, 0.35714632272720337, 0.3562030792236328, 0.3416926860809326, 0.34534117579460144, 0.3343779742717743, 0.3379363715648651, 0.32794222235679626, 0.33072924613952637, 0.31612715125083923, 0.3174775242805481, 0.30888962745666504, 0.3045385777950287, 0.3015640079975128, 0.30811017751693726, 0.29294824600219727, 0.29570162296295166, 0.29037925601005554, 0.28075331449508667, 0.2767164707183838, 0.2752092182636261, 0.2697598934173584, 0.26663175225257874, 0.2632193863391876, 0.25505125522613525, 0.260250985622406, 0.2503903806209564, 0.24618645012378693, 0.24624590575695038, 0.23955482244491577, 0.23854218423366547, 0.2344256490468979, 0.23111602663993835, 0.2295040339231491, 0.2280728816986084, 0.2274918109178543, 0.2196073830127716, 0.2173730731010437, 0.21504920721054077, 0.2081892192363739, 0.2095165252685547, 0.2081771343946457, 0.2000606805086136, 0.20221801102161407, 0.19677284359931946, 0.19181573390960693, 0.19050633907318115], "accuracy": [0.2767137885093689, 0.4795931875705719, 0.5610883831977844, 0.6126006841659546, 0.6563201546669006, 0.6980583667755127, 0.7213049530982971, 0.7384757399559021, 0.7469290494918823, 0.7549861073493958, 0.7670056819915771, 0.7750627398490906, 0.7837802171707153, 0.7861577272415161, 0.7971205711364746, 0.7975168228149414, 0.8053097128868103, 0.8129705190658569, 0.8168009519577026, 0.819970965385437, 0.828292191028595, 0.8272355198860168, 0.8325188159942627, 0.8367455005645752, 0.8368775844573975, 0.8363492488861084, 0.8441421389579773, 0.8457271456718445, 0.8474441766738892, 0.8508783578872681, 0.8529917001724243, 0.8598600029945374, 0.8632941246032715, 0.8584070801734924, 0.8671245574951172, 0.8654074668884277, 0.8628978729248047, 0.8717474341392517, 0.8648791313171387, 0.8726720213890076, 0.870030403137207, 0.8813894987106323, 0.8790120482444763, 0.8812574148178101, 0.8779553771018982, 0.8791441321372986, 0.8809932470321655, 0.8883898854255676, 0.8869370222091675, 0.887597382068634, 0.8899748921394348, 0.8936732411384583, 0.8845595121383667, 0.8947299122810364, 0.8906353116035461, 0.8988244533538818, 0.8994848728179932, 0.8992207050323486, 0.9005415439605713, 0.9037115573883057, 0.9034473896026611, 0.9070135951042175, 0.9093911051750183, 0.9082023501396179, 0.9093911051750183, 0.9115044474601746, 0.9096552729606628, 0.9096552729606628, 0.9116365313529968, 0.9162594079971313, 0.9152027368545532, 0.9181085824966431, 0.9148064851760864, 0.9174481630325317, 0.9223352074623108, 0.9229956269264221, 0.9207502603530884, 0.9260335564613342, 0.9228635430335999, 0.9260335564613342, 0.9269581437110901, 0.9286752343177795, 0.9303922653198242, 0.9309206008911133, 0.9315810203552246], "val_loss": [2.0438270568847656, 1.526676058769226, 1.0444496870040894, 0.832780122756958, 0.7410686612129211, 0.6809372305870056, 0.6371577978134155, 0.6012724041938782, 0.582334578037262, 0.5546656847000122, 0.5326526761054993, 0.5152726173400879, 0.5030173063278198, 0.4949328601360321, 0.4783404469490051, 0.4704623520374298, 0.45877641439437866, 0.4499313533306122, 0.43846455216407776, 0.4344916045665741, 0.42888355255126953, 0.41905543208122253, 0.413825124502182, 0.4033944606781006, 0.40304797887802124, 0.4047698974609375, 0.3989812135696411, 0.3910669684410095, 0.39198657870292664, 0.3838399350643158, 0.3762855529785156, 0.3746795952320099, 0.37287604808807373, 0.36623963713645935, 0.3643753230571747, 0.360848069190979, 0.3586433231830597, 0.3547007739543915, 0.36213797330856323, 0.35047510266304016, 0.35890212655067444, 0.3549777567386627, 0.3441331684589386, 0.34835392236709595, 0.3443833887577057, 0.33829087018966675, 0.337351530790329, 0.3405792713165283, 0.3356177806854248, 0.3351544737815857, 0.33645620942115784, 0.33965975046157837, 0.3384661078453064, 0.32941368222236633, 0.3282109200954437, 0.3332003653049469, 0.3275074064731598, 0.3242500126361847, 0.324065238237381, 0.3242415487766266, 0.3254892826080322, 0.3252621591091156, 0.3261990547180176, 0.324829638004303, 0.3207099139690399, 0.32709866762161255, 0.3193378150463104, 0.3213323652744293, 0.32108375430107117, 0.3211905062198639, 0.31400272250175476, 0.3158254027366638, 0.3192287087440491, 0.31465959548950195, 0.3214544653892517, 0.3150124251842499, 0.31875354051589966, 0.3247899115085602, 0.31932124495506287, 0.31241706013679504, 0.3224402666091919, 0.3167147934436798, 0.31681665778160095, 0.3128187358379364, 0.3175908923149109], "val_accuracy": [0.5476666688919067, 0.659333348274231, 0.6896666884422302, 0.7166666388511658, 0.7360000014305115, 0.7556666731834412, 0.7596666812896729, 0.7720000147819519, 0.7836666703224182, 0.7910000085830688, 0.8013333082199097, 0.8046666383743286, 0.8146666884422302, 0.8153333067893982, 0.8220000267028809, 0.8243333101272583, 0.8323333263397217, 0.8336666822433472, 0.8396666646003723, 0.8453333377838135, 0.8393333554267883, 0.8446666598320007, 0.8443333506584167, 0.8510000109672546, 0.8493333458900452, 0.846666693687439, 0.8460000157356262, 0.8603333234786987, 0.846666693687439, 0.8579999804496765, 0.8613333106040955, 0.8566666841506958, 0.859333336353302, 0.8640000224113464, 0.8650000095367432, 0.8636666536331177, 0.8663333058357239, 0.8686666488647461, 0.8629999756813049, 0.8683333396911621, 0.8673333525657654, 0.8653333187103271, 0.8726666569709778, 0.8723333477973938, 0.8763333559036255, 0.8740000128746033, 0.8743333220481873, 0.875333309173584, 0.8786666393280029, 0.8803333044052124, 0.8766666650772095, 0.8790000081062317, 0.874666690826416, 0.878000020980835, 0.8806666731834412, 0.8786666393280029, 0.8809999823570251, 0.8840000033378601, 0.8823333382606506, 0.8813333511352539, 0.8849999904632568, 0.8813333511352539, 0.8823333382606506, 0.8823333382606506, 0.8863333463668823, 0.8849999904632568, 0.8889999985694885, 0.8863333463668823, 0.8853333592414856, 0.887333333492279, 0.8880000114440918, 0.890333354473114, 0.8899999856948853, 0.8893333077430725, 0.890333354473114, 0.8930000066757202, 0.8886666893959045, 0.890999972820282, 0.8896666765213013, 0.8949999809265137, 0.887666642665863, 0.8926666378974915, 0.8946666717529297, 0.8946666717529297, 0.8926666378974915]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 2, 3, 0, 3, 5], [0, 2, 0, 3, 0], [16, 16, 92], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [1, 3, 3, 6, 8, 1, 4, 1, 6, 2, 1], [4, 0, 0, 3, 0, 4, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 11, 6, 5, 3, 2, 1, 1, 1, 16, 8, 8, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.multiply(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(grad, tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10328886657953262, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 3, 4, 0, 3], [0, 0, 2, 1], [39, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 9], [3, 2, 0, 3], [16, 16], [0, 1], [0], [1], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 5, 4, 2, 6], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 82, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 6, 3, 3, 1, 2, 1, 1, 0, 15, 8, 7, 5], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.pow(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(grad, tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.square(sigma))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [6, 2, 2, 0, 3, 2, 3, 8, 3, 1, 2, 9], [2, 0, 0, 2, 1, 2, 2, 3, 3], [39, 39, 86], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 5, 3, 0, 8, 5], [0, 3, 0, 3], [64, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [8, 3, 2, 6, 8, 1, 4, 1, 4, 2, 8, 0, 5], [0, 0, 4, 3, 0, 0, 3, 1, 2, 4], [16, 1, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 12, 9, 3, 6, 4, 2, 1, 2, 1, 1, 1, 22, 13, 9, 4], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.math.negative(grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(tf.math.multiply(alpha, tf.math.sqrt(tf.math.multiply(tf.math.subtract(grad, tf.math.add(grad, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), grad))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.negative(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(grad, tf.math.pow(sigma, tf.math.add(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.square(sigma))))), alpha)), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 3, 3, 9], [3, 2, 0, 3], [35, 16], [1, 1], [0], [3], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 2, 8, 1, 4, 6, 4, 2, 2], [0, 0, 0, 3, 0, 4, 3, 0, 2, 0, 7], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 1, 0, 1, 0, 1, 0, 1, 0, 22, 11, 11, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(grad, sigma), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}]