[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8808571696281433, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223215103149414, 1.8640538454055786, 1.390925645828247, 1.0857504606246948, 0.9175904989242554, 0.8278062343597412, 0.75929194688797, 0.7150763869285583, 0.6742342710494995, 0.6527069211006165, 0.6226239800453186, 0.6030511260032654, 0.5812473893165588, 0.5698184370994568, 0.5517233610153198, 0.5318202376365662, 0.5262278914451599, 0.5063096284866333, 0.4941454231739044, 0.4912639260292053, 0.47673994302749634, 0.46776485443115234, 0.45580968260765076, 0.45419755578041077, 0.4471202790737152, 0.4368197023868561, 0.4238806366920471, 0.41453513503074646, 0.41017231345176697, 0.4062040150165558, 0.40386685729026794, 0.3953916132450104, 0.39355871081352234, 0.3836102783679962, 0.37635838985443115, 0.3735085725784302, 0.363672137260437, 0.35395750403404236, 0.35972025990486145, 0.34721699357032776, 0.3442964553833008, 0.335767537355423, 0.3300938904285431, 0.32407090067863464, 0.32112976908683777, 0.3181473910808563, 0.31370431184768677, 0.3087446987628937, 0.3084625005722046, 0.30203962326049805, 0.293395072221756, 0.2889169156551361, 0.2914500832557678, 0.28307828307151794, 0.28207361698150635, 0.2786792516708374, 0.27818819880485535, 0.26387521624565125], "accuracy": [0.27222296595573425, 0.5027077198028564, 0.5674283504486084, 0.6277902722358704, 0.6709813475608826, 0.7058512568473816, 0.7269845604896545, 0.7415136694908142, 0.7586844563484192, 0.7617223858833313, 0.783119797706604, 0.7832518815994263, 0.7926297783851624, 0.8001585006713867, 0.807158887386322, 0.8103289008140564, 0.8133667707443237, 0.8190463781356812, 0.8247259259223938, 0.8271034359931946, 0.8298771381378174, 0.8341038227081299, 0.8366134166717529, 0.839519202709198, 0.8404437899589539, 0.848368763923645, 0.8515387773513794, 0.8564258217811584, 0.8529917001724243, 0.8585391640663147, 0.8515387773513794, 0.863558292388916, 0.8615770936012268, 0.8640866279602051, 0.8652753829956055, 0.8671245574951172, 0.8720116019248962, 0.8771628737449646, 0.8705587387084961, 0.876370370388031, 0.8787478804588318, 0.8784837126731873, 0.8828424215316772, 0.8842953443527222, 0.884691596031189, 0.8840311765670776, 0.8891823887825012, 0.8894465565681458, 0.8899748921394348, 0.8932769894599915, 0.8945978283882141, 0.8980319499969482, 0.896446943283081, 0.8988244533538818, 0.9019944667816162, 0.901862382888794, 0.8985602855682373, 0.904768168926239], "val_loss": [2.039530038833618, 1.5154659748077393, 1.039007544517517, 0.8366694450378418, 0.7400773167610168, 0.6859951019287109, 0.6454513669013977, 0.6114123463630676, 0.5899704694747925, 0.5724708437919617, 0.5533395409584045, 0.5345184803009033, 0.5225448608398438, 0.5092709064483643, 0.500229001045227, 0.49316829442977905, 0.480929970741272, 0.4729439616203308, 0.4688349962234497, 0.4563703238964081, 0.45455607771873474, 0.44636544585227966, 0.44144734740257263, 0.4332112669944763, 0.42851945757865906, 0.4277913272380829, 0.4196922183036804, 0.41600528359413147, 0.4114539325237274, 0.4113328456878662, 0.4059373438358307, 0.4033544063568115, 0.40210506319999695, 0.3963744640350342, 0.39264819025993347, 0.39112263917922974, 0.384288489818573, 0.383841872215271, 0.3804401755332947, 0.3786342442035675, 0.3777892291545868, 0.37486007809638977, 0.37355443835258484, 0.37450093030929565, 0.36811116337776184, 0.3697490096092224, 0.3684578537940979, 0.370509535074234, 0.36476588249206543, 0.36312252283096313, 0.361527681350708, 0.36036449670791626, 0.3581533133983612, 0.3633516728878021, 0.35499346256256104, 0.3547135293483734, 0.35882508754730225, 0.35363712906837463], "val_accuracy": [0.5473333597183228, 0.6496666669845581, 0.6846666932106018, 0.6959999799728394, 0.7279999852180481, 0.7450000047683716, 0.7580000162124634, 0.7713333368301392, 0.7763333320617676, 0.7816666960716248, 0.7963333129882812, 0.8109999895095825, 0.8116666674613953, 0.8113333582878113, 0.8116666674613953, 0.8186666369438171, 0.8259999752044678, 0.8236666917800903, 0.828000009059906, 0.8360000252723694, 0.8323333263397217, 0.8373333215713501, 0.8373333215713501, 0.8366666436195374, 0.843666672706604, 0.843999981880188, 0.846666693687439, 0.8483333587646484, 0.8493333458900452, 0.847000002861023, 0.8476666808128357, 0.8496666550636292, 0.8510000109672546, 0.8519999980926514, 0.8553333282470703, 0.8556666374206543, 0.8583333492279053, 0.859333336353302, 0.8560000061988831, 0.862333357334137, 0.8636666536331177, 0.859666645526886, 0.8636666536331177, 0.8643333315849304, 0.8653333187103271, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.8709999918937683, 0.8690000176429749, 0.8686666488647461, 0.8653333187103271, 0.8733333349227905, 0.8679999709129333, 0.8709999918937683, 0.8706666827201843, 0.8703333139419556, 0.8693333268165588]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8537142872810364, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224247455596924, 1.8734267950057983, 1.4049745798110962, 1.1061617136001587, 0.9345539212226868, 0.8477138876914978, 0.7667406797409058, 0.7162789106369019, 0.6857379078865051, 0.6615516543388367, 0.6223065257072449, 0.6174185276031494, 0.5914922952651978, 0.5701678395271301, 0.556891679763794, 0.5460094809532166, 0.5273915529251099, 0.5249189138412476, 0.513982355594635, 0.4990276098251343, 0.48388150334358215, 0.4827710688114166, 0.4743528962135315, 0.4672536849975586, 0.4532989263534546, 0.4443608820438385, 0.43264660239219666, 0.431350439786911, 0.42571699619293213, 0.41329649090766907, 0.4081663191318512, 0.41275638341903687, 0.39867788553237915, 0.38991665840148926, 0.38676509261131287, 0.38129639625549316, 0.3774528503417969, 0.3671014606952667, 0.3682813346385956, 0.35932931303977966, 0.35358360409736633, 0.34630921483039856, 0.3409980535507202, 0.3441494405269623, 0.33562561869621277, 0.33386558294296265, 0.3307131230831146, 0.32460251450538635, 0.3197391629219055, 0.31357917189598083, 0.31428131461143494, 0.30610382556915283, 0.30487337708473206, 0.2997720539569855, 0.29022690653800964, 0.2814651429653168, 0.282281756401062, 0.2779468595981598, 0.27696678042411804, 0.2701830565929413, 0.2746688425540924], "accuracy": [0.2798837721347809, 0.49214106798171997, 0.5588429570198059, 0.6147140264511108, 0.6664905548095703, 0.6995112895965576, 0.7231541275978088, 0.7384757399559021, 0.7473253011703491, 0.7602694630622864, 0.7758552432060242, 0.7728173136711121, 0.7849689722061157, 0.7951393723487854, 0.7979130744934082, 0.7991018295288086, 0.8059701323509216, 0.8121780753135681, 0.8178576231002808, 0.8244617581367493, 0.8284242749214172, 0.8253863453865051, 0.8335754871368408, 0.8301413059234619, 0.8385946154594421, 0.8437458872795105, 0.8486329317092896, 0.8531237840652466, 0.850350022315979, 0.8560295701026917, 0.8553691506385803, 0.854708731174469, 0.8569541573524475, 0.8580108284950256, 0.863029956817627, 0.8599920868873596, 0.8651432991027832, 0.8679170608520508, 0.8697662353515625, 0.8733324408531189, 0.8745211958885193, 0.8778232932090759, 0.8780874609947205, 0.8757099509239197, 0.8803328275680542, 0.8779553771018982, 0.8817857503890991, 0.8868049383163452, 0.887201189994812, 0.8878615498542786, 0.8870691061019897, 0.8886540532112122, 0.8897107243537903, 0.894069492816925, 0.8952582478523254, 0.8965790271759033, 0.8976356983184814, 0.9010698795318604, 0.9030511379241943, 0.8997490406036377, 0.8985602855682373], "val_loss": [2.0426387786865234, 1.5215096473693848, 1.0510040521621704, 0.8466944694519043, 0.7607159614562988, 0.7076492309570312, 0.6637527942657471, 0.631537914276123, 0.6012230515480042, 0.5841120481491089, 0.5657259225845337, 0.5543551445007324, 0.5371806025505066, 0.5225837230682373, 0.516159176826477, 0.5095916986465454, 0.4972875714302063, 0.4923025667667389, 0.48207125067710876, 0.47504037618637085, 0.4675634801387787, 0.4607495963573456, 0.46298664808273315, 0.4514376223087311, 0.4412917196750641, 0.4372374415397644, 0.43274426460266113, 0.431399405002594, 0.4247083067893982, 0.4211425483226776, 0.4213482141494751, 0.41681623458862305, 0.41249537467956543, 0.4138796329498291, 0.40365010499954224, 0.4012135863304138, 0.3990114629268646, 0.40152883529663086, 0.3917940557003021, 0.3927106261253357, 0.3892219364643097, 0.38568440079689026, 0.3945927023887634, 0.3818138837814331, 0.3778323531150818, 0.38373157382011414, 0.37685590982437134, 0.3803446590900421, 0.3794339895248413, 0.3809843063354492, 0.36850428581237793, 0.3715679943561554, 0.36686497926712036, 0.36638712882995605, 0.3677920401096344, 0.36390286684036255, 0.3619011342525482, 0.36827364563941956, 0.3633556365966797, 0.36374348402023315, 0.35998377203941345], "val_accuracy": [0.5, 0.6606666445732117, 0.6783333420753479, 0.7059999704360962, 0.7256666421890259, 0.7473333477973938, 0.7613333463668823, 0.7710000276565552, 0.7839999794960022, 0.7883333563804626, 0.7960000038146973, 0.793666660785675, 0.8066666722297668, 0.8086666464805603, 0.8083333373069763, 0.8230000138282776, 0.8173333406448364, 0.8163333535194397, 0.8230000138282776, 0.8320000171661377, 0.8266666531562805, 0.831333339214325, 0.8366666436195374, 0.8349999785423279, 0.8446666598320007, 0.8396666646003723, 0.8446666598320007, 0.8433333039283752, 0.8473333120346069, 0.8479999899864197, 0.8426666855812073, 0.8493333458900452, 0.8483333587646484, 0.8476666808128357, 0.8550000190734863, 0.8573333621025085, 0.859666645526886, 0.8526666760444641, 0.8543333411216736, 0.8606666922569275, 0.8573333621025085, 0.8616666793823242, 0.8526666760444641, 0.8646666407585144, 0.8643333315849304, 0.8586666584014893, 0.8640000224113464, 0.8659999966621399, 0.8573333621025085, 0.8603333234786987, 0.8679999709129333, 0.8673333525657654, 0.8669999837875366, 0.8646666407585144, 0.8679999709129333, 0.8723333477973938, 0.8686666488647461, 0.8700000047683716, 0.871999979019165, 0.8693333268165588, 0.8703333139419556]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 27, 61, 1]], "fitness": -0.2637142837047577, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 17, 9, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha))", "other_info": {"loss": [2.31075382232666, 2.3092968463897705, 2.3092026710510254, 2.3081445693969727, 2.3058745861053467, 2.2968246936798096, 2.3271210193634033, 2.359257459640503, 2.378920555114746, 2.4016964435577393, 2.4313833713531494], "accuracy": [0.08968432247638702, 0.09140139818191528, 0.09192973375320435, 0.09430722147226334, 0.10117553919553757, 0.11451591551303864, 0.08426892012357712, 0.06934354454278946, 0.06894730031490326, 0.06538105756044388, 0.068022720515728], "val_loss": [2.3092520236968994, 2.3090970516204834, 2.308580160140991, 2.307091236114502, 2.302499771118164, 2.2680344581604004, 2.3538713455200195, 2.3733692169189453, 2.3942348957061768, 2.4200241565704346, 2.455078601837158], "val_accuracy": [0.09033333510160446, 0.09033333510160446, 0.09000000357627869, 0.09066666662693024, 0.09700000286102295, 0.2563333213329315, 0.09133332967758179, 0.08799999952316284, 0.08699999749660492, 0.08533333241939545, 0.08366666734218597]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 1], [0, 1, 0, 2], [39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 9, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 4, 3, 0, 0, 3, 1, 2, 3], [16, 28, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 1, 0, 1, 1, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3036630153656006, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09589222073554993, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0], [6, 4, 3, 6, 8, 1, 4, 1, 4, 0, 8], [4, 0, 0, 3, 3, 0, 3, 1, 2, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.pow(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), sigma), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 16, 8, 8, 3], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [6, 3, 3, 6, 0, 1, 2, 1, 4, 2, 8, 6, 8, 9, 0, 9], [0, 0, 4, 3, 0, 0, 3, 4, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 4, 2, 2, 1, 2, 1, 1, 1, 25, 16, 9, 6], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.negative(tf.math.subtract(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), grad)), tf.math.pow(sigma, tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))))), sigma), tf.math.sqrt(tf.math.divide_no_nan(grad, beta))), tf.math.sqrt(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}]