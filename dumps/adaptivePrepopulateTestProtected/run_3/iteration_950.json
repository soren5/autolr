[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8862857222557068, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222418785095215, 1.8632627725601196, 1.3950724601745605, 1.0979150533676147, 0.9474178552627563, 0.8543937802314758, 0.7783248424530029, 0.7376496195793152, 0.7006842494010925, 0.6746688485145569, 0.647553563117981, 0.6295329928398132, 0.6112891435623169, 0.58865886926651, 0.5667527914047241, 0.5575993657112122, 0.5467248558998108, 0.5289703011512756, 0.5205997824668884, 0.5110849142074585, 0.5064045786857605, 0.4867391884326935, 0.4731372892856598, 0.47443822026252747, 0.46410614252090454, 0.4545186161994934, 0.445819616317749, 0.4367676079273224, 0.4321127235889435, 0.4275900721549988, 0.4177286922931671, 0.40700381994247437, 0.40491974353790283, 0.3923063576221466, 0.38597339391708374, 0.37638187408447266, 0.3749813437461853, 0.3708414137363434, 0.369646281003952, 0.3635149896144867, 0.3594855070114136, 0.3503628671169281, 0.3338625133037567, 0.3396199643611908, 0.33679017424583435, 0.3303111493587494, 0.3275522291660309, 0.3153315782546997, 0.3093845844268799, 0.31660354137420654, 0.313541054725647, 0.3128948211669922, 0.2977619469165802, 0.30230653285980225, 0.298944890499115, 0.28947505354881287, 0.2822195291519165, 0.2778712213039398, 0.2668195366859436, 0.26853811740875244, 0.26283398270606995, 0.2662760019302368, 0.2576100528240204, 0.25102800130844116, 0.2539205849170685, 0.25087955594062805, 0.24508193135261536], "accuracy": [0.280940443277359, 0.48685774207115173, 0.5665037631988525, 0.616299033164978, 0.6625280380249023, 0.6930392384529114, 0.7169462442398071, 0.7320036888122559, 0.7375511527061462, 0.7491744756698608, 0.7672698497772217, 0.7670056819915771, 0.7745344042778015, 0.7876105904579163, 0.7906485199928284, 0.7994980812072754, 0.802800178527832, 0.8068947196006775, 0.8117818236351013, 0.8153480291366577, 0.8181217908859253, 0.829216718673706, 0.8300092220306396, 0.8238013386726379, 0.8325188159942627, 0.8385946154594421, 0.8372738361358643, 0.842028796672821, 0.8451988101005554, 0.8481045961380005, 0.8515387773513794, 0.8549728989601135, 0.8516708612442017, 0.8603883385658264, 0.8598600029945374, 0.8667283058166504, 0.8636903762817383, 0.8636903762817383, 0.8677849769592285, 0.8704266548156738, 0.8758420348167419, 0.8739928603172302, 0.8790120482444763, 0.8768987059593201, 0.8751816153526306, 0.8794082403182983, 0.8813894987106323, 0.8860124349594116, 0.8874653577804565, 0.8856161832809448, 0.8838990926742554, 0.8877294659614563, 0.8918240666389465, 0.8918240666389465, 0.8922203183174133, 0.8953903317451477, 0.89552241563797, 0.9002773761749268, 0.9049002528190613, 0.9034473896026611, 0.9035794734954834, 0.9038436412811279, 0.9085986018180847, 0.9095231890678406, 0.9095231890678406, 0.909259021282196, 0.910711944103241], "val_loss": [2.0414316654205322, 1.5168657302856445, 1.0494927167892456, 0.8396123051643372, 0.7532041668891907, 0.6975494027137756, 0.6532282829284668, 0.6188269853591919, 0.5909113883972168, 0.5747429728507996, 0.5562715530395508, 0.5392115712165833, 0.5226473808288574, 0.5080817937850952, 0.49551260471343994, 0.4949219524860382, 0.48097461462020874, 0.46894019842147827, 0.4645398259162903, 0.4554585814476013, 0.44845467805862427, 0.44272810220718384, 0.4365209937095642, 0.4303407371044159, 0.42757970094680786, 0.42137086391448975, 0.4158954322338104, 0.4094981253147125, 0.40614867210388184, 0.40746310353279114, 0.39686036109924316, 0.39440515637397766, 0.39069101214408875, 0.3898474872112274, 0.3889416456222534, 0.3833497166633606, 0.387736976146698, 0.3792175352573395, 0.3778442442417145, 0.37528878450393677, 0.3729557991027832, 0.37016138434410095, 0.36690768599510193, 0.36455467343330383, 0.36386409401893616, 0.3628668487071991, 0.365796834230423, 0.36076274514198303, 0.3599783480167389, 0.35867130756378174, 0.35705167055130005, 0.35411083698272705, 0.3552299737930298, 0.3651564121246338, 0.36276260018348694, 0.34837988018989563, 0.34821584820747375, 0.3528410792350769, 0.3496720790863037, 0.3506317138671875, 0.34951722621917725, 0.3443804085254669, 0.345913290977478, 0.3461855351924896, 0.3431210517883301, 0.348863810300827, 0.3426092565059662], "val_accuracy": [0.5373333096504211, 0.6570000052452087, 0.6759999990463257, 0.7110000252723694, 0.7286666631698608, 0.7419999837875366, 0.7590000033378601, 0.7616666555404663, 0.7836666703224182, 0.7903333306312561, 0.7886666655540466, 0.8006666898727417, 0.809333324432373, 0.8183333277702332, 0.8146666884422302, 0.8140000104904175, 0.8233333230018616, 0.8289999961853027, 0.8326666951179504, 0.8363333344459534, 0.8389999866485596, 0.8366666436195374, 0.8363333344459534, 0.8489999771118164, 0.847000002861023, 0.8519999980926514, 0.8533333539962769, 0.8560000061988831, 0.8573333621025085, 0.8539999723434448, 0.8619999885559082, 0.862666666507721, 0.8656666874885559, 0.8629999756813049, 0.8646666407585144, 0.8636666536331177, 0.8603333234786987, 0.8659999966621399, 0.8673333525657654, 0.8673333525657654, 0.8713333606719971, 0.8703333139419556, 0.8713333606719971, 0.871666669845581, 0.8736666440963745, 0.8730000257492065, 0.871999979019165, 0.874666690826416, 0.875333309173584, 0.874666690826416, 0.875, 0.8786666393280029, 0.8776666522026062, 0.8743333220481873, 0.8723333477973938, 0.8833333253860474, 0.8826666474342346, 0.8790000081062317, 0.8836666941642761, 0.878333330154419, 0.8820000290870667, 0.887666642665863, 0.8820000290870667, 0.8803333044052124, 0.8830000162124634, 0.8846666812896729, 0.8856666684150696]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8734285831451416, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2232866287231445, 1.8691145181655884, 1.403205394744873, 1.1062042713165283, 0.9498129487037659, 0.8448947072029114, 0.7711408138275146, 0.7192088961601257, 0.6944379806518555, 0.6532291173934937, 0.6261856555938721, 0.6036675572395325, 0.584782600402832, 0.5780419707298279, 0.555213987827301, 0.5425985455513, 0.5277358293533325, 0.5082575082778931, 0.5016101598739624, 0.4897637963294983, 0.47957995533943176, 0.46570444107055664, 0.4616287350654602, 0.4523819386959076, 0.4440018832683563, 0.4303422272205353, 0.4234064221382141, 0.4265666902065277, 0.41292816400527954, 0.40857216715812683, 0.40806058049201965, 0.3958689868450165, 0.38708239793777466, 0.3899422287940979, 0.37161773443222046, 0.3708246946334839, 0.3693123161792755, 0.3669946491718292, 0.35241878032684326, 0.3447311520576477, 0.3519769012928009, 0.3419433534145355, 0.3346964716911316, 0.3299318850040436, 0.3193521797657013, 0.31882762908935547, 0.3207302689552307, 0.31161215901374817, 0.31357839703559875, 0.3083740472793579, 0.30525702238082886, 0.2995956242084503, 0.2894889712333679, 0.29218876361846924, 0.2798275351524353, 0.2804262936115265, 0.2752026915550232, 0.27385738492012024, 0.26766663789749146, 0.26657629013061523, 0.2512953579425812, 0.2585294246673584, 0.25529077649116516, 0.2496204972267151, 0.24801331758499146], "accuracy": [0.2817329168319702, 0.48408401012420654, 0.5688812732696533, 0.6186765432357788, 0.6626601219177246, 0.6975300312042236, 0.7239466309547424, 0.7413815855979919, 0.7491744756698608, 0.7647602558135986, 0.7703077793121338, 0.7821952104568481, 0.7893276810646057, 0.7936864495277405, 0.8029322624206543, 0.8031964302062988, 0.8092722296714783, 0.8171972036361694, 0.8203672170639038, 0.8198388814926147, 0.828292191028595, 0.8374059200286865, 0.8343679904937744, 0.8368775844573975, 0.8360850811004639, 0.8454629778862, 0.8438779711723328, 0.8479725122451782, 0.8532558679580688, 0.854708731174469, 0.8581429123878479, 0.8569541573524475, 0.8640866279602051, 0.8626337051391602, 0.8646149635314941, 0.8664641380310059, 0.8708229064941406, 0.8688416481018066, 0.8741249442100525, 0.8751816153526306, 0.8755778670310974, 0.8779553771018982, 0.8812574148178101, 0.8821820020675659, 0.883238673210144, 0.8817857503890991, 0.8862766027450562, 0.8862766027450562, 0.8873332738876343, 0.8864086866378784, 0.8883898854255676, 0.8919561505317688, 0.8945978283882141, 0.8947299122810364, 0.8971073627471924, 0.8992207050323486, 0.89988112449646, 0.8976356983184814, 0.9019944667816162, 0.9060890078544617, 0.9093911051750183, 0.9072777628898621, 0.9072777628898621, 0.9096552729606628, 0.9095231890678406], "val_loss": [2.0403449535369873, 1.5219725370407104, 1.0433402061462402, 0.825242817401886, 0.7318834066390991, 0.6732032895088196, 0.6232560873031616, 0.5930670499801636, 0.566150426864624, 0.5449528694152832, 0.535772442817688, 0.5187486410140991, 0.4993746876716614, 0.494841068983078, 0.47522470355033875, 0.46849191188812256, 0.4683828055858612, 0.4538431465625763, 0.44928067922592163, 0.43837353587150574, 0.43403857946395874, 0.4253142476081848, 0.4153902232646942, 0.42079266905784607, 0.4142140746116638, 0.40617939829826355, 0.39877423644065857, 0.39591747522354126, 0.39217838644981384, 0.3912803530693054, 0.3858976662158966, 0.3789580762386322, 0.37832754850387573, 0.3787887692451477, 0.37471988797187805, 0.37043851613998413, 0.3657936155796051, 0.36420589685440063, 0.3631548583507538, 0.36250731348991394, 0.35512834787368774, 0.3548813462257385, 0.3532967269420624, 0.3540731966495514, 0.3516571819782257, 0.34689486026763916, 0.3450791835784912, 0.34981444478034973, 0.341095894575119, 0.3491452634334564, 0.33977073431015015, 0.3401859402656555, 0.3417159914970398, 0.3367498815059662, 0.3345067799091339, 0.3347139358520508, 0.3328211307525635, 0.330966055393219, 0.32961922883987427, 0.3303642272949219, 0.3357032537460327, 0.32896098494529724, 0.3264929950237274, 0.3284074366092682, 0.3296489119529724], "val_accuracy": [0.534333348274231, 0.6546666622161865, 0.6856666803359985, 0.7160000205039978, 0.7416666746139526, 0.7590000033378601, 0.778333306312561, 0.7870000004768372, 0.7993333339691162, 0.8059999942779541, 0.8069999814033508, 0.8140000104904175, 0.8236666917800903, 0.8240000009536743, 0.8303333520889282, 0.8296666741371155, 0.8293333053588867, 0.8339999914169312, 0.8360000252723694, 0.8416666388511658, 0.8443333506584167, 0.847000002861023, 0.8533333539962769, 0.8429999947547913, 0.8496666550636292, 0.8576666712760925, 0.859333336353302, 0.8600000143051147, 0.8566666841506958, 0.8616666793823242, 0.8610000014305115, 0.8646666407585144, 0.862333357334137, 0.8640000224113464, 0.8643333315849304, 0.8659999966621399, 0.8679999709129333, 0.8656666874885559, 0.8696666955947876, 0.8673333525657654, 0.8713333606719971, 0.8700000047683716, 0.8733333349227905, 0.8709999918937683, 0.8733333349227905, 0.8736666440963745, 0.875333309173584, 0.874666690826416, 0.874666690826416, 0.8763333559036255, 0.875333309173584, 0.8740000128746033, 0.874666690826416, 0.8786666393280029, 0.8786666393280029, 0.8833333253860474, 0.8793333172798157, 0.8786666393280029, 0.8803333044052124, 0.8843333125114441, 0.8799999952316284, 0.8806666731834412, 0.8806666731834412, 0.8840000033378601, 0.8820000290870667]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3], [0, 1, 0, 2, 0], [39, 39, 43], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [9, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 5, 3, 4, 4], [0, 2, 6, 1], [99], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [2, 3, 0, 6, 8, 3, 2, 1, 4, 2, 8], [0, 0, 0, 0, 4, 0, 3, 1, 2, 0], [49, 99, 96, 99, 24, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 1, 1, 0, 1, 9, 5, 4, 1, 8, 4, 4, 4], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), beta), tf.math.pow(grad, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [165184928.0, 3149192704.0, 14446035968.0, 39903268864.0, 86364602368.0, 158501617664.0], "accuracy": [0.1006472036242485, 0.09959053993225098, 0.09932637959718704, 0.10130762308835983, 0.09549596905708313, 0.09206181764602661], "val_loss": [751131264.0, 6007609344.0, 20274024448.0, 48055361536.0, 93855703040.0, 162180644864.0], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 11, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 7, 4, 3, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.subtract(tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.311075448989868, 2.308898448944092, 2.3090033531188965, 2.3073463439941406, 2.3044369220733643, 2.3029332160949707, 2.302590847015381, 2.302586078643799, NaN, NaN, NaN], "accuracy": [0.09470347315073013, 0.09232597798109055, 0.09576013684272766, 0.09298639744520187, 0.09377889335155487, 0.09008057415485382, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3090248107910156, 2.308429718017578, 2.3074285984039307, 2.305345296859741, 2.3030381202697754, 2.302584648132324, 2.3025853633880615, 2.3025856018066406, NaN, NaN, NaN], "val_accuracy": [0.08633333444595337, 0.08533333241939545, 0.08366666734218597, 0.06466666609048843, 0.09000000357627869, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 2, 3], [0, 1, 0, 2], [91, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 6, 5], [0, 2, 2, 3], [16, 16], [0, 1, 1], [1], [0, 2], [92], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 2, 2, 8, 1, 8, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 3, 2, 0], [16, 83, 65, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 2, 10, 6, 4, 1, 3, 1, 2, 1, 17, 9, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(beta, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)))), sigma)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))), sigma)", "other_info": {"loss": [66049360.0, 23033714688.0, 1007349530624.0, 20103433289728.0, 282703102476288.0, 3254358460334080.0], "accuracy": [0.10513802617788315, 0.09760929644107819, 0.1006472036242485, 0.09813763201236725, 0.10236428678035736, 0.09919429570436478], "val_loss": [818523776.0, 113999020032.0, 3413416083456.0, 57359544090624.0, 733206752002048.0, 8136306051776512.0], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 3], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 3, 0, 3], [16, 34], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 0, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 35, 49]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 0, 21, 11, 10, 7], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))), sigma)), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}]