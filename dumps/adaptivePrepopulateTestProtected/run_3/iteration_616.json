[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8822857141494751, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585750579834, 1.8655762672424316, 1.394430160522461, 1.0773245096206665, 0.9378393888473511, 0.8425824046134949, 0.7776632308959961, 0.736241340637207, 0.6971188187599182, 0.6732122302055359, 0.644855797290802, 0.6276965141296387, 0.6100340485572815, 0.5899673104286194, 0.5746485590934753, 0.5484329462051392, 0.5425268411636353, 0.5357900857925415, 0.5214410424232483, 0.5127171874046326, 0.4895091950893402, 0.4932740032672882, 0.48551443219184875, 0.47113916277885437, 0.46571049094200134, 0.450914591550827, 0.438728004693985, 0.4414178729057312, 0.4245515465736389, 0.4182806611061096, 0.4126766324043274, 0.41352686285972595, 0.4031256139278412, 0.40064555406570435, 0.3982388377189636, 0.38566267490386963, 0.38400527834892273, 0.3741128146648407, 0.36422181129455566, 0.36170411109924316, 0.35991787910461426, 0.35666367411613464, 0.3521813750267029, 0.34583958983421326, 0.34736087918281555, 0.34181836247444153, 0.33650368452072144, 0.33141741156578064, 0.3230496346950531, 0.3225416839122772, 0.315096914768219, 0.3059031665325165, 0.3058394491672516, 0.3017319440841675, 0.29568877816200256, 0.2933836281299591, 0.28774771094322205, 0.2856961190700531, 0.2802303731441498, 0.2779994010925293, 0.274711549282074, 0.2719985842704773, 0.2586328387260437, 0.2598455548286438, 0.2622571289539337, 0.25739434361457825, 0.2502012252807617, 0.2544722855091095, 0.24556587636470795, 0.24580754339694977, 0.23948103189468384, 0.23949603736400604, 0.23484042286872864, 0.22871272265911102, 0.2256491780281067, 0.22479403018951416, 0.21744707226753235, 0.21390178799629211, 0.21272219717502594], "accuracy": [0.2785629332065582, 0.49451854825019836, 0.559899628162384, 0.6215823292732239, 0.6654338836669922, 0.6950204968452454, 0.7181349992752075, 0.7322678565979004, 0.7441553473472595, 0.7483819723129272, 0.7627789974212646, 0.7717606425285339, 0.7728173136711121, 0.78113853931427, 0.7882710099220276, 0.7993659973144531, 0.7976489067077637, 0.8074230551719666, 0.8128384351730347, 0.8198388814926147, 0.8212917447090149, 0.819970965385437, 0.8272355198860168, 0.8350284099578857, 0.8305375576019287, 0.8387266993522644, 0.846387505531311, 0.8433496356010437, 0.8504821062088013, 0.8524633646011353, 0.8535200357437134, 0.854708731174469, 0.856689989566803, 0.8551049828529358, 0.8593316674232483, 0.8615770936012268, 0.8628978729248047, 0.8702945709228516, 0.8691058158874512, 0.871879518032074, 0.8722757697105408, 0.8691058158874512, 0.8733324408531189, 0.8800686597824097, 0.8795403242111206, 0.8755778670310974, 0.8768987059593201, 0.8829745054244995, 0.8824461698532104, 0.8823140859603882, 0.887201189994812, 0.8897107243537903, 0.8889182209968567, 0.8927486538887024, 0.8902390599250793, 0.8953903317451477, 0.8980319499969482, 0.8976356983184814, 0.900409460067749, 0.89552241563797, 0.9025228023529053, 0.8989565372467041, 0.9056927561759949, 0.9085986018180847, 0.9030511379241943, 0.9066173434257507, 0.9101836085319519, 0.9083344340324402, 0.909259021282196, 0.9099194407463074, 0.9126931428909302, 0.9140139818191528, 0.9119006991386414, 0.9171839952468872, 0.9169198274612427, 0.9185048341751099, 0.9218068718910217, 0.9185048341751099, 0.9196935892105103], "val_loss": [2.033445358276367, 1.5042319297790527, 1.0271512269973755, 0.8147247433662415, 0.7278039455413818, 0.68117356300354, 0.6306353211402893, 0.5966841578483582, 0.5751398801803589, 0.5460951328277588, 0.5314993858337402, 0.509799063205719, 0.4957965612411499, 0.4792602062225342, 0.46671679615974426, 0.45267683267593384, 0.4441072940826416, 0.4356139600276947, 0.42943108081817627, 0.4255247414112091, 0.41811680793762207, 0.4163394272327423, 0.39929893612861633, 0.3969916105270386, 0.39089226722717285, 0.387652188539505, 0.3844633102416992, 0.3824205696582794, 0.3749690353870392, 0.3701930642127991, 0.36967378854751587, 0.36689504981040955, 0.3585263788700104, 0.3587398827075958, 0.36267170310020447, 0.3561091423034668, 0.35379692912101746, 0.3499273955821991, 0.34701839089393616, 0.3467637896537781, 0.3424672484397888, 0.33951225876808167, 0.3386255204677582, 0.34044384956359863, 0.33945050835609436, 0.33684298396110535, 0.3322163224220276, 0.33181649446487427, 0.32827115058898926, 0.3312568664550781, 0.3297465741634369, 0.3256674110889435, 0.3234780728816986, 0.32119208574295044, 0.3232716917991638, 0.3209094703197479, 0.31944912672042847, 0.3157532513141632, 0.3144265413284302, 0.31676045060157776, 0.31425556540489197, 0.3131799101829529, 0.3147056996822357, 0.3154993951320648, 0.31771615147590637, 0.31545644998550415, 0.3127000629901886, 0.31382524967193604, 0.31026333570480347, 0.3147730529308319, 0.30829918384552, 0.3107443153858185, 0.31316936016082764, 0.30297672748565674, 0.30325081944465637, 0.30436232686042786, 0.3072424829006195, 0.30681705474853516, 0.3061434030532837], "val_accuracy": [0.5526666641235352, 0.6666666865348816, 0.687333345413208, 0.7083333134651184, 0.731333315372467, 0.7446666955947876, 0.7606666684150696, 0.762666642665863, 0.7873333096504211, 0.7889999747276306, 0.7973333597183228, 0.8056666851043701, 0.8193333148956299, 0.8259999752044678, 0.8289999961853027, 0.8410000205039978, 0.8453333377838135, 0.8450000286102295, 0.8489999771118164, 0.847000002861023, 0.8516666889190674, 0.856333315372467, 0.859333336353302, 0.856333315372467, 0.8633333444595337, 0.8640000224113464, 0.8656666874885559, 0.8646666407585144, 0.8679999709129333, 0.8696666955947876, 0.8640000224113464, 0.8686666488647461, 0.8713333606719971, 0.8709999918937683, 0.8703333139419556, 0.8723333477973938, 0.871999979019165, 0.874666690826416, 0.8723333477973938, 0.8759999871253967, 0.8726666569709778, 0.875333309173584, 0.8790000081062317, 0.8756666779518127, 0.8726666569709778, 0.8769999742507935, 0.8796666860580444, 0.8796666860580444, 0.8806666731834412, 0.8793333172798157, 0.8813333511352539, 0.8840000033378601, 0.8840000033378601, 0.8843333125114441, 0.8809999823570251, 0.8856666684150696, 0.8866666555404663, 0.8833333253860474, 0.8866666555404663, 0.8843333125114441, 0.8856666684150696, 0.8880000114440918, 0.887333333492279, 0.8883333206176758, 0.8866666555404663, 0.8896666765213013, 0.8863333463668823, 0.8853333592414856, 0.890999972820282, 0.8870000243186951, 0.8883333206176758, 0.8883333206176758, 0.8916666507720947, 0.8939999938011169, 0.8896666765213013, 0.8916666507720947, 0.890999972820282, 0.8926666378974915, 0.8913333415985107]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8659999966621399, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2242064476013184, 1.8718293905258179, 1.401621699333191, 1.103288173675537, 0.9442083239555359, 0.8457807302474976, 0.7840868234634399, 0.7340999841690063, 0.6915506720542908, 0.6560115218162537, 0.653826117515564, 0.6265743374824524, 0.6083880662918091, 0.5849947929382324, 0.5636261105537415, 0.561285138130188, 0.5436580777168274, 0.5228212475776672, 0.5190133452415466, 0.5029609799385071, 0.49689027667045593, 0.4846065938472748, 0.48240941762924194, 0.4787018299102783, 0.4580218195915222, 0.45626017451286316, 0.4349968135356903, 0.4277225136756897, 0.42321252822875977, 0.4224820137023926, 0.41607117652893066, 0.4022081792354584, 0.3996143937110901, 0.39264747500419617, 0.3962515592575073, 0.38519638776779175, 0.3793250620365143, 0.36916583776474, 0.3665466010570526, 0.3672453463077545, 0.35243484377861023, 0.34747618436813354, 0.35013797879219055, 0.34937000274658203, 0.34497520327568054, 0.3366715908050537, 0.32728642225265503, 0.324611634016037, 0.31557247042655945, 0.31810981035232544, 0.3113304376602173, 0.30782049894332886, 0.310663104057312, 0.30070042610168457, 0.29537302255630493, 0.2923393249511719, 0.2884104251861572, 0.28763213753700256, 0.28050580620765686, 0.275461345911026, 0.2731461822986603, 0.26881086826324463, 0.2635747492313385, 0.26526322960853577, 0.2574789822101593, 0.2572019100189209, 0.24506038427352905, 0.2466214895248413, 0.24154236912727356, 0.24464084208011627, 0.23111461102962494, 0.2436729073524475, 0.2326316088438034, 0.23169517517089844, 0.22556445002555847], "accuracy": [0.2635054886341095, 0.4846123456954956, 0.5606921315193176, 0.615770697593689, 0.663848876953125, 0.6970016956329346, 0.7193237543106079, 0.7382115721702576, 0.7491744756698608, 0.7662131786346436, 0.7626469135284424, 0.7709681391716003, 0.7773081660270691, 0.7895918488502502, 0.7967243194580078, 0.7988376617431641, 0.8049134612083435, 0.8124422430992126, 0.8149517774581909, 0.8164047002792358, 0.8235371708869934, 0.8265751004219055, 0.8285563588142395, 0.830669641494751, 0.8383304476737976, 0.8358209133148193, 0.8436138033866882, 0.8475762605667114, 0.8514066934585571, 0.8504821062088013, 0.8532558679580688, 0.8552370667457581, 0.8577466607093811, 0.858671247959137, 0.8569541573524475, 0.8644828796386719, 0.8607845902442932, 0.8667283058166504, 0.8685774803161621, 0.8697662353515625, 0.8735966086387634, 0.8733324408531189, 0.871879518032074, 0.8728041052818298, 0.8750495314598083, 0.878351628780365, 0.8838990926742554, 0.8813894987106323, 0.8885219693183899, 0.8813894987106323, 0.8857482671737671, 0.889050304889679, 0.8897107243537903, 0.8934090733528137, 0.8930128216743469, 0.8934090733528137, 0.8949940800666809, 0.8943336606025696, 0.901862382888794, 0.9010698795318604, 0.9005415439605713, 0.9026548862457275, 0.9025228023529053, 0.9027869701385498, 0.9071456789970398, 0.9033153057098389, 0.9075419306755066, 0.9089948534965515, 0.9103156924247742, 0.9108440279960632, 0.9137498140335083, 0.9111081957817078, 0.9163914918899536, 0.9144102334976196, 0.9148064851760864], "val_loss": [2.0421276092529297, 1.516905426979065, 1.0416189432144165, 0.828285813331604, 0.7346450090408325, 0.6809526085853577, 0.6341253519058228, 0.6045832633972168, 0.5753246545791626, 0.5512735843658447, 0.5402939319610596, 0.5215128064155579, 0.516600489616394, 0.49975472688674927, 0.4801143407821655, 0.4740147590637207, 0.4621831774711609, 0.4538637697696686, 0.4461517035961151, 0.44432583451271057, 0.43761512637138367, 0.42530378699302673, 0.42175135016441345, 0.41588228940963745, 0.4071993827819824, 0.4049677848815918, 0.40056779980659485, 0.3937574028968811, 0.3891797363758087, 0.38983380794525146, 0.38648054003715515, 0.38087889552116394, 0.379538357257843, 0.37764090299606323, 0.3714776337146759, 0.37111929059028625, 0.3713345527648926, 0.36741903424263, 0.36638933420181274, 0.3643347918987274, 0.36120760440826416, 0.35947805643081665, 0.35679036378860474, 0.3618921637535095, 0.3662877678871155, 0.3510805666446686, 0.3537711203098297, 0.3488607108592987, 0.3491658568382263, 0.35420385003089905, 0.350369393825531, 0.34749293327331543, 0.34586015343666077, 0.3431226313114166, 0.3459468185901642, 0.34221529960632324, 0.3405887186527252, 0.3377636671066284, 0.3415999412536621, 0.3384220600128174, 0.3389287292957306, 0.33818212151527405, 0.3393433094024658, 0.3370398283004761, 0.33724337816238403, 0.3335571885108948, 0.3349732756614685, 0.3345496952533722, 0.33193477988243103, 0.3346365690231323, 0.34093526005744934, 0.3327734172344208, 0.3335966467857361, 0.33798375725746155, 0.33490556478500366], "val_accuracy": [0.5366666913032532, 0.6480000019073486, 0.6896666884422302, 0.7076666951179504, 0.7393333315849304, 0.7573333382606506, 0.7643333077430725, 0.7770000100135803, 0.784333348274231, 0.7953333258628845, 0.8069999814033508, 0.8136666417121887, 0.8006666898727417, 0.8180000185966492, 0.8270000219345093, 0.8316666483879089, 0.8323333263397217, 0.8366666436195374, 0.843666672706604, 0.8383333086967468, 0.8383333086967468, 0.8539999723434448, 0.8523333072662354, 0.8556666374206543, 0.8583333492279053, 0.856333315372467, 0.8579999804496765, 0.8643333315849304, 0.8653333187103271, 0.8643333315849304, 0.8653333187103271, 0.8696666955947876, 0.8683333396911621, 0.871999979019165, 0.8726666569709778, 0.875, 0.871999979019165, 0.875333309173584, 0.8786666393280029, 0.871666669845581, 0.8773333430290222, 0.8776666522026062, 0.8793333172798157, 0.8736666440963745, 0.8673333525657654, 0.8816666603088379, 0.8763333559036255, 0.8806666731834412, 0.8833333253860474, 0.8803333044052124, 0.8826666474342346, 0.8820000290870667, 0.8843333125114441, 0.8843333125114441, 0.8799999952316284, 0.8826666474342346, 0.8840000033378601, 0.8856666684150696, 0.8836666941642761, 0.8870000243186951, 0.887666642665863, 0.8853333592414856, 0.8859999775886536, 0.8880000114440918, 0.887333333492279, 0.8853333592414856, 0.8883333206176758, 0.887666642665863, 0.890666663646698, 0.890999972820282, 0.8899999856948853, 0.8883333206176758, 0.8899999856948853, 0.890666663646698, 0.8859999775886536]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 1, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5, 5, 2, 7, 4, 0, 7, 9, 1, 3, 4, 6, 9], [0, 3, 0, 3, 4, 5, 1, 0, 4, 5], [29, 16, 35, 57, 31], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [6, 6, 3, 6, 8, 3, 4, 2, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 3], [16, 99, 6, 99, 87, 5]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 28, 18, 10, 5, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.square(tf.math.add(tf.math.add(tf.math.pow(tf.math.negative(tf.math.add(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.subtract(grad, grad))), grad), tf.math.multiply(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.divide_no_nan(grad, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), sigma))), tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))), sigma), tf.math.pow(alpha, tf.math.add(tf.math.sqrt(beta), sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [9, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [4], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [1, 3, 1, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 4, 1, 2, 4], [16, 99, 96, 99, 77, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 0, 1, 1, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), grad))), tf.math.pow(alpha, tf.math.add(tf.math.sqrt(beta), grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 3, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 2, 1, 4, 9, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 14, 96, 99, 61, 86]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 2, 1, 1, 1, 2, 1, 1, 1, 18, 10, 8, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 1, 0, 2, 3], [39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1, 1], [2], [0, 1], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 4, 8], [0, 0, 0, 4, 4, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.0917142853140831, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, grad))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [2.309638023376465, 2.3098347187042236, 2.3106324672698975, 2.3094048500061035, 2.310563325881958, 2.3094112873077393], "accuracy": [0.08981640636920929, 0.09496764093637466, 0.09311848133802414, 0.0940430611371994, 0.09179764986038208, 0.09259014576673508], "val_loss": [2.308894395828247, 2.308894395828247, 2.308894395828247, 2.308894395828247, 2.308894395828247, 2.308894395828247], "val_accuracy": [0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862]}, "mapping_values": [1, 11, 6, 5, 2, 1, 0, 1, 1, 3, 1, 2, 1, 16, 8, 8, 4], "tree_depth": 12}]