[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8808571696281433, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223215103149414, 1.8640538454055786, 1.390925645828247, 1.0857504606246948, 0.9175904989242554, 0.8278062343597412, 0.75929194688797, 0.7150763869285583, 0.6742342710494995, 0.6527069211006165, 0.6226239800453186, 0.6030511260032654, 0.5812473893165588, 0.5698184370994568, 0.5517233610153198, 0.5318202376365662, 0.5262278914451599, 0.5063096284866333, 0.4941454231739044, 0.4912639260292053, 0.47673994302749634, 0.46776485443115234, 0.45580968260765076, 0.45419755578041077, 0.4471202790737152, 0.4368197023868561, 0.4238806366920471, 0.41453513503074646, 0.41017231345176697, 0.4062040150165558, 0.40386685729026794, 0.3953916132450104, 0.39355871081352234, 0.3836102783679962, 0.37635838985443115, 0.3735085725784302, 0.363672137260437, 0.35395750403404236, 0.35972025990486145, 0.34721699357032776, 0.3442964553833008, 0.335767537355423, 0.3300938904285431, 0.32407090067863464, 0.32112976908683777, 0.3181473910808563, 0.31370431184768677, 0.3087446987628937, 0.3084625005722046, 0.30203962326049805, 0.293395072221756, 0.2889169156551361, 0.2914500832557678, 0.28307828307151794, 0.28207361698150635, 0.2786792516708374, 0.27818819880485535, 0.26387521624565125], "accuracy": [0.27222296595573425, 0.5027077198028564, 0.5674283504486084, 0.6277902722358704, 0.6709813475608826, 0.7058512568473816, 0.7269845604896545, 0.7415136694908142, 0.7586844563484192, 0.7617223858833313, 0.783119797706604, 0.7832518815994263, 0.7926297783851624, 0.8001585006713867, 0.807158887386322, 0.8103289008140564, 0.8133667707443237, 0.8190463781356812, 0.8247259259223938, 0.8271034359931946, 0.8298771381378174, 0.8341038227081299, 0.8366134166717529, 0.839519202709198, 0.8404437899589539, 0.848368763923645, 0.8515387773513794, 0.8564258217811584, 0.8529917001724243, 0.8585391640663147, 0.8515387773513794, 0.863558292388916, 0.8615770936012268, 0.8640866279602051, 0.8652753829956055, 0.8671245574951172, 0.8720116019248962, 0.8771628737449646, 0.8705587387084961, 0.876370370388031, 0.8787478804588318, 0.8784837126731873, 0.8828424215316772, 0.8842953443527222, 0.884691596031189, 0.8840311765670776, 0.8891823887825012, 0.8894465565681458, 0.8899748921394348, 0.8932769894599915, 0.8945978283882141, 0.8980319499969482, 0.896446943283081, 0.8988244533538818, 0.9019944667816162, 0.901862382888794, 0.8985602855682373, 0.904768168926239], "val_loss": [2.039530038833618, 1.5154659748077393, 1.039007544517517, 0.8366694450378418, 0.7400773167610168, 0.6859951019287109, 0.6454513669013977, 0.6114123463630676, 0.5899704694747925, 0.5724708437919617, 0.5533395409584045, 0.5345184803009033, 0.5225448608398438, 0.5092709064483643, 0.500229001045227, 0.49316829442977905, 0.480929970741272, 0.4729439616203308, 0.4688349962234497, 0.4563703238964081, 0.45455607771873474, 0.44636544585227966, 0.44144734740257263, 0.4332112669944763, 0.42851945757865906, 0.4277913272380829, 0.4196922183036804, 0.41600528359413147, 0.4114539325237274, 0.4113328456878662, 0.4059373438358307, 0.4033544063568115, 0.40210506319999695, 0.3963744640350342, 0.39264819025993347, 0.39112263917922974, 0.384288489818573, 0.383841872215271, 0.3804401755332947, 0.3786342442035675, 0.3777892291545868, 0.37486007809638977, 0.37355443835258484, 0.37450093030929565, 0.36811116337776184, 0.3697490096092224, 0.3684578537940979, 0.370509535074234, 0.36476588249206543, 0.36312252283096313, 0.361527681350708, 0.36036449670791626, 0.3581533133983612, 0.3633516728878021, 0.35499346256256104, 0.3547135293483734, 0.35882508754730225, 0.35363712906837463], "val_accuracy": [0.5473333597183228, 0.6496666669845581, 0.6846666932106018, 0.6959999799728394, 0.7279999852180481, 0.7450000047683716, 0.7580000162124634, 0.7713333368301392, 0.7763333320617676, 0.7816666960716248, 0.7963333129882812, 0.8109999895095825, 0.8116666674613953, 0.8113333582878113, 0.8116666674613953, 0.8186666369438171, 0.8259999752044678, 0.8236666917800903, 0.828000009059906, 0.8360000252723694, 0.8323333263397217, 0.8373333215713501, 0.8373333215713501, 0.8366666436195374, 0.843666672706604, 0.843999981880188, 0.846666693687439, 0.8483333587646484, 0.8493333458900452, 0.847000002861023, 0.8476666808128357, 0.8496666550636292, 0.8510000109672546, 0.8519999980926514, 0.8553333282470703, 0.8556666374206543, 0.8583333492279053, 0.859333336353302, 0.8560000061988831, 0.862333357334137, 0.8636666536331177, 0.859666645526886, 0.8636666536331177, 0.8643333315849304, 0.8653333187103271, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.8709999918937683, 0.8690000176429749, 0.8686666488647461, 0.8653333187103271, 0.8733333349227905, 0.8679999709129333, 0.8709999918937683, 0.8706666827201843, 0.8703333139419556, 0.8693333268165588]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8757143020629883, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22369122505188, 1.8692487478256226, 1.3968305587768555, 1.1101927757263184, 0.9336791634559631, 0.8354181051254272, 0.7766868472099304, 0.7349840998649597, 0.6951523423194885, 0.6638140082359314, 0.6402063965797424, 0.6128922700881958, 0.5912213325500488, 0.5735525488853455, 0.5588576793670654, 0.5393094420433044, 0.5370773077011108, 0.5150075554847717, 0.5011547803878784, 0.5002360343933105, 0.4903717339038849, 0.47731032967567444, 0.4629763066768646, 0.45514675974845886, 0.4449455440044403, 0.4381066560745239, 0.4279995858669281, 0.4287082254886627, 0.42159032821655273, 0.4106517732143402, 0.40920135378837585, 0.40047627687454224, 0.3916071951389313, 0.3944128453731537, 0.3754340410232544, 0.3730374872684479, 0.37162378430366516, 0.36401093006134033, 0.3557133972644806, 0.3546512722969055, 0.3497557044029236, 0.3428201377391815, 0.3367357552051544, 0.33002203702926636, 0.3225192129611969, 0.3252582550048828, 0.3177945911884308, 0.3124140202999115, 0.3173370957374573, 0.303263783454895, 0.3057784140110016, 0.2950432598590851, 0.29669588804244995, 0.2930430769920349, 0.2816118597984314, 0.27409443259239197, 0.2745918929576874, 0.2711932957172394, 0.2698814868927002, 0.2657710015773773, 0.250056654214859, 0.2568415403366089, 0.2533518373966217, 0.24851451814174652, 0.24560968577861786, 0.2341870218515396, 0.24109239876270294, 0.2373228818178177, 0.23241542279720306, 0.2262665331363678, 0.22527365386486053, 0.21996740996837616, 0.21930526196956635], "accuracy": [0.25676923990249634, 0.49253731966018677, 0.5661075115203857, 0.613789439201355, 0.6688680648803711, 0.7014925479888916, 0.718399167060852, 0.7320036888122559, 0.7466648817062378, 0.7535332441329956, 0.7666094303131104, 0.7721568942070007, 0.7839123010635376, 0.7938185334205627, 0.7928939461708069, 0.8005547523498535, 0.8045172095298767, 0.8113855719566345, 0.8142913579940796, 0.8171972036361694, 0.8234050869941711, 0.8284242749214172, 0.8354246616363525, 0.8329150676727295, 0.8392550349235535, 0.8437458872795105, 0.8469158411026001, 0.8448025584220886, 0.8479725122451782, 0.8525954484939575, 0.8539162874221802, 0.8545766472816467, 0.8585391640663147, 0.8582749962806702, 0.8683133125305176, 0.8644828796386719, 0.8652753829956055, 0.871879518032074, 0.8735966086387634, 0.8733324408531189, 0.8755778670310974, 0.8774270415306091, 0.8828424215316772, 0.8754457831382751, 0.8831065893173218, 0.8800686597824097, 0.8854840993881226, 0.8854840993881226, 0.8841632604598999, 0.8910315632820129, 0.8883898854255676, 0.8912957310676575, 0.8920882344245911, 0.8910315632820129, 0.8986923694610596, 0.8993527889251709, 0.8992207050323486, 0.9010698795318604, 0.8985602855682373, 0.9022586345672607, 0.908730685710907, 0.9059569239616394, 0.9091269373893738, 0.906749427318573, 0.909259021282196, 0.9141460657119751, 0.9119006991386414, 0.9101836085319519, 0.913089394569397, 0.9165235757827759, 0.9125610589981079, 0.9211464524269104, 0.9235239624977112], "val_loss": [2.0403249263763428, 1.5154987573623657, 1.0422403812408447, 0.8387992978096008, 0.7510427832603455, 0.695580005645752, 0.6530253887176514, 0.6178744435310364, 0.5999364256858826, 0.5713412165641785, 0.5530800819396973, 0.5475131869316101, 0.524192214012146, 0.5134314894676208, 0.5023601055145264, 0.48646578192710876, 0.48244255781173706, 0.47777214646339417, 0.46784237027168274, 0.45892879366874695, 0.45232152938842773, 0.44980737566947937, 0.44096922874450684, 0.4338999092578888, 0.43395283818244934, 0.4295245409011841, 0.4232158660888672, 0.4178820252418518, 0.41238343715667725, 0.4122479557991028, 0.4161117672920227, 0.4043774902820587, 0.40499255061149597, 0.3977145850658417, 0.39398470520973206, 0.38942623138427734, 0.39288410544395447, 0.38586491346359253, 0.381306916475296, 0.3804931938648224, 0.38289761543273926, 0.38062167167663574, 0.3747400641441345, 0.37656766176223755, 0.3709265887737274, 0.36917945742607117, 0.3709713816642761, 0.36817896366119385, 0.3638368248939514, 0.36045366525650024, 0.3651180863380432, 0.3578028976917267, 0.3574548363685608, 0.3569300174713135, 0.3547718822956085, 0.3563109040260315, 0.3550567328929901, 0.350341796875, 0.35620105266571045, 0.3520171046257019, 0.35230696201324463, 0.3567051589488983, 0.3506741225719452, 0.35174235701560974, 0.3486472964286804, 0.3549477458000183, 0.35153263807296753, 0.3470293879508972, 0.34795698523521423, 0.3506316840648651, 0.34678035974502563, 0.34551289677619934, 0.34740176796913147], "val_accuracy": [0.528333306312561, 0.6510000228881836, 0.687333345413208, 0.6996666789054871, 0.7300000190734863, 0.7490000128746033, 0.753000020980835, 0.7710000276565552, 0.784333348274231, 0.7900000214576721, 0.7906666398048401, 0.79666668176651, 0.8080000281333923, 0.812333345413208, 0.8136666417121887, 0.8199999928474426, 0.8216666579246521, 0.8273333311080933, 0.8266666531562805, 0.8299999833106995, 0.8413333296775818, 0.8399999737739563, 0.843999981880188, 0.8456666469573975, 0.8416666388511658, 0.8443333506584167, 0.8463333249092102, 0.847000002861023, 0.8493333458900452, 0.8516666889190674, 0.8486666679382324, 0.8529999852180481, 0.8526666760444641, 0.8546666502952576, 0.8569999933242798, 0.856333315372467, 0.8556666374206543, 0.8586666584014893, 0.8603333234786987, 0.8646666407585144, 0.8610000014305115, 0.8640000224113464, 0.8619999885559082, 0.8643333315849304, 0.8656666874885559, 0.8656666874885559, 0.8653333187103271, 0.8666666746139526, 0.8676666617393494, 0.8736666440963745, 0.871999979019165, 0.8730000257492065, 0.8730000257492065, 0.8723333477973938, 0.8759999871253967, 0.874666690826416, 0.8743333220481873, 0.8763333559036255, 0.8706666827201843, 0.8733333349227905, 0.875, 0.8700000047683716, 0.8776666522026062, 0.8773333430290222, 0.878333330154419, 0.875, 0.8756666779518127, 0.8806666731834412, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8790000081062317, 0.878333330154419]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 0], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 3, 3], [60, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 4, 8], [0, 0, 0, 4, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 87, 1]], "fitness": -0.14171428978443146, "mapping_values": [1, 6, 3, 3, 2, 10, 6, 4, 1, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [7.849346160888672, 96.11859893798828, 287.496337890625, 1170.7518310546875, 7448.27001953125, 24294.82421875, 29388.599609375, 38287.140625], "accuracy": [0.09602430462837219, 0.10355303436517715, 0.09708096832036972, 0.10989301651716232, 0.09826971590518951, 0.10434553027153015, 0.10077928751707077, 0.10870426893234253], "val_loss": [23.827966690063477, 138.8376922607422, 264.45428466796875, 2194.63525390625, 15624.4931640625, 25149.875, 23737.556640625, 44545.67578125], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.15033333003520966, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.1316666603088379]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 0, 1], [0, 2, 3, 2, 3], [2, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [3, 2, 3, 0, 3, 5], [0, 2, 0, 3], [97, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [6, 2, 2, 6, 8, 1, 4, 1, 8, 2, 2, 6], [0, 0, 0, 3, 3, 0, 3, 1, 2, 0, 6], [72, 61, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 8, 4, 4, 2, 2, 1, 1, 1, 23, 12, 11, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), sigma)), sigma), tf.math.pow(tf.math.subtract(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), sigma), tf.math.add(tf.math.add(tf.math.divide_no_nan(alpha, beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 4, 3, 6, 7], [0, 1, 0, 2, 2, 1, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 9, 3, 0, 3, 5], [0, 2, 3, 3], [16, 37], [0, 1, 1], [2], [0, 7], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 0, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [59, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 7, 7, 2, 2, 2, 0, 1, 3, 1, 2, 1, 20, 11, 9, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.divide_no_nan(grad, tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.negative(tf.math.pow(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), sigma)))), tf.math.sqrt(alpha)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 8, 3], [0, 1, 0, 2], [47, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [98, 16], [1, 1], [0], [0], [99], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 4, 3, 1, 2, 0], [97, 99, 3, 99, 61, 1]], "fitness": -0.09885714203119278, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 1, 0, 1, 1, 10, 5, 5, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(sigma, tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [1.724483009018761e+20, 6.505906354886395e+20, 1.0428927954731632e+21, 1.3770916944964223e+21, 1.6950245768280377e+21, 1.9123554877334975e+21, 2.171794069992453e+21, 2.3429508405558782e+21, 2.579975992631829e+21, 2.7671481264201374e+21, 2.8864586136483434e+21, 3.101971899891694e+21, 3.2418123274962453e+21], "accuracy": [0.09602430462837219, 0.10130762308835983, 0.09377889335155487, 0.09985470771789551, 0.0956280529499054, 0.107647605240345, 0.10038304328918457, 0.09919429570436478, 0.09998679161071777, 0.1026284471154213, 0.09853387624025345, 0.09681680053472519, 0.1014397069811821], "val_loss": [3.5569781700693066e+20, 6.867015528320588e+20, 9.584036479825766e+20, 1.1832356559111429e+21, 1.393288749818772e+21, 1.5711830461622319e+21, 1.7605817877538097e+21, 1.8829452933169079e+21, 2.042706408710714e+21, 2.1791753290442248e+21, 2.3178825383925388e+21, 2.3889518737872357e+21, 2.502165613019889e+21], "val_accuracy": [0.10133333504199982, 0.10066666454076767, 0.09666666388511658, 0.09666666388511658, 0.09966666996479034, 0.10433333367109299, 0.1003333330154419, 0.10833333432674408, 0.10199999809265137, 0.10066666454076767, 0.0963333323597908, 0.10533333569765091, 0.10266666859388351]}}]