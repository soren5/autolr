[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.878000020980835, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223759174346924, 1.8681567907333374, 1.3971633911132812, 1.1021500825881958, 0.9438490867614746, 0.8268281817436218, 0.7700234055519104, 0.7182450890541077, 0.6839274764060974, 0.655160665512085, 0.6316797733306885, 0.6046612858772278, 0.586663544178009, 0.5732303261756897, 0.5552444458007812, 0.5382086634635925, 0.5205084085464478, 0.5141545534133911, 0.49866363406181335, 0.4905571937561035, 0.48713892698287964, 0.4630949795246124, 0.46493759751319885, 0.4510720372200012, 0.4456666111946106, 0.4411585330963135, 0.43109801411628723, 0.4194287657737732, 0.41647717356681824, 0.4177640676498413, 0.39898860454559326, 0.3982110619544983, 0.3941095173358917, 0.3838343918323517, 0.38270825147628784, 0.38132011890411377, 0.3706604242324829, 0.3630581796169281, 0.35970449447631836, 0.3585955500602722, 0.3488880693912506, 0.3406795859336853, 0.3434852361679077, 0.34305644035339355, 0.32770219445228577, 0.3274216949939728, 0.3164256513118744, 0.31487780809402466, 0.31453031301498413, 0.3020377457141876, 0.3013147711753845, 0.29238083958625793, 0.30650538206100464, 0.2886098325252533, 0.28784143924713135, 0.28922179341316223, 0.27991431951522827, 0.27731093764305115, 0.27029022574424744, 0.2677718997001648, 0.2672445476055145], "accuracy": [0.27182671427726746, 0.4913485646247864, 0.5609562993049622, 0.6095628142356873, 0.6618676781654358, 0.6997754573822021, 0.7215691208839417, 0.7407211661338806, 0.7508915662765503, 0.7592127919197083, 0.7656848430633545, 0.7798177003860474, 0.7849689722061157, 0.789459764957428, 0.7991018295288086, 0.806630551815033, 0.81112140417099, 0.8088759779930115, 0.8210275769233704, 0.8181217908859253, 0.826310932636261, 0.8333113193511963, 0.8294808864593506, 0.8401796221733093, 0.8409721255302429, 0.8436138033866882, 0.8459912538528442, 0.8519350290298462, 0.8485008478164673, 0.8490291833877563, 0.856689989566803, 0.8573504090309143, 0.8615770936012268, 0.8644828796386719, 0.8605204224586487, 0.8614450097084045, 0.8671245574951172, 0.8726720213890076, 0.8732003569602966, 0.8689737319946289, 0.8762382864952087, 0.8798044919967651, 0.8717474341392517, 0.8825782537460327, 0.8840311765670776, 0.8845595121383667, 0.8885219693183899, 0.8865407705307007, 0.8887861371040344, 0.894069492816925, 0.8918240666389465, 0.8953903317451477, 0.8860124349594116, 0.8988244533538818, 0.8992207050323486, 0.8956544995307922, 0.9014661312103271, 0.89988112449646, 0.900409460067749, 0.9046360850334167, 0.9033153057098389], "val_loss": [2.0386126041412354, 1.5089809894561768, 1.0396978855133057, 0.8277255296707153, 0.7414798736572266, 0.6867381930351257, 0.6452507376670837, 0.6096968054771423, 0.5920496582984924, 0.5695558786392212, 0.550778865814209, 0.5315823554992676, 0.5166425704956055, 0.5040237307548523, 0.4927339255809784, 0.48035380244255066, 0.4752146899700165, 0.4640548527240753, 0.45926037430763245, 0.4498494863510132, 0.44989997148513794, 0.43486902117729187, 0.4302854835987091, 0.42699891328811646, 0.4222937822341919, 0.4179273545742035, 0.4156407117843628, 0.40615877509117126, 0.40567347407341003, 0.40483561158180237, 0.4008205533027649, 0.3957735300064087, 0.3910598158836365, 0.39842313528060913, 0.38378071784973145, 0.3824272155761719, 0.37983548641204834, 0.3832281529903412, 0.37993335723876953, 0.37290528416633606, 0.37028563022613525, 0.3697679340839386, 0.369826078414917, 0.3630952835083008, 0.3613884747028351, 0.3612003028392792, 0.3630628287792206, 0.35836127400398254, 0.35707563161849976, 0.3544061779975891, 0.35439038276672363, 0.35541149973869324, 0.34793493151664734, 0.355723112821579, 0.3566884696483612, 0.3480426073074341, 0.35176366567611694, 0.34468159079551697, 0.3469727337360382, 0.34757280349731445, 0.34379008412361145], "val_accuracy": [0.546999990940094, 0.6536666750907898, 0.6856666803359985, 0.7066666483879089, 0.7366666793823242, 0.7536666393280029, 0.7599999904632568, 0.7720000147819519, 0.7706666588783264, 0.7926666736602783, 0.7963333129882812, 0.7956666946411133, 0.8103333115577698, 0.809333324432373, 0.8220000267028809, 0.8226666450500488, 0.8243333101272583, 0.8330000042915344, 0.8349999785423279, 0.8370000123977661, 0.8333333134651184, 0.8429999947547913, 0.8463333249092102, 0.8446666598320007, 0.8476666808128357, 0.8479999899864197, 0.8450000286102295, 0.8506666421890259, 0.8496666550636292, 0.8529999852180481, 0.8556666374206543, 0.8556666374206543, 0.8586666584014893, 0.8526666760444641, 0.8576666712760925, 0.8610000014305115, 0.859000027179718, 0.8616666793823242, 0.8653333187103271, 0.8673333525657654, 0.8673333525657654, 0.8659999966621399, 0.8693333268165588, 0.8690000176429749, 0.8726666569709778, 0.8726666569709778, 0.8740000128746033, 0.8730000257492065, 0.871999979019165, 0.8759999871253967, 0.874666690826416, 0.871999979019165, 0.8806666731834412, 0.8776666522026062, 0.8706666827201843, 0.8820000290870667, 0.878333330154419, 0.878000020980835, 0.8806666731834412, 0.8793333172798157, 0.878333330154419]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8717142939567566, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2216501235961914, 1.859484076499939, 1.3890140056610107, 1.0996689796447754, 0.9367491006851196, 0.8454229831695557, 0.7737762928009033, 0.7291862964630127, 0.6897257566452026, 0.6593368053436279, 0.6327006220817566, 0.614321231842041, 0.5878353118896484, 0.5744184255599976, 0.5614858269691467, 0.5456293225288391, 0.5361277461051941, 0.5240253210067749, 0.5064717531204224, 0.49911031126976013, 0.48632776737213135, 0.4776075780391693, 0.46744504570961, 0.46241557598114014, 0.45368602871894836, 0.4449184238910675, 0.4342869520187378, 0.4261215329170227, 0.42250266671180725, 0.4066848158836365, 0.4065406322479248, 0.4017900824546814, 0.39983394742012024, 0.38496479392051697, 0.38351568579673767, 0.3830987513065338, 0.3791355788707733, 0.37380850315093994, 0.36583101749420166, 0.35881170630455017, 0.3543611764907837, 0.35349327325820923, 0.34653621912002563, 0.3476833999156952, 0.33372458815574646, 0.3288215398788452, 0.33379435539245605, 0.31445416808128357, 0.3207513093948364, 0.3118746280670166], "accuracy": [0.26865673065185547, 0.4954431354999542, 0.5633337497711182, 0.6176198720932007, 0.6608110070228577, 0.6921146512031555, 0.7177387475967407, 0.7297582626342773, 0.7464007139205933, 0.7563069462776184, 0.7627789974212646, 0.7766477465629578, 0.7876105904579163, 0.7913089394569397, 0.7991018295288086, 0.8025360107421875, 0.805177628993988, 0.8123101592063904, 0.8164047002792358, 0.8212917447090149, 0.8257825970649719, 0.8296129703521729, 0.8372738361358643, 0.8368775844573975, 0.8379341959953308, 0.8438779711723328, 0.8516708612442017, 0.8499537706375122, 0.8502179384231567, 0.8561616539955139, 0.854708731174469, 0.8544445633888245, 0.8580108284950256, 0.8667283058166504, 0.8638224601745605, 0.863029956817627, 0.8640866279602051, 0.8643507957458496, 0.8683133125305176, 0.8742570281028748, 0.8772949576377869, 0.8728041052818298, 0.8804649114608765, 0.8771628737449646, 0.8811253309249878, 0.8803328275680542, 0.8803328275680542, 0.889578640460968, 0.8850878477096558, 0.8901069760322571], "val_loss": [2.033369541168213, 1.5045133829116821, 1.036993384361267, 0.837235689163208, 0.7587953805923462, 0.6990031003952026, 0.6515709161758423, 0.6187254190444946, 0.5899598598480225, 0.5683569312095642, 0.552330732345581, 0.5333783626556396, 0.5194000005722046, 0.5112830996513367, 0.5011347532272339, 0.48834773898124695, 0.4806487560272217, 0.4734763503074646, 0.46665245294570923, 0.45716771483421326, 0.4469505250453949, 0.44435399770736694, 0.4370458126068115, 0.4359104037284851, 0.42833971977233887, 0.4222049117088318, 0.41541966795921326, 0.4163983166217804, 0.4102674126625061, 0.4066086709499359, 0.40452539920806885, 0.4016132950782776, 0.394639253616333, 0.39101719856262207, 0.3917970359325409, 0.3900468647480011, 0.39020442962646484, 0.3832506537437439, 0.3792833387851715, 0.3751927614212036, 0.374531626701355, 0.36987102031707764, 0.36882349848747253, 0.3738933801651001, 0.36393269896507263, 0.3672046661376953, 0.3624288737773895, 0.35893112421035767, 0.36082160472869873, 0.3544025421142578], "val_accuracy": [0.5533333420753479, 0.6553333401679993, 0.6779999732971191, 0.7093333601951599, 0.7226666808128357, 0.7566666603088379, 0.7676666378974915, 0.7820000052452087, 0.7926666736602783, 0.7956666946411133, 0.7960000038146973, 0.809333324432373, 0.8140000104904175, 0.8176666498184204, 0.8240000009536743, 0.8236666917800903, 0.8289999961853027, 0.8309999704360962, 0.8353333473205566, 0.8363333344459534, 0.8443333506584167, 0.843666672706604, 0.8463333249092102, 0.847000002861023, 0.8506666421890259, 0.847000002861023, 0.8543333411216736, 0.8523333072662354, 0.856333315372467, 0.8573333621025085, 0.8566666841506958, 0.8586666584014893, 0.8583333492279053, 0.862666666507721, 0.859666645526886, 0.8646666407585144, 0.8633333444595337, 0.8656666874885559, 0.8646666407585144, 0.8686666488647461, 0.8690000176429749, 0.8700000047683716, 0.871999979019165, 0.8703333139419556, 0.8756666779518127, 0.8736666440963745, 0.8713333606719971, 0.8703333139419556, 0.8736666440963745, 0.8756666779518127]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 6, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 1, 0, 8, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 6, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 4, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.7559999823570251, "mapping_values": [1, 7, 4, 3, 2, 8, 5, 3, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), grad), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.287876844406128, 2.2676005363464355, 2.2550253868103027, 2.242851734161377, 2.23063588142395, 2.21820068359375, 2.203982353210449, 2.185492515563965, 2.164968729019165, 2.1407625675201416, 2.1127662658691406, 2.0792806148529053, 2.0447964668273926, 2.000737428665161, 1.951141119003296, 1.8989715576171875, 1.8402239084243774, 1.7788383960723877, 1.7087510824203491, 1.6425824165344238, 1.5749377012252808, 1.5143862962722778, 1.4578578472137451, 1.4061017036437988, 1.354946255683899, 1.3242989778518677, 1.285291075706482, 1.2463253736495972, 1.209003210067749, 1.1819615364074707, 1.1599124670028687, 1.1440082788467407, 1.1200215816497803, 1.0941522121429443, 1.07863187789917, 1.064787745475769, 1.0601269006729126, 1.0436962842941284, 1.0229463577270508, 1.0245842933654785, 0.9878597855567932, 0.9869478344917297, 0.985028088092804, 0.9680440425872803, 0.9560131430625916, 0.9486467838287354, 0.9344450831413269, 0.9211692214012146, 0.9197527170181274, 0.9091215133666992, 0.9015390872955322, 0.8987582921981812, 0.888027012348175, 0.885190486907959, 0.8779403567314148, 0.87593013048172, 0.8555935025215149, 0.8543880581855774, 0.848791778087616, 0.8523638248443604, 0.8477520942687988, 0.837716281414032, 0.8446071743965149, 0.8354780077934265, 0.8308771252632141, 0.8274620175361633, 0.8272799253463745, 0.8172316551208496, 0.8128354549407959, 0.8137364983558655, 0.8136565089225769, 0.8124206066131592, 0.7971824407577515, 0.7903530597686768, 0.7944186925888062, 0.7915621399879456, 0.7885087728500366, 0.7821111083030701, 0.7836806774139404, 0.7786428332328796, 0.770855188369751, 0.7718202471733093, 0.7729671597480774, 0.7670550346374512, 0.7633127570152283, 0.7603169083595276, 0.759472668170929, 0.7621016502380371], "accuracy": [0.14330999553203583, 0.18676528334617615, 0.22995641827583313, 0.2502971887588501, 0.278959184885025, 0.29203540086746216, 0.3105269968509674, 0.3279619514942169, 0.3459252417087555, 0.36705851554870605, 0.37670058012008667, 0.3895126283168793, 0.4039096534252167, 0.4130233824253082, 0.43085458874702454, 0.443798691034317, 0.44908201694488525, 0.4644036591053009, 0.47747984528541565, 0.488971084356308, 0.5065380930900574, 0.5171047449111938, 0.5283318161964417, 0.5392946600914001, 0.5544841885566711, 0.5621450543403625, 0.5575221180915833, 0.5680887699127197, 0.5871087312698364, 0.5972790718078613, 0.5955620408058167, 0.598599910736084, 0.6086382269859314, 0.6196011304855347, 0.6190727949142456, 0.6210539937019348, 0.6238277554512024, 0.6305639743804932, 0.635451078414917, 0.6382247805595398, 0.6489235162734985, 0.6498481035232544, 0.651168942451477, 0.6544709801673889, 0.6597543358802795, 0.6585655808448792, 0.670320987701416, 0.6733588576316833, 0.6707172393798828, 0.6729626059532166, 0.6781138777732849, 0.6715096831321716, 0.6847180128097534, 0.6800950765609741, 0.6785101294517517, 0.6818121671676636, 0.695813000202179, 0.6919825673103333, 0.6942279934883118, 0.6866992712020874, 0.6897371411323547, 0.7005679607391357, 0.691850483417511, 0.6975300312042236, 0.7016246318817139, 0.698718786239624, 0.7005679607391357, 0.7004358768463135, 0.7079645991325378, 0.6996433734893799, 0.7024171352386475, 0.7053229212760925, 0.7099458575248718, 0.71100252866745, 0.7066437602043152, 0.7140403985977173, 0.7131158113479614, 0.713379979133606, 0.7094175219535828, 0.7157574892044067, 0.7217012047767639, 0.7154933214187622, 0.7185312509536743, 0.715889573097229, 0.7224937081336975, 0.7194558382034302, 0.724739134311676, 0.722757875919342], "val_loss": [2.2694878578186035, 2.2553489208221436, 2.242875576019287, 2.229872941970825, 2.2157063484191895, 2.2000370025634766, 2.1821844577789307, 2.1613681316375732, 2.1374170780181885, 2.109269380569458, 2.0765414237976074, 2.038638114929199, 1.9944688081741333, 1.9434399604797363, 1.885323405265808, 1.8199725151062012, 1.7482178211212158, 1.671566367149353, 1.5919036865234375, 1.5128898620605469, 1.4362373352050781, 1.3641128540039062, 1.2979079484939575, 1.2382144927978516, 1.1855299472808838, 1.1399784088134766, 1.0994901657104492, 1.0629658699035645, 1.0296612977981567, 1.0004324913024902, 0.9749232530593872, 0.9522693753242493, 0.9319490790367126, 0.9131707549095154, 0.8964444994926453, 0.8807063698768616, 0.8670875430107117, 0.8535104393959045, 0.8409499526023865, 0.8311346173286438, 0.8192926645278931, 0.8087510466575623, 0.7990216612815857, 0.79117351770401, 0.7824975848197937, 0.7738237977027893, 0.7657789587974548, 0.7594541311264038, 0.7520262598991394, 0.7468062043190002, 0.7408257126808167, 0.7342736124992371, 0.7287883162498474, 0.7233593463897705, 0.7183022499084473, 0.7130011320114136, 0.7080714702606201, 0.7024012207984924, 0.6991450786590576, 0.6943277716636658, 0.6907963752746582, 0.6867544054985046, 0.6839731335639954, 0.6809809803962708, 0.6763258576393127, 0.6745628118515015, 0.6728261113166809, 0.6680227518081665, 0.665632963180542, 0.6618810892105103, 0.6591240763664246, 0.6564914584159851, 0.6530529260635376, 0.649308979511261, 0.6482775211334229, 0.6450833082199097, 0.6417680382728577, 0.6395589709281921, 0.6367877721786499, 0.6359210014343262, 0.6337758898735046, 0.6307644248008728, 0.6281667351722717, 0.6267913579940796, 0.6250766515731812, 0.6233953237533569, 0.621107816696167, 0.6198346614837646], "val_accuracy": [0.2446666657924652, 0.3356666564941406, 0.39766666293144226, 0.4313333332538605, 0.4476666748523712, 0.4583333432674408, 0.4633333384990692, 0.47866666316986084, 0.4886666536331177, 0.5006666779518127, 0.5210000276565552, 0.5373333096504211, 0.5556666851043701, 0.5726666450500488, 0.5889999866485596, 0.6000000238418579, 0.6133333444595337, 0.621999979019165, 0.6333333253860474, 0.6386666893959045, 0.6456666588783264, 0.6516666412353516, 0.6570000052452087, 0.6650000214576721, 0.6666666865348816, 0.6676666736602783, 0.6746666431427002, 0.6786666512489319, 0.6773333549499512, 0.6886666417121887, 0.6886666417121887, 0.6883333325386047, 0.6976666450500488, 0.6973333358764648, 0.7016666531562805, 0.7043333053588867, 0.7046666741371155, 0.706333339214325, 0.7123333215713501, 0.7143333554267883, 0.7146666646003723, 0.7200000286102295, 0.7213333249092102, 0.7223333120346069, 0.7236666679382324, 0.7300000190734863, 0.7279999852180481, 0.7269999980926514, 0.7300000190734863, 0.7326666712760925, 0.734000027179718, 0.7350000143051147, 0.7369999885559082, 0.7379999756813049, 0.7393333315849304, 0.7409999966621399, 0.7403333187103271, 0.7443333268165588, 0.7443333268165588, 0.7456666827201843, 0.7463333606719971, 0.7456666827201843, 0.7483333349227905, 0.7486666440963745, 0.7506666779518127, 0.750333309173584, 0.7526666522026062, 0.7523333430290222, 0.753333330154419, 0.7540000081062317, 0.7556666731834412, 0.7553333044052124, 0.7566666603088379, 0.7566666603088379, 0.7553333044052124, 0.7603333592414856, 0.7609999775886536, 0.7616666555404663, 0.7633333206176758, 0.7633333206176758, 0.7643333077430725, 0.7636666893959045, 0.7663333415985107, 0.765999972820282, 0.762333333492279, 0.7590000033378601, 0.765999972820282, 0.765333354473114]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 2, 3, 0, 6, 6], [0, 2, 0, 1, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 1, 3], [16, 16], [0, 1], [0], [1], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 2, 6, 8, 1, 4, 3, 4, 2, 8], [0, 0, 0, 3, 0, 4, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 2, 1, 1, 0, 16, 8, 8, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(alpha, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(grad, tf.math.multiply(sigma, alpha)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 9, 0, 0, 3], [0, 2, 2, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 0], [0, 6, 3, 0, 3, 9], [1, 2, 3, 3], [16, 16], [0, 1], [0], [0], [51], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1], [6, 3, 2, 6, 8, 1, 4, 1, 4, 2, 8, 5, 6, 5], [0, 0, 3, 3, 0, 0, 3, 1, 3, 0, 3], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 0, 1, 2, 1, 1, 0, 2, 1, 1, 1, 25, 14, 11, 5], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(sigma, tf.math.pow(tf.math.add(tf.math.sqrt(sigma), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.divide_no_nan(sigma, alpha))))), sigma)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.square(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 4, 3, 0, 3], [0, 1, 0, 2], [94, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 3, 4, 3, 5, 5], [0, 0, 0, 3, 5], [16, 7, 37], [0, 1], [0], [0], [64], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 2, 1], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 5, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.09114285558462143, "mapping_values": [1, 9, 5, 4, 2, 12, 7, 5, 3, 2, 1, 1, 1, 25, 13, 12, 6], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.negative(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), sigma), tf.math.sqrt(alpha)), tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.subtract(grad, grad))", "other_info": {"loss": [2.3096108436584473, 2.3095507621765137, 2.310373544692993, 2.3090596199035645, 2.3097479343414307, 2.3086555004119873], "accuracy": [0.08942015469074249, 0.09179764986038208, 0.09311848133802414, 0.09470347315073013, 0.09008057415485382, 0.09721305221319199], "val_loss": [2.3093442916870117, 2.3093442916870117, 2.3093442916870117, 2.3093442916870117, 2.3093442916870117, 2.3093442916870117], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}]