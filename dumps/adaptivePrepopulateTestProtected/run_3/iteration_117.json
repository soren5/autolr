[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.878000020980835, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223759174346924, 1.8681567907333374, 1.3971633911132812, 1.1021500825881958, 0.9438490867614746, 0.8268281817436218, 0.7700234055519104, 0.7182450890541077, 0.6839274764060974, 0.655160665512085, 0.6316797733306885, 0.6046612858772278, 0.586663544178009, 0.5732303261756897, 0.5552444458007812, 0.5382086634635925, 0.5205084085464478, 0.5141545534133911, 0.49866363406181335, 0.4905571937561035, 0.48713892698287964, 0.4630949795246124, 0.46493759751319885, 0.4510720372200012, 0.4456666111946106, 0.4411585330963135, 0.43109801411628723, 0.4194287657737732, 0.41647717356681824, 0.4177640676498413, 0.39898860454559326, 0.3982110619544983, 0.3941095173358917, 0.3838343918323517, 0.38270825147628784, 0.38132011890411377, 0.3706604242324829, 0.3630581796169281, 0.35970449447631836, 0.3585955500602722, 0.3488880693912506, 0.3406795859336853, 0.3434852361679077, 0.34305644035339355, 0.32770219445228577, 0.3274216949939728, 0.3164256513118744, 0.31487780809402466, 0.31453031301498413, 0.3020377457141876, 0.3013147711753845, 0.29238083958625793, 0.30650538206100464, 0.2886098325252533, 0.28784143924713135, 0.28922179341316223, 0.27991431951522827, 0.27731093764305115, 0.27029022574424744, 0.2677718997001648, 0.2672445476055145], "accuracy": [0.27182671427726746, 0.4913485646247864, 0.5609562993049622, 0.6095628142356873, 0.6618676781654358, 0.6997754573822021, 0.7215691208839417, 0.7407211661338806, 0.7508915662765503, 0.7592127919197083, 0.7656848430633545, 0.7798177003860474, 0.7849689722061157, 0.789459764957428, 0.7991018295288086, 0.806630551815033, 0.81112140417099, 0.8088759779930115, 0.8210275769233704, 0.8181217908859253, 0.826310932636261, 0.8333113193511963, 0.8294808864593506, 0.8401796221733093, 0.8409721255302429, 0.8436138033866882, 0.8459912538528442, 0.8519350290298462, 0.8485008478164673, 0.8490291833877563, 0.856689989566803, 0.8573504090309143, 0.8615770936012268, 0.8644828796386719, 0.8605204224586487, 0.8614450097084045, 0.8671245574951172, 0.8726720213890076, 0.8732003569602966, 0.8689737319946289, 0.8762382864952087, 0.8798044919967651, 0.8717474341392517, 0.8825782537460327, 0.8840311765670776, 0.8845595121383667, 0.8885219693183899, 0.8865407705307007, 0.8887861371040344, 0.894069492816925, 0.8918240666389465, 0.8953903317451477, 0.8860124349594116, 0.8988244533538818, 0.8992207050323486, 0.8956544995307922, 0.9014661312103271, 0.89988112449646, 0.900409460067749, 0.9046360850334167, 0.9033153057098389], "val_loss": [2.0386126041412354, 1.5089809894561768, 1.0396978855133057, 0.8277255296707153, 0.7414798736572266, 0.6867381930351257, 0.6452507376670837, 0.6096968054771423, 0.5920496582984924, 0.5695558786392212, 0.550778865814209, 0.5315823554992676, 0.5166425704956055, 0.5040237307548523, 0.4927339255809784, 0.48035380244255066, 0.4752146899700165, 0.4640548527240753, 0.45926037430763245, 0.4498494863510132, 0.44989997148513794, 0.43486902117729187, 0.4302854835987091, 0.42699891328811646, 0.4222937822341919, 0.4179273545742035, 0.4156407117843628, 0.40615877509117126, 0.40567347407341003, 0.40483561158180237, 0.4008205533027649, 0.3957735300064087, 0.3910598158836365, 0.39842313528060913, 0.38378071784973145, 0.3824272155761719, 0.37983548641204834, 0.3832281529903412, 0.37993335723876953, 0.37290528416633606, 0.37028563022613525, 0.3697679340839386, 0.369826078414917, 0.3630952835083008, 0.3613884747028351, 0.3612003028392792, 0.3630628287792206, 0.35836127400398254, 0.35707563161849976, 0.3544061779975891, 0.35439038276672363, 0.35541149973869324, 0.34793493151664734, 0.355723112821579, 0.3566884696483612, 0.3480426073074341, 0.35176366567611694, 0.34468159079551697, 0.3469727337360382, 0.34757280349731445, 0.34379008412361145], "val_accuracy": [0.546999990940094, 0.6536666750907898, 0.6856666803359985, 0.7066666483879089, 0.7366666793823242, 0.7536666393280029, 0.7599999904632568, 0.7720000147819519, 0.7706666588783264, 0.7926666736602783, 0.7963333129882812, 0.7956666946411133, 0.8103333115577698, 0.809333324432373, 0.8220000267028809, 0.8226666450500488, 0.8243333101272583, 0.8330000042915344, 0.8349999785423279, 0.8370000123977661, 0.8333333134651184, 0.8429999947547913, 0.8463333249092102, 0.8446666598320007, 0.8476666808128357, 0.8479999899864197, 0.8450000286102295, 0.8506666421890259, 0.8496666550636292, 0.8529999852180481, 0.8556666374206543, 0.8556666374206543, 0.8586666584014893, 0.8526666760444641, 0.8576666712760925, 0.8610000014305115, 0.859000027179718, 0.8616666793823242, 0.8653333187103271, 0.8673333525657654, 0.8673333525657654, 0.8659999966621399, 0.8693333268165588, 0.8690000176429749, 0.8726666569709778, 0.8726666569709778, 0.8740000128746033, 0.8730000257492065, 0.871999979019165, 0.8759999871253967, 0.874666690826416, 0.871999979019165, 0.8806666731834412, 0.8776666522026062, 0.8706666827201843, 0.8820000290870667, 0.878333330154419, 0.878000020980835, 0.8806666731834412, 0.8793333172798157, 0.878333330154419]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8634285926818848, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2223644256591797, 1.8656655550003052, 1.3852883577346802, 1.0954606533050537, 0.935048520565033, 0.8384788036346436, 0.7814138531684875, 0.7302130460739136, 0.6846144199371338, 0.6606805324554443, 0.6347119808197021, 0.6154800057411194, 0.5932205319404602, 0.5747711658477783, 0.5661018490791321, 0.5427438616752625, 0.5315868258476257, 0.5230464935302734, 0.5065425634384155, 0.492779016494751, 0.4834836423397064, 0.4755232036113739, 0.4620181620121002, 0.4572421908378601, 0.44897720217704773, 0.441735178232193, 0.44034048914909363, 0.4269067943096161, 0.42022380232810974, 0.4140479564666748, 0.4072710871696472, 0.400098592042923, 0.40305420756340027, 0.387393057346344, 0.3870968520641327, 0.3828488290309906, 0.3701918125152588, 0.3609974980354309, 0.3612358868122101, 0.3569420278072357, 0.3477681577205658, 0.34885722398757935, 0.3425423800945282, 0.3360464572906494, 0.33240222930908203, 0.3282718062400818, 0.3247493505477905, 0.31833967566490173, 0.30706876516342163, 0.31284844875335693, 0.3042733073234558, 0.3031628131866455, 0.2978355586528778, 0.2976436913013458, 0.2893141508102417, 0.2910754680633545, 0.2852029800415039, 0.2811444103717804, 0.2782192528247833, 0.26743975281715393, 0.26643896102905273, 0.2609722912311554, 0.25802189111709595, 0.24520914256572723, 0.24855124950408936, 0.2487582117319107, 0.24275855720043182, 0.23908117413520813], "accuracy": [0.26482629776000977, 0.49848103523254395, 0.5695416927337646, 0.6189407110214233, 0.6637167930603027, 0.7013604640960693, 0.7172104120254517, 0.7366266250610352, 0.7520803213119507, 0.7593448758125305, 0.7683265209197998, 0.7745344042778015, 0.7880068421363831, 0.7911768555641174, 0.7973847389221191, 0.806630551815033, 0.8104609847068787, 0.8125742673873901, 0.819442629814148, 0.8230088353157043, 0.828292191028595, 0.8309338092803955, 0.8391229510307312, 0.8399154543876648, 0.8381983637809753, 0.842028796672821, 0.8436138033866882, 0.8482366800308228, 0.8482366800308228, 0.8580108284950256, 0.8520671129226685, 0.8533879518508911, 0.852859616279602, 0.8652753829956055, 0.8656716346740723, 0.8650112152099609, 0.8651432991027832, 0.8704266548156738, 0.8725399374961853, 0.8734645247459412, 0.8758420348167419, 0.8757099509239197, 0.8821820020675659, 0.882710337638855, 0.8825782537460327, 0.8850878477096558, 0.8821820020675659, 0.8836349248886108, 0.8883898854255676, 0.8861445188522339, 0.8887861371040344, 0.8923524022102356, 0.8928807377815247, 0.8947299122810364, 0.898428201675415, 0.8953903317451477, 0.8976356983184814, 0.901862382888794, 0.8977677822113037, 0.89988112449646, 0.9025228023529053, 0.9068815112113953, 0.9064852595329285, 0.9122969508171082, 0.9103156924247742, 0.9078060984611511, 0.9145423173904419, 0.9117686152458191], "val_loss": [2.037689208984375, 1.5123834609985352, 1.0397870540618896, 0.8297390937805176, 0.7418617606163025, 0.6881350874900818, 0.6455707550048828, 0.6111334562301636, 0.5862144231796265, 0.5639325380325317, 0.5526185631752014, 0.5359362959861755, 0.5215473771095276, 0.5115082263946533, 0.49864107370376587, 0.4876920282840729, 0.47577282786369324, 0.4781756103038788, 0.4578022360801697, 0.45511189103126526, 0.45100951194763184, 0.4438236951828003, 0.4319228529930115, 0.4316127896308899, 0.4271135926246643, 0.4274516701698303, 0.41908830404281616, 0.40853777527809143, 0.4081763029098511, 0.4060303568840027, 0.39779287576675415, 0.39612096548080444, 0.39781302213668823, 0.3925090432167053, 0.3868500292301178, 0.3856217563152313, 0.3888629078865051, 0.3769793212413788, 0.37735050916671753, 0.37438875436782837, 0.3716917335987091, 0.3715013563632965, 0.36620470881462097, 0.36233416199684143, 0.3652290999889374, 0.3665756285190582, 0.3580000698566437, 0.3588881492614746, 0.3554081916809082, 0.3595120906829834, 0.35412710905075073, 0.35515296459198, 0.35019001364707947, 0.34982943534851074, 0.3560861349105835, 0.34826725721359253, 0.34479662775993347, 0.3443218171596527, 0.3451882600784302, 0.3440485894680023, 0.34311482310295105, 0.3424619138240814, 0.3416452705860138, 0.3438990116119385, 0.343567818403244, 0.33422401547431946, 0.3368588089942932, 0.33483654260635376], "val_accuracy": [0.5490000247955322, 0.6669999957084656, 0.690666675567627, 0.7099999785423279, 0.734000027179718, 0.7556666731834412, 0.7630000114440918, 0.7693333625793457, 0.781000018119812, 0.7903333306312561, 0.7926666736602783, 0.8003333210945129, 0.8063333630561829, 0.8040000200271606, 0.8130000233650208, 0.8199999928474426, 0.8266666531562805, 0.8216666579246521, 0.8326666951179504, 0.8339999914169312, 0.8366666436195374, 0.8386666774749756, 0.843999981880188, 0.8429999947547913, 0.846666693687439, 0.8429999947547913, 0.8443333506584167, 0.8539999723434448, 0.8513333201408386, 0.8523333072662354, 0.8543333411216736, 0.8533333539962769, 0.8566666841506958, 0.8573333621025085, 0.859666645526886, 0.8586666584014893, 0.8619999885559082, 0.8640000224113464, 0.8640000224113464, 0.8679999709129333, 0.8646666407585144, 0.862333357334137, 0.8703333139419556, 0.871999979019165, 0.8693333268165588, 0.8663333058357239, 0.874666690826416, 0.8730000257492065, 0.8726666569709778, 0.8653333187103271, 0.8773333430290222, 0.8733333349227905, 0.8733333349227905, 0.875333309173584, 0.875, 0.8820000290870667, 0.8806666731834412, 0.8799999952316284, 0.8793333172798157, 0.8836666941642761, 0.8790000081062317, 0.8836666941642761, 0.8863333463668823, 0.8826666474342346, 0.8846666812896729, 0.8830000162124634, 0.8840000033378601, 0.8846666812896729]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 8, 3, 0, 8], [0, 1, 2, 2], [39, 39], [0, 1, 1, 0, 0, 1, 0, 1, 0, 0], [0, 2, 3, 0, 3, 8], [0, 0, 0, 3], [23, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [1, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 4, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 17, 61, 1]], "fitness": -0.7628571391105652, "mapping_values": [1, 1, 0, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [2.340916395187378, 2.305048704147339, 2.2447614669799805, 2.142601490020752, 1.8754050731658936, 1.452519178390503, 1.1676911115646362, 1.052261471748352, 0.9487153887748718, 0.8908084034919739, 0.8482918739318848, 0.79886394739151, 0.7760136723518372, 0.7847883105278015, 0.730007529258728, 0.7370837926864624, 0.7054383754730225, 0.682282030582428], "accuracy": [0.10276053100824356, 0.11517632752656937, 0.16351869702339172, 0.2475234419107437, 0.3933430314064026, 0.5090476870536804, 0.5868445634841919, 0.629111111164093, 0.663848876953125, 0.6778497099876404, 0.6827367544174194, 0.6976621150970459, 0.7087571024894714, 0.707568347454071, 0.7276449799537659, 0.719852089881897, 0.735569953918457, 0.7434949278831482], "val_loss": [2.302335739135742, 2.254807710647583, 2.1786653995513916, 1.9959328174591064, 1.523714542388916, 1.0968893766403198, 0.953626811504364, 0.885407567024231, 0.774674654006958, 0.7479231953620911, 0.771638035774231, 0.7019752860069275, 0.6545568108558655, 0.6672512292861938, 0.6545602679252625, 0.7811684608459473, 0.6305949687957764, 0.6494851112365723], "val_accuracy": [0.10366666316986084, 0.12033333629369736, 0.2536666691303253, 0.5233333110809326, 0.6293333172798157, 0.6646666526794434, 0.6660000085830688, 0.6759999990463257, 0.7070000171661377, 0.7170000076293945, 0.6883333325386047, 0.7300000190734863, 0.7516666650772095, 0.7486666440963745, 0.7480000257492065, 0.687666654586792, 0.7486666440963745, 0.7303333282470703]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 3, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 8, 3, 2, 3, 1, 4, 1, 4, 2, 5], [2, 0, 0, 3, 0, 0, 3, 1, 2, 0], [75, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(beta, tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), sigma), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 6], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 2, 3, 0, 8, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [2, 3, 3, 6, 8, 8, 4, 1, 4, 1, 6], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 10, 6, 4, 2, 2, 1, 1, 1, 15, 8, 7, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.3035922050476074, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 8, 4, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1], [0, 2, 3, 3, 3, 5, 5, 8, 4, 2, 9, 0, 1, 1, 5], [0, 2, 0, 3, 2, 4, 1, 5], [16, 16, 27], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 0, 2, 8, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 4], [55, 99, 96, 99, 61, 25]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 23, 15, 8, 3, 2, 1, 1, 1, 21, 12, 9, 5], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.square(tf.math.sqrt(tf.math.pow(tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), beta), tf.math.negative(tf.math.subtract(tf.math.subtract(grad, alpha), tf.math.square(grad)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma)), tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), sigma)), tf.math.sqrt(tf.math.sqrt(alpha))), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}]