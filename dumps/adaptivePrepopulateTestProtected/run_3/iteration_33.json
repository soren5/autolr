[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.87628573179245, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221153497695923, 1.8690768480300903, 1.3930829763412476, 1.0920813083648682, 0.946754515171051, 0.8386176228523254, 0.7666530013084412, 0.7169585227966309, 0.6927855014801025, 0.6578141450881958, 0.6284602284431458, 0.6175082921981812, 0.5932229161262512, 0.5866845846176147, 0.5698589086532593, 0.5537236928939819, 0.5400969386100769, 0.5237241387367249, 0.5110511779785156, 0.4987642467021942, 0.4859139025211334, 0.48274683952331543, 0.4702848792076111, 0.46559596061706543, 0.4571192264556885, 0.45048508048057556, 0.43323010206222534, 0.43672871589660645, 0.4228549599647522, 0.4158686399459839, 0.40923213958740234, 0.3978442847728729, 0.3938561677932739, 0.39290058612823486, 0.3881992995738983, 0.372427374124527, 0.3708527982234955, 0.3674342930316925, 0.3639999032020569, 0.3603408634662628, 0.34736937284469604, 0.34856680035591125, 0.3419991731643677, 0.3314146399497986, 0.33113908767700195, 0.3256821036338806, 0.32241684198379517, 0.31129369139671326, 0.31209611892700195, 0.31315377354621887, 0.29969727993011475, 0.30303266644477844, 0.2969401776790619, 0.2884080111980438, 0.2830028831958771, 0.2803061902523041, 0.284909725189209, 0.2756250500679016, 0.27255335450172424, 0.267034113407135, 0.26680734753608704, 0.26125890016555786, 0.25913572311401367, 0.2510053515434265, 0.24825863540172577, 0.2431088238954544, 0.24655894935131073], "accuracy": [0.27077004313468933, 0.488971084356308, 0.5671641826629639, 0.6252806782722473, 0.6592260003089905, 0.698718786239624, 0.7232862114906311, 0.7390040755271912, 0.7467969655990601, 0.7652885913848877, 0.7759873270988464, 0.7729493975639343, 0.7843085527420044, 0.7873464822769165, 0.7947431206703186, 0.7976489067077637, 0.8076872229576111, 0.8117818236351013, 0.8136309385299683, 0.8247259259223938, 0.8227446675300598, 0.8274996876716614, 0.8329150676727295, 0.829216718673706, 0.8379341959953308, 0.8426892161369324, 0.8479725122451782, 0.8446704745292664, 0.8507462739944458, 0.8500858545303345, 0.8543124794960022, 0.8582749962806702, 0.8609166741371155, 0.86118084192276, 0.8593316674232483, 0.8659358024597168, 0.8634262084960938, 0.872407853603363, 0.8688416481018066, 0.8714832663536072, 0.8737286925315857, 0.8730682730674744, 0.8749174475669861, 0.8821820020675659, 0.8799365758895874, 0.8815215826034546, 0.8837670087814331, 0.8878615498542786, 0.8838990926742554, 0.8853520154953003, 0.891559898853302, 0.8865407705307007, 0.8905032277107239, 0.8963148593902588, 0.896446943283081, 0.8969752788543701, 0.8951261639595032, 0.9002773761749268, 0.89988112449646, 0.8986923694610596, 0.901862382888794, 0.9029190540313721, 0.9019944667816162, 0.9062210917472839, 0.9074098467826843, 0.9082023501396179, 0.9084665179252625], "val_loss": [2.033933639526367, 1.5043776035308838, 1.0385841131210327, 0.8348872661590576, 0.748683512210846, 0.6962888240814209, 0.6452283263206482, 0.6097168326377869, 0.5908951163291931, 0.5654791593551636, 0.5485540628433228, 0.5308454632759094, 0.5217159986495972, 0.5026088356971741, 0.4924180805683136, 0.4941955506801605, 0.47913697361946106, 0.46788424253463745, 0.4600522518157959, 0.45553308725357056, 0.4523840844631195, 0.45103052258491516, 0.4417187571525574, 0.43125733733177185, 0.42781078815460205, 0.4263964891433716, 0.4191243350505829, 0.41350650787353516, 0.4158003032207489, 0.4085052013397217, 0.4044939875602722, 0.3971168100833893, 0.39628612995147705, 0.39976948499679565, 0.3952869176864624, 0.3888694643974304, 0.3912425935268402, 0.3875867426395416, 0.38649430871009827, 0.3814649283885956, 0.38066309690475464, 0.37854698300361633, 0.3797750174999237, 0.3766616880893707, 0.37332388758659363, 0.3710525631904602, 0.36949723958969116, 0.37775883078575134, 0.36838436126708984, 0.3662301003932953, 0.36757656931877136, 0.36328125, 0.36480098962783813, 0.3676953911781311, 0.3622332215309143, 0.36552929878234863, 0.35753536224365234, 0.368220716714859, 0.3614383041858673, 0.3567075729370117, 0.3559085726737976, 0.35341039299964905, 0.35565683245658875, 0.3598191440105438, 0.3541577160358429, 0.35910654067993164, 0.356111079454422], "val_accuracy": [0.5270000100135803, 0.6653333306312561, 0.6803333163261414, 0.7123333215713501, 0.734666645526886, 0.7536666393280029, 0.7680000066757202, 0.7770000100135803, 0.7826666831970215, 0.793666660785675, 0.7990000247955322, 0.8090000152587891, 0.8040000200271606, 0.8149999976158142, 0.8186666369438171, 0.8149999976158142, 0.8223333358764648, 0.8259999752044678, 0.8303333520889282, 0.8316666483879089, 0.8326666951179504, 0.8306666612625122, 0.8346666693687439, 0.8429999947547913, 0.8423333168029785, 0.8420000076293945, 0.8479999899864197, 0.8500000238418579, 0.8456666469573975, 0.8443333506584167, 0.8479999899864197, 0.8539999723434448, 0.8560000061988831, 0.8486666679382324, 0.8513333201408386, 0.8603333234786987, 0.8546666502952576, 0.8569999933242798, 0.8569999933242798, 0.862333357334137, 0.8629999756813049, 0.8600000143051147, 0.8629999756813049, 0.862666666507721, 0.8650000095367432, 0.8643333315849304, 0.8629999756813049, 0.8636666536331177, 0.8679999709129333, 0.8650000095367432, 0.8683333396911621, 0.8690000176429749, 0.8683333396911621, 0.8666666746139526, 0.8703333139419556, 0.8686666488647461, 0.8736666440963745, 0.8679999709129333, 0.8706666827201843, 0.8709999918937683, 0.8730000257492065, 0.8743333220481873, 0.871999979019165, 0.8733333349227905, 0.8740000128746033, 0.8693333268165588, 0.8740000128746033]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8628571629524231, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2218832969665527, 1.864060640335083, 1.3938565254211426, 1.0903797149658203, 0.9438313841819763, 0.858376681804657, 0.7782904505729675, 0.7247892022132874, 0.6892630457878113, 0.6613794565200806, 0.6368669271469116, 0.6196650266647339, 0.598943829536438, 0.5774462819099426, 0.5606264472007751, 0.5455963611602783, 0.5336203575134277, 0.5233941078186035, 0.5113855600357056, 0.503520131111145, 0.4914597272872925, 0.48191070556640625, 0.4690347909927368, 0.4620753824710846, 0.4572429060935974, 0.44200143218040466, 0.43248534202575684, 0.42574381828308105, 0.4187560975551605, 0.4149932861328125, 0.4067179560661316, 0.40288951992988586, 0.38739916682243347, 0.38946062326431274, 0.3762149512767792, 0.3754428029060364, 0.3690109848976135, 0.3666316270828247, 0.3575064241886139, 0.3631778657436371, 0.34511318802833557, 0.34386906027793884, 0.3399032950401306, 0.3356437087059021, 0.3288283050060272, 0.3248280882835388, 0.31230098009109497, 0.31018707156181335, 0.3066352903842926, 0.30584463477134705, 0.30279430747032166, 0.2981714904308319, 0.2959708869457245, 0.29435214400291443, 0.28878253698349, 0.28483790159225464, 0.27856719493865967], "accuracy": [0.28424251079559326, 0.4975564777851105, 0.5686171054840088, 0.6160348653793335, 0.6679434776306152, 0.6909258961677551, 0.7201162576675415, 0.7363624572753906, 0.7475894689559937, 0.7532690763473511, 0.7646281719207764, 0.7725531458854675, 0.7802139520645142, 0.7869502305984497, 0.7935543656349182, 0.8012151718139648, 0.8058380484580994, 0.8090080618858337, 0.8157442808151245, 0.8175934553146362, 0.8207634687423706, 0.8208954930305481, 0.8296129703521729, 0.8366134166717529, 0.8358209133148193, 0.8380662798881531, 0.8470479249954224, 0.8442742228507996, 0.8485008478164673, 0.8511425256729126, 0.8537842035293579, 0.8548408150672913, 0.8601241707801819, 0.8602562546730042, 0.86118084192276, 0.8669924736022949, 0.8656716346740723, 0.8668603897094727, 0.8693699836730957, 0.867520809173584, 0.8768987059593201, 0.8758420348167419, 0.873860776424408, 0.8757099509239197, 0.8856161832809448, 0.8853520154953003, 0.8897107243537903, 0.8869370222091675, 0.8879936337471008, 0.8894465565681458, 0.8879936337471008, 0.8936732411384583, 0.8949940800666809, 0.8930128216743469, 0.8951261639595032, 0.8942015767097473, 0.898428201675415], "val_loss": [2.037524700164795, 1.5054640769958496, 1.041262149810791, 0.8355550169944763, 0.7537933588027954, 0.695006251335144, 0.6461491584777832, 0.6090746521949768, 0.5815381407737732, 0.5645186901092529, 0.5428912043571472, 0.5272828936576843, 0.5113058090209961, 0.5023625493049622, 0.4872795343399048, 0.4753495156764984, 0.4689663052558899, 0.4602210223674774, 0.45003411173820496, 0.44887685775756836, 0.4411931037902832, 0.4370357394218445, 0.426398366689682, 0.42243045568466187, 0.41792887449264526, 0.4161316752433777, 0.4072522521018982, 0.4016493260860443, 0.399740993976593, 0.39809703826904297, 0.3939368426799774, 0.38798731565475464, 0.39112550020217896, 0.38529208302497864, 0.378398597240448, 0.38289159536361694, 0.37675753235816956, 0.37287893891334534, 0.3761231303215027, 0.37074267864227295, 0.36791008710861206, 0.3736483156681061, 0.36500847339630127, 0.3696105182170868, 0.36034268140792847, 0.3599259853363037, 0.3628717362880707, 0.3601430654525757, 0.3574908375740051, 0.3567368984222412, 0.3571718633174896, 0.3540703058242798, 0.3553297817707062, 0.35220247507095337, 0.3554205298423767, 0.3520934283733368, 0.3538609743118286], "val_accuracy": [0.5633333325386047, 0.6579999923706055, 0.6856666803359985, 0.7073333263397217, 0.7303333282470703, 0.7473333477973938, 0.7636666893959045, 0.7716666460037231, 0.7846666574478149, 0.7933333516120911, 0.7956666946411133, 0.8026666641235352, 0.8183333277702332, 0.8146666884422302, 0.8256666660308838, 0.828000009059906, 0.8273333311080933, 0.8370000123977661, 0.8399999737739563, 0.8376666903495789, 0.8443333506584167, 0.8396666646003723, 0.8500000238418579, 0.8510000109672546, 0.8523333072662354, 0.8516666889190674, 0.8569999933242798, 0.8619999885559082, 0.8516666889190674, 0.8553333282470703, 0.859000027179718, 0.862666666507721, 0.8616666793823242, 0.8643333315849304, 0.8656666874885559, 0.8663333058357239, 0.8643333315849304, 0.8663333058357239, 0.8656666874885559, 0.8690000176429749, 0.8683333396911621, 0.8669999837875366, 0.8706666827201843, 0.8669999837875366, 0.874666690826416, 0.8730000257492065, 0.8726666569709778, 0.8766666650772095, 0.8723333477973938, 0.8763333559036255, 0.8703333139419556, 0.8776666522026062, 0.8776666522026062, 0.875333309173584, 0.8773333430290222, 0.8763333559036255, 0.8763333559036255]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 9, 0, 3], [1, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 69], [0, 1], [0], [0], [52], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0], [6, 3, 3, 6, 3, 1, 4, 1, 4, 2, 8, 9], [0, 0, 0, 3, 0, 0, 3, 4, 2, 0], [16, 99, 96, 99, 88, 1, 87]], "fitness": -0.11857143044471741, "mapping_values": [1, 5, 4, 1, 1, 10, 6, 4, 2, 2, 1, 1, 1, 22, 12, 10, 7], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), sigma))), grad)), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.310020685195923, 2.3096330165863037, 2.309720039367676, 2.3104398250579834, 2.309779405593872, 2.3071563243865967, 2.305532455444336, 2.3039519786834717, 2.311436414718628, 2.319366455078125, 2.3191983699798584, 2.3231217861175537], "accuracy": [0.09113723784685135, 0.09087307006120682, 0.09338264167308807, 0.09259014576673508, 0.09074098616838455, 0.0936468094587326, 0.10553427785634995, 0.11517632752656937, 0.10527011007070541, 0.10447761416435242, 0.10540219396352768, 0.09708096832036972], "val_loss": [2.308271884918213, 2.3082406520843506, 2.308177947998047, 2.3078134059906006, 2.307260036468506, 2.3064353466033936, 2.3001227378845215, 2.303365468978882, 2.307080030441284, 2.3054592609405518, 2.310325860977173, 2.3072290420532227], "val_accuracy": [0.08933333307504654, 0.08933333307504654, 0.08966666460037231, 0.08633333444595337, 0.08666666597127914, 0.08900000154972076, 0.11999999731779099, 0.11433333158493042, 0.08366666734218597, 0.09066666662693024, 0.07966666668653488, 0.08299999684095383]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 0, 3, 4], [0, 1, 0, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 0, 5], [2, 2, 3, 3], [16, 16], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [6, 8, 3, 6, 8, 8, 4, 1, 4, 2, 8, 4], [0, 0, 0, 3, 0, 0, 3, 0, 2, 0], [16, 99, 96, 99, 61, 51]], "fitness": -0.11342857033014297, "mapping_values": [1, 11, 6, 5, 2, 8, 5, 3, 0, 1, 0, 1, 1, 21, 12, 9, 6], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(beta), beta), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.math.sqrt(tf.math.pow(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), beta))))))", "other_info": {"loss": [9.539904834504735e+22, 1.0915139328957322e+23, 1.0905833090687324e+23, 1.0851188214248661e+23, 1.0780733901678077e+23, 1.078945827487622e+23], "accuracy": [0.09259014576673508, 0.09311848133802414, 0.09879804402589798, 0.0948355570435524, 0.09470347315073013, 0.09879804402589798], "val_loss": [7.869299056331277e+22, 7.868434365202821e+22, 7.867570574794292e+22, 7.866708585825613e+22, 7.865845696137009e+22, 7.864984607888256e+22], "val_accuracy": [0.10766666382551193, 0.10766666382551193, 0.10766666382551193, 0.10766666382551193, 0.10766666382551193, 0.10766666382551193]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 8, 3, 0, 3], [0, 0, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 2, 3, 3, 3, 5, 3, 7, 4, 2, 0, 5, 4, 4, 2, 0, 3, 6, 1, 7, 1, 1, 5, 0, 7, 4, 6, 2, 6, 3, 6, 5, 8, 4], [0, 2, 0, 3, 3, 0, 5, 5, 4, 5, 2, 4, 5, 4, 2, 4, 5, 1, 0, 1, 4, 0, 4, 3, 5, 1], [16, 16, 17, 1, 76], [0, 1], [0], [3], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [6, 6, 3, 4, 3, 1, 1, 1, 4, 2, 8, 6, 9, 2, 2, 2, 4, 3, 5, 4, 0, 8, 2, 4, 5, 5, 7, 7, 7, 1, 4, 7, 5, 1, 6, 3, 8], [0, 0, 0, 3, 4, 0, 3, 1, 4, 1, 5, 3, 0, 4, 2, 1, 0, 7, 5, 5, 3, 7, 3, 0, 5, 1, 6, 5], [16, 85, 96, 99, 53, 1, 66, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 2, 60, 34, 26, 5, 2, 1, 1, 0, 65, 37, 28, 8], "tree_depth": 36, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.multiply(tf.math.add(tf.math.pow(tf.math.add(grad, tf.math.negative(tf.math.square(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))), tf.math.pow(grad, grad)), tf.math.pow(tf.math.add(tf.math.negative(tf.math.multiply(grad, grad)), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(beta, grad), grad), tf.math.subtract(grad, tf.math.subtract(beta, tf.math.square(tf.math.negative(tf.math.add(grad, tf.math.pow(grad, tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), alpha), grad))))))))), tf.math.multiply(tf.math.divide_no_nan(tf.math.square(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(grad, grad))), grad))), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.multiply(tf.math.subtract(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(grad, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), alpha)), tf.math.add(tf.math.sqrt(grad), alpha)), tf.math.divide_no_nan(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.math.add(tf.math.pow(grad, tf.math.multiply(sigma, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), beta), tf.math.square(tf.math.pow(tf.math.negative(tf.math.sqrt(tf.math.add(tf.math.pow(alpha, tf.math.square(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), tf.math.square(grad)))), tf.math.add(grad, tf.math.add(tf.math.add(tf.math.subtract(grad, sigma), grad), tf.math.pow(tf.math.add(tf.math.square(sigma), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.divide_no_nan(grad, tf.math.multiply(tf.math.sqrt(alpha), grad)), grad)))))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 9], [0, 2, 0, 3], [16, 16, 21], [0, 1], [0], [0], [97], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [8, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 4, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 0, 9, 6, 3, 3, 2, 1, 1, 1, 13, 7, 6, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), grad)), tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0952318087220192, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}]