[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.878000020980835, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223759174346924, 1.8681567907333374, 1.3971633911132812, 1.1021500825881958, 0.9438490867614746, 0.8268281817436218, 0.7700234055519104, 0.7182450890541077, 0.6839274764060974, 0.655160665512085, 0.6316797733306885, 0.6046612858772278, 0.586663544178009, 0.5732303261756897, 0.5552444458007812, 0.5382086634635925, 0.5205084085464478, 0.5141545534133911, 0.49866363406181335, 0.4905571937561035, 0.48713892698287964, 0.4630949795246124, 0.46493759751319885, 0.4510720372200012, 0.4456666111946106, 0.4411585330963135, 0.43109801411628723, 0.4194287657737732, 0.41647717356681824, 0.4177640676498413, 0.39898860454559326, 0.3982110619544983, 0.3941095173358917, 0.3838343918323517, 0.38270825147628784, 0.38132011890411377, 0.3706604242324829, 0.3630581796169281, 0.35970449447631836, 0.3585955500602722, 0.3488880693912506, 0.3406795859336853, 0.3434852361679077, 0.34305644035339355, 0.32770219445228577, 0.3274216949939728, 0.3164256513118744, 0.31487780809402466, 0.31453031301498413, 0.3020377457141876, 0.3013147711753845, 0.29238083958625793, 0.30650538206100464, 0.2886098325252533, 0.28784143924713135, 0.28922179341316223, 0.27991431951522827, 0.27731093764305115, 0.27029022574424744, 0.2677718997001648, 0.2672445476055145], "accuracy": [0.27182671427726746, 0.4913485646247864, 0.5609562993049622, 0.6095628142356873, 0.6618676781654358, 0.6997754573822021, 0.7215691208839417, 0.7407211661338806, 0.7508915662765503, 0.7592127919197083, 0.7656848430633545, 0.7798177003860474, 0.7849689722061157, 0.789459764957428, 0.7991018295288086, 0.806630551815033, 0.81112140417099, 0.8088759779930115, 0.8210275769233704, 0.8181217908859253, 0.826310932636261, 0.8333113193511963, 0.8294808864593506, 0.8401796221733093, 0.8409721255302429, 0.8436138033866882, 0.8459912538528442, 0.8519350290298462, 0.8485008478164673, 0.8490291833877563, 0.856689989566803, 0.8573504090309143, 0.8615770936012268, 0.8644828796386719, 0.8605204224586487, 0.8614450097084045, 0.8671245574951172, 0.8726720213890076, 0.8732003569602966, 0.8689737319946289, 0.8762382864952087, 0.8798044919967651, 0.8717474341392517, 0.8825782537460327, 0.8840311765670776, 0.8845595121383667, 0.8885219693183899, 0.8865407705307007, 0.8887861371040344, 0.894069492816925, 0.8918240666389465, 0.8953903317451477, 0.8860124349594116, 0.8988244533538818, 0.8992207050323486, 0.8956544995307922, 0.9014661312103271, 0.89988112449646, 0.900409460067749, 0.9046360850334167, 0.9033153057098389], "val_loss": [2.0386126041412354, 1.5089809894561768, 1.0396978855133057, 0.8277255296707153, 0.7414798736572266, 0.6867381930351257, 0.6452507376670837, 0.6096968054771423, 0.5920496582984924, 0.5695558786392212, 0.550778865814209, 0.5315823554992676, 0.5166425704956055, 0.5040237307548523, 0.4927339255809784, 0.48035380244255066, 0.4752146899700165, 0.4640548527240753, 0.45926037430763245, 0.4498494863510132, 0.44989997148513794, 0.43486902117729187, 0.4302854835987091, 0.42699891328811646, 0.4222937822341919, 0.4179273545742035, 0.4156407117843628, 0.40615877509117126, 0.40567347407341003, 0.40483561158180237, 0.4008205533027649, 0.3957735300064087, 0.3910598158836365, 0.39842313528060913, 0.38378071784973145, 0.3824272155761719, 0.37983548641204834, 0.3832281529903412, 0.37993335723876953, 0.37290528416633606, 0.37028563022613525, 0.3697679340839386, 0.369826078414917, 0.3630952835083008, 0.3613884747028351, 0.3612003028392792, 0.3630628287792206, 0.35836127400398254, 0.35707563161849976, 0.3544061779975891, 0.35439038276672363, 0.35541149973869324, 0.34793493151664734, 0.355723112821579, 0.3566884696483612, 0.3480426073074341, 0.35176366567611694, 0.34468159079551697, 0.3469727337360382, 0.34757280349731445, 0.34379008412361145], "val_accuracy": [0.546999990940094, 0.6536666750907898, 0.6856666803359985, 0.7066666483879089, 0.7366666793823242, 0.7536666393280029, 0.7599999904632568, 0.7720000147819519, 0.7706666588783264, 0.7926666736602783, 0.7963333129882812, 0.7956666946411133, 0.8103333115577698, 0.809333324432373, 0.8220000267028809, 0.8226666450500488, 0.8243333101272583, 0.8330000042915344, 0.8349999785423279, 0.8370000123977661, 0.8333333134651184, 0.8429999947547913, 0.8463333249092102, 0.8446666598320007, 0.8476666808128357, 0.8479999899864197, 0.8450000286102295, 0.8506666421890259, 0.8496666550636292, 0.8529999852180481, 0.8556666374206543, 0.8556666374206543, 0.8586666584014893, 0.8526666760444641, 0.8576666712760925, 0.8610000014305115, 0.859000027179718, 0.8616666793823242, 0.8653333187103271, 0.8673333525657654, 0.8673333525657654, 0.8659999966621399, 0.8693333268165588, 0.8690000176429749, 0.8726666569709778, 0.8726666569709778, 0.8740000128746033, 0.8730000257492065, 0.871999979019165, 0.8759999871253967, 0.874666690826416, 0.871999979019165, 0.8806666731834412, 0.8776666522026062, 0.8706666827201843, 0.8820000290870667, 0.878333330154419, 0.878000020980835, 0.8806666731834412, 0.8793333172798157, 0.878333330154419]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8668571710586548, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2253613471984863, 1.8747588396072388, 1.402706503868103, 1.1067254543304443, 0.9477202892303467, 0.8382928967475891, 0.7702481150627136, 0.7304713726043701, 0.6858373284339905, 0.6628384590148926, 0.6350089311599731, 0.6164127588272095, 0.5900425314903259, 0.5817529559135437, 0.5618127584457397, 0.5451464056968689, 0.5376642942428589, 0.5155978202819824, 0.5117346048355103, 0.492963045835495, 0.4863786995410919, 0.48151183128356934, 0.4679652452468872, 0.46171316504478455, 0.4518142640590668, 0.44990068674087524, 0.4399331510066986, 0.4355272650718689, 0.43075671792030334, 0.4196968376636505, 0.4109598696231842, 0.4051801562309265, 0.4094860553741455, 0.3992840051651001, 0.38061487674713135, 0.3821974992752075, 0.3759486973285675, 0.37777093052864075, 0.36726778745651245, 0.35857757925987244, 0.3578515350818634, 0.35165348649024963, 0.34781962633132935, 0.34348541498184204, 0.34146648645401, 0.3331840932369232, 0.3265346884727478, 0.3236221969127655], "accuracy": [0.2694492042064667, 0.4909523129463196, 0.5522388219833374, 0.611411988735199, 0.6631884574890137, 0.6942279934883118, 0.7224937081336975, 0.733588695526123, 0.7469290494918823, 0.7569673657417297, 0.7622507214546204, 0.7717606425285339, 0.7812706232070923, 0.7847048044204712, 0.798309326171875, 0.8005547523498535, 0.8031964302062988, 0.8117818236351013, 0.8144234418869019, 0.8208954930305481, 0.8249900937080383, 0.8284242749214172, 0.8300092220306396, 0.8322546482086182, 0.8385946154594421, 0.8384625315666199, 0.8442742228507996, 0.8397833704948425, 0.8429533839225769, 0.8486329317092896, 0.8519350290298462, 0.8539162874221802, 0.8541803956031799, 0.856689989566803, 0.8656716346740723, 0.8625016212463379, 0.8677849769592285, 0.8613129258155823, 0.8716153502464294, 0.8702945709228516, 0.8710870146751404, 0.8745211958885193, 0.8733324408531189, 0.8754457831382751, 0.8755778670310974, 0.8779553771018982, 0.8829745054244995, 0.8784837126731873], "val_loss": [2.048783302307129, 1.5277410745620728, 1.0465788841247559, 0.8409104943275452, 0.7550176382064819, 0.6997106671333313, 0.648402988910675, 0.6160191893577576, 0.5923274755477905, 0.5723108053207397, 0.5510735511779785, 0.5376282334327698, 0.5259362459182739, 0.5151712894439697, 0.5029014945030212, 0.4878999888896942, 0.4909544289112091, 0.47745731472969055, 0.46850675344467163, 0.46090319752693176, 0.45253437757492065, 0.45215609669685364, 0.44075772166252136, 0.4381374418735504, 0.4347183406352997, 0.42440131306648254, 0.43605318665504456, 0.41870784759521484, 0.4192385971546173, 0.4151788055896759, 0.4118618071079254, 0.4037342965602875, 0.4088587164878845, 0.39776554703712463, 0.39216527342796326, 0.3915019929409027, 0.3878780007362366, 0.3917040526866913, 0.38287869095802307, 0.3885250687599182, 0.37607070803642273, 0.3771691918373108, 0.3727934658527374, 0.37404564023017883, 0.3709239065647125, 0.36658963561058044, 0.3660518527030945, 0.36607861518859863], "val_accuracy": [0.515666663646698, 0.6549999713897705, 0.6786666512489319, 0.7066666483879089, 0.734000027179718, 0.7436666488647461, 0.7573333382606506, 0.7770000100135803, 0.7776666879653931, 0.7926666736602783, 0.8043333292007446, 0.8113333582878113, 0.8086666464805603, 0.8136666417121887, 0.8320000171661377, 0.8299999833106995, 0.8266666531562805, 0.8360000252723694, 0.8370000123977661, 0.8429999947547913, 0.8433333039283752, 0.8429999947547913, 0.847000002861023, 0.8473333120346069, 0.8463333249092102, 0.8546666502952576, 0.8483333587646484, 0.8556666374206543, 0.8550000190734863, 0.8573333621025085, 0.8576666712760925, 0.8610000014305115, 0.8523333072662354, 0.8600000143051147, 0.8646666407585144, 0.862333357334137, 0.8653333187103271, 0.859333336353302, 0.8650000095367432, 0.8659999966621399, 0.8706666827201843, 0.8646666407585144, 0.8723333477973938, 0.8679999709129333, 0.8673333525657654, 0.8690000176429749, 0.8690000176429749, 0.8700000047683716]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 4, 9, 4, 0, 6, 8, 1, 7, 6], [0, 5, 0, 4, 5, 0], [99, 93, 60, 16], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 39, 61, 1]], "fitness": -0.7922857403755188, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.negative(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.add(tf.math.divide_no_nan(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), grad), grad))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.35459303855896, 6.010707378387451, 2907.534423828125, 2.3321590423583984, 2.32063364982605, 2.0347342491149902, 1.4314051866531372, 1.1463134288787842, 1.0130927562713623, 0.9326878786087036, 0.8778364062309265, 0.8455790281295776, 0.7962595224380493, 0.7819532155990601, 0.7628941535949707, 0.7537862658500671, 0.7332055568695068, 0.7110349535942078, 0.7115321755409241, 0.687860906124115, 0.6853800415992737, 0.671631395816803, 0.6755608320236206, 0.6646180748939514, 0.661316990852356, 0.6651405096054077, 0.6456327438354492, 0.6618561148643494, 0.6475228667259216, 0.6525765657424927, 0.6454464197158813, 0.6471235156059265, 0.6426597237586975, 0.6243710517883301, 0.6215392351150513, 0.6367064714431763, 0.6179714202880859, 0.6179585456848145, 0.6240411996841431], "accuracy": [0.07185312360525131, 0.08506141602993011, 0.09998679161071777, 0.10434553027153015, 0.11781799048185349, 0.2810725271701813, 0.5031039714813232, 0.618280291557312, 0.6551313996315002, 0.6734909415245056, 0.6897371411323547, 0.6909258961677551, 0.7194558382034302, 0.7162858247756958, 0.7275128960609436, 0.7288337349891663, 0.7276449799537659, 0.7405890822410583, 0.7417778372764587, 0.7512878179550171, 0.7532690763473511, 0.7528728246688843, 0.7530049085617065, 0.7539294958114624, 0.7585523724555969, 0.7594769597053528, 0.7625148296356201, 0.7559106945991516, 0.7642319202423096, 0.7578919529914856, 0.7627789974212646, 0.7670056819915771, 0.7642319202423096, 0.7688548564910889, 0.7676661014556885, 0.767930269241333, 0.7746664881706238, 0.7737419009208679, 0.7709681391716003], "val_loss": [2.547154664993286, 38.99247741699219, 2.3245394229888916, 2.3218629360198975, 2.2624504566192627, 1.3827933073043823, 1.0481826066970825, 0.8291832804679871, 0.7599315047264099, 0.7225469350814819, 0.6897639036178589, 0.6563180088996887, 0.6359147429466248, 0.6311423778533936, 0.6108396649360657, 0.5997138619422913, 0.5918768048286438, 0.5778882503509521, 0.5692203640937805, 0.5661501884460449, 0.5564895272254944, 0.5535076260566711, 0.5516790151596069, 0.5476058125495911, 0.5432368516921997, 0.5385769009590149, 0.5385885238647461, 0.5296075344085693, 0.536411702632904, 0.5297092199325562, 0.5278115272521973, 0.5230732560157776, 0.525499701499939, 0.5160492062568665, 0.5153769254684448, 0.5097268223762512, 0.5154049396514893, 0.5218825936317444, 0.5037882328033447], "val_accuracy": [0.07533333450555801, 0.09366666525602341, 0.09966666996479034, 0.11599999666213989, 0.3526666760444641, 0.5463333129882812, 0.6796666383743286, 0.7153333425521851, 0.7236666679382324, 0.7350000143051147, 0.7423333525657654, 0.7519999742507935, 0.7646666765213013, 0.7620000243186951, 0.7573333382606506, 0.7723333239555359, 0.7723333239555359, 0.7723333239555359, 0.7820000052452087, 0.7820000052452087, 0.7870000004768372, 0.793666660785675, 0.7839999794960022, 0.7919999957084656, 0.7926666736602783, 0.7943333387374878, 0.7926666736602783, 0.7990000247955322, 0.7910000085830688, 0.8009999990463257, 0.8026666641235352, 0.7993333339691162, 0.7976666688919067, 0.8090000152587891, 0.8046666383743286, 0.8069999814033508, 0.8016666769981384, 0.8019999861717224, 0.8080000281333923]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 16, 10, 6, 4, 21, 11, 10, 6], "tree_depth": 20}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 4, 0, 3], [0, 1, 0, 2], [39, 23], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 9, 0, 3, 5], [0, 2, 0, 3], [16, 97], [0, 1], [0], [0], [12], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 3, 1, 4, 2, 8], [0, 0, 0, 3, 4, 0, 3, 1, 2, 0], [16, 99, 11, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 5, 4, 1, 2, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303363561630249, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 6, 0, 3, 5], [0, 2, 3, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 4, 6, 8, 1, 4, 5, 4, 2, 8], [0, 4, 0, 3, 0, 0, 4, 1, 2, 0], [16, 99, 96, 27, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.square(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad)), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10236428678035736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}, "mapping_values": [1, 7, 4, 3, 2, 6, 3, 3, 1, 2, 1, 1, 1, 17, 9, 8, 4], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 2], [0, 1, 0, 2], [39, 6], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5, 1], [0, 2, 0, 3, 4], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [5, 3, 3, 6, 3, 1, 4, 1, 4, 2, 1], [3, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 26, 81, 99, 38, 1]], "fitness": -0.08914285898208618, "mapping_values": [1, 9, 5, 4, 2, 12, 7, 5, 2, 2, 1, 1, 1, 8, 4, 4, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.math.multiply(sigma, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.310486078262329, 2.311068534851074, 2.309675693511963, 2.3105430603027344, 2.3101413249969482, 2.3100149631500244], "accuracy": [0.09457138925790787, 0.09457138925790787, 0.09945846349000931, 0.09945846349000931, 0.09060890227556229, 0.09245806187391281], "val_loss": [2.309070587158203, 2.309070587158203, 2.309070587158203, 2.309070587158203, 2.309070587158203, 2.309070587158203], "val_accuracy": [0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284]}}]