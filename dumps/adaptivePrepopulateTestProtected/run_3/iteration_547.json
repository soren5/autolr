[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8822857141494751, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585750579834, 1.8655762672424316, 1.394430160522461, 1.0773245096206665, 0.9378393888473511, 0.8425824046134949, 0.7776632308959961, 0.736241340637207, 0.6971188187599182, 0.6732122302055359, 0.644855797290802, 0.6276965141296387, 0.6100340485572815, 0.5899673104286194, 0.5746485590934753, 0.5484329462051392, 0.5425268411636353, 0.5357900857925415, 0.5214410424232483, 0.5127171874046326, 0.4895091950893402, 0.4932740032672882, 0.48551443219184875, 0.47113916277885437, 0.46571049094200134, 0.450914591550827, 0.438728004693985, 0.4414178729057312, 0.4245515465736389, 0.4182806611061096, 0.4126766324043274, 0.41352686285972595, 0.4031256139278412, 0.40064555406570435, 0.3982388377189636, 0.38566267490386963, 0.38400527834892273, 0.3741128146648407, 0.36422181129455566, 0.36170411109924316, 0.35991787910461426, 0.35666367411613464, 0.3521813750267029, 0.34583958983421326, 0.34736087918281555, 0.34181836247444153, 0.33650368452072144, 0.33141741156578064, 0.3230496346950531, 0.3225416839122772, 0.315096914768219, 0.3059031665325165, 0.3058394491672516, 0.3017319440841675, 0.29568877816200256, 0.2933836281299591, 0.28774771094322205, 0.2856961190700531, 0.2802303731441498, 0.2779994010925293, 0.274711549282074, 0.2719985842704773, 0.2586328387260437, 0.2598455548286438, 0.2622571289539337, 0.25739434361457825, 0.2502012252807617, 0.2544722855091095, 0.24556587636470795, 0.24580754339694977, 0.23948103189468384, 0.23949603736400604, 0.23484042286872864, 0.22871272265911102, 0.2256491780281067, 0.22479403018951416, 0.21744707226753235, 0.21390178799629211, 0.21272219717502594], "accuracy": [0.2785629332065582, 0.49451854825019836, 0.559899628162384, 0.6215823292732239, 0.6654338836669922, 0.6950204968452454, 0.7181349992752075, 0.7322678565979004, 0.7441553473472595, 0.7483819723129272, 0.7627789974212646, 0.7717606425285339, 0.7728173136711121, 0.78113853931427, 0.7882710099220276, 0.7993659973144531, 0.7976489067077637, 0.8074230551719666, 0.8128384351730347, 0.8198388814926147, 0.8212917447090149, 0.819970965385437, 0.8272355198860168, 0.8350284099578857, 0.8305375576019287, 0.8387266993522644, 0.846387505531311, 0.8433496356010437, 0.8504821062088013, 0.8524633646011353, 0.8535200357437134, 0.854708731174469, 0.856689989566803, 0.8551049828529358, 0.8593316674232483, 0.8615770936012268, 0.8628978729248047, 0.8702945709228516, 0.8691058158874512, 0.871879518032074, 0.8722757697105408, 0.8691058158874512, 0.8733324408531189, 0.8800686597824097, 0.8795403242111206, 0.8755778670310974, 0.8768987059593201, 0.8829745054244995, 0.8824461698532104, 0.8823140859603882, 0.887201189994812, 0.8897107243537903, 0.8889182209968567, 0.8927486538887024, 0.8902390599250793, 0.8953903317451477, 0.8980319499969482, 0.8976356983184814, 0.900409460067749, 0.89552241563797, 0.9025228023529053, 0.8989565372467041, 0.9056927561759949, 0.9085986018180847, 0.9030511379241943, 0.9066173434257507, 0.9101836085319519, 0.9083344340324402, 0.909259021282196, 0.9099194407463074, 0.9126931428909302, 0.9140139818191528, 0.9119006991386414, 0.9171839952468872, 0.9169198274612427, 0.9185048341751099, 0.9218068718910217, 0.9185048341751099, 0.9196935892105103], "val_loss": [2.033445358276367, 1.5042319297790527, 1.0271512269973755, 0.8147247433662415, 0.7278039455413818, 0.68117356300354, 0.6306353211402893, 0.5966841578483582, 0.5751398801803589, 0.5460951328277588, 0.5314993858337402, 0.509799063205719, 0.4957965612411499, 0.4792602062225342, 0.46671679615974426, 0.45267683267593384, 0.4441072940826416, 0.4356139600276947, 0.42943108081817627, 0.4255247414112091, 0.41811680793762207, 0.4163394272327423, 0.39929893612861633, 0.3969916105270386, 0.39089226722717285, 0.387652188539505, 0.3844633102416992, 0.3824205696582794, 0.3749690353870392, 0.3701930642127991, 0.36967378854751587, 0.36689504981040955, 0.3585263788700104, 0.3587398827075958, 0.36267170310020447, 0.3561091423034668, 0.35379692912101746, 0.3499273955821991, 0.34701839089393616, 0.3467637896537781, 0.3424672484397888, 0.33951225876808167, 0.3386255204677582, 0.34044384956359863, 0.33945050835609436, 0.33684298396110535, 0.3322163224220276, 0.33181649446487427, 0.32827115058898926, 0.3312568664550781, 0.3297465741634369, 0.3256674110889435, 0.3234780728816986, 0.32119208574295044, 0.3232716917991638, 0.3209094703197479, 0.31944912672042847, 0.3157532513141632, 0.3144265413284302, 0.31676045060157776, 0.31425556540489197, 0.3131799101829529, 0.3147056996822357, 0.3154993951320648, 0.31771615147590637, 0.31545644998550415, 0.3127000629901886, 0.31382524967193604, 0.31026333570480347, 0.3147730529308319, 0.30829918384552, 0.3107443153858185, 0.31316936016082764, 0.30297672748565674, 0.30325081944465637, 0.30436232686042786, 0.3072424829006195, 0.30681705474853516, 0.3061434030532837], "val_accuracy": [0.5526666641235352, 0.6666666865348816, 0.687333345413208, 0.7083333134651184, 0.731333315372467, 0.7446666955947876, 0.7606666684150696, 0.762666642665863, 0.7873333096504211, 0.7889999747276306, 0.7973333597183228, 0.8056666851043701, 0.8193333148956299, 0.8259999752044678, 0.8289999961853027, 0.8410000205039978, 0.8453333377838135, 0.8450000286102295, 0.8489999771118164, 0.847000002861023, 0.8516666889190674, 0.856333315372467, 0.859333336353302, 0.856333315372467, 0.8633333444595337, 0.8640000224113464, 0.8656666874885559, 0.8646666407585144, 0.8679999709129333, 0.8696666955947876, 0.8640000224113464, 0.8686666488647461, 0.8713333606719971, 0.8709999918937683, 0.8703333139419556, 0.8723333477973938, 0.871999979019165, 0.874666690826416, 0.8723333477973938, 0.8759999871253967, 0.8726666569709778, 0.875333309173584, 0.8790000081062317, 0.8756666779518127, 0.8726666569709778, 0.8769999742507935, 0.8796666860580444, 0.8796666860580444, 0.8806666731834412, 0.8793333172798157, 0.8813333511352539, 0.8840000033378601, 0.8840000033378601, 0.8843333125114441, 0.8809999823570251, 0.8856666684150696, 0.8866666555404663, 0.8833333253860474, 0.8866666555404663, 0.8843333125114441, 0.8856666684150696, 0.8880000114440918, 0.887333333492279, 0.8883333206176758, 0.8866666555404663, 0.8896666765213013, 0.8863333463668823, 0.8853333592414856, 0.890999972820282, 0.8870000243186951, 0.8883333206176758, 0.8883333206176758, 0.8916666507720947, 0.8939999938011169, 0.8896666765213013, 0.8916666507720947, 0.890999972820282, 0.8926666378974915, 0.8913333415985107]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8728571534156799, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223752021789551, 1.8685460090637207, 1.407167911529541, 1.0996956825256348, 0.9544121026992798, 0.8506673574447632, 0.7782599329948425, 0.7240671515464783, 0.6858173608779907, 0.66523677110672, 0.639725387096405, 0.6107869148254395, 0.5977697968482971, 0.581354022026062, 0.5646128058433533, 0.5443339347839355, 0.529719352722168, 0.5174518823623657, 0.5092717409133911, 0.49282488226890564, 0.4848146438598633, 0.469237744808197, 0.4710564911365509, 0.44953134655952454, 0.4463702142238617, 0.4455910921096802, 0.4352472424507141, 0.426811546087265, 0.4316443204879761, 0.41541045904159546, 0.4002935588359833, 0.39844387769699097, 0.3870685398578644, 0.3899613618850708, 0.3832142651081085, 0.3817407488822937, 0.36983856558799744, 0.3669160008430481, 0.3654502332210541, 0.36482128500938416, 0.35727086663246155, 0.3502492606639862, 0.34598106145858765, 0.3415582776069641, 0.3328746259212494, 0.32244279980659485, 0.3316897749900818, 0.3234128952026367, 0.3139820098876953, 0.31371432542800903, 0.31260091066360474, 0.30715078115463257, 0.302398681640625, 0.2927989363670349, 0.2987654507160187, 0.2902660667896271, 0.2806214392185211, 0.28306758403778076, 0.28074726462364197, 0.2680280804634094, 0.2679348587989807, 0.26554882526397705, 0.2617032527923584, 0.25502222776412964, 0.2542264461517334, 0.2565182149410248, 0.25301700830459595, 0.24116633832454681, 0.23911651968955994, 0.23406241834163666], "accuracy": [0.2645621597766876, 0.48646149039268494, 0.5546162724494934, 0.6193369626998901, 0.6617355942726135, 0.6984546184539795, 0.7181349992752075, 0.7323999404907227, 0.7500990629196167, 0.7563069462776184, 0.7692511081695557, 0.7761194109916687, 0.7845727205276489, 0.7884030938148499, 0.7971205711364746, 0.8000264167785645, 0.809140145778656, 0.813498854637146, 0.8175934553146362, 0.8214238286018372, 0.8255184292793274, 0.8284242749214172, 0.8341038227081299, 0.8399154543876648, 0.8399154543876648, 0.8425571322441101, 0.8445383906364441, 0.8459912538528442, 0.8465195894241333, 0.8512746095657349, 0.8570862412452698, 0.8533879518508911, 0.8642187118530273, 0.8642187118530273, 0.8647470474243164, 0.8623695969581604, 0.8665962219238281, 0.869502067565918, 0.869502067565918, 0.8705587387084961, 0.874389111995697, 0.8761062026023865, 0.8745211958885193, 0.8786157965660095, 0.8860124349594116, 0.8820499181747437, 0.8809932470321655, 0.8815215826034546, 0.8886540532112122, 0.886672854423523, 0.8874653577804565, 0.8887861371040344, 0.8901069760322571, 0.8945978283882141, 0.889578640460968, 0.8948619961738586, 0.8953903317451477, 0.89988112449646, 0.8981640338897705, 0.9039757251739502, 0.90423983335495, 0.9058248400688171, 0.9084665179252625, 0.9080702662467957, 0.9035794734954834, 0.904768168926239, 0.9084665179252625, 0.9119006991386414, 0.9132214784622192, 0.9159952402114868], "val_loss": [2.038588285446167, 1.516933798789978, 1.0473864078521729, 0.8360529541969299, 0.7535487413406372, 0.6920769214630127, 0.6436893343925476, 0.6126797795295715, 0.5830626487731934, 0.5677725076675415, 0.548818826675415, 0.5296469926834106, 0.5197070240974426, 0.5049715042114258, 0.4961790442466736, 0.48451390862464905, 0.4742923080921173, 0.4702191650867462, 0.46080827713012695, 0.4512236416339874, 0.44496411085128784, 0.43921035528182983, 0.43373584747314453, 0.42615246772766113, 0.42672908306121826, 0.42070433497428894, 0.41466137766838074, 0.416599839925766, 0.41059327125549316, 0.4053473174571991, 0.40213215351104736, 0.39583924412727356, 0.3923006057739258, 0.3918643295764923, 0.3875802755355835, 0.3831164538860321, 0.38181233406066895, 0.37839001417160034, 0.38370227813720703, 0.3764679431915283, 0.3714274764060974, 0.3676496148109436, 0.37168794870376587, 0.3641126751899719, 0.3672720193862915, 0.3725524842739105, 0.3588085174560547, 0.3615078926086426, 0.36192765831947327, 0.35722893476486206, 0.35401660203933716, 0.3537287712097168, 0.3498275578022003, 0.3516508936882019, 0.34728190302848816, 0.3483203947544098, 0.34531137347221375, 0.3423173725605011, 0.3458470106124878, 0.3457726538181305, 0.34049901366233826, 0.34154361486434937, 0.33964863419532776, 0.339768648147583, 0.3345643877983093, 0.3353275656700134, 0.33602917194366455, 0.34045174717903137, 0.33124515414237976, 0.34033340215682983], "val_accuracy": [0.5289999842643738, 0.6489999890327454, 0.684333324432373, 0.7099999785423279, 0.7246666550636292, 0.753333330154419, 0.765999972820282, 0.7683333158493042, 0.7853333353996277, 0.7886666655540466, 0.793666660785675, 0.8036666512489319, 0.8096666932106018, 0.8136666417121887, 0.8199999928474426, 0.8203333616256714, 0.8326666951179504, 0.8316666483879089, 0.8333333134651184, 0.8393333554267883, 0.8429999947547913, 0.8386666774749756, 0.8393333554267883, 0.847000002861023, 0.8453333377838135, 0.8493333458900452, 0.8483333587646484, 0.8460000157356262, 0.8473333120346069, 0.8586666584014893, 0.8510000109672546, 0.8616666793823242, 0.856333315372467, 0.8610000014305115, 0.862666666507721, 0.8613333106040955, 0.8633333444595337, 0.8663333058357239, 0.8633333444595337, 0.8653333187103271, 0.8653333187103271, 0.8690000176429749, 0.8683333396911621, 0.8723333477973938, 0.8666666746139526, 0.8673333525657654, 0.8726666569709778, 0.875333309173584, 0.8766666650772095, 0.875333309173584, 0.8713333606719971, 0.875333309173584, 0.8773333430290222, 0.8776666522026062, 0.8766666650772095, 0.8799999952316284, 0.8769999742507935, 0.8773333430290222, 0.8813333511352539, 0.8816666603088379, 0.8766666650772095, 0.8823333382606506, 0.8843333125114441, 0.8846666812896729, 0.8880000114440918, 0.8830000162124634, 0.8843333125114441, 0.8830000162124634, 0.8859999775886536, 0.8809999823570251]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 5, 6, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 2], [3, 2, 0, 3, 3], [23, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 3, 3, 6, 8, 1, 4, 5, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 4, 2, 0], [68, 99, 96, 99, 61, 1]], "fitness": -0.3074285686016083, "mapping_values": [1, 2, 1, 1, 1, 11, 6, 5, 1, 2, 1, 1, 1, 17, 9, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.add(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.multiply(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)), grad)", "other_info": {"loss": [2.3026938438415527, 2.2874021530151367, 2.278074264526367, 2.2710208892822266, 2.266467571258545, 2.265334367752075, 2.263774871826172, 2.264345645904541, 2.2634050846099854, 2.26369309425354, 2.2645576000213623, 2.263521909713745, 2.2624757289886475, 2.263040065765381, 2.2628703117370605, 2.263792037963867, 2.263150215148926], "accuracy": [0.10342095047235489, 0.1372341811656952, 0.16457535326480865, 0.1826707124710083, 0.1912561058998108, 0.19799233973026276, 0.2001056671142578, 0.19535067677497864, 0.2005019187927246, 0.19931316375732422, 0.19535067677497864, 0.2016906589269638, 0.20353981852531433, 0.20604939758777618, 0.2032756507396698, 0.19878484308719635, 0.2032756507396698], "val_loss": [2.2920849323272705, 2.278388261795044, 2.2699782848358154, 2.265080690383911, 2.2624247074127197, 2.2610137462615967, 2.2602787017822266, 2.259904623031616, 2.2597148418426514, 2.259620189666748, 2.259572744369507, 2.259549140930176, 2.2595374584198, 2.2595319747924805, 2.259528875350952, 2.2595279216766357, 2.2595274448394775], "val_accuracy": [0.125, 0.18333333730697632, 0.23733332753181458, 0.26766666769981384, 0.2853333353996277, 0.2913333475589752, 0.2980000078678131, 0.30000001192092896, 0.3009999990463257, 0.3016666769981384, 0.3016666769981384, 0.30266666412353516, 0.30266666412353516, 0.30266666412353516, 0.30266666412353516, 0.30266666412353516, 0.30266666412353516]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1], [0, 2, 6, 0, 3, 1, 7, 1, 9], [0, 1, 0, 0, 1, 2], [39, 39, 13, 5], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 2, 3, 0, 3, 5, 3, 9], [0, 2, 0, 3], [16, 16, 25], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1], [6, 4, 3, 6, 8, 1, 1, 1, 4, 2, 8, 1, 9, 1, 0], [0, 2, 0, 3, 4, 0, 0, 1, 2, 0, 1], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 9, 6, 4, 12, 8, 4, 3, 2, 1, 1, 0, 26, 15, 11, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.subtract(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), alpha), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.pow(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(beta, tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(grad, tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.sqrt(alpha), tf.math.subtract(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.negative(alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 76], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 9], [3, 2, 3, 3], [16, 16], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1], [2, 7, 5, 7, 8, 2, 2, 3, 2, 7, 4, 6, 8, 6, 4, 8, 9, 8, 6, 3, 7, 1, 6, 2], [0, 2, 3, 0, 6, 6, 6, 0, 4, 0, 6, 3, 4, 2, 1, 4, 1, 3], [99, 87, 40, 28, 9], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 6, 2, 5, 8], [0, 0, 0, 3, 0, 4, 3, 4, 2, 4, 7, 0], [16, 99, 96, 47, 61, 16]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 9, 6, 3, 1, 42, 24, 18, 5, 27, 15, 12, 5], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.math.multiply(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(sigma, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, tf.math.add(grad, tf.math.add(tf.math.pow(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.divide_no_nan(tf.math.pow(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), grad), sigma), tf.math.subtract(grad, beta))))), tf.math.divide_no_nan(tf.math.add(alpha, grad), alpha)))))))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, tf.math.add(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), grad))), sigma)), tf.math.sqrt(tf.math.divide_no_nan(grad, tf.math.add(tf.math.square(beta), grad))))), grad), tf.math.sqrt(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 1], [0, 2, 0, 3], [41, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 0, 3, 6, 8, 1, 4, 5, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 2, 0, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.09799999743700027, "mapping_values": [1, 1, 0, 1, 1, 6, 3, 3, 2, 2, 1, 1, 1, 16, 9, 7, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), sigma))), tf.math.pow(tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.310443639755249, 2.3097918033599854, 2.3097405433654785, 2.309269666671753, 2.310256242752075, 2.3104898929595947, 2.309260368347168, 2.310304641723633, 2.309830665588379, 2.3110854625701904, 2.309972047805786, 2.3104748725891113, 2.3105602264404297, 2.3084778785705566, 2.310060501098633, 2.3115437030792236, 2.309762477874756, 2.3123626708984375, 2.311845541000366], "accuracy": [0.08730682730674744, 0.09470347315073013, 0.09708096832036972, 0.10038304328918457, 0.09734513610601425, 0.09826971590518951, 0.09602430462837219, 0.09034473448991776, 0.09774138033390045, 0.09351472556591034, 0.09457138925790787, 0.0874389111995697, 0.09311848133802414, 0.0956280529499054, 0.09338264167308807, 0.08968432247638702, 0.09615638852119446, 0.0886276587843895, 0.09549596905708313], "val_loss": [2.308380126953125, 2.3084259033203125, 2.3084514141082764, 2.308468818664551, 2.3084821701049805, 2.3084938526153564, 2.3085031509399414, 2.30851149559021, 2.308519124984741, 2.308525800704956, 2.3085319995880127, 2.308537721633911, 2.3085432052612305, 2.3085482120513916, 2.3085525035858154, 2.3085567951202393, 2.308560609817505, 2.3085646629333496, 2.308568239212036], "val_accuracy": [0.08866667002439499, 0.08900000154972076, 0.08966666460037231, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09099999815225601, 0.09133332967758179, 0.09166666865348816, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}}]