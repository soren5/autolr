[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8822857141494751, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585750579834, 1.8655762672424316, 1.394430160522461, 1.0773245096206665, 0.9378393888473511, 0.8425824046134949, 0.7776632308959961, 0.736241340637207, 0.6971188187599182, 0.6732122302055359, 0.644855797290802, 0.6276965141296387, 0.6100340485572815, 0.5899673104286194, 0.5746485590934753, 0.5484329462051392, 0.5425268411636353, 0.5357900857925415, 0.5214410424232483, 0.5127171874046326, 0.4895091950893402, 0.4932740032672882, 0.48551443219184875, 0.47113916277885437, 0.46571049094200134, 0.450914591550827, 0.438728004693985, 0.4414178729057312, 0.4245515465736389, 0.4182806611061096, 0.4126766324043274, 0.41352686285972595, 0.4031256139278412, 0.40064555406570435, 0.3982388377189636, 0.38566267490386963, 0.38400527834892273, 0.3741128146648407, 0.36422181129455566, 0.36170411109924316, 0.35991787910461426, 0.35666367411613464, 0.3521813750267029, 0.34583958983421326, 0.34736087918281555, 0.34181836247444153, 0.33650368452072144, 0.33141741156578064, 0.3230496346950531, 0.3225416839122772, 0.315096914768219, 0.3059031665325165, 0.3058394491672516, 0.3017319440841675, 0.29568877816200256, 0.2933836281299591, 0.28774771094322205, 0.2856961190700531, 0.2802303731441498, 0.2779994010925293, 0.274711549282074, 0.2719985842704773, 0.2586328387260437, 0.2598455548286438, 0.2622571289539337, 0.25739434361457825, 0.2502012252807617, 0.2544722855091095, 0.24556587636470795, 0.24580754339694977, 0.23948103189468384, 0.23949603736400604, 0.23484042286872864, 0.22871272265911102, 0.2256491780281067, 0.22479403018951416, 0.21744707226753235, 0.21390178799629211, 0.21272219717502594], "accuracy": [0.2785629332065582, 0.49451854825019836, 0.559899628162384, 0.6215823292732239, 0.6654338836669922, 0.6950204968452454, 0.7181349992752075, 0.7322678565979004, 0.7441553473472595, 0.7483819723129272, 0.7627789974212646, 0.7717606425285339, 0.7728173136711121, 0.78113853931427, 0.7882710099220276, 0.7993659973144531, 0.7976489067077637, 0.8074230551719666, 0.8128384351730347, 0.8198388814926147, 0.8212917447090149, 0.819970965385437, 0.8272355198860168, 0.8350284099578857, 0.8305375576019287, 0.8387266993522644, 0.846387505531311, 0.8433496356010437, 0.8504821062088013, 0.8524633646011353, 0.8535200357437134, 0.854708731174469, 0.856689989566803, 0.8551049828529358, 0.8593316674232483, 0.8615770936012268, 0.8628978729248047, 0.8702945709228516, 0.8691058158874512, 0.871879518032074, 0.8722757697105408, 0.8691058158874512, 0.8733324408531189, 0.8800686597824097, 0.8795403242111206, 0.8755778670310974, 0.8768987059593201, 0.8829745054244995, 0.8824461698532104, 0.8823140859603882, 0.887201189994812, 0.8897107243537903, 0.8889182209968567, 0.8927486538887024, 0.8902390599250793, 0.8953903317451477, 0.8980319499969482, 0.8976356983184814, 0.900409460067749, 0.89552241563797, 0.9025228023529053, 0.8989565372467041, 0.9056927561759949, 0.9085986018180847, 0.9030511379241943, 0.9066173434257507, 0.9101836085319519, 0.9083344340324402, 0.909259021282196, 0.9099194407463074, 0.9126931428909302, 0.9140139818191528, 0.9119006991386414, 0.9171839952468872, 0.9169198274612427, 0.9185048341751099, 0.9218068718910217, 0.9185048341751099, 0.9196935892105103], "val_loss": [2.033445358276367, 1.5042319297790527, 1.0271512269973755, 0.8147247433662415, 0.7278039455413818, 0.68117356300354, 0.6306353211402893, 0.5966841578483582, 0.5751398801803589, 0.5460951328277588, 0.5314993858337402, 0.509799063205719, 0.4957965612411499, 0.4792602062225342, 0.46671679615974426, 0.45267683267593384, 0.4441072940826416, 0.4356139600276947, 0.42943108081817627, 0.4255247414112091, 0.41811680793762207, 0.4163394272327423, 0.39929893612861633, 0.3969916105270386, 0.39089226722717285, 0.387652188539505, 0.3844633102416992, 0.3824205696582794, 0.3749690353870392, 0.3701930642127991, 0.36967378854751587, 0.36689504981040955, 0.3585263788700104, 0.3587398827075958, 0.36267170310020447, 0.3561091423034668, 0.35379692912101746, 0.3499273955821991, 0.34701839089393616, 0.3467637896537781, 0.3424672484397888, 0.33951225876808167, 0.3386255204677582, 0.34044384956359863, 0.33945050835609436, 0.33684298396110535, 0.3322163224220276, 0.33181649446487427, 0.32827115058898926, 0.3312568664550781, 0.3297465741634369, 0.3256674110889435, 0.3234780728816986, 0.32119208574295044, 0.3232716917991638, 0.3209094703197479, 0.31944912672042847, 0.3157532513141632, 0.3144265413284302, 0.31676045060157776, 0.31425556540489197, 0.3131799101829529, 0.3147056996822357, 0.3154993951320648, 0.31771615147590637, 0.31545644998550415, 0.3127000629901886, 0.31382524967193604, 0.31026333570480347, 0.3147730529308319, 0.30829918384552, 0.3107443153858185, 0.31316936016082764, 0.30297672748565674, 0.30325081944465637, 0.30436232686042786, 0.3072424829006195, 0.30681705474853516, 0.3061434030532837], "val_accuracy": [0.5526666641235352, 0.6666666865348816, 0.687333345413208, 0.7083333134651184, 0.731333315372467, 0.7446666955947876, 0.7606666684150696, 0.762666642665863, 0.7873333096504211, 0.7889999747276306, 0.7973333597183228, 0.8056666851043701, 0.8193333148956299, 0.8259999752044678, 0.8289999961853027, 0.8410000205039978, 0.8453333377838135, 0.8450000286102295, 0.8489999771118164, 0.847000002861023, 0.8516666889190674, 0.856333315372467, 0.859333336353302, 0.856333315372467, 0.8633333444595337, 0.8640000224113464, 0.8656666874885559, 0.8646666407585144, 0.8679999709129333, 0.8696666955947876, 0.8640000224113464, 0.8686666488647461, 0.8713333606719971, 0.8709999918937683, 0.8703333139419556, 0.8723333477973938, 0.871999979019165, 0.874666690826416, 0.8723333477973938, 0.8759999871253967, 0.8726666569709778, 0.875333309173584, 0.8790000081062317, 0.8756666779518127, 0.8726666569709778, 0.8769999742507935, 0.8796666860580444, 0.8796666860580444, 0.8806666731834412, 0.8793333172798157, 0.8813333511352539, 0.8840000033378601, 0.8840000033378601, 0.8843333125114441, 0.8809999823570251, 0.8856666684150696, 0.8866666555404663, 0.8833333253860474, 0.8866666555404663, 0.8843333125114441, 0.8856666684150696, 0.8880000114440918, 0.887333333492279, 0.8883333206176758, 0.8866666555404663, 0.8896666765213013, 0.8863333463668823, 0.8853333592414856, 0.890999972820282, 0.8870000243186951, 0.8883333206176758, 0.8883333206176758, 0.8916666507720947, 0.8939999938011169, 0.8896666765213013, 0.8916666507720947, 0.890999972820282, 0.8926666378974915, 0.8913333415985107]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8634285926818848, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2220258712768555, 1.8618483543395996, 1.3942830562591553, 1.1014814376831055, 0.9480759501457214, 0.8553077578544617, 0.7761465907096863, 0.738015353679657, 0.6976367235183716, 0.6629254817962646, 0.6464065909385681, 0.6160904765129089, 0.6036694645881653, 0.5799216628074646, 0.5675011873245239, 0.5455167293548584, 0.538813054561615, 0.5301090478897095, 0.5109269022941589, 0.50213223695755, 0.495985209941864, 0.4808093011379242, 0.47260820865631104, 0.4587629437446594, 0.45542004704475403, 0.441588819026947, 0.44052764773368835, 0.4281778931617737, 0.4289059638977051, 0.4173516035079956, 0.4082890748977661, 0.40576812624931335, 0.3950215280056, 0.39397916197776794, 0.38438522815704346, 0.3865646719932556, 0.38300350308418274, 0.3743423521518707, 0.3665873110294342, 0.36134883761405945, 0.3515346944332123, 0.35391727089881897, 0.35023432970046997, 0.3401188254356384, 0.3401421010494232, 0.3317408561706543, 0.3303760886192322, 0.32837584614753723, 0.3290818929672241, 0.32332783937454224, 0.3148449659347534, 0.3038398325443268, 0.3016190528869629, 0.3022817373275757, 0.2970089316368103, 0.2926592230796814, 0.2781360447406769, 0.282207190990448, 0.27207785844802856, 0.2776895761489868, 0.27249231934547424, 0.272443026304245, 0.2669994533061981], "accuracy": [0.26601505279541016, 0.49148064851760864, 0.5555408596992493, 0.6190727949142456, 0.6613393425941467, 0.6915863156318665, 0.724739134311676, 0.7265883088111877, 0.7467969655990601, 0.7600052952766418, 0.76106196641922, 0.7788931727409363, 0.7799497842788696, 0.7882710099220276, 0.7973847389221191, 0.8045172095298767, 0.8095363974571228, 0.8108572363853455, 0.8198388814926147, 0.8189142942428589, 0.8189142942428589, 0.8271034359931946, 0.8310658931732178, 0.8358209133148193, 0.8401796221733093, 0.8426892161369324, 0.8432175517082214, 0.8481045961380005, 0.8486329317092896, 0.8525954484939575, 0.8529917001724243, 0.8551049828529358, 0.8543124794960022, 0.8617091774940491, 0.8658037185668945, 0.8638224601745605, 0.8667283058166504, 0.8627657890319824, 0.8676528930664062, 0.8688416481018066, 0.8733324408531189, 0.8713511824607849, 0.8726720213890076, 0.8765024542808533, 0.876370370388031, 0.8768987059593201, 0.8799365758895874, 0.8835028409957886, 0.880729079246521, 0.8853520154953003, 0.8858803510665894, 0.8901069760322571, 0.8916919827461243, 0.8938053250312805, 0.8956544995307922, 0.89552241563797, 0.8975036144256592, 0.8951261639595032, 0.900409460067749, 0.9019944667816162, 0.900409460067749, 0.9038436412811279, 0.9005415439605713], "val_loss": [2.033003568649292, 1.505016803741455, 1.0357615947723389, 0.8253049254417419, 0.7316834926605225, 0.6755144596099854, 0.6273303031921387, 0.5971790552139282, 0.5701981782913208, 0.5464056730270386, 0.5296459794044495, 0.5186576247215271, 0.5031659007072449, 0.48581191897392273, 0.47730547189712524, 0.46968045830726624, 0.46253702044487, 0.4487317204475403, 0.4409039616584778, 0.43793463706970215, 0.43158262968063354, 0.4235917925834656, 0.419137179851532, 0.41551342606544495, 0.4113025367259979, 0.41133826971054077, 0.4058802127838135, 0.3991524279117584, 0.39773184061050415, 0.3903476297855377, 0.38786405324935913, 0.3842194676399231, 0.38571056723594666, 0.3772575557231903, 0.38496699929237366, 0.3750673830509186, 0.37608951330184937, 0.3698883056640625, 0.36850640177726746, 0.3664099872112274, 0.36902669072151184, 0.3593473732471466, 0.36245083808898926, 0.3605039417743683, 0.36200854182243347, 0.3596201539039612, 0.352982759475708, 0.35694485902786255, 0.3504302203655243, 0.36051270365715027, 0.3540744483470917, 0.3460812270641327, 0.34683847427368164, 0.347260445356369, 0.3469648063182831, 0.34416714310646057, 0.3442109227180481, 0.33998778462409973, 0.33975717425346375, 0.34396570920944214, 0.3436901867389679, 0.3407912254333496, 0.34149545431137085], "val_accuracy": [0.5676666498184204, 0.6626666784286499, 0.6909999847412109, 0.7136666774749756, 0.7426666617393494, 0.7549999952316284, 0.7703333497047424, 0.7846666574478149, 0.7946666479110718, 0.8033333420753479, 0.8133333325386047, 0.8116666674613953, 0.8216666579246521, 0.8296666741371155, 0.8330000042915344, 0.8366666436195374, 0.8333333134651184, 0.8413333296775818, 0.8433333039283752, 0.8456666469573975, 0.8483333587646484, 0.8483333587646484, 0.8489999771118164, 0.8510000109672546, 0.8526666760444641, 0.8496666550636292, 0.8529999852180481, 0.856333315372467, 0.8606666922569275, 0.8579999804496765, 0.8616666793823242, 0.8610000014305115, 0.862333357334137, 0.8613333106040955, 0.8616666793823242, 0.8646666407585144, 0.8643333315849304, 0.8659999966621399, 0.8673333525657654, 0.862333357334137, 0.8676666617393494, 0.8690000176429749, 0.8633333444595337, 0.8706666827201843, 0.8700000047683716, 0.8679999709129333, 0.8713333606719971, 0.871666669845581, 0.8696666955947876, 0.8693333268165588, 0.8726666569709778, 0.8759999871253967, 0.8759999871253967, 0.874666690826416, 0.8756666779518127, 0.8763333559036255, 0.874666690826416, 0.8820000290870667, 0.8813333511352539, 0.8796666860580444, 0.8806666731834412, 0.8820000290870667, 0.8799999952316284]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 0, 4], [0, 1, 0, 2, 0], [39, 39, 95], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0], [0, 2, 3, 0, 8, 5], [0, 3, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 3, 2, 8], [4, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.7988571524620056, "mapping_values": [1, 12, 7, 5, 3, 7, 4, 3, 2, 2, 1, 1, 1, 10, 5, 5, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.pow(grad, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), sigma), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3075366020202637, 2.294771194458008, 2.271528720855713, 2.2239651679992676, 2.109337329864502, 1.7738664150238037, 1.319982647895813, 1.1156089305877686, 0.9895744323730469, 0.9203558564186096, 0.8869428038597107, 0.8288577198982239, 0.7983039021492004, 0.7540886402130127, 0.7784621715545654, 0.7412248849868774, 0.7254611253738403, 0.696282148361206, 0.6852179169654846, 0.6780692934989929, 0.6881178617477417, 0.6330074667930603, 0.6304918527603149, 0.6311252117156982, 0.6023478507995605, 0.624576985836029, 0.5865467190742493, 0.5845199227333069, 0.5487008690834045, 0.5329253673553467, 0.5425170660018921, 0.5254795551300049, 0.5204452276229858], "accuracy": [0.09668471664190292, 0.11742173880338669, 0.18055738508701324, 0.27460044622421265, 0.3811914026737213, 0.4707436263561249, 0.5559371113777161, 0.6057323813438416, 0.6481310129165649, 0.6618676781654358, 0.6720380187034607, 0.6923788189888, 0.7058512568473816, 0.7161537408828735, 0.7047945857048035, 0.7263241410255432, 0.7235503792762756, 0.7442874312400818, 0.7345132827758789, 0.7441553473472595, 0.744419515132904, 0.7658169269561768, 0.7618544697761536, 0.7581561207771301, 0.7750627398490906, 0.7609298825263977, 0.7778365015983582, 0.7758552432060242, 0.7965922355651855, 0.7992339134216309, 0.7951393723487854, 0.7997622489929199, 0.8024039268493652], "val_loss": [2.3009893894195557, 2.2803499698638916, 2.244217872619629, 2.1642792224884033, 1.9345221519470215, 1.3622181415557861, 0.9919348359107971, 0.9097389578819275, 0.8305802345275879, 0.7698717713356018, 0.679853618144989, 0.6772933602333069, 0.6517210006713867, 0.7310351729393005, 0.7426162362098694, 0.6202619075775146, 0.596807062625885, 0.6486843824386597, 0.6463460326194763, 0.5983777046203613, 0.5574459433555603, 0.5434210896492004, 0.5790743827819824, 0.6176737546920776, 0.520598292350769, 0.5559740662574768, 0.5580083131790161, 0.4850510358810425, 0.498617023229599, 0.482492059469223, 0.4995037317276001, 0.4908851385116577, 0.47212889790534973], "val_accuracy": [0.10700000077486038, 0.17100000381469727, 0.40700000524520874, 0.44566667079925537, 0.5333333611488342, 0.6363333463668823, 0.6759999990463257, 0.6973333358764648, 0.6903333067893982, 0.7243333458900452, 0.749666690826416, 0.7383333444595337, 0.7570000290870667, 0.7070000171661377, 0.7070000171661377, 0.7703333497047424, 0.7799999713897705, 0.7419999837875366, 0.737333357334137, 0.7703333497047424, 0.7910000085830688, 0.7990000247955322, 0.7823333144187927, 0.7413333058357239, 0.8066666722297668, 0.7676666378974915, 0.7856666445732117, 0.8240000009536743, 0.8069999814033508, 0.8176666498184204, 0.8109999895095825, 0.8220000267028809, 0.8193333148956299]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 0, 0, 2], [39, 39, 69], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 4, 0], [0, 2, 0, 0, 5], [16, 16, 70], [0, 1], [0], [1], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 3, 12, 7, 5, 3, 2, 1, 1, 0, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.negative(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 0, 3, 8, 8], [1, 1, 1, 2], [39, 11], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1], [9, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 0], [0, 9], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [6, 3, 3, 6, 6, 1, 4, 1, 4, 2, 8, 0, 0, 3, 3, 7, 2, 5, 7, 3, 3], [4, 0, 0, 3, 0, 4, 3, 1, 2, 0, 7, 3, 6, 3, 0, 1, 0, 2], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 7, 4, 0, 1, 1, 0, 1, 2, 2, 0, 1, 39, 21, 18, 6], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(alpha, tf.math.sqrt(tf.math.sqrt(alpha)))), alpha), grad)), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.math.pow(tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), grad), sigma), tf.math.sqrt(tf.math.negative(alpha)))), beta)), tf.math.negative(tf.math.multiply(tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.add(sigma, tf.math.square(grad)))), sigma))), tf.math.add(tf.math.multiply(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 0], [39, 39, 85], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3, 6, 4, 7, 5, 0, 1, 0, 8, 6, 5, 2, 5, 1, 0, 2, 3, 1, 5, 5, 5, 3, 8], [0, 3, 0, 3, 0, 2, 2, 2, 3, 1, 1, 5, 1, 3, 5], [97, 16, 46], [0, 1], [0], [0], [97], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 0, 0, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 83, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 3, 42, 27, 15, 3, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.math.divide_no_nan(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.square(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.subtract(beta, tf.math.negative(tf.math.sqrt(tf.math.divide_no_nan(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.negative(grad), tf.math.add(tf.math.multiply(tf.math.subtract(alpha, tf.math.square(alpha)), tf.math.square(grad)), tf.math.square(alpha)))))))))))), tf.math.multiply(tf.math.sqrt(grad), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3036468029022217, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}]