[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8862857222557068, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222418785095215, 1.8632627725601196, 1.3950724601745605, 1.0979150533676147, 0.9474178552627563, 0.8543937802314758, 0.7783248424530029, 0.7376496195793152, 0.7006842494010925, 0.6746688485145569, 0.647553563117981, 0.6295329928398132, 0.6112891435623169, 0.58865886926651, 0.5667527914047241, 0.5575993657112122, 0.5467248558998108, 0.5289703011512756, 0.5205997824668884, 0.5110849142074585, 0.5064045786857605, 0.4867391884326935, 0.4731372892856598, 0.47443822026252747, 0.46410614252090454, 0.4545186161994934, 0.445819616317749, 0.4367676079273224, 0.4321127235889435, 0.4275900721549988, 0.4177286922931671, 0.40700381994247437, 0.40491974353790283, 0.3923063576221466, 0.38597339391708374, 0.37638187408447266, 0.3749813437461853, 0.3708414137363434, 0.369646281003952, 0.3635149896144867, 0.3594855070114136, 0.3503628671169281, 0.3338625133037567, 0.3396199643611908, 0.33679017424583435, 0.3303111493587494, 0.3275522291660309, 0.3153315782546997, 0.3093845844268799, 0.31660354137420654, 0.313541054725647, 0.3128948211669922, 0.2977619469165802, 0.30230653285980225, 0.298944890499115, 0.28947505354881287, 0.2822195291519165, 0.2778712213039398, 0.2668195366859436, 0.26853811740875244, 0.26283398270606995, 0.2662760019302368, 0.2576100528240204, 0.25102800130844116, 0.2539205849170685, 0.25087955594062805, 0.24508193135261536], "accuracy": [0.280940443277359, 0.48685774207115173, 0.5665037631988525, 0.616299033164978, 0.6625280380249023, 0.6930392384529114, 0.7169462442398071, 0.7320036888122559, 0.7375511527061462, 0.7491744756698608, 0.7672698497772217, 0.7670056819915771, 0.7745344042778015, 0.7876105904579163, 0.7906485199928284, 0.7994980812072754, 0.802800178527832, 0.8068947196006775, 0.8117818236351013, 0.8153480291366577, 0.8181217908859253, 0.829216718673706, 0.8300092220306396, 0.8238013386726379, 0.8325188159942627, 0.8385946154594421, 0.8372738361358643, 0.842028796672821, 0.8451988101005554, 0.8481045961380005, 0.8515387773513794, 0.8549728989601135, 0.8516708612442017, 0.8603883385658264, 0.8598600029945374, 0.8667283058166504, 0.8636903762817383, 0.8636903762817383, 0.8677849769592285, 0.8704266548156738, 0.8758420348167419, 0.8739928603172302, 0.8790120482444763, 0.8768987059593201, 0.8751816153526306, 0.8794082403182983, 0.8813894987106323, 0.8860124349594116, 0.8874653577804565, 0.8856161832809448, 0.8838990926742554, 0.8877294659614563, 0.8918240666389465, 0.8918240666389465, 0.8922203183174133, 0.8953903317451477, 0.89552241563797, 0.9002773761749268, 0.9049002528190613, 0.9034473896026611, 0.9035794734954834, 0.9038436412811279, 0.9085986018180847, 0.9095231890678406, 0.9095231890678406, 0.909259021282196, 0.910711944103241], "val_loss": [2.0414316654205322, 1.5168657302856445, 1.0494927167892456, 0.8396123051643372, 0.7532041668891907, 0.6975494027137756, 0.6532282829284668, 0.6188269853591919, 0.5909113883972168, 0.5747429728507996, 0.5562715530395508, 0.5392115712165833, 0.5226473808288574, 0.5080817937850952, 0.49551260471343994, 0.4949219524860382, 0.48097461462020874, 0.46894019842147827, 0.4645398259162903, 0.4554585814476013, 0.44845467805862427, 0.44272810220718384, 0.4365209937095642, 0.4303407371044159, 0.42757970094680786, 0.42137086391448975, 0.4158954322338104, 0.4094981253147125, 0.40614867210388184, 0.40746310353279114, 0.39686036109924316, 0.39440515637397766, 0.39069101214408875, 0.3898474872112274, 0.3889416456222534, 0.3833497166633606, 0.387736976146698, 0.3792175352573395, 0.3778442442417145, 0.37528878450393677, 0.3729557991027832, 0.37016138434410095, 0.36690768599510193, 0.36455467343330383, 0.36386409401893616, 0.3628668487071991, 0.365796834230423, 0.36076274514198303, 0.3599783480167389, 0.35867130756378174, 0.35705167055130005, 0.35411083698272705, 0.3552299737930298, 0.3651564121246338, 0.36276260018348694, 0.34837988018989563, 0.34821584820747375, 0.3528410792350769, 0.3496720790863037, 0.3506317138671875, 0.34951722621917725, 0.3443804085254669, 0.345913290977478, 0.3461855351924896, 0.3431210517883301, 0.348863810300827, 0.3426092565059662], "val_accuracy": [0.5373333096504211, 0.6570000052452087, 0.6759999990463257, 0.7110000252723694, 0.7286666631698608, 0.7419999837875366, 0.7590000033378601, 0.7616666555404663, 0.7836666703224182, 0.7903333306312561, 0.7886666655540466, 0.8006666898727417, 0.809333324432373, 0.8183333277702332, 0.8146666884422302, 0.8140000104904175, 0.8233333230018616, 0.8289999961853027, 0.8326666951179504, 0.8363333344459534, 0.8389999866485596, 0.8366666436195374, 0.8363333344459534, 0.8489999771118164, 0.847000002861023, 0.8519999980926514, 0.8533333539962769, 0.8560000061988831, 0.8573333621025085, 0.8539999723434448, 0.8619999885559082, 0.862666666507721, 0.8656666874885559, 0.8629999756813049, 0.8646666407585144, 0.8636666536331177, 0.8603333234786987, 0.8659999966621399, 0.8673333525657654, 0.8673333525657654, 0.8713333606719971, 0.8703333139419556, 0.8713333606719971, 0.871666669845581, 0.8736666440963745, 0.8730000257492065, 0.871999979019165, 0.874666690826416, 0.875333309173584, 0.874666690826416, 0.875, 0.8786666393280029, 0.8776666522026062, 0.8743333220481873, 0.8723333477973938, 0.8833333253860474, 0.8826666474342346, 0.8790000081062317, 0.8836666941642761, 0.878333330154419, 0.8820000290870667, 0.887666642665863, 0.8820000290870667, 0.8803333044052124, 0.8830000162124634, 0.8846666812896729, 0.8856666684150696]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8734285831451416, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222979784011841, 1.8684900999069214, 1.3963037729263306, 1.099637508392334, 0.9418933987617493, 0.8357081413269043, 0.7838417887687683, 0.7202038764953613, 0.6998494267463684, 0.666288435459137, 0.643804669380188, 0.6151906251907349, 0.5889880657196045, 0.5703209042549133, 0.5552529692649841, 0.5420472025871277, 0.5338141322135925, 0.515961229801178, 0.5028784871101379, 0.4940486252307892, 0.47450730204582214, 0.47110292315483093, 0.46588265895843506, 0.4537615180015564, 0.44893014430999756, 0.436978280544281, 0.43490853905677795, 0.42678302526474, 0.4165050983428955, 0.410950243473053, 0.4033172130584717, 0.395906925201416, 0.390309602022171, 0.38172394037246704, 0.3768087327480316, 0.37246251106262207, 0.3624979555606842, 0.3609810173511505, 0.35495296120643616, 0.34591346979141235, 0.34481024742126465, 0.336681067943573, 0.3299630582332611, 0.3293025493621826, 0.33063599467277527, 0.3167828321456909, 0.31681302189826965, 0.31371986865997314, 0.3042111396789551, 0.30257293581962585, 0.30190959572792053, 0.28820595145225525, 0.28907686471939087, 0.28742167353630066, 0.2779710590839386, 0.2820701003074646, 0.2782004475593567, 0.27130335569381714, 0.26275384426116943, 0.2617935240268707, 0.2617722749710083, 0.24707062542438507, 0.24326738715171814, 0.24443461000919342, 0.2430032640695572, 0.23915229737758636, 0.23427821695804596, 0.23401480913162231, 0.22769801318645477, 0.22505760192871094, 0.223759725689888, 0.21997396647930145, 0.21825408935546875, 0.21521282196044922, 0.21753939986228943, 0.20716096460819244, 0.20267872512340546, 0.19743336737155914, 0.19743776321411133, 0.19270779192447662, 0.18864743411540985, 0.19344255328178406, 0.18970052897930145, 0.18864981830120087], "accuracy": [0.2743362784385681, 0.48606523871421814, 0.5610883831977844, 0.6181482076644897, 0.6660943031311035, 0.6991150379180908, 0.7150970697402954, 0.7397965788841248, 0.7471932172775269, 0.7530049085617065, 0.7594769597053528, 0.7737419009208679, 0.7878747582435608, 0.7960638999938965, 0.8005547523498535, 0.8017435073852539, 0.809140145778656, 0.8150838613510132, 0.8191784620285034, 0.8232730031013489, 0.829216718673706, 0.8298771381378174, 0.8343679904937744, 0.8358209133148193, 0.8393871188163757, 0.845859169960022, 0.8446704745292664, 0.847840428352356, 0.8515387773513794, 0.8532558679580688, 0.8565579056739807, 0.8628978729248047, 0.8570862412452698, 0.8672566413879395, 0.863029956817627, 0.8663320541381836, 0.8706908226013184, 0.870030403137207, 0.8732003569602966, 0.8755778670310974, 0.8771628737449646, 0.8794082403182983, 0.8796724081039429, 0.8835028409957886, 0.8838990926742554, 0.8857482671737671, 0.886672854423523, 0.8922203183174133, 0.8931449055671692, 0.8932769894599915, 0.8944657444953918, 0.8960506916046143, 0.8948619961738586, 0.8953903317451477, 0.900409460067749, 0.8997490406036377, 0.8996169567108154, 0.9022586345672607, 0.904768168926239, 0.9054285883903503, 0.9038436412811279, 0.9113723635673523, 0.9104477763175964, 0.9124290347099304, 0.913089394569397, 0.9129573106765747, 0.9210143685340881, 0.9132214784622192, 0.9153348207473755, 0.9223352074623108, 0.9177123308181763, 0.9225993752479553, 0.9224672913551331, 0.9210143685340881, 0.9206181764602661, 0.9266939759254456, 0.925901472568512, 0.9281468987464905, 0.9297318458557129, 0.9303922653198242, 0.9294676780700684, 0.930788516998291, 0.9282789826393127, 0.9311847686767578], "val_loss": [2.0409321784973145, 1.5214565992355347, 1.05298912525177, 0.847848117351532, 0.7569036483764648, 0.7014946341514587, 0.6593669652938843, 0.6174086332321167, 0.5898903012275696, 0.5680195093154907, 0.5536240935325623, 0.5289921760559082, 0.5129215717315674, 0.5018971562385559, 0.48258835077285767, 0.48162874579429626, 0.46836817264556885, 0.4573933780193329, 0.4509854316711426, 0.44129228591918945, 0.4314010739326477, 0.4317696988582611, 0.42593374848365784, 0.42123648524284363, 0.4104869067668915, 0.40538427233695984, 0.40540382266044617, 0.3969782590866089, 0.39461734890937805, 0.3888759911060333, 0.3897866904735565, 0.37952637672424316, 0.3787689208984375, 0.3762128949165344, 0.3737107813358307, 0.3700574040412903, 0.36827221512794495, 0.37636831402778625, 0.3630806505680084, 0.3602864146232605, 0.3609667122364044, 0.3545707166194916, 0.35270559787750244, 0.3502800166606903, 0.34805062413215637, 0.3463490307331085, 0.3435858190059662, 0.34601521492004395, 0.34282365441322327, 0.34133386611938477, 0.3446502983570099, 0.34192830324172974, 0.3407571613788605, 0.33503901958465576, 0.33805611729621887, 0.3352298438549042, 0.335054486989975, 0.33248934149742126, 0.3334764838218689, 0.3301822543144226, 0.32952094078063965, 0.33184829354286194, 0.32806137204170227, 0.3283076286315918, 0.3289802372455597, 0.3264106810092926, 0.32430461049079895, 0.32466447353363037, 0.3239396810531616, 0.32672667503356934, 0.32896068692207336, 0.3239467144012451, 0.3260535001754761, 0.33411088585853577, 0.33148080110549927, 0.32355692982673645, 0.32368969917297363, 0.32701215147972107, 0.32208025455474854, 0.3203742206096649, 0.3222813606262207, 0.3308925926685333, 0.32604289054870605, 0.3244079053401947], "val_accuracy": [0.5163333415985107, 0.6579999923706055, 0.6766666769981384, 0.7016666531562805, 0.7256666421890259, 0.7433333396911621, 0.7553333044052124, 0.765333354473114, 0.7820000052452087, 0.7870000004768372, 0.7919999957084656, 0.8113333582878113, 0.8116666674613953, 0.8233333230018616, 0.8273333311080933, 0.8296666741371155, 0.8326666951179504, 0.8366666436195374, 0.840666651725769, 0.8453333377838135, 0.8433333039283752, 0.8489999771118164, 0.8476666808128357, 0.8516666889190674, 0.8556666374206543, 0.8529999852180481, 0.8556666374206543, 0.8560000061988831, 0.859000027179718, 0.8629999756813049, 0.8600000143051147, 0.8643333315849304, 0.8643333315849304, 0.8629999756813049, 0.8646666407585144, 0.8640000224113464, 0.8663333058357239, 0.8603333234786987, 0.8683333396911621, 0.8669999837875366, 0.8693333268165588, 0.8726666569709778, 0.8733333349227905, 0.8730000257492065, 0.8696666955947876, 0.871999979019165, 0.8759999871253967, 0.8763333559036255, 0.8769999742507935, 0.8756666779518127, 0.878333330154419, 0.875333309173584, 0.878000020980835, 0.8786666393280029, 0.8796666860580444, 0.8816666603088379, 0.878000020980835, 0.8823333382606506, 0.8816666603088379, 0.8826666474342346, 0.8790000081062317, 0.8816666603088379, 0.8816666603088379, 0.8853333592414856, 0.8863333463668823, 0.8843333125114441, 0.887333333492279, 0.8859999775886536, 0.8866666555404663, 0.8866666555404663, 0.8816666603088379, 0.8893333077430725, 0.8846666812896729, 0.8836666941642761, 0.8806666731834412, 0.8899999856948853, 0.8913333415985107, 0.8883333206176758, 0.893666684627533, 0.8930000066757202, 0.8830000162124634, 0.8899999856948853, 0.8846666812896729, 0.8899999856948853]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 6, 3, 0, 1, 5], [0, 2, 0, 1], [39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 2, 0, 3, 3], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 4, 6, 3, 1, 4, 1, 2, 2, 8], [0, 0, 0, 4, 0, 0, 3, 1, 2, 0], [16, 47, 61, 99, 16, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 2, 1, 0, 1, 1, 2, 1, 1, 1, 11, 5, 6, 5], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), grad)), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 2, 3, 0, 3], [2, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 3, 0, 3], [16, 16], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1], [6, 7, 7, 2, 7, 6, 6, 7, 1, 9, 6, 4, 0, 4, 5, 3, 6, 0], [0, 4, 4, 1, 5, 4, 5, 7, 2, 3, 5, 5, 2, 6], [99, 65], [1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 9, 4, 2, 8], [0, 0, 0, 3, 4, 0, 3, 1, 1, 0], [29, 99, 96, 44, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(grad, tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), grad), tf.math.divide_no_nan(tf.math.pow(alpha, grad), tf.math.negative(tf.math.pow(tf.math.square(grad), grad)))), grad), beta), tf.math.multiply(sigma, tf.math.divide_no_nan(grad, grad))), tf.math.negative(beta))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3035953044891357, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}, "mapping_values": [1, 1, 0, 1, 0, 10, 6, 4, 2, 32, 18, 14, 2, 1, 0, 1, 1], "tree_depth": 27}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [81, 50], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 5, 0], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 6, 4, 2, 6], [0, 0, 0, 3, 4, 0, 3, 1, 2, 0, 6], [16, 99, 96, 99, 61, 77]], "fitness": -0.09685714542865753, "mapping_values": [1, 2, 1, 1, 1, 11, 7, 4, 2, 2, 1, 1, 1, 22, 11, 11, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.divide_no_nan(grad, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.divide_no_nan(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), grad))", "other_info": {"loss": [1192888893440.0, 2948386521088.0, 493891092480.0, 128673431552.0, 1060219781120.0, 77059538944.0], "accuracy": [0.10606260597705841, 0.10817593336105347, 0.09932637959718704, 0.09945846349000931, 0.09972262382507324, 0.09985470771789551], "val_loss": [1534060134400.0, 1496331583488.0, 79876227072.0, 79878766592.0, 79877324800.0, 79877087232.0], "val_accuracy": [0.09833333641290665, 0.09466666728258133, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 9, 6, 2, 2, 5, 1, 1, 0, 5, 3, 2, 5, 6], [1, 1, 0, 2, 0, 1, 3, 3, 1, 0, 1], [39, 39, 66, 93], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 2, 3, 0, 3, 5], [2, 2, 0, 3, 0], [1, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [2, 0, 0, 3, 0, 0, 3, 1, 2, 0], [76, 99, 96, 99, 61, 17]], "fitness": -0.09028571099042892, "mapping_values": [1, 29, 18, 11, 4, 11, 6, 5, 2, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.math.square(tf.math.subtract(tf.math.subtract(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad)), tf.math.multiply(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), alpha))), tf.math.add(tf.math.square(grad), grad)), tf.math.divide_no_nan(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))), alpha))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.negative(beta), beta), tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(beta, tf.math.divide_no_nan(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.subtract(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3100972175598145, 2.3116226196289062, 2.309462308883667, 2.309258222579956, 2.309438943862915, 2.3097662925720215], "accuracy": [0.09219389408826828, 0.0874389111995697, 0.0944393053650856, 0.0940430611371994, 0.0940430611371994, 0.09734513610601425], "val_loss": [2.3081398010253906, 2.3081395626068115, 2.3081398010253906, 2.3081398010253906, 2.3081400394439697, 2.308140277862549], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}]