[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.87628573179245, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221153497695923, 1.8690768480300903, 1.3930829763412476, 1.0920813083648682, 0.946754515171051, 0.8386176228523254, 0.7666530013084412, 0.7169585227966309, 0.6927855014801025, 0.6578141450881958, 0.6284602284431458, 0.6175082921981812, 0.5932229161262512, 0.5866845846176147, 0.5698589086532593, 0.5537236928939819, 0.5400969386100769, 0.5237241387367249, 0.5110511779785156, 0.4987642467021942, 0.4859139025211334, 0.48274683952331543, 0.4702848792076111, 0.46559596061706543, 0.4571192264556885, 0.45048508048057556, 0.43323010206222534, 0.43672871589660645, 0.4228549599647522, 0.4158686399459839, 0.40923213958740234, 0.3978442847728729, 0.3938561677932739, 0.39290058612823486, 0.3881992995738983, 0.372427374124527, 0.3708527982234955, 0.3674342930316925, 0.3639999032020569, 0.3603408634662628, 0.34736937284469604, 0.34856680035591125, 0.3419991731643677, 0.3314146399497986, 0.33113908767700195, 0.3256821036338806, 0.32241684198379517, 0.31129369139671326, 0.31209611892700195, 0.31315377354621887, 0.29969727993011475, 0.30303266644477844, 0.2969401776790619, 0.2884080111980438, 0.2830028831958771, 0.2803061902523041, 0.284909725189209, 0.2756250500679016, 0.27255335450172424, 0.267034113407135, 0.26680734753608704, 0.26125890016555786, 0.25913572311401367, 0.2510053515434265, 0.24825863540172577, 0.2431088238954544, 0.24655894935131073], "accuracy": [0.27077004313468933, 0.488971084356308, 0.5671641826629639, 0.6252806782722473, 0.6592260003089905, 0.698718786239624, 0.7232862114906311, 0.7390040755271912, 0.7467969655990601, 0.7652885913848877, 0.7759873270988464, 0.7729493975639343, 0.7843085527420044, 0.7873464822769165, 0.7947431206703186, 0.7976489067077637, 0.8076872229576111, 0.8117818236351013, 0.8136309385299683, 0.8247259259223938, 0.8227446675300598, 0.8274996876716614, 0.8329150676727295, 0.829216718673706, 0.8379341959953308, 0.8426892161369324, 0.8479725122451782, 0.8446704745292664, 0.8507462739944458, 0.8500858545303345, 0.8543124794960022, 0.8582749962806702, 0.8609166741371155, 0.86118084192276, 0.8593316674232483, 0.8659358024597168, 0.8634262084960938, 0.872407853603363, 0.8688416481018066, 0.8714832663536072, 0.8737286925315857, 0.8730682730674744, 0.8749174475669861, 0.8821820020675659, 0.8799365758895874, 0.8815215826034546, 0.8837670087814331, 0.8878615498542786, 0.8838990926742554, 0.8853520154953003, 0.891559898853302, 0.8865407705307007, 0.8905032277107239, 0.8963148593902588, 0.896446943283081, 0.8969752788543701, 0.8951261639595032, 0.9002773761749268, 0.89988112449646, 0.8986923694610596, 0.901862382888794, 0.9029190540313721, 0.9019944667816162, 0.9062210917472839, 0.9074098467826843, 0.9082023501396179, 0.9084665179252625], "val_loss": [2.033933639526367, 1.5043776035308838, 1.0385841131210327, 0.8348872661590576, 0.748683512210846, 0.6962888240814209, 0.6452283263206482, 0.6097168326377869, 0.5908951163291931, 0.5654791593551636, 0.5485540628433228, 0.5308454632759094, 0.5217159986495972, 0.5026088356971741, 0.4924180805683136, 0.4941955506801605, 0.47913697361946106, 0.46788424253463745, 0.4600522518157959, 0.45553308725357056, 0.4523840844631195, 0.45103052258491516, 0.4417187571525574, 0.43125733733177185, 0.42781078815460205, 0.4263964891433716, 0.4191243350505829, 0.41350650787353516, 0.4158003032207489, 0.4085052013397217, 0.4044939875602722, 0.3971168100833893, 0.39628612995147705, 0.39976948499679565, 0.3952869176864624, 0.3888694643974304, 0.3912425935268402, 0.3875867426395416, 0.38649430871009827, 0.3814649283885956, 0.38066309690475464, 0.37854698300361633, 0.3797750174999237, 0.3766616880893707, 0.37332388758659363, 0.3710525631904602, 0.36949723958969116, 0.37775883078575134, 0.36838436126708984, 0.3662301003932953, 0.36757656931877136, 0.36328125, 0.36480098962783813, 0.3676953911781311, 0.3622332215309143, 0.36552929878234863, 0.35753536224365234, 0.368220716714859, 0.3614383041858673, 0.3567075729370117, 0.3559085726737976, 0.35341039299964905, 0.35565683245658875, 0.3598191440105438, 0.3541577160358429, 0.35910654067993164, 0.356111079454422], "val_accuracy": [0.5270000100135803, 0.6653333306312561, 0.6803333163261414, 0.7123333215713501, 0.734666645526886, 0.7536666393280029, 0.7680000066757202, 0.7770000100135803, 0.7826666831970215, 0.793666660785675, 0.7990000247955322, 0.8090000152587891, 0.8040000200271606, 0.8149999976158142, 0.8186666369438171, 0.8149999976158142, 0.8223333358764648, 0.8259999752044678, 0.8303333520889282, 0.8316666483879089, 0.8326666951179504, 0.8306666612625122, 0.8346666693687439, 0.8429999947547913, 0.8423333168029785, 0.8420000076293945, 0.8479999899864197, 0.8500000238418579, 0.8456666469573975, 0.8443333506584167, 0.8479999899864197, 0.8539999723434448, 0.8560000061988831, 0.8486666679382324, 0.8513333201408386, 0.8603333234786987, 0.8546666502952576, 0.8569999933242798, 0.8569999933242798, 0.862333357334137, 0.8629999756813049, 0.8600000143051147, 0.8629999756813049, 0.862666666507721, 0.8650000095367432, 0.8643333315849304, 0.8629999756813049, 0.8636666536331177, 0.8679999709129333, 0.8650000095367432, 0.8683333396911621, 0.8690000176429749, 0.8683333396911621, 0.8666666746139526, 0.8703333139419556, 0.8686666488647461, 0.8736666440963745, 0.8679999709129333, 0.8706666827201843, 0.8709999918937683, 0.8730000257492065, 0.8743333220481873, 0.871999979019165, 0.8733333349227905, 0.8740000128746033, 0.8693333268165588, 0.8740000128746033]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8608571290969849, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223451852798462, 1.8742296695709229, 1.3925371170043945, 1.103736400604248, 0.9362999200820923, 0.8361519575119019, 0.7701088786125183, 0.7286723852157593, 0.6892006993293762, 0.6613590717315674, 0.6388190388679504, 0.6104711294174194, 0.5894603729248047, 0.5813034176826477, 0.5607122778892517, 0.5404937863349915, 0.5287150740623474, 0.5173150300979614, 0.5103631615638733, 0.5023899674415588, 0.48231422901153564, 0.4711376130580902, 0.46476003527641296, 0.45264843106269836, 0.44735461473464966, 0.44356706738471985, 0.43890100717544556, 0.4237944483757019, 0.424181193113327, 0.41674181818962097, 0.4018024504184723, 0.3993203341960907, 0.39958834648132324, 0.38831064105033875, 0.38949084281921387, 0.3810581862926483, 0.3670395612716675, 0.3633086681365967, 0.36017143726348877, 0.35538139939308167, 0.34342679381370544, 0.34163007140159607, 0.3431187570095062, 0.3321474492549896, 0.3342960476875305, 0.3258400857448578, 0.32424482703208923, 0.3140069842338562, 0.313490629196167, 0.3117479383945465, 0.3024396002292633, 0.3056197762489319, 0.2974805235862732, 0.29456034302711487, 0.29017341136932373, 0.28303250670433044, 0.2845427989959717, 0.2791329622268677, 0.2691803276538849, 0.26699650287628174, 0.26865899562835693, 0.2652705907821655, 0.2559279203414917, 0.2565755844116211, 0.2524850070476532], "accuracy": [0.2740721106529236, 0.4963677227497101, 0.5695416927337646, 0.6186765432357788, 0.6610751748085022, 0.7010962963104248, 0.7209087014198303, 0.735041618347168, 0.750231146812439, 0.7592127919197083, 0.7683265209197998, 0.7765156626701355, 0.7857614755630493, 0.7903843522071838, 0.7993659973144531, 0.8034605979919434, 0.807158887386322, 0.8144234418869019, 0.8183859586715698, 0.8227446675300598, 0.8261788487434387, 0.8304054737091064, 0.8345000743865967, 0.8378021121025085, 0.8388587832450867, 0.8449346423149109, 0.8405758738517761, 0.8490291833877563, 0.8504821062088013, 0.8531237840652466, 0.8580108284950256, 0.857218325138092, 0.8623695969581604, 0.8610487580299377, 0.8622375130653381, 0.8648791313171387, 0.8705587387084961, 0.8721436858177185, 0.8717474341392517, 0.873860776424408, 0.8770307898521423, 0.8811253309249878, 0.8791441321372986, 0.8831065893173218, 0.8824461698532104, 0.8825782537460327, 0.885219931602478, 0.8844274282455444, 0.8874653577804565, 0.891559898853302, 0.8934090733528137, 0.8885219693183899, 0.8911636471748352, 0.8961827754974365, 0.8956544995307922, 0.9000132083892822, 0.9015982151031494, 0.9019944667816162, 0.9027869701385498, 0.9062210917472839, 0.9062210917472839, 0.9054285883903503, 0.9109761118888855, 0.9078060984611511, 0.906749427318573], "val_loss": [2.040005922317505, 1.5117744207382202, 1.0306764841079712, 0.816530168056488, 0.7257605791091919, 0.6772158145904541, 0.6297474503517151, 0.59951251745224, 0.5737228989601135, 0.5524500608444214, 0.5337170362472534, 0.5207152366638184, 0.5038977861404419, 0.4941257834434509, 0.48101529479026794, 0.47574007511138916, 0.46957382559776306, 0.46058934926986694, 0.4490441381931305, 0.44144025444984436, 0.4365611672401428, 0.4322876036167145, 0.4249875545501709, 0.4221276044845581, 0.41288045048713684, 0.4127451181411743, 0.4051472246646881, 0.4009051024913788, 0.3951805830001831, 0.3949815332889557, 0.3879091739654541, 0.392208993434906, 0.38398411870002747, 0.3820478618144989, 0.3827776610851288, 0.3757467567920685, 0.3751295208930969, 0.3700625002384186, 0.3711729049682617, 0.3669012486934662, 0.36598339676856995, 0.36557063460350037, 0.3615122139453888, 0.36058947443962097, 0.35364407300949097, 0.3536452353000641, 0.35141080617904663, 0.35183894634246826, 0.3467666804790497, 0.35001733899116516, 0.3504878878593445, 0.34780681133270264, 0.35437026619911194, 0.3435935974121094, 0.34825804829597473, 0.34285640716552734, 0.3368838429450989, 0.3400809168815613, 0.33618462085723877, 0.33469516038894653, 0.33455339074134827, 0.33566296100616455, 0.33417290449142456, 0.33751729130744934, 0.3294203579425812], "val_accuracy": [0.5543333292007446, 0.6616666913032532, 0.6933333277702332, 0.7260000109672546, 0.7443333268165588, 0.7513333559036255, 0.7726666927337646, 0.781000018119812, 0.7850000262260437, 0.8073333501815796, 0.8046666383743286, 0.8043333292007446, 0.812333345413208, 0.8146666884422302, 0.8240000009536743, 0.8263333439826965, 0.8270000219345093, 0.828000009059906, 0.8356666564941406, 0.8396666646003723, 0.8393333554267883, 0.8383333086967468, 0.8446666598320007, 0.8460000157356262, 0.8483333587646484, 0.847000002861023, 0.8493333458900452, 0.8506666421890259, 0.8513333201408386, 0.8519999980926514, 0.8550000190734863, 0.8526666760444641, 0.8583333492279053, 0.856333315372467, 0.859666645526886, 0.859333336353302, 0.8610000014305115, 0.8579999804496765, 0.8586666584014893, 0.8606666922569275, 0.8636666536331177, 0.8656666874885559, 0.8656666874885559, 0.8646666407585144, 0.8726666569709778, 0.8666666746139526, 0.8690000176429749, 0.8679999709129333, 0.8740000128746033, 0.871666669845581, 0.8733333349227905, 0.8706666827201843, 0.8693333268165588, 0.8769999742507935, 0.8740000128746033, 0.8723333477973938, 0.878000020980835, 0.878333330154419, 0.8790000081062317, 0.8799999952316284, 0.878000020980835, 0.8793333172798157, 0.878333330154419, 0.875333309173584, 0.8796666860580444]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 9, 8, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 2, 3, 8, 1, 3, 1, 4, 2, 2], [4, 0, 0, 3, 4, 0, 4, 1, 2, 0], [16, 99, 47, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 5, 4, 1, 2, 2, 1, 1, 1, 16, 8, 8, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(grad, tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.subtract(sigma, grad)), tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.subtract(grad, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [3, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 0, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 1, 10, 6, 4, 1, 2, 1, 1, 1, 13, 7, 6, 5], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.negative(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [50.86320877075195, 8889.63671875, 180383.390625, 1385544.625, 6376049.5, 21439590.0], "accuracy": [0.1010434553027153, 0.09932637959718704, 0.1010434553027153, 0.10236428678035736, 0.1006472036242485, 0.09893012791872025], "val_loss": [522.4718627929688, 36218.0078125, 435937.84375, 2522440.75, 9797190.0, 29611174.0], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 1], [6, 2, 3, 0, 3], [0, 0, 0, 2], [39, 39, 13], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 0], [16, 16, 46], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 5, 2, 8, 5, 5], [0, 0, 0, 0, 0, 0, 3, 1, 2, 0], [16, 84, 96, 99, 45, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.square(tf.math.add(tf.math.sqrt(tf.math.square(tf.math.square(sigma))), alpha)), beta))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09536388516426086, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}, "mapping_values": [1, 7, 3, 4, 3, 10, 6, 4, 3, 2, 1, 1, 1, 22, 13, 9, 6], "tree_depth": 21}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0], [0, 2, 3, 0, 3, 0, 9], [0, 1, 0, 2], [39, 39, 90], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 3, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [6, 5, 3, 9, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.09114285558462143, "mapping_values": [1, 10, 7, 3, 3, 10, 6, 4, 1, 2, 1, 1, 1, 6, 4, 2, 3], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.negative(alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.square(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.308911085128784, 2.310058116912842, 2.3083579540252686, 2.309692621231079, 2.310272693634033, 2.30892276763916], "accuracy": [0.09338264167308807, 0.09298639744520187, 0.09615638852119446, 0.09985470771789551, 0.09536388516426086, 0.0882314071059227], "val_loss": [2.308739185333252, 2.308643341064453, 2.308542490005493, 2.3084397315979004, 2.3083348274230957, 2.3082282543182373], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.09433333575725555, 0.09099999815225601, 0.09066666662693024, 0.09033333510160446]}}]