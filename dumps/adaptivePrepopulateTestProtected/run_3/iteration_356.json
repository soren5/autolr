[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8808571696281433, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223215103149414, 1.8640538454055786, 1.390925645828247, 1.0857504606246948, 0.9175904989242554, 0.8278062343597412, 0.75929194688797, 0.7150763869285583, 0.6742342710494995, 0.6527069211006165, 0.6226239800453186, 0.6030511260032654, 0.5812473893165588, 0.5698184370994568, 0.5517233610153198, 0.5318202376365662, 0.5262278914451599, 0.5063096284866333, 0.4941454231739044, 0.4912639260292053, 0.47673994302749634, 0.46776485443115234, 0.45580968260765076, 0.45419755578041077, 0.4471202790737152, 0.4368197023868561, 0.4238806366920471, 0.41453513503074646, 0.41017231345176697, 0.4062040150165558, 0.40386685729026794, 0.3953916132450104, 0.39355871081352234, 0.3836102783679962, 0.37635838985443115, 0.3735085725784302, 0.363672137260437, 0.35395750403404236, 0.35972025990486145, 0.34721699357032776, 0.3442964553833008, 0.335767537355423, 0.3300938904285431, 0.32407090067863464, 0.32112976908683777, 0.3181473910808563, 0.31370431184768677, 0.3087446987628937, 0.3084625005722046, 0.30203962326049805, 0.293395072221756, 0.2889169156551361, 0.2914500832557678, 0.28307828307151794, 0.28207361698150635, 0.2786792516708374, 0.27818819880485535, 0.26387521624565125], "accuracy": [0.27222296595573425, 0.5027077198028564, 0.5674283504486084, 0.6277902722358704, 0.6709813475608826, 0.7058512568473816, 0.7269845604896545, 0.7415136694908142, 0.7586844563484192, 0.7617223858833313, 0.783119797706604, 0.7832518815994263, 0.7926297783851624, 0.8001585006713867, 0.807158887386322, 0.8103289008140564, 0.8133667707443237, 0.8190463781356812, 0.8247259259223938, 0.8271034359931946, 0.8298771381378174, 0.8341038227081299, 0.8366134166717529, 0.839519202709198, 0.8404437899589539, 0.848368763923645, 0.8515387773513794, 0.8564258217811584, 0.8529917001724243, 0.8585391640663147, 0.8515387773513794, 0.863558292388916, 0.8615770936012268, 0.8640866279602051, 0.8652753829956055, 0.8671245574951172, 0.8720116019248962, 0.8771628737449646, 0.8705587387084961, 0.876370370388031, 0.8787478804588318, 0.8784837126731873, 0.8828424215316772, 0.8842953443527222, 0.884691596031189, 0.8840311765670776, 0.8891823887825012, 0.8894465565681458, 0.8899748921394348, 0.8932769894599915, 0.8945978283882141, 0.8980319499969482, 0.896446943283081, 0.8988244533538818, 0.9019944667816162, 0.901862382888794, 0.8985602855682373, 0.904768168926239], "val_loss": [2.039530038833618, 1.5154659748077393, 1.039007544517517, 0.8366694450378418, 0.7400773167610168, 0.6859951019287109, 0.6454513669013977, 0.6114123463630676, 0.5899704694747925, 0.5724708437919617, 0.5533395409584045, 0.5345184803009033, 0.5225448608398438, 0.5092709064483643, 0.500229001045227, 0.49316829442977905, 0.480929970741272, 0.4729439616203308, 0.4688349962234497, 0.4563703238964081, 0.45455607771873474, 0.44636544585227966, 0.44144734740257263, 0.4332112669944763, 0.42851945757865906, 0.4277913272380829, 0.4196922183036804, 0.41600528359413147, 0.4114539325237274, 0.4113328456878662, 0.4059373438358307, 0.4033544063568115, 0.40210506319999695, 0.3963744640350342, 0.39264819025993347, 0.39112263917922974, 0.384288489818573, 0.383841872215271, 0.3804401755332947, 0.3786342442035675, 0.3777892291545868, 0.37486007809638977, 0.37355443835258484, 0.37450093030929565, 0.36811116337776184, 0.3697490096092224, 0.3684578537940979, 0.370509535074234, 0.36476588249206543, 0.36312252283096313, 0.361527681350708, 0.36036449670791626, 0.3581533133983612, 0.3633516728878021, 0.35499346256256104, 0.3547135293483734, 0.35882508754730225, 0.35363712906837463], "val_accuracy": [0.5473333597183228, 0.6496666669845581, 0.6846666932106018, 0.6959999799728394, 0.7279999852180481, 0.7450000047683716, 0.7580000162124634, 0.7713333368301392, 0.7763333320617676, 0.7816666960716248, 0.7963333129882812, 0.8109999895095825, 0.8116666674613953, 0.8113333582878113, 0.8116666674613953, 0.8186666369438171, 0.8259999752044678, 0.8236666917800903, 0.828000009059906, 0.8360000252723694, 0.8323333263397217, 0.8373333215713501, 0.8373333215713501, 0.8366666436195374, 0.843666672706604, 0.843999981880188, 0.846666693687439, 0.8483333587646484, 0.8493333458900452, 0.847000002861023, 0.8476666808128357, 0.8496666550636292, 0.8510000109672546, 0.8519999980926514, 0.8553333282470703, 0.8556666374206543, 0.8583333492279053, 0.859333336353302, 0.8560000061988831, 0.862333357334137, 0.8636666536331177, 0.859666645526886, 0.8636666536331177, 0.8643333315849304, 0.8653333187103271, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.8709999918937683, 0.8690000176429749, 0.8686666488647461, 0.8653333187103271, 0.8733333349227905, 0.8679999709129333, 0.8709999918937683, 0.8706666827201843, 0.8703333139419556, 0.8693333268165588]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8571428656578064, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222020387649536, 1.8692188262939453, 1.4046261310577393, 1.1056700944900513, 0.9421839714050293, 0.8459803462028503, 0.7826260924339294, 0.7338415384292603, 0.7103928327560425, 0.6755107641220093, 0.6459502577781677, 0.6299085021018982, 0.6054878234863281, 0.5908190011978149, 0.5747345089912415, 0.5565585494041443, 0.5513738989830017, 0.5413426756858826, 0.5228182673454285, 0.5108728408813477, 0.503829300403595, 0.49828776717185974, 0.4848165512084961, 0.4694628417491913, 0.4675127863883972, 0.4567079544067383, 0.4514448642730713, 0.4356696903705597, 0.4374138116836548, 0.43329882621765137, 0.4247068464756012, 0.411269873380661, 0.41585686802864075, 0.403051495552063, 0.3938787579536438, 0.40025776624679565, 0.3891400992870331, 0.3828589916229248, 0.37661606073379517, 0.367803156375885, 0.3642318844795227, 0.3651737868785858, 0.363751083612442, 0.34689274430274963, 0.35410723090171814, 0.3464902341365814, 0.33810073137283325, 0.3311019241809845, 0.3313905894756317, 0.3233039379119873, 0.3187377154827118, 0.3169505000114441, 0.3045262396335602, 0.2969987988471985, 0.302499383687973, 0.2953837811946869, 0.28949737548828125, 0.29077181220054626, 0.2792700231075287, 0.2818087935447693, 0.2786606550216675, 0.27168595790863037, 0.26711592078208923, 0.2641778290271759, 0.2616182863712311, 0.25420576333999634, 0.2556345760822296, 0.24942657351493835, 0.25550585985183716, 0.252628892660141], "accuracy": [0.26495838165283203, 0.48131024837493896, 0.5651829242706299, 0.6164311170578003, 0.6625280380249023, 0.6975300312042236, 0.7182670831680298, 0.7313432693481445, 0.7453441023826599, 0.7537974119186401, 0.7668735980987549, 0.7725531458854675, 0.7778365015983582, 0.7882710099220276, 0.7915731072425842, 0.8000264167785645, 0.805177628993988, 0.8061022162437439, 0.8132346868515015, 0.8222163319587708, 0.8220842480659485, 0.822348415851593, 0.8286884427070618, 0.8296129703521729, 0.832650899887085, 0.8364813327789307, 0.837141752243042, 0.8441421389579773, 0.846387505531311, 0.8453308939933777, 0.8473120927810669, 0.8510104417800903, 0.8515387773513794, 0.8594637513160706, 0.8599920868873596, 0.8590674996376038, 0.8622375130653381, 0.8636903762817383, 0.8652753829956055, 0.8717474341392517, 0.872407853603363, 0.8710870146751404, 0.8683133125305176, 0.8742570281028748, 0.8708229064941406, 0.8786157965660095, 0.8766345381736755, 0.8823140859603882, 0.8829745054244995, 0.8860124349594116, 0.8829745054244995, 0.8864086866378784, 0.8908994793891907, 0.8897107243537903, 0.8902390599250793, 0.89552241563797, 0.896446943283081, 0.8908994793891907, 0.9000132083892822, 0.8967111110687256, 0.8981640338897705, 0.900409460067749, 0.9017302989959717, 0.9055606722831726, 0.9062210917472839, 0.9076740145683289, 0.9064852595329285, 0.9103156924247742, 0.9055606722831726, 0.910711944103241], "val_loss": [2.0371994972229004, 1.5103548765182495, 1.0368906259536743, 0.8394915461540222, 0.7567775249481201, 0.6993902921676636, 0.646542489528656, 0.6197999119758606, 0.5891864895820618, 0.5664798021316528, 0.5443469882011414, 0.5319068431854248, 0.5138959288597107, 0.5016587972640991, 0.4945478141307831, 0.4774382710456848, 0.46967455744743347, 0.45794478058815, 0.44818535447120667, 0.4476032257080078, 0.4337092339992523, 0.4286511540412903, 0.4272139072418213, 0.42298999428749084, 0.41325047612190247, 0.41119176149368286, 0.40190884470939636, 0.40264812111854553, 0.39617273211479187, 0.3930327296257019, 0.3863997757434845, 0.3871796429157257, 0.3828941285610199, 0.3799186944961548, 0.37719792127609253, 0.3694496154785156, 0.37158459424972534, 0.3629665672779083, 0.36429914832115173, 0.36038652062416077, 0.3659874200820923, 0.35878270864486694, 0.3592509627342224, 0.35493791103363037, 0.3572787344455719, 0.35130229592323303, 0.3511869013309479, 0.35149046778678894, 0.3431275188922882, 0.34242138266563416, 0.34154173731803894, 0.3405156135559082, 0.34225478768348694, 0.3393506705760956, 0.3360515236854553, 0.3346861004829407, 0.33376964926719666, 0.3318014442920685, 0.33629700541496277, 0.330317884683609, 0.33484455943107605, 0.3317968249320984, 0.3311249613761902, 0.32886001467704773, 0.3331943452358246, 0.3303215205669403, 0.3288784921169281, 0.33024799823760986, 0.3259948790073395, 0.3290218412876129], "val_accuracy": [0.5616666674613953, 0.6633333563804626, 0.6819999814033508, 0.7066666483879089, 0.7183333039283752, 0.737333357334137, 0.7580000162124634, 0.7663333415985107, 0.7773333191871643, 0.7906666398048401, 0.7963333129882812, 0.8026666641235352, 0.8116666674613953, 0.8143333196640015, 0.8196666836738586, 0.8273333311080933, 0.8286666870117188, 0.8276666402816772, 0.8366666436195374, 0.8373333215713501, 0.8416666388511658, 0.8403333425521851, 0.8420000076293945, 0.8456666469573975, 0.8489999771118164, 0.8493333458900452, 0.8519999980926514, 0.846666693687439, 0.856333315372467, 0.8553333282470703, 0.8600000143051147, 0.8586666584014893, 0.8579999804496765, 0.8600000143051147, 0.8579999804496765, 0.8640000224113464, 0.8633333444595337, 0.8646666407585144, 0.8653333187103271, 0.8663333058357239, 0.8693333268165588, 0.8733333349227905, 0.8713333606719971, 0.8686666488647461, 0.8713333606719971, 0.8736666440963745, 0.871999979019165, 0.8759999871253967, 0.871666669845581, 0.8723333477973938, 0.8786666393280029, 0.878000020980835, 0.8793333172798157, 0.8796666860580444, 0.875333309173584, 0.8759999871253967, 0.8726666569709778, 0.8820000290870667, 0.8823333382606506, 0.8766666650772095, 0.8803333044052124, 0.875333309173584, 0.8816666603088379, 0.8840000033378601, 0.8856666684150696, 0.8853333592414856, 0.8820000290870667, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [2, 2, 3, 9, 3], [0, 2, 0, 0], [39, 39, 18, 76], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 1], [2, 2, 0, 3], [91, 33], [0, 1], [0], [0], [59], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 9, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 4, 9, 5, 4, 1, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(beta), beta), tf.math.multiply(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3037283420562744, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [2, 2, 3, 0, 3], [0, 1, 0, 2], [39, 49], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0], [0, 0, 3, 0, 8, 5], [0, 2, 0, 3], [16, 73], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 6, 7, 8, 7], [0, 0, 0, 3, 0, 0, 3, 1, 4, 4, 4, 7, 1], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 2, 8, 6, 2, 1, 2, 1, 1, 1, 28, 15, 13, 5], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.square(beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), sigma)), tf.math.sqrt(tf.math.divide_no_nan(alpha, grad)))), grad), tf.math.add(tf.math.sqrt(tf.math.add(grad, grad)), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [4, 2, 3, 0, 3], [0, 1, 0, 2], [39, 21], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 8, 5], [0, 2, 0, 3], [16, 16], [0, 1, 1], [2], [2, 4], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 55]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303802728652954, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.0944393053650856, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}, "mapping_values": [1, 8, 4, 4, 2, 10, 6, 4, 2, 3, 1, 2, 0, 1, 0, 1, 1], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 2, 9, 0, 3], [0, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 5, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [80, 40, 96, 99, 61, 1]], "fitness": -0.09314285963773727, "mapping_values": [1, 5, 4, 1, 2, 2, 1, 1, 1, 2, 1, 1, 1, 17, 9, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), sigma)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))), alpha)", "other_info": {"loss": [2.3106348514556885, 2.3096086978912354, 2.309272050857544, 2.3105437755584717, 2.3105010986328125, 2.310727119445801], "accuracy": [0.08691058307886124, 0.09351472556591034, 0.09642054885625839, 0.08809932321310043, 0.09192973375320435, 0.09021265059709549], "val_loss": [2.308499574661255, 2.308499574661255, 2.308499574661255, 2.308499574661255, 2.308499574661255, 2.308499574661255], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}]