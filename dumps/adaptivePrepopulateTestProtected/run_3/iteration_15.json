[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8757143020629883, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2224490642547607, 1.8675343990325928, 1.3939836025238037, 1.0927708148956299, 0.9404754638671875, 0.843849241733551, 0.7721466422080994, 0.7262260317802429, 0.6833308339118958, 0.6551293134689331, 0.6342591643333435, 0.6063357591629028, 0.5894114971160889, 0.5630450248718262, 0.5653029680252075, 0.5470729470252991, 0.5323475003242493, 0.5214682221412659, 0.5072728991508484, 0.4921358525753021, 0.4860784709453583, 0.4787559509277344, 0.4597107470035553, 0.4659897983074188, 0.4577959179878235, 0.4413664937019348, 0.4400829076766968, 0.42729705572128296, 0.42480337619781494, 0.4147000014781952, 0.4078267216682434, 0.40303489565849304, 0.39573609828948975, 0.3881356716156006, 0.3801533281803131, 0.3769753575325012, 0.37094807624816895, 0.36736586689949036, 0.37323513627052307, 0.36098161339759827, 0.34507474303245544, 0.34743914008140564, 0.34368041157722473, 0.33095982670783997, 0.32870543003082275, 0.32367658615112305, 0.32409581542015076, 0.3211810886859894, 0.3120701313018799, 0.31045442819595337, 0.3032769560813904, 0.30337560176849365, 0.29582297801971436, 0.29006415605545044, 0.2880508303642273, 0.28300508856773376, 0.2801433503627777, 0.2763940989971161, 0.2741786241531372, 0.26906004548072815, 0.2651638984680176, 0.2566206157207489, 0.26367518305778503, 0.2519575357437134], "accuracy": [0.27658170461654663, 0.49385812878608704, 0.5719191431999207, 0.6159027814865112, 0.6682076454162598, 0.6946242451667786, 0.7185312509536743, 0.733060359954834, 0.7493065595626831, 0.7617223858833313, 0.7683265209197998, 0.7799497842788696, 0.7829877138137817, 0.7980451583862305, 0.7992339134216309, 0.804649293422699, 0.8092722296714783, 0.8104609847068787, 0.8193105459213257, 0.8228767514228821, 0.8272355198860168, 0.8252542614936829, 0.8376700282096863, 0.8348963260650635, 0.8422929644584656, 0.8424250483512878, 0.8444063067436218, 0.8512746095657349, 0.8488970994949341, 0.8491612672805786, 0.8557654023170471, 0.8536521196365356, 0.8539162874221802, 0.8628978729248047, 0.8634262084960938, 0.8638224601745605, 0.8673887252807617, 0.870030403137207, 0.8684453964233398, 0.8704266548156738, 0.8747853636741638, 0.8750495314598083, 0.8746532797813416, 0.8787478804588318, 0.8829745054244995, 0.8828424215316772, 0.8833707571029663, 0.8842953443527222, 0.8841632604598999, 0.8882578015327454, 0.8903711438179016, 0.8894465565681458, 0.891559898853302, 0.8948619961738586, 0.8968431949615479, 0.8988244533538818, 0.8960506916046143, 0.9017302989959717, 0.9019944667816162, 0.89988112449646, 0.9017302989959717, 0.9071456789970398, 0.9039757251739502, 0.9082023501396179], "val_loss": [2.036843776702881, 1.5161906480789185, 1.0445137023925781, 0.8340126872062683, 0.7392319440841675, 0.6852213740348816, 0.6332608461380005, 0.5959271192550659, 0.5714350342750549, 0.549830973148346, 0.5222745537757874, 0.5133263468742371, 0.49633684754371643, 0.4777461290359497, 0.4722379446029663, 0.4595833718776703, 0.45239517092704773, 0.4480498731136322, 0.43859392404556274, 0.4262703061103821, 0.42883649468421936, 0.4152919054031372, 0.41032952070236206, 0.4077501893043518, 0.3949292004108429, 0.39100560545921326, 0.3824780285358429, 0.3815884590148926, 0.37856918573379517, 0.372124582529068, 0.37195006012916565, 0.3686104416847229, 0.3633952736854553, 0.3569556474685669, 0.35764214396476746, 0.35445699095726013, 0.35251298546791077, 0.3492286503314972, 0.3514643609523773, 0.34624624252319336, 0.34437841176986694, 0.3405534625053406, 0.3368695080280304, 0.3358098268508911, 0.33687594532966614, 0.3372238874435425, 0.34350210428237915, 0.32805559039115906, 0.33228394389152527, 0.32754582166671753, 0.33014562726020813, 0.3276408612728119, 0.3226785361766815, 0.325215607881546, 0.3204743564128876, 0.3180955946445465, 0.318777471780777, 0.3154444694519043, 0.31414422392845154, 0.32395991683006287, 0.3196926712989807, 0.319996178150177, 0.31522229313850403, 0.3184100091457367], "val_accuracy": [0.5546666383743286, 0.6629999876022339, 0.6823333501815796, 0.7110000252723694, 0.737333357334137, 0.7473333477973938, 0.762666642665863, 0.7816666960716248, 0.7850000262260437, 0.7983333468437195, 0.8059999942779541, 0.8096666932106018, 0.8116666674613953, 0.8259999752044678, 0.8330000042915344, 0.8309999704360962, 0.8303333520889282, 0.8336666822433472, 0.8360000252723694, 0.846666693687439, 0.8493333458900452, 0.8553333282470703, 0.847000002861023, 0.8463333249092102, 0.8606666922569275, 0.8629999756813049, 0.8613333106040955, 0.8633333444595337, 0.8636666536331177, 0.8666666746139526, 0.8663333058357239, 0.8659999966621399, 0.8700000047683716, 0.8736666440963745, 0.8736666440963745, 0.8740000128746033, 0.8730000257492065, 0.8766666650772095, 0.8776666522026062, 0.8740000128746033, 0.878333330154419, 0.8776666522026062, 0.8830000162124634, 0.8806666731834412, 0.8803333044052124, 0.8820000290870667, 0.8809999823570251, 0.8863333463668823, 0.8799999952316284, 0.8826666474342346, 0.8833333253860474, 0.8849999904632568, 0.8893333077430725, 0.8846666812896729, 0.8896666765213013, 0.8893333077430725, 0.8856666684150696, 0.890333354473114, 0.8923333287239075, 0.8896666765213013, 0.890666663646698, 0.887333333492279, 0.8916666507720947, 0.8880000114440918]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8688571453094482, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.225142002105713, 1.8707624673843384, 1.3977824449539185, 1.1010754108428955, 0.939975380897522, 0.8402335047721863, 0.7784968018531799, 0.715710461139679, 0.6923018097877502, 0.6625974774360657, 0.6329395771026611, 0.6092889904975891, 0.6035848259925842, 0.5769569277763367, 0.5540162920951843, 0.5474749207496643, 0.5350772142410278, 0.5261231064796448, 0.5142706036567688, 0.5054678320884705, 0.4830976128578186, 0.47935229539871216, 0.4751790463924408, 0.45686379075050354, 0.45359712839126587, 0.4493582844734192, 0.4401422142982483, 0.43363603949546814, 0.42689579725265503, 0.4114263355731964, 0.41809311509132385, 0.40318989753723145, 0.39281100034713745, 0.39231598377227783, 0.3857327997684479, 0.388989120721817, 0.37254178524017334, 0.3741302788257599, 0.3686791658401489, 0.35905253887176514, 0.34891146421432495, 0.3512173593044281, 0.35123708844184875, 0.3436475694179535, 0.3358663022518158, 0.33010971546173096, 0.3295082151889801], "accuracy": [0.27327960729599, 0.48514068126678467, 0.5647866725921631, 0.6192048788070679, 0.6668868064880371, 0.7016246318817139, 0.719852089881897, 0.7416457533836365, 0.7506273984909058, 0.7553823590278625, 0.7697794437408447, 0.7829877138137817, 0.7815347909927368, 0.7903843522071838, 0.8014793395996094, 0.804649293422699, 0.8086118102073669, 0.8148196935653687, 0.8162726163864136, 0.8202351331710815, 0.8280280232429504, 0.829216718673706, 0.8289526104927063, 0.8366134166717529, 0.8372738361358643, 0.8392550349235535, 0.8422929644584656, 0.8449346423149109, 0.8473120927810669, 0.8537842035293579, 0.852859616279602, 0.8553691506385803, 0.86118084192276, 0.8564258217811584, 0.86553955078125, 0.86118084192276, 0.8651432991027832, 0.859199583530426, 0.8698983192443848, 0.8713511824607849, 0.8732003569602966, 0.8749174475669861, 0.8774270415306091, 0.8791441321372986, 0.8803328275680542, 0.8813894987106323, 0.8829745054244995], "val_loss": [2.043610095977783, 1.5147175788879395, 1.036145567893982, 0.8299539685249329, 0.7418137788772583, 0.6837629675865173, 0.640093982219696, 0.6020021438598633, 0.5774881839752197, 0.5577765107154846, 0.5413402318954468, 0.5253040194511414, 0.510770857334137, 0.4998355209827423, 0.48774030804634094, 0.4779040813446045, 0.4673752784729004, 0.46431535482406616, 0.45257332921028137, 0.44717270135879517, 0.4356479346752167, 0.4332198202610016, 0.42860889434814453, 0.4224281311035156, 0.4151686131954193, 0.4175662100315094, 0.40821436047554016, 0.40383902192115784, 0.4017961323261261, 0.39615991711616516, 0.3991638720035553, 0.3909808397293091, 0.38750821352005005, 0.38445043563842773, 0.383017361164093, 0.3810082972049713, 0.37842631340026855, 0.3763219714164734, 0.37320801615715027, 0.37730327248573303, 0.3670269846916199, 0.3647213280200958, 0.36076781153678894, 0.36735498905181885, 0.35907313227653503, 0.36178088188171387, 0.35652628540992737], "val_accuracy": [0.5199999809265137, 0.6660000085830688, 0.6916666626930237, 0.7213333249092102, 0.750333309173584, 0.7570000290870667, 0.7683333158493042, 0.7756666541099548, 0.7866666913032532, 0.796999990940094, 0.8013333082199097, 0.8066666722297668, 0.8103333115577698, 0.8149999976158142, 0.8209999799728394, 0.8233333230018616, 0.82833331823349, 0.8389999866485596, 0.8363333344459534, 0.8413333296775818, 0.8510000109672546, 0.8399999737739563, 0.846666693687439, 0.8510000109672546, 0.8566666841506958, 0.8483333587646484, 0.8543333411216736, 0.8550000190734863, 0.8619999885559082, 0.859666645526886, 0.8553333282470703, 0.8610000014305115, 0.8603333234786987, 0.8633333444595337, 0.8633333444595337, 0.8643333315849304, 0.8673333525657654, 0.8686666488647461, 0.8669999837875366, 0.859333336353302, 0.8663333058357239, 0.8723333477973938, 0.8706666827201843, 0.8656666874885559, 0.871999979019165, 0.8706666827201843, 0.8713333606719971]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 5, 3, 0, 2, 5, 4, 4, 7], [0, 2, 3, 3, 2, 1], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 2, 1, 3, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 4], [16, 99, 96, 99, 61, 97]], "fitness": -0.10599999874830246, "mapping_values": [1, 1, 0, 1, 1, 15, 9, 6, 1, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.square(beta), tf.math.pow(grad, tf.math.pow(tf.math.add(grad, beta), alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [2.306232213973999, 2.302985906600952, 2.3028688430786133, 2.302837371826172, 2.302856922149658, 2.3027777671813965, 2.3028252124786377, 2.3028030395507812, 2.3028643131256104, 2.302802324295044, 2.302834987640381, 2.302838087081909, 2.3028342723846436, 2.3028032779693604, 2.3028035163879395, 2.302790403366089, 2.30277156829834, 2.3028385639190674, 2.3027684688568115, 2.302800416946411], "accuracy": [0.09232597798109055, 0.10355303436517715, 0.10011887550354004, 0.10276053100824356, 0.09893012791872025, 0.10077928751707077, 0.09932637959718704, 0.1022322028875351, 0.09813763201236725, 0.09734513610601425, 0.09826971590518951, 0.09998679161071777, 0.10381719470024109, 0.10130762308835983, 0.10170386731624603, 0.09813763201236725, 0.1002509593963623, 0.10289261490106583, 0.10249637067317963, 0.10011887550354004], "val_loss": [2.302795648574829, 2.3026890754699707, 2.3026626110076904, 2.3026509284973145, 2.3026444911956787, 2.302640676498413, 2.302637815475464, 2.30263614654541, 2.3026347160339355, 2.30263352394104, 2.3026325702667236, 2.3026320934295654, 2.3026316165924072, 2.3026304244995117, 2.3026301860809326, 2.3026297092437744, 2.3026297092437744, 2.302629232406616, 2.302629232406616, 2.302628993988037], "val_accuracy": [0.09666666388511658, 0.09799999743700027, 0.0976666659116745, 0.09700000286102295, 0.0976666659116745, 0.09866666793823242, 0.0989999994635582, 0.09833333641290665, 0.0989999994635582, 0.09866666793823242, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09933333098888397, 0.09933333098888397, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 0], [0, 1, 0, 2], [39, 37], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [42, 16], [0, 1], [0], [0], [54], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 9, 1], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 44, 1, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 1, 0, 1, 1, 2, 1, 1, 1, 22, 12, 10, 7], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), sigma))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.subtract(alpha, beta)), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 0, 0, 8, 7, 7], [0, 4, 4, 3, 0, 0, 2, 1, 2, 0, 5, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 28, 16, 12, 5], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(grad, sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.sqrt(tf.math.negative(alpha))))))), beta), tf.math.negative(tf.math.sqrt(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 9, 3], [0, 1, 0, 2], [39, 69], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 6, 3, 3, 5], [0, 2, 3, 0], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 4, 4, 5, 7, 0], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 0, 4, 3], [96, 99, 93, 99, 61, 1, 10]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 2, 4, 2, 2, 1, 2, 1, 1, 1, 29, 16, 13, 7], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))), sigma)), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(tf.math.add(sigma, tf.math.sqrt(tf.math.pow(alpha, beta))), tf.math.pow(tf.math.square(tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)))), grad)), sigma)))", "other_info": {"loss": [2.303942918777466, 2.3392323365630486e+24, 3.736322583834483e+24, 3.736322583834483e+24, 3.736322295604107e+24, 3.736322583834483e+24], "accuracy": [0.10130762308835983, 0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.302558422088623, 3.786698336056775e+24, 3.786698336056775e+24, 3.786698336056775e+24, 3.786698336056775e+24, 3.786698336056775e+24], "val_accuracy": [0.10000000149011612, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}]