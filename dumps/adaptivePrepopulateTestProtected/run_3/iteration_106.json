[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.878000020980835, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223759174346924, 1.8681567907333374, 1.3971633911132812, 1.1021500825881958, 0.9438490867614746, 0.8268281817436218, 0.7700234055519104, 0.7182450890541077, 0.6839274764060974, 0.655160665512085, 0.6316797733306885, 0.6046612858772278, 0.586663544178009, 0.5732303261756897, 0.5552444458007812, 0.5382086634635925, 0.5205084085464478, 0.5141545534133911, 0.49866363406181335, 0.4905571937561035, 0.48713892698287964, 0.4630949795246124, 0.46493759751319885, 0.4510720372200012, 0.4456666111946106, 0.4411585330963135, 0.43109801411628723, 0.4194287657737732, 0.41647717356681824, 0.4177640676498413, 0.39898860454559326, 0.3982110619544983, 0.3941095173358917, 0.3838343918323517, 0.38270825147628784, 0.38132011890411377, 0.3706604242324829, 0.3630581796169281, 0.35970449447631836, 0.3585955500602722, 0.3488880693912506, 0.3406795859336853, 0.3434852361679077, 0.34305644035339355, 0.32770219445228577, 0.3274216949939728, 0.3164256513118744, 0.31487780809402466, 0.31453031301498413, 0.3020377457141876, 0.3013147711753845, 0.29238083958625793, 0.30650538206100464, 0.2886098325252533, 0.28784143924713135, 0.28922179341316223, 0.27991431951522827, 0.27731093764305115, 0.27029022574424744, 0.2677718997001648, 0.2672445476055145], "accuracy": [0.27182671427726746, 0.4913485646247864, 0.5609562993049622, 0.6095628142356873, 0.6618676781654358, 0.6997754573822021, 0.7215691208839417, 0.7407211661338806, 0.7508915662765503, 0.7592127919197083, 0.7656848430633545, 0.7798177003860474, 0.7849689722061157, 0.789459764957428, 0.7991018295288086, 0.806630551815033, 0.81112140417099, 0.8088759779930115, 0.8210275769233704, 0.8181217908859253, 0.826310932636261, 0.8333113193511963, 0.8294808864593506, 0.8401796221733093, 0.8409721255302429, 0.8436138033866882, 0.8459912538528442, 0.8519350290298462, 0.8485008478164673, 0.8490291833877563, 0.856689989566803, 0.8573504090309143, 0.8615770936012268, 0.8644828796386719, 0.8605204224586487, 0.8614450097084045, 0.8671245574951172, 0.8726720213890076, 0.8732003569602966, 0.8689737319946289, 0.8762382864952087, 0.8798044919967651, 0.8717474341392517, 0.8825782537460327, 0.8840311765670776, 0.8845595121383667, 0.8885219693183899, 0.8865407705307007, 0.8887861371040344, 0.894069492816925, 0.8918240666389465, 0.8953903317451477, 0.8860124349594116, 0.8988244533538818, 0.8992207050323486, 0.8956544995307922, 0.9014661312103271, 0.89988112449646, 0.900409460067749, 0.9046360850334167, 0.9033153057098389], "val_loss": [2.0386126041412354, 1.5089809894561768, 1.0396978855133057, 0.8277255296707153, 0.7414798736572266, 0.6867381930351257, 0.6452507376670837, 0.6096968054771423, 0.5920496582984924, 0.5695558786392212, 0.550778865814209, 0.5315823554992676, 0.5166425704956055, 0.5040237307548523, 0.4927339255809784, 0.48035380244255066, 0.4752146899700165, 0.4640548527240753, 0.45926037430763245, 0.4498494863510132, 0.44989997148513794, 0.43486902117729187, 0.4302854835987091, 0.42699891328811646, 0.4222937822341919, 0.4179273545742035, 0.4156407117843628, 0.40615877509117126, 0.40567347407341003, 0.40483561158180237, 0.4008205533027649, 0.3957735300064087, 0.3910598158836365, 0.39842313528060913, 0.38378071784973145, 0.3824272155761719, 0.37983548641204834, 0.3832281529903412, 0.37993335723876953, 0.37290528416633606, 0.37028563022613525, 0.3697679340839386, 0.369826078414917, 0.3630952835083008, 0.3613884747028351, 0.3612003028392792, 0.3630628287792206, 0.35836127400398254, 0.35707563161849976, 0.3544061779975891, 0.35439038276672363, 0.35541149973869324, 0.34793493151664734, 0.355723112821579, 0.3566884696483612, 0.3480426073074341, 0.35176366567611694, 0.34468159079551697, 0.3469727337360382, 0.34757280349731445, 0.34379008412361145], "val_accuracy": [0.546999990940094, 0.6536666750907898, 0.6856666803359985, 0.7066666483879089, 0.7366666793823242, 0.7536666393280029, 0.7599999904632568, 0.7720000147819519, 0.7706666588783264, 0.7926666736602783, 0.7963333129882812, 0.7956666946411133, 0.8103333115577698, 0.809333324432373, 0.8220000267028809, 0.8226666450500488, 0.8243333101272583, 0.8330000042915344, 0.8349999785423279, 0.8370000123977661, 0.8333333134651184, 0.8429999947547913, 0.8463333249092102, 0.8446666598320007, 0.8476666808128357, 0.8479999899864197, 0.8450000286102295, 0.8506666421890259, 0.8496666550636292, 0.8529999852180481, 0.8556666374206543, 0.8556666374206543, 0.8586666584014893, 0.8526666760444641, 0.8576666712760925, 0.8610000014305115, 0.859000027179718, 0.8616666793823242, 0.8653333187103271, 0.8673333525657654, 0.8673333525657654, 0.8659999966621399, 0.8693333268165588, 0.8690000176429749, 0.8726666569709778, 0.8726666569709778, 0.8740000128746033, 0.8730000257492065, 0.871999979019165, 0.8759999871253967, 0.874666690826416, 0.871999979019165, 0.8806666731834412, 0.8776666522026062, 0.8706666827201843, 0.8820000290870667, 0.878333330154419, 0.878000020980835, 0.8806666731834412, 0.8793333172798157, 0.878333330154419]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8679999709129333, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224302291870117, 1.8695272207260132, 1.402859091758728, 1.102188229560852, 0.9330226182937622, 0.8293038606643677, 0.7684155702590942, 0.7256532907485962, 0.6840500235557556, 0.6602159142494202, 0.6271205544471741, 0.6158035397529602, 0.5886462330818176, 0.5834668874740601, 0.5709723234176636, 0.5489341020584106, 0.5327112078666687, 0.522107720375061, 0.5104583501815796, 0.5032280087471008, 0.4899996221065521, 0.4826156198978424, 0.4780530333518982, 0.46422305703163147, 0.45758724212646484, 0.4596329629421234, 0.44253283739089966, 0.4438076317310333, 0.42969146370887756, 0.42627865076065063, 0.41721582412719727, 0.4180833697319031, 0.4100959599018097, 0.4082798957824707, 0.3957083225250244, 0.39929869771003723, 0.39270728826522827, 0.3821435868740082, 0.37751951813697815, 0.3674132227897644, 0.36321955919265747, 0.35695064067840576, 0.35325729846954346, 0.3534638583660126, 0.35100823640823364, 0.3349699079990387, 0.3299701511859894, 0.3318497836589813, 0.32931989431381226, 0.32494843006134033, 0.31833770871162415, 0.31743356585502625, 0.3094068169593811, 0.30227452516555786, 0.3030346632003784, 0.290904700756073, 0.2916784882545471], "accuracy": [0.2751287817955017, 0.4912164807319641, 0.5596354603767395, 0.6122044920921326, 0.668339729309082, 0.7018887996673584, 0.7294940948486328, 0.7360982894897461, 0.752212405204773, 0.7619865536689758, 0.7707040309906006, 0.7779685854911804, 0.7845727205276489, 0.789459764957428, 0.7880068421363831, 0.8024039268493652, 0.8086118102073669, 0.8099326491355896, 0.8112534880638123, 0.8157442808151245, 0.8219521641731262, 0.8300092220306396, 0.8286884427070618, 0.8343679904937744, 0.8363492488861084, 0.8359529972076416, 0.8455950617790222, 0.8430854678153992, 0.8453308939933777, 0.8469158411026001, 0.8508783578872681, 0.8532558679580688, 0.8535200357437134, 0.8539162874221802, 0.8617091774940491, 0.8564258217811584, 0.8593316674232483, 0.8610487580299377, 0.8654074668884277, 0.8651432991027832, 0.8709549307823181, 0.8672566413879395, 0.8720116019248962, 0.8706908226013184, 0.8757099509239197, 0.8819178342819214, 0.8817857503890991, 0.8828424215316772, 0.8819178342819214, 0.8844274282455444, 0.8858803510665894, 0.8837670087814331, 0.8920882344245911, 0.8897107243537903, 0.8928807377815247, 0.8986923694610596, 0.8968431949615479], "val_loss": [2.0409061908721924, 1.5131266117095947, 1.0406858921051025, 0.831988513469696, 0.740421712398529, 0.6852291822433472, 0.6430181860923767, 0.6093771457672119, 0.5838091969490051, 0.5622069239616394, 0.5438796281814575, 0.5297918319702148, 0.5175310373306274, 0.5080903172492981, 0.49915286898612976, 0.48134276270866394, 0.47057515382766724, 0.46747612953186035, 0.45915457606315613, 0.44936344027519226, 0.4438490867614746, 0.437678724527359, 0.4386718273162842, 0.4414922595024109, 0.42153996229171753, 0.4186640679836273, 0.41380688548088074, 0.4056928753852844, 0.40681320428848267, 0.39949852228164673, 0.398587167263031, 0.39588984847068787, 0.3865443468093872, 0.3948444426059723, 0.3875352442264557, 0.38397371768951416, 0.3848922848701477, 0.3746190667152405, 0.37461015582084656, 0.36834684014320374, 0.36737850308418274, 0.3633101284503937, 0.35965991020202637, 0.36407437920570374, 0.3564823269844055, 0.3555026054382324, 0.3574517071247101, 0.35279688239097595, 0.35427770018577576, 0.34930509328842163, 0.3454717993736267, 0.3412964344024658, 0.34665095806121826, 0.3451283276081085, 0.3410283625125885, 0.3430642783641815, 0.337545245885849], "val_accuracy": [0.5183333158493042, 0.6639999747276306, 0.6809999942779541, 0.7086666822433472, 0.7393333315849304, 0.7426666617393494, 0.7583333253860474, 0.7716666460037231, 0.7803333401679993, 0.7866666913032532, 0.8006666898727417, 0.8069999814033508, 0.8033333420753479, 0.8076666593551636, 0.8246666789054871, 0.8259999752044678, 0.8306666612625122, 0.8366666436195374, 0.8349999785423279, 0.8396666646003723, 0.8460000157356262, 0.8433333039283752, 0.8423333168029785, 0.8396666646003723, 0.8500000238418579, 0.8483333587646484, 0.8536666631698608, 0.8573333621025085, 0.8523333072662354, 0.8569999933242798, 0.8569999933242798, 0.8573333621025085, 0.8643333315849304, 0.8610000014305115, 0.8606666922569275, 0.8616666793823242, 0.8603333234786987, 0.8646666407585144, 0.8673333525657654, 0.8696666955947876, 0.8706666827201843, 0.8706666827201843, 0.8706666827201843, 0.8733333349227905, 0.8736666440963745, 0.8769999742507935, 0.8686666488647461, 0.8709999918937683, 0.8679999709129333, 0.8766666650772095, 0.8776666522026062, 0.8799999952316284, 0.8726666569709778, 0.8790000081062317, 0.8796666860580444, 0.8759999871253967, 0.8766666650772095]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 2, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 4, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 4, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [96, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 9, 5, 4, 2, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha))))", "other_info": {"loss": [2.30369234085083, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 2], [2, 1, 0, 2], [0, 61], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1], [0, 2, 8, 0, 3, 5], [0, 2, 0, 3], [16, 18], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [2, 5, 3, 6, 8, 1, 4, 1, 4, 0, 8], [0, 4, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.09885714203119278, "mapping_values": [1, 9, 5, 4, 1, 6, 4, 2, 1, 2, 1, 1, 1, 4, 2, 2, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)", "other_info": {"loss": [9.914669036865234, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.190859854221344, 0.09642054885625839, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [975134.375, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [4, 2, 3, 0, 5, 5], [0, 2, 0, 3], [76, 16], [0, 0, 1, 1], [0, 2], [0, 6], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 28, 99, 61, 1]], "fitness": -0.09600000083446503, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 4, 2, 2, 1, 12, 6, 6, 5], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [4298411008.0, 4903356416.0, 4883169792.0, 4850042880.0, 4911009792.0, 5011240448.0], "accuracy": [0.09113723784685135, 0.09021265059709549, 0.09747721254825592, 0.09179764986038208, 0.09047681838274002, 0.09047681838274002], "val_loss": [4393653248.0, 4393653248.0, 4393652736.0, 4393652736.0, 4393652736.0, 4393652736.0], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [5, 2, 3, 0, 3], [0, 1, 0, 2], [25, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5, 9], [0, 2, 0, 3], [16, 16, 11], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1], [0, 4, 7, 7, 9, 7, 3, 9, 6, 0], [0, 1, 7, 6, 7], [99, 92, 57], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 5, 8, 8, 2, 1, 4, 2, 8], [0, 1, 0, 3, 0, 4, 0, 1, 2, 0], [16, 47, 96, 99, 61, 1]], "fitness": -0.09485714137554169, "mapping_values": [1, 9, 5, 4, 2, 10, 7, 3, 3, 15, 10, 5, 3, 5, 2, 3, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, grad)))), tf.math.negative(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.308799982070923, 2.310819625854492, 2.3089118003845215, 2.3101847171783447, 2.309873104095459, 2.3103232383728027], "accuracy": [0.09417514503002167, 0.08928807079792023, 0.09668471664190292, 0.0882314071059227, 0.09391097724437714, 0.09325055778026581], "val_loss": [2.307919502258301, 2.307920455932617, 2.307921886444092, 2.3079235553741455, 2.3079261779785156, 2.3079288005828857], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}]