[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8862857222557068, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222418785095215, 1.8632627725601196, 1.3950724601745605, 1.0979150533676147, 0.9474178552627563, 0.8543937802314758, 0.7783248424530029, 0.7376496195793152, 0.7006842494010925, 0.6746688485145569, 0.647553563117981, 0.6295329928398132, 0.6112891435623169, 0.58865886926651, 0.5667527914047241, 0.5575993657112122, 0.5467248558998108, 0.5289703011512756, 0.5205997824668884, 0.5110849142074585, 0.5064045786857605, 0.4867391884326935, 0.4731372892856598, 0.47443822026252747, 0.46410614252090454, 0.4545186161994934, 0.445819616317749, 0.4367676079273224, 0.4321127235889435, 0.4275900721549988, 0.4177286922931671, 0.40700381994247437, 0.40491974353790283, 0.3923063576221466, 0.38597339391708374, 0.37638187408447266, 0.3749813437461853, 0.3708414137363434, 0.369646281003952, 0.3635149896144867, 0.3594855070114136, 0.3503628671169281, 0.3338625133037567, 0.3396199643611908, 0.33679017424583435, 0.3303111493587494, 0.3275522291660309, 0.3153315782546997, 0.3093845844268799, 0.31660354137420654, 0.313541054725647, 0.3128948211669922, 0.2977619469165802, 0.30230653285980225, 0.298944890499115, 0.28947505354881287, 0.2822195291519165, 0.2778712213039398, 0.2668195366859436, 0.26853811740875244, 0.26283398270606995, 0.2662760019302368, 0.2576100528240204, 0.25102800130844116, 0.2539205849170685, 0.25087955594062805, 0.24508193135261536], "accuracy": [0.280940443277359, 0.48685774207115173, 0.5665037631988525, 0.616299033164978, 0.6625280380249023, 0.6930392384529114, 0.7169462442398071, 0.7320036888122559, 0.7375511527061462, 0.7491744756698608, 0.7672698497772217, 0.7670056819915771, 0.7745344042778015, 0.7876105904579163, 0.7906485199928284, 0.7994980812072754, 0.802800178527832, 0.8068947196006775, 0.8117818236351013, 0.8153480291366577, 0.8181217908859253, 0.829216718673706, 0.8300092220306396, 0.8238013386726379, 0.8325188159942627, 0.8385946154594421, 0.8372738361358643, 0.842028796672821, 0.8451988101005554, 0.8481045961380005, 0.8515387773513794, 0.8549728989601135, 0.8516708612442017, 0.8603883385658264, 0.8598600029945374, 0.8667283058166504, 0.8636903762817383, 0.8636903762817383, 0.8677849769592285, 0.8704266548156738, 0.8758420348167419, 0.8739928603172302, 0.8790120482444763, 0.8768987059593201, 0.8751816153526306, 0.8794082403182983, 0.8813894987106323, 0.8860124349594116, 0.8874653577804565, 0.8856161832809448, 0.8838990926742554, 0.8877294659614563, 0.8918240666389465, 0.8918240666389465, 0.8922203183174133, 0.8953903317451477, 0.89552241563797, 0.9002773761749268, 0.9049002528190613, 0.9034473896026611, 0.9035794734954834, 0.9038436412811279, 0.9085986018180847, 0.9095231890678406, 0.9095231890678406, 0.909259021282196, 0.910711944103241], "val_loss": [2.0414316654205322, 1.5168657302856445, 1.0494927167892456, 0.8396123051643372, 0.7532041668891907, 0.6975494027137756, 0.6532282829284668, 0.6188269853591919, 0.5909113883972168, 0.5747429728507996, 0.5562715530395508, 0.5392115712165833, 0.5226473808288574, 0.5080817937850952, 0.49551260471343994, 0.4949219524860382, 0.48097461462020874, 0.46894019842147827, 0.4645398259162903, 0.4554585814476013, 0.44845467805862427, 0.44272810220718384, 0.4365209937095642, 0.4303407371044159, 0.42757970094680786, 0.42137086391448975, 0.4158954322338104, 0.4094981253147125, 0.40614867210388184, 0.40746310353279114, 0.39686036109924316, 0.39440515637397766, 0.39069101214408875, 0.3898474872112274, 0.3889416456222534, 0.3833497166633606, 0.387736976146698, 0.3792175352573395, 0.3778442442417145, 0.37528878450393677, 0.3729557991027832, 0.37016138434410095, 0.36690768599510193, 0.36455467343330383, 0.36386409401893616, 0.3628668487071991, 0.365796834230423, 0.36076274514198303, 0.3599783480167389, 0.35867130756378174, 0.35705167055130005, 0.35411083698272705, 0.3552299737930298, 0.3651564121246338, 0.36276260018348694, 0.34837988018989563, 0.34821584820747375, 0.3528410792350769, 0.3496720790863037, 0.3506317138671875, 0.34951722621917725, 0.3443804085254669, 0.345913290977478, 0.3461855351924896, 0.3431210517883301, 0.348863810300827, 0.3426092565059662], "val_accuracy": [0.5373333096504211, 0.6570000052452087, 0.6759999990463257, 0.7110000252723694, 0.7286666631698608, 0.7419999837875366, 0.7590000033378601, 0.7616666555404663, 0.7836666703224182, 0.7903333306312561, 0.7886666655540466, 0.8006666898727417, 0.809333324432373, 0.8183333277702332, 0.8146666884422302, 0.8140000104904175, 0.8233333230018616, 0.8289999961853027, 0.8326666951179504, 0.8363333344459534, 0.8389999866485596, 0.8366666436195374, 0.8363333344459534, 0.8489999771118164, 0.847000002861023, 0.8519999980926514, 0.8533333539962769, 0.8560000061988831, 0.8573333621025085, 0.8539999723434448, 0.8619999885559082, 0.862666666507721, 0.8656666874885559, 0.8629999756813049, 0.8646666407585144, 0.8636666536331177, 0.8603333234786987, 0.8659999966621399, 0.8673333525657654, 0.8673333525657654, 0.8713333606719971, 0.8703333139419556, 0.8713333606719971, 0.871666669845581, 0.8736666440963745, 0.8730000257492065, 0.871999979019165, 0.874666690826416, 0.875333309173584, 0.874666690826416, 0.875, 0.8786666393280029, 0.8776666522026062, 0.8743333220481873, 0.8723333477973938, 0.8833333253860474, 0.8826666474342346, 0.8790000081062317, 0.8836666941642761, 0.878333330154419, 0.8820000290870667, 0.887666642665863, 0.8820000290870667, 0.8803333044052124, 0.8830000162124634, 0.8846666812896729, 0.8856666684150696]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8534285426139832, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2250120639801025, 1.8734995126724243, 1.400209903717041, 1.1009024381637573, 0.946814775466919, 0.8479568362236023, 0.788744330406189, 0.7437484264373779, 0.6941959857940674, 0.6655653715133667, 0.6511839628219604, 0.6191169619560242, 0.5969017148017883, 0.5744358897209167, 0.5600417852401733, 0.545814573764801, 0.5364139676094055, 0.5232617259025574, 0.5079157948493958, 0.5033462643623352, 0.4944610297679901, 0.48955756425857544, 0.4627329409122467, 0.4634999632835388, 0.45621347427368164, 0.4500456154346466, 0.43586617708206177, 0.42779621481895447, 0.42424121499061584, 0.4172576069831848, 0.4110054671764374, 0.41046634316444397, 0.4038332998752594, 0.395555704832077, 0.3911100924015045, 0.38099199533462524, 0.3744657039642334, 0.37506404519081116, 0.3625815808773041, 0.36763593554496765, 0.36123156547546387, 0.3509348928928375, 0.3518611490726471, 0.34962907433509827, 0.3332253098487854, 0.33745428919792175, 0.3314414322376251, 0.3251943588256836, 0.3135231137275696, 0.3187607526779175, 0.31328392028808594, 0.30648359656333923, 0.300339013338089, 0.29874879121780396, 0.2971927523612976, 0.29970648884773254, 0.29134899377822876, 0.2839098572731018, 0.28402504324913025, 0.2719626724720001, 0.27193304896354675, 0.26855650544166565, 0.26303166151046753, 0.26557040214538574, 0.2526872158050537, 0.2566782534122467, 0.2477206438779831, 0.24874942004680634, 0.24084608256816864, 0.2373114824295044, 0.22609059512615204, 0.2386833131313324, 0.2316887527704239, 0.22597238421440125, 0.2176031768321991, 0.21862168610095978, 0.2129022628068924, 0.21247237920761108, 0.20572741329669952, 0.20103669166564941, 0.19434742629528046], "accuracy": [0.26324132084846497, 0.4855369031429291, 0.5688812732696533, 0.6118082404136658, 0.6612072587013245, 0.6968696117401123, 0.7181349992752075, 0.7297582626342773, 0.7520803213119507, 0.7600052952766418, 0.7666094303131104, 0.783119797706604, 0.785629391670227, 0.7959318161010742, 0.7985734939575195, 0.8031964302062988, 0.8105930685997009, 0.8158763647079468, 0.8162726163864136, 0.8252542614936829, 0.8248580098152161, 0.8248580098152161, 0.8321225643157959, 0.8347642421722412, 0.8399154543876648, 0.8421608805656433, 0.8411042094230652, 0.8469158411026001, 0.8515387773513794, 0.8543124794960022, 0.8565579056739807, 0.8558974862098694, 0.8552370667457581, 0.8560295701026917, 0.8622375130653381, 0.8648791313171387, 0.8658037185668945, 0.8672566413879395, 0.8704266548156738, 0.8712190985679626, 0.8728041052818298, 0.8758420348167419, 0.8737286925315857, 0.8761062026023865, 0.8825782537460327, 0.8790120482444763, 0.8799365758895874, 0.8850878477096558, 0.8919561505317688, 0.8864086866378784, 0.8874653577804565, 0.8906353116035461, 0.8930128216743469, 0.8961827754974365, 0.8949940800666809, 0.8926165699958801, 0.8960506916046143, 0.9015982151031494, 0.9013340473175049, 0.9043719172477722, 0.9035794734954834, 0.9035794734954834, 0.9058248400688171, 0.9075419306755066, 0.9084665179252625, 0.906749427318573, 0.9095231890678406, 0.9084665179252625, 0.9128252267837524, 0.9142781496047974, 0.9208822846412659, 0.9126931428909302, 0.9192973375320435, 0.9199577569961548, 0.9241843819618225, 0.9222031235694885, 0.9229956269264221, 0.9218068718910217, 0.9290714859962463, 0.9272223114967346, 0.9313168525695801], "val_loss": [2.0445384979248047, 1.523868441581726, 1.0520421266555786, 0.8476754426956177, 0.756456196308136, 0.6968011260032654, 0.6577988266944885, 0.6328287124633789, 0.5965718030929565, 0.576435387134552, 0.5595235824584961, 0.5451287031173706, 0.529496967792511, 0.5175474882125854, 0.5050504803657532, 0.49605321884155273, 0.489296555519104, 0.48156216740608215, 0.47245457768440247, 0.4719330668449402, 0.4677911698818207, 0.4568566083908081, 0.45583269000053406, 0.4474449157714844, 0.4396568238735199, 0.4426574409008026, 0.4279809594154358, 0.430367648601532, 0.42239466309547424, 0.4185337722301483, 0.41689708828926086, 0.41376107931137085, 0.4129127562046051, 0.41314584016799927, 0.4026937186717987, 0.40133440494537354, 0.40036410093307495, 0.39503544569015503, 0.39662134647369385, 0.39048779010772705, 0.3864183723926544, 0.39203205704689026, 0.3837171494960785, 0.3848639726638794, 0.3849716782569885, 0.38075676560401917, 0.37821900844573975, 0.37335824966430664, 0.37525248527526855, 0.3684278428554535, 0.3680327832698822, 0.3665041923522949, 0.3654935359954834, 0.3636014759540558, 0.3660425543785095, 0.3634810745716095, 0.36339375376701355, 0.36334776878356934, 0.356175035238266, 0.35710597038269043, 0.3577559292316437, 0.35585716366767883, 0.35079121589660645, 0.34836331009864807, 0.35530123114585876, 0.35516470670700073, 0.3539281487464905, 0.35232219099998474, 0.344826340675354, 0.34519052505493164, 0.34881213307380676, 0.3439873158931732, 0.3480081260204315, 0.34762927889823914, 0.3460035026073456, 0.34395015239715576, 0.34490886330604553, 0.3423098027706146, 0.35027483105659485, 0.33952632546424866, 0.34548115730285645], "val_accuracy": [0.562333345413208, 0.6626666784286499, 0.6933333277702332, 0.7139999866485596, 0.7356666922569275, 0.7553333044052124, 0.7639999985694885, 0.765333354473114, 0.7873333096504211, 0.7870000004768372, 0.7990000247955322, 0.7996666431427002, 0.809333324432373, 0.8169999718666077, 0.8173333406448364, 0.8203333616256714, 0.8273333311080933, 0.8289999961853027, 0.8303333520889282, 0.8253333568572998, 0.8339999914169312, 0.8346666693687439, 0.8326666951179504, 0.8373333215713501, 0.843666672706604, 0.8413333296775818, 0.8450000286102295, 0.843666672706604, 0.8476666808128357, 0.8486666679382324, 0.847000002861023, 0.8516666889190674, 0.8496666550636292, 0.8510000109672546, 0.8536666631698608, 0.8533333539962769, 0.8569999933242798, 0.856333315372467, 0.8553333282470703, 0.8636666536331177, 0.856333315372467, 0.8569999933242798, 0.8613333106040955, 0.8606666922569275, 0.8673333525657654, 0.8673333525657654, 0.8603333234786987, 0.8646666407585144, 0.8656666874885559, 0.8693333268165588, 0.871999979019165, 0.8673333525657654, 0.8656666874885559, 0.8709999918937683, 0.8709999918937683, 0.8740000128746033, 0.871666669845581, 0.8666666746139526, 0.8756666779518127, 0.875, 0.8756666779518127, 0.875333309173584, 0.875333309173584, 0.8773333430290222, 0.8763333559036255, 0.8759999871253967, 0.8733333349227905, 0.8773333430290222, 0.8803333044052124, 0.8803333044052124, 0.8786666393280029, 0.8826666474342346, 0.8796666860580444, 0.8823333382606506, 0.8813333511352539, 0.8846666812896729, 0.8806666731834412, 0.8816666603088379, 0.8816666603088379, 0.8840000033378601, 0.8840000033378601]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 0, 3, 3], [0, 1, 0, 2, 0], [39, 39, 72], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 2, 3, 5, 1, 3, 3, 7, 6], [0, 2, 0, 3, 3, 3, 4, 3, 0, 4], [16, 16, 29], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 8, 3, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 4, 1, 3, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 21, 11, 10, 3, 2, 1, 1, 0, 17, 9, 8, 5], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.math.square(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.multiply(grad, grad), grad))), tf.math.add(grad, grad))), tf.math.divide_no_nan(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), grad)))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 6, 0, 3], [0, 1, 0, 2], [75, 66], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0], [0, 2, 9, 0, 3, 5], [0, 2, 0, 2], [16, 16], [0, 1], [0], [0], [23], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 0, 8, 1], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 42, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 5, 4, 1, 2, 2, 1, 1, 1, 22, 12, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.negative(tf.math.sqrt(tf.math.subtract(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 0], [2, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1], [0, 2, 3, 5, 3, 5, 9], [0, 3, 0, 3], [67, 16, 18], [0, 1], [0], [0], [99], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1], [9, 3, 3, 0, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 4, 3, 1, 2, 0], [16, 99, 96, 99, 17, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 5, 3, 1, 10, 7, 3, 3, 2, 1, 1, 1, 1, 1, 0, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.square(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3038768768310547, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [0, 2, 3, 2, 3, 9], [1, 1, 2, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [6, 2, 3, 0, 3, 5], [0, 2, 3, 3], [50, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 1], [16, 25, 15, 32, 95, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 1, 8, 4, 4, 1, 2, 1, 1, 1, 20, 10, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(alpha, alpha), tf.math.multiply(grad, grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), beta), grad), tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(beta, alpha))", "other_info": {"loss": [2.3096768856048584, 2.3025851249694824, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08677849918603897, 0.09998679161071777, 0.09840179979801178, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}]