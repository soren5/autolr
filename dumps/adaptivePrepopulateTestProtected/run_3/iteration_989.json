[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8862857222557068, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222418785095215, 1.8632627725601196, 1.3950724601745605, 1.0979150533676147, 0.9474178552627563, 0.8543937802314758, 0.7783248424530029, 0.7376496195793152, 0.7006842494010925, 0.6746688485145569, 0.647553563117981, 0.6295329928398132, 0.6112891435623169, 0.58865886926651, 0.5667527914047241, 0.5575993657112122, 0.5467248558998108, 0.5289703011512756, 0.5205997824668884, 0.5110849142074585, 0.5064045786857605, 0.4867391884326935, 0.4731372892856598, 0.47443822026252747, 0.46410614252090454, 0.4545186161994934, 0.445819616317749, 0.4367676079273224, 0.4321127235889435, 0.4275900721549988, 0.4177286922931671, 0.40700381994247437, 0.40491974353790283, 0.3923063576221466, 0.38597339391708374, 0.37638187408447266, 0.3749813437461853, 0.3708414137363434, 0.369646281003952, 0.3635149896144867, 0.3594855070114136, 0.3503628671169281, 0.3338625133037567, 0.3396199643611908, 0.33679017424583435, 0.3303111493587494, 0.3275522291660309, 0.3153315782546997, 0.3093845844268799, 0.31660354137420654, 0.313541054725647, 0.3128948211669922, 0.2977619469165802, 0.30230653285980225, 0.298944890499115, 0.28947505354881287, 0.2822195291519165, 0.2778712213039398, 0.2668195366859436, 0.26853811740875244, 0.26283398270606995, 0.2662760019302368, 0.2576100528240204, 0.25102800130844116, 0.2539205849170685, 0.25087955594062805, 0.24508193135261536], "accuracy": [0.280940443277359, 0.48685774207115173, 0.5665037631988525, 0.616299033164978, 0.6625280380249023, 0.6930392384529114, 0.7169462442398071, 0.7320036888122559, 0.7375511527061462, 0.7491744756698608, 0.7672698497772217, 0.7670056819915771, 0.7745344042778015, 0.7876105904579163, 0.7906485199928284, 0.7994980812072754, 0.802800178527832, 0.8068947196006775, 0.8117818236351013, 0.8153480291366577, 0.8181217908859253, 0.829216718673706, 0.8300092220306396, 0.8238013386726379, 0.8325188159942627, 0.8385946154594421, 0.8372738361358643, 0.842028796672821, 0.8451988101005554, 0.8481045961380005, 0.8515387773513794, 0.8549728989601135, 0.8516708612442017, 0.8603883385658264, 0.8598600029945374, 0.8667283058166504, 0.8636903762817383, 0.8636903762817383, 0.8677849769592285, 0.8704266548156738, 0.8758420348167419, 0.8739928603172302, 0.8790120482444763, 0.8768987059593201, 0.8751816153526306, 0.8794082403182983, 0.8813894987106323, 0.8860124349594116, 0.8874653577804565, 0.8856161832809448, 0.8838990926742554, 0.8877294659614563, 0.8918240666389465, 0.8918240666389465, 0.8922203183174133, 0.8953903317451477, 0.89552241563797, 0.9002773761749268, 0.9049002528190613, 0.9034473896026611, 0.9035794734954834, 0.9038436412811279, 0.9085986018180847, 0.9095231890678406, 0.9095231890678406, 0.909259021282196, 0.910711944103241], "val_loss": [2.0414316654205322, 1.5168657302856445, 1.0494927167892456, 0.8396123051643372, 0.7532041668891907, 0.6975494027137756, 0.6532282829284668, 0.6188269853591919, 0.5909113883972168, 0.5747429728507996, 0.5562715530395508, 0.5392115712165833, 0.5226473808288574, 0.5080817937850952, 0.49551260471343994, 0.4949219524860382, 0.48097461462020874, 0.46894019842147827, 0.4645398259162903, 0.4554585814476013, 0.44845467805862427, 0.44272810220718384, 0.4365209937095642, 0.4303407371044159, 0.42757970094680786, 0.42137086391448975, 0.4158954322338104, 0.4094981253147125, 0.40614867210388184, 0.40746310353279114, 0.39686036109924316, 0.39440515637397766, 0.39069101214408875, 0.3898474872112274, 0.3889416456222534, 0.3833497166633606, 0.387736976146698, 0.3792175352573395, 0.3778442442417145, 0.37528878450393677, 0.3729557991027832, 0.37016138434410095, 0.36690768599510193, 0.36455467343330383, 0.36386409401893616, 0.3628668487071991, 0.365796834230423, 0.36076274514198303, 0.3599783480167389, 0.35867130756378174, 0.35705167055130005, 0.35411083698272705, 0.3552299737930298, 0.3651564121246338, 0.36276260018348694, 0.34837988018989563, 0.34821584820747375, 0.3528410792350769, 0.3496720790863037, 0.3506317138671875, 0.34951722621917725, 0.3443804085254669, 0.345913290977478, 0.3461855351924896, 0.3431210517883301, 0.348863810300827, 0.3426092565059662], "val_accuracy": [0.5373333096504211, 0.6570000052452087, 0.6759999990463257, 0.7110000252723694, 0.7286666631698608, 0.7419999837875366, 0.7590000033378601, 0.7616666555404663, 0.7836666703224182, 0.7903333306312561, 0.7886666655540466, 0.8006666898727417, 0.809333324432373, 0.8183333277702332, 0.8146666884422302, 0.8140000104904175, 0.8233333230018616, 0.8289999961853027, 0.8326666951179504, 0.8363333344459534, 0.8389999866485596, 0.8366666436195374, 0.8363333344459534, 0.8489999771118164, 0.847000002861023, 0.8519999980926514, 0.8533333539962769, 0.8560000061988831, 0.8573333621025085, 0.8539999723434448, 0.8619999885559082, 0.862666666507721, 0.8656666874885559, 0.8629999756813049, 0.8646666407585144, 0.8636666536331177, 0.8603333234786987, 0.8659999966621399, 0.8673333525657654, 0.8673333525657654, 0.8713333606719971, 0.8703333139419556, 0.8713333606719971, 0.871666669845581, 0.8736666440963745, 0.8730000257492065, 0.871999979019165, 0.874666690826416, 0.875333309173584, 0.874666690826416, 0.875, 0.8786666393280029, 0.8776666522026062, 0.8743333220481873, 0.8723333477973938, 0.8833333253860474, 0.8826666474342346, 0.8790000081062317, 0.8836666941642761, 0.878333330154419, 0.8820000290870667, 0.887666642665863, 0.8820000290870667, 0.8803333044052124, 0.8830000162124634, 0.8846666812896729, 0.8856666684150696]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8571428656578064, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2219347953796387, 1.8665111064910889, 1.398396611213684, 1.0997655391693115, 0.9446635842323303, 0.8404587507247925, 0.7825850248336792, 0.734347939491272, 0.6979937553405762, 0.6679556965827942, 0.6370137929916382, 0.619990885257721, 0.5977253913879395, 0.5867148041725159, 0.5638217926025391, 0.5439756512641907, 0.5376929044723511, 0.5190141797065735, 0.5007976293563843, 0.49367907643318176, 0.4899161756038666, 0.4748629629611969, 0.4708235561847687, 0.4576995074748993, 0.4571084678173065, 0.443251371383667, 0.44172850251197815, 0.42521658539772034, 0.42451179027557373, 0.4087408781051636, 0.4044405519962311, 0.40223801136016846, 0.39253300428390503, 0.3862170875072479, 0.3811055123806, 0.38287317752838135, 0.3706701993942261, 0.365492045879364, 0.36882731318473816, 0.36181074380874634, 0.34842804074287415, 0.3453179597854614, 0.33930373191833496, 0.332373708486557, 0.3302060663700104, 0.3273339867591858, 0.32616230845451355, 0.32583558559417725, 0.32077494263648987, 0.30634021759033203, 0.3047209680080414, 0.2974655330181122, 0.29093796014785767, 0.290066123008728, 0.28117573261260986, 0.2788729965686798, 0.2807925343513489, 0.2790813148021698], "accuracy": [0.2736758589744568, 0.49148064851760864, 0.5651829242706299, 0.617751955986023, 0.6664905548095703, 0.7018887996673584, 0.7191916704177856, 0.7358341217041016, 0.7427024245262146, 0.7572315335273743, 0.7707040309906006, 0.7771760821342468, 0.7853652238845825, 0.789988100528717, 0.7950072884559631, 0.8033285140991211, 0.8030643463134766, 0.8162726163864136, 0.8206313848495483, 0.8216879963874817, 0.8212917447090149, 0.8273676037788391, 0.8335754871368408, 0.8342359066009521, 0.834632158279419, 0.8374059200286865, 0.8405758738517761, 0.8487650156021118, 0.848368763923645, 0.8551049828529358, 0.8492933511734009, 0.8548408150672913, 0.8580108284950256, 0.8580108284950256, 0.8642187118530273, 0.8623695969581604, 0.8673887252807617, 0.8652753829956055, 0.8679170608520508, 0.8687095642089844, 0.874389111995697, 0.8778232932090759, 0.8761062026023865, 0.8774270415306091, 0.8792761564254761, 0.8772949576377869, 0.8784837126731873, 0.883238673210144, 0.8835028409957886, 0.8914278149604797, 0.8910315632820129, 0.8922203183174133, 0.893541157245636, 0.8980319499969482, 0.89552241563797, 0.8969752788543701, 0.8985602855682373, 0.8967111110687256], "val_loss": [2.038029670715332, 1.5138723850250244, 1.0455670356750488, 0.8474085330963135, 0.7615517377853394, 0.6940603852272034, 0.647357165813446, 0.6108381152153015, 0.5896357297897339, 0.5710567831993103, 0.5452387928962708, 0.5242637395858765, 0.5095043778419495, 0.49416136741638184, 0.48237088322639465, 0.4725537598133087, 0.4621988832950592, 0.4548444151878357, 0.4524674117565155, 0.44172266125679016, 0.4305638074874878, 0.4256497323513031, 0.4170498549938202, 0.41649168729782104, 0.40897810459136963, 0.4043225049972534, 0.4014652371406555, 0.3937121629714966, 0.3954852223396301, 0.38792672753334045, 0.38764217495918274, 0.3850896954536438, 0.3797456920146942, 0.3794858455657959, 0.37276238203048706, 0.375136137008667, 0.37225431203842163, 0.3653544783592224, 0.3628481328487396, 0.3631574809551239, 0.36442190408706665, 0.3588555157184601, 0.35547512769699097, 0.350813627243042, 0.35200411081314087, 0.3506719172000885, 0.35425063967704773, 0.3499850630760193, 0.3555092513561249, 0.35102251172065735, 0.34431758522987366, 0.3532222509384155, 0.3440292477607727, 0.3472403585910797, 0.3472147583961487, 0.34491658210754395, 0.3430229425430298, 0.33938321471214294], "val_accuracy": [0.5383333563804626, 0.6606666445732117, 0.6783333420753479, 0.7023333311080933, 0.7286666631698608, 0.7536666393280029, 0.765666663646698, 0.7720000147819519, 0.7789999842643738, 0.7903333306312561, 0.7946666479110718, 0.8043333292007446, 0.8236666917800903, 0.8186666369438171, 0.8259999752044678, 0.8253333568572998, 0.8353333473205566, 0.8360000252723694, 0.8330000042915344, 0.8383333086967468, 0.8460000157356262, 0.8473333120346069, 0.8500000238418579, 0.8516666889190674, 0.8543333411216736, 0.8523333072662354, 0.8529999852180481, 0.859000027179718, 0.8553333282470703, 0.8600000143051147, 0.8619999885559082, 0.8583333492279053, 0.8646666407585144, 0.862666666507721, 0.8640000224113464, 0.8656666874885559, 0.8613333106040955, 0.871666669845581, 0.8706666827201843, 0.8696666955947876, 0.8656666874885559, 0.8733333349227905, 0.8756666779518127, 0.875, 0.8733333349227905, 0.8793333172798157, 0.8756666779518127, 0.874666690826416, 0.8703333139419556, 0.8813333511352539, 0.8793333172798157, 0.8706666827201843, 0.8820000290870667, 0.8820000290870667, 0.8793333172798157, 0.8799999952316284, 0.8816666603088379, 0.8820000290870667]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 4, 3, 3], [0, 1, 0, 2, 3, 0], [39, 39, 63], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 96], [0, 1], [0], [0], [99], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 2, 4, 2, 8], [0, 0, 4, 3, 0, 0, 3, 1, 4, 0], [16, 99, 96, 4, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 6, 6, 3, 6, 3, 3, 2, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.multiply(grad, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3038809299468994, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 2, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [2, 2, 3, 0, 3, 5, 3, 4, 3, 5, 6], [0, 2, 0, 3, 5, 4, 0, 2, 3], [16, 16, 51], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 6, 2, 8, 1, 4, 1, 4, 2, 1], [0, 0, 0, 3, 0, 2, 3, 1, 2, 4, 1], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 2, 2, 1, 20, 11, 9, 3, 2, 1, 1, 0, 22, 11, 11, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.multiply(grad, tf.math.pow(tf.math.multiply(tf.math.square(grad), tf.math.divide_no_nan(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), beta)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(beta, sigma)))), alpha), tf.math.add(tf.math.subtract(beta, grad), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 0, 3, 0], [0, 1, 0, 2], [67, 89], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0], [2, 2, 3, 0, 0, 5, 9], [0, 2, 0, 3], [16, 16, 93], [0, 1, 0, 0, 1, 0, 0, 1], [2, 0, 4, 0, 0], [0, 7, 7], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0], [6, 3, 3, 6, 8, 1, 4, 4, 4, 2, 8, 4, 8, 3, 7, 4, 5, 3, 7, 9, 9], [0, 0, 0, 3, 0, 0, 3, 4, 2, 0, 5, 2, 3, 5], [16, 79, 96, 12, 61, 1, 31, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 2, 10, 7, 3, 3, 8, 5, 3, 1, 35, 21, 14, 8], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.negative(alpha), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.square(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.pow(grad, tf.math.negative(tf.math.negative(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.pow(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, tf.math.add(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.pow(tf.math.sqrt(sigma), grad)))), beta)), tf.math.multiply(tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.square(tf.math.multiply(grad, tf.math.add(beta, sigma))), grad)), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 0], [39, 39, 36], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 9, 0, 3, 5], [0, 2, 3, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 3, 6, 4, 1, 6, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 3], [16, 99, 96, 99, 61, 1]], "fitness": -0.08971428871154785, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))), alpha)), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.3112611770629883, 2.3096652030944824, 2.3110718727111816, 2.309621572494507, 2.3110947608947754, 2.310873031616211, 2.3097543716430664, 2.3098695278167725, 2.309321165084839, 2.309502124786377], "accuracy": [0.0870426595211029, 0.09126931428909302, 0.0886276587843895, 0.09087307006120682, 0.08717474341392517, 0.08400475233793259, 0.09272222965955734, 0.0944393053650856, 0.08981640636920929, 0.09325055778026581], "val_loss": [2.3085224628448486, 2.308516025543213, 2.3085129261016846, 2.3085110187530518, 2.308509349822998, 2.3085081577301025, 2.308506965637207, 2.3085062503814697, 2.3085052967071533, 2.308504581451416], "val_accuracy": [0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862]}, "mapping_values": [1, 9, 5, 4, 3, 5, 4, 1, 2, 2, 1, 1, 1, 22, 11, 11, 6], "tree_depth": 18}]