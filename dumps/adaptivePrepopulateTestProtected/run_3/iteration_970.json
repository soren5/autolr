[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8862857222557068, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222418785095215, 1.8632627725601196, 1.3950724601745605, 1.0979150533676147, 0.9474178552627563, 0.8543937802314758, 0.7783248424530029, 0.7376496195793152, 0.7006842494010925, 0.6746688485145569, 0.647553563117981, 0.6295329928398132, 0.6112891435623169, 0.58865886926651, 0.5667527914047241, 0.5575993657112122, 0.5467248558998108, 0.5289703011512756, 0.5205997824668884, 0.5110849142074585, 0.5064045786857605, 0.4867391884326935, 0.4731372892856598, 0.47443822026252747, 0.46410614252090454, 0.4545186161994934, 0.445819616317749, 0.4367676079273224, 0.4321127235889435, 0.4275900721549988, 0.4177286922931671, 0.40700381994247437, 0.40491974353790283, 0.3923063576221466, 0.38597339391708374, 0.37638187408447266, 0.3749813437461853, 0.3708414137363434, 0.369646281003952, 0.3635149896144867, 0.3594855070114136, 0.3503628671169281, 0.3338625133037567, 0.3396199643611908, 0.33679017424583435, 0.3303111493587494, 0.3275522291660309, 0.3153315782546997, 0.3093845844268799, 0.31660354137420654, 0.313541054725647, 0.3128948211669922, 0.2977619469165802, 0.30230653285980225, 0.298944890499115, 0.28947505354881287, 0.2822195291519165, 0.2778712213039398, 0.2668195366859436, 0.26853811740875244, 0.26283398270606995, 0.2662760019302368, 0.2576100528240204, 0.25102800130844116, 0.2539205849170685, 0.25087955594062805, 0.24508193135261536], "accuracy": [0.280940443277359, 0.48685774207115173, 0.5665037631988525, 0.616299033164978, 0.6625280380249023, 0.6930392384529114, 0.7169462442398071, 0.7320036888122559, 0.7375511527061462, 0.7491744756698608, 0.7672698497772217, 0.7670056819915771, 0.7745344042778015, 0.7876105904579163, 0.7906485199928284, 0.7994980812072754, 0.802800178527832, 0.8068947196006775, 0.8117818236351013, 0.8153480291366577, 0.8181217908859253, 0.829216718673706, 0.8300092220306396, 0.8238013386726379, 0.8325188159942627, 0.8385946154594421, 0.8372738361358643, 0.842028796672821, 0.8451988101005554, 0.8481045961380005, 0.8515387773513794, 0.8549728989601135, 0.8516708612442017, 0.8603883385658264, 0.8598600029945374, 0.8667283058166504, 0.8636903762817383, 0.8636903762817383, 0.8677849769592285, 0.8704266548156738, 0.8758420348167419, 0.8739928603172302, 0.8790120482444763, 0.8768987059593201, 0.8751816153526306, 0.8794082403182983, 0.8813894987106323, 0.8860124349594116, 0.8874653577804565, 0.8856161832809448, 0.8838990926742554, 0.8877294659614563, 0.8918240666389465, 0.8918240666389465, 0.8922203183174133, 0.8953903317451477, 0.89552241563797, 0.9002773761749268, 0.9049002528190613, 0.9034473896026611, 0.9035794734954834, 0.9038436412811279, 0.9085986018180847, 0.9095231890678406, 0.9095231890678406, 0.909259021282196, 0.910711944103241], "val_loss": [2.0414316654205322, 1.5168657302856445, 1.0494927167892456, 0.8396123051643372, 0.7532041668891907, 0.6975494027137756, 0.6532282829284668, 0.6188269853591919, 0.5909113883972168, 0.5747429728507996, 0.5562715530395508, 0.5392115712165833, 0.5226473808288574, 0.5080817937850952, 0.49551260471343994, 0.4949219524860382, 0.48097461462020874, 0.46894019842147827, 0.4645398259162903, 0.4554585814476013, 0.44845467805862427, 0.44272810220718384, 0.4365209937095642, 0.4303407371044159, 0.42757970094680786, 0.42137086391448975, 0.4158954322338104, 0.4094981253147125, 0.40614867210388184, 0.40746310353279114, 0.39686036109924316, 0.39440515637397766, 0.39069101214408875, 0.3898474872112274, 0.3889416456222534, 0.3833497166633606, 0.387736976146698, 0.3792175352573395, 0.3778442442417145, 0.37528878450393677, 0.3729557991027832, 0.37016138434410095, 0.36690768599510193, 0.36455467343330383, 0.36386409401893616, 0.3628668487071991, 0.365796834230423, 0.36076274514198303, 0.3599783480167389, 0.35867130756378174, 0.35705167055130005, 0.35411083698272705, 0.3552299737930298, 0.3651564121246338, 0.36276260018348694, 0.34837988018989563, 0.34821584820747375, 0.3528410792350769, 0.3496720790863037, 0.3506317138671875, 0.34951722621917725, 0.3443804085254669, 0.345913290977478, 0.3461855351924896, 0.3431210517883301, 0.348863810300827, 0.3426092565059662], "val_accuracy": [0.5373333096504211, 0.6570000052452087, 0.6759999990463257, 0.7110000252723694, 0.7286666631698608, 0.7419999837875366, 0.7590000033378601, 0.7616666555404663, 0.7836666703224182, 0.7903333306312561, 0.7886666655540466, 0.8006666898727417, 0.809333324432373, 0.8183333277702332, 0.8146666884422302, 0.8140000104904175, 0.8233333230018616, 0.8289999961853027, 0.8326666951179504, 0.8363333344459534, 0.8389999866485596, 0.8366666436195374, 0.8363333344459534, 0.8489999771118164, 0.847000002861023, 0.8519999980926514, 0.8533333539962769, 0.8560000061988831, 0.8573333621025085, 0.8539999723434448, 0.8619999885559082, 0.862666666507721, 0.8656666874885559, 0.8629999756813049, 0.8646666407585144, 0.8636666536331177, 0.8603333234786987, 0.8659999966621399, 0.8673333525657654, 0.8673333525657654, 0.8713333606719971, 0.8703333139419556, 0.8713333606719971, 0.871666669845581, 0.8736666440963745, 0.8730000257492065, 0.871999979019165, 0.874666690826416, 0.875333309173584, 0.874666690826416, 0.875, 0.8786666393280029, 0.8776666522026062, 0.8743333220481873, 0.8723333477973938, 0.8833333253860474, 0.8826666474342346, 0.8790000081062317, 0.8836666941642761, 0.878333330154419, 0.8820000290870667, 0.887666642665863, 0.8820000290870667, 0.8803333044052124, 0.8830000162124634, 0.8846666812896729, 0.8856666684150696]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8691428303718567, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2203562259674072, 1.856896162033081, 1.3779995441436768, 1.1006799936294556, 0.9455235004425049, 0.8439891934394836, 0.773307204246521, 0.7416707873344421, 0.7000947594642639, 0.6627838015556335, 0.6331899166107178, 0.6138407588005066, 0.601406455039978, 0.5792297720909119, 0.5591240525245667, 0.5458939671516418, 0.5341431498527527, 0.517246663570404, 0.507222592830658, 0.49720606207847595, 0.4936022460460663, 0.47420352697372437, 0.4659654200077057, 0.46351099014282227, 0.45482006669044495, 0.4469531774520874, 0.4408697783946991, 0.4320335388183594, 0.4176566004753113, 0.4097025692462921, 0.40836426615715027, 0.4040082097053528, 0.39024245738983154, 0.3882139027118683, 0.3832681179046631, 0.37558653950691223, 0.36927783489227295, 0.3646347224712372, 0.3594511151313782, 0.3547705113887787, 0.34688836336135864, 0.34538689255714417, 0.340087354183197, 0.3375312387943268, 0.32928216457366943, 0.32838302850723267, 0.32179632782936096, 0.3206666111946106, 0.3158714175224304, 0.3110843896865845, 0.30574679374694824, 0.2988937795162201, 0.2955174446105957, 0.29686546325683594, 0.28659939765930176, 0.2825886607170105, 0.2838819622993469, 0.2809927463531494, 0.26890140771865845, 0.279135137796402, 0.2685849964618683, 0.262706458568573, 0.252535343170166, 0.2579726576805115, 0.2550721764564514, 0.24804778397083282, 0.2463226467370987, 0.24343913793563843, 0.2421615570783615, 0.2388889193534851, 0.23427806794643402, 0.23126360774040222, 0.22613836824893951, 0.22813698649406433, 0.22501085698604584], "accuracy": [0.27460044622421265, 0.49214106798171997, 0.5688812732696533, 0.6198652982711792, 0.6631884574890137, 0.7005679607391357, 0.7257958054542542, 0.7309470176696777, 0.7481178045272827, 0.7625148296356201, 0.7643640041351318, 0.7794214487075806, 0.780610203742981, 0.7885351777076721, 0.7955356240272522, 0.8037247657775879, 0.8112534880638123, 0.8142913579940796, 0.8171972036361694, 0.8224804997444153, 0.8220842480659485, 0.8274996876716614, 0.8330471515655518, 0.8356888294219971, 0.837141752243042, 0.8388587832450867, 0.8461233377456665, 0.8512746095657349, 0.8508783578872681, 0.8553691506385803, 0.8525954484939575, 0.8541803956031799, 0.8619733452796936, 0.8584070801734924, 0.8623695969581604, 0.8651432991027832, 0.8702945709228516, 0.8705587387084961, 0.8730682730674744, 0.8730682730674744, 0.8766345381736755, 0.8745211958885193, 0.8767666220664978, 0.8772949576377869, 0.8841632604598999, 0.8831065893173218, 0.8829745054244995, 0.8825782537460327, 0.8879936337471008, 0.8897107243537903, 0.8939374089241028, 0.8906353116035461, 0.8963148593902588, 0.8926165699958801, 0.8992207050323486, 0.8972394466400146, 0.89552241563797, 0.9008057117462158, 0.9026548862457275, 0.8969752788543701, 0.9056927561759949, 0.90423983335495, 0.9043719172477722, 0.9058248400688171, 0.9104477763175964, 0.91124027967453, 0.9116365313529968, 0.9145423173904419, 0.9121648669242859, 0.9126931428909302, 0.9138818979263306, 0.917580246925354, 0.9159952402114868, 0.9148064851760864, 0.9218068718910217], "val_loss": [2.0292112827301025, 1.492868185043335, 1.0277187824249268, 0.8202565908432007, 0.737859845161438, 0.6680846810340881, 0.6255742907524109, 0.595939576625824, 0.5664950609207153, 0.5454773306846619, 0.5248721241950989, 0.5157017707824707, 0.5002911686897278, 0.4890596866607666, 0.47284194827079773, 0.4617674946784973, 0.4584006071090698, 0.45082786679267883, 0.43880438804626465, 0.43353182077407837, 0.4263542592525482, 0.41621139645576477, 0.4104715883731842, 0.41646915674209595, 0.4070560336112976, 0.40204858779907227, 0.40270206332206726, 0.3906594216823578, 0.3870854377746582, 0.38485124707221985, 0.3813234865665436, 0.38069379329681396, 0.375515878200531, 0.3742789030075073, 0.36665576696395874, 0.36632099747657776, 0.36244770884513855, 0.36592042446136475, 0.356819748878479, 0.36067140102386475, 0.3573265075683594, 0.3546897768974304, 0.35329532623291016, 0.34306633472442627, 0.346334308385849, 0.34616556763648987, 0.3449787199497223, 0.3422313630580902, 0.34427979588508606, 0.3458750545978546, 0.3398631513118744, 0.34113872051239014, 0.34692758321762085, 0.34019649028778076, 0.3352106511592865, 0.3411281406879425, 0.3411674499511719, 0.33498600125312805, 0.3426745533943176, 0.3387039303779602, 0.3330172896385193, 0.33892273902893066, 0.33123889565467834, 0.33702337741851807, 0.33636951446533203, 0.33182746171951294, 0.33189335465431213, 0.33432474732398987, 0.33042454719543457, 0.33391791582107544, 0.3311643600463867, 0.33105528354644775, 0.3343164026737213, 0.3330944776535034, 0.32841143012046814], "val_accuracy": [0.5376666784286499, 0.6523333191871643, 0.6896666884422302, 0.715666651725769, 0.734333336353302, 0.7576666474342346, 0.7706666588783264, 0.7739999890327454, 0.7879999876022339, 0.7956666946411133, 0.8069999814033508, 0.8076666593551636, 0.8133333325386047, 0.812333345413208, 0.8223333358764648, 0.828000009059906, 0.8303333520889282, 0.8266666531562805, 0.8349999785423279, 0.8399999737739563, 0.8389999866485596, 0.8420000076293945, 0.8486666679382324, 0.8473333120346069, 0.8500000238418579, 0.8526666760444641, 0.8456666469573975, 0.8553333282470703, 0.8560000061988831, 0.8583333492279053, 0.8610000014305115, 0.8616666793823242, 0.859000027179718, 0.862333357334137, 0.862333357334137, 0.8633333444595337, 0.8650000095367432, 0.8643333315849304, 0.8733333349227905, 0.8656666874885559, 0.8706666827201843, 0.8703333139419556, 0.8686666488647461, 0.8740000128746033, 0.8726666569709778, 0.874666690826416, 0.874666690826416, 0.878333330154419, 0.8756666779518127, 0.8773333430290222, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8790000081062317, 0.8799999952316284, 0.8793333172798157, 0.8799999952316284, 0.8823333382606506, 0.8803333044052124, 0.8799999952316284, 0.8813333511352539, 0.8806666731834412, 0.8836666941642761, 0.8803333044052124, 0.8853333592414856, 0.8840000033378601, 0.8856666684150696, 0.8846666812896729, 0.8836666941642761, 0.8880000114440918, 0.8853333592414856, 0.8859999775886536, 0.8870000243186951, 0.8863333463668823, 0.8880000114440918]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [8, 2, 3, 0, 6, 5], [0, 3, 0, 3], [16, 97], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [6, 5, 3, 6, 8, 1, 4, 1, 4, 2, 8, 2, 7, 2, 0, 2], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 6, 6, 6], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 1, 0, 1, 1, 29, 16, 13, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.divide_no_nan(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.square(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.math.pow(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), sigma), tf.math.sqrt(tf.math.add(alpha, beta)))))), tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.negative(tf.math.add(grad, grad)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 1, 0, 2], [48, 39], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 2, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [2], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 5, 3, 6, 8, 4, 4, 1, 4, 2, 8, 0], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 33, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 10, 6, 4, 2, 2, 1, 1, 0, 20, 12, 8, 5], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), sigma)))), tf.math.sqrt(tf.math.negative(alpha))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 2, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 5, 0, 3, 5], [2, 2, 0, 3], [16, 16], [1, 1], [0], [1], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 4, 4, 2, 8], [0, 3, 0, 3, 0, 0, 3, 1, 2, 0], [16, 94, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 6, 4, 2, 0, 1, 0, 1, 0, 14, 7, 7, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.negative(beta)), beta)), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(sigma, tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))))", "other_info": {"loss": [42.398529052734375, 10.160008430480957, 2.3025853633880615, 2.3025856018066406, 2.3025853633880615, 2.3025856018066406], "accuracy": [0.09760929644107819, 0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [16.19308853149414, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.1003333330154419, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 3, 3, 0, 3, 3, 4, 6, 4, 3, 3, 2, 3, 7, 3, 5, 6, 8, 2, 1, 2, 1, 3, 5, 7, 5, 9, 2, 7, 7, 2, 9, 0, 5], [0, 1, 0, 2, 3, 3, 0, 0, 2, 1, 0, 3, 2, 1, 1, 0, 2, 3, 3, 0, 1, 1, 1], [39, 39, 50, 70, 67, 87, 85, 74, 35], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 2, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 0, 6, 6, 3, 0, 6, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 4, 1, 0, 2], [16, 99, 96, 99, 61, 1, 53]], "fitness": -0.09342857450246811, "mapping_values": [1, 57, 34, 23, 9, 6, 3, 3, 2, 2, 1, 1, 1, 31, 17, 14, 7], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), grad), tf.math.pow(tf.math.divide_no_nan(grad, tf.math.pow(tf.math.multiply(tf.math.multiply(grad, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.multiply(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), grad), alpha)), tf.math.add(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.square(tf.math.divide_no_nan(tf.math.sqrt(grad), tf.math.add(tf.math.subtract(tf.math.add(tf.math.subtract(alpha, tf.math.multiply(alpha, tf.math.square(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.square(grad), grad)), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.add(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), alpha), tf.math.negative(alpha))))))))))), tf.math.square(alpha)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), sigma)))), tf.math.negative(tf.math.divide_no_nan(alpha, beta)))), tf.math.divide_no_nan(tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad), tf.math.negative(alpha))), tf.math.divide_no_nan(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(beta)))", "other_info": {"loss": [2.3105275630950928, 2.309710741043091, 2.310495615005493, 2.3096044063568115, 2.30891489982605, 2.309474468231201], "accuracy": [0.08717474341392517, 0.08981640636920929, 0.08770307898521423, 0.09285431355237961, 0.08994849026203156, 0.09021265059709549], "val_loss": [2.309476613998413, 2.309476613998413, 2.309476613998413, 2.309476613998413, 2.309476613998413, 2.309476613998413], "val_accuracy": [0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446]}}]