[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8862857222557068, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222418785095215, 1.8632627725601196, 1.3950724601745605, 1.0979150533676147, 0.9474178552627563, 0.8543937802314758, 0.7783248424530029, 0.7376496195793152, 0.7006842494010925, 0.6746688485145569, 0.647553563117981, 0.6295329928398132, 0.6112891435623169, 0.58865886926651, 0.5667527914047241, 0.5575993657112122, 0.5467248558998108, 0.5289703011512756, 0.5205997824668884, 0.5110849142074585, 0.5064045786857605, 0.4867391884326935, 0.4731372892856598, 0.47443822026252747, 0.46410614252090454, 0.4545186161994934, 0.445819616317749, 0.4367676079273224, 0.4321127235889435, 0.4275900721549988, 0.4177286922931671, 0.40700381994247437, 0.40491974353790283, 0.3923063576221466, 0.38597339391708374, 0.37638187408447266, 0.3749813437461853, 0.3708414137363434, 0.369646281003952, 0.3635149896144867, 0.3594855070114136, 0.3503628671169281, 0.3338625133037567, 0.3396199643611908, 0.33679017424583435, 0.3303111493587494, 0.3275522291660309, 0.3153315782546997, 0.3093845844268799, 0.31660354137420654, 0.313541054725647, 0.3128948211669922, 0.2977619469165802, 0.30230653285980225, 0.298944890499115, 0.28947505354881287, 0.2822195291519165, 0.2778712213039398, 0.2668195366859436, 0.26853811740875244, 0.26283398270606995, 0.2662760019302368, 0.2576100528240204, 0.25102800130844116, 0.2539205849170685, 0.25087955594062805, 0.24508193135261536], "accuracy": [0.280940443277359, 0.48685774207115173, 0.5665037631988525, 0.616299033164978, 0.6625280380249023, 0.6930392384529114, 0.7169462442398071, 0.7320036888122559, 0.7375511527061462, 0.7491744756698608, 0.7672698497772217, 0.7670056819915771, 0.7745344042778015, 0.7876105904579163, 0.7906485199928284, 0.7994980812072754, 0.802800178527832, 0.8068947196006775, 0.8117818236351013, 0.8153480291366577, 0.8181217908859253, 0.829216718673706, 0.8300092220306396, 0.8238013386726379, 0.8325188159942627, 0.8385946154594421, 0.8372738361358643, 0.842028796672821, 0.8451988101005554, 0.8481045961380005, 0.8515387773513794, 0.8549728989601135, 0.8516708612442017, 0.8603883385658264, 0.8598600029945374, 0.8667283058166504, 0.8636903762817383, 0.8636903762817383, 0.8677849769592285, 0.8704266548156738, 0.8758420348167419, 0.8739928603172302, 0.8790120482444763, 0.8768987059593201, 0.8751816153526306, 0.8794082403182983, 0.8813894987106323, 0.8860124349594116, 0.8874653577804565, 0.8856161832809448, 0.8838990926742554, 0.8877294659614563, 0.8918240666389465, 0.8918240666389465, 0.8922203183174133, 0.8953903317451477, 0.89552241563797, 0.9002773761749268, 0.9049002528190613, 0.9034473896026611, 0.9035794734954834, 0.9038436412811279, 0.9085986018180847, 0.9095231890678406, 0.9095231890678406, 0.909259021282196, 0.910711944103241], "val_loss": [2.0414316654205322, 1.5168657302856445, 1.0494927167892456, 0.8396123051643372, 0.7532041668891907, 0.6975494027137756, 0.6532282829284668, 0.6188269853591919, 0.5909113883972168, 0.5747429728507996, 0.5562715530395508, 0.5392115712165833, 0.5226473808288574, 0.5080817937850952, 0.49551260471343994, 0.4949219524860382, 0.48097461462020874, 0.46894019842147827, 0.4645398259162903, 0.4554585814476013, 0.44845467805862427, 0.44272810220718384, 0.4365209937095642, 0.4303407371044159, 0.42757970094680786, 0.42137086391448975, 0.4158954322338104, 0.4094981253147125, 0.40614867210388184, 0.40746310353279114, 0.39686036109924316, 0.39440515637397766, 0.39069101214408875, 0.3898474872112274, 0.3889416456222534, 0.3833497166633606, 0.387736976146698, 0.3792175352573395, 0.3778442442417145, 0.37528878450393677, 0.3729557991027832, 0.37016138434410095, 0.36690768599510193, 0.36455467343330383, 0.36386409401893616, 0.3628668487071991, 0.365796834230423, 0.36076274514198303, 0.3599783480167389, 0.35867130756378174, 0.35705167055130005, 0.35411083698272705, 0.3552299737930298, 0.3651564121246338, 0.36276260018348694, 0.34837988018989563, 0.34821584820747375, 0.3528410792350769, 0.3496720790863037, 0.3506317138671875, 0.34951722621917725, 0.3443804085254669, 0.345913290977478, 0.3461855351924896, 0.3431210517883301, 0.348863810300827, 0.3426092565059662], "val_accuracy": [0.5373333096504211, 0.6570000052452087, 0.6759999990463257, 0.7110000252723694, 0.7286666631698608, 0.7419999837875366, 0.7590000033378601, 0.7616666555404663, 0.7836666703224182, 0.7903333306312561, 0.7886666655540466, 0.8006666898727417, 0.809333324432373, 0.8183333277702332, 0.8146666884422302, 0.8140000104904175, 0.8233333230018616, 0.8289999961853027, 0.8326666951179504, 0.8363333344459534, 0.8389999866485596, 0.8366666436195374, 0.8363333344459534, 0.8489999771118164, 0.847000002861023, 0.8519999980926514, 0.8533333539962769, 0.8560000061988831, 0.8573333621025085, 0.8539999723434448, 0.8619999885559082, 0.862666666507721, 0.8656666874885559, 0.8629999756813049, 0.8646666407585144, 0.8636666536331177, 0.8603333234786987, 0.8659999966621399, 0.8673333525657654, 0.8673333525657654, 0.8713333606719971, 0.8703333139419556, 0.8713333606719971, 0.871666669845581, 0.8736666440963745, 0.8730000257492065, 0.871999979019165, 0.874666690826416, 0.875333309173584, 0.874666690826416, 0.875, 0.8786666393280029, 0.8776666522026062, 0.8743333220481873, 0.8723333477973938, 0.8833333253860474, 0.8826666474342346, 0.8790000081062317, 0.8836666941642761, 0.878333330154419, 0.8820000290870667, 0.887666642665863, 0.8820000290870667, 0.8803333044052124, 0.8830000162124634, 0.8846666812896729, 0.8856666684150696]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8600000143051147, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223844289779663, 1.8681551218032837, 1.3873908519744873, 1.0793817043304443, 0.9213139414787292, 0.8123471140861511, 0.7562366724014282, 0.7035517692565918, 0.6777304410934448, 0.6437126994132996, 0.6126527190208435, 0.6022688746452332, 0.5795525312423706, 0.5654683709144592, 0.5468124151229858, 0.5436232686042786, 0.5261693596839905, 0.5078777074813843, 0.499625027179718, 0.483193576335907, 0.4764218330383301, 0.46557116508483887, 0.45728376507759094, 0.4429400563240051, 0.43341565132141113, 0.43440553545951843, 0.41851523518562317, 0.4221141040325165, 0.4020034074783325, 0.39816898107528687, 0.39422959089279175, 0.39299947023391724, 0.38880112767219543, 0.37683984637260437, 0.37435874342918396, 0.36847829818725586, 0.3583664894104004, 0.3548482358455658, 0.35471275448799133, 0.34955158829689026, 0.3426681160926819, 0.3405773341655731, 0.327829509973526, 0.32745563983917236, 0.31888729333877563, 0.31364578008651733, 0.31192368268966675, 0.30818721652030945, 0.3009142279624939, 0.3013095259666443, 0.2906310558319092, 0.29186373949050903, 0.29153934121131897, 0.28023561835289, 0.2800831198692322, 0.2744891941547394, 0.2707517147064209, 0.2606790363788605, 0.25658118724823, 0.2561322748661041, 0.25049203634262085, 0.25134003162384033, 0.2481827288866043, 0.2420525699853897, 0.23584972321987152, 0.2334383875131607, 0.23205029964447021, 0.2240067720413208, 0.2240990251302719, 0.22121502459049225, 0.21652477979660034, 0.22092801332473755, 0.21487212181091309, 0.21449989080429077, 0.2055891901254654, 0.20414578914642334], "accuracy": [0.27103421092033386, 0.49425438046455383, 0.5686171054840088, 0.6260731816291809, 0.6684718132019043, 0.7043983340263367, 0.726192057132721, 0.7460044622421265, 0.7532690763473511, 0.7660810947418213, 0.7810064554214478, 0.7820631265640259, 0.789459764957428, 0.793422281742096, 0.8047813773155212, 0.8074230551719666, 0.8131026029586792, 0.8141592741012573, 0.8195747137069702, 0.8281601071357727, 0.8253863453865051, 0.8309338092803955, 0.8321225643157959, 0.8442742228507996, 0.8450667262077332, 0.8424250483512878, 0.8494254350662231, 0.847840428352356, 0.8557654023170471, 0.8548408150672913, 0.8558974862098694, 0.8610487580299377, 0.8589354157447815, 0.8643507957458496, 0.8619733452796936, 0.8667283058166504, 0.8691058158874512, 0.8713511824607849, 0.8679170608520508, 0.8708229064941406, 0.8761062026023865, 0.8755778670310974, 0.8813894987106323, 0.880729079246521, 0.885219931602478, 0.8836349248886108, 0.8820499181747437, 0.8889182209968567, 0.8922203183174133, 0.887597382068634, 0.8926165699958801, 0.895918607711792, 0.8948619961738586, 0.8982961177825928, 0.8981640338897705, 0.8992207050323486, 0.9001452922821045, 0.9041078090667725, 0.9059569239616394, 0.9099194407463074, 0.9113723635673523, 0.9056927561759949, 0.9104477763175964, 0.915070652961731, 0.9109761118888855, 0.9116365313529968, 0.9142781496047974, 0.9167877435684204, 0.9158631563186646, 0.9181085824966431, 0.9214106202125549, 0.9161273241043091, 0.9190331697463989, 0.9187690019607544, 0.9237881302833557, 0.9256373047828674], "val_loss": [2.042410373687744, 1.5266401767730713, 1.0531824827194214, 0.8414954543113708, 0.7507601976394653, 0.6968483328819275, 0.6562311053276062, 0.6262552738189697, 0.5961284041404724, 0.5772000551223755, 0.5613964200019836, 0.5461340546607971, 0.5368782877922058, 0.5145783424377441, 0.5070653557777405, 0.49741122126579285, 0.4908358156681061, 0.4837072789669037, 0.47159823775291443, 0.46278515458106995, 0.4583700895309448, 0.4500744938850403, 0.4461708962917328, 0.43963322043418884, 0.4331977069377899, 0.4311770498752594, 0.4272405207157135, 0.4228549897670746, 0.4145955443382263, 0.4137295186519623, 0.41022172570228577, 0.4060650169849396, 0.4104284346103668, 0.40466779470443726, 0.3999299705028534, 0.39091944694519043, 0.3980771601200104, 0.3881322145462036, 0.38591328263282776, 0.3839973509311676, 0.3826851546764374, 0.3811398148536682, 0.3824527859687805, 0.37389233708381653, 0.3782937824726105, 0.3809126913547516, 0.3745172619819641, 0.37633630633354187, 0.371772825717926, 0.3708271384239197, 0.37010157108306885, 0.3665856122970581, 0.3677876889705658, 0.36725953221321106, 0.362450510263443, 0.36467796564102173, 0.36766955256462097, 0.36953699588775635, 0.360571950674057, 0.3650323450565338, 0.3630693256855011, 0.35924458503723145, 0.35610905289649963, 0.35909387469291687, 0.3580799102783203, 0.3590298593044281, 0.3569132387638092, 0.3648636043071747, 0.3582049012184143, 0.36119818687438965, 0.36399781703948975, 0.3561760187149048, 0.36094388365745544, 0.35849902033805847, 0.3598020374774933, 0.35657596588134766], "val_accuracy": [0.5346666574478149, 0.6516666412353516, 0.6759999990463257, 0.7009999752044678, 0.7310000061988831, 0.7426666617393494, 0.7540000081062317, 0.7676666378974915, 0.7770000100135803, 0.7770000100135803, 0.7956666946411133, 0.7943333387374878, 0.7986666560173035, 0.8180000185966492, 0.8209999799728394, 0.8233333230018616, 0.8240000009536743, 0.8336666822433472, 0.8339999914169312, 0.8403333425521851, 0.8389999866485596, 0.8443333506584167, 0.8446666598320007, 0.8496666550636292, 0.8496666550636292, 0.8489999771118164, 0.8560000061988831, 0.8550000190734863, 0.8586666584014893, 0.859333336353302, 0.8576666712760925, 0.8539999723434448, 0.859333336353302, 0.8600000143051147, 0.859000027179718, 0.8663333058357239, 0.8629999756813049, 0.8653333187103271, 0.8700000047683716, 0.8693333268165588, 0.8650000095367432, 0.8679999709129333, 0.8703333139419556, 0.8723333477973938, 0.8683333396911621, 0.8736666440963745, 0.8740000128746033, 0.871999979019165, 0.8740000128746033, 0.8736666440963745, 0.874666690826416, 0.878000020980835, 0.8693333268165588, 0.875, 0.8793333172798157, 0.8803333044052124, 0.8776666522026062, 0.8766666650772095, 0.8796666860580444, 0.8776666522026062, 0.8809999823570251, 0.8799999952316284, 0.8806666731834412, 0.8820000290870667, 0.8796666860580444, 0.8776666522026062, 0.8793333172798157, 0.878000020980835, 0.8830000162124634, 0.8830000162124634, 0.8846666812896729, 0.8806666731834412, 0.878333330154419, 0.8796666860580444, 0.8843333125114441, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 6], [0, 1, 1, 2], [39, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [3, 2, 0, 3], [68, 16], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1], [6, 3, 3, 6, 3, 1, 3, 1, 4, 2, 8, 9], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 91, 24]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 6, 3, 3, 1, 2, 1, 1, 1, 22, 12, 10, 7], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.divide_no_nan(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(grad, tf.math.multiply(beta, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha))), tf.math.pow(tf.math.add(tf.math.sqrt(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), beta), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.3044795989990234, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 8, 1, 1, 7, 0, 1, 2, 9, 4], [0, 1, 0, 2, 0, 2, 3, 3, 3], [39, 39, 65, 98], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 2, 3, 0, 3, 5, 4, 7, 6, 9], [0, 2, 0, 3, 1, 3], [16, 30, 80], [0, 1, 1], [6], [0, 2], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 3, 8, 4, 0, 2, 0, 2, 6], [0, 0, 0, 3, 0, 0, 3, 0, 2, 4, 4, 4, 2, 7], [47, 99, 62, 99, 61, 91]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 14, 9, 4, 16, 10, 6, 3, 3, 1, 2, 1, 31, 17, 14, 6], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.sqrt(tf.math.subtract(tf.math.subtract(tf.math.add(tf.math.negative(tf.math.subtract(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), grad)), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), grad), tf.math.pow(grad, grad))), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.math.square(tf.math.pow(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.add(grad, alpha))), tf.math.divide_no_nan(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), tf.math.multiply(tf.math.sqrt(tf.math.pow(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(beta, tf.math.negative(grad))))), tf.math.add(grad, tf.math.divide_no_nan(grad, beta)))), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3], [2, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 1, 2, 0, 6, 6, 1, 5, 6, 6, 5, 8, 7, 5, 2, 3, 3, 9, 9, 6, 2, 3], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 4, 7, 4, 6, 7, 6, 5, 6, 4, 5, 1, 2], [16, 99, 96, 99, 61, 1, 1, 81]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 1, 10, 6, 4, 2, 2, 1, 1, 1, 54, 32, 22, 8], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), sigma))), tf.math.divide_no_nan(alpha, beta))), tf.math.divide_no_nan(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad)), tf.math.subtract(tf.math.square(grad), tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.math.square(grad), tf.math.sqrt(tf.math.add(tf.math.square(tf.math.add(grad, grad)), tf.math.multiply(grad, tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))))))))), tf.math.divide_no_nan(grad, tf.math.add(tf.math.multiply(grad, grad), alpha))), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 1], [0, 4, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1], [0, 6, 3, 0, 3, 6], [0, 0, 0, 3], [16, 16], [0, 1], [0], [0], [25], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 6, 1, 4, 1, 3, 2, 8, 9, 5, 3, 1, 4, 8], [0, 0, 0, 4, 0, 0, 3, 1, 0, 0, 3, 7, 6], [16, 99, 96, 99, 61, 1, 43, 11]], "fitness": -0.08914285898208618, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), grad)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.square(sigma)))), alpha)), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.subtract(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.sqrt(sigma), grad)), grad))", "other_info": {"loss": [2.3106369972229004, 2.309558629989624, 2.309884548187256, 2.310868978500366, 2.311589002609253, 2.309485912322998, 2.3088738918304443], "accuracy": [0.09311848133802414, 0.09668471664190292, 0.09628847241401672, 0.09047681838274002, 0.08532558381557465, 0.09747721254825592, 0.09457138925790787], "val_loss": [2.3082809448242188, 2.308281660079956, 2.3082821369171143, 2.3082826137542725, 2.3082826137542725, 2.3082830905914307, 2.3082830905914307], "val_accuracy": [0.09333333373069763, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}, "mapping_values": [1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 30, 17, 13, 8], "tree_depth": 22}]