[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8808571696281433, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223215103149414, 1.8640538454055786, 1.390925645828247, 1.0857504606246948, 0.9175904989242554, 0.8278062343597412, 0.75929194688797, 0.7150763869285583, 0.6742342710494995, 0.6527069211006165, 0.6226239800453186, 0.6030511260032654, 0.5812473893165588, 0.5698184370994568, 0.5517233610153198, 0.5318202376365662, 0.5262278914451599, 0.5063096284866333, 0.4941454231739044, 0.4912639260292053, 0.47673994302749634, 0.46776485443115234, 0.45580968260765076, 0.45419755578041077, 0.4471202790737152, 0.4368197023868561, 0.4238806366920471, 0.41453513503074646, 0.41017231345176697, 0.4062040150165558, 0.40386685729026794, 0.3953916132450104, 0.39355871081352234, 0.3836102783679962, 0.37635838985443115, 0.3735085725784302, 0.363672137260437, 0.35395750403404236, 0.35972025990486145, 0.34721699357032776, 0.3442964553833008, 0.335767537355423, 0.3300938904285431, 0.32407090067863464, 0.32112976908683777, 0.3181473910808563, 0.31370431184768677, 0.3087446987628937, 0.3084625005722046, 0.30203962326049805, 0.293395072221756, 0.2889169156551361, 0.2914500832557678, 0.28307828307151794, 0.28207361698150635, 0.2786792516708374, 0.27818819880485535, 0.26387521624565125], "accuracy": [0.27222296595573425, 0.5027077198028564, 0.5674283504486084, 0.6277902722358704, 0.6709813475608826, 0.7058512568473816, 0.7269845604896545, 0.7415136694908142, 0.7586844563484192, 0.7617223858833313, 0.783119797706604, 0.7832518815994263, 0.7926297783851624, 0.8001585006713867, 0.807158887386322, 0.8103289008140564, 0.8133667707443237, 0.8190463781356812, 0.8247259259223938, 0.8271034359931946, 0.8298771381378174, 0.8341038227081299, 0.8366134166717529, 0.839519202709198, 0.8404437899589539, 0.848368763923645, 0.8515387773513794, 0.8564258217811584, 0.8529917001724243, 0.8585391640663147, 0.8515387773513794, 0.863558292388916, 0.8615770936012268, 0.8640866279602051, 0.8652753829956055, 0.8671245574951172, 0.8720116019248962, 0.8771628737449646, 0.8705587387084961, 0.876370370388031, 0.8787478804588318, 0.8784837126731873, 0.8828424215316772, 0.8842953443527222, 0.884691596031189, 0.8840311765670776, 0.8891823887825012, 0.8894465565681458, 0.8899748921394348, 0.8932769894599915, 0.8945978283882141, 0.8980319499969482, 0.896446943283081, 0.8988244533538818, 0.9019944667816162, 0.901862382888794, 0.8985602855682373, 0.904768168926239], "val_loss": [2.039530038833618, 1.5154659748077393, 1.039007544517517, 0.8366694450378418, 0.7400773167610168, 0.6859951019287109, 0.6454513669013977, 0.6114123463630676, 0.5899704694747925, 0.5724708437919617, 0.5533395409584045, 0.5345184803009033, 0.5225448608398438, 0.5092709064483643, 0.500229001045227, 0.49316829442977905, 0.480929970741272, 0.4729439616203308, 0.4688349962234497, 0.4563703238964081, 0.45455607771873474, 0.44636544585227966, 0.44144734740257263, 0.4332112669944763, 0.42851945757865906, 0.4277913272380829, 0.4196922183036804, 0.41600528359413147, 0.4114539325237274, 0.4113328456878662, 0.4059373438358307, 0.4033544063568115, 0.40210506319999695, 0.3963744640350342, 0.39264819025993347, 0.39112263917922974, 0.384288489818573, 0.383841872215271, 0.3804401755332947, 0.3786342442035675, 0.3777892291545868, 0.37486007809638977, 0.37355443835258484, 0.37450093030929565, 0.36811116337776184, 0.3697490096092224, 0.3684578537940979, 0.370509535074234, 0.36476588249206543, 0.36312252283096313, 0.361527681350708, 0.36036449670791626, 0.3581533133983612, 0.3633516728878021, 0.35499346256256104, 0.3547135293483734, 0.35882508754730225, 0.35363712906837463], "val_accuracy": [0.5473333597183228, 0.6496666669845581, 0.6846666932106018, 0.6959999799728394, 0.7279999852180481, 0.7450000047683716, 0.7580000162124634, 0.7713333368301392, 0.7763333320617676, 0.7816666960716248, 0.7963333129882812, 0.8109999895095825, 0.8116666674613953, 0.8113333582878113, 0.8116666674613953, 0.8186666369438171, 0.8259999752044678, 0.8236666917800903, 0.828000009059906, 0.8360000252723694, 0.8323333263397217, 0.8373333215713501, 0.8373333215713501, 0.8366666436195374, 0.843666672706604, 0.843999981880188, 0.846666693687439, 0.8483333587646484, 0.8493333458900452, 0.847000002861023, 0.8476666808128357, 0.8496666550636292, 0.8510000109672546, 0.8519999980926514, 0.8553333282470703, 0.8556666374206543, 0.8583333492279053, 0.859333336353302, 0.8560000061988831, 0.862333357334137, 0.8636666536331177, 0.859666645526886, 0.8636666536331177, 0.8643333315849304, 0.8653333187103271, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.8709999918937683, 0.8690000176429749, 0.8686666488647461, 0.8653333187103271, 0.8733333349227905, 0.8679999709129333, 0.8709999918937683, 0.8706666827201843, 0.8703333139419556, 0.8693333268165588]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8571428656578064, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224817991256714, 1.8662108182907104, 1.3927128314971924, 1.094899296760559, 0.9380393624305725, 0.8436195850372314, 0.7768115401268005, 0.7221987247467041, 0.6800410747528076, 0.6543737053871155, 0.6271187663078308, 0.6050365567207336, 0.5882116556167603, 0.5724074840545654, 0.5557473301887512, 0.5350956320762634, 0.5274591445922852, 0.5078237652778625, 0.4916461408138275, 0.48401138186454773, 0.4795899987220764, 0.4598437547683716, 0.45390674471855164, 0.4456809461116791, 0.4342396855354309, 0.42827609181404114, 0.42004260420799255, 0.41648250818252563, 0.40190133452415466, 0.4099709391593933, 0.3978654444217682, 0.3929111063480377, 0.3924159109592438, 0.3817097842693329, 0.368203729391098, 0.3577885627746582, 0.35808679461479187, 0.3510632812976837, 0.3480951488018036, 0.3415382504463196, 0.32804349064826965, 0.3276962637901306, 0.32822996377944946, 0.3189712166786194, 0.3142136335372925, 0.307654470205307, 0.3107708990573883, 0.30913466215133667, 0.30142438411712646, 0.2933501601219177, 0.2881219685077667, 0.2848481237888336, 0.28198620676994324, 0.27729150652885437, 0.26896971464157104, 0.26635855436325073, 0.27057161927223206, 0.2634187936782837, 0.2594825029373169, 0.2594756782054901, 0.2486722320318222, 0.2542722523212433, 0.24813351035118103, 0.2409900724887848, 0.23510031402111053, 0.23831135034561157, 0.2297578603029251, 0.23019379377365112, 0.22317424416542053, 0.22830922901630402, 0.2201978862285614, 0.2204875499010086, 0.21053753793239594, 0.2076338827610016, 0.20748482644557953, 0.20081177353858948, 0.20343098044395447, 0.19262991845607758, 0.1869809329509735, 0.19703321158885956, 0.1924881786108017, 0.18016678094863892, 0.17623378336429596], "accuracy": [0.2723550498485565, 0.4881785809993744, 0.5688812732696533, 0.6169594526290894, 0.6650376319885254, 0.698190450668335, 0.722229540348053, 0.7387399077415466, 0.7530049085617065, 0.7607977986335754, 0.7708360552787781, 0.7847048044204712, 0.7882710099220276, 0.7947431206703186, 0.8014793395996094, 0.8098005652427673, 0.806630551815033, 0.8178576231002808, 0.8253863453865051, 0.8253863453865051, 0.828820526599884, 0.8345000743865967, 0.8345000743865967, 0.8393871188163757, 0.844010055065155, 0.8481045961380005, 0.8488970994949341, 0.848368763923645, 0.8535200357437134, 0.8535200357437134, 0.8564258217811584, 0.8578787446022034, 0.8623695969581604, 0.8615770936012268, 0.863558292388916, 0.871879518032074, 0.870030403137207, 0.876370370388031, 0.8722757697105408, 0.8772949576377869, 0.8794082403182983, 0.8791441321372986, 0.8835028409957886, 0.8841632604598999, 0.8886540532112122, 0.8856161832809448, 0.887201189994812, 0.885219931602478, 0.8893144726753235, 0.8891823887825012, 0.8948619961738586, 0.8960506916046143, 0.8956544995307922, 0.897899866104126, 0.9027869701385498, 0.9033153057098389, 0.902390718460083, 0.902390718460083, 0.9054285883903503, 0.9074098467826843, 0.9089948534965515, 0.9082023501396179, 0.908730685710907, 0.9079381823539734, 0.9119006991386414, 0.913617730140686, 0.9174481630325317, 0.9158631563186646, 0.9178444147109985, 0.9145423173904419, 0.919561505317688, 0.9171839952468872, 0.9191652536392212, 0.9211464524269104, 0.9237881302833557, 0.9247127175331116, 0.9228635430335999, 0.9310526847839355, 0.930788516998291, 0.9273543953895569, 0.9293355941772461, 0.9298639297485352, 0.9364681243896484], "val_loss": [2.037879705429077, 1.5118197202682495, 1.0367563962936401, 0.8293663859367371, 0.7421932220458984, 0.6946009397506714, 0.6422101855278015, 0.6045486330986023, 0.5775646567344666, 0.5567935109138489, 0.5389326810836792, 0.5207247734069824, 0.509495735168457, 0.4935586750507355, 0.4816356599330902, 0.4716557562351227, 0.4631185233592987, 0.45371517539024353, 0.44527170062065125, 0.44362589716911316, 0.4314424693584442, 0.4226061701774597, 0.4167046844959259, 0.4141973853111267, 0.4119093418121338, 0.40467309951782227, 0.4018726348876953, 0.3993034362792969, 0.3939625918865204, 0.397841215133667, 0.3923586308956146, 0.3859049379825592, 0.38706454634666443, 0.385170578956604, 0.38062524795532227, 0.37691405415534973, 0.372913122177124, 0.37276601791381836, 0.36631307005882263, 0.36662548780441284, 0.3637841045856476, 0.3668457567691803, 0.35823574662208557, 0.3603101372718811, 0.3574651777744293, 0.3568068742752075, 0.35963672399520874, 0.3577274978160858, 0.3560895621776581, 0.35036295652389526, 0.35228630900382996, 0.35272282361984253, 0.350058913230896, 0.35071468353271484, 0.35178348422050476, 0.34930166602134705, 0.3454606235027313, 0.3448370099067688, 0.34338483214378357, 0.3460501432418823, 0.34583786129951477, 0.3436310291290283, 0.3499743342399597, 0.34535226225852966, 0.34663447737693787, 0.34770527482032776, 0.34590470790863037, 0.34707406163215637, 0.35267481207847595, 0.3474687933921814, 0.3530809283256531, 0.34519287943840027, 0.3467404842376709, 0.346348375082016, 0.34767481684684753, 0.3463578224182129, 0.34972265362739563, 0.34848031401634216, 0.3545028567314148, 0.35523611307144165, 0.35048404335975647, 0.3511790633201599, 0.3585264980792999], "val_accuracy": [0.5230000019073486, 0.6456666588783264, 0.6783333420753479, 0.7073333263397217, 0.7300000190734863, 0.7403333187103271, 0.7586666941642761, 0.7680000066757202, 0.7796666622161865, 0.7870000004768372, 0.7929999828338623, 0.8040000200271606, 0.8130000233650208, 0.8163333535194397, 0.8223333358764648, 0.8273333311080933, 0.8316666483879089, 0.8363333344459534, 0.8393333554267883, 0.840666651725769, 0.8496666550636292, 0.8533333539962769, 0.8539999723434448, 0.8526666760444641, 0.847000002861023, 0.8556666374206543, 0.8610000014305115, 0.862666666507721, 0.8606666922569275, 0.8576666712760925, 0.8676666617393494, 0.8646666407585144, 0.8569999933242798, 0.8629999756813049, 0.8713333606719971, 0.8676666617393494, 0.8723333477973938, 0.8713333606719971, 0.8703333139419556, 0.875, 0.8733333349227905, 0.8726666569709778, 0.8763333559036255, 0.8773333430290222, 0.8773333430290222, 0.8793333172798157, 0.8733333349227905, 0.8766666650772095, 0.878000020980835, 0.8796666860580444, 0.8806666731834412, 0.8813333511352539, 0.878000020980835, 0.8793333172798157, 0.878000020980835, 0.8809999823570251, 0.8833333253860474, 0.8836666941642761, 0.8816666603088379, 0.8809999823570251, 0.8843333125114441, 0.8866666555404663, 0.8830000162124634, 0.8856666684150696, 0.8833333253860474, 0.8853333592414856, 0.8870000243186951, 0.8859999775886536, 0.8833333253860474, 0.8843333125114441, 0.8836666941642761, 0.887666642665863, 0.8870000243186951, 0.8889999985694885, 0.8883333206176758, 0.8883333206176758, 0.887666642665863, 0.890999972820282, 0.8886666893959045, 0.8853333592414856, 0.8863333463668823, 0.890999972820282, 0.8899999856948853]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 3, 0, 3], [16, 16], [0, 1, 1], [6], [0, 1], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 1, 4, 1, 3, 2, 8], [0, 0, 0, 3, 0, 2, 3, 1, 4, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 3, 1, 2, 1, 21, 11, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(beta, sigma)))), alpha), tf.math.add(tf.math.sqrt(grad), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [25, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1], [2, 2, 3, 0, 3, 5, 7, 8, 6, 2, 8, 0, 8], [0, 2, 0, 3, 2, 2, 1, 2], [16, 16], [0, 1], [5], [0], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 4, 1, 2, 0], [16, 99, 49, 99, 44, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 21, 13, 8, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(grad, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(tf.math.sqrt(tf.math.negative(tf.math.sqrt(beta))), beta), alpha)))))), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.pow(sigma, tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), grad))), alpha))), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 5], [0, 2, 0, 2], [91, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 0], [0, 2, 3, 8, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [0, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 3]], "fitness": -0.09971428662538528, "mapping_values": [1, 4, 2, 2, 1, 1, 0, 1, 1, 2, 1, 1, 1, 17, 9, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.pow(sigma, tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))), alpha))))", "other_info": {"loss": [476698247168.0, 537252495360.0, 540571860992.0, 542950785024.0, 544284540928.0, 551199309824.0], "accuracy": [0.10566636174917221, 0.11927089840173721, 0.10976093262434006, 0.11002509295940399, 0.10527011007070541, 0.10606260597705841], "val_loss": [392416264192.0, 392416264192.0, 392416264192.0, 392416264192.0, 392416264192.0, 392416264192.0], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3, 5], [0, 1, 1, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 2, 6, 4, 1, 4, 2, 8, 6, 5], [0, 0, 0, 3, 0, 0, 1, 1, 2, 0, 5, 0], [16, 99, 96, 99, 61, 1, 66]], "fitness": -0.09228571504354477, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.square(alpha), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(tf.math.sqrt(sigma), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), alpha), tf.math.divide_no_nan(alpha, beta)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.square(grad)), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.309410333633423, 2.309725284576416, 2.309770345687866, 2.310757637023926, 2.3103811740875244, 2.30985951423645], "accuracy": [0.0940430611371994, 0.08757099509239197, 0.09985470771789551, 0.09351472556591034, 0.09285431355237961, 0.09192973375320435], "val_loss": [2.3078861236572266, 2.3078861236572266, 2.3078861236572266, 2.3078861236572266, 2.3078861236572266, 2.3078861236572266], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}, "mapping_values": [1, 10, 6, 4, 1, 7, 4, 3, 2, 2, 1, 1, 1, 25, 13, 12, 7], "tree_depth": 23}]