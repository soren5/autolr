[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8822857141494751, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585750579834, 1.8655762672424316, 1.394430160522461, 1.0773245096206665, 0.9378393888473511, 0.8425824046134949, 0.7776632308959961, 0.736241340637207, 0.6971188187599182, 0.6732122302055359, 0.644855797290802, 0.6276965141296387, 0.6100340485572815, 0.5899673104286194, 0.5746485590934753, 0.5484329462051392, 0.5425268411636353, 0.5357900857925415, 0.5214410424232483, 0.5127171874046326, 0.4895091950893402, 0.4932740032672882, 0.48551443219184875, 0.47113916277885437, 0.46571049094200134, 0.450914591550827, 0.438728004693985, 0.4414178729057312, 0.4245515465736389, 0.4182806611061096, 0.4126766324043274, 0.41352686285972595, 0.4031256139278412, 0.40064555406570435, 0.3982388377189636, 0.38566267490386963, 0.38400527834892273, 0.3741128146648407, 0.36422181129455566, 0.36170411109924316, 0.35991787910461426, 0.35666367411613464, 0.3521813750267029, 0.34583958983421326, 0.34736087918281555, 0.34181836247444153, 0.33650368452072144, 0.33141741156578064, 0.3230496346950531, 0.3225416839122772, 0.315096914768219, 0.3059031665325165, 0.3058394491672516, 0.3017319440841675, 0.29568877816200256, 0.2933836281299591, 0.28774771094322205, 0.2856961190700531, 0.2802303731441498, 0.2779994010925293, 0.274711549282074, 0.2719985842704773, 0.2586328387260437, 0.2598455548286438, 0.2622571289539337, 0.25739434361457825, 0.2502012252807617, 0.2544722855091095, 0.24556587636470795, 0.24580754339694977, 0.23948103189468384, 0.23949603736400604, 0.23484042286872864, 0.22871272265911102, 0.2256491780281067, 0.22479403018951416, 0.21744707226753235, 0.21390178799629211, 0.21272219717502594], "accuracy": [0.2785629332065582, 0.49451854825019836, 0.559899628162384, 0.6215823292732239, 0.6654338836669922, 0.6950204968452454, 0.7181349992752075, 0.7322678565979004, 0.7441553473472595, 0.7483819723129272, 0.7627789974212646, 0.7717606425285339, 0.7728173136711121, 0.78113853931427, 0.7882710099220276, 0.7993659973144531, 0.7976489067077637, 0.8074230551719666, 0.8128384351730347, 0.8198388814926147, 0.8212917447090149, 0.819970965385437, 0.8272355198860168, 0.8350284099578857, 0.8305375576019287, 0.8387266993522644, 0.846387505531311, 0.8433496356010437, 0.8504821062088013, 0.8524633646011353, 0.8535200357437134, 0.854708731174469, 0.856689989566803, 0.8551049828529358, 0.8593316674232483, 0.8615770936012268, 0.8628978729248047, 0.8702945709228516, 0.8691058158874512, 0.871879518032074, 0.8722757697105408, 0.8691058158874512, 0.8733324408531189, 0.8800686597824097, 0.8795403242111206, 0.8755778670310974, 0.8768987059593201, 0.8829745054244995, 0.8824461698532104, 0.8823140859603882, 0.887201189994812, 0.8897107243537903, 0.8889182209968567, 0.8927486538887024, 0.8902390599250793, 0.8953903317451477, 0.8980319499969482, 0.8976356983184814, 0.900409460067749, 0.89552241563797, 0.9025228023529053, 0.8989565372467041, 0.9056927561759949, 0.9085986018180847, 0.9030511379241943, 0.9066173434257507, 0.9101836085319519, 0.9083344340324402, 0.909259021282196, 0.9099194407463074, 0.9126931428909302, 0.9140139818191528, 0.9119006991386414, 0.9171839952468872, 0.9169198274612427, 0.9185048341751099, 0.9218068718910217, 0.9185048341751099, 0.9196935892105103], "val_loss": [2.033445358276367, 1.5042319297790527, 1.0271512269973755, 0.8147247433662415, 0.7278039455413818, 0.68117356300354, 0.6306353211402893, 0.5966841578483582, 0.5751398801803589, 0.5460951328277588, 0.5314993858337402, 0.509799063205719, 0.4957965612411499, 0.4792602062225342, 0.46671679615974426, 0.45267683267593384, 0.4441072940826416, 0.4356139600276947, 0.42943108081817627, 0.4255247414112091, 0.41811680793762207, 0.4163394272327423, 0.39929893612861633, 0.3969916105270386, 0.39089226722717285, 0.387652188539505, 0.3844633102416992, 0.3824205696582794, 0.3749690353870392, 0.3701930642127991, 0.36967378854751587, 0.36689504981040955, 0.3585263788700104, 0.3587398827075958, 0.36267170310020447, 0.3561091423034668, 0.35379692912101746, 0.3499273955821991, 0.34701839089393616, 0.3467637896537781, 0.3424672484397888, 0.33951225876808167, 0.3386255204677582, 0.34044384956359863, 0.33945050835609436, 0.33684298396110535, 0.3322163224220276, 0.33181649446487427, 0.32827115058898926, 0.3312568664550781, 0.3297465741634369, 0.3256674110889435, 0.3234780728816986, 0.32119208574295044, 0.3232716917991638, 0.3209094703197479, 0.31944912672042847, 0.3157532513141632, 0.3144265413284302, 0.31676045060157776, 0.31425556540489197, 0.3131799101829529, 0.3147056996822357, 0.3154993951320648, 0.31771615147590637, 0.31545644998550415, 0.3127000629901886, 0.31382524967193604, 0.31026333570480347, 0.3147730529308319, 0.30829918384552, 0.3107443153858185, 0.31316936016082764, 0.30297672748565674, 0.30325081944465637, 0.30436232686042786, 0.3072424829006195, 0.30681705474853516, 0.3061434030532837], "val_accuracy": [0.5526666641235352, 0.6666666865348816, 0.687333345413208, 0.7083333134651184, 0.731333315372467, 0.7446666955947876, 0.7606666684150696, 0.762666642665863, 0.7873333096504211, 0.7889999747276306, 0.7973333597183228, 0.8056666851043701, 0.8193333148956299, 0.8259999752044678, 0.8289999961853027, 0.8410000205039978, 0.8453333377838135, 0.8450000286102295, 0.8489999771118164, 0.847000002861023, 0.8516666889190674, 0.856333315372467, 0.859333336353302, 0.856333315372467, 0.8633333444595337, 0.8640000224113464, 0.8656666874885559, 0.8646666407585144, 0.8679999709129333, 0.8696666955947876, 0.8640000224113464, 0.8686666488647461, 0.8713333606719971, 0.8709999918937683, 0.8703333139419556, 0.8723333477973938, 0.871999979019165, 0.874666690826416, 0.8723333477973938, 0.8759999871253967, 0.8726666569709778, 0.875333309173584, 0.8790000081062317, 0.8756666779518127, 0.8726666569709778, 0.8769999742507935, 0.8796666860580444, 0.8796666860580444, 0.8806666731834412, 0.8793333172798157, 0.8813333511352539, 0.8840000033378601, 0.8840000033378601, 0.8843333125114441, 0.8809999823570251, 0.8856666684150696, 0.8866666555404663, 0.8833333253860474, 0.8866666555404663, 0.8843333125114441, 0.8856666684150696, 0.8880000114440918, 0.887333333492279, 0.8883333206176758, 0.8866666555404663, 0.8896666765213013, 0.8863333463668823, 0.8853333592414856, 0.890999972820282, 0.8870000243186951, 0.8883333206176758, 0.8883333206176758, 0.8916666507720947, 0.8939999938011169, 0.8896666765213013, 0.8916666507720947, 0.890999972820282, 0.8926666378974915, 0.8913333415985107]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8588571548461914, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2240264415740967, 1.8667538166046143, 1.3850488662719727, 1.088887333869934, 0.9426868557929993, 0.828705370426178, 0.7669299244880676, 0.7284414768218994, 0.6924294233322144, 0.6567511558532715, 0.6245921850204468, 0.6162189245223999, 0.5936030745506287, 0.5801464915275574, 0.5642597675323486, 0.5504044890403748, 0.5346048474311829, 0.5235586762428284, 0.5136751532554626, 0.49631091952323914, 0.4936327338218689, 0.4794063866138458, 0.4681621491909027, 0.4532337784767151, 0.44526463747024536, 0.4409775137901306, 0.438594251871109, 0.4290143847465515, 0.42368656396865845, 0.4134339690208435, 0.4072253108024597, 0.4092480540275574, 0.3932279348373413, 0.3851695954799652, 0.38150742650032043, 0.38038915395736694, 0.3720353841781616, 0.36934205889701843, 0.36242857575416565, 0.35220032930374146, 0.35219278931617737, 0.3442416489124298, 0.33494365215301514, 0.33399498462677, 0.32497403025627136, 0.32986944913864136, 0.3224860727787018, 0.3206705152988434, 0.3119392693042755, 0.3134002387523651, 0.3048504889011383, 0.2970655560493469, 0.29089704155921936, 0.2860364615917206, 0.2841675579547882, 0.2833096981048584, 0.2820248603820801, 0.2690678536891937, 0.26791104674339294, 0.2637867033481598, 0.2620105743408203, 0.253292441368103, 0.25455769896507263, 0.2489544302225113], "accuracy": [0.2779025137424469, 0.4822348356246948, 0.570730447769165, 0.6222427487373352, 0.6653017997741699, 0.7069079279899597, 0.728701651096344, 0.7366266250610352, 0.7493065595626831, 0.7623828053474426, 0.7709681391716003, 0.7749306559562683, 0.7860256433486938, 0.7873464822769165, 0.7955356240272522, 0.7964601516723633, 0.8086118102073669, 0.8112534880638123, 0.8140271902084351, 0.8214238286018372, 0.8193105459213257, 0.8294808864593506, 0.8321225643157959, 0.8317263126373291, 0.8374059200286865, 0.8426892161369324, 0.8381983637809753, 0.8450667262077332, 0.8502179384231567, 0.8488970994949341, 0.854708731174469, 0.8515387773513794, 0.8561616539955139, 0.8576145768165588, 0.8639545440673828, 0.859199583530426, 0.867520809173584, 0.8661999702453613, 0.8712190985679626, 0.873860776424408, 0.8708229064941406, 0.8772949576377869, 0.8794082403182983, 0.8784837126731873, 0.8840311765670776, 0.8833707571029663, 0.8784837126731873, 0.8828424215316772, 0.8864086866378784, 0.8861445188522339, 0.8881257176399231, 0.8934090733528137, 0.8977677822113037, 0.894069492816925, 0.8968431949615479, 0.8990886211395264, 0.8972394466400146, 0.9043719172477722, 0.9002773761749268, 0.9030511379241943, 0.9027869701385498, 0.9101836085319519, 0.9055606722831726, 0.9111081957817078], "val_loss": [2.0395865440368652, 1.5196008682250977, 1.0479326248168945, 0.848058819770813, 0.7589051127433777, 0.7009782195091248, 0.6583051681518555, 0.626466691493988, 0.596763014793396, 0.5775339603424072, 0.5527104735374451, 0.5450593829154968, 0.5274654030799866, 0.5153483748435974, 0.5116117000579834, 0.49232813715934753, 0.49136388301849365, 0.47521263360977173, 0.46791255474090576, 0.46397191286087036, 0.4506677985191345, 0.44590941071510315, 0.44031620025634766, 0.4357978403568268, 0.43228819966316223, 0.4236671030521393, 0.42304134368896484, 0.4205937385559082, 0.4184517562389374, 0.40892863273620605, 0.4108350872993469, 0.40651166439056396, 0.39968612790107727, 0.3951563835144043, 0.3957832157611847, 0.39516720175743103, 0.3926953077316284, 0.3900814354419708, 0.3854976296424866, 0.3818366229534149, 0.3786883056163788, 0.3779457211494446, 0.3804936408996582, 0.3712436854839325, 0.37114179134368896, 0.37604859471321106, 0.3745024502277374, 0.3638851046562195, 0.37221643328666687, 0.3688029646873474, 0.36702677607536316, 0.36068645119667053, 0.3576582372188568, 0.36270540952682495, 0.3560936748981476, 0.35996314883232117, 0.35910749435424805, 0.35778185725212097, 0.3544480502605438, 0.36473625898361206, 0.35390982031822205, 0.3505103290081024, 0.3540741503238678, 0.3564096689224243], "val_accuracy": [0.5536666512489319, 0.6486666798591614, 0.6733333468437195, 0.7020000219345093, 0.7239999771118164, 0.7369999885559082, 0.75, 0.7609999775886536, 0.7726666927337646, 0.7823333144187927, 0.7916666865348816, 0.7953333258628845, 0.8040000200271606, 0.8083333373069763, 0.809333324432373, 0.8190000057220459, 0.8186666369438171, 0.824999988079071, 0.8333333134651184, 0.8336666822433472, 0.8393333554267883, 0.8450000286102295, 0.8443333506584167, 0.8486666679382324, 0.8460000157356262, 0.8519999980926514, 0.8539999723434448, 0.8523333072662354, 0.8513333201408386, 0.8553333282470703, 0.8576666712760925, 0.8550000190734863, 0.859666645526886, 0.8619999885559082, 0.8616666793823242, 0.8603333234786987, 0.8613333106040955, 0.8656666874885559, 0.8669999837875366, 0.8676666617393494, 0.8690000176429749, 0.8703333139419556, 0.8663333058357239, 0.8690000176429749, 0.871999979019165, 0.8696666955947876, 0.8709999918937683, 0.8756666779518127, 0.8733333349227905, 0.8736666440963745, 0.8743333220481873, 0.878000020980835, 0.8790000081062317, 0.8796666860580444, 0.8793333172798157, 0.8730000257492065, 0.874666690826416, 0.8793333172798157, 0.8849999904632568, 0.878333330154419, 0.8809999823570251, 0.8840000033378601, 0.8786666393280029, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [52, 16], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [4, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 20, 96, 99, 61, 1]], "fitness": -0.7628571391105652, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3558614253997803, 2.259307622909546, 5.20193338394165, 2.2207775115966797, 2.1456496715545654, 1.923912763595581, 1.6911368370056152, 1.5246418714523315, 1.2007050514221191, 1.4500837326049805, 1.1178818941116333, 1.162480115890503, 1.008872151374817, 0.896146833896637, 0.8761191964149475, 0.8002692461013794, 0.7874734401702881, 0.707302987575531, 0.7577342987060547, 0.6806222796440125, 0.6618251800537109, 0.6568906307220459, 0.6775383949279785], "accuracy": [0.18478403985500336, 0.15374454855918884, 0.22533351182937622, 0.18491612374782562, 0.27380794286727905, 0.35820895433425903, 0.462950736284256, 0.4850085973739624, 0.5910711884498596, 0.520142674446106, 0.6092986464500427, 0.6075815558433533, 0.635451078414917, 0.6819442510604858, 0.6880200505256653, 0.7084929347038269, 0.7136441469192505, 0.7396644949913025, 0.7232862114906311, 0.7473253011703491, 0.7557786107063293, 0.7585523724555969, 0.7460044622421265], "val_loss": [2.2939956188201904, 2.0059776306152344, 2.321592092514038, 1.5833032131195068, 1.9152928590774536, 1.3886758089065552, 1.5968695878982544, 1.0475839376449585, 1.4804450273513794, 1.030696153640747, 1.0830020904541016, 0.8725107312202454, 0.8817974328994751, 0.79606032371521, 0.6406325697898865, 0.6941123604774475, 0.6176817417144775, 0.6080484390258789, 0.6167879700660706, 0.5977725386619568, 0.5797545313835144, 0.6565985679626465, 3.850390911102295], "val_accuracy": [0.21066667139530182, 0.3140000104904175, 0.09866666793823242, 0.4336666762828827, 0.3779999911785126, 0.5640000104904175, 0.4970000088214874, 0.6349999904632568, 0.42933332920074463, 0.6513333320617676, 0.6263333559036255, 0.6909999847412109, 0.6340000033378601, 0.7126666903495789, 0.765999972820282, 0.7476666569709778, 0.7833333611488342, 0.7889999747276306, 0.7730000019073486, 0.7786666750907898, 0.7876666784286499, 0.737666666507721, 0.7739999890327454]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 1, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1], [0, 2, 3, 0, 2, 1, 1, 9], [0, 2, 0, 3, 3], [16, 16, 4], [0, 1], [0], [0], [78], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 4, 4, 2, 8], [0, 4, 0, 2, 0, 0, 4, 1, 2, 0], [16, 99, 82, 99, 61, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 0, 13, 8, 5, 3, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.subtract(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), grad), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), beta))), tf.math.pow(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), grad)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 0, 0, 2], [39, 39, 86], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 6, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 3, 0, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [47, 38, 96, 31, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 3, 6, 3, 3, 2, 2, 1, 1, 1, 18, 9, 9, 5], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.math.pow(tf.math.subtract(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), sigma)), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))), alpha), beta)", "other_info": {"loss": [4504933214715904.0, 677559.375, 2.3751537799835205, 2.371138095855713, 2.369577169418335, 2.3689699172973633], "accuracy": [0.09430722147226334, 0.1026284471154213, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [5114858.5, 2.352781295776367, 2.3604774475097656, 2.3674583435058594, 2.3716161251068115, 2.3746044635772705], "val_accuracy": [0.10066666454076767, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1], [0, 2, 5, 0, 3], [0, 2, 0, 0], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 9, 3, 5], [0, 0, 0, 3], [16, 16, 52], [0, 1], [8], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 5, 9, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [86, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 1, 6, 4, 2, 3, 2, 1, 1, 1, 11, 6, 5, 4], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.square(sigma)), tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3040926456451416, 2.3025853633880615, 2.3025853633880615, 2.3025858402252197, 2.3025872707366943, 2.302593469619751], "accuracy": [0.09787346422672272, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025848865509033, 2.3025856018066406, 2.3025858402252197, 2.3025858402252197, 2.302586793899536, 2.302588939666748], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}]