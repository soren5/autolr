[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8822857141494751, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585750579834, 1.8655762672424316, 1.394430160522461, 1.0773245096206665, 0.9378393888473511, 0.8425824046134949, 0.7776632308959961, 0.736241340637207, 0.6971188187599182, 0.6732122302055359, 0.644855797290802, 0.6276965141296387, 0.6100340485572815, 0.5899673104286194, 0.5746485590934753, 0.5484329462051392, 0.5425268411636353, 0.5357900857925415, 0.5214410424232483, 0.5127171874046326, 0.4895091950893402, 0.4932740032672882, 0.48551443219184875, 0.47113916277885437, 0.46571049094200134, 0.450914591550827, 0.438728004693985, 0.4414178729057312, 0.4245515465736389, 0.4182806611061096, 0.4126766324043274, 0.41352686285972595, 0.4031256139278412, 0.40064555406570435, 0.3982388377189636, 0.38566267490386963, 0.38400527834892273, 0.3741128146648407, 0.36422181129455566, 0.36170411109924316, 0.35991787910461426, 0.35666367411613464, 0.3521813750267029, 0.34583958983421326, 0.34736087918281555, 0.34181836247444153, 0.33650368452072144, 0.33141741156578064, 0.3230496346950531, 0.3225416839122772, 0.315096914768219, 0.3059031665325165, 0.3058394491672516, 0.3017319440841675, 0.29568877816200256, 0.2933836281299591, 0.28774771094322205, 0.2856961190700531, 0.2802303731441498, 0.2779994010925293, 0.274711549282074, 0.2719985842704773, 0.2586328387260437, 0.2598455548286438, 0.2622571289539337, 0.25739434361457825, 0.2502012252807617, 0.2544722855091095, 0.24556587636470795, 0.24580754339694977, 0.23948103189468384, 0.23949603736400604, 0.23484042286872864, 0.22871272265911102, 0.2256491780281067, 0.22479403018951416, 0.21744707226753235, 0.21390178799629211, 0.21272219717502594], "accuracy": [0.2785629332065582, 0.49451854825019836, 0.559899628162384, 0.6215823292732239, 0.6654338836669922, 0.6950204968452454, 0.7181349992752075, 0.7322678565979004, 0.7441553473472595, 0.7483819723129272, 0.7627789974212646, 0.7717606425285339, 0.7728173136711121, 0.78113853931427, 0.7882710099220276, 0.7993659973144531, 0.7976489067077637, 0.8074230551719666, 0.8128384351730347, 0.8198388814926147, 0.8212917447090149, 0.819970965385437, 0.8272355198860168, 0.8350284099578857, 0.8305375576019287, 0.8387266993522644, 0.846387505531311, 0.8433496356010437, 0.8504821062088013, 0.8524633646011353, 0.8535200357437134, 0.854708731174469, 0.856689989566803, 0.8551049828529358, 0.8593316674232483, 0.8615770936012268, 0.8628978729248047, 0.8702945709228516, 0.8691058158874512, 0.871879518032074, 0.8722757697105408, 0.8691058158874512, 0.8733324408531189, 0.8800686597824097, 0.8795403242111206, 0.8755778670310974, 0.8768987059593201, 0.8829745054244995, 0.8824461698532104, 0.8823140859603882, 0.887201189994812, 0.8897107243537903, 0.8889182209968567, 0.8927486538887024, 0.8902390599250793, 0.8953903317451477, 0.8980319499969482, 0.8976356983184814, 0.900409460067749, 0.89552241563797, 0.9025228023529053, 0.8989565372467041, 0.9056927561759949, 0.9085986018180847, 0.9030511379241943, 0.9066173434257507, 0.9101836085319519, 0.9083344340324402, 0.909259021282196, 0.9099194407463074, 0.9126931428909302, 0.9140139818191528, 0.9119006991386414, 0.9171839952468872, 0.9169198274612427, 0.9185048341751099, 0.9218068718910217, 0.9185048341751099, 0.9196935892105103], "val_loss": [2.033445358276367, 1.5042319297790527, 1.0271512269973755, 0.8147247433662415, 0.7278039455413818, 0.68117356300354, 0.6306353211402893, 0.5966841578483582, 0.5751398801803589, 0.5460951328277588, 0.5314993858337402, 0.509799063205719, 0.4957965612411499, 0.4792602062225342, 0.46671679615974426, 0.45267683267593384, 0.4441072940826416, 0.4356139600276947, 0.42943108081817627, 0.4255247414112091, 0.41811680793762207, 0.4163394272327423, 0.39929893612861633, 0.3969916105270386, 0.39089226722717285, 0.387652188539505, 0.3844633102416992, 0.3824205696582794, 0.3749690353870392, 0.3701930642127991, 0.36967378854751587, 0.36689504981040955, 0.3585263788700104, 0.3587398827075958, 0.36267170310020447, 0.3561091423034668, 0.35379692912101746, 0.3499273955821991, 0.34701839089393616, 0.3467637896537781, 0.3424672484397888, 0.33951225876808167, 0.3386255204677582, 0.34044384956359863, 0.33945050835609436, 0.33684298396110535, 0.3322163224220276, 0.33181649446487427, 0.32827115058898926, 0.3312568664550781, 0.3297465741634369, 0.3256674110889435, 0.3234780728816986, 0.32119208574295044, 0.3232716917991638, 0.3209094703197479, 0.31944912672042847, 0.3157532513141632, 0.3144265413284302, 0.31676045060157776, 0.31425556540489197, 0.3131799101829529, 0.3147056996822357, 0.3154993951320648, 0.31771615147590637, 0.31545644998550415, 0.3127000629901886, 0.31382524967193604, 0.31026333570480347, 0.3147730529308319, 0.30829918384552, 0.3107443153858185, 0.31316936016082764, 0.30297672748565674, 0.30325081944465637, 0.30436232686042786, 0.3072424829006195, 0.30681705474853516, 0.3061434030532837], "val_accuracy": [0.5526666641235352, 0.6666666865348816, 0.687333345413208, 0.7083333134651184, 0.731333315372467, 0.7446666955947876, 0.7606666684150696, 0.762666642665863, 0.7873333096504211, 0.7889999747276306, 0.7973333597183228, 0.8056666851043701, 0.8193333148956299, 0.8259999752044678, 0.8289999961853027, 0.8410000205039978, 0.8453333377838135, 0.8450000286102295, 0.8489999771118164, 0.847000002861023, 0.8516666889190674, 0.856333315372467, 0.859333336353302, 0.856333315372467, 0.8633333444595337, 0.8640000224113464, 0.8656666874885559, 0.8646666407585144, 0.8679999709129333, 0.8696666955947876, 0.8640000224113464, 0.8686666488647461, 0.8713333606719971, 0.8709999918937683, 0.8703333139419556, 0.8723333477973938, 0.871999979019165, 0.874666690826416, 0.8723333477973938, 0.8759999871253967, 0.8726666569709778, 0.875333309173584, 0.8790000081062317, 0.8756666779518127, 0.8726666569709778, 0.8769999742507935, 0.8796666860580444, 0.8796666860580444, 0.8806666731834412, 0.8793333172798157, 0.8813333511352539, 0.8840000033378601, 0.8840000033378601, 0.8843333125114441, 0.8809999823570251, 0.8856666684150696, 0.8866666555404663, 0.8833333253860474, 0.8866666555404663, 0.8843333125114441, 0.8856666684150696, 0.8880000114440918, 0.887333333492279, 0.8883333206176758, 0.8866666555404663, 0.8896666765213013, 0.8863333463668823, 0.8853333592414856, 0.890999972820282, 0.8870000243186951, 0.8883333206176758, 0.8883333206176758, 0.8916666507720947, 0.8939999938011169, 0.8896666765213013, 0.8916666507720947, 0.890999972820282, 0.8926666378974915, 0.8913333415985107]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8594285845756531, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2244656085968018, 1.8666273355484009, 1.3961267471313477, 1.0921489000320435, 0.9307295680046082, 0.8374356627464294, 0.768620491027832, 0.7230736613273621, 0.6885749101638794, 0.6559967994689941, 0.6332623362541199, 0.6096586585044861, 0.598513126373291, 0.5754628777503967, 0.5538808107376099, 0.5474619269371033, 0.5301712155342102, 0.5167670845985413, 0.5093972086906433, 0.49890652298927307, 0.47561702132225037, 0.4822981655597687, 0.4597450792789459, 0.45272397994995117, 0.45048922300338745, 0.4416433274745941, 0.4336363673210144, 0.42509281635284424, 0.4188968539237976, 0.4106617867946625, 0.41625943779945374, 0.4002510607242584, 0.3947910964488983, 0.38185590505599976, 0.3820439577102661, 0.3732090890407562, 0.3724987804889679, 0.36693623661994934, 0.37006789445877075, 0.3616533577442169, 0.3509021997451782, 0.3493877351284027, 0.34068116545677185, 0.33640629053115845, 0.3317869305610657, 0.32157599925994873, 0.3224774897098541, 0.3235737681388855, 0.3170785903930664, 0.29990315437316895, 0.29849520325660706, 0.3053950369358063, 0.2987801432609558, 0.2955256402492523, 0.2954152822494507, 0.2864222526550293, 0.2774205207824707, 0.276778906583786, 0.27703818678855896, 0.27079251408576965, 0.26667240262031555, 0.26897940039634705, 0.26048529148101807, 0.2589437961578369, 0.25462496280670166, 0.2546107769012451], "accuracy": [0.26258090138435364, 0.49531105160713196, 0.568749189376831, 0.6207898855209351, 0.6666226387023926, 0.6983225345611572, 0.7149649858474731, 0.7375511527061462, 0.7495707273483276, 0.7629110813140869, 0.7691190242767334, 0.7773081660270691, 0.7807422876358032, 0.7890635132789612, 0.7952714562416077, 0.800818920135498, 0.8127063512802124, 0.8145555257797241, 0.8185180425643921, 0.8193105459213257, 0.8276317715644836, 0.828292191028595, 0.8401796221733093, 0.8333113193511963, 0.8388587832450867, 0.8436138033866882, 0.8454629778862, 0.8479725122451782, 0.8499537706375122, 0.8537842035293579, 0.8498216867446899, 0.8576145768165588, 0.8537842035293579, 0.8622375130653381, 0.8643507957458496, 0.8688416481018066, 0.86553955078125, 0.8708229064941406, 0.8638224601745605, 0.8713511824607849, 0.8757099509239197, 0.8734645247459412, 0.8737286925315857, 0.8819178342819214, 0.8815215826034546, 0.8853520154953003, 0.8820499181747437, 0.8835028409957886, 0.8865407705307007, 0.8906353116035461, 0.8893144726753235, 0.8878615498542786, 0.8927486538887024, 0.8910315632820129, 0.8938053250312805, 0.8943336606025696, 0.900409460067749, 0.8973715305328369, 0.8992207050323486, 0.8976356983184814, 0.9026548862457275, 0.9030511379241943, 0.90423983335495, 0.9051644206047058, 0.9085986018180847, 0.9084665179252625], "val_loss": [2.0382447242736816, 1.506778359413147, 1.0279265642166138, 0.8131570816040039, 0.7287395596504211, 0.6777239441871643, 0.6420252919197083, 0.6081730723381042, 0.5798881649971008, 0.5613185167312622, 0.5470224022865295, 0.5373170971870422, 0.5200530290603638, 0.5036737322807312, 0.49454963207244873, 0.48767411708831787, 0.47605228424072266, 0.4733280539512634, 0.4633668065071106, 0.45623111724853516, 0.4514182209968567, 0.4482186734676361, 0.43904682993888855, 0.4343438446521759, 0.42699140310287476, 0.42826974391937256, 0.42375218868255615, 0.42141687870025635, 0.4171711802482605, 0.41242170333862305, 0.40703508257865906, 0.4073907136917114, 0.39827823638916016, 0.40078040957450867, 0.3972413241863251, 0.39503881335258484, 0.3927322328090668, 0.3903445601463318, 0.3893911838531494, 0.38923388719558716, 0.38537630438804626, 0.3808738887310028, 0.3830702304840088, 0.3815130293369293, 0.3766644299030304, 0.3748517334461212, 0.37651321291923523, 0.37847110629081726, 0.3754400312900543, 0.36994311213493347, 0.3712438642978668, 0.365217924118042, 0.3689417243003845, 0.3671799600124359, 0.3641349673271179, 0.36439579725265503, 0.3624894917011261, 0.36741089820861816, 0.3605714440345764, 0.36085623502731323, 0.36079421639442444, 0.3643806576728821, 0.3573378920555115, 0.35723379254341125, 0.36321964859962463, 0.36347895860671997], "val_accuracy": [0.5339999794960022, 0.6693333387374878, 0.6926666498184204, 0.718666672706604, 0.7356666922569275, 0.7513333559036255, 0.753000020980835, 0.7706666588783264, 0.7873333096504211, 0.7983333468437195, 0.7973333597183228, 0.8116666674613953, 0.8133333325386047, 0.8226666450500488, 0.8226666450500488, 0.8303333520889282, 0.8266666531562805, 0.8303333520889282, 0.8373333215713501, 0.8416666388511658, 0.8396666646003723, 0.8386666774749756, 0.8453333377838135, 0.8463333249092102, 0.8526666760444641, 0.8500000238418579, 0.8556666374206543, 0.8566666841506958, 0.8556666374206543, 0.8526666760444641, 0.8586666584014893, 0.8560000061988831, 0.859333336353302, 0.859000027179718, 0.8579999804496765, 0.8606666922569275, 0.8616666793823242, 0.8606666922569275, 0.8633333444595337, 0.8640000224113464, 0.8633333444595337, 0.8683333396911621, 0.8663333058357239, 0.8696666955947876, 0.8673333525657654, 0.8693333268165588, 0.8696666955947876, 0.8706666827201843, 0.8690000176429749, 0.8673333525657654, 0.871666669845581, 0.874666690826416, 0.8726666569709778, 0.871666669845581, 0.8703333139419556, 0.8740000128746033, 0.8756666779518127, 0.871666669845581, 0.871666669845581, 0.8740000128746033, 0.8769999742507935, 0.8736666440963745, 0.875, 0.8759999871253967, 0.8743333220481873, 0.8743333220481873]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [4, 9, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 3, 3, 0, 3, 5], [0, 2, 0, 3], [58, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 6, 0, 6, 1, 1, 4, 1, 6, 2, 8], [0, 0, 0, 3, 1, 0, 3, 1, 2, 0], [16, 77, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 2, 10, 6, 4, 2, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.negative(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.subtract(tf.math.subtract(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), alpha), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.subtract(sigma, alpha))", "other_info": {"loss": [2.369574785232544, 2.42682147026062, 2.4404075145721436, 2.459519863128662, 2.4564671516418457, 2.469576358795166], "accuracy": [0.09919429570436478, 0.10315678268671036, 0.10553427785634995, 0.09496764093637466, 0.10236428678035736, 0.1022322028875351], "val_loss": [2.3515141010284424, 2.362805128097534, 2.3690505027770996, 2.373335361480713, 2.3765788078308105, 2.379178762435913], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 9, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1], [0, 5, 3, 0, 3, 5, 3, 2, 5, 7, 1, 3, 5, 8, 0], [3, 2, 0, 3, 1, 0, 3, 5], [16, 16], [0, 1], [0], [0], [98], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 9, 2, 8, 1], [0, 0, 0, 3, 2, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 0, 1, 23, 15, 8, 2, 2, 1, 1, 1, 21, 12, 9, 5], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.negative(grad), tf.math.multiply(tf.math.square(beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(grad), tf.math.add(alpha, tf.math.subtract(tf.math.multiply(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.sqrt(tf.math.negative(grad)))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), sigma))), tf.math.add(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), sigma), tf.math.sqrt(tf.math.subtract(alpha, beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 3, 2, 3, 6, 6, 3, 1, 4, 6, 2, 2, 2, 9, 1, 8, 6, 2, 7, 9, 8, 1], [0, 1, 2, 1, 0, 2, 1, 1, 2, 3, 3, 2, 2, 0, 2, 3, 3], [39, 39, 42, 29, 75], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1], [0, 2, 3, 0, 3, 5, 5, 4, 5], [0, 2, 0, 3, 5], [16, 16], [0, 1], [0], [0], [48], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 9, 1, 4, 1, 3, 2, 8], [0, 4, 0, 3, 0, 0, 3, 1, 2, 0], [16, 98, 96, 99, 61, 17]], "fitness": -0.09799999743700027, "mapping_values": [1, 40, 23, 17, 5, 14, 9, 5, 2, 2, 1, 1, 1, 11, 6, 5, 4], "tree_depth": 36, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.divide_no_nan(alpha, tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.math.pow(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, grad), tf.math.add(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.sqrt(grad), tf.math.divide_no_nan(grad, tf.math.add(tf.math.add(grad, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), grad))))), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))))))), grad)), tf.math.sqrt(tf.math.subtract(grad, grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.square(tf.math.pow(tf.math.square(grad), grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), grad)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2023602733423e+17, 2.5679832801083392e+17, 2.5190441893547213e+17, 2.517640078646313e+17, 2.4950696819084493e+17, 2.5533652730170573e+17], "accuracy": [0.1022322028875351, 0.10170386731624603, 0.09760929644107819, 0.10672302544116974, 0.10328886657953262, 0.10619468986988068], "val_loss": [1.7582987942454886e+17, 1.7582987942454886e+17, 1.7582987942454886e+17, 1.7582987942454886e+17, 1.7582987942454886e+17, 1.7582987942454886e+17], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 1, 1], [0, 2, 3, 4, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [20, 16], [0, 1], [0], [0], [99], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 2, 1, 6, 2, 8], [2, 0, 0, 3, 0, 0, 2, 1, 2, 0], [22, 99, 96, 99, 61, 1]], "fitness": -0.09142857044935226, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309424877166748, 2.3098461627960205, 2.3105828762054443, 2.310417652130127, 2.310220241546631, 2.310718536376953], "accuracy": [0.09166556596755981, 0.0944393053650856, 0.09153348207473755, 0.08875974267721176, 0.08836349099874496, 0.0944393053650856], "val_loss": [2.3093812465667725, 2.309356212615967, 2.3093132972717285, 2.3092565536499023, 2.3091859817504883, 2.3091013431549072], "val_accuracy": [0.08699999749660492, 0.08699999749660492, 0.08699999749660492, 0.08699999749660492, 0.08699999749660492, 0.08666666597127914]}}]