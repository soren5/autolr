[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8822857141494751, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585750579834, 1.8655762672424316, 1.394430160522461, 1.0773245096206665, 0.9378393888473511, 0.8425824046134949, 0.7776632308959961, 0.736241340637207, 0.6971188187599182, 0.6732122302055359, 0.644855797290802, 0.6276965141296387, 0.6100340485572815, 0.5899673104286194, 0.5746485590934753, 0.5484329462051392, 0.5425268411636353, 0.5357900857925415, 0.5214410424232483, 0.5127171874046326, 0.4895091950893402, 0.4932740032672882, 0.48551443219184875, 0.47113916277885437, 0.46571049094200134, 0.450914591550827, 0.438728004693985, 0.4414178729057312, 0.4245515465736389, 0.4182806611061096, 0.4126766324043274, 0.41352686285972595, 0.4031256139278412, 0.40064555406570435, 0.3982388377189636, 0.38566267490386963, 0.38400527834892273, 0.3741128146648407, 0.36422181129455566, 0.36170411109924316, 0.35991787910461426, 0.35666367411613464, 0.3521813750267029, 0.34583958983421326, 0.34736087918281555, 0.34181836247444153, 0.33650368452072144, 0.33141741156578064, 0.3230496346950531, 0.3225416839122772, 0.315096914768219, 0.3059031665325165, 0.3058394491672516, 0.3017319440841675, 0.29568877816200256, 0.2933836281299591, 0.28774771094322205, 0.2856961190700531, 0.2802303731441498, 0.2779994010925293, 0.274711549282074, 0.2719985842704773, 0.2586328387260437, 0.2598455548286438, 0.2622571289539337, 0.25739434361457825, 0.2502012252807617, 0.2544722855091095, 0.24556587636470795, 0.24580754339694977, 0.23948103189468384, 0.23949603736400604, 0.23484042286872864, 0.22871272265911102, 0.2256491780281067, 0.22479403018951416, 0.21744707226753235, 0.21390178799629211, 0.21272219717502594], "accuracy": [0.2785629332065582, 0.49451854825019836, 0.559899628162384, 0.6215823292732239, 0.6654338836669922, 0.6950204968452454, 0.7181349992752075, 0.7322678565979004, 0.7441553473472595, 0.7483819723129272, 0.7627789974212646, 0.7717606425285339, 0.7728173136711121, 0.78113853931427, 0.7882710099220276, 0.7993659973144531, 0.7976489067077637, 0.8074230551719666, 0.8128384351730347, 0.8198388814926147, 0.8212917447090149, 0.819970965385437, 0.8272355198860168, 0.8350284099578857, 0.8305375576019287, 0.8387266993522644, 0.846387505531311, 0.8433496356010437, 0.8504821062088013, 0.8524633646011353, 0.8535200357437134, 0.854708731174469, 0.856689989566803, 0.8551049828529358, 0.8593316674232483, 0.8615770936012268, 0.8628978729248047, 0.8702945709228516, 0.8691058158874512, 0.871879518032074, 0.8722757697105408, 0.8691058158874512, 0.8733324408531189, 0.8800686597824097, 0.8795403242111206, 0.8755778670310974, 0.8768987059593201, 0.8829745054244995, 0.8824461698532104, 0.8823140859603882, 0.887201189994812, 0.8897107243537903, 0.8889182209968567, 0.8927486538887024, 0.8902390599250793, 0.8953903317451477, 0.8980319499969482, 0.8976356983184814, 0.900409460067749, 0.89552241563797, 0.9025228023529053, 0.8989565372467041, 0.9056927561759949, 0.9085986018180847, 0.9030511379241943, 0.9066173434257507, 0.9101836085319519, 0.9083344340324402, 0.909259021282196, 0.9099194407463074, 0.9126931428909302, 0.9140139818191528, 0.9119006991386414, 0.9171839952468872, 0.9169198274612427, 0.9185048341751099, 0.9218068718910217, 0.9185048341751099, 0.9196935892105103], "val_loss": [2.033445358276367, 1.5042319297790527, 1.0271512269973755, 0.8147247433662415, 0.7278039455413818, 0.68117356300354, 0.6306353211402893, 0.5966841578483582, 0.5751398801803589, 0.5460951328277588, 0.5314993858337402, 0.509799063205719, 0.4957965612411499, 0.4792602062225342, 0.46671679615974426, 0.45267683267593384, 0.4441072940826416, 0.4356139600276947, 0.42943108081817627, 0.4255247414112091, 0.41811680793762207, 0.4163394272327423, 0.39929893612861633, 0.3969916105270386, 0.39089226722717285, 0.387652188539505, 0.3844633102416992, 0.3824205696582794, 0.3749690353870392, 0.3701930642127991, 0.36967378854751587, 0.36689504981040955, 0.3585263788700104, 0.3587398827075958, 0.36267170310020447, 0.3561091423034668, 0.35379692912101746, 0.3499273955821991, 0.34701839089393616, 0.3467637896537781, 0.3424672484397888, 0.33951225876808167, 0.3386255204677582, 0.34044384956359863, 0.33945050835609436, 0.33684298396110535, 0.3322163224220276, 0.33181649446487427, 0.32827115058898926, 0.3312568664550781, 0.3297465741634369, 0.3256674110889435, 0.3234780728816986, 0.32119208574295044, 0.3232716917991638, 0.3209094703197479, 0.31944912672042847, 0.3157532513141632, 0.3144265413284302, 0.31676045060157776, 0.31425556540489197, 0.3131799101829529, 0.3147056996822357, 0.3154993951320648, 0.31771615147590637, 0.31545644998550415, 0.3127000629901886, 0.31382524967193604, 0.31026333570480347, 0.3147730529308319, 0.30829918384552, 0.3107443153858185, 0.31316936016082764, 0.30297672748565674, 0.30325081944465637, 0.30436232686042786, 0.3072424829006195, 0.30681705474853516, 0.3061434030532837], "val_accuracy": [0.5526666641235352, 0.6666666865348816, 0.687333345413208, 0.7083333134651184, 0.731333315372467, 0.7446666955947876, 0.7606666684150696, 0.762666642665863, 0.7873333096504211, 0.7889999747276306, 0.7973333597183228, 0.8056666851043701, 0.8193333148956299, 0.8259999752044678, 0.8289999961853027, 0.8410000205039978, 0.8453333377838135, 0.8450000286102295, 0.8489999771118164, 0.847000002861023, 0.8516666889190674, 0.856333315372467, 0.859333336353302, 0.856333315372467, 0.8633333444595337, 0.8640000224113464, 0.8656666874885559, 0.8646666407585144, 0.8679999709129333, 0.8696666955947876, 0.8640000224113464, 0.8686666488647461, 0.8713333606719971, 0.8709999918937683, 0.8703333139419556, 0.8723333477973938, 0.871999979019165, 0.874666690826416, 0.8723333477973938, 0.8759999871253967, 0.8726666569709778, 0.875333309173584, 0.8790000081062317, 0.8756666779518127, 0.8726666569709778, 0.8769999742507935, 0.8796666860580444, 0.8796666860580444, 0.8806666731834412, 0.8793333172798157, 0.8813333511352539, 0.8840000033378601, 0.8840000033378601, 0.8843333125114441, 0.8809999823570251, 0.8856666684150696, 0.8866666555404663, 0.8833333253860474, 0.8866666555404663, 0.8843333125114441, 0.8856666684150696, 0.8880000114440918, 0.887333333492279, 0.8883333206176758, 0.8866666555404663, 0.8896666765213013, 0.8863333463668823, 0.8853333592414856, 0.890999972820282, 0.8870000243186951, 0.8883333206176758, 0.8883333206176758, 0.8916666507720947, 0.8939999938011169, 0.8896666765213013, 0.8916666507720947, 0.890999972820282, 0.8926666378974915, 0.8913333415985107]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8759999871253967, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2251057624816895, 1.876314640045166, 1.405049443244934, 1.1034847497940063, 0.939537763595581, 0.8443771004676819, 0.7868596315383911, 0.7382128238677979, 0.6994245648384094, 0.6805592775344849, 0.6510023474693298, 0.6259060502052307, 0.6163851618766785, 0.5978646278381348, 0.5803639888763428, 0.5597870945930481, 0.5466833710670471, 0.5447779297828674, 0.5263949632644653, 0.5088058114051819, 0.5040704011917114, 0.49575409293174744, 0.4833540618419647, 0.478745698928833, 0.4659675061702728, 0.46563586592674255, 0.4490852355957031, 0.44903624057769775, 0.4414127767086029, 0.4295107126235962, 0.42171043157577515, 0.42284607887268066, 0.4082213044166565, 0.4050639569759369, 0.39945146441459656, 0.3965979218482971, 0.38970908522605896, 0.38579487800598145, 0.37820205092430115, 0.3740968108177185, 0.3689541816711426, 0.3569388687610626, 0.3544771671295166, 0.35168248414993286, 0.35101011395454407, 0.3480450510978699, 0.33588606119155884, 0.33163654804229736, 0.3269157111644745, 0.3243628144264221, 0.31193381547927856, 0.32019269466400146, 0.3131352365016937, 0.30838218331336975, 0.2981685400009155, 0.2904852330684662, 0.2926223576068878, 0.2834596037864685, 0.2838170826435089, 0.2859722971916199, 0.2753327786922455, 0.2732861042022705, 0.2682356834411621, 0.26649677753448486, 0.2609066069126129, 0.26492738723754883, 0.2589706778526306, 0.2525573968887329, 0.25030744075775146], "accuracy": [0.2588825821876526, 0.4827631711959839, 0.5534275770187378, 0.6201294660568237, 0.6659622192382812, 0.6985867023468018, 0.7137762308120728, 0.7292299270629883, 0.7428345084190369, 0.7503632307052612, 0.761590301990509, 0.7744023203849792, 0.7757231593132019, 0.7836481332778931, 0.7926297783851624, 0.7991018295288086, 0.8074230551719666, 0.8029322624206543, 0.8136309385299683, 0.8212917447090149, 0.8186501264572144, 0.8235371708869934, 0.8278959393501282, 0.832650899887085, 0.8347642421722412, 0.8356888294219971, 0.8379341959953308, 0.844010055065155, 0.8446704745292664, 0.8488970994949341, 0.8520671129226685, 0.8494254350662231, 0.8539162874221802, 0.8541803956031799, 0.8618412613868713, 0.8570862412452698, 0.8609166741371155, 0.86553955078125, 0.8650112152099609, 0.8664641380310059, 0.8705587387084961, 0.8751816153526306, 0.8728041052818298, 0.8761062026023865, 0.8768987059593201, 0.8766345381736755, 0.8819178342819214, 0.8790120482444763, 0.883238673210144, 0.8844274282455444, 0.8881257176399231, 0.8850878477096558, 0.8869370222091675, 0.8883898854255676, 0.8926165699958801, 0.893541157245636, 0.8963148593902588, 0.9005415439605713, 0.8981640338897705, 0.8996169567108154, 0.9037115573883057, 0.9014661312103271, 0.9006736278533936, 0.9046360850334167, 0.9064852595329285, 0.9058248400688171, 0.9017302989959717, 0.9046360850334167, 0.9111081957817078], "val_loss": [2.0428128242492676, 1.5164096355438232, 1.0341100692749023, 0.8224162459373474, 0.7323282361030579, 0.6846418976783752, 0.6395524144172668, 0.6067869663238525, 0.5760564208030701, 0.5591626763343811, 0.5402541160583496, 0.5243145227432251, 0.5118902325630188, 0.49885261058807373, 0.4864775836467743, 0.48198631405830383, 0.46944019198417664, 0.46429532766342163, 0.4593904912471771, 0.4518241286277771, 0.44278934597969055, 0.43804931640625, 0.4356499910354614, 0.42639753222465515, 0.42484354972839355, 0.41953858733177185, 0.4176880419254303, 0.41387397050857544, 0.41043227910995483, 0.4043086767196655, 0.3968450129032135, 0.3953735828399658, 0.3944113254547119, 0.3883286416530609, 0.38996371626853943, 0.3852147161960602, 0.38190707564353943, 0.3806123733520508, 0.3818012773990631, 0.3777938783168793, 0.3733718991279602, 0.369788259267807, 0.3677850067615509, 0.3710554242134094, 0.3685363829135895, 0.3666377365589142, 0.3656647801399231, 0.35966506600379944, 0.360085666179657, 0.3575994372367859, 0.35894083976745605, 0.3550282418727875, 0.3525080680847168, 0.3519497811794281, 0.3558570444583893, 0.3491647243499756, 0.344151109457016, 0.3464415669441223, 0.34155988693237305, 0.3475363254547119, 0.34213393926620483, 0.3440459668636322, 0.34165120124816895, 0.34146276116371155, 0.3397788107395172, 0.33967211842536926, 0.34262070059776306, 0.3360006511211395, 0.341970294713974], "val_accuracy": [0.5326666831970215, 0.659333348274231, 0.6793333292007446, 0.7076666951179504, 0.7323333621025085, 0.7576666474342346, 0.7666666507720947, 0.7789999842643738, 0.7913333177566528, 0.7940000295639038, 0.8053333163261414, 0.8106666803359985, 0.8183333277702332, 0.8273333311080933, 0.8289999961853027, 0.8316666483879089, 0.8333333134651184, 0.8349999785423279, 0.8446666598320007, 0.8420000076293945, 0.8413333296775818, 0.8453333377838135, 0.8489999771118164, 0.8500000238418579, 0.8519999980926514, 0.8539999723434448, 0.8506666421890259, 0.856333315372467, 0.8546666502952576, 0.8566666841506958, 0.8619999885559082, 0.8600000143051147, 0.8613333106040955, 0.8629999756813049, 0.8633333444595337, 0.8643333315849304, 0.8653333187103271, 0.8683333396911621, 0.8673333525657654, 0.8679999709129333, 0.8679999709129333, 0.8700000047683716, 0.8713333606719971, 0.8673333525657654, 0.8703333139419556, 0.8696666955947876, 0.8703333139419556, 0.875, 0.8726666569709778, 0.8766666650772095, 0.8743333220481873, 0.8763333559036255, 0.8766666650772095, 0.875333309173584, 0.8773333430290222, 0.8766666650772095, 0.8803333044052124, 0.8799999952316284, 0.8796666860580444, 0.8813333511352539, 0.8806666731834412, 0.8766666650772095, 0.8769999742507935, 0.8836666941642761, 0.8820000290870667, 0.8793333172798157, 0.8820000290870667, 0.8820000290870667, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 2, 3, 0, 3, 0, 9], [0, 1, 0, 2], [39, 39, 47], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [0, 2, 3, 2, 3, 5, 6], [0, 2, 3, 3, 1, 2], [16, 16], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1], [6, 3, 3, 6, 8, 4, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 4, 1, 2, 3], [16, 99, 46, 99, 93, 17]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 7, 3, 3, 13, 7, 6, 1, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.math.square(tf.math.divide_no_nan(grad, grad)), alpha)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.subtract(grad, alpha)))))", "other_info": {"loss": [2.3034555912017822, 2.3025853633880615, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025853633880615, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09893012791872025, 0.09285431355237961, 0.0952318087220192, 0.09866596013307571, 0.09853387624025345, 0.09932637959718704, 0.09747721254825592, 0.09100515395402908, 0.09787346422672272, 0.09998679161071777, 0.09192973375320435, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025848865509033, 2.3025853633880615], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10199999809265137, 0.10199999809265137, 0.10233332961797714, 0.10199999809265137, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1], [0, 2, 3, 3, 3, 1, 1, 6, 4, 3, 0, 4, 8, 1, 4, 0, 7, 8], [0, 1, 0, 0, 3, 2, 1, 0, 2, 2, 3, 2, 2, 1], [39, 39, 83, 75], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5], [0, 2, 0, 0, 5], [16, 16, 33], [0, 1], [8], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 4, 3, 0, 4, 4, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 32, 18, 14, 4, 11, 6, 5, 3, 2, 1, 1, 1, 20, 10, 10, 4], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(grad, tf.math.subtract(tf.math.divide_no_nan(tf.math.pow(grad, tf.math.multiply(tf.math.negative(alpha), tf.math.pow(tf.math.sqrt(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, tf.math.pow(tf.math.negative(grad), tf.math.add(grad, grad)))))), grad), tf.math.sqrt(alpha))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, grad)))), alpha), tf.math.add(beta, tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1], [0, 8, 3, 0, 3], [0, 2, 0, 2], [39, 39], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 5, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 4], [16, 99, 16, 26, 46, 66]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 1, 6, 3, 3, 2, 2, 1, 1, 1, 18, 9, 9, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 9, 3, 0, 3], [0, 1, 0, 2], [99, 39], [0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [4, 2, 3, 0, 3, 5], [0, 2, 0, 1, 3], [31, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 8, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 1, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.08399999886751175, "mapping_values": [1, 2, 2, 0, 1, 11, 6, 5, 2, 2, 1, 1, 1, 17, 9, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.multiply(tf.math.square(alpha), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), alpha))), alpha)", "other_info": {"loss": [2.308349370956421, 2.3074874877929688, 2.3072407245635986, 2.3057782649993896, 2.305630683898926, 2.3046343326568604], "accuracy": [0.09245806187391281, 0.09457138925790787, 0.09034473448991776, 0.0886276587843895, 0.08070268481969833, 0.09008057415485382], "val_loss": [2.307478189468384, 2.306800127029419, 2.306119680404663, 2.305443048477173, 2.3048174381256104, 2.3043181896209717], "val_accuracy": [0.09099999815225601, 0.08100000023841858, 0.07533333450555801, 0.06833333522081375, 0.06233333423733711, 0.06300000101327896]}}]