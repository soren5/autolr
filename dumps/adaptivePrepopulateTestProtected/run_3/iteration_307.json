[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8808571696281433, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223215103149414, 1.8640538454055786, 1.390925645828247, 1.0857504606246948, 0.9175904989242554, 0.8278062343597412, 0.75929194688797, 0.7150763869285583, 0.6742342710494995, 0.6527069211006165, 0.6226239800453186, 0.6030511260032654, 0.5812473893165588, 0.5698184370994568, 0.5517233610153198, 0.5318202376365662, 0.5262278914451599, 0.5063096284866333, 0.4941454231739044, 0.4912639260292053, 0.47673994302749634, 0.46776485443115234, 0.45580968260765076, 0.45419755578041077, 0.4471202790737152, 0.4368197023868561, 0.4238806366920471, 0.41453513503074646, 0.41017231345176697, 0.4062040150165558, 0.40386685729026794, 0.3953916132450104, 0.39355871081352234, 0.3836102783679962, 0.37635838985443115, 0.3735085725784302, 0.363672137260437, 0.35395750403404236, 0.35972025990486145, 0.34721699357032776, 0.3442964553833008, 0.335767537355423, 0.3300938904285431, 0.32407090067863464, 0.32112976908683777, 0.3181473910808563, 0.31370431184768677, 0.3087446987628937, 0.3084625005722046, 0.30203962326049805, 0.293395072221756, 0.2889169156551361, 0.2914500832557678, 0.28307828307151794, 0.28207361698150635, 0.2786792516708374, 0.27818819880485535, 0.26387521624565125], "accuracy": [0.27222296595573425, 0.5027077198028564, 0.5674283504486084, 0.6277902722358704, 0.6709813475608826, 0.7058512568473816, 0.7269845604896545, 0.7415136694908142, 0.7586844563484192, 0.7617223858833313, 0.783119797706604, 0.7832518815994263, 0.7926297783851624, 0.8001585006713867, 0.807158887386322, 0.8103289008140564, 0.8133667707443237, 0.8190463781356812, 0.8247259259223938, 0.8271034359931946, 0.8298771381378174, 0.8341038227081299, 0.8366134166717529, 0.839519202709198, 0.8404437899589539, 0.848368763923645, 0.8515387773513794, 0.8564258217811584, 0.8529917001724243, 0.8585391640663147, 0.8515387773513794, 0.863558292388916, 0.8615770936012268, 0.8640866279602051, 0.8652753829956055, 0.8671245574951172, 0.8720116019248962, 0.8771628737449646, 0.8705587387084961, 0.876370370388031, 0.8787478804588318, 0.8784837126731873, 0.8828424215316772, 0.8842953443527222, 0.884691596031189, 0.8840311765670776, 0.8891823887825012, 0.8894465565681458, 0.8899748921394348, 0.8932769894599915, 0.8945978283882141, 0.8980319499969482, 0.896446943283081, 0.8988244533538818, 0.9019944667816162, 0.901862382888794, 0.8985602855682373, 0.904768168926239], "val_loss": [2.039530038833618, 1.5154659748077393, 1.039007544517517, 0.8366694450378418, 0.7400773167610168, 0.6859951019287109, 0.6454513669013977, 0.6114123463630676, 0.5899704694747925, 0.5724708437919617, 0.5533395409584045, 0.5345184803009033, 0.5225448608398438, 0.5092709064483643, 0.500229001045227, 0.49316829442977905, 0.480929970741272, 0.4729439616203308, 0.4688349962234497, 0.4563703238964081, 0.45455607771873474, 0.44636544585227966, 0.44144734740257263, 0.4332112669944763, 0.42851945757865906, 0.4277913272380829, 0.4196922183036804, 0.41600528359413147, 0.4114539325237274, 0.4113328456878662, 0.4059373438358307, 0.4033544063568115, 0.40210506319999695, 0.3963744640350342, 0.39264819025993347, 0.39112263917922974, 0.384288489818573, 0.383841872215271, 0.3804401755332947, 0.3786342442035675, 0.3777892291545868, 0.37486007809638977, 0.37355443835258484, 0.37450093030929565, 0.36811116337776184, 0.3697490096092224, 0.3684578537940979, 0.370509535074234, 0.36476588249206543, 0.36312252283096313, 0.361527681350708, 0.36036449670791626, 0.3581533133983612, 0.3633516728878021, 0.35499346256256104, 0.3547135293483734, 0.35882508754730225, 0.35363712906837463], "val_accuracy": [0.5473333597183228, 0.6496666669845581, 0.6846666932106018, 0.6959999799728394, 0.7279999852180481, 0.7450000047683716, 0.7580000162124634, 0.7713333368301392, 0.7763333320617676, 0.7816666960716248, 0.7963333129882812, 0.8109999895095825, 0.8116666674613953, 0.8113333582878113, 0.8116666674613953, 0.8186666369438171, 0.8259999752044678, 0.8236666917800903, 0.828000009059906, 0.8360000252723694, 0.8323333263397217, 0.8373333215713501, 0.8373333215713501, 0.8366666436195374, 0.843666672706604, 0.843999981880188, 0.846666693687439, 0.8483333587646484, 0.8493333458900452, 0.847000002861023, 0.8476666808128357, 0.8496666550636292, 0.8510000109672546, 0.8519999980926514, 0.8553333282470703, 0.8556666374206543, 0.8583333492279053, 0.859333336353302, 0.8560000061988831, 0.862333357334137, 0.8636666536331177, 0.859666645526886, 0.8636666536331177, 0.8643333315849304, 0.8653333187103271, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.8709999918937683, 0.8690000176429749, 0.8686666488647461, 0.8653333187103271, 0.8733333349227905, 0.8679999709129333, 0.8709999918937683, 0.8706666827201843, 0.8703333139419556, 0.8693333268165588]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8725714087486267, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222334861755371, 1.8726228475570679, 1.412006139755249, 1.1188831329345703, 0.9650694727897644, 0.8584712147712708, 0.7977746725082397, 0.7461445331573486, 0.7032133340835571, 0.6730426549911499, 0.6485556960105896, 0.6227321624755859, 0.6035603284835815, 0.5860781669616699, 0.5786499381065369, 0.5573159456253052, 0.5422235131263733, 0.5274391174316406, 0.519748330116272, 0.5049104690551758, 0.49619901180267334, 0.4835703670978546, 0.4817986786365509, 0.4680112600326538, 0.4593384563922882, 0.4479050934314728, 0.44076472520828247, 0.4345730245113373, 0.4254717528820038, 0.4230562746524811, 0.4168899655342102, 0.40400126576423645, 0.4008437991142273, 0.3964535593986511, 0.39641273021698, 0.3863188922405243, 0.3805631101131439, 0.3700936734676361, 0.36456298828125, 0.36373454332351685, 0.3581211268901825, 0.3495299220085144, 0.3408341407775879, 0.34176939725875854, 0.33938512206077576, 0.33694761991500854, 0.3196333944797516, 0.3232329189777374, 0.31666839122772217, 0.31681931018829346, 0.31089335680007935, 0.30294519662857056, 0.3057951033115387, 0.29274624586105347, 0.29365721344947815, 0.2825374901294708, 0.29013314843177795, 0.28481805324554443, 0.27418577671051025, 0.27204176783561707, 0.26461052894592285, 0.26494690775871277, 0.2602733075618744, 0.2609266936779022, 0.2533264756202698, 0.24840083718299866, 0.24932926893234253, 0.24391791224479675, 0.24421077966690063, 0.23722441494464874, 0.22942405939102173, 0.23588500916957855, 0.22376133501529694, 0.21955212950706482, 0.21871836483478546], "accuracy": [0.27380794286727905, 0.4799894392490387, 0.551050066947937, 0.6110157370567322, 0.6602826714515686, 0.6923788189888, 0.7140403985977173, 0.7269845604896545, 0.7449478507041931, 0.7540615797042847, 0.7648923397064209, 0.776251494884491, 0.7784969210624695, 0.7841764688491821, 0.7882710099220276, 0.7988376617431641, 0.8013472557067871, 0.8054417967796326, 0.8109893202781677, 0.8207634687423706, 0.8280280232429504, 0.8350284099578857, 0.8274996876716614, 0.8319904804229736, 0.8385946154594421, 0.8416325449943542, 0.8396512866020203, 0.8475762605667114, 0.8457271456718445, 0.8516708612442017, 0.8529917001724243, 0.8565579056739807, 0.8562937378883362, 0.860652506351471, 0.8595958352088928, 0.8602562546730042, 0.8650112152099609, 0.8679170608520508, 0.8676528930664062, 0.8668603897094727, 0.8728041052818298, 0.8739928603172302, 0.8831065893173218, 0.8811253309249878, 0.878879964351654, 0.883238673210144, 0.8825782537460327, 0.8842953443527222, 0.8835028409957886, 0.8849557638168335, 0.8878615498542786, 0.8885219693183899, 0.8901069760322571, 0.8945978283882141, 0.8968431949615479, 0.9008057117462158, 0.8953903317451477, 0.8969752788543701, 0.8973715305328369, 0.898428201675415, 0.9055606722831726, 0.9049002528190613, 0.9085986018180847, 0.9027869701385498, 0.9105798602104187, 0.9096552729606628, 0.9108440279960632, 0.9120327830314636, 0.9100515246391296, 0.9194294214248657, 0.9185048341751099, 0.9166556596755981, 0.9212785363197327, 0.9222031235694885, 0.9228635430335999], "val_loss": [2.0382087230682373, 1.5119882822036743, 1.036266565322876, 0.823798656463623, 0.7336899638175964, 0.676026463508606, 0.6258631348609924, 0.5884617567062378, 0.5633025765419006, 0.5431333184242249, 0.5218313932418823, 0.5079887509346008, 0.4893095791339874, 0.4772307276725769, 0.4677802622318268, 0.45461413264274597, 0.44725504517555237, 0.4407789707183838, 0.42938557267189026, 0.4248652756214142, 0.4178699254989624, 0.41195109486579895, 0.40913933515548706, 0.4027620553970337, 0.39644506573677063, 0.3971939980983734, 0.3918974697589874, 0.38401317596435547, 0.38148021697998047, 0.3839946985244751, 0.3772086501121521, 0.3745913803577423, 0.3693546950817108, 0.37138229608535767, 0.37033963203430176, 0.3667610287666321, 0.3608325123786926, 0.36722782254219055, 0.35802584886550903, 0.36364102363586426, 0.3527670204639435, 0.3529341518878937, 0.34886181354522705, 0.3483152687549591, 0.34710919857025146, 0.34369388222694397, 0.34784650802612305, 0.34467655420303345, 0.3436910808086395, 0.34119144082069397, 0.33921995759010315, 0.34129029512405396, 0.3403935730457306, 0.3387868106365204, 0.3326300084590912, 0.33305907249450684, 0.3341040015220642, 0.33690235018730164, 0.3346549868583679, 0.32880374789237976, 0.32746240496635437, 0.3281037509441376, 0.3269995152950287, 0.32810449600219727, 0.3322802484035492, 0.32689735293388367, 0.32847684621810913, 0.32492512464523315, 0.32784101366996765, 0.3239896595478058, 0.33152061700820923, 0.32660165429115295, 0.3254830241203308, 0.3236948549747467, 0.32409369945526123], "val_accuracy": [0.5273333191871643, 0.6656666398048401, 0.6949999928474426, 0.7179999947547913, 0.7443333268165588, 0.7599999904632568, 0.7720000147819519, 0.7749999761581421, 0.79666668176651, 0.8026666641235352, 0.8106666803359985, 0.8109999895095825, 0.8230000138282776, 0.8256666660308838, 0.8339999914169312, 0.8360000252723694, 0.8386666774749756, 0.840666651725769, 0.8456666469573975, 0.8479999899864197, 0.8506666421890259, 0.8536666631698608, 0.859000027179718, 0.8576666712760925, 0.862666666507721, 0.859333336353302, 0.8629999756813049, 0.8669999837875366, 0.8679999709129333, 0.8666666746139526, 0.8679999709129333, 0.8690000176429749, 0.8736666440963745, 0.871666669845581, 0.8723333477973938, 0.8700000047683716, 0.8769999742507935, 0.871666669845581, 0.8773333430290222, 0.8723333477973938, 0.8793333172798157, 0.8809999823570251, 0.878000020980835, 0.878000020980835, 0.8793333172798157, 0.8830000162124634, 0.8826666474342346, 0.8803333044052124, 0.8836666941642761, 0.8836666941642761, 0.8853333592414856, 0.8849999904632568, 0.8849999904632568, 0.8863333463668823, 0.887333333492279, 0.8859999775886536, 0.8863333463668823, 0.8849999904632568, 0.8889999985694885, 0.887666642665863, 0.8893333077430725, 0.8896666765213013, 0.8859999775886536, 0.8893333077430725, 0.8833333253860474, 0.890666663646698, 0.887666642665863, 0.887666642665863, 0.890999972820282, 0.8930000066757202, 0.890333354473114, 0.8926666378974915, 0.8889999985694885, 0.8923333287239075, 0.8920000195503235]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 2], [0, 1, 0, 2], [39, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [9, 2, 3, 0, 3, 5], [1, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1], [6, 3, 3, 6, 8, 1, 4, 6, 4, 2, 8], [0, 4, 0, 3, 0, 0, 3, 4, 2, 0], [16, 61, 96, 40, 61, 1]], "fitness": -0.11371428519487381, "mapping_values": [1, 9, 5, 4, 2, 1, 1, 0, 1, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(sigma, grad)))", "other_info": {"loss": [2.3031904697418213, 2.30130672454834, 2.301473617553711, 2.3016035556793213, 2.301633834838867, 2.301854372024536], "accuracy": [0.09985470771789551, 0.10460969805717468, 0.10566636174917221, 0.10474177449941635, 0.10302469879388809, 0.1014397069811821], "val_loss": [2.3006365299224854, 2.3006365299224854, 2.3006365299224854, 2.3006365299224854, 2.3006365299224854, 2.3006365299224854], "val_accuracy": [0.10833333432674408, 0.10833333432674408, 0.10833333432674408, 0.10833333432674408, 0.10833333432674408, 0.10833333432674408]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 1, 0, 2], [90, 39], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1], [1, 2, 3, 6, 3, 5], [0, 2, 1, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [5, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [4, 0, 0, 3, 0, 0, 3, 1, 0, 0], [16, 99, 96, 99, 85, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 1, 0, 1, 1, 2, 1, 1, 1, 17, 9, 8, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09576013684272766, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [42, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 8, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 4, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 7, 4, 3, 2, 2, 1, 1, 1, 17, 9, 8, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma))), alpha)", "other_info": {"loss": [2.5380330085754395, 3.2827463150024414, 3.6502742767333984, 3.522005558013916, 3.3701376914978027, 3.055814743041992], "accuracy": [0.09391097724437714, 0.09879804402589798, 0.09813763201236725, 0.1014397069811821, 0.09998679161071777, 0.10328886657953262], "val_loss": [2.626851797103882, 3.002312421798706, 2.923112630844116, 2.9059224128723145, 2.6717915534973145, 2.6740071773529053], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 0, 0, 3], [16, 16, 16], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 2, 8, 1, 4, 1, 4, 2, 4], [0, 0, 0, 3, 0, 0, 3, 1, 4, 4], [16, 99, 95, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 3, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3040249347686768, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}]