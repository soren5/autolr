[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8808571696281433, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223215103149414, 1.8640538454055786, 1.390925645828247, 1.0857504606246948, 0.9175904989242554, 0.8278062343597412, 0.75929194688797, 0.7150763869285583, 0.6742342710494995, 0.6527069211006165, 0.6226239800453186, 0.6030511260032654, 0.5812473893165588, 0.5698184370994568, 0.5517233610153198, 0.5318202376365662, 0.5262278914451599, 0.5063096284866333, 0.4941454231739044, 0.4912639260292053, 0.47673994302749634, 0.46776485443115234, 0.45580968260765076, 0.45419755578041077, 0.4471202790737152, 0.4368197023868561, 0.4238806366920471, 0.41453513503074646, 0.41017231345176697, 0.4062040150165558, 0.40386685729026794, 0.3953916132450104, 0.39355871081352234, 0.3836102783679962, 0.37635838985443115, 0.3735085725784302, 0.363672137260437, 0.35395750403404236, 0.35972025990486145, 0.34721699357032776, 0.3442964553833008, 0.335767537355423, 0.3300938904285431, 0.32407090067863464, 0.32112976908683777, 0.3181473910808563, 0.31370431184768677, 0.3087446987628937, 0.3084625005722046, 0.30203962326049805, 0.293395072221756, 0.2889169156551361, 0.2914500832557678, 0.28307828307151794, 0.28207361698150635, 0.2786792516708374, 0.27818819880485535, 0.26387521624565125], "accuracy": [0.27222296595573425, 0.5027077198028564, 0.5674283504486084, 0.6277902722358704, 0.6709813475608826, 0.7058512568473816, 0.7269845604896545, 0.7415136694908142, 0.7586844563484192, 0.7617223858833313, 0.783119797706604, 0.7832518815994263, 0.7926297783851624, 0.8001585006713867, 0.807158887386322, 0.8103289008140564, 0.8133667707443237, 0.8190463781356812, 0.8247259259223938, 0.8271034359931946, 0.8298771381378174, 0.8341038227081299, 0.8366134166717529, 0.839519202709198, 0.8404437899589539, 0.848368763923645, 0.8515387773513794, 0.8564258217811584, 0.8529917001724243, 0.8585391640663147, 0.8515387773513794, 0.863558292388916, 0.8615770936012268, 0.8640866279602051, 0.8652753829956055, 0.8671245574951172, 0.8720116019248962, 0.8771628737449646, 0.8705587387084961, 0.876370370388031, 0.8787478804588318, 0.8784837126731873, 0.8828424215316772, 0.8842953443527222, 0.884691596031189, 0.8840311765670776, 0.8891823887825012, 0.8894465565681458, 0.8899748921394348, 0.8932769894599915, 0.8945978283882141, 0.8980319499969482, 0.896446943283081, 0.8988244533538818, 0.9019944667816162, 0.901862382888794, 0.8985602855682373, 0.904768168926239], "val_loss": [2.039530038833618, 1.5154659748077393, 1.039007544517517, 0.8366694450378418, 0.7400773167610168, 0.6859951019287109, 0.6454513669013977, 0.6114123463630676, 0.5899704694747925, 0.5724708437919617, 0.5533395409584045, 0.5345184803009033, 0.5225448608398438, 0.5092709064483643, 0.500229001045227, 0.49316829442977905, 0.480929970741272, 0.4729439616203308, 0.4688349962234497, 0.4563703238964081, 0.45455607771873474, 0.44636544585227966, 0.44144734740257263, 0.4332112669944763, 0.42851945757865906, 0.4277913272380829, 0.4196922183036804, 0.41600528359413147, 0.4114539325237274, 0.4113328456878662, 0.4059373438358307, 0.4033544063568115, 0.40210506319999695, 0.3963744640350342, 0.39264819025993347, 0.39112263917922974, 0.384288489818573, 0.383841872215271, 0.3804401755332947, 0.3786342442035675, 0.3777892291545868, 0.37486007809638977, 0.37355443835258484, 0.37450093030929565, 0.36811116337776184, 0.3697490096092224, 0.3684578537940979, 0.370509535074234, 0.36476588249206543, 0.36312252283096313, 0.361527681350708, 0.36036449670791626, 0.3581533133983612, 0.3633516728878021, 0.35499346256256104, 0.3547135293483734, 0.35882508754730225, 0.35363712906837463], "val_accuracy": [0.5473333597183228, 0.6496666669845581, 0.6846666932106018, 0.6959999799728394, 0.7279999852180481, 0.7450000047683716, 0.7580000162124634, 0.7713333368301392, 0.7763333320617676, 0.7816666960716248, 0.7963333129882812, 0.8109999895095825, 0.8116666674613953, 0.8113333582878113, 0.8116666674613953, 0.8186666369438171, 0.8259999752044678, 0.8236666917800903, 0.828000009059906, 0.8360000252723694, 0.8323333263397217, 0.8373333215713501, 0.8373333215713501, 0.8366666436195374, 0.843666672706604, 0.843999981880188, 0.846666693687439, 0.8483333587646484, 0.8493333458900452, 0.847000002861023, 0.8476666808128357, 0.8496666550636292, 0.8510000109672546, 0.8519999980926514, 0.8553333282470703, 0.8556666374206543, 0.8583333492279053, 0.859333336353302, 0.8560000061988831, 0.862333357334137, 0.8636666536331177, 0.859666645526886, 0.8636666536331177, 0.8643333315849304, 0.8653333187103271, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.8709999918937683, 0.8690000176429749, 0.8686666488647461, 0.8653333187103271, 0.8733333349227905, 0.8679999709129333, 0.8709999918937683, 0.8706666827201843, 0.8703333139419556, 0.8693333268165588]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8714285492897034, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2233593463897705, 1.8702378273010254, 1.3981720209121704, 1.0924452543258667, 0.9472509026527405, 0.8442043662071228, 0.7880955934524536, 0.7343927621841431, 0.6967377662658691, 0.6606140732765198, 0.6445501446723938, 0.6170054078102112, 0.6029489040374756, 0.5864500403404236, 0.5658596754074097, 0.5482162237167358, 0.5426738858222961, 0.5209542512893677, 0.5164161324501038, 0.5018061399459839, 0.4899612069129944, 0.47493860125541687, 0.46641668677330017, 0.4523865580558777, 0.45124131441116333, 0.4411747455596924, 0.4321761131286621, 0.4245443642139435, 0.4180567264556885, 0.416786253452301, 0.3977755308151245, 0.3975040912628174, 0.4006877541542053, 0.39071446657180786, 0.3751501142978668, 0.3749145567417145, 0.37086790800094604, 0.36908408999443054, 0.3606798052787781, 0.35763391852378845, 0.35029923915863037, 0.3498260974884033, 0.33570998907089233, 0.33197537064552307, 0.33212965726852417, 0.3222033381462097, 0.3204364776611328, 0.31862127780914307, 0.31267786026000977, 0.31250816583633423, 0.30890992283821106, 0.3066610097885132, 0.29870927333831787, 0.290052205324173, 0.2840427756309509, 0.2873426675796509, 0.28195416927337646, 0.2771594524383545, 0.2709871828556061, 0.26834186911582947, 0.2655287981033325, 0.2560829818248749, 0.25340741872787476, 0.25792253017425537, 0.25344258546829224, 0.24922843277454376], "accuracy": [0.26720380783081055, 0.48368775844573975, 0.5672962665557861, 0.6199973821640015, 0.6590939164161682, 0.7043983340263367, 0.7189275026321411, 0.735569953918457, 0.7494386434555054, 0.7586844563484192, 0.7664773464202881, 0.7796856164932251, 0.7845727205276489, 0.7885351777076721, 0.7954035401344299, 0.805177628993988, 0.8057059645652771, 0.8137630224227905, 0.8152159452438354, 0.8212917447090149, 0.828292191028595, 0.8286884427070618, 0.8337075710296631, 0.8401796221733093, 0.8411042094230652, 0.8417646288871765, 0.8466516733169556, 0.8502179384231567, 0.8535200357437134, 0.8516708612442017, 0.8601241707801819, 0.8561616539955139, 0.8623695969581604, 0.8601241707801819, 0.8698983192443848, 0.8683133125305176, 0.8714832663536072, 0.8696341514587402, 0.8725399374961853, 0.8676528930664062, 0.878879964351654, 0.8770307898521423, 0.8809932470321655, 0.8840311765670776, 0.8798044919967651, 0.887201189994812, 0.8833707571029663, 0.8840311765670776, 0.8924844861030579, 0.8883898854255676, 0.8949940800666809, 0.8911636471748352, 0.8918240666389465, 0.8961827754974365, 0.8977677822113037, 0.8975036144256592, 0.8992207050323486, 0.9000132083892822, 0.9046360850334167, 0.9051644206047058, 0.9033153057098389, 0.9093911051750183, 0.9097873568534851, 0.9084665179252625, 0.9108440279960632, 0.9072777628898621], "val_loss": [2.042619228363037, 1.5222997665405273, 1.0591777563095093, 0.8557788729667664, 0.769310712814331, 0.7175477147102356, 0.6711875796318054, 0.6375267505645752, 0.6062098741531372, 0.5831361413002014, 0.5747789144515991, 0.5536244511604309, 0.5355951189994812, 0.5261930227279663, 0.5099642872810364, 0.49902603030204773, 0.49327418208122253, 0.48677220940589905, 0.4756604731082916, 0.46722081303596497, 0.46374624967575073, 0.45462581515312195, 0.45147690176963806, 0.44756948947906494, 0.4405938982963562, 0.4359666407108307, 0.4337863624095917, 0.42373281717300415, 0.4233430027961731, 0.42141014337539673, 0.416175901889801, 0.4128943383693695, 0.41380777955055237, 0.4065168797969818, 0.4027147591114044, 0.4017299711704254, 0.40349268913269043, 0.39803963899612427, 0.3970004618167877, 0.39947211742401123, 0.3916739225387573, 0.39208346605300903, 0.3913310468196869, 0.38404878973960876, 0.38839876651763916, 0.3871256113052368, 0.38512372970581055, 0.3787471652030945, 0.3798826038837433, 0.38466089963912964, 0.3788083493709564, 0.38121938705444336, 0.37355074286460876, 0.37549516558647156, 0.3723343014717102, 0.375266969203949, 0.36860430240631104, 0.3696640133857727, 0.364098459482193, 0.3713182806968689, 0.36535176634788513, 0.3634359538555145, 0.3669604957103729, 0.361310750246048, 0.36918777227401733, 0.3692079782485962], "val_accuracy": [0.5206666588783264, 0.6389999985694885, 0.671999990940094, 0.7013333439826965, 0.7319999933242798, 0.7443333268165588, 0.7509999871253967, 0.762333333492279, 0.7763333320617676, 0.7873333096504211, 0.7910000085830688, 0.7960000038146973, 0.8050000071525574, 0.8106666803359985, 0.8213333487510681, 0.8243333101272583, 0.8316666483879089, 0.8253333568572998, 0.8326666951179504, 0.840666651725769, 0.8379999995231628, 0.8393333554267883, 0.8463333249092102, 0.843666672706604, 0.8450000286102295, 0.8463333249092102, 0.8500000238418579, 0.8516666889190674, 0.8496666550636292, 0.8489999771118164, 0.8560000061988831, 0.8546666502952576, 0.856333315372467, 0.856333315372467, 0.856333315372467, 0.8600000143051147, 0.8573333621025085, 0.8616666793823242, 0.8579999804496765, 0.8603333234786987, 0.8619999885559082, 0.8619999885559082, 0.8629999756813049, 0.8673333525657654, 0.8583333492279053, 0.862666666507721, 0.8679999709129333, 0.8616666793823242, 0.8650000095367432, 0.8700000047683716, 0.8669999837875366, 0.8683333396911621, 0.8733333349227905, 0.8713333606719971, 0.871666669845581, 0.8656666874885559, 0.8756666779518127, 0.875, 0.871999979019165, 0.8700000047683716, 0.8759999871253967, 0.8723333477973938, 0.8700000047683716, 0.875, 0.871666669845581, 0.8730000257492065]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [1, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 9, 3, 0, 8, 5], [0, 2, 0, 3], [16, 16], [0, 0, 0, 1, 1], [0, 0, 3], [2, 2], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 1, 3, 6, 8, 1, 2, 1, 4, 2, 8], [0, 4, 0, 3, 4, 0, 3, 1, 1, 0], [16, 99, 63, 99, 61, 1]], "fitness": -0.6442857384681702, "mapping_values": [1, 9, 5, 4, 1, 2, 2, 0, 1, 5, 3, 2, 0, 16, 8, 8, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(alpha), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.multiply(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, grad)), tf.math.add(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha))))", "other_info": {"loss": [2.3093619346618652, 2.308934450149536, 2.3058974742889404, 2.299495220184326, 2.276381731033325, 2.222130060195923, 2.0242691040039062, 1.5514025688171387, 1.3099874258041382, 1.206389307975769, 1.1983082294464111, 1.4888588190078735, 7.266022555498361e+27], "accuracy": [0.09232597798109055, 0.09549596905708313, 0.09813763201236725, 0.10447761416435242, 0.14951789379119873, 0.20644564926624298, 0.3131686747074127, 0.45806366205215454, 0.5394267439842224, 0.570730447769165, 0.5803724527359009, 0.5399550795555115, 0.19416193664073944], "val_loss": [2.309199810028076, 2.3076770305633545, 2.3022096157073975, 2.28609561920166, 2.2460567951202393, 2.127305746078491, 1.6175189018249512, 1.1251335144042969, 1.155216932296753, 1.0333374738693237, 1.577335238456726, 1.101129174232483, 2.303293228149414], "val_accuracy": [0.08833333104848862, 0.08933333307504654, 0.09533333033323288, 0.11800000071525574, 0.2016666680574417, 0.42399999499320984, 0.606333315372467, 0.6549999713897705, 0.621666669845581, 0.625, 0.57833331823349, 0.6133333444595337, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 6, 0], [0, 1, 2, 2], [39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 6, 5], [0, 2, 3, 3], [16, 16], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 2, 6, 8, 4, 4, 1, 4, 2, 8], [0, 4, 0, 3, 0, 0, 3, 1, 4, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.1388571411371231, "mapping_values": [1, 9, 5, 4, 1, 1, 0, 1, 1, 2, 1, 1, 1, 12, 6, 6, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.negative(grad)), grad)), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.add(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.constant(1.0, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [240112467968.0, 278470033408.0, 274153357312.0, 282273513472.0, 270118158336.0, 288360005632.0], "accuracy": [0.10685510188341141, 0.11940298229455948, 0.11530841141939163, 0.11755382269620895, 0.12151630967855453, 0.12257297337055206], "val_loss": [186300645376.0, 186300628992.0, 186300628992.0, 186300497920.0, 186300481536.0, 186300465152.0], "val_accuracy": [0.14233332872390747, 0.14233332872390747, 0.14233332872390747, 0.14233332872390747, 0.14233332872390747, 0.14233332872390747]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 6], [0, 1, 0, 0], [39, 26, 20], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 4, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 3, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.divide_no_nan(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3036320209503174, 2.3025851249694824, 2.3025851249694824, 2.3025853633880615, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025848865509033], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [1, 2, 2, 0, 3], [0, 1, 0, 2], [81, 69], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [0, 2, 2, 0, 3, 8, 2, 1, 5, 3, 0], [0, 2, 0, 3, 1, 3, 5], [16, 62], [0, 1], [9], [0], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [6, 3, 3, 1, 8, 1, 4, 1, 4, 2, 8, 3], [0, 0, 0, 2, 0, 0, 3, 1, 2, 0, 3], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 18, 11, 7, 2, 1, 1, 0, 1, 23, 12, 11, 6], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(beta))), tf.math.add(tf.math.subtract(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.multiply(alpha, grad))), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.pow(beta, tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma), tf.math.sqrt(tf.math.multiply(alpha, beta))))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}]