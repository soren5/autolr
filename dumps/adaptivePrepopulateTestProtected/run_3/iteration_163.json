[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8808571696281433, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223215103149414, 1.8640538454055786, 1.390925645828247, 1.0857504606246948, 0.9175904989242554, 0.8278062343597412, 0.75929194688797, 0.7150763869285583, 0.6742342710494995, 0.6527069211006165, 0.6226239800453186, 0.6030511260032654, 0.5812473893165588, 0.5698184370994568, 0.5517233610153198, 0.5318202376365662, 0.5262278914451599, 0.5063096284866333, 0.4941454231739044, 0.4912639260292053, 0.47673994302749634, 0.46776485443115234, 0.45580968260765076, 0.45419755578041077, 0.4471202790737152, 0.4368197023868561, 0.4238806366920471, 0.41453513503074646, 0.41017231345176697, 0.4062040150165558, 0.40386685729026794, 0.3953916132450104, 0.39355871081352234, 0.3836102783679962, 0.37635838985443115, 0.3735085725784302, 0.363672137260437, 0.35395750403404236, 0.35972025990486145, 0.34721699357032776, 0.3442964553833008, 0.335767537355423, 0.3300938904285431, 0.32407090067863464, 0.32112976908683777, 0.3181473910808563, 0.31370431184768677, 0.3087446987628937, 0.3084625005722046, 0.30203962326049805, 0.293395072221756, 0.2889169156551361, 0.2914500832557678, 0.28307828307151794, 0.28207361698150635, 0.2786792516708374, 0.27818819880485535, 0.26387521624565125], "accuracy": [0.27222296595573425, 0.5027077198028564, 0.5674283504486084, 0.6277902722358704, 0.6709813475608826, 0.7058512568473816, 0.7269845604896545, 0.7415136694908142, 0.7586844563484192, 0.7617223858833313, 0.783119797706604, 0.7832518815994263, 0.7926297783851624, 0.8001585006713867, 0.807158887386322, 0.8103289008140564, 0.8133667707443237, 0.8190463781356812, 0.8247259259223938, 0.8271034359931946, 0.8298771381378174, 0.8341038227081299, 0.8366134166717529, 0.839519202709198, 0.8404437899589539, 0.848368763923645, 0.8515387773513794, 0.8564258217811584, 0.8529917001724243, 0.8585391640663147, 0.8515387773513794, 0.863558292388916, 0.8615770936012268, 0.8640866279602051, 0.8652753829956055, 0.8671245574951172, 0.8720116019248962, 0.8771628737449646, 0.8705587387084961, 0.876370370388031, 0.8787478804588318, 0.8784837126731873, 0.8828424215316772, 0.8842953443527222, 0.884691596031189, 0.8840311765670776, 0.8891823887825012, 0.8894465565681458, 0.8899748921394348, 0.8932769894599915, 0.8945978283882141, 0.8980319499969482, 0.896446943283081, 0.8988244533538818, 0.9019944667816162, 0.901862382888794, 0.8985602855682373, 0.904768168926239], "val_loss": [2.039530038833618, 1.5154659748077393, 1.039007544517517, 0.8366694450378418, 0.7400773167610168, 0.6859951019287109, 0.6454513669013977, 0.6114123463630676, 0.5899704694747925, 0.5724708437919617, 0.5533395409584045, 0.5345184803009033, 0.5225448608398438, 0.5092709064483643, 0.500229001045227, 0.49316829442977905, 0.480929970741272, 0.4729439616203308, 0.4688349962234497, 0.4563703238964081, 0.45455607771873474, 0.44636544585227966, 0.44144734740257263, 0.4332112669944763, 0.42851945757865906, 0.4277913272380829, 0.4196922183036804, 0.41600528359413147, 0.4114539325237274, 0.4113328456878662, 0.4059373438358307, 0.4033544063568115, 0.40210506319999695, 0.3963744640350342, 0.39264819025993347, 0.39112263917922974, 0.384288489818573, 0.383841872215271, 0.3804401755332947, 0.3786342442035675, 0.3777892291545868, 0.37486007809638977, 0.37355443835258484, 0.37450093030929565, 0.36811116337776184, 0.3697490096092224, 0.3684578537940979, 0.370509535074234, 0.36476588249206543, 0.36312252283096313, 0.361527681350708, 0.36036449670791626, 0.3581533133983612, 0.3633516728878021, 0.35499346256256104, 0.3547135293483734, 0.35882508754730225, 0.35363712906837463], "val_accuracy": [0.5473333597183228, 0.6496666669845581, 0.6846666932106018, 0.6959999799728394, 0.7279999852180481, 0.7450000047683716, 0.7580000162124634, 0.7713333368301392, 0.7763333320617676, 0.7816666960716248, 0.7963333129882812, 0.8109999895095825, 0.8116666674613953, 0.8113333582878113, 0.8116666674613953, 0.8186666369438171, 0.8259999752044678, 0.8236666917800903, 0.828000009059906, 0.8360000252723694, 0.8323333263397217, 0.8373333215713501, 0.8373333215713501, 0.8366666436195374, 0.843666672706604, 0.843999981880188, 0.846666693687439, 0.8483333587646484, 0.8493333458900452, 0.847000002861023, 0.8476666808128357, 0.8496666550636292, 0.8510000109672546, 0.8519999980926514, 0.8553333282470703, 0.8556666374206543, 0.8583333492279053, 0.859333336353302, 0.8560000061988831, 0.862333357334137, 0.8636666536331177, 0.859666645526886, 0.8636666536331177, 0.8643333315849304, 0.8653333187103271, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.8709999918937683, 0.8690000176429749, 0.8686666488647461, 0.8653333187103271, 0.8733333349227905, 0.8679999709129333, 0.8709999918937683, 0.8706666827201843, 0.8703333139419556, 0.8693333268165588]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8519999980926514, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2210142612457275, 1.8645672798156738, 1.3933249711990356, 1.077640175819397, 0.9241688251495361, 0.8432364463806152, 0.7665706276893616, 0.7236831188201904, 0.6864216923713684, 0.6564451456069946, 0.644585371017456, 0.6156603097915649, 0.5922354459762573, 0.5755981802940369, 0.5637536644935608, 0.5565481185913086, 0.5347885489463806, 0.5255833268165588, 0.503669261932373, 0.5052626132965088, 0.4889109432697296, 0.4903486371040344, 0.48157253861427307, 0.46577295660972595, 0.46395283937454224, 0.4470416307449341, 0.4501935839653015, 0.43482455611228943, 0.43129822611808777, 0.4172345995903015, 0.41280046105384827, 0.4033445417881012, 0.40132567286491394, 0.3983888626098633, 0.39438915252685547, 0.3897911608219147, 0.38154900074005127, 0.3795420229434967, 0.365276038646698, 0.3674047589302063, 0.3600294888019562, 0.3581632971763611, 0.3555442988872528, 0.34678950905799866, 0.3442719876766205, 0.33692553639411926, 0.3283992409706116, 0.32266926765441895, 0.3275740444660187, 0.31817272305488586, 0.315838098526001, 0.30325254797935486, 0.30490726232528687, 0.3019556701183319, 0.29684004187583923, 0.29146313667297363, 0.2882082462310791, 0.29057034850120544, 0.2823176383972168, 0.2756940722465515, 0.2728482484817505, 0.26513606309890747, 0.26174816489219666, 0.26178038120269775, 0.2532528340816498, 0.2546229660511017, 0.2484683394432068, 0.2435072660446167, 0.23914138972759247, 0.24511398375034332, 0.2300443947315216, 0.23313219845294952, 0.22480519115924835], "accuracy": [0.2728833854198456, 0.48448026180267334, 0.5680887699127197, 0.6284506916999817, 0.6720380187034607, 0.6995112895965576, 0.7265883088111877, 0.7440232634544373, 0.7563069462776184, 0.763967752456665, 0.7651565074920654, 0.7781006693840027, 0.785101056098938, 0.793950617313385, 0.8012151718139648, 0.8026680946350098, 0.8104609847068787, 0.8121780753135681, 0.8232730031013489, 0.8206313848495483, 0.8284242749214172, 0.8273676037788391, 0.834632158279419, 0.832650899887085, 0.8391229510307312, 0.8445383906364441, 0.8466516733169556, 0.8529917001724243, 0.8496896028518677, 0.8518029451370239, 0.852859616279602, 0.8601241707801819, 0.8634262084960938, 0.8676528930664062, 0.8626337051391602, 0.8602562546730042, 0.8667283058166504, 0.8665962219238281, 0.8755778670310974, 0.8757099509239197, 0.8761062026023865, 0.8729361891746521, 0.8754457831382751, 0.8792761564254761, 0.8815215826034546, 0.8816536664962769, 0.8886540532112122, 0.8879936337471008, 0.8882578015327454, 0.893541157245636, 0.8887861371040344, 0.8972394466400146, 0.8927486538887024, 0.8934090733528137, 0.8908994793891907, 0.8972394466400146, 0.8986923694610596, 0.8980319499969482, 0.9026548862457275, 0.9010698795318604, 0.9038436412811279, 0.9034473896026611, 0.9075419306755066, 0.9095231890678406, 0.9122969508171082, 0.9088627696037292, 0.9093911051750183, 0.9146744012832642, 0.9142781496047974, 0.9157310724258423, 0.9187690019607544, 0.9179764986038208, 0.9199577569961548], "val_loss": [2.0376579761505127, 1.510434865951538, 1.0323963165283203, 0.8206794261932373, 0.7334610223770142, 0.6785075664520264, 0.6378411054611206, 0.6058251261711121, 0.5778352618217468, 0.5578503608703613, 0.5406460165977478, 0.5256994366645813, 0.5108016729354858, 0.49581998586654663, 0.48940062522888184, 0.4818597435951233, 0.4671502411365509, 0.4611843526363373, 0.4526319205760956, 0.4460281431674957, 0.43830347061157227, 0.43478116393089294, 0.42638179659843445, 0.42429590225219727, 0.4170457720756531, 0.4116412401199341, 0.4069802165031433, 0.4056376814842224, 0.40125560760498047, 0.3953722417354584, 0.39653754234313965, 0.38756924867630005, 0.3829328715801239, 0.38341301679611206, 0.3778075873851776, 0.373591810464859, 0.3724101483821869, 0.37444034218788147, 0.37026455998420715, 0.36449068784713745, 0.36309733986854553, 0.3634602129459381, 0.36308810114860535, 0.35695451498031616, 0.35578763484954834, 0.3542214632034302, 0.35296428203582764, 0.3532889783382416, 0.34962865710258484, 0.3542577028274536, 0.3473261296749115, 0.34863078594207764, 0.3485892713069916, 0.3489822447299957, 0.3449932336807251, 0.34029147028923035, 0.33748936653137207, 0.33853617310523987, 0.338969886302948, 0.33537712693214417, 0.33836430311203003, 0.3360881209373474, 0.33669137954711914, 0.33447763323783875, 0.33707842230796814, 0.33271247148513794, 0.33613044023513794, 0.3317708671092987, 0.33092981576919556, 0.32850027084350586, 0.3335976302623749, 0.33490848541259766, 0.33391064405441284], "val_accuracy": [0.5099999904632568, 0.6666666865348816, 0.6896666884422302, 0.7206666469573975, 0.7356666922569275, 0.7590000033378601, 0.7683333158493042, 0.778333306312561, 0.7879999876022339, 0.7926666736602783, 0.8053333163261414, 0.8103333115577698, 0.8149999976158142, 0.8236666917800903, 0.8240000009536743, 0.8196666836738586, 0.8356666564941406, 0.8320000171661377, 0.8309999704360962, 0.8386666774749756, 0.8413333296775818, 0.8463333249092102, 0.8426666855812073, 0.8429999947547913, 0.8450000286102295, 0.8496666550636292, 0.8516666889190674, 0.8533333539962769, 0.8536666631698608, 0.8579999804496765, 0.8560000061988831, 0.859000027179718, 0.8583333492279053, 0.859000027179718, 0.8586666584014893, 0.8633333444595337, 0.8633333444595337, 0.8616666793823242, 0.8636666536331177, 0.8646666407585144, 0.8650000095367432, 0.8683333396911621, 0.8669999837875366, 0.8679999709129333, 0.8703333139419556, 0.8706666827201843, 0.8673333525657654, 0.8700000047683716, 0.8736666440963745, 0.8709999918937683, 0.8776666522026062, 0.875333309173584, 0.8763333559036255, 0.8730000257492065, 0.8730000257492065, 0.878333330154419, 0.878333330154419, 0.8806666731834412, 0.8786666393280029, 0.8803333044052124, 0.878000020980835, 0.8853333592414856, 0.8799999952316284, 0.8809999823570251, 0.8820000290870667, 0.8823333382606506, 0.8863333463668823, 0.8899999856948853, 0.8870000243186951, 0.8859999775886536, 0.8849999904632568, 0.8849999904632568, 0.8843333125114441]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 0, 0, 3], [16, 16, 61], [0, 1], [0], [4], [69], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [6, 3, 5, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 1, 4, 2, 4], [16, 11, 96, 99, 61, 1]], "fitness": -0.1428571492433548, "mapping_values": [1, 9, 5, 4, 2, 6, 3, 3, 3, 2, 1, 1, 0, 9, 5, 4, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.square(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [5.274975179281393e+31, 5.973276361918179e+31, 6.034168988311512e+31, 5.908972146861893e+31, 6.005772771519748e+31, 6.036382289702063e+31], "accuracy": [0.11993131786584854, 0.12798838317394257, 0.12495046854019165, 0.12996962666511536, 0.1224408894777298, 0.12257297337055206], "val_loss": [3.455530698643836e+31, 3.455530698643836e+31, 3.455530698643836e+31, 3.455530698643836e+31, 3.455530698643836e+31, 3.455530698643836e+31], "val_accuracy": [0.1523333340883255, 0.1523333340883255, 0.1523333340883255, 0.1523333340883255, 0.1523333340883255, 0.1523333340883255]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1], [0, 2, 3, 0, 3, 2, 5, 8], [0, 1, 0, 2, 3], [12, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [8], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 9, 1, 4, 2, 8], [4, 4, 0, 3, 4, 0, 4, 1, 2, 0], [5, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 8, 5, 2, 10, 6, 4, 2, 2, 1, 1, 1, 16, 9, 7, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(tf.math.sqrt(grad)), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))), tf.constant(1.0, shape=shape, dtype=tf.float32))), sigma), tf.math.subtract(grad, tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10499999672174454, 0.10499999672174454, 0.10499999672174454, 0.10499999672174454, 0.10499999672174454, 0.10499999672174454]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 2], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [9, 2, 3, 0, 3, 2], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1], [6, 3, 3, 6, 3, 1, 4, 2, 2, 1, 8, 3], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 5, 1], [68, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.math.pow(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.add(sigma, tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), sigma), tf.math.sqrt(tf.math.multiply(alpha, beta))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}, "mapping_values": [1, 9, 5, 4, 2, 1, 1, 0, 1, 2, 1, 1, 1, 24, 12, 12, 6], "tree_depth": 20}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 2, 3, 9, 2], [0, 1, 0, 2], [39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 3, 0, 3], [16, 16], [0, 1, 1], [6], [0, 4], [99], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0], [6, 3, 3, 6, 8, 1, 4, 1, 9, 2, 8], [2, 0, 0, 3, 0, 3, 3, 1, 2, 0], [7, 99, 96, 99, 61, 1]], "fitness": -0.09114285558462143, "mapping_values": [1, 4, 2, 2, 1, 1, 0, 1, 1, 3, 1, 2, 1, 10, 5, 5, 3], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(sigma, tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3107385635375977, 2.3110578060150146, 2.3102738857269287, 2.3111279010772705, 2.311558961868286, 2.309962034225464], "accuracy": [0.08757099509239197, 0.09430722147226334, 0.09021265059709549, 0.08532558381557465, 0.08968432247638702, 0.09536388516426086], "val_loss": [2.3080999851226807, 2.3080995082855225, 2.3080995082855225, 2.3080995082855225, 2.3080995082855225, 2.3080992698669434], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}}]