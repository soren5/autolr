[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8822857141494751, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585750579834, 1.8655762672424316, 1.394430160522461, 1.0773245096206665, 0.9378393888473511, 0.8425824046134949, 0.7776632308959961, 0.736241340637207, 0.6971188187599182, 0.6732122302055359, 0.644855797290802, 0.6276965141296387, 0.6100340485572815, 0.5899673104286194, 0.5746485590934753, 0.5484329462051392, 0.5425268411636353, 0.5357900857925415, 0.5214410424232483, 0.5127171874046326, 0.4895091950893402, 0.4932740032672882, 0.48551443219184875, 0.47113916277885437, 0.46571049094200134, 0.450914591550827, 0.438728004693985, 0.4414178729057312, 0.4245515465736389, 0.4182806611061096, 0.4126766324043274, 0.41352686285972595, 0.4031256139278412, 0.40064555406570435, 0.3982388377189636, 0.38566267490386963, 0.38400527834892273, 0.3741128146648407, 0.36422181129455566, 0.36170411109924316, 0.35991787910461426, 0.35666367411613464, 0.3521813750267029, 0.34583958983421326, 0.34736087918281555, 0.34181836247444153, 0.33650368452072144, 0.33141741156578064, 0.3230496346950531, 0.3225416839122772, 0.315096914768219, 0.3059031665325165, 0.3058394491672516, 0.3017319440841675, 0.29568877816200256, 0.2933836281299591, 0.28774771094322205, 0.2856961190700531, 0.2802303731441498, 0.2779994010925293, 0.274711549282074, 0.2719985842704773, 0.2586328387260437, 0.2598455548286438, 0.2622571289539337, 0.25739434361457825, 0.2502012252807617, 0.2544722855091095, 0.24556587636470795, 0.24580754339694977, 0.23948103189468384, 0.23949603736400604, 0.23484042286872864, 0.22871272265911102, 0.2256491780281067, 0.22479403018951416, 0.21744707226753235, 0.21390178799629211, 0.21272219717502594], "accuracy": [0.2785629332065582, 0.49451854825019836, 0.559899628162384, 0.6215823292732239, 0.6654338836669922, 0.6950204968452454, 0.7181349992752075, 0.7322678565979004, 0.7441553473472595, 0.7483819723129272, 0.7627789974212646, 0.7717606425285339, 0.7728173136711121, 0.78113853931427, 0.7882710099220276, 0.7993659973144531, 0.7976489067077637, 0.8074230551719666, 0.8128384351730347, 0.8198388814926147, 0.8212917447090149, 0.819970965385437, 0.8272355198860168, 0.8350284099578857, 0.8305375576019287, 0.8387266993522644, 0.846387505531311, 0.8433496356010437, 0.8504821062088013, 0.8524633646011353, 0.8535200357437134, 0.854708731174469, 0.856689989566803, 0.8551049828529358, 0.8593316674232483, 0.8615770936012268, 0.8628978729248047, 0.8702945709228516, 0.8691058158874512, 0.871879518032074, 0.8722757697105408, 0.8691058158874512, 0.8733324408531189, 0.8800686597824097, 0.8795403242111206, 0.8755778670310974, 0.8768987059593201, 0.8829745054244995, 0.8824461698532104, 0.8823140859603882, 0.887201189994812, 0.8897107243537903, 0.8889182209968567, 0.8927486538887024, 0.8902390599250793, 0.8953903317451477, 0.8980319499969482, 0.8976356983184814, 0.900409460067749, 0.89552241563797, 0.9025228023529053, 0.8989565372467041, 0.9056927561759949, 0.9085986018180847, 0.9030511379241943, 0.9066173434257507, 0.9101836085319519, 0.9083344340324402, 0.909259021282196, 0.9099194407463074, 0.9126931428909302, 0.9140139818191528, 0.9119006991386414, 0.9171839952468872, 0.9169198274612427, 0.9185048341751099, 0.9218068718910217, 0.9185048341751099, 0.9196935892105103], "val_loss": [2.033445358276367, 1.5042319297790527, 1.0271512269973755, 0.8147247433662415, 0.7278039455413818, 0.68117356300354, 0.6306353211402893, 0.5966841578483582, 0.5751398801803589, 0.5460951328277588, 0.5314993858337402, 0.509799063205719, 0.4957965612411499, 0.4792602062225342, 0.46671679615974426, 0.45267683267593384, 0.4441072940826416, 0.4356139600276947, 0.42943108081817627, 0.4255247414112091, 0.41811680793762207, 0.4163394272327423, 0.39929893612861633, 0.3969916105270386, 0.39089226722717285, 0.387652188539505, 0.3844633102416992, 0.3824205696582794, 0.3749690353870392, 0.3701930642127991, 0.36967378854751587, 0.36689504981040955, 0.3585263788700104, 0.3587398827075958, 0.36267170310020447, 0.3561091423034668, 0.35379692912101746, 0.3499273955821991, 0.34701839089393616, 0.3467637896537781, 0.3424672484397888, 0.33951225876808167, 0.3386255204677582, 0.34044384956359863, 0.33945050835609436, 0.33684298396110535, 0.3322163224220276, 0.33181649446487427, 0.32827115058898926, 0.3312568664550781, 0.3297465741634369, 0.3256674110889435, 0.3234780728816986, 0.32119208574295044, 0.3232716917991638, 0.3209094703197479, 0.31944912672042847, 0.3157532513141632, 0.3144265413284302, 0.31676045060157776, 0.31425556540489197, 0.3131799101829529, 0.3147056996822357, 0.3154993951320648, 0.31771615147590637, 0.31545644998550415, 0.3127000629901886, 0.31382524967193604, 0.31026333570480347, 0.3147730529308319, 0.30829918384552, 0.3107443153858185, 0.31316936016082764, 0.30297672748565674, 0.30325081944465637, 0.30436232686042786, 0.3072424829006195, 0.30681705474853516, 0.3061434030532837], "val_accuracy": [0.5526666641235352, 0.6666666865348816, 0.687333345413208, 0.7083333134651184, 0.731333315372467, 0.7446666955947876, 0.7606666684150696, 0.762666642665863, 0.7873333096504211, 0.7889999747276306, 0.7973333597183228, 0.8056666851043701, 0.8193333148956299, 0.8259999752044678, 0.8289999961853027, 0.8410000205039978, 0.8453333377838135, 0.8450000286102295, 0.8489999771118164, 0.847000002861023, 0.8516666889190674, 0.856333315372467, 0.859333336353302, 0.856333315372467, 0.8633333444595337, 0.8640000224113464, 0.8656666874885559, 0.8646666407585144, 0.8679999709129333, 0.8696666955947876, 0.8640000224113464, 0.8686666488647461, 0.8713333606719971, 0.8709999918937683, 0.8703333139419556, 0.8723333477973938, 0.871999979019165, 0.874666690826416, 0.8723333477973938, 0.8759999871253967, 0.8726666569709778, 0.875333309173584, 0.8790000081062317, 0.8756666779518127, 0.8726666569709778, 0.8769999742507935, 0.8796666860580444, 0.8796666860580444, 0.8806666731834412, 0.8793333172798157, 0.8813333511352539, 0.8840000033378601, 0.8840000033378601, 0.8843333125114441, 0.8809999823570251, 0.8856666684150696, 0.8866666555404663, 0.8833333253860474, 0.8866666555404663, 0.8843333125114441, 0.8856666684150696, 0.8880000114440918, 0.887333333492279, 0.8883333206176758, 0.8866666555404663, 0.8896666765213013, 0.8863333463668823, 0.8853333592414856, 0.890999972820282, 0.8870000243186951, 0.8883333206176758, 0.8883333206176758, 0.8916666507720947, 0.8939999938011169, 0.8896666765213013, 0.8916666507720947, 0.890999972820282, 0.8926666378974915, 0.8913333415985107]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8568571209907532, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2224133014678955, 1.8767027854919434, 1.4004647731781006, 1.0885611772537231, 0.9400815367698669, 0.8321767449378967, 0.7738979458808899, 0.7227855324745178, 0.685573160648346, 0.6528686285018921, 0.6325995922088623, 0.6137467622756958, 0.5940024256706238, 0.5760450959205627, 0.5494899153709412, 0.5373559594154358, 0.520051896572113, 0.5177932381629944, 0.5044732093811035, 0.4891494810581207, 0.48242589831352234, 0.48029837012290955, 0.4653727412223816, 0.45766839385032654, 0.443463534116745, 0.4426458775997162, 0.42958953976631165, 0.42059287428855896, 0.4061242938041687, 0.40949681401252747, 0.4021523594856262, 0.3991149961948395, 0.3917563557624817, 0.3937847316265106, 0.37557855248451233, 0.3760347366333008, 0.376001238822937, 0.37025460600852966, 0.3663281500339508, 0.34869205951690674, 0.35517051815986633, 0.33852583169937134, 0.34154316782951355, 0.3344808518886566, 0.32648858428001404, 0.32298198342323303, 0.31890925765037537, 0.31109723448753357, 0.3151261806488037, 0.3113234341144562, 0.3075987696647644, 0.2997770607471466, 0.29131877422332764, 0.28911298513412476, 0.2858114540576935, 0.2837943732738495, 0.27972882986068726, 0.2731248140335083, 0.2692985236644745, 0.26645714044570923, 0.2636409103870392, 0.26299136877059937, 0.2539272606372833, 0.2544088065624237, 0.2555079162120819, 0.24536268413066864, 0.24567262828350067, 0.2401619255542755, 0.2328123152256012, 0.23148001730442047], "accuracy": [0.27341169118881226, 0.48210275173187256, 0.565711259841919, 0.625148594379425, 0.6688680648803711, 0.6988508701324463, 0.7215691208839417, 0.7388719916343689, 0.757099449634552, 0.763967752456665, 0.7675340175628662, 0.7758552432060242, 0.7791573405265808, 0.7922335267066956, 0.7971205711364746, 0.8038568496704102, 0.8072909712791443, 0.8088759779930115, 0.8204993009567261, 0.8189142942428589, 0.8253863453865051, 0.8261788487434387, 0.8314621448516846, 0.834632158279419, 0.8446704745292664, 0.8388587832450867, 0.8444063067436218, 0.8481045961380005, 0.850350022315979, 0.8512746095657349, 0.8524633646011353, 0.8535200357437134, 0.8549728989601135, 0.857218325138092, 0.8665962219238281, 0.8646149635314941, 0.86118084192276, 0.8656716346740723, 0.8652753829956055, 0.8732003569602966, 0.8683133125305176, 0.8751816153526306, 0.8761062026023865, 0.876370370388031, 0.8819178342819214, 0.8819178342819214, 0.8838990926742554, 0.8836349248886108, 0.8910315632820129, 0.8874653577804565, 0.8902390599250793, 0.8894465565681458, 0.8924844861030579, 0.8938053250312805, 0.8949940800666809, 0.8951261639595032, 0.89988112449646, 0.9005415439605713, 0.8981640338897705, 0.9012019634246826, 0.9026548862457275, 0.9043719172477722, 0.9033153057098389, 0.9080702662467957, 0.9080702662467957, 0.906749427318573, 0.9122969508171082, 0.9134856462478638, 0.9149385690689087, 0.9126931428909302], "val_loss": [2.0395114421844482, 1.5164986848831177, 1.0421874523162842, 0.8285970091819763, 0.7418954372406006, 0.6893274784088135, 0.6505456566810608, 0.6116183400154114, 0.5882083773612976, 0.5690076351165771, 0.5495595932006836, 0.536505401134491, 0.5211841464042664, 0.5077404379844666, 0.4973752498626709, 0.49117183685302734, 0.47637784481048584, 0.473082035779953, 0.46168726682662964, 0.45969364047050476, 0.4580800235271454, 0.44659921526908875, 0.4396021366119385, 0.4371066987514496, 0.4314306676387787, 0.4284660220146179, 0.4206865727901459, 0.41893237829208374, 0.4193868339061737, 0.4114375114440918, 0.4079667627811432, 0.4047480821609497, 0.4037967026233673, 0.4031621813774109, 0.39602991938591003, 0.39944326877593994, 0.39178064465522766, 0.40169015526771545, 0.38749897480010986, 0.3880925178527832, 0.3824549615383148, 0.38018205761909485, 0.38046687841415405, 0.3758465051651001, 0.37583214044570923, 0.3739575743675232, 0.3761448562145233, 0.3715871572494507, 0.3694399893283844, 0.3695126175880432, 0.36903539299964905, 0.36043620109558105, 0.3638865053653717, 0.3630424737930298, 0.36437830328941345, 0.35758793354034424, 0.3583059012889862, 0.3700515031814575, 0.3572919964790344, 0.3575025498867035, 0.3645135462284088, 0.35368090867996216, 0.354478120803833, 0.3541579246520996, 0.3508381247520447, 0.35697460174560547, 0.3514806032180786, 0.3518383800983429, 0.35396483540534973, 0.35333117842674255], "val_accuracy": [0.5216666460037231, 0.6629999876022339, 0.6899999976158142, 0.7136666774749756, 0.7316666841506958, 0.7480000257492065, 0.7513333559036255, 0.7673333287239075, 0.7799999713897705, 0.777999997138977, 0.7946666479110718, 0.800000011920929, 0.8086666464805603, 0.8096666932106018, 0.8176666498184204, 0.8220000267028809, 0.8259999752044678, 0.8270000219345093, 0.8309999704360962, 0.8343333601951599, 0.8256666660308838, 0.8376666903495789, 0.8346666693687439, 0.8360000252723694, 0.8376666903495789, 0.8403333425521851, 0.8479999899864197, 0.8399999737739563, 0.8443333506584167, 0.8486666679382324, 0.847000002861023, 0.8526666760444641, 0.8489999771118164, 0.8479999899864197, 0.8523333072662354, 0.8543333411216736, 0.8529999852180481, 0.8546666502952576, 0.8543333411216736, 0.8576666712760925, 0.859333336353302, 0.8619999885559082, 0.8616666793823242, 0.8636666536331177, 0.8616666793823242, 0.859666645526886, 0.862666666507721, 0.8653333187103271, 0.8686666488647461, 0.8650000095367432, 0.8696666955947876, 0.8706666827201843, 0.8696666955947876, 0.8683333396911621, 0.8690000176429749, 0.8706666827201843, 0.875, 0.8669999837875366, 0.8693333268165588, 0.8740000128746033, 0.8690000176429749, 0.875333309173584, 0.875, 0.8740000128746033, 0.8773333430290222, 0.8723333477973938, 0.8756666779518127, 0.875333309173584, 0.875333309173584, 0.875333309173584]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [93, 95], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 4, 2, 0, 0, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [6, 3, 0, 2, 8, 8, 4, 1, 4, 8, 2], [0, 0, 0, 3, 0, 0, 3, 1, 4, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 8, 5, 3, 2, 2, 1, 1, 1, 17, 10, 7, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(beta)), tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.sqrt(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.sqrt(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), sigma)))", "other_info": {"loss": [14007.6982421875, 59706.90234375, 106708.1953125, 157286.25, 211245.46875, 271921.4375], "accuracy": [0.09945846349000931, 0.09298639744520187, 0.09826971590518951, 0.10196803510189056, 0.1014397069811821, 0.10328886657953262], "val_loss": [30271.6640625, 65856.625, 103019.640625, 142989.65625, 186671.421875, 234784.390625], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0], [2, 2, 3, 0, 3, 5, 9], [0, 2, 0, 3], [16, 16, 38], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 2, 4, 1, 4, 2, 8, 1, 2, 4], [0, 0, 1, 4, 0, 4, 3, 0, 4, 0, 6, 7, 3], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), tf.math.square(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(alpha, grad))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.add(sigma, tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))))))), tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), grad)), tf.math.pow(grad, sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}, "mapping_values": [1, 9, 5, 4, 2, 11, 7, 4, 3, 2, 1, 1, 1, 27, 14, 13, 5], "tree_depth": 22}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 1], [39, 39], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 2, 3, 0, 3, 5, 8, 3, 7, 0, 9, 6, 6, 7], [0, 2, 0, 3, 5, 0, 1, 0, 3], [16, 16, 9, 56, 36], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 5, 4, 1, 4, 2, 8], [2, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 8, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 23, 14, 9, 5, 2, 1, 1, 0, 11, 6, 5, 3], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.math.square(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.multiply(beta, tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))))), grad), tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.add(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), alpha)), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(beta, tf.math.add(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.square(sigma)), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1527826560.0, 120268176.0, 1250983296.0, 5596713472.0, 16687232000.0, 39466852352.0], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [13605853.0, 477058208.0, 3027421696.0, 10642502656.0, 27696527360.0, 59903725568.0], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 5, 0, 1, 5], [0, 2, 0, 3], [16, 16], [0, 0], [0, 9], [0], [99], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 2, 4, 1, 4, 2, 2], [0, 0, 0, 3, 2, 4, 4, 1, 2, 0], [16, 99, 70, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 6, 4, 2, 1, 2, 2, 0, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303537130355835, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}]