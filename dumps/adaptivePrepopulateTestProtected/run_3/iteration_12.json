[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8734285831451416, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2255282402038574, 1.8721107244491577, 1.4010379314422607, 1.1106735467910767, 0.940341055393219, 0.8359335660934448, 0.7731297612190247, 0.7296580672264099, 0.6895313262939453, 0.6571158170700073, 0.633295476436615, 0.6155224442481995, 0.5889805555343628, 0.5725106596946716, 0.556487500667572, 0.5408687591552734, 0.5278533697128296, 0.5128424763679504, 0.512872576713562, 0.4899774193763733, 0.4817979633808136, 0.47892409563064575, 0.46546685695648193, 0.4566666781902313, 0.451609343290329, 0.43633145093917847, 0.4428727924823761, 0.42452678084373474, 0.42050766944885254, 0.4092382490634918, 0.40380609035491943, 0.39615246653556824, 0.39049798250198364, 0.38757410645484924, 0.37997010350227356, 0.3791789710521698, 0.3691047430038452, 0.36647623777389526, 0.362128347158432, 0.35865068435668945, 0.34899047017097473, 0.34528470039367676, 0.34164324402809143, 0.3404218256473541, 0.329362154006958, 0.32548993825912476, 0.3200454115867615, 0.319357693195343, 0.3098825216293335, 0.3054966330528259], "accuracy": [0.2689208686351776, 0.48368775844573975, 0.5597675442695618, 0.6098269820213318, 0.6647734642028809, 0.7030775547027588, 0.7220974564552307, 0.7411174178123474, 0.7464007139205933, 0.763967752456665, 0.7684586048126221, 0.7718927264213562, 0.7889314293861389, 0.7909126877784729, 0.7968564033508301, 0.8092722296714783, 0.81112140417099, 0.8166688680648804, 0.8145555257797241, 0.8244617581367493, 0.8317263126373291, 0.8261788487434387, 0.8339717388153076, 0.8411042094230652, 0.8413683772087097, 0.8438779711723328, 0.8467837572097778, 0.846387505531311, 0.8527275323867798, 0.8576145768165588, 0.8529917001724243, 0.8617091774940491, 0.8622375130653381, 0.8621054291725159, 0.8650112152099609, 0.8644828796386719, 0.8721436858177185, 0.8687095642089844, 0.8734645247459412, 0.8747853636741638, 0.8800686597824097, 0.8786157965660095, 0.882710337638855, 0.8792761564254761, 0.8811253309249878, 0.885219931602478, 0.8856161832809448, 0.886672854423523, 0.886672854423523, 0.8899748921394348], "val_loss": [2.046873092651367, 1.5288923978805542, 1.0626829862594604, 0.856019914150238, 0.7606016993522644, 0.7008227705955505, 0.6582002639770508, 0.6210333704948425, 0.5941072702407837, 0.5707116723060608, 0.5571823120117188, 0.5361080169677734, 0.5217938423156738, 0.5068894624710083, 0.49441617727279663, 0.4871320128440857, 0.47810932993888855, 0.47213321924209595, 0.4643647372722626, 0.4517059624195099, 0.4470732808113098, 0.44019225239753723, 0.4363744854927063, 0.43239396810531616, 0.42653128504753113, 0.4212285280227661, 0.41591763496398926, 0.4089317321777344, 0.40691429376602173, 0.4042397439479828, 0.39867520332336426, 0.4001860022544861, 0.38896405696868896, 0.3901083469390869, 0.3860934376716614, 0.38403454422950745, 0.3824399709701538, 0.3795788884162903, 0.37650981545448303, 0.37731820344924927, 0.3719942271709442, 0.37503206729888916, 0.3734400272369385, 0.3695981800556183, 0.3660171627998352, 0.36835432052612305, 0.3619896173477173, 0.36234453320503235, 0.36134591698646545, 0.3571830987930298], "val_accuracy": [0.5239999890327454, 0.6553333401679993, 0.6856666803359985, 0.7023333311080933, 0.7279999852180481, 0.7490000128746033, 0.762333333492279, 0.7716666460037231, 0.7816666960716248, 0.7889999747276306, 0.7993333339691162, 0.8040000200271606, 0.8073333501815796, 0.8183333277702332, 0.8243333101272583, 0.8226666450500488, 0.8220000267028809, 0.8273333311080933, 0.8326666951179504, 0.8353333473205566, 0.8360000252723694, 0.8389999866485596, 0.8379999995231628, 0.8420000076293945, 0.8403333425521851, 0.8489999771118164, 0.8493333458900452, 0.8483333587646484, 0.8500000238418579, 0.8503333330154419, 0.8543333411216736, 0.8493333458900452, 0.8546666502952576, 0.8550000190734863, 0.8579999804496765, 0.8566666841506958, 0.8576666712760925, 0.8606666922569275, 0.8603333234786987, 0.8576666712760925, 0.862666666507721, 0.8583333492279053, 0.8616666793823242, 0.8606666922569275, 0.8679999709129333, 0.862333357334137, 0.8650000095367432, 0.8663333058357239, 0.8663333058357239, 0.8663333058357239]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8625714182853699, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2237861156463623, 1.8742135763168335, 1.4012889862060547, 1.108866572380066, 0.961981475353241, 0.8555021286010742, 0.7809686660766602, 0.7370427846908569, 0.6958297491073608, 0.667804479598999, 0.6465029716491699, 0.620387852191925, 0.5893484950065613, 0.5810196399688721, 0.562157392501831, 0.5493281483650208, 0.5410085916519165, 0.523791491985321, 0.5093016028404236, 0.5040565729141235, 0.49435803294181824, 0.4782992899417877, 0.4739273488521576, 0.4681429862976074, 0.46020689606666565, 0.44015416502952576, 0.4368268549442291, 0.4284704923629761, 0.4175924062728882, 0.41859686374664307, 0.40670475363731384, 0.41192427277565, 0.3954104781150818, 0.38992440700531006, 0.3878979980945587, 0.37862515449523926, 0.37133756279945374, 0.358597993850708, 0.3587811291217804, 0.35916221141815186, 0.35193681716918945, 0.34220433235168457, 0.341080904006958, 0.3264717161655426, 0.3322541415691376, 0.32641008496284485, 0.3187417984008789, 0.3125934898853302, 0.31034591794013977, 0.3059486150741577, 0.30429908633232117, 0.30303213000297546, 0.29672321677207947, 0.28437209129333496, 0.28541114926338196, 0.2814507484436035, 0.28023821115493774, 0.2697456479072571, 0.2688993513584137, 0.2637237310409546, 0.25805550813674927, 0.26035624742507935, 0.25364744663238525, 0.2536815106868744, 0.24998079240322113, 0.24161779880523682, 0.24341166019439697, 0.23585949838161469, 0.23377738893032074, 0.23318268358707428, 0.2185390740633011, 0.2176625281572342, 0.21547502279281616, 0.22012820839881897, 0.21219803392887115, 0.21023376286029816, 0.20804762840270996, 0.20559062063694, 0.20227843523025513, 0.19706609845161438, 0.19670699536800385, 0.1892222911119461, 0.190162792801857, 0.18985971808433533, 0.18628783524036407, 0.18335095047950745, 0.17919683456420898, 0.1813364177942276, 0.17665795981884003, 0.17210257053375244, 0.17153720557689667, 0.16949723660945892, 0.16573859751224518, 0.16786988079547882, 0.15553581714630127, 0.1545695811510086, 0.15799003839492798, 0.15231190621852875], "accuracy": [0.2740721106529236, 0.4850085973739624, 0.5651829242706299, 0.6127327680587769, 0.6577730774879456, 0.6956809163093567, 0.718399167060852, 0.7327961921691895, 0.7433628439903259, 0.7552502751350403, 0.7658169269561768, 0.7701756954193115, 0.7889314293861389, 0.7891955971717834, 0.7987055778503418, 0.7998943328857422, 0.8043851256370544, 0.8141592741012573, 0.8191784620285034, 0.8121780753135681, 0.8165367841720581, 0.8220842480659485, 0.8285563588142395, 0.833179235458374, 0.8334434032440186, 0.8424250483512878, 0.8404437899589539, 0.8465195894241333, 0.8486329317092896, 0.8488970994949341, 0.8527275323867798, 0.8500858545303345, 0.8594637513160706, 0.8609166741371155, 0.8598600029945374, 0.859199583530426, 0.8643507957458496, 0.869502067565918, 0.8709549307823181, 0.8721436858177185, 0.8709549307823181, 0.878879964351654, 0.8745211958885193, 0.882710337638855, 0.8765024542808533, 0.8837670087814331, 0.8833707571029663, 0.8874653577804565, 0.887597382068634, 0.889050304889679, 0.8899748921394348, 0.8919561505317688, 0.8918240666389465, 0.897899866104126, 0.9001452922821045, 0.8952582478523254, 0.8994848728179932, 0.9045040011405945, 0.9029190540313721, 0.9055606722831726, 0.9070135951042175, 0.9056927561759949, 0.9088627696037292, 0.9076740145683289, 0.9095231890678406, 0.9113723635673523, 0.9104477763175964, 0.9117686152458191, 0.9159952402114868, 0.91559898853302, 0.9218068718910217, 0.9189010858535767, 0.9218068718910217, 0.9183727502822876, 0.9216747879981995, 0.9222031235694885, 0.9207502603530884, 0.9243164658546448, 0.9237881302833557, 0.9274864792823792, 0.9252410531044006, 0.9288073182106018, 0.9282789826393127, 0.9276185631752014, 0.9332981109619141, 0.9311847686767578, 0.935279369354248, 0.9305243492126465, 0.9389776587486267, 0.9363360404968262, 0.9366002082824707, 0.9368643760681152, 0.9358077049255371, 0.9387134909629822, 0.943600594997406, 0.9430722594261169, 0.9408268332481384, 0.9458459615707397], "val_loss": [2.0360302925109863, 1.5101186037063599, 1.0371181964874268, 0.8270453810691833, 0.7413675785064697, 0.6773970723152161, 0.6310601830482483, 0.5910234451293945, 0.5672096610069275, 0.5488241314888, 0.5282385349273682, 0.5112493634223938, 0.4983413815498352, 0.48482996225357056, 0.47458788752555847, 0.4655328691005707, 0.45696452260017395, 0.44782397150993347, 0.43957656621932983, 0.4350152909755707, 0.42810556292533875, 0.4228583872318268, 0.4161173105239868, 0.4085817039012909, 0.4102468192577362, 0.3987039029598236, 0.3994632959365845, 0.38873884081840515, 0.39022207260131836, 0.3873967230319977, 0.3843243718147278, 0.3788514733314514, 0.3726189434528351, 0.37178438901901245, 0.3689833879470825, 0.36743995547294617, 0.3639170229434967, 0.36517390608787537, 0.35660478472709656, 0.355721116065979, 0.3516523838043213, 0.3570726811885834, 0.3484550714492798, 0.35259243845939636, 0.344420462846756, 0.34428101778030396, 0.3443343937397003, 0.34289616346359253, 0.34155282378196716, 0.3365943133831024, 0.3424217104911804, 0.3391062915325165, 0.3340325653553009, 0.33243632316589355, 0.3300126791000366, 0.33153626322746277, 0.32882142066955566, 0.328399658203125, 0.3273236155509949, 0.32798492908477783, 0.3301308751106262, 0.3234734535217285, 0.32447800040245056, 0.3228185176849365, 0.3239628076553345, 0.32499849796295166, 0.3233683407306671, 0.32225301861763, 0.31946027278900146, 0.31924498081207275, 0.32589730620384216, 0.31721577048301697, 0.3194924592971802, 0.32007816433906555, 0.3212946057319641, 0.32006576657295227, 0.32254332304000854, 0.3231242895126343, 0.3214920461177826, 0.31402552127838135, 0.3221331238746643, 0.3187974989414215, 0.31863415241241455, 0.31573060154914856, 0.321811705827713, 0.3222770094871521, 0.3274747431278229, 0.32109084725379944, 0.3206409215927124, 0.31868913769721985, 0.31999993324279785, 0.32408440113067627, 0.3172881007194519, 0.32342201471328735, 0.3221181631088257, 0.3279663324356079, 0.32468390464782715, 0.32552096247673035], "val_accuracy": [0.531000018119812, 0.6626666784286499, 0.6893333196640015, 0.7160000205039978, 0.7423333525657654, 0.7593333125114441, 0.7699999809265137, 0.7870000004768372, 0.7943333387374878, 0.7979999780654907, 0.8063333630561829, 0.812666654586792, 0.8136666417121887, 0.8236666917800903, 0.828000009059906, 0.8346666693687439, 0.8346666693687439, 0.8376666903495789, 0.8420000076293945, 0.846666693687439, 0.8493333458900452, 0.8503333330154419, 0.8503333330154419, 0.8553333282470703, 0.8513333201408386, 0.859000027179718, 0.8566666841506958, 0.859000027179718, 0.862666666507721, 0.8636666536331177, 0.859666645526886, 0.8619999885559082, 0.8706666827201843, 0.8676666617393494, 0.8709999918937683, 0.8713333606719971, 0.8723333477973938, 0.8650000095367432, 0.8786666393280029, 0.8733333349227905, 0.8763333559036255, 0.8723333477973938, 0.8799999952316284, 0.8759999871253967, 0.8809999823570251, 0.878333330154419, 0.878333330154419, 0.8776666522026062, 0.8803333044052124, 0.8820000290870667, 0.8823333382606506, 0.8826666474342346, 0.8826666474342346, 0.8859999775886536, 0.8830000162124634, 0.8830000162124634, 0.8849999904632568, 0.8849999904632568, 0.8866666555404663, 0.8853333592414856, 0.8856666684150696, 0.8886666893959045, 0.8856666684150696, 0.8883333206176758, 0.890333354473114, 0.8863333463668823, 0.890333354473114, 0.887666642665863, 0.890666663646698, 0.8886666893959045, 0.8899999856948853, 0.890666663646698, 0.8923333287239075, 0.8923333287239075, 0.8923333287239075, 0.893666684627533, 0.8913333415985107, 0.8886666893959045, 0.8933333158493042, 0.8943333625793457, 0.8893333077430725, 0.8949999809265137, 0.8930000066757202, 0.8953333497047424, 0.8966666460037231, 0.8963333368301392, 0.8946666717529297, 0.8970000147819519, 0.8963333368301392, 0.8980000019073486, 0.8946666717529297, 0.8970000147819519, 0.9006666541099548, 0.8960000276565552, 0.8963333368301392, 0.8986666798591614, 0.8989999890327454, 0.8960000276565552]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 9, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 1, 5], [0, 2, 0, 3], [56, 36], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 4, 3, 4, 0, 3, 1, 2, 4], [16, 91, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), beta), tf.math.subtract(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma))), tf.math.subtract(grad, tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), grad))", "other_info": {"loss": [2.427429676055908, 2.3025898933410645, 2.3025929927825928, 2.302597761154175, 2.3026046752929688, 2.302603006362915, 2.3026108741760254], "accuracy": [0.09959053993225098, 0.09576013684272766, 0.09800554811954498, 0.09642054885625839, 0.09536388516426086, 0.09219389408826828, 0.08968432247638702], "val_loss": [2.3025832176208496, 2.302582025527954, 2.3025829792022705, 2.3025786876678467, 2.302577257156372, 2.3025803565979004, 2.3025741577148438], "val_accuracy": [0.10066666454076767, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 1, 1], [0, 2, 2, 0, 3], [0, 2, 0, 2], [39, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 5, 0, 3, 2], [0, 3, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 6, 4, 1, 4, 2, 0], [3, 0, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 5, 3, 2, 1, 2, 1, 1, 1, 21, 11, 10, 4], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(sigma, tf.math.divide_no_nan(tf.math.sqrt(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.negative(beta), tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0], [0, 2, 3, 0, 3, 1, 0, 3, 9], [0, 1, 0, 2, 0], [66, 39, 36, 0], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 3, 2], [21, 16], [0, 0, 0, 1, 0, 1], [0, 8, 4, 5], [4, 0], [67], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [1, 3, 3, 6, 8, 1, 4, 1, 2, 2, 4], [0, 3, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 9, 5, 4, 6, 3, 3, 1, 6, 4, 2, 1, 1, 0, 1, 1], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.math.subtract(tf.math.negative(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.pow(grad, tf.math.square(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3031704425811768, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 2, 0, 3], [0, 1, 0, 1], [39, 91], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 6, 3, 0, 3, 5], [0, 1, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 8, 7, 2, 3, 7, 9, 4, 6, 1, 8, 2, 6, 7], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 3, 3, 5, 2, 5, 3, 5, 3, 2], [16, 99, 96, 99, 61, 1, 18]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 43, 24, 19, 7], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, tf.math.pow(alpha, tf.math.add(tf.math.sqrt(beta), tf.math.sqrt(tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.pow(sigma, tf.math.divide_no_nan(sigma, grad))), tf.math.subtract(tf.math.sqrt(beta), tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(sigma, grad)), sigma))), beta)))))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}]