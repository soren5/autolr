[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8822857141494751, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585750579834, 1.8655762672424316, 1.394430160522461, 1.0773245096206665, 0.9378393888473511, 0.8425824046134949, 0.7776632308959961, 0.736241340637207, 0.6971188187599182, 0.6732122302055359, 0.644855797290802, 0.6276965141296387, 0.6100340485572815, 0.5899673104286194, 0.5746485590934753, 0.5484329462051392, 0.5425268411636353, 0.5357900857925415, 0.5214410424232483, 0.5127171874046326, 0.4895091950893402, 0.4932740032672882, 0.48551443219184875, 0.47113916277885437, 0.46571049094200134, 0.450914591550827, 0.438728004693985, 0.4414178729057312, 0.4245515465736389, 0.4182806611061096, 0.4126766324043274, 0.41352686285972595, 0.4031256139278412, 0.40064555406570435, 0.3982388377189636, 0.38566267490386963, 0.38400527834892273, 0.3741128146648407, 0.36422181129455566, 0.36170411109924316, 0.35991787910461426, 0.35666367411613464, 0.3521813750267029, 0.34583958983421326, 0.34736087918281555, 0.34181836247444153, 0.33650368452072144, 0.33141741156578064, 0.3230496346950531, 0.3225416839122772, 0.315096914768219, 0.3059031665325165, 0.3058394491672516, 0.3017319440841675, 0.29568877816200256, 0.2933836281299591, 0.28774771094322205, 0.2856961190700531, 0.2802303731441498, 0.2779994010925293, 0.274711549282074, 0.2719985842704773, 0.2586328387260437, 0.2598455548286438, 0.2622571289539337, 0.25739434361457825, 0.2502012252807617, 0.2544722855091095, 0.24556587636470795, 0.24580754339694977, 0.23948103189468384, 0.23949603736400604, 0.23484042286872864, 0.22871272265911102, 0.2256491780281067, 0.22479403018951416, 0.21744707226753235, 0.21390178799629211, 0.21272219717502594], "accuracy": [0.2785629332065582, 0.49451854825019836, 0.559899628162384, 0.6215823292732239, 0.6654338836669922, 0.6950204968452454, 0.7181349992752075, 0.7322678565979004, 0.7441553473472595, 0.7483819723129272, 0.7627789974212646, 0.7717606425285339, 0.7728173136711121, 0.78113853931427, 0.7882710099220276, 0.7993659973144531, 0.7976489067077637, 0.8074230551719666, 0.8128384351730347, 0.8198388814926147, 0.8212917447090149, 0.819970965385437, 0.8272355198860168, 0.8350284099578857, 0.8305375576019287, 0.8387266993522644, 0.846387505531311, 0.8433496356010437, 0.8504821062088013, 0.8524633646011353, 0.8535200357437134, 0.854708731174469, 0.856689989566803, 0.8551049828529358, 0.8593316674232483, 0.8615770936012268, 0.8628978729248047, 0.8702945709228516, 0.8691058158874512, 0.871879518032074, 0.8722757697105408, 0.8691058158874512, 0.8733324408531189, 0.8800686597824097, 0.8795403242111206, 0.8755778670310974, 0.8768987059593201, 0.8829745054244995, 0.8824461698532104, 0.8823140859603882, 0.887201189994812, 0.8897107243537903, 0.8889182209968567, 0.8927486538887024, 0.8902390599250793, 0.8953903317451477, 0.8980319499969482, 0.8976356983184814, 0.900409460067749, 0.89552241563797, 0.9025228023529053, 0.8989565372467041, 0.9056927561759949, 0.9085986018180847, 0.9030511379241943, 0.9066173434257507, 0.9101836085319519, 0.9083344340324402, 0.909259021282196, 0.9099194407463074, 0.9126931428909302, 0.9140139818191528, 0.9119006991386414, 0.9171839952468872, 0.9169198274612427, 0.9185048341751099, 0.9218068718910217, 0.9185048341751099, 0.9196935892105103], "val_loss": [2.033445358276367, 1.5042319297790527, 1.0271512269973755, 0.8147247433662415, 0.7278039455413818, 0.68117356300354, 0.6306353211402893, 0.5966841578483582, 0.5751398801803589, 0.5460951328277588, 0.5314993858337402, 0.509799063205719, 0.4957965612411499, 0.4792602062225342, 0.46671679615974426, 0.45267683267593384, 0.4441072940826416, 0.4356139600276947, 0.42943108081817627, 0.4255247414112091, 0.41811680793762207, 0.4163394272327423, 0.39929893612861633, 0.3969916105270386, 0.39089226722717285, 0.387652188539505, 0.3844633102416992, 0.3824205696582794, 0.3749690353870392, 0.3701930642127991, 0.36967378854751587, 0.36689504981040955, 0.3585263788700104, 0.3587398827075958, 0.36267170310020447, 0.3561091423034668, 0.35379692912101746, 0.3499273955821991, 0.34701839089393616, 0.3467637896537781, 0.3424672484397888, 0.33951225876808167, 0.3386255204677582, 0.34044384956359863, 0.33945050835609436, 0.33684298396110535, 0.3322163224220276, 0.33181649446487427, 0.32827115058898926, 0.3312568664550781, 0.3297465741634369, 0.3256674110889435, 0.3234780728816986, 0.32119208574295044, 0.3232716917991638, 0.3209094703197479, 0.31944912672042847, 0.3157532513141632, 0.3144265413284302, 0.31676045060157776, 0.31425556540489197, 0.3131799101829529, 0.3147056996822357, 0.3154993951320648, 0.31771615147590637, 0.31545644998550415, 0.3127000629901886, 0.31382524967193604, 0.31026333570480347, 0.3147730529308319, 0.30829918384552, 0.3107443153858185, 0.31316936016082764, 0.30297672748565674, 0.30325081944465637, 0.30436232686042786, 0.3072424829006195, 0.30681705474853516, 0.3061434030532837], "val_accuracy": [0.5526666641235352, 0.6666666865348816, 0.687333345413208, 0.7083333134651184, 0.731333315372467, 0.7446666955947876, 0.7606666684150696, 0.762666642665863, 0.7873333096504211, 0.7889999747276306, 0.7973333597183228, 0.8056666851043701, 0.8193333148956299, 0.8259999752044678, 0.8289999961853027, 0.8410000205039978, 0.8453333377838135, 0.8450000286102295, 0.8489999771118164, 0.847000002861023, 0.8516666889190674, 0.856333315372467, 0.859333336353302, 0.856333315372467, 0.8633333444595337, 0.8640000224113464, 0.8656666874885559, 0.8646666407585144, 0.8679999709129333, 0.8696666955947876, 0.8640000224113464, 0.8686666488647461, 0.8713333606719971, 0.8709999918937683, 0.8703333139419556, 0.8723333477973938, 0.871999979019165, 0.874666690826416, 0.8723333477973938, 0.8759999871253967, 0.8726666569709778, 0.875333309173584, 0.8790000081062317, 0.8756666779518127, 0.8726666569709778, 0.8769999742507935, 0.8796666860580444, 0.8796666860580444, 0.8806666731834412, 0.8793333172798157, 0.8813333511352539, 0.8840000033378601, 0.8840000033378601, 0.8843333125114441, 0.8809999823570251, 0.8856666684150696, 0.8866666555404663, 0.8833333253860474, 0.8866666555404663, 0.8843333125114441, 0.8856666684150696, 0.8880000114440918, 0.887333333492279, 0.8883333206176758, 0.8866666555404663, 0.8896666765213013, 0.8863333463668823, 0.8853333592414856, 0.890999972820282, 0.8870000243186951, 0.8883333206176758, 0.8883333206176758, 0.8916666507720947, 0.8939999938011169, 0.8896666765213013, 0.8916666507720947, 0.890999972820282, 0.8926666378974915, 0.8913333415985107]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8600000143051147, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223026990890503, 1.8761483430862427, 1.4008421897888184, 1.1034438610076904, 0.935589075088501, 0.8592748045921326, 0.7831430435180664, 0.7357061505317688, 0.6936081051826477, 0.6724048256874084, 0.6367940902709961, 0.6139319539070129, 0.5908424854278564, 0.5716477632522583, 0.5614557862281799, 0.549773097038269, 0.5297626256942749, 0.5180747509002686, 0.5104223489761353, 0.4900026023387909, 0.48410916328430176, 0.474301278591156, 0.4659109115600586, 0.45834463834762573, 0.4571548402309418, 0.4415791630744934, 0.4340042173862457, 0.42776909470558167, 0.4254843294620514, 0.40949469804763794, 0.4004170596599579, 0.3964015543460846, 0.3933691680431366, 0.38859859108924866, 0.3840327560901642, 0.37324368953704834, 0.37328851222991943, 0.3670778274536133, 0.357782781124115, 0.3602871596813202, 0.35104900598526, 0.3545397222042084, 0.3349613845348358, 0.339353084564209, 0.3398096561431885, 0.33347460627555847, 0.32373684644699097, 0.3227733075618744, 0.3166857361793518, 0.30988797545433044, 0.3064626455307007, 0.298403799533844, 0.3033123016357422, 0.2962057888507843, 0.2862566411495209, 0.28652286529541016, 0.285385400056839, 0.2789059579372406, 0.2729150354862213, 0.27037858963012695, 0.26681622862815857, 0.2610480785369873, 0.26256123185157776, 0.2557491362094879, 0.2538130283355713, 0.2528599798679352, 0.24616941809654236, 0.2391657829284668, 0.23677703738212585, 0.22659552097320557, 0.23367328941822052, 0.22964902222156525, 0.21815955638885498], "accuracy": [0.26865673065185547, 0.48249900341033936, 0.557390034198761, 0.6110157370567322, 0.6600185036659241, 0.6911900639533997, 0.7094175219535828, 0.7308149337768555, 0.7456082701683044, 0.7518161535263062, 0.770439863204956, 0.7751948237419128, 0.7794214487075806, 0.7927618622779846, 0.7967243194580078, 0.7980451583862305, 0.8058380484580994, 0.8119139075279236, 0.8127063512802124, 0.8226125836372375, 0.8249900937080383, 0.8244617581367493, 0.8345000743865967, 0.8380662798881531, 0.8348963260650635, 0.8444063067436218, 0.8426892161369324, 0.8475762605667114, 0.8450667262077332, 0.8553691506385803, 0.852859616279602, 0.8605204224586487, 0.8597279191017151, 0.8598600029945374, 0.8610487580299377, 0.8636903762817383, 0.8698983192443848, 0.8692378997802734, 0.8734645247459412, 0.8676528930664062, 0.8701624870300293, 0.8712190985679626, 0.8774270415306091, 0.8737286925315857, 0.8737286925315857, 0.8802007436752319, 0.8784837126731873, 0.8858803510665894, 0.8862766027450562, 0.8857482671737671, 0.8891823887825012, 0.8930128216743469, 0.8899748921394348, 0.8944657444953918, 0.8951261639595032, 0.895918607711792, 0.8948619961738586, 0.8973715305328369, 0.9015982151031494, 0.9025228023529053, 0.9005415439605713, 0.9043719172477722, 0.9025228023529053, 0.9083344340324402, 0.9076740145683289, 0.9076740145683289, 0.9059569239616394, 0.9126931428909302, 0.9144102334976196, 0.9170519113540649, 0.9149385690689087, 0.9177123308181763, 0.9204860925674438], "val_loss": [2.0387730598449707, 1.5114306211471558, 1.0316182374954224, 0.8231022953987122, 0.7306568026542664, 0.6787886619567871, 0.6357513666152954, 0.597112774848938, 0.5715607404708862, 0.547760009765625, 0.5334948897361755, 0.5165842175483704, 0.49703747034072876, 0.48692020773887634, 0.4707156717777252, 0.46203598380088806, 0.45408037304878235, 0.44716036319732666, 0.44293448328971863, 0.43424323201179504, 0.4191558063030243, 0.41944196820259094, 0.41267064213752747, 0.40971866250038147, 0.39958855509757996, 0.39937853813171387, 0.3943958282470703, 0.39499136805534363, 0.3787153363227844, 0.3760179877281189, 0.3744170367717743, 0.3676874041557312, 0.36645907163619995, 0.363080769777298, 0.36366114020347595, 0.3588700294494629, 0.3571493327617645, 0.3555639386177063, 0.34909480810165405, 0.3572241961956024, 0.34357738494873047, 0.3457511067390442, 0.34268754720687866, 0.3421531617641449, 0.3378855586051941, 0.33695852756500244, 0.3390226364135742, 0.3266141712665558, 0.3320589065551758, 0.3276750147342682, 0.32912564277648926, 0.3266577422618866, 0.32614651322364807, 0.320414274930954, 0.3213719129562378, 0.3187248408794403, 0.3123477101325989, 0.3156944513320923, 0.3171439468860626, 0.3124689757823944, 0.3137434422969818, 0.31514739990234375, 0.31156933307647705, 0.3086751401424408, 0.3134569227695465, 0.30962637066841125, 0.3084278702735901, 0.31029292941093445, 0.30355387926101685, 0.309093713760376, 0.30340537428855896, 0.3032378852367401, 0.3054138123989105], "val_accuracy": [0.5506666898727417, 0.6723333597183228, 0.6946666836738586, 0.7110000252723694, 0.7363333106040955, 0.7513333559036255, 0.7646666765213013, 0.7733333110809326, 0.7826666831970215, 0.7933333516120911, 0.8073333501815796, 0.800000011920929, 0.8100000023841858, 0.815666675567627, 0.8356666564941406, 0.8366666436195374, 0.831333339214325, 0.8383333086967468, 0.8416666388511658, 0.8413333296775818, 0.859666645526886, 0.8483333587646484, 0.8560000061988831, 0.8536666631698608, 0.8606666922569275, 0.8576666712760925, 0.859666645526886, 0.8533333539962769, 0.8706666827201843, 0.8666666746139526, 0.8676666617393494, 0.8696666955947876, 0.8709999918937683, 0.8726666569709778, 0.871999979019165, 0.8723333477973938, 0.8696666955947876, 0.8709999918937683, 0.8756666779518127, 0.8763333559036255, 0.8766666650772095, 0.8790000081062317, 0.878333330154419, 0.8786666393280029, 0.8823333382606506, 0.8806666731834412, 0.8799999952316284, 0.8853333592414856, 0.8809999823570251, 0.8823333382606506, 0.8853333592414856, 0.8823333382606506, 0.8870000243186951, 0.8883333206176758, 0.887666642665863, 0.887333333492279, 0.887666642665863, 0.8896666765213013, 0.8893333077430725, 0.890666663646698, 0.887666642665863, 0.8893333077430725, 0.8893333077430725, 0.8916666507720947, 0.8870000243186951, 0.8889999985694885, 0.8889999985694885, 0.8943333625793457, 0.890333354473114, 0.8923333287239075, 0.893666684627533, 0.893666684627533, 0.8943333625793457]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 2, 3, 0, 3, 7], [0, 1, 0, 2, 1], [39, 39], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [5, 2, 3, 0, 6, 5, 5, 5], [0, 2, 0, 3], [36, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 4, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 3, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 12, 8, 4, 2, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.square(beta), tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(sigma, sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 0, 1], [0, 2, 3, 0, 6], [0, 0, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1], [0, 2, 3, 2, 3, 5, 5, 5], [0, 2, 0, 3, 4], [16, 16], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 6], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [23, 99, 96, 85, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 13, 8, 5, 2, 2, 1, 1, 1, 10, 5, 5, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.square(tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), sigma), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.303765058517456, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [5, 2, 3, 0, 3, 8], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [90], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 2, 6, 1, 8, 5, 1], [0, 0, 0, 3, 0, 0, 3, 1, 3, 0, 1, 3, 1, 5], [16, 99, 96, 67, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 30, 16, 14, 6], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(sigma, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.math.subtract(sigma, alpha), sigma), tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.square(alpha)))), tf.math.subtract(sigma, alpha)), grad)", "other_info": {"loss": [3.09111685259922e+19, 2.3566863536834717, 2.4877452850341797, 2.5347766876220703, 2.49796724319458, 4.440944671630859, 11.381361961364746, 11.072478294372559], "accuracy": [0.1080438494682312, 0.09972262382507324, 0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.1006472036242485, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3162128925323486, 2.3884830474853516, 2.5681955814361572, 2.4907243251800537, 2.520199775695801, 11.48716926574707, 11.199533462524414, 10.860993385314941], "val_accuracy": [0.09799999743700027, 0.0989999994635582, 0.10133333504199982, 0.10133333504199982, 0.09799999743700027, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3, 7, 4, 2, 1, 8], [2, 1, 0, 2, 0, 1, 3, 0], [39, 39, 63], [1, 0, 0, 0, 1, 1, 0, 0, 0, 1], [8, 2, 3, 0, 6, 5], [0, 3, 0, 3], [16, 38], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 1, 3, 9, 8, 4, 1, 3, 8, 8], [0, 0, 0, 4, 0, 0, 3, 1, 0, 0], [16, 99, 83, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 10, 8, 3, 1, 0, 1, 1, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(tf.math.sqrt(grad), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.30385422706604, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}]