[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8822857141494751, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585750579834, 1.8655762672424316, 1.394430160522461, 1.0773245096206665, 0.9378393888473511, 0.8425824046134949, 0.7776632308959961, 0.736241340637207, 0.6971188187599182, 0.6732122302055359, 0.644855797290802, 0.6276965141296387, 0.6100340485572815, 0.5899673104286194, 0.5746485590934753, 0.5484329462051392, 0.5425268411636353, 0.5357900857925415, 0.5214410424232483, 0.5127171874046326, 0.4895091950893402, 0.4932740032672882, 0.48551443219184875, 0.47113916277885437, 0.46571049094200134, 0.450914591550827, 0.438728004693985, 0.4414178729057312, 0.4245515465736389, 0.4182806611061096, 0.4126766324043274, 0.41352686285972595, 0.4031256139278412, 0.40064555406570435, 0.3982388377189636, 0.38566267490386963, 0.38400527834892273, 0.3741128146648407, 0.36422181129455566, 0.36170411109924316, 0.35991787910461426, 0.35666367411613464, 0.3521813750267029, 0.34583958983421326, 0.34736087918281555, 0.34181836247444153, 0.33650368452072144, 0.33141741156578064, 0.3230496346950531, 0.3225416839122772, 0.315096914768219, 0.3059031665325165, 0.3058394491672516, 0.3017319440841675, 0.29568877816200256, 0.2933836281299591, 0.28774771094322205, 0.2856961190700531, 0.2802303731441498, 0.2779994010925293, 0.274711549282074, 0.2719985842704773, 0.2586328387260437, 0.2598455548286438, 0.2622571289539337, 0.25739434361457825, 0.2502012252807617, 0.2544722855091095, 0.24556587636470795, 0.24580754339694977, 0.23948103189468384, 0.23949603736400604, 0.23484042286872864, 0.22871272265911102, 0.2256491780281067, 0.22479403018951416, 0.21744707226753235, 0.21390178799629211, 0.21272219717502594], "accuracy": [0.2785629332065582, 0.49451854825019836, 0.559899628162384, 0.6215823292732239, 0.6654338836669922, 0.6950204968452454, 0.7181349992752075, 0.7322678565979004, 0.7441553473472595, 0.7483819723129272, 0.7627789974212646, 0.7717606425285339, 0.7728173136711121, 0.78113853931427, 0.7882710099220276, 0.7993659973144531, 0.7976489067077637, 0.8074230551719666, 0.8128384351730347, 0.8198388814926147, 0.8212917447090149, 0.819970965385437, 0.8272355198860168, 0.8350284099578857, 0.8305375576019287, 0.8387266993522644, 0.846387505531311, 0.8433496356010437, 0.8504821062088013, 0.8524633646011353, 0.8535200357437134, 0.854708731174469, 0.856689989566803, 0.8551049828529358, 0.8593316674232483, 0.8615770936012268, 0.8628978729248047, 0.8702945709228516, 0.8691058158874512, 0.871879518032074, 0.8722757697105408, 0.8691058158874512, 0.8733324408531189, 0.8800686597824097, 0.8795403242111206, 0.8755778670310974, 0.8768987059593201, 0.8829745054244995, 0.8824461698532104, 0.8823140859603882, 0.887201189994812, 0.8897107243537903, 0.8889182209968567, 0.8927486538887024, 0.8902390599250793, 0.8953903317451477, 0.8980319499969482, 0.8976356983184814, 0.900409460067749, 0.89552241563797, 0.9025228023529053, 0.8989565372467041, 0.9056927561759949, 0.9085986018180847, 0.9030511379241943, 0.9066173434257507, 0.9101836085319519, 0.9083344340324402, 0.909259021282196, 0.9099194407463074, 0.9126931428909302, 0.9140139818191528, 0.9119006991386414, 0.9171839952468872, 0.9169198274612427, 0.9185048341751099, 0.9218068718910217, 0.9185048341751099, 0.9196935892105103], "val_loss": [2.033445358276367, 1.5042319297790527, 1.0271512269973755, 0.8147247433662415, 0.7278039455413818, 0.68117356300354, 0.6306353211402893, 0.5966841578483582, 0.5751398801803589, 0.5460951328277588, 0.5314993858337402, 0.509799063205719, 0.4957965612411499, 0.4792602062225342, 0.46671679615974426, 0.45267683267593384, 0.4441072940826416, 0.4356139600276947, 0.42943108081817627, 0.4255247414112091, 0.41811680793762207, 0.4163394272327423, 0.39929893612861633, 0.3969916105270386, 0.39089226722717285, 0.387652188539505, 0.3844633102416992, 0.3824205696582794, 0.3749690353870392, 0.3701930642127991, 0.36967378854751587, 0.36689504981040955, 0.3585263788700104, 0.3587398827075958, 0.36267170310020447, 0.3561091423034668, 0.35379692912101746, 0.3499273955821991, 0.34701839089393616, 0.3467637896537781, 0.3424672484397888, 0.33951225876808167, 0.3386255204677582, 0.34044384956359863, 0.33945050835609436, 0.33684298396110535, 0.3322163224220276, 0.33181649446487427, 0.32827115058898926, 0.3312568664550781, 0.3297465741634369, 0.3256674110889435, 0.3234780728816986, 0.32119208574295044, 0.3232716917991638, 0.3209094703197479, 0.31944912672042847, 0.3157532513141632, 0.3144265413284302, 0.31676045060157776, 0.31425556540489197, 0.3131799101829529, 0.3147056996822357, 0.3154993951320648, 0.31771615147590637, 0.31545644998550415, 0.3127000629901886, 0.31382524967193604, 0.31026333570480347, 0.3147730529308319, 0.30829918384552, 0.3107443153858185, 0.31316936016082764, 0.30297672748565674, 0.30325081944465637, 0.30436232686042786, 0.3072424829006195, 0.30681705474853516, 0.3061434030532837], "val_accuracy": [0.5526666641235352, 0.6666666865348816, 0.687333345413208, 0.7083333134651184, 0.731333315372467, 0.7446666955947876, 0.7606666684150696, 0.762666642665863, 0.7873333096504211, 0.7889999747276306, 0.7973333597183228, 0.8056666851043701, 0.8193333148956299, 0.8259999752044678, 0.8289999961853027, 0.8410000205039978, 0.8453333377838135, 0.8450000286102295, 0.8489999771118164, 0.847000002861023, 0.8516666889190674, 0.856333315372467, 0.859333336353302, 0.856333315372467, 0.8633333444595337, 0.8640000224113464, 0.8656666874885559, 0.8646666407585144, 0.8679999709129333, 0.8696666955947876, 0.8640000224113464, 0.8686666488647461, 0.8713333606719971, 0.8709999918937683, 0.8703333139419556, 0.8723333477973938, 0.871999979019165, 0.874666690826416, 0.8723333477973938, 0.8759999871253967, 0.8726666569709778, 0.875333309173584, 0.8790000081062317, 0.8756666779518127, 0.8726666569709778, 0.8769999742507935, 0.8796666860580444, 0.8796666860580444, 0.8806666731834412, 0.8793333172798157, 0.8813333511352539, 0.8840000033378601, 0.8840000033378601, 0.8843333125114441, 0.8809999823570251, 0.8856666684150696, 0.8866666555404663, 0.8833333253860474, 0.8866666555404663, 0.8843333125114441, 0.8856666684150696, 0.8880000114440918, 0.887333333492279, 0.8883333206176758, 0.8866666555404663, 0.8896666765213013, 0.8863333463668823, 0.8853333592414856, 0.890999972820282, 0.8870000243186951, 0.8883333206176758, 0.8883333206176758, 0.8916666507720947, 0.8939999938011169, 0.8896666765213013, 0.8916666507720947, 0.890999972820282, 0.8926666378974915, 0.8913333415985107]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8628571629524231, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2208240032196045, 1.8637206554412842, 1.3909270763397217, 1.0991231203079224, 0.9455513954162598, 0.840266764163971, 0.7810822129249573, 0.7297950983047485, 0.6938375234603882, 0.6672956943511963, 0.6358026266098022, 0.6146621108055115, 0.5916451215744019, 0.5823666453361511, 0.5642148852348328, 0.5463185906410217, 0.534485936164856, 0.5070456266403198, 0.5122106671333313, 0.5007579922676086, 0.4874160587787628, 0.47503137588500977, 0.46662473678588867, 0.4615253210067749, 0.44606301188468933, 0.43751060962677, 0.4272140860557556, 0.41655611991882324, 0.4166790843009949, 0.4193156063556671, 0.40378257632255554, 0.39115777611732483, 0.3946778476238251, 0.38337811827659607, 0.3728625774383545, 0.37118491530418396, 0.3632681369781494, 0.3618229627609253, 0.3486637771129608, 0.3485855162143707, 0.3525809943675995, 0.3428661823272705, 0.3346186578273773, 0.3332037627696991, 0.3236599862575531, 0.31138694286346436, 0.3221626281738281, 0.3150453567504883, 0.3145204782485962, 0.30838069319725037, 0.29908961057662964, 0.297078013420105, 0.2872070074081421, 0.2844795286655426, 0.2836940884590149, 0.2831669747829437, 0.27376750111579895, 0.27631837129592896, 0.26827272772789, 0.26535069942474365, 0.25941482186317444, 0.25547078251838684, 0.25980693101882935], "accuracy": [0.2771100103855133, 0.481838583946228, 0.5680887699127197, 0.6188086271286011, 0.663848876953125, 0.69673752784729, 0.7189275026321411, 0.7376832365989685, 0.7477215528488159, 0.7531369924545288, 0.7664773464202881, 0.7733456492424011, 0.7866860628128052, 0.7891955971717834, 0.7979130744934082, 0.7984414100646973, 0.8079513907432556, 0.8182538747787476, 0.8168009519577026, 0.817461371421814, 0.8274996876716614, 0.8301413059234619, 0.8323867321014404, 0.8334434032440186, 0.8451988101005554, 0.8470479249954224, 0.8465195894241333, 0.8479725122451782, 0.8502179384231567, 0.8494254350662231, 0.8560295701026917, 0.8594637513160706, 0.8562937378883362, 0.8622375130653381, 0.8614450097084045, 0.8661999702453613, 0.8679170608520508, 0.8684453964233398, 0.8722757697105408, 0.8747853636741638, 0.8691058158874512, 0.8741249442100525, 0.8782195448875427, 0.8829745054244995, 0.8850878477096558, 0.886672854423523, 0.882710337638855, 0.8849557638168335, 0.8857482671737671, 0.8877294659614563, 0.8923524022102356, 0.8910315632820129, 0.8965790271759033, 0.8948619961738586, 0.8982961177825928, 0.8971073627471924, 0.901862382888794, 0.8989565372467041, 0.9005415439605713, 0.904768168926239, 0.9064852595329285, 0.906749427318573, 0.9049002528190613], "val_loss": [2.0349338054656982, 1.5139098167419434, 1.049113392829895, 0.8428618907928467, 0.7580936551094055, 0.6994816064834595, 0.658029317855835, 0.6221155524253845, 0.5920267105102539, 0.5715378522872925, 0.5493971109390259, 0.5315023064613342, 0.5214786529541016, 0.5051253437995911, 0.5047262907028198, 0.49096575379371643, 0.47504037618637085, 0.4707263708114624, 0.46311238408088684, 0.45244914293289185, 0.44564974308013916, 0.4398442804813385, 0.43495118618011475, 0.4318385124206543, 0.42266830801963806, 0.4192529022693634, 0.41078633069992065, 0.4119974374771118, 0.41443702578544617, 0.40582138299942017, 0.404529333114624, 0.3965270519256592, 0.3961016833782196, 0.39949360489845276, 0.38891446590423584, 0.3931027054786682, 0.38035938143730164, 0.38113388419151306, 0.38241666555404663, 0.3818608522415161, 0.38281258940696716, 0.376066654920578, 0.37277254462242126, 0.3694292902946472, 0.37552380561828613, 0.3670179545879364, 0.3685029149055481, 0.370108038187027, 0.3676212430000305, 0.36043742299079895, 0.3643321990966797, 0.36090412735939026, 0.36016222834587097, 0.3627290725708008, 0.3549884557723999, 0.35385531187057495, 0.35426566004753113, 0.34992626309394836, 0.35384801030158997, 0.3542676270008087, 0.3568402826786041, 0.3528035581111908, 0.34993797540664673], "val_accuracy": [0.5370000004768372, 0.640666663646698, 0.6726666688919067, 0.7089999914169312, 0.7203333377838135, 0.7423333525657654, 0.7573333382606506, 0.7670000195503235, 0.7799999713897705, 0.7850000262260437, 0.7923333048820496, 0.8026666641235352, 0.8083333373069763, 0.8130000233650208, 0.8053333163261414, 0.8186666369438171, 0.82833331823349, 0.8323333263397217, 0.8326666951179504, 0.8386666774749756, 0.8393333554267883, 0.8376666903495789, 0.8396666646003723, 0.8446666598320007, 0.8456666469573975, 0.8496666550636292, 0.8503333330154419, 0.8513333201408386, 0.847000002861023, 0.8529999852180481, 0.8519999980926514, 0.8583333492279053, 0.8553333282470703, 0.8586666584014893, 0.8600000143051147, 0.8576666712760925, 0.8636666536331177, 0.8653333187103271, 0.8616666793823242, 0.862333357334137, 0.862666666507721, 0.8666666746139526, 0.8643333315849304, 0.8686666488647461, 0.8669999837875366, 0.8663333058357239, 0.8659999966621399, 0.8669999837875366, 0.8709999918937683, 0.8696666955947876, 0.8676666617393494, 0.8693333268165588, 0.8686666488647461, 0.8730000257492065, 0.8713333606719971, 0.8740000128746033, 0.8703333139419556, 0.8756666779518127, 0.871999979019165, 0.874666690826416, 0.871666669845581, 0.8723333477973938, 0.8733333349227905]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [2, 2, 3, 0, 3, 9], [0, 1, 0, 2], [39, 39, 74], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 5, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 4, 3], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 4, 5], [16, 99, 96, 87, 64, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 3, 6, 4, 2, 1, 2, 1, 1, 1, 24, 12, 12, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.pow(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, grad)))", "other_info": {"loss": [2.871816635131836, 26.410959243774414, 243.86395263671875, 1427.9371337890625, 5574.169921875, 16261.2587890625], "accuracy": [0.1022322028875351, 0.10289261490106583, 0.1006472036242485, 0.09972262382507324, 0.09721305221319199, 0.10289261490106583], "val_loss": [5.638306140899658, 44.30799865722656, 266.61944580078125, 1405.088623046875, 4530.6826171875, 13051.4423828125], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 9, 3, 0, 6], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0], [0, 2, 3, 2, 4, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [29], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [6, 3, 3, 6, 1, 1, 4, 1, 4, 2, 8, 3, 5, 3], [0, 0, 0, 3, 4, 0, 3, 1, 2, 0, 7, 5, 4], [16, 99, 96, 99, 44, 25]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 0, 1, 8, 4, 4, 2, 2, 1, 1, 1, 27, 14, 13, 5], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(sigma, tf.math.add(grad, tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32))))), tf.math.multiply(tf.math.square(sigma), alpha))), beta), tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), grad))), grad), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10302469879388809, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 98], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 9, 3, 0, 3, 5], [0, 2, 0, 3], [16, 6], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 1, 1, 2, 4], [16, 99, 0, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 2, 2, 0, 1, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), alpha)), alpha), tf.math.add(tf.math.sqrt(beta), grad))", "other_info": {"loss": [2.3037562370300293, 2.302618980407715, 2.302650213241577, 2.3026645183563232, 2.3026745319366455, 2.302683115005493], "accuracy": [0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3026294708251953, 2.3026366233825684, 2.3026459217071533, 2.3026506900787354, 2.3026533126831055, 2.302656650543213], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0], [0, 2, 3, 0, 3, 0, 5, 9], [0, 1, 0, 2], [39, 39, 71], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 1, 0, 3, 5], [0, 2, 3, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 0, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 2, 1, 4, 4], [16, 99, 89, 9, 61, 64]], "fitness": -0.08714285492897034, "mapping_values": [1, 11, 8, 3, 3, 10, 6, 4, 1, 2, 1, 1, 1, 17, 9, 8, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.negative(alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), beta)))), alpha)", "other_info": {"loss": [2.3091912269592285, 2.3076529502868652, 2.3080828189849854, 2.3072502613067627, 2.306907892227173, 2.3066794872283936], "accuracy": [0.09166556596755981, 0.09298639744520187, 0.0886276587843895, 0.08281600475311279, 0.08532558381557465, 0.08625016361474991], "val_loss": [2.307807207107544, 2.3073744773864746, 2.3070507049560547, 2.30678653717041, 2.306579113006592, 2.306385040283203], "val_accuracy": [0.08033332973718643, 0.07333333045244217, 0.0716666653752327, 0.0676666647195816, 0.06733333319425583, 0.06366666406393051]}}]