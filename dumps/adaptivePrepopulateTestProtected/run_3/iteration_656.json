[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8822857141494751, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585750579834, 1.8655762672424316, 1.394430160522461, 1.0773245096206665, 0.9378393888473511, 0.8425824046134949, 0.7776632308959961, 0.736241340637207, 0.6971188187599182, 0.6732122302055359, 0.644855797290802, 0.6276965141296387, 0.6100340485572815, 0.5899673104286194, 0.5746485590934753, 0.5484329462051392, 0.5425268411636353, 0.5357900857925415, 0.5214410424232483, 0.5127171874046326, 0.4895091950893402, 0.4932740032672882, 0.48551443219184875, 0.47113916277885437, 0.46571049094200134, 0.450914591550827, 0.438728004693985, 0.4414178729057312, 0.4245515465736389, 0.4182806611061096, 0.4126766324043274, 0.41352686285972595, 0.4031256139278412, 0.40064555406570435, 0.3982388377189636, 0.38566267490386963, 0.38400527834892273, 0.3741128146648407, 0.36422181129455566, 0.36170411109924316, 0.35991787910461426, 0.35666367411613464, 0.3521813750267029, 0.34583958983421326, 0.34736087918281555, 0.34181836247444153, 0.33650368452072144, 0.33141741156578064, 0.3230496346950531, 0.3225416839122772, 0.315096914768219, 0.3059031665325165, 0.3058394491672516, 0.3017319440841675, 0.29568877816200256, 0.2933836281299591, 0.28774771094322205, 0.2856961190700531, 0.2802303731441498, 0.2779994010925293, 0.274711549282074, 0.2719985842704773, 0.2586328387260437, 0.2598455548286438, 0.2622571289539337, 0.25739434361457825, 0.2502012252807617, 0.2544722855091095, 0.24556587636470795, 0.24580754339694977, 0.23948103189468384, 0.23949603736400604, 0.23484042286872864, 0.22871272265911102, 0.2256491780281067, 0.22479403018951416, 0.21744707226753235, 0.21390178799629211, 0.21272219717502594], "accuracy": [0.2785629332065582, 0.49451854825019836, 0.559899628162384, 0.6215823292732239, 0.6654338836669922, 0.6950204968452454, 0.7181349992752075, 0.7322678565979004, 0.7441553473472595, 0.7483819723129272, 0.7627789974212646, 0.7717606425285339, 0.7728173136711121, 0.78113853931427, 0.7882710099220276, 0.7993659973144531, 0.7976489067077637, 0.8074230551719666, 0.8128384351730347, 0.8198388814926147, 0.8212917447090149, 0.819970965385437, 0.8272355198860168, 0.8350284099578857, 0.8305375576019287, 0.8387266993522644, 0.846387505531311, 0.8433496356010437, 0.8504821062088013, 0.8524633646011353, 0.8535200357437134, 0.854708731174469, 0.856689989566803, 0.8551049828529358, 0.8593316674232483, 0.8615770936012268, 0.8628978729248047, 0.8702945709228516, 0.8691058158874512, 0.871879518032074, 0.8722757697105408, 0.8691058158874512, 0.8733324408531189, 0.8800686597824097, 0.8795403242111206, 0.8755778670310974, 0.8768987059593201, 0.8829745054244995, 0.8824461698532104, 0.8823140859603882, 0.887201189994812, 0.8897107243537903, 0.8889182209968567, 0.8927486538887024, 0.8902390599250793, 0.8953903317451477, 0.8980319499969482, 0.8976356983184814, 0.900409460067749, 0.89552241563797, 0.9025228023529053, 0.8989565372467041, 0.9056927561759949, 0.9085986018180847, 0.9030511379241943, 0.9066173434257507, 0.9101836085319519, 0.9083344340324402, 0.909259021282196, 0.9099194407463074, 0.9126931428909302, 0.9140139818191528, 0.9119006991386414, 0.9171839952468872, 0.9169198274612427, 0.9185048341751099, 0.9218068718910217, 0.9185048341751099, 0.9196935892105103], "val_loss": [2.033445358276367, 1.5042319297790527, 1.0271512269973755, 0.8147247433662415, 0.7278039455413818, 0.68117356300354, 0.6306353211402893, 0.5966841578483582, 0.5751398801803589, 0.5460951328277588, 0.5314993858337402, 0.509799063205719, 0.4957965612411499, 0.4792602062225342, 0.46671679615974426, 0.45267683267593384, 0.4441072940826416, 0.4356139600276947, 0.42943108081817627, 0.4255247414112091, 0.41811680793762207, 0.4163394272327423, 0.39929893612861633, 0.3969916105270386, 0.39089226722717285, 0.387652188539505, 0.3844633102416992, 0.3824205696582794, 0.3749690353870392, 0.3701930642127991, 0.36967378854751587, 0.36689504981040955, 0.3585263788700104, 0.3587398827075958, 0.36267170310020447, 0.3561091423034668, 0.35379692912101746, 0.3499273955821991, 0.34701839089393616, 0.3467637896537781, 0.3424672484397888, 0.33951225876808167, 0.3386255204677582, 0.34044384956359863, 0.33945050835609436, 0.33684298396110535, 0.3322163224220276, 0.33181649446487427, 0.32827115058898926, 0.3312568664550781, 0.3297465741634369, 0.3256674110889435, 0.3234780728816986, 0.32119208574295044, 0.3232716917991638, 0.3209094703197479, 0.31944912672042847, 0.3157532513141632, 0.3144265413284302, 0.31676045060157776, 0.31425556540489197, 0.3131799101829529, 0.3147056996822357, 0.3154993951320648, 0.31771615147590637, 0.31545644998550415, 0.3127000629901886, 0.31382524967193604, 0.31026333570480347, 0.3147730529308319, 0.30829918384552, 0.3107443153858185, 0.31316936016082764, 0.30297672748565674, 0.30325081944465637, 0.30436232686042786, 0.3072424829006195, 0.30681705474853516, 0.3061434030532837], "val_accuracy": [0.5526666641235352, 0.6666666865348816, 0.687333345413208, 0.7083333134651184, 0.731333315372467, 0.7446666955947876, 0.7606666684150696, 0.762666642665863, 0.7873333096504211, 0.7889999747276306, 0.7973333597183228, 0.8056666851043701, 0.8193333148956299, 0.8259999752044678, 0.8289999961853027, 0.8410000205039978, 0.8453333377838135, 0.8450000286102295, 0.8489999771118164, 0.847000002861023, 0.8516666889190674, 0.856333315372467, 0.859333336353302, 0.856333315372467, 0.8633333444595337, 0.8640000224113464, 0.8656666874885559, 0.8646666407585144, 0.8679999709129333, 0.8696666955947876, 0.8640000224113464, 0.8686666488647461, 0.8713333606719971, 0.8709999918937683, 0.8703333139419556, 0.8723333477973938, 0.871999979019165, 0.874666690826416, 0.8723333477973938, 0.8759999871253967, 0.8726666569709778, 0.875333309173584, 0.8790000081062317, 0.8756666779518127, 0.8726666569709778, 0.8769999742507935, 0.8796666860580444, 0.8796666860580444, 0.8806666731834412, 0.8793333172798157, 0.8813333511352539, 0.8840000033378601, 0.8840000033378601, 0.8843333125114441, 0.8809999823570251, 0.8856666684150696, 0.8866666555404663, 0.8833333253860474, 0.8866666555404663, 0.8843333125114441, 0.8856666684150696, 0.8880000114440918, 0.887333333492279, 0.8883333206176758, 0.8866666555404663, 0.8896666765213013, 0.8863333463668823, 0.8853333592414856, 0.890999972820282, 0.8870000243186951, 0.8883333206176758, 0.8883333206176758, 0.8916666507720947, 0.8939999938011169, 0.8896666765213013, 0.8916666507720947, 0.890999972820282, 0.8926666378974915, 0.8913333415985107]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8562856912612915, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224539041519165, 1.8713048696517944, 1.4014604091644287, 1.0917452573776245, 0.9386488199234009, 0.845457136631012, 0.7831414937973022, 0.7438620924949646, 0.7037162780761719, 0.668644905090332, 0.6487640142440796, 0.633923351764679, 0.6113396286964417, 0.5878093838691711, 0.5811389684677124, 0.567228376865387, 0.550299346446991, 0.5406415462493896, 0.5270968079566956, 0.5171924233436584, 0.50322026014328, 0.4963632822036743, 0.476785272359848, 0.4701184928417206, 0.4659344255924225, 0.45695942640304565, 0.44986823201179504, 0.44645509123802185, 0.4397830367088318, 0.4273499846458435, 0.4176209568977356, 0.4179273545742035, 0.4033048748970032, 0.396557480096817, 0.3953717350959778, 0.39223363995552063, 0.3849583864212036, 0.37483420968055725, 0.3689291775226593, 0.37108466029167175, 0.35806190967559814, 0.3547859489917755, 0.3538515865802765, 0.351466566324234, 0.3361797630786896, 0.33452335000038147, 0.3272194266319275, 0.3269188702106476, 0.3203853666782379, 0.32016557455062866, 0.31294891238212585, 0.30656787753105164, 0.30569377541542053, 0.2997921109199524, 0.29683688282966614, 0.28956034779548645, 0.28568407893180847, 0.2825927138328552, 0.2796897292137146, 0.27580729126930237, 0.2735805809497833, 0.267561137676239, 0.26319292187690735, 0.25928154587745667, 0.2539622485637665, 0.2501084804534912, 0.25569167733192444, 0.24472013115882874, 0.23881934583187103, 0.23285122215747833, 0.2332291156053543, 0.2285638302564621, 0.23037713766098022, 0.22113877534866333, 0.2161983698606491, 0.22341188788414001, 0.21362575888633728, 0.2109822928905487, 0.20231221616268158, 0.205095574259758, 0.20346906781196594, 0.19875429570674896, 0.18970949947834015, 0.1875515580177307, 0.18737496435642242, 0.18182191252708435, 0.18448849022388458], "accuracy": [0.27261921763420105, 0.48725399374961853, 0.5676925182342529, 0.6189407110214233, 0.6701889038085938, 0.6979262828826904, 0.7244749665260315, 0.735041618347168, 0.7453441023826599, 0.7633073329925537, 0.7617223858833313, 0.774798572063446, 0.7817989587783813, 0.7849689722061157, 0.789988100528717, 0.8017435073852539, 0.8047813773155212, 0.8050455451011658, 0.8123101592063904, 0.817989706993103, 0.8208954930305481, 0.8240655064582825, 0.8280280232429504, 0.8315942287445068, 0.8368775844573975, 0.8383304476737976, 0.8362171649932861, 0.8393871188163757, 0.8475762605667114, 0.8441421389579773, 0.8504821062088013, 0.8491612672805786, 0.8573504090309143, 0.8613129258155823, 0.8623695969581604, 0.8609166741371155, 0.8640866279602051, 0.8663320541381836, 0.8705587387084961, 0.8697662353515625, 0.8712190985679626, 0.8732003569602966, 0.8720116019248962, 0.8758420348167419, 0.8816536664962769, 0.880729079246521, 0.8784837126731873, 0.8825782537460327, 0.8835028409957886, 0.8873332738876343, 0.8865407705307007, 0.8911636471748352, 0.8893144726753235, 0.8926165699958801, 0.8927486538887024, 0.8973715305328369, 0.8975036144256592, 0.8919561505317688, 0.8967111110687256, 0.8994848728179932, 0.9034473896026611, 0.9021265506744385, 0.906749427318573, 0.9060890078544617, 0.9056927561759949, 0.9055606722831726, 0.9078060984611511, 0.9134856462478638, 0.9141460657119751, 0.9173160791397095, 0.9142781496047974, 0.9121648669242859, 0.9161273241043091, 0.9190331697463989, 0.9210143685340881, 0.920089840888977, 0.925901472568512, 0.9243164658546448, 0.930260181427002, 0.9270902276039124, 0.9262977242469788, 0.9273543953895569, 0.9325056076049805, 0.935279369354248, 0.9342226982116699, 0.9366002082824707, 0.9290714859962463], "val_loss": [2.0382909774780273, 1.5056930780410767, 1.030703067779541, 0.8274562954902649, 0.747107982635498, 0.6896446943283081, 0.6486575603485107, 0.6137414574623108, 0.588981032371521, 0.5687173008918762, 0.5466210246086121, 0.532597005367279, 0.5150668025016785, 0.507066547870636, 0.49481338262557983, 0.4866727590560913, 0.47340527176856995, 0.4620494842529297, 0.4518929421901703, 0.4470612406730652, 0.44284000992774963, 0.4340103268623352, 0.42763856053352356, 0.41656607389450073, 0.415449857711792, 0.411029577255249, 0.40428483486175537, 0.4049775302410126, 0.39671558141708374, 0.39466413855552673, 0.3944673538208008, 0.3852804899215698, 0.38233259320259094, 0.3847225606441498, 0.37556689977645874, 0.37091735005378723, 0.3698292374610901, 0.3695862889289856, 0.3622587025165558, 0.36292096972465515, 0.3608396053314209, 0.3583386242389679, 0.3528769016265869, 0.35564014315605164, 0.3515734076499939, 0.34645867347717285, 0.347227543592453, 0.3517729938030243, 0.34571757912635803, 0.3452213406562805, 0.3422771692276001, 0.3426474332809448, 0.3395262062549591, 0.3383597433567047, 0.3407694101333618, 0.33327582478523254, 0.3411165475845337, 0.33459821343421936, 0.34615015983581543, 0.3357790410518646, 0.3330143988132477, 0.3311801850795746, 0.3435297906398773, 0.33113333582878113, 0.33067843317985535, 0.3338949680328369, 0.3311300277709961, 0.331966757774353, 0.3310321867465973, 0.32520976662635803, 0.3319608271121979, 0.32533764839172363, 0.3264123797416687, 0.3291117548942566, 0.32816722989082336, 0.3254530727863312, 0.3290553092956543, 0.32649898529052734, 0.3273395001888275, 0.329934686422348, 0.32372087240219116, 0.3211100697517395, 0.32689735293388367, 0.3265846371650696, 0.32641252875328064, 0.3301721513271332, 0.3291148245334625], "val_accuracy": [0.5690000057220459, 0.6660000085830688, 0.6899999976158142, 0.7153333425521851, 0.7256666421890259, 0.7450000047683716, 0.7556666731834412, 0.765333354473114, 0.7730000019073486, 0.7823333144187927, 0.7910000085830688, 0.7983333468437195, 0.796999990940094, 0.8116666674613953, 0.8143333196640015, 0.8206666707992554, 0.8253333568572998, 0.8330000042915344, 0.8323333263397217, 0.8326666951179504, 0.840666651725769, 0.8423333168029785, 0.8399999737739563, 0.8450000286102295, 0.8453333377838135, 0.8533333539962769, 0.8529999852180481, 0.8526666760444641, 0.8546666502952576, 0.8553333282470703, 0.8600000143051147, 0.859000027179718, 0.859333336353302, 0.8600000143051147, 0.8640000224113464, 0.8659999966621399, 0.862666666507721, 0.8656666874885559, 0.8686666488647461, 0.8659999966621399, 0.8730000257492065, 0.8673333525657654, 0.8730000257492065, 0.874666690826416, 0.875333309173584, 0.8733333349227905, 0.8733333349227905, 0.8706666827201843, 0.8763333559036255, 0.8743333220481873, 0.8759999871253967, 0.8773333430290222, 0.8786666393280029, 0.8786666393280029, 0.8736666440963745, 0.8790000081062317, 0.8723333477973938, 0.8786666393280029, 0.8733333349227905, 0.8776666522026062, 0.8793333172798157, 0.8799999952316284, 0.8766666650772095, 0.8776666522026062, 0.8816666603088379, 0.8793333172798157, 0.8820000290870667, 0.8816666603088379, 0.8826666474342346, 0.8843333125114441, 0.8796666860580444, 0.8830000162124634, 0.8849999904632568, 0.8826666474342346, 0.8840000033378601, 0.8843333125114441, 0.8853333592414856, 0.8846666812896729, 0.8843333125114441, 0.8799999952316284, 0.8836666941642761, 0.8899999856948853, 0.8830000162124634, 0.8886666893959045, 0.8863333463668823, 0.8866666555404663, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 2, 3, 2, 8, 1, 0, 3, 4, 4, 5], [0, 1, 0, 2, 1, 3, 2, 3], [29, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 2, 3, 0, 3, 5], [0, 0, 0, 3], [16, 96, 6], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0], [0, 0, 3, 7, 3, 6, 4, 1, 6, 6, 8, 5, 9], [0, 1, 4, 7, 6, 2, 2, 1], [99, 96], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [6, 5, 3, 6, 8, 1, 4, 1, 4, 2, 8, 9, 9], [0, 0, 0, 3, 0, 0, 3, 1, 2, 1], [16, 99, 96, 99, 61, 63, 29]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 11, 8, 2, 6, 3, 3, 3, 21, 13, 8, 2, 20, 13, 7, 7], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.math.sqrt(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.math.subtract(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad), tf.math.negative(tf.math.multiply(alpha, tf.math.pow(tf.math.pow(tf.math.square(grad), grad), grad))))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(alpha, grad), tf.math.divide_no_nan(tf.math.pow(tf.math.subtract(tf.math.divide_no_nan(tf.math.divide_no_nan(grad, grad), beta), tf.math.sqrt(beta)), alpha), tf.math.square(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.square(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 2, 3, 0, 6], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 8], [0, 2, 0, 3], [16, 79], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 0, 2, 8, 3, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 1, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.sqrt(tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(alpha, sigma)))), alpha)", "other_info": {"loss": [2.3036720752716064, 1946.9481201171875, 4.5314195585374146e+20, NaN, NaN, 2.3025851249694824, NaN], "accuracy": [0.09721305221319199, 0.1014397069811821, 0.09840179979801178, 0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 255153072.0, 4.438530859026054e+26, NaN, 2.3025853633880615, 2.3025853633880615, NaN], "val_accuracy": [0.0976666659116745, 0.10000000149011612, 0.09933333098888397, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 2, 2, 1, 1, 1, 17, 9, 8, 4], "tree_depth": 16}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1], [0, 4, 3, 0, 3, 3, 2, 9], [0, 1, 1, 2, 1], [39, 87], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [9, 2, 0, 0, 3, 5], [3, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [4, 3, 1, 6, 2, 1, 4, 0, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 4, 2, 4], [16, 99, 96, 46, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 8, 5, 2, 1, 1, 0, 1, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(alpha, tf.math.multiply(tf.math.add(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), grad), alpha)))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma)))), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 6, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 5, 2, 3, 6, 5, 2, 1, 4, 6], [1, 1, 0, 3, 5, 5, 1, 3, 5, 1, 0], [16, 16], [1, 1], [9], [0], [13], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 8, 8, 1, 4, 1, 4, 2, 8], [0, 2, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.0917142853140831, "mapping_values": [1, 9, 5, 4, 2, 25, 14, 11, 2, 1, 0, 1, 1, 17, 9, 8, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(alpha), tf.math.multiply(tf.math.square(alpha), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.math.multiply(tf.math.divide_no_nan(grad, grad), tf.math.square(tf.math.add(tf.math.subtract(alpha, grad), tf.math.pow(grad, tf.math.divide_no_nan(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.sqrt(tf.math.subtract(beta, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), alpha)", "other_info": {"loss": [2.3095879554748535, 2.309467077255249, 2.310631036758423, 2.310535430908203, 2.308936357498169, 2.309760093688965], "accuracy": [0.09192973375320435, 0.09285431355237961, 0.08796724677085876, 0.08968432247638702, 0.09576013684272766, 0.0878351628780365], "val_loss": [2.308199167251587, 2.308199167251587, 2.308199167251587, 2.308199167251587, 2.308199167251587, 2.308199167251587], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}]