[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8808571696281433, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223215103149414, 1.8640538454055786, 1.390925645828247, 1.0857504606246948, 0.9175904989242554, 0.8278062343597412, 0.75929194688797, 0.7150763869285583, 0.6742342710494995, 0.6527069211006165, 0.6226239800453186, 0.6030511260032654, 0.5812473893165588, 0.5698184370994568, 0.5517233610153198, 0.5318202376365662, 0.5262278914451599, 0.5063096284866333, 0.4941454231739044, 0.4912639260292053, 0.47673994302749634, 0.46776485443115234, 0.45580968260765076, 0.45419755578041077, 0.4471202790737152, 0.4368197023868561, 0.4238806366920471, 0.41453513503074646, 0.41017231345176697, 0.4062040150165558, 0.40386685729026794, 0.3953916132450104, 0.39355871081352234, 0.3836102783679962, 0.37635838985443115, 0.3735085725784302, 0.363672137260437, 0.35395750403404236, 0.35972025990486145, 0.34721699357032776, 0.3442964553833008, 0.335767537355423, 0.3300938904285431, 0.32407090067863464, 0.32112976908683777, 0.3181473910808563, 0.31370431184768677, 0.3087446987628937, 0.3084625005722046, 0.30203962326049805, 0.293395072221756, 0.2889169156551361, 0.2914500832557678, 0.28307828307151794, 0.28207361698150635, 0.2786792516708374, 0.27818819880485535, 0.26387521624565125], "accuracy": [0.27222296595573425, 0.5027077198028564, 0.5674283504486084, 0.6277902722358704, 0.6709813475608826, 0.7058512568473816, 0.7269845604896545, 0.7415136694908142, 0.7586844563484192, 0.7617223858833313, 0.783119797706604, 0.7832518815994263, 0.7926297783851624, 0.8001585006713867, 0.807158887386322, 0.8103289008140564, 0.8133667707443237, 0.8190463781356812, 0.8247259259223938, 0.8271034359931946, 0.8298771381378174, 0.8341038227081299, 0.8366134166717529, 0.839519202709198, 0.8404437899589539, 0.848368763923645, 0.8515387773513794, 0.8564258217811584, 0.8529917001724243, 0.8585391640663147, 0.8515387773513794, 0.863558292388916, 0.8615770936012268, 0.8640866279602051, 0.8652753829956055, 0.8671245574951172, 0.8720116019248962, 0.8771628737449646, 0.8705587387084961, 0.876370370388031, 0.8787478804588318, 0.8784837126731873, 0.8828424215316772, 0.8842953443527222, 0.884691596031189, 0.8840311765670776, 0.8891823887825012, 0.8894465565681458, 0.8899748921394348, 0.8932769894599915, 0.8945978283882141, 0.8980319499969482, 0.896446943283081, 0.8988244533538818, 0.9019944667816162, 0.901862382888794, 0.8985602855682373, 0.904768168926239], "val_loss": [2.039530038833618, 1.5154659748077393, 1.039007544517517, 0.8366694450378418, 0.7400773167610168, 0.6859951019287109, 0.6454513669013977, 0.6114123463630676, 0.5899704694747925, 0.5724708437919617, 0.5533395409584045, 0.5345184803009033, 0.5225448608398438, 0.5092709064483643, 0.500229001045227, 0.49316829442977905, 0.480929970741272, 0.4729439616203308, 0.4688349962234497, 0.4563703238964081, 0.45455607771873474, 0.44636544585227966, 0.44144734740257263, 0.4332112669944763, 0.42851945757865906, 0.4277913272380829, 0.4196922183036804, 0.41600528359413147, 0.4114539325237274, 0.4113328456878662, 0.4059373438358307, 0.4033544063568115, 0.40210506319999695, 0.3963744640350342, 0.39264819025993347, 0.39112263917922974, 0.384288489818573, 0.383841872215271, 0.3804401755332947, 0.3786342442035675, 0.3777892291545868, 0.37486007809638977, 0.37355443835258484, 0.37450093030929565, 0.36811116337776184, 0.3697490096092224, 0.3684578537940979, 0.370509535074234, 0.36476588249206543, 0.36312252283096313, 0.361527681350708, 0.36036449670791626, 0.3581533133983612, 0.3633516728878021, 0.35499346256256104, 0.3547135293483734, 0.35882508754730225, 0.35363712906837463], "val_accuracy": [0.5473333597183228, 0.6496666669845581, 0.6846666932106018, 0.6959999799728394, 0.7279999852180481, 0.7450000047683716, 0.7580000162124634, 0.7713333368301392, 0.7763333320617676, 0.7816666960716248, 0.7963333129882812, 0.8109999895095825, 0.8116666674613953, 0.8113333582878113, 0.8116666674613953, 0.8186666369438171, 0.8259999752044678, 0.8236666917800903, 0.828000009059906, 0.8360000252723694, 0.8323333263397217, 0.8373333215713501, 0.8373333215713501, 0.8366666436195374, 0.843666672706604, 0.843999981880188, 0.846666693687439, 0.8483333587646484, 0.8493333458900452, 0.847000002861023, 0.8476666808128357, 0.8496666550636292, 0.8510000109672546, 0.8519999980926514, 0.8553333282470703, 0.8556666374206543, 0.8583333492279053, 0.859333336353302, 0.8560000061988831, 0.862333357334137, 0.8636666536331177, 0.859666645526886, 0.8636666536331177, 0.8643333315849304, 0.8653333187103271, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.8709999918937683, 0.8690000176429749, 0.8686666488647461, 0.8653333187103271, 0.8733333349227905, 0.8679999709129333, 0.8709999918937683, 0.8706666827201843, 0.8703333139419556, 0.8693333268165588]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8560000061988831, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2210440635681152, 1.8636592626571655, 1.394628643989563, 1.0967875719070435, 0.9390026926994324, 0.8410942554473877, 0.7761396765708923, 0.7334079146385193, 0.6949951648712158, 0.6661798357963562, 0.6410703063011169, 0.6143438220024109, 0.5990000367164612, 0.5812192559242249, 0.5624781847000122, 0.5478740930557251, 0.5379354953765869, 0.5205221176147461, 0.5053292512893677, 0.5005760788917542, 0.48871177434921265, 0.4832783043384552, 0.4801754355430603, 0.45931708812713623, 0.4558604955673218, 0.44580382108688354, 0.44052597880363464, 0.42733314633369446, 0.4169257581233978, 0.42612096667289734, 0.41132551431655884, 0.40188366174697876, 0.40058308839797974, 0.38460832834243774, 0.3818880617618561, 0.37161338329315186], "accuracy": [0.27618545293807983, 0.49029189348220825, 0.5577862858772278, 0.6210539937019348, 0.6666226387023926, 0.7004358768463135, 0.7223616242408752, 0.7343811988830566, 0.7464007139205933, 0.7609298825263977, 0.7670056819915771, 0.7730814814567566, 0.7832518815994263, 0.7878747582435608, 0.7940827012062073, 0.8024039268493652, 0.8074230551719666, 0.8133667707443237, 0.8168009519577026, 0.8204993009567261, 0.8232730031013489, 0.8249900937080383, 0.8286884427070618, 0.8350284099578857, 0.8363492488861084, 0.8413683772087097, 0.842028796672821, 0.8461233377456665, 0.852331280708313, 0.8496896028518677, 0.8507462739944458, 0.860652506351471, 0.8574824929237366, 0.8636903762817383, 0.8605204224586487, 0.8644828796386719], "val_loss": [2.0379769802093506, 1.5139524936676025, 1.0446017980575562, 0.833124577999115, 0.7454401254653931, 0.6885472536087036, 0.6457318663597107, 0.6066831946372986, 0.5821638107299805, 0.5604501366615295, 0.5353872179985046, 0.52374267578125, 0.5068219304084778, 0.49450910091400146, 0.4788149297237396, 0.4700452387332916, 0.4595705270767212, 0.44902342557907104, 0.4482017457485199, 0.43543851375579834, 0.42634016275405884, 0.4222019910812378, 0.4158610701560974, 0.40797320008277893, 0.40280964970588684, 0.40336066484451294, 0.39427420496940613, 0.38810262084007263, 0.3861166536808014, 0.38227778673171997, 0.378922700881958, 0.3756782114505768, 0.37649402022361755, 0.36899152398109436, 0.36768075823783875, 0.36295416951179504], "val_accuracy": [0.5350000262260437, 0.6493333578109741, 0.671999990940094, 0.7020000219345093, 0.7310000061988831, 0.7446666955947876, 0.7556666731834412, 0.7703333497047424, 0.7816666960716248, 0.784333348274231, 0.79666668176651, 0.7990000247955322, 0.8080000281333923, 0.8133333325386047, 0.8213333487510681, 0.8259999752044678, 0.8289999961853027, 0.8333333134651184, 0.8293333053588867, 0.8410000205039978, 0.8399999737739563, 0.8463333249092102, 0.847000002861023, 0.8519999980926514, 0.8493333458900452, 0.859666645526886, 0.8583333492279053, 0.859000027179718, 0.856333315372467, 0.859333336353302, 0.8683333396911621, 0.8669999837875366, 0.8610000014305115, 0.8633333444595337, 0.8683333396911621, 0.8669999837875366]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 5], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.43542855978012085, "mapping_values": [1, 9, 5, 4, 2, 6, 3, 3, 2, 2, 1, 1, 1, 20, 10, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3044490814208984, 2.2996151447296143, 2.2983860969543457, 2.2936925888061523, 2.292119026184082, 2.290583372116089, 2.2897253036499023, 2.286229372024536, 2.2847607135772705, 2.284514904022217, 2.2826194763183594, 2.281956434249878, 2.280588150024414, 2.2785134315490723, 2.277453660964966, 2.276357412338257, 2.27628493309021, 2.2756383419036865, 2.2753422260284424, 2.2731223106384277, 2.272536039352417, 2.2717368602752686, 2.270998239517212, 2.2694056034088135, 2.2696096897125244, 2.269148826599121, 2.267207384109497, 2.2661004066467285, 2.267457962036133, 2.2647178173065186, 2.266751289367676, 2.2654194831848145, 2.2635138034820557, 2.2628397941589355, 2.2615225315093994, 2.2599635124206543, 2.260495662689209, 2.258192777633667, 2.259244918823242, 2.258202075958252, 2.257282018661499, 2.2585947513580322, 2.2566840648651123, 2.2553296089172363, 2.255725383758545, 2.2558023929595947, 2.2539913654327393, 2.255117893218994, 2.2533113956451416, 2.2524213790893555, 2.252979278564453, 2.251115322113037, 2.2506206035614014, 2.251943349838257, 2.2497875690460205, 2.2503457069396973, 2.2485570907592773, 2.2471354007720947, 2.249189615249634, 2.24705171585083, 2.246990203857422, 2.2461421489715576, 2.2463276386260986, 2.244185447692871, 2.244511842727661, 2.244732141494751, 2.24324369430542, 2.243929862976074, 2.2426905632019043, 2.2423553466796875, 2.2432539463043213, 2.2427167892456055, 2.240898847579956, 2.2408478260040283, 2.2393062114715576, 2.2392749786376953, 2.2381505966186523, 2.239957094192505, 2.238992929458618, 2.23938250541687, 2.2383925914764404, 2.236051082611084, 2.2368199825286865, 2.235743999481201, 2.234536647796631, 2.236901044845581, 2.235348701477051, 2.234572649002075, 2.2346677780151367, 2.233872890472412, 2.2340893745422363, 2.2330055236816406, 2.2329258918762207, 2.2317779064178467, 2.2315750122070312, 2.2296435832977295, 2.22991943359375, 2.2296197414398193, 2.2299416065216064, 2.230586528778076, 2.2289161682128906, 2.2294840812683105, 2.2284789085388184, 2.2266416549682617, 2.2284514904022217, 2.2278764247894287, 2.227144718170166, 2.226820945739746, 2.2265872955322266, 2.227412223815918, 2.2257020473480225, 2.224860429763794, 2.2240145206451416, 2.22487473487854, 2.2252252101898193, 2.2247867584228516, 2.2238645553588867, 2.222379446029663, 2.222564935684204, 2.221478223800659, 2.2239415645599365, 2.221475601196289, 2.222655773162842, 2.2211551666259766, 2.221451997756958, 2.2197117805480957, 2.2202188968658447, 2.2206227779388428, 2.2197442054748535, 2.2210795879364014, 2.217561960220337, 2.2172584533691406, 2.218329906463623, 2.2188198566436768, 2.2170772552490234, 2.217634677886963], "accuracy": [0.10276053100824356, 0.10830801725387573, 0.11042134463787079, 0.1258750557899475, 0.12759213149547577, 0.13010171055793762, 0.1286487877368927, 0.13934750854969025, 0.14132875204086304, 0.14674416184425354, 0.14872540533542633, 0.14832915365695953, 0.15361246466636658, 0.1578391194343567, 0.16536785662174225, 0.16840575635433197, 0.1674811840057373, 0.17157575488090515, 0.16774533689022064, 0.17223615944385529, 0.1818782240152359, 0.18042530119419098, 0.18095363676548004, 0.18333113193511963, 0.186104878783226, 0.1810857206583023, 0.18702945113182068, 0.18702945113182068, 0.18676528334617615, 0.19574692845344543, 0.18663319945335388, 0.19482234120368958, 0.1974640041589737, 0.20221899449825287, 0.20420023798942566, 0.20433232188224792, 0.21159687638282776, 0.22705058753490448, 0.21674811840057373, 0.21595561504364014, 0.21899352967739105, 0.21357811987400055, 0.21952186524868011, 0.22374852001667023, 0.21674811840057373, 0.21978603303432465, 0.227314755320549, 0.22044643759727478, 0.22639016807079315, 0.228899747133255, 0.22639016807079315, 0.2374851405620575, 0.2296922504901886, 0.22599393129348755, 0.22956016659736633, 0.23339056968688965, 0.23695680499076843, 0.23563598096370697, 0.23193766176700592, 0.24303261935710907, 0.24725927412509918, 0.24078720808029175, 0.2390701323747635, 0.24541011452674866, 0.2502971887588501, 0.2436930388212204, 0.24739135801792145, 0.24725927412509918, 0.2510896921157837, 0.24633470177650452, 0.24197596311569214, 0.2483159452676773, 0.25359925627708435, 0.25003302097320557, 0.258090078830719, 0.2541275918483734, 0.2583542466163635, 0.2565050721168518, 0.25703340768814087, 0.2456742823123932, 0.251750111579895, 0.2608638107776642, 0.26218464970588684, 0.26099589467048645, 0.2591467499732971, 0.2588825821876526, 0.258090078830719, 0.26826047897338867, 0.26284506916999817, 0.2645621597766876, 0.2635054886341095, 0.2661471366882324, 0.26958128809928894, 0.2685246467590332, 0.2677321434020996, 0.275260865688324, 0.27182671427726746, 0.2767137885093689, 0.2743362784385681, 0.2654867172241211, 0.2779025137424469, 0.26680755615234375, 0.2709021270275116, 0.27922335267066956, 0.2661471366882324, 0.27420419454574585, 0.28001585602760315, 0.2826575040817261, 0.28384625911712646, 0.2689208686351776, 0.2822612524032593, 0.27724209427833557, 0.2860916554927826, 0.28701624274253845, 0.2712983787059784, 0.284110426902771, 0.28345000743865967, 0.29401662945747375, 0.27724209427833557, 0.2954695522785187, 0.27420419454574585, 0.2849029302597046, 0.28424251079559326, 0.28939375281333923, 0.2822612524032593, 0.29560163617134094, 0.28199708461761475, 0.287280410528183, 0.27724209427833557, 0.2755250334739685, 0.301281213760376, 0.29058247804641724, 0.28926166892051697, 0.287280410528183, 0.2896578907966614, 0.2945449650287628], "val_loss": [2.2998054027557373, 2.295562982559204, 2.2924907207489014, 2.2900068759918213, 2.2878830432891846, 2.2859930992126465, 2.2842695713043213, 2.282707691192627, 2.2812488079071045, 2.2798736095428467, 2.2785704135894775, 2.2773258686065674, 2.2761387825012207, 2.274998664855957, 2.2739028930664062, 2.272834062576294, 2.271801710128784, 2.270800828933716, 2.2698309421539307, 2.268887758255005, 2.2679646015167236, 2.2670605182647705, 2.2661826610565186, 2.2653281688690186, 2.264488935470581, 2.2636654376983643, 2.2628581523895264, 2.2620575428009033, 2.26127552986145, 2.260507822036743, 2.2597496509552, 2.259003162384033, 2.2582671642303467, 2.2575438022613525, 2.256826400756836, 2.2561135292053223, 2.2554123401641846, 2.254720687866211, 2.254042625427246, 2.2533681392669678, 2.2526957988739014, 2.2520358562469482, 2.2513842582702637, 2.250739812850952, 2.2500991821289062, 2.249474048614502, 2.2488491535186768, 2.248229503631592, 2.2476158142089844, 2.247009754180908, 2.2464096546173096, 2.245819091796875, 2.245229482650757, 2.244642734527588, 2.24406361579895, 2.243487596511841, 2.2429141998291016, 2.2423431873321533, 2.241779088973999, 2.2412192821502686, 2.2406668663024902, 2.2401156425476074, 2.2395734786987305, 2.239036798477173, 2.238504409790039, 2.2379748821258545, 2.237450122833252, 2.2369282245635986, 2.2364120483398438, 2.235898494720459, 2.2353897094726562, 2.234884262084961, 2.234382390975952, 2.2338829040527344, 2.233391046524048, 2.2329025268554688, 2.2324118614196777, 2.2319283485412598, 2.23144793510437, 2.2309751510620117, 2.2305052280426025, 2.2300357818603516, 2.2295713424682617, 2.2291080951690674, 2.2286465167999268, 2.2281899452209473, 2.227736711502075, 2.227287769317627, 2.2268412113189697, 2.226397752761841, 2.2259559631347656, 2.225515842437744, 2.2250783443450928, 2.224644184112549, 2.224212408065796, 2.223780870437622, 2.223351001739502, 2.2229251861572266, 2.2225027084350586, 2.2220840454101562, 2.221669912338257, 2.221259355545044, 2.220850944519043, 2.220442771911621, 2.2200353145599365, 2.2196340560913086, 2.219235420227051, 2.2188401222229004, 2.218446731567383, 2.2180562019348145, 2.2176694869995117, 2.2172858715057373, 2.2169029712677, 2.216522693634033, 2.2161455154418945, 2.2157723903656006, 2.2154014110565186, 2.215029716491699, 2.214660882949829, 2.2142934799194336, 2.2139294147491455, 2.213569164276123, 2.2132112979888916, 2.2128539085388184, 2.2124974727630615, 2.2121458053588867, 2.2117950916290283, 2.211446523666382, 2.2111008167266846, 2.210758924484253, 2.2104196548461914, 2.210081100463867, 2.2097432613372803, 2.209409713745117, 2.2090752124786377, 2.2087433338165283], "val_accuracy": [0.10333333164453506, 0.11566666513681412, 0.1263333261013031, 0.1340000033378601, 0.14399999380111694, 0.14900000393390656, 0.15600000321865082, 0.16333332657814026, 0.1693333387374878, 0.17666666209697723, 0.1860000044107437, 0.19466666877269745, 0.20000000298023224, 0.20600000023841858, 0.21400000154972076, 0.2199999988079071, 0.22633333504199982, 0.23199999332427979, 0.23666666448116302, 0.24400000274181366, 0.25, 0.25699999928474426, 0.2619999945163727, 0.26466667652130127, 0.27166667580604553, 0.2763333320617676, 0.281333327293396, 0.28600001335144043, 0.29100000858306885, 0.29733332991600037, 0.30300000309944153, 0.3076666593551636, 0.31299999356269836, 0.3176666796207428, 0.32466667890548706, 0.3296666741371155, 0.3346666693687439, 0.3400000035762787, 0.34466665983200073, 0.35233333706855774, 0.3556666672229767, 0.35899999737739563, 0.3616666793823242, 0.3659999966621399, 0.36800000071525574, 0.3733333349227905, 0.3779999911785126, 0.3803333342075348, 0.38333332538604736, 0.3869999945163727, 0.38999998569488525, 0.3919999897480011, 0.3930000066757202, 0.3946666717529297, 0.3973333239555359, 0.3996666669845581, 0.40033334493637085, 0.4013333320617676, 0.4026666581630707, 0.40400001406669617, 0.40400001406669617, 0.4046666622161865, 0.40700000524520874, 0.41066667437553406, 0.4103333353996277, 0.4099999964237213, 0.41066667437553406, 0.4129999876022339, 0.4156666696071625, 0.4163333475589752, 0.4176666736602783, 0.4183333218097687, 0.4193333387374878, 0.4203333258628845, 0.42100000381469727, 0.421999990940094, 0.42266666889190674, 0.4233333468437195, 0.42399999499320984, 0.4246666729450226, 0.4246666729450226, 0.42533332109451294, 0.4256666600704193, 0.4266666769981384, 0.4269999861717224, 0.42766666412353516, 0.43033334612846375, 0.4313333332538605, 0.4323333203792572, 0.4326666593551636, 0.4326666593551636, 0.4333333373069763, 0.4326666593551636, 0.43299999833106995, 0.43299999833106995, 0.4339999854564667, 0.43433332443237305, 0.4350000023841858, 0.4350000023841858, 0.4363333284854889, 0.43666666746139526, 0.43666666746139526, 0.437666654586792, 0.437666654586792, 0.43799999356269836, 0.437666654586792, 0.437666654586792, 0.43799999356269836, 0.43833333253860474, 0.43933331966400146, 0.43966665863990784, 0.4399999976158142, 0.4399999976158142, 0.43966665863990784, 0.44066667556762695, 0.44066667556762695, 0.4413333237171173, 0.4416666626930237, 0.44200000166893005, 0.4423333406448364, 0.4426666796207428, 0.44333332777023315, 0.4429999887943268, 0.4426666796207428, 0.4426666796207428, 0.4436666667461395, 0.44466665387153625, 0.445333331823349, 0.4466666579246521, 0.44733333587646484, 0.4476666748523712, 0.4476666748523712, 0.4476666748523712, 0.44733333587646484, 0.44733333587646484, 0.44699999690055847]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 3, 0, 3, 4], [0, 0, 2, 2], [39, 39], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 2, 2, 0, 3, 5, 6, 0, 7], [0, 2, 0, 3, 1, 5], [33, 16], [0, 1], [5], [0], [99], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 0, 4, 4, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 1], [16, 99, 54, 99, 68, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 2, 15, 9, 6, 2, 2, 1, 1, 1, 17, 9, 8, 5], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(grad)))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), sigma))), alpha)", "other_info": {"loss": [1.5837399718021292e+31, Infinity, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08889182657003403, 0.1022322028875351, 0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.6379181454849314e+32, Infinity, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.08233333379030228, 0.0989999994635582, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 4, 3, 0, 3], [0, 2, 0, 1], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 8, 0, 3, 5], [0, 2, 3, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1], [6, 2, 3, 6, 8, 9, 4, 8, 4, 2, 8], [0, 3, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 6, 4, 2, 1, 2, 1, 1, 1, 13, 8, 5, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), sigma)), tf.math.pow(grad, sigma)), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303156614303589, 2.302615165710449, 2.302615165710449, 2.302615165710449, 2.3026154041290283, 2.302615165710449], "accuracy": [0.10474177449941635, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025588989257812, 2.3025588989257812, 2.3025588989257812, 2.3025588989257812, 2.3025588989257812, 2.3025588989257812], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 0, 3, 4, 9, 3, 3, 8, 1], [0, 1, 0, 2, 2, 1, 2], [39, 39, 38], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 6, 3, 9, 4, 8], [0, 3, 0, 3], [35, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 80, 99, 32, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 11, 7, 3, 6, 4, 2, 2, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.multiply(grad, tf.math.sqrt(tf.math.subtract(grad, alpha))), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}]