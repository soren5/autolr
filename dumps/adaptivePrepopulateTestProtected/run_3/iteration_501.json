[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8822857141494751, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585750579834, 1.8655762672424316, 1.394430160522461, 1.0773245096206665, 0.9378393888473511, 0.8425824046134949, 0.7776632308959961, 0.736241340637207, 0.6971188187599182, 0.6732122302055359, 0.644855797290802, 0.6276965141296387, 0.6100340485572815, 0.5899673104286194, 0.5746485590934753, 0.5484329462051392, 0.5425268411636353, 0.5357900857925415, 0.5214410424232483, 0.5127171874046326, 0.4895091950893402, 0.4932740032672882, 0.48551443219184875, 0.47113916277885437, 0.46571049094200134, 0.450914591550827, 0.438728004693985, 0.4414178729057312, 0.4245515465736389, 0.4182806611061096, 0.4126766324043274, 0.41352686285972595, 0.4031256139278412, 0.40064555406570435, 0.3982388377189636, 0.38566267490386963, 0.38400527834892273, 0.3741128146648407, 0.36422181129455566, 0.36170411109924316, 0.35991787910461426, 0.35666367411613464, 0.3521813750267029, 0.34583958983421326, 0.34736087918281555, 0.34181836247444153, 0.33650368452072144, 0.33141741156578064, 0.3230496346950531, 0.3225416839122772, 0.315096914768219, 0.3059031665325165, 0.3058394491672516, 0.3017319440841675, 0.29568877816200256, 0.2933836281299591, 0.28774771094322205, 0.2856961190700531, 0.2802303731441498, 0.2779994010925293, 0.274711549282074, 0.2719985842704773, 0.2586328387260437, 0.2598455548286438, 0.2622571289539337, 0.25739434361457825, 0.2502012252807617, 0.2544722855091095, 0.24556587636470795, 0.24580754339694977, 0.23948103189468384, 0.23949603736400604, 0.23484042286872864, 0.22871272265911102, 0.2256491780281067, 0.22479403018951416, 0.21744707226753235, 0.21390178799629211, 0.21272219717502594], "accuracy": [0.2785629332065582, 0.49451854825019836, 0.559899628162384, 0.6215823292732239, 0.6654338836669922, 0.6950204968452454, 0.7181349992752075, 0.7322678565979004, 0.7441553473472595, 0.7483819723129272, 0.7627789974212646, 0.7717606425285339, 0.7728173136711121, 0.78113853931427, 0.7882710099220276, 0.7993659973144531, 0.7976489067077637, 0.8074230551719666, 0.8128384351730347, 0.8198388814926147, 0.8212917447090149, 0.819970965385437, 0.8272355198860168, 0.8350284099578857, 0.8305375576019287, 0.8387266993522644, 0.846387505531311, 0.8433496356010437, 0.8504821062088013, 0.8524633646011353, 0.8535200357437134, 0.854708731174469, 0.856689989566803, 0.8551049828529358, 0.8593316674232483, 0.8615770936012268, 0.8628978729248047, 0.8702945709228516, 0.8691058158874512, 0.871879518032074, 0.8722757697105408, 0.8691058158874512, 0.8733324408531189, 0.8800686597824097, 0.8795403242111206, 0.8755778670310974, 0.8768987059593201, 0.8829745054244995, 0.8824461698532104, 0.8823140859603882, 0.887201189994812, 0.8897107243537903, 0.8889182209968567, 0.8927486538887024, 0.8902390599250793, 0.8953903317451477, 0.8980319499969482, 0.8976356983184814, 0.900409460067749, 0.89552241563797, 0.9025228023529053, 0.8989565372467041, 0.9056927561759949, 0.9085986018180847, 0.9030511379241943, 0.9066173434257507, 0.9101836085319519, 0.9083344340324402, 0.909259021282196, 0.9099194407463074, 0.9126931428909302, 0.9140139818191528, 0.9119006991386414, 0.9171839952468872, 0.9169198274612427, 0.9185048341751099, 0.9218068718910217, 0.9185048341751099, 0.9196935892105103], "val_loss": [2.033445358276367, 1.5042319297790527, 1.0271512269973755, 0.8147247433662415, 0.7278039455413818, 0.68117356300354, 0.6306353211402893, 0.5966841578483582, 0.5751398801803589, 0.5460951328277588, 0.5314993858337402, 0.509799063205719, 0.4957965612411499, 0.4792602062225342, 0.46671679615974426, 0.45267683267593384, 0.4441072940826416, 0.4356139600276947, 0.42943108081817627, 0.4255247414112091, 0.41811680793762207, 0.4163394272327423, 0.39929893612861633, 0.3969916105270386, 0.39089226722717285, 0.387652188539505, 0.3844633102416992, 0.3824205696582794, 0.3749690353870392, 0.3701930642127991, 0.36967378854751587, 0.36689504981040955, 0.3585263788700104, 0.3587398827075958, 0.36267170310020447, 0.3561091423034668, 0.35379692912101746, 0.3499273955821991, 0.34701839089393616, 0.3467637896537781, 0.3424672484397888, 0.33951225876808167, 0.3386255204677582, 0.34044384956359863, 0.33945050835609436, 0.33684298396110535, 0.3322163224220276, 0.33181649446487427, 0.32827115058898926, 0.3312568664550781, 0.3297465741634369, 0.3256674110889435, 0.3234780728816986, 0.32119208574295044, 0.3232716917991638, 0.3209094703197479, 0.31944912672042847, 0.3157532513141632, 0.3144265413284302, 0.31676045060157776, 0.31425556540489197, 0.3131799101829529, 0.3147056996822357, 0.3154993951320648, 0.31771615147590637, 0.31545644998550415, 0.3127000629901886, 0.31382524967193604, 0.31026333570480347, 0.3147730529308319, 0.30829918384552, 0.3107443153858185, 0.31316936016082764, 0.30297672748565674, 0.30325081944465637, 0.30436232686042786, 0.3072424829006195, 0.30681705474853516, 0.3061434030532837], "val_accuracy": [0.5526666641235352, 0.6666666865348816, 0.687333345413208, 0.7083333134651184, 0.731333315372467, 0.7446666955947876, 0.7606666684150696, 0.762666642665863, 0.7873333096504211, 0.7889999747276306, 0.7973333597183228, 0.8056666851043701, 0.8193333148956299, 0.8259999752044678, 0.8289999961853027, 0.8410000205039978, 0.8453333377838135, 0.8450000286102295, 0.8489999771118164, 0.847000002861023, 0.8516666889190674, 0.856333315372467, 0.859333336353302, 0.856333315372467, 0.8633333444595337, 0.8640000224113464, 0.8656666874885559, 0.8646666407585144, 0.8679999709129333, 0.8696666955947876, 0.8640000224113464, 0.8686666488647461, 0.8713333606719971, 0.8709999918937683, 0.8703333139419556, 0.8723333477973938, 0.871999979019165, 0.874666690826416, 0.8723333477973938, 0.8759999871253967, 0.8726666569709778, 0.875333309173584, 0.8790000081062317, 0.8756666779518127, 0.8726666569709778, 0.8769999742507935, 0.8796666860580444, 0.8796666860580444, 0.8806666731834412, 0.8793333172798157, 0.8813333511352539, 0.8840000033378601, 0.8840000033378601, 0.8843333125114441, 0.8809999823570251, 0.8856666684150696, 0.8866666555404663, 0.8833333253860474, 0.8866666555404663, 0.8843333125114441, 0.8856666684150696, 0.8880000114440918, 0.887333333492279, 0.8883333206176758, 0.8866666555404663, 0.8896666765213013, 0.8863333463668823, 0.8853333592414856, 0.890999972820282, 0.8870000243186951, 0.8883333206176758, 0.8883333206176758, 0.8916666507720947, 0.8939999938011169, 0.8896666765213013, 0.8916666507720947, 0.890999972820282, 0.8926666378974915, 0.8913333415985107]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8731428384780884, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2245163917541504, 1.8710181713104248, 1.3997302055358887, 1.0897793769836426, 0.9291485548019409, 0.8494430184364319, 0.7742669582366943, 0.7282021641731262, 0.6835567355155945, 0.663438081741333, 0.6347051858901978, 0.6161616444587708, 0.5924173593521118, 0.5829802751541138, 0.5684283375740051, 0.5506080389022827, 0.5378406643867493, 0.5302602648735046, 0.5099006295204163, 0.5100873112678528, 0.4787156879901886, 0.48471930623054504, 0.47397178411483765, 0.46600478887557983, 0.45158568024635315, 0.44501012563705444, 0.43510591983795166, 0.4273528754711151, 0.4257452189922333, 0.4184072017669678, 0.4067676067352295, 0.4090331792831421, 0.39809733629226685, 0.38522109389305115, 0.3905746340751648, 0.38655731081962585, 0.37023818492889404, 0.36392831802368164, 0.3597387671470642, 0.35445016622543335, 0.35461944341659546, 0.34042176604270935, 0.3418232798576355, 0.32938331365585327, 0.3339228332042694, 0.3291643559932709, 0.3240402340888977, 0.3194701373577118, 0.3166069984436035, 0.31214818358421326, 0.30109742283821106, 0.30531689524650574, 0.29361584782600403, 0.29898571968078613, 0.29582497477531433, 0.28763556480407715, 0.2819078862667084, 0.2729684114456177, 0.276409387588501, 0.26469212770462036, 0.2633683979511261, 0.26221778988838196, 0.2605133354663849, 0.25525450706481934, 0.2516043186187744, 0.24901238083839417, 0.24686455726623535, 0.2387067824602127, 0.23608294129371643, 0.22863002121448517, 0.22932375967502594, 0.22381550073623657, 0.22127017378807068, 0.21770285069942474, 0.21524706482887268, 0.21873676776885986, 0.21736650168895721, 0.21144191920757294, 0.20669551193714142, 0.20271827280521393, 0.19849038124084473, 0.1962478905916214, 0.19958655536174774, 0.18928159773349762, 0.1877063810825348, 0.1869100034236908, 0.18304073810577393], "accuracy": [0.2767137885093689, 0.49425438046455383, 0.5622771382331848, 0.6225069165229797, 0.6785101294517517, 0.700700044631958, 0.7246070504188538, 0.7345132827758789, 0.7537974119186401, 0.7541936039924622, 0.772288978099823, 0.7773081660270691, 0.7825914621353149, 0.7876105904579163, 0.798309326171875, 0.7987055778503418, 0.7985734939575195, 0.8042530417442322, 0.8170651197433472, 0.8166688680648804, 0.8271034359931946, 0.8216879963874817, 0.8302733898162842, 0.8342359066009521, 0.8327829837799072, 0.8376700282096863, 0.8430854678153992, 0.8475762605667114, 0.8479725122451782, 0.8482366800308228, 0.8519350290298462, 0.8521991968154907, 0.8577466607093811, 0.8576145768165588, 0.8593316674232483, 0.8580108284950256, 0.8701624870300293, 0.8640866279602051, 0.8708229064941406, 0.8667283058166504, 0.8668603897094727, 0.8759741187095642, 0.8759741187095642, 0.882710337638855, 0.8796724081039429, 0.8813894987106323, 0.8813894987106323, 0.883238673210144, 0.8837670087814331, 0.8821820020675659, 0.8916919827461243, 0.8862766027450562, 0.8944657444953918, 0.8861445188522339, 0.8906353116035461, 0.8969752788543701, 0.89988112449646, 0.9013340473175049, 0.898428201675415, 0.9045040011405945, 0.9031832218170166, 0.9054285883903503, 0.9070135951042175, 0.9079381823539734, 0.9066173434257507, 0.9101836085319519, 0.9088627696037292, 0.9137498140335083, 0.9115044474601746, 0.9170519113540649, 0.9153348207473755, 0.9182406663894653, 0.9174481630325317, 0.9202219247817993, 0.9208822846412659, 0.9199577569961548, 0.9231277108192444, 0.9253731369972229, 0.9240522980690002, 0.9257693886756897, 0.9270902276039124, 0.9303922653198242, 0.9260335564613342, 0.9315810203552246, 0.9339585304260254, 0.9321093559265137, 0.9322414398193359], "val_loss": [2.0437188148498535, 1.5224586725234985, 1.0511130094528198, 0.845708429813385, 0.7574553489685059, 0.7111233472824097, 0.6703904867172241, 0.6421459913253784, 0.6115042567253113, 0.5901457667350769, 0.577399492263794, 0.5559962391853333, 0.5454214811325073, 0.5321018099784851, 0.526123046875, 0.5112879276275635, 0.49998021125793457, 0.4975956976413727, 0.48289403319358826, 0.4761824607849121, 0.4783792197704315, 0.46089476346969604, 0.4570010304450989, 0.45097070932388306, 0.44402173161506653, 0.4405287802219391, 0.4327552020549774, 0.4304642379283905, 0.42576077580451965, 0.42351704835891724, 0.4199245274066925, 0.41667184233665466, 0.4131426215171814, 0.4169291853904724, 0.4089597463607788, 0.4002046287059784, 0.3967004120349884, 0.39746516942977905, 0.3983459174633026, 0.38958442211151123, 0.3884219527244568, 0.3919508159160614, 0.3860032260417938, 0.38638874888420105, 0.3892993628978729, 0.38008037209510803, 0.38002339005470276, 0.3792024850845337, 0.3742508888244629, 0.3751145899295807, 0.3798361122608185, 0.3683915138244629, 0.3767468333244324, 0.37136849761009216, 0.3757762312889099, 0.3728879392147064, 0.36840829253196716, 0.37059780955314636, 0.3767947852611542, 0.36597272753715515, 0.36840519309043884, 0.3621150255203247, 0.3580847978591919, 0.36487117409706116, 0.3609410524368286, 0.36058181524276733, 0.35993659496307373, 0.3605804741382599, 0.3597237467765808, 0.36022359132766724, 0.35680273175239563, 0.3584495484828949, 0.35986247658729553, 0.3587043583393097, 0.362471342086792, 0.3573860228061676, 0.36148926615715027, 0.36012789607048035, 0.3616989850997925, 0.3553675413131714, 0.35697323083877563, 0.3545556366443634, 0.3632414638996124, 0.3641456663608551, 0.3594017028808594, 0.3553698658943176, 0.36001718044281006], "val_accuracy": [0.5476666688919067, 0.6476666927337646, 0.6800000071525574, 0.7070000171661377, 0.7260000109672546, 0.734333336353302, 0.7463333606719971, 0.7546666860580444, 0.765999972820282, 0.7699999809265137, 0.7763333320617676, 0.784333348274231, 0.7979999780654907, 0.8029999732971191, 0.8050000071525574, 0.8116666674613953, 0.8159999847412109, 0.8199999928474426, 0.8243333101272583, 0.8236666917800903, 0.8266666531562805, 0.8323333263397217, 0.8346666693687439, 0.8339999914169312, 0.8403333425521851, 0.8363333344459534, 0.843999981880188, 0.8489999771118164, 0.8486666679382324, 0.8513333201408386, 0.8476666808128357, 0.8483333587646484, 0.8500000238418579, 0.8553333282470703, 0.8529999852180481, 0.8569999933242798, 0.8579999804496765, 0.8539999723434448, 0.8583333492279053, 0.8573333621025085, 0.859000027179718, 0.8600000143051147, 0.8616666793823242, 0.8646666407585144, 0.8666666746139526, 0.862666666507721, 0.8659999966621399, 0.8650000095367432, 0.8666666746139526, 0.8690000176429749, 0.8629999756813049, 0.8673333525657654, 0.8676666617393494, 0.8713333606719971, 0.8640000224113464, 0.8700000047683716, 0.8700000047683716, 0.8730000257492065, 0.8706666827201843, 0.874666690826416, 0.8706666827201843, 0.8763333559036255, 0.8769999742507935, 0.8759999871253967, 0.8786666393280029, 0.878000020980835, 0.8796666860580444, 0.878333330154419, 0.8796666860580444, 0.8796666860580444, 0.8830000162124634, 0.8830000162124634, 0.8803333044052124, 0.8803333044052124, 0.8809999823570251, 0.8833333253860474, 0.8743333220481873, 0.8830000162124634, 0.8843333125114441, 0.8843333125114441, 0.8830000162124634, 0.8859999775886536, 0.8786666393280029, 0.8833333253860474, 0.8803333044052124, 0.8826666474342346, 0.8849999904632568]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 8, 3], [0, 2, 0, 2], [3, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 5, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 6, 0, 1, 4, 1, 4, 5, 2, 4, 3], [0, 0, 0, 3, 4, 0, 3, 1, 2, 0, 7, 2], [16, 99, 96, 37, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 6, 4, 2, 1, 2, 1, 1, 1, 25, 13, 12, 5], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.math.negative(tf.math.subtract(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(sigma, tf.math.square(grad)))), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), sigma), tf.math.add(tf.math.pow(alpha, beta), tf.math.multiply(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), grad))), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 0, 0, 2], [39, 39, 52], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 8], [0, 0, 0, 3, 0, 0, 3, 1, 1, 0], [16, 99, 84, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 3, 10, 6, 4, 2, 2, 1, 1, 1, 22, 12, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.math.pow(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), sigma), tf.math.sqrt(tf.math.sqrt(alpha))))), alpha), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [3, 2, 3, 0, 3, 4, 0, 6, 5], [0, 1, 0, 2, 1, 1, 3], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 2, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 3, 3, 1, 2, 2], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 9, 7, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 4], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(grad)), alpha), tf.math.divide_no_nan(tf.math.square(alpha), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32)))))), tf.math.pow(sigma, sigma)), alpha), tf.math.add(tf.math.sqrt(beta), beta))", "other_info": {"loss": [2.3099308013916016, 2.3110132217407227, 2.3102071285247803, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09285431355237961, 0.09232597798109055, 0.09325055778026581, 0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3086705207824707, 2.3086705207824707, 2.3086705207824707, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.08533333241939545, 0.08533333241939545, 0.08533333241939545, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 5, 0, 3], [2, 1, 1, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1, 1], [2], [0, 4], [99], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 0, 3, 6, 8, 6, 4, 1, 4, 2, 8, 9], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [68, 99, 96, 21, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 0, 10, 6, 4, 2, 3, 1, 2, 1, 20, 12, 8, 6], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.negative(grad)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.negative(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.divide_no_nan(tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, tf.math.add(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), sigma)), tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}]