[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.878000020980835, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223759174346924, 1.8681567907333374, 1.3971633911132812, 1.1021500825881958, 0.9438490867614746, 0.8268281817436218, 0.7700234055519104, 0.7182450890541077, 0.6839274764060974, 0.655160665512085, 0.6316797733306885, 0.6046612858772278, 0.586663544178009, 0.5732303261756897, 0.5552444458007812, 0.5382086634635925, 0.5205084085464478, 0.5141545534133911, 0.49866363406181335, 0.4905571937561035, 0.48713892698287964, 0.4630949795246124, 0.46493759751319885, 0.4510720372200012, 0.4456666111946106, 0.4411585330963135, 0.43109801411628723, 0.4194287657737732, 0.41647717356681824, 0.4177640676498413, 0.39898860454559326, 0.3982110619544983, 0.3941095173358917, 0.3838343918323517, 0.38270825147628784, 0.38132011890411377, 0.3706604242324829, 0.3630581796169281, 0.35970449447631836, 0.3585955500602722, 0.3488880693912506, 0.3406795859336853, 0.3434852361679077, 0.34305644035339355, 0.32770219445228577, 0.3274216949939728, 0.3164256513118744, 0.31487780809402466, 0.31453031301498413, 0.3020377457141876, 0.3013147711753845, 0.29238083958625793, 0.30650538206100464, 0.2886098325252533, 0.28784143924713135, 0.28922179341316223, 0.27991431951522827, 0.27731093764305115, 0.27029022574424744, 0.2677718997001648, 0.2672445476055145], "accuracy": [0.27182671427726746, 0.4913485646247864, 0.5609562993049622, 0.6095628142356873, 0.6618676781654358, 0.6997754573822021, 0.7215691208839417, 0.7407211661338806, 0.7508915662765503, 0.7592127919197083, 0.7656848430633545, 0.7798177003860474, 0.7849689722061157, 0.789459764957428, 0.7991018295288086, 0.806630551815033, 0.81112140417099, 0.8088759779930115, 0.8210275769233704, 0.8181217908859253, 0.826310932636261, 0.8333113193511963, 0.8294808864593506, 0.8401796221733093, 0.8409721255302429, 0.8436138033866882, 0.8459912538528442, 0.8519350290298462, 0.8485008478164673, 0.8490291833877563, 0.856689989566803, 0.8573504090309143, 0.8615770936012268, 0.8644828796386719, 0.8605204224586487, 0.8614450097084045, 0.8671245574951172, 0.8726720213890076, 0.8732003569602966, 0.8689737319946289, 0.8762382864952087, 0.8798044919967651, 0.8717474341392517, 0.8825782537460327, 0.8840311765670776, 0.8845595121383667, 0.8885219693183899, 0.8865407705307007, 0.8887861371040344, 0.894069492816925, 0.8918240666389465, 0.8953903317451477, 0.8860124349594116, 0.8988244533538818, 0.8992207050323486, 0.8956544995307922, 0.9014661312103271, 0.89988112449646, 0.900409460067749, 0.9046360850334167, 0.9033153057098389], "val_loss": [2.0386126041412354, 1.5089809894561768, 1.0396978855133057, 0.8277255296707153, 0.7414798736572266, 0.6867381930351257, 0.6452507376670837, 0.6096968054771423, 0.5920496582984924, 0.5695558786392212, 0.550778865814209, 0.5315823554992676, 0.5166425704956055, 0.5040237307548523, 0.4927339255809784, 0.48035380244255066, 0.4752146899700165, 0.4640548527240753, 0.45926037430763245, 0.4498494863510132, 0.44989997148513794, 0.43486902117729187, 0.4302854835987091, 0.42699891328811646, 0.4222937822341919, 0.4179273545742035, 0.4156407117843628, 0.40615877509117126, 0.40567347407341003, 0.40483561158180237, 0.4008205533027649, 0.3957735300064087, 0.3910598158836365, 0.39842313528060913, 0.38378071784973145, 0.3824272155761719, 0.37983548641204834, 0.3832281529903412, 0.37993335723876953, 0.37290528416633606, 0.37028563022613525, 0.3697679340839386, 0.369826078414917, 0.3630952835083008, 0.3613884747028351, 0.3612003028392792, 0.3630628287792206, 0.35836127400398254, 0.35707563161849976, 0.3544061779975891, 0.35439038276672363, 0.35541149973869324, 0.34793493151664734, 0.355723112821579, 0.3566884696483612, 0.3480426073074341, 0.35176366567611694, 0.34468159079551697, 0.3469727337360382, 0.34757280349731445, 0.34379008412361145], "val_accuracy": [0.546999990940094, 0.6536666750907898, 0.6856666803359985, 0.7066666483879089, 0.7366666793823242, 0.7536666393280029, 0.7599999904632568, 0.7720000147819519, 0.7706666588783264, 0.7926666736602783, 0.7963333129882812, 0.7956666946411133, 0.8103333115577698, 0.809333324432373, 0.8220000267028809, 0.8226666450500488, 0.8243333101272583, 0.8330000042915344, 0.8349999785423279, 0.8370000123977661, 0.8333333134651184, 0.8429999947547913, 0.8463333249092102, 0.8446666598320007, 0.8476666808128357, 0.8479999899864197, 0.8450000286102295, 0.8506666421890259, 0.8496666550636292, 0.8529999852180481, 0.8556666374206543, 0.8556666374206543, 0.8586666584014893, 0.8526666760444641, 0.8576666712760925, 0.8610000014305115, 0.859000027179718, 0.8616666793823242, 0.8653333187103271, 0.8673333525657654, 0.8673333525657654, 0.8659999966621399, 0.8693333268165588, 0.8690000176429749, 0.8726666569709778, 0.8726666569709778, 0.8740000128746033, 0.8730000257492065, 0.871999979019165, 0.8759999871253967, 0.874666690826416, 0.871999979019165, 0.8806666731834412, 0.8776666522026062, 0.8706666827201843, 0.8820000290870667, 0.878333330154419, 0.878000020980835, 0.8806666731834412, 0.8793333172798157, 0.878333330154419]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8460000157356262, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2187345027923584, 1.856882929801941, 1.3700556755065918, 1.0808182954788208, 0.9114803075790405, 0.8255206346511841, 0.7591390609741211, 0.7139402031898499, 0.6798787713050842, 0.6481907963752747, 0.6224254369735718, 0.6082213521003723, 0.5839208960533142, 0.5677075386047363, 0.5530545711517334, 0.5336824059486389, 0.5212857127189636, 0.5097267627716064, 0.4985209107398987, 0.49154946208000183, 0.4732000529766083, 0.4709698557853699, 0.46055248379707336, 0.4528341293334961, 0.43696025013923645, 0.4309716522693634, 0.42638856172561646, 0.42089736461639404, 0.4066493511199951, 0.4041203558444977, 0.39650651812553406, 0.3857055604457855, 0.383060097694397, 0.3783662021160126, 0.37467485666275024, 0.36325180530548096, 0.3577696979045868, 0.3545038104057312, 0.3487231731414795, 0.34671854972839355, 0.34010589122772217, 0.33233460783958435, 0.33625859022140503, 0.32412511110305786, 0.3285941481590271, 0.3151819407939911, 0.3121403753757477, 0.30854445695877075, 0.30283594131469727, 0.30281639099121094, 0.30051013827323914], "accuracy": [0.28041210770606995, 0.4842160940170288, 0.5700700283050537, 0.6156386137008667, 0.6774534583091736, 0.7017567157745361, 0.7296261787414551, 0.7368907928466797, 0.7530049085617065, 0.7618544697761536, 0.767401933670044, 0.7799497842788696, 0.7876105904579163, 0.7984414100646973, 0.7998943328857422, 0.8096684813499451, 0.8104609847068787, 0.8157442808151245, 0.8189142942428589, 0.8197067975997925, 0.8290846943855286, 0.8305375576019287, 0.8333113193511963, 0.8400475382804871, 0.8403117060661316, 0.8436138033866882, 0.8462554216384888, 0.8459912538528442, 0.8544445633888245, 0.8524633646011353, 0.8585391640663147, 0.863029956817627, 0.8622375130653381, 0.8660678863525391, 0.8669924736022949, 0.869502067565918, 0.8732003569602966, 0.8741249442100525, 0.873860776424408, 0.8765024542808533, 0.8796724081039429, 0.8805969953536987, 0.8776912093162537, 0.8844274282455444, 0.8838990926742554, 0.8869370222091675, 0.8882578015327454, 0.885219931602478, 0.8923524022102356, 0.8907673954963684, 0.891559898853302], "val_loss": [2.025916576385498, 1.4916622638702393, 1.020659327507019, 0.8166604042053223, 0.7288556098937988, 0.678639829158783, 0.6340818405151367, 0.6017161011695862, 0.5790324211120605, 0.5563105344772339, 0.5440022945404053, 0.5281621217727661, 0.5135732293128967, 0.5023583173751831, 0.4907035231590271, 0.4768351912498474, 0.4681926965713501, 0.4609443247318268, 0.45367953181266785, 0.44651514291763306, 0.43694236874580383, 0.43331485986709595, 0.4286514222621918, 0.42522215843200684, 0.4243786334991455, 0.4136735498905182, 0.40988436341285706, 0.4053128659725189, 0.4013397991657257, 0.39513614773750305, 0.3928367495536804, 0.39187246561050415, 0.38811200857162476, 0.3850034177303314, 0.3808880150318146, 0.3771800994873047, 0.3757856786251068, 0.3745579421520233, 0.37368065118789673, 0.3735050559043884, 0.3656542897224426, 0.3757548928260803, 0.3673262596130371, 0.3654411733150482, 0.3608330190181732, 0.3622516989707947, 0.36656367778778076, 0.3560127913951874, 0.3582424223423004, 0.3497759997844696, 0.3555845022201538], "val_accuracy": [0.5709999799728394, 0.6633333563804626, 0.6819999814033508, 0.7139999866485596, 0.737333357334137, 0.7486666440963745, 0.7606666684150696, 0.7680000066757202, 0.7829999923706055, 0.7886666655540466, 0.8033333420753479, 0.8036666512489319, 0.8086666464805603, 0.812666654586792, 0.8173333406448364, 0.8253333568572998, 0.8256666660308838, 0.8320000171661377, 0.8353333473205566, 0.8383333086967468, 0.8429999947547913, 0.8366666436195374, 0.8479999899864197, 0.8456666469573975, 0.8423333168029785, 0.8503333330154419, 0.8526666760444641, 0.8496666550636292, 0.8500000238418579, 0.859000027179718, 0.8576666712760925, 0.8546666502952576, 0.862333357334137, 0.8629999756813049, 0.8633333444595337, 0.8616666793823242, 0.8629999756813049, 0.8633333444595337, 0.8650000095367432, 0.8629999756813049, 0.8659999966621399, 0.8666666746139526, 0.8673333525657654, 0.8666666746139526, 0.8693333268165588, 0.8733333349227905, 0.8693333268165588, 0.8700000047683716, 0.8733333349227905, 0.8709999918937683, 0.8693333268165588]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 3, 3, 0], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1], [6, 2, 3, 6, 8, 1, 4, 1, 4, 2, 8, 7, 8, 9, 0, 6, 6, 9], [0, 0, 0, 3, 0, 0, 3, 4, 2, 1, 2], [16, 99, 96, 99, 61, 1, 56]], "fitness": -0.7577142715454102, "mapping_values": [1, 1, 0, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 29, 18, 11, 7], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), grad), tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.divide_no_nan(tf.math.divide_no_nan(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), beta))))", "other_info": {"loss": [2.3049449920654297, 2.2942793369293213, 2.283071994781494, 2.2725062370300293, 2.2607603073120117, 2.249555826187134, 2.236178159713745, 2.219167709350586, 2.201643228530884, 2.179208755493164, 2.151224136352539, 2.121351480484009, 2.0807271003723145, 2.0310983657836914, 1.9760257005691528, 1.9078106880187988, 1.8379359245300293, 1.7507566213607788, 1.6657530069351196, 1.5814810991287231, 1.4999734163284302, 1.44850492477417, 1.3888128995895386, 1.3277395963668823, 1.2791463136672974, 1.244661808013916, 1.1956490278244019, 1.1685023307800293, 1.1404012441635132, 1.12073814868927, 1.0838464498519897, 1.071882963180542, 1.045883059501648, 1.0316182374954224, 1.012384057044983, 0.9980915188789368, 0.9939139485359192, 0.9741348028182983, 0.9579287171363831, 0.9471158981323242, 0.9227349162101746, 0.9211808443069458, 0.9196412563323975, 0.9113621711730957, 0.9081812500953674, 0.890911877155304, 0.8878001570701599, 0.8697607517242432, 0.8712546825408936, 0.8683437705039978, 0.8569089770317078, 0.844529926776886, 0.8429665565490723, 0.8323777318000793, 0.8318292498588562, 0.8260668516159058, 0.822825014591217, 0.8181525468826294, 0.8186084628105164, 0.8100578784942627, 0.8100144267082214, 0.7980018258094788, 0.8023677468299866, 0.7941917181015015, 0.7906680107116699], "accuracy": [0.10460969805717468, 0.11689341068267822, 0.15334829688072205, 0.17633073031902313, 0.20684190094470978, 0.24025888741016388, 0.2662792205810547, 0.30220577120780945, 0.322150319814682, 0.3463214933872223, 0.36983224749565125, 0.37762513756752014, 0.4010038375854492, 0.41328755021095276, 0.4301941692829132, 0.4427420496940613, 0.4589882493019104, 0.4752344489097595, 0.49372607469558716, 0.5112931132316589, 0.5301809310913086, 0.5237088799476624, 0.5482763051986694, 0.5621450543403625, 0.5649187564849854, 0.5786554217338562, 0.5956941246986389, 0.5972790718078613, 0.6048077940940857, 0.6038832664489746, 0.6206578016281128, 0.6218464970588684, 0.6304318904876709, 0.6367719173431396, 0.6412627100944519, 0.6474705934524536, 0.6420552134513855, 0.6564522385597229, 0.6602826714515686, 0.6651697158813477, 0.6711134314537048, 0.6765288710594177, 0.6704530715942383, 0.6748117804527283, 0.672698438167572, 0.6807554960250854, 0.6860388517379761, 0.6901333928108215, 0.6888125538825989, 0.6892088055610657, 0.6884163022041321, 0.6963412761688232, 0.6956809163093567, 0.6975300312042236, 0.6975300312042236, 0.6995112895965576, 0.7043983340263367, 0.7040021419525146, 0.7043983340263367, 0.7082287669181824, 0.7025492191314697, 0.71100252866745, 0.7125874757766724, 0.7111346125602722, 0.7117950320243835], "val_loss": [2.2964327335357666, 2.284576177597046, 2.273176431655884, 2.2615277767181396, 2.2488651275634766, 2.2347652912139893, 2.2187297344207764, 2.1998093128204346, 2.177216053009033, 2.1501288414001465, 2.11733078956604, 2.077860116958618, 2.029595136642456, 1.9714953899383545, 1.902264952659607, 1.8217493295669556, 1.7322502136230469, 1.6353040933609009, 1.535479187965393, 1.4388842582702637, 1.3481736183166504, 1.2701301574707031, 1.2025350332260132, 1.145411491394043, 1.0943366289138794, 1.0513417720794678, 1.0125418901443481, 0.9790382385253906, 0.9497371315956116, 0.9248793721199036, 0.902269184589386, 0.8841310739517212, 0.86483234167099, 0.84969562292099, 0.8348861336708069, 0.8229653239250183, 0.8104570508003235, 0.7991179823875427, 0.7875831723213196, 0.7770934104919434, 0.7673738598823547, 0.758285641670227, 0.7521909475326538, 0.7437251210212708, 0.7380401492118835, 0.7307209372520447, 0.7256754636764526, 0.7199020385742188, 0.715915858745575, 0.7092471718788147, 0.7043746709823608, 0.6985019445419312, 0.6949573755264282, 0.6902638077735901, 0.6858981251716614, 0.6812703609466553, 0.67807936668396, 0.6746068596839905, 0.6711562871932983, 0.6679793000221252, 0.6651111245155334, 0.6613163948059082, 0.6583084464073181, 0.6566834449768066, 0.6538333296775818], "val_accuracy": [0.11100000143051147, 0.15566666424274445, 0.2293333262205124, 0.3136666715145111, 0.3959999978542328, 0.42633333802223206, 0.44733333587646484, 0.4596666693687439, 0.46666666865348816, 0.4779999852180481, 0.5063333511352539, 0.5243333578109741, 0.5373333096504211, 0.5559999942779541, 0.5673333406448364, 0.5903333425521851, 0.6069999933242798, 0.6186666488647461, 0.6309999823570251, 0.6396666765213013, 0.6486666798591614, 0.6553333401679993, 0.6639999747276306, 0.6679999828338623, 0.6736666560173035, 0.6776666641235352, 0.6840000152587891, 0.6893333196640015, 0.6936666369438171, 0.6963333487510681, 0.7006666660308838, 0.703000009059906, 0.7080000042915344, 0.7083333134651184, 0.7153333425521851, 0.7193333506584167, 0.7223333120346069, 0.7269999980926514, 0.7296666502952576, 0.7336666584014893, 0.7353333234786987, 0.737666666507721, 0.7363333106040955, 0.7419999837875366, 0.7433333396911621, 0.7476666569709778, 0.746999979019165, 0.7459999918937683, 0.749666690826416, 0.7513333559036255, 0.7486666440963745, 0.753000020980835, 0.7549999952316284, 0.7540000081062317, 0.7563333511352539, 0.7586666941642761, 0.7593333125114441, 0.7583333253860474, 0.7613333463668823, 0.7636666893959045, 0.7630000114440918, 0.762666642665863, 0.7630000114440918, 0.7636666893959045, 0.7620000243186951]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 2, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [8, 3, 3, 1, 8, 1, 4, 1, 0, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 2, 2, 1, 1, 1, 4, 2, 2, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303269624710083, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 2, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5], [0, 2, 0, 1, 5], [13, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [3, 3, 3, 6, 6, 1, 5, 1, 4, 2, 8, 4, 1, 3, 4, 5, 9, 6, 4], [0, 0, 0, 3, 4, 0, 3, 1, 2, 4, 4, 1, 4, 4, 3], [16, 99, 96, 17, 61, 19]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 11, 6, 5, 2, 2, 1, 1, 1, 34, 19, 15, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(alpha))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), sigma), grad)), tf.math.subtract(tf.math.pow(tf.math.add(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), sigma), tf.math.sqrt(tf.math.pow(alpha, beta))), tf.math.subtract(tf.math.multiply(grad, grad), tf.math.pow(tf.math.square(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), alpha)))), tf.math.divide_no_nan(tf.math.pow(grad, grad), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 2, 6, 9, 3, 9], [0, 2, 0, 3], [16, 23], [0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 3, 2, 8, 4, 9], [0, 1, 0], [99, 24, 43], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 1, 1, 4, 1, 4, 2, 8], [0, 0, 4, 4, 0, 0, 3, 1, 2, 0, 2], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 6, 3, 3, 2, 9, 6, 3, 3, 21, 10, 11, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.math.pow(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.subtract(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.pow(grad, grad)), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), alpha), tf.math.add(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}]