[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8808571696281433, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223215103149414, 1.8640538454055786, 1.390925645828247, 1.0857504606246948, 0.9175904989242554, 0.8278062343597412, 0.75929194688797, 0.7150763869285583, 0.6742342710494995, 0.6527069211006165, 0.6226239800453186, 0.6030511260032654, 0.5812473893165588, 0.5698184370994568, 0.5517233610153198, 0.5318202376365662, 0.5262278914451599, 0.5063096284866333, 0.4941454231739044, 0.4912639260292053, 0.47673994302749634, 0.46776485443115234, 0.45580968260765076, 0.45419755578041077, 0.4471202790737152, 0.4368197023868561, 0.4238806366920471, 0.41453513503074646, 0.41017231345176697, 0.4062040150165558, 0.40386685729026794, 0.3953916132450104, 0.39355871081352234, 0.3836102783679962, 0.37635838985443115, 0.3735085725784302, 0.363672137260437, 0.35395750403404236, 0.35972025990486145, 0.34721699357032776, 0.3442964553833008, 0.335767537355423, 0.3300938904285431, 0.32407090067863464, 0.32112976908683777, 0.3181473910808563, 0.31370431184768677, 0.3087446987628937, 0.3084625005722046, 0.30203962326049805, 0.293395072221756, 0.2889169156551361, 0.2914500832557678, 0.28307828307151794, 0.28207361698150635, 0.2786792516708374, 0.27818819880485535, 0.26387521624565125], "accuracy": [0.27222296595573425, 0.5027077198028564, 0.5674283504486084, 0.6277902722358704, 0.6709813475608826, 0.7058512568473816, 0.7269845604896545, 0.7415136694908142, 0.7586844563484192, 0.7617223858833313, 0.783119797706604, 0.7832518815994263, 0.7926297783851624, 0.8001585006713867, 0.807158887386322, 0.8103289008140564, 0.8133667707443237, 0.8190463781356812, 0.8247259259223938, 0.8271034359931946, 0.8298771381378174, 0.8341038227081299, 0.8366134166717529, 0.839519202709198, 0.8404437899589539, 0.848368763923645, 0.8515387773513794, 0.8564258217811584, 0.8529917001724243, 0.8585391640663147, 0.8515387773513794, 0.863558292388916, 0.8615770936012268, 0.8640866279602051, 0.8652753829956055, 0.8671245574951172, 0.8720116019248962, 0.8771628737449646, 0.8705587387084961, 0.876370370388031, 0.8787478804588318, 0.8784837126731873, 0.8828424215316772, 0.8842953443527222, 0.884691596031189, 0.8840311765670776, 0.8891823887825012, 0.8894465565681458, 0.8899748921394348, 0.8932769894599915, 0.8945978283882141, 0.8980319499969482, 0.896446943283081, 0.8988244533538818, 0.9019944667816162, 0.901862382888794, 0.8985602855682373, 0.904768168926239], "val_loss": [2.039530038833618, 1.5154659748077393, 1.039007544517517, 0.8366694450378418, 0.7400773167610168, 0.6859951019287109, 0.6454513669013977, 0.6114123463630676, 0.5899704694747925, 0.5724708437919617, 0.5533395409584045, 0.5345184803009033, 0.5225448608398438, 0.5092709064483643, 0.500229001045227, 0.49316829442977905, 0.480929970741272, 0.4729439616203308, 0.4688349962234497, 0.4563703238964081, 0.45455607771873474, 0.44636544585227966, 0.44144734740257263, 0.4332112669944763, 0.42851945757865906, 0.4277913272380829, 0.4196922183036804, 0.41600528359413147, 0.4114539325237274, 0.4113328456878662, 0.4059373438358307, 0.4033544063568115, 0.40210506319999695, 0.3963744640350342, 0.39264819025993347, 0.39112263917922974, 0.384288489818573, 0.383841872215271, 0.3804401755332947, 0.3786342442035675, 0.3777892291545868, 0.37486007809638977, 0.37355443835258484, 0.37450093030929565, 0.36811116337776184, 0.3697490096092224, 0.3684578537940979, 0.370509535074234, 0.36476588249206543, 0.36312252283096313, 0.361527681350708, 0.36036449670791626, 0.3581533133983612, 0.3633516728878021, 0.35499346256256104, 0.3547135293483734, 0.35882508754730225, 0.35363712906837463], "val_accuracy": [0.5473333597183228, 0.6496666669845581, 0.6846666932106018, 0.6959999799728394, 0.7279999852180481, 0.7450000047683716, 0.7580000162124634, 0.7713333368301392, 0.7763333320617676, 0.7816666960716248, 0.7963333129882812, 0.8109999895095825, 0.8116666674613953, 0.8113333582878113, 0.8116666674613953, 0.8186666369438171, 0.8259999752044678, 0.8236666917800903, 0.828000009059906, 0.8360000252723694, 0.8323333263397217, 0.8373333215713501, 0.8373333215713501, 0.8366666436195374, 0.843666672706604, 0.843999981880188, 0.846666693687439, 0.8483333587646484, 0.8493333458900452, 0.847000002861023, 0.8476666808128357, 0.8496666550636292, 0.8510000109672546, 0.8519999980926514, 0.8553333282470703, 0.8556666374206543, 0.8583333492279053, 0.859333336353302, 0.8560000061988831, 0.862333357334137, 0.8636666536331177, 0.859666645526886, 0.8636666536331177, 0.8643333315849304, 0.8653333187103271, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.8709999918937683, 0.8690000176429749, 0.8686666488647461, 0.8653333187103271, 0.8733333349227905, 0.8679999709129333, 0.8709999918937683, 0.8706666827201843, 0.8703333139419556, 0.8693333268165588]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8657143115997314, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223499059677124, 1.8720974922180176, 1.400553822517395, 1.1034647226333618, 0.9259296655654907, 0.8324962854385376, 0.7741080522537231, 0.7253854274749756, 0.6834726333618164, 0.6594621539115906, 0.6320686340332031, 0.6032813787460327, 0.5834892988204956, 0.5658645033836365, 0.5594041347503662, 0.5280449986457825, 0.5293384194374084, 0.5079907774925232, 0.5062093138694763, 0.4995337128639221, 0.4778766334056854, 0.4741864800453186, 0.45982807874679565, 0.45767003297805786, 0.439951092004776, 0.43156516551971436, 0.4269264340400696, 0.4259420931339264, 0.4115935266017914, 0.41179972887039185, 0.39817970991134644, 0.3888032138347626, 0.38791966438293457, 0.38596242666244507, 0.37529754638671875, 0.37397491931915283, 0.3560195565223694, 0.3617151379585266, 0.352314293384552, 0.34740352630615234, 0.345562607049942, 0.34862127900123596, 0.33732372522354126, 0.3229021430015564, 0.33154362440109253, 0.32166171073913574, 0.3200536370277405, 0.3173193633556366, 0.3063006103038788, 0.2997796833515167, 0.2914731502532959, 0.2935452461242676, 0.29530805349349976, 0.2868705093860626, 0.28052452206611633, 0.28496918082237244], "accuracy": [0.27116629481315613, 0.47866860032081604, 0.559371292591095, 0.6213181614875793, 0.6738871932029724, 0.6989829540252686, 0.7166820764541626, 0.7386078238487244, 0.750759482383728, 0.7585523724555969, 0.7687227725982666, 0.7778365015983582, 0.7868181467056274, 0.7957997918128967, 0.7989697456359863, 0.8064984679222107, 0.8087438941001892, 0.8185180425643921, 0.8186501264572144, 0.819442629814148, 0.8274996876716614, 0.8310658931732178, 0.8313300609588623, 0.8310658931732178, 0.8436138033866882, 0.8453308939933777, 0.8491612672805786, 0.8469158411026001, 0.8548408150672913, 0.8515387773513794, 0.8577466607093811, 0.8593316674232483, 0.8609166741371155, 0.8628978729248047, 0.8677849769592285, 0.8644828796386719, 0.8750495314598083, 0.8716153502464294, 0.8721436858177185, 0.873860776424408, 0.8765024542808533, 0.8741249442100525, 0.878879964351654, 0.8877294659614563, 0.8805969953536987, 0.883238673210144, 0.8869370222091675, 0.889050304889679, 0.8894465565681458, 0.8931449055671692, 0.8951261639595032, 0.8947299122810364, 0.891559898853302, 0.8949940800666809, 0.8985602855682373, 0.8976356983184814], "val_loss": [2.0436813831329346, 1.527043104171753, 1.0506491661071777, 0.8457033634185791, 0.7511003613471985, 0.6983374953269958, 0.6541168689727783, 0.6172313094139099, 0.5868270397186279, 0.5648393034934998, 0.5440284609794617, 0.527914822101593, 0.513603687286377, 0.5026991367340088, 0.48534443974494934, 0.47680386900901794, 0.4665813744068146, 0.45864006876945496, 0.45822545886039734, 0.4480237364768982, 0.43799909949302673, 0.42963021993637085, 0.42573100328445435, 0.41621845960617065, 0.41094183921813965, 0.4087773859500885, 0.4043535888195038, 0.4036465287208557, 0.3949100375175476, 0.38767895102500916, 0.38823068141937256, 0.38415196537971497, 0.38596829771995544, 0.37537309527397156, 0.37430670857429504, 0.37323400378227234, 0.37023836374282837, 0.3647997975349426, 0.3608572483062744, 0.35727831721305847, 0.3575386703014374, 0.3542182743549347, 0.35348623991012573, 0.3556132912635803, 0.35449233651161194, 0.3494529724121094, 0.34623125195503235, 0.3530265986919403, 0.3443641662597656, 0.35192766785621643, 0.33800560235977173, 0.3424120247364044, 0.3387856185436249, 0.337559312582016, 0.3367156982421875, 0.3333686888217926], "val_accuracy": [0.543666660785675, 0.640999972820282, 0.6796666383743286, 0.6970000267028809, 0.718666672706604, 0.7353333234786987, 0.7590000033378601, 0.7620000243186951, 0.7766666412353516, 0.7866666913032532, 0.7990000247955322, 0.8083333373069763, 0.8119999766349792, 0.8083333373069763, 0.8216666579246521, 0.8246666789054871, 0.8333333134651184, 0.8370000123977661, 0.8276666402816772, 0.8363333344459534, 0.8410000205039978, 0.843999981880188, 0.8486666679382324, 0.8500000238418579, 0.8560000061988831, 0.8529999852180481, 0.8569999933242798, 0.8523333072662354, 0.8576666712760925, 0.862666666507721, 0.859666645526886, 0.8586666584014893, 0.8586666584014893, 0.8656666874885559, 0.8653333187103271, 0.8633333444595337, 0.8700000047683716, 0.8709999918937683, 0.8709999918937683, 0.8726666569709778, 0.8713333606719971, 0.8736666440963745, 0.871999979019165, 0.871666669845581, 0.8740000128746033, 0.8759999871253967, 0.8733333349227905, 0.8723333477973938, 0.8759999871253967, 0.874666690826416, 0.8816666603088379, 0.8769999742507935, 0.8799999952316284, 0.878333330154419, 0.8813333511352539, 0.8816666603088379]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 1], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 4, 0, 3, 5], [3, 2, 2, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 4], [0, 4, 0, 3, 0, 0, 3, 1, 2, 0], [21, 99, 96, 99, 61, 1]], "fitness": -0.795714259147644, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.negative(grad), beta), tf.math.multiply(beta, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [2.3060462474823, 2.2788093090057373, 2.1923298835754395, 1.7726186513900757, 1.2827835083007812, 1.0870287418365479, 0.9643861651420593, 0.9166423678398132, 0.9002991318702698, 0.8129985332489014, 0.764288067817688, 0.7428913116455078, 0.7461728453636169, 0.6922186017036438, 0.660942554473877, 0.652643084526062, 0.7104792594909668, 0.6584135890007019, 0.5981941819190979, 0.5970442295074463, 0.5686865448951721, 0.5380875468254089, 0.8102089762687683], "accuracy": [0.09668471664190292, 0.1582353711128235, 0.3205653131008148, 0.460969477891922, 0.5443138480186462, 0.6029586791992188, 0.6448289752006531, 0.6633205413818359, 0.6682076454162598, 0.6947563290596008, 0.71100252866745, 0.7147008180618286, 0.7181349992752075, 0.7331924438476562, 0.7493065595626831, 0.7515519857406616, 0.7449478507041931, 0.7565711140632629, 0.7667415142059326, 0.7733456492424011, 0.7794214487075806, 0.7991018295288086, 0.724210798740387], "val_loss": [2.2925658226013184, 2.2390170097351074, 2.0308921337127686, 1.245296597480774, 1.0570704936981201, 0.9234000444412231, 0.7627463340759277, 0.7256438732147217, 0.7796136140823364, 0.680118203163147, 0.8224678635597229, 0.6555360555648804, 0.6379845142364502, 0.6567811965942383, 0.5883124470710754, 0.654853105545044, 0.7007818222045898, 0.5377038717269897, 0.5635927319526672, 0.5430144667625427, 0.5250332355499268, 0.6339794397354126, 1.0926425457000732], "val_accuracy": [0.125, 0.4346666634082794, 0.5383333563804626, 0.5676666498184204, 0.5770000219345093, 0.6209999918937683, 0.6986666917800903, 0.7286666631698608, 0.7046666741371155, 0.7456666827201843, 0.6856666803359985, 0.7519999742507935, 0.7366666793823242, 0.7326666712760925, 0.7586666941642761, 0.7596666812896729, 0.7350000143051147, 0.7983333468437195, 0.7646666765213013, 0.7836666703224182, 0.793666660785675, 0.762333333492279, 0.6973333358764648]}, "mapping_values": [1, 4, 2, 2, 1, 10, 6, 4, 0, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 1, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 1], [16, 16], [0, 1, 0, 0, 1], [2, 8, 5], [0, 2], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 8, 5, 1, 4, 1, 0, 2, 8], [1, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 41, 67, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 6, 3, 3, 2, 5, 3, 2, 1, 16, 9, 7, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.square(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(alpha, tf.math.sqrt(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.pow(sigma, tf.math.subtract(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [91, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 2], [0, 0, 0, 3, 0, 4, 3, 1, 2, 0, 2], [34, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 7, 4, 3, 2, 2, 1, 1, 1, 23, 12, 11, 5], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), sigma)), tf.math.sqrt(tf.math.add(alpha, beta)))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [1, 1], [0], [0], [7], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [4, 0, 0, 1, 0, 0, 3, 1, 2, 2], [17, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 1, 0, 1, 1, 16, 8, 8, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(grad, tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))))", "other_info": {"loss": [1.9764221704380964e+23, 3891.794921875, 5849.3525390625, 7253.03857421875, 8427.1162109375, 9510.9912109375], "accuracy": [0.09496764093637466, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2832.9580078125, 5174.72314453125, 6735.68798828125, 7978.27490234375, 9085.501953125, 10149.5078125], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}]