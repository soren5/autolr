[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8808571696281433, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223215103149414, 1.8640538454055786, 1.390925645828247, 1.0857504606246948, 0.9175904989242554, 0.8278062343597412, 0.75929194688797, 0.7150763869285583, 0.6742342710494995, 0.6527069211006165, 0.6226239800453186, 0.6030511260032654, 0.5812473893165588, 0.5698184370994568, 0.5517233610153198, 0.5318202376365662, 0.5262278914451599, 0.5063096284866333, 0.4941454231739044, 0.4912639260292053, 0.47673994302749634, 0.46776485443115234, 0.45580968260765076, 0.45419755578041077, 0.4471202790737152, 0.4368197023868561, 0.4238806366920471, 0.41453513503074646, 0.41017231345176697, 0.4062040150165558, 0.40386685729026794, 0.3953916132450104, 0.39355871081352234, 0.3836102783679962, 0.37635838985443115, 0.3735085725784302, 0.363672137260437, 0.35395750403404236, 0.35972025990486145, 0.34721699357032776, 0.3442964553833008, 0.335767537355423, 0.3300938904285431, 0.32407090067863464, 0.32112976908683777, 0.3181473910808563, 0.31370431184768677, 0.3087446987628937, 0.3084625005722046, 0.30203962326049805, 0.293395072221756, 0.2889169156551361, 0.2914500832557678, 0.28307828307151794, 0.28207361698150635, 0.2786792516708374, 0.27818819880485535, 0.26387521624565125], "accuracy": [0.27222296595573425, 0.5027077198028564, 0.5674283504486084, 0.6277902722358704, 0.6709813475608826, 0.7058512568473816, 0.7269845604896545, 0.7415136694908142, 0.7586844563484192, 0.7617223858833313, 0.783119797706604, 0.7832518815994263, 0.7926297783851624, 0.8001585006713867, 0.807158887386322, 0.8103289008140564, 0.8133667707443237, 0.8190463781356812, 0.8247259259223938, 0.8271034359931946, 0.8298771381378174, 0.8341038227081299, 0.8366134166717529, 0.839519202709198, 0.8404437899589539, 0.848368763923645, 0.8515387773513794, 0.8564258217811584, 0.8529917001724243, 0.8585391640663147, 0.8515387773513794, 0.863558292388916, 0.8615770936012268, 0.8640866279602051, 0.8652753829956055, 0.8671245574951172, 0.8720116019248962, 0.8771628737449646, 0.8705587387084961, 0.876370370388031, 0.8787478804588318, 0.8784837126731873, 0.8828424215316772, 0.8842953443527222, 0.884691596031189, 0.8840311765670776, 0.8891823887825012, 0.8894465565681458, 0.8899748921394348, 0.8932769894599915, 0.8945978283882141, 0.8980319499969482, 0.896446943283081, 0.8988244533538818, 0.9019944667816162, 0.901862382888794, 0.8985602855682373, 0.904768168926239], "val_loss": [2.039530038833618, 1.5154659748077393, 1.039007544517517, 0.8366694450378418, 0.7400773167610168, 0.6859951019287109, 0.6454513669013977, 0.6114123463630676, 0.5899704694747925, 0.5724708437919617, 0.5533395409584045, 0.5345184803009033, 0.5225448608398438, 0.5092709064483643, 0.500229001045227, 0.49316829442977905, 0.480929970741272, 0.4729439616203308, 0.4688349962234497, 0.4563703238964081, 0.45455607771873474, 0.44636544585227966, 0.44144734740257263, 0.4332112669944763, 0.42851945757865906, 0.4277913272380829, 0.4196922183036804, 0.41600528359413147, 0.4114539325237274, 0.4113328456878662, 0.4059373438358307, 0.4033544063568115, 0.40210506319999695, 0.3963744640350342, 0.39264819025993347, 0.39112263917922974, 0.384288489818573, 0.383841872215271, 0.3804401755332947, 0.3786342442035675, 0.3777892291545868, 0.37486007809638977, 0.37355443835258484, 0.37450093030929565, 0.36811116337776184, 0.3697490096092224, 0.3684578537940979, 0.370509535074234, 0.36476588249206543, 0.36312252283096313, 0.361527681350708, 0.36036449670791626, 0.3581533133983612, 0.3633516728878021, 0.35499346256256104, 0.3547135293483734, 0.35882508754730225, 0.35363712906837463], "val_accuracy": [0.5473333597183228, 0.6496666669845581, 0.6846666932106018, 0.6959999799728394, 0.7279999852180481, 0.7450000047683716, 0.7580000162124634, 0.7713333368301392, 0.7763333320617676, 0.7816666960716248, 0.7963333129882812, 0.8109999895095825, 0.8116666674613953, 0.8113333582878113, 0.8116666674613953, 0.8186666369438171, 0.8259999752044678, 0.8236666917800903, 0.828000009059906, 0.8360000252723694, 0.8323333263397217, 0.8373333215713501, 0.8373333215713501, 0.8366666436195374, 0.843666672706604, 0.843999981880188, 0.846666693687439, 0.8483333587646484, 0.8493333458900452, 0.847000002861023, 0.8476666808128357, 0.8496666550636292, 0.8510000109672546, 0.8519999980926514, 0.8553333282470703, 0.8556666374206543, 0.8583333492279053, 0.859333336353302, 0.8560000061988831, 0.862333357334137, 0.8636666536331177, 0.859666645526886, 0.8636666536331177, 0.8643333315849304, 0.8653333187103271, 0.8616666793823242, 0.8656666874885559, 0.8679999709129333, 0.8709999918937683, 0.8690000176429749, 0.8686666488647461, 0.8653333187103271, 0.8733333349227905, 0.8679999709129333, 0.8709999918937683, 0.8706666827201843, 0.8703333139419556, 0.8693333268165588]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8594285845756531, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2248759269714355, 1.8719502687454224, 1.396032691001892, 1.0856820344924927, 0.9443433284759521, 0.8338596820831299, 0.7690449953079224, 0.7270183563232422, 0.6846169829368591, 0.6558327078819275, 0.636008620262146, 0.6053192615509033, 0.5875797271728516, 0.5699727535247803, 0.5521765947341919, 0.5374550223350525, 0.5235585570335388, 0.514392077922821, 0.49765917658805847, 0.4878919720649719, 0.4791984558105469, 0.46476131677627563, 0.46704748272895813, 0.44694146513938904, 0.4462987780570984, 0.4280061423778534, 0.4284448027610779, 0.4164521098136902, 0.41693347692489624, 0.41078323125839233, 0.39800411462783813, 0.3949081003665924, 0.3916280269622803, 0.383855402469635, 0.3747389316558838, 0.3661397397518158, 0.3683953285217285, 0.3587103486061096, 0.3559495210647583, 0.3534373342990875, 0.3489355444908142, 0.34357568621635437, 0.3353695273399353, 0.3329624831676483, 0.32557886838912964, 0.3191983699798584, 0.3110921084880829, 0.31559789180755615, 0.3066021502017975, 0.2993682622909546, 0.296804279088974, 0.28723829984664917, 0.28864848613739014, 0.2902936041355133, 0.28725340962409973, 0.2797369658946991, 0.2761199474334717, 0.2663695812225342, 0.27303817868232727, 0.25921759009361267, 0.26412099599838257, 0.25943365693092346, 0.2555481195449829, 0.24704435467720032, 0.2458437979221344, 0.23418642580509186, 0.2408488541841507, 0.2347060889005661, 0.22816921770572662, 0.22590257227420807, 0.22989851236343384, 0.22150340676307678, 0.22246812283992767, 0.2205837368965149, 0.21017423272132874, 0.21444308757781982], "accuracy": [0.27116629481315613, 0.49108439683914185, 0.5624092221260071, 0.6262052655220032, 0.6643772125244141, 0.7016246318817139, 0.7250033020973206, 0.737022876739502, 0.748249888420105, 0.7609298825263977, 0.7680623531341553, 0.7824593782424927, 0.7895918488502502, 0.7950072884559631, 0.8038568496704102, 0.8005547523498535, 0.8121780753135681, 0.8127063512802124, 0.8216879963874817, 0.8269713521003723, 0.8293488025665283, 0.8325188159942627, 0.8337075710296631, 0.8425571322441101, 0.8417646288871765, 0.8544445633888245, 0.8465195894241333, 0.8504821062088013, 0.8561616539955139, 0.8516708612442017, 0.8615770936012268, 0.8646149635314941, 0.8617091774940491, 0.8658037185668945, 0.8668603897094727, 0.8712190985679626, 0.8708229064941406, 0.8745211958885193, 0.8762382864952087, 0.8733324408531189, 0.8782195448875427, 0.8775591254234314, 0.8815215826034546, 0.883238673210144, 0.8857482671737671, 0.886672854423523, 0.8877294659614563, 0.8877294659614563, 0.8928807377815247, 0.8939374089241028, 0.8965790271759033, 0.8973715305328369, 0.8988244533538818, 0.8963148593902588, 0.8973715305328369, 0.9014661312103271, 0.9000132083892822, 0.9041078090667725, 0.9038436412811279, 0.9083344340324402, 0.9082023501396179, 0.9083344340324402, 0.9083344340324402, 0.9111081957817078, 0.9157310724258423, 0.9177123308181763, 0.9132214784622192, 0.9167877435684204, 0.9207502603530884, 0.9181085824966431, 0.9159952402114868, 0.923920214176178, 0.9191652536392212, 0.9208822846412659, 0.9256373047828674, 0.9233918786048889], "val_loss": [2.043757200241089, 1.5193066596984863, 1.044886827468872, 0.8343824148178101, 0.7449485659599304, 0.6917317509651184, 0.638127863407135, 0.6046931147575378, 0.5805858373641968, 0.5573014616966248, 0.5410237908363342, 0.5187293291091919, 0.5069658756256104, 0.498657763004303, 0.4807206094264984, 0.47345492243766785, 0.46392822265625, 0.45224401354789734, 0.4518832266330719, 0.4401634931564331, 0.4328371286392212, 0.4274638593196869, 0.42134928703308105, 0.42473554611206055, 0.4113338887691498, 0.41174325346946716, 0.40579935908317566, 0.4080144762992859, 0.39869174361228943, 0.3978032171726227, 0.3904258906841278, 0.3893161714076996, 0.38430139422416687, 0.3815637230873108, 0.38106241822242737, 0.38052311539649963, 0.3792954385280609, 0.3686618208885193, 0.37290817499160767, 0.3782911002635956, 0.35975536704063416, 0.3695581555366516, 0.3585132658481598, 0.3644091486930847, 0.35708463191986084, 0.3580608665943146, 0.35250189900398254, 0.3513810634613037, 0.3504003882408142, 0.34856942296028137, 0.3472607135772705, 0.34892451763153076, 0.3469916880130768, 0.34823155403137207, 0.3415100574493408, 0.3405774235725403, 0.3439710736274719, 0.3438841998577118, 0.3390620946884155, 0.3395377993583679, 0.3355417847633362, 0.338101327419281, 0.34213846921920776, 0.33468732237815857, 0.3351415693759918, 0.34185686707496643, 0.3346325755119324, 0.3351283669471741, 0.33580851554870605, 0.3410079777240753, 0.3325064778327942, 0.3404610753059387, 0.3340612053871155, 0.3380880057811737, 0.33726969361305237, 0.3356669843196869], "val_accuracy": [0.5356666445732117, 0.659333348274231, 0.6896666884422302, 0.7093333601951599, 0.7300000190734863, 0.75, 0.7696666717529297, 0.7736666798591614, 0.7856666445732117, 0.7943333387374878, 0.7979999780654907, 0.8116666674613953, 0.8130000233650208, 0.8130000233650208, 0.8259999752044678, 0.8270000219345093, 0.8316666483879089, 0.8373333215713501, 0.8303333520889282, 0.8420000076293945, 0.8456666469573975, 0.8473333120346069, 0.847000002861023, 0.8493333458900452, 0.8533333539962769, 0.8543333411216736, 0.8523333072662354, 0.8529999852180481, 0.8519999980926514, 0.8543333411216736, 0.859000027179718, 0.8556666374206543, 0.8579999804496765, 0.8579999804496765, 0.859333336353302, 0.8619999885559082, 0.8610000014305115, 0.8616666793823242, 0.8613333106040955, 0.8610000014305115, 0.8656666874885559, 0.862333357334137, 0.8659999966621399, 0.8679999709129333, 0.8673333525657654, 0.8673333525657654, 0.8703333139419556, 0.8690000176429749, 0.871666669845581, 0.871666669845581, 0.8740000128746033, 0.871666669845581, 0.8730000257492065, 0.8730000257492065, 0.8733333349227905, 0.8759999871253967, 0.8756666779518127, 0.8743333220481873, 0.8773333430290222, 0.8790000081062317, 0.8756666779518127, 0.8799999952316284, 0.8776666522026062, 0.8790000081062317, 0.8809999823570251, 0.8796666860580444, 0.8799999952316284, 0.8836666941642761, 0.8813333511352539, 0.8813333511352539, 0.8846666812896729, 0.8833333253860474, 0.8813333511352539, 0.8813333511352539, 0.8816666603088379, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1], [0, 2, 3, 0, 3, 5, 9], [0, 2, 0, 2], [16, 16, 7], [0, 1, 0], [2, 9], [0], [99, 51], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 6, 1, 4, 2, 0], [0, 0, 2, 3, 0, 2, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 7, 3, 3, 3, 2, 1, 2, 14, 7, 7, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(beta), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(beta, sigma))))", "other_info": {"loss": [2.3042683601379395, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 5, 5, 3, 8], [0, 1, 0, 2], [39, 39], [1, 1, 0, 0, 1, 1, 0, 1, 0, 0], [0, 8, 3, 0, 2, 5], [0, 3, 3, 3], [5, 16], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1], [2, 5, 3, 5, 0, 5, 8, 5], [0, 7, 5], [99], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 8, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [94, 99, 96, 99, 61, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 6, 3, 2, 1, 0, 1, 1, 11, 8, 3, 1, 10, 5, 5, 4], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.square(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha)))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.square(tf.math.multiply(tf.math.square(grad), tf.math.negative(tf.math.square(tf.math.sqrt(tf.math.square(grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), sigma), tf.constant(1.0, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 5, 3, 0, 3, 5], [3, 2, 0, 3], [16, 16], [0, 1], [0], [3], [49], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 0, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.square(tf.math.multiply(tf.math.negative(grad), beta)), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3038852214813232, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10130762308835983, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3, 6, 5], [0, 1, 0, 2, 1], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 2, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 6, 1, 4, 2, 8, 0], [0, 0, 4, 3, 0, 0, 3, 1, 2, 0], [16, 58, 96, 99, 45, 1]], "fitness": -0.09057142585515976, "mapping_values": [1, 12, 7, 5, 2, 10, 6, 4, 1, 2, 1, 1, 1, 22, 12, 10, 5], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.square(grad)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(beta, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(tf.math.negative(beta)), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.309969186782837, 2.3083627223968506, 2.3094801902770996, 2.3094635009765625, 2.3088507652282715, 2.309542655944824], "accuracy": [0.09509972482919693, 0.09325055778026581, 0.09589222073554993, 0.09668471664190292, 0.09008057415485382, 0.08651433140039444], "val_loss": [2.308638572692871, 2.308638572692871, 2.308638572692871, 2.308638572692871, 2.308638572692871, 2.308638572692871], "val_accuracy": [0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231]}}]