[{"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.7882857322692871, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 6, 6, 2, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(grad, tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta))), tf.math.add(beta, tf.math.pow(tf.math.negative(grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.231654230629716, 1.8380575005435955, 1.32158888885295, 1.1147757181953115, 0.9923160212812423, 0.9261476787294552, 0.8669891464412646, 0.8203766972019436, 0.7920877809506272, 0.7699887517058791, 0.7438486241047266, 0.7360470450754257, 0.7281335649189932, 0.7038008891800848, 0.6921326698030007, 0.6908071396877076, 0.6933154761830593, 0.6521272291486542, 0.6585830366055664, 0.6561154565948458, 0.6463125367300653, 0.6409655545822555, 0.6281492620206638, 0.6243368257164341, 0.6153470394460516, 0.615854211392703, 0.612739643865116, 0.602746131815033, 0.5926028639727643, 0.5898160844620083, 0.5843856749974222, 0.58599054881878, 0.57972927226398], "accuracy": [0.23722097277641296, 0.44208163022994995, 0.5511821508407593, 0.6020340919494629, 0.6497160196304321, 0.6725663542747498, 0.6868313550949097, 0.6975300312042236, 0.7136441469192505, 0.7164179086685181, 0.7284374833106995, 0.7289658188819885, 0.7382115721702576, 0.739928662776947, 0.743891179561615, 0.7437590956687927, 0.7423061728477478, 0.7600052952766418, 0.7560427784919739, 0.757099449634552, 0.757099449634552, 0.7631752490997314, 0.7696473598480225, 0.7666094303131104, 0.772288978099823, 0.7709681391716003, 0.7795535326004028, 0.7779685854911804, 0.7795535326004028, 0.7836481332778931, 0.7853652238845825, 0.7862898111343384, 0.7828556299209595], "val_loss": [1.7629471506391252, 1.139216354915074, 0.8281648329326085, 0.7681150436401367, 0.6921381439481463, 0.6784465823854718, 0.5838943890162877, 0.5850143092019218, 0.5668870040348598, 0.5745378392083305, 0.5489289930888585, 0.5392235687800816, 0.5112930536270142, 0.5106022528239659, 0.5034254108156476, 0.49156878675733295, 0.4880989279065813, 0.48716875485011507, 0.5036388635635376, 0.47505864075251986, 0.4748580115182059, 0.4960622617176601, 0.4817240238189697, 0.46954229899815153, 0.4690959794180734, 0.45629310607910156, 0.4597711903708322, 0.45405798298971994, 0.45630269391196115, 0.44829163381031584, 0.44937513555799213, 0.4454255870410374, 0.45165021078927176], "val_accuracy": [0.48899999260902405, 0.6173333525657654, 0.671999990940094, 0.6826666593551636, 0.6990000009536743, 0.6970000267028809, 0.7536666393280029, 0.7450000047683716, 0.7543333172798157, 0.7336666584014893, 0.7480000257492065, 0.746666669845581, 0.7870000004768372, 0.7730000019073486, 0.7879999876022339, 0.7910000085830688, 0.7943333387374878, 0.784333348274231, 0.7703333497047424, 0.7956666946411133, 0.7946666479110718, 0.781000018119812, 0.7879999876022339, 0.800000011920929, 0.8059999942779541, 0.8096666932106018, 0.8043333292007446, 0.8169999718666077, 0.8119999766349792, 0.8133333325386047, 0.8090000152587891, 0.812666654586792, 0.8006666898727417]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [9, 4, 2, 2, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 1, 1, 2, 3, 3, 0], [37, 60, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.7882857322692871, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.231654230629716, 1.8380575005435955, 1.32158888885295, 1.1147757181953115, 0.9923160212812423, 0.9261476787294552, 0.8669891464412646, 0.8203766972019436, 0.7920877809506272, 0.7699887517058791, 0.7438486241047266, 0.7360470450754257, 0.7281335649189932, 0.7038008891800848, 0.6921326698030007, 0.6908071396877076, 0.6933154761830593, 0.6521272291486542, 0.6585830366055664, 0.6561154565948458, 0.6463125367300653, 0.6409655545822555, 0.6281492620206638, 0.6243368257164341, 0.6153470394460516, 0.615854211392703, 0.612739643865116, 0.602746131815033, 0.5926028639727643, 0.5898160844620083, 0.5843856749974222, 0.58599054881878, 0.57972927226398], "accuracy": [0.23722097277641296, 0.44208163022994995, 0.5511821508407593, 0.6020340919494629, 0.6497160196304321, 0.6725663542747498, 0.6868313550949097, 0.6975300312042236, 0.7136441469192505, 0.7164179086685181, 0.7284374833106995, 0.7289658188819885, 0.7382115721702576, 0.739928662776947, 0.743891179561615, 0.7437590956687927, 0.7423061728477478, 0.7600052952766418, 0.7560427784919739, 0.757099449634552, 0.757099449634552, 0.7631752490997314, 0.7696473598480225, 0.7666094303131104, 0.772288978099823, 0.7709681391716003, 0.7795535326004028, 0.7779685854911804, 0.7795535326004028, 0.7836481332778931, 0.7853652238845825, 0.7862898111343384, 0.7828556299209595], "val_loss": [1.7629471506391252, 1.139216354915074, 0.8281648329326085, 0.7681150436401367, 0.6921381439481463, 0.6784465823854718, 0.5838943890162877, 0.5850143092019218, 0.5668870040348598, 0.5745378392083305, 0.5489289930888585, 0.5392235687800816, 0.5112930536270142, 0.5106022528239659, 0.5034254108156476, 0.49156878675733295, 0.4880989279065813, 0.48716875485011507, 0.5036388635635376, 0.47505864075251986, 0.4748580115182059, 0.4960622617176601, 0.4817240238189697, 0.46954229899815153, 0.4690959794180734, 0.45629310607910156, 0.4597711903708322, 0.45405798298971994, 0.45630269391196115, 0.44829163381031584, 0.44937513555799213, 0.4454255870410374, 0.45165021078927176], "val_accuracy": [0.48899999260902405, 0.6173333525657654, 0.671999990940094, 0.6826666593551636, 0.6990000009536743, 0.6970000267028809, 0.7536666393280029, 0.7450000047683716, 0.7543333172798157, 0.7336666584014893, 0.7480000257492065, 0.746666669845581, 0.7870000004768372, 0.7730000019073486, 0.7879999876022339, 0.7910000085830688, 0.7943333387374878, 0.784333348274231, 0.7703333497047424, 0.7956666946411133, 0.7946666479110718, 0.781000018119812, 0.7879999876022339, 0.800000011920929, 0.8059999942779541, 0.8096666932106018, 0.8043333292007446, 0.8169999718666077, 0.8119999766349792, 0.8133333325386047, 0.8090000152587891, 0.812666654586792, 0.8006666898727417]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [6, 9, 6, 2, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 1, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [41, 38]], "fitness": -0.7548571228981018, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.2886302722459297, 2.2600947303101844, 2.2279704118748036, 2.1819494771699173, 2.1223367222579497, 2.0367118119091296, 1.9223432512709084, 1.7931937187606979, 1.643438472550669, 1.5099624618799332, 1.4073740383417002, 1.3136623568774812, 1.2557119086528452, 1.1980309267683964, 1.1414922156338332, 1.1179833969876531, 1.0732444174899685, 1.0383400555063846, 1.019500166150195, 0.9985821477378978, 0.9824169125019709, 0.9556642691567274, 0.9327321861083434, 0.9265645083466604, 0.9075606994703855, 0.890282176811902, 0.8810114591601282, 0.8738181494750115, 0.85849644717854, 0.8537417194783774, 0.8370423698863019, 0.8426972977662556, 0.8236017359592628, 0.8121474486190283, 0.8107866164936035, 0.7946202296858623, 0.7955651116204252, 0.7858624546094231, 0.7973650174763822, 0.7746113560470875, 0.7793187805768946, 0.7845367226523808, 0.7656387645476184, 0.753541203057525, 0.7656225782296661, 0.7496092365780338], "accuracy": [0.12719587981700897, 0.19984149932861328, 0.27037379145622253, 0.3259807229042053, 0.3621714413166046, 0.39545634388923645, 0.43230748176574707, 0.462950736284256, 0.48791441321372986, 0.5213313698768616, 0.5403513312339783, 0.5551446080207825, 0.5690133571624756, 0.585919976234436, 0.605468213558197, 0.6106194853782654, 0.6281865239143372, 0.6388852000236511, 0.6392814517021179, 0.6452252268791199, 0.6520935297012329, 0.6635847091674805, 0.6682076454162598, 0.6708492636680603, 0.6728305220603943, 0.6785101294517517, 0.6868313550949097, 0.6889446377754211, 0.6946242451667786, 0.6936996579170227, 0.700171709060669, 0.700171709060669, 0.7025492191314697, 0.7106062769889832, 0.7092854380607605, 0.7177387475967407, 0.7140403985977173, 0.7168141603469849, 0.7087571024894714, 0.720380425453186, 0.7144366502761841, 0.715889573097229, 0.7294940948486328, 0.7296261787414551, 0.7238145470619202, 0.7277770638465881], "val_loss": [1.9436207498822893, 1.9142217636108398, 1.8777969905308314, 1.825699738093785, 1.7543597221374512, 1.6570611681256975, 1.533170291355678, 1.3930631024496896, 1.2495091983250208, 1.1237634590693883, 1.0233892032078333, 0.9439982005528041, 0.8843021733420235, 0.8373222521373204, 0.7971296991620745, 0.7700642006737846, 0.7422287804739816, 0.7189578839710781, 0.7019543136869159, 0.6849050351551601, 0.6725469657352993, 0.6595030341829572, 0.6464978797095162, 0.6365042413984027, 0.6268482889447894, 0.6183138234274728, 0.6125666754586356, 0.6059901884623936, 0.5979813507625035, 0.595439076423645, 0.587367057800293, 0.5824852160045079, 0.5785704851150513, 0.5718006065913609, 0.56755644934518, 0.563106792313712, 0.5607858555657523, 0.5541972092219761, 0.5533840826579502, 0.5493863139833722, 0.5453342880521502, 0.5448461260114398, 0.5411850214004517, 0.5366370848246983, 0.5337126084736415, 0.5348548207964215], "val_accuracy": [0.27133333683013916, 0.3883333206176758, 0.4339999854564667, 0.47200000286102295, 0.5226666927337646, 0.5550000071525574, 0.5643333196640015, 0.5796666741371155, 0.6010000109672546, 0.6259999871253967, 0.6473333239555359, 0.6759999990463257, 0.6866666674613953, 0.6946666836738586, 0.6970000267028809, 0.6993333101272583, 0.7039999961853027, 0.7120000123977661, 0.7210000157356262, 0.7223333120346069, 0.7229999899864197, 0.7319999933242798, 0.7269999980926514, 0.7400000095367432, 0.7423333525657654, 0.7443333268165588, 0.7473333477973938, 0.7513333559036255, 0.7563333511352539, 0.7523333430290222, 0.7613333463668823, 0.7603333592414856, 0.7636666893959045, 0.7636666893959045, 0.7636666893959045, 0.7683333158493042, 0.7643333077430725, 0.7706666588783264, 0.7706666588783264, 0.7706666588783264, 0.7760000228881836, 0.7749999761581421, 0.7730000019073486, 0.7683333158493042, 0.7723333239555359, 0.7736666798591614]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [50, 57], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 8, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 0, 0, 3, 0, 1, 2, 3, 3, 0], [15, 2, 72, 84, 1, 78], [0, 0, 1, 0, 0], [1, 0, 1, 1, 1], [2, 3, 0], [4, 3, 6], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [41, 38]], "fitness": -0.7548571228981018, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 4, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.multiply(tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.2886302722459297, 2.2600947303101844, 2.2279704118748036, 2.1819494771699173, 2.1223367222579497, 2.0367118119091296, 1.9223432512709084, 1.7931937187606979, 1.643438472550669, 1.5099624618799332, 1.4073740383417002, 1.3136623568774812, 1.2557119086528452, 1.1980309267683964, 1.1414922156338332, 1.1179833969876531, 1.0732444174899685, 1.0383400555063846, 1.019500166150195, 0.9985821477378978, 0.9824169125019709, 0.9556642691567274, 0.9327321861083434, 0.9265645083466604, 0.9075606994703855, 0.890282176811902, 0.8810114591601282, 0.8738181494750115, 0.85849644717854, 0.8537417194783774, 0.8370423698863019, 0.8426972977662556, 0.8236017359592628, 0.8121474486190283, 0.8107866164936035, 0.7946202296858623, 0.7955651116204252, 0.7858624546094231, 0.7973650174763822, 0.7746113560470875, 0.7793187805768946, 0.7845367226523808, 0.7656387645476184, 0.753541203057525, 0.7656225782296661, 0.7496092365780338], "accuracy": [0.12719587981700897, 0.19984149932861328, 0.27037379145622253, 0.3259807229042053, 0.3621714413166046, 0.39545634388923645, 0.43230748176574707, 0.462950736284256, 0.48791441321372986, 0.5213313698768616, 0.5403513312339783, 0.5551446080207825, 0.5690133571624756, 0.585919976234436, 0.605468213558197, 0.6106194853782654, 0.6281865239143372, 0.6388852000236511, 0.6392814517021179, 0.6452252268791199, 0.6520935297012329, 0.6635847091674805, 0.6682076454162598, 0.6708492636680603, 0.6728305220603943, 0.6785101294517517, 0.6868313550949097, 0.6889446377754211, 0.6946242451667786, 0.6936996579170227, 0.700171709060669, 0.700171709060669, 0.7025492191314697, 0.7106062769889832, 0.7092854380607605, 0.7177387475967407, 0.7140403985977173, 0.7168141603469849, 0.7087571024894714, 0.720380425453186, 0.7144366502761841, 0.715889573097229, 0.7294940948486328, 0.7296261787414551, 0.7238145470619202, 0.7277770638465881], "val_loss": [1.9436207498822893, 1.9142217636108398, 1.8777969905308314, 1.825699738093785, 1.7543597221374512, 1.6570611681256975, 1.533170291355678, 1.3930631024496896, 1.2495091983250208, 1.1237634590693883, 1.0233892032078333, 0.9439982005528041, 0.8843021733420235, 0.8373222521373204, 0.7971296991620745, 0.7700642006737846, 0.7422287804739816, 0.7189578839710781, 0.7019543136869159, 0.6849050351551601, 0.6725469657352993, 0.6595030341829572, 0.6464978797095162, 0.6365042413984027, 0.6268482889447894, 0.6183138234274728, 0.6125666754586356, 0.6059901884623936, 0.5979813507625035, 0.595439076423645, 0.587367057800293, 0.5824852160045079, 0.5785704851150513, 0.5718006065913609, 0.56755644934518, 0.563106792313712, 0.5607858555657523, 0.5541972092219761, 0.5533840826579502, 0.5493863139833722, 0.5453342880521502, 0.5448461260114398, 0.5411850214004517, 0.5366370848246983, 0.5337126084736415, 0.5348548207964215], "val_accuracy": [0.27133333683013916, 0.3883333206176758, 0.4339999854564667, 0.47200000286102295, 0.5226666927337646, 0.5550000071525574, 0.5643333196640015, 0.5796666741371155, 0.6010000109672546, 0.6259999871253967, 0.6473333239555359, 0.6759999990463257, 0.6866666674613953, 0.6946666836738586, 0.6970000267028809, 0.6993333101272583, 0.7039999961853027, 0.7120000123977661, 0.7210000157356262, 0.7223333120346069, 0.7229999899864197, 0.7319999933242798, 0.7269999980926514, 0.7400000095367432, 0.7423333525657654, 0.7443333268165588, 0.7473333477973938, 0.7513333559036255, 0.7563333511352539, 0.7523333430290222, 0.7613333463668823, 0.7603333592414856, 0.7636666893959045, 0.7636666893959045, 0.7636666893959045, 0.7683333158493042, 0.7643333077430725, 0.7706666588783264, 0.7706666588783264, 0.7706666588783264, 0.7760000228881836, 0.7749999761581421, 0.7730000019073486, 0.7683333158493042, 0.7723333239555359, 0.7736666798591614]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1], [7, 9, 2, 4, 0, 4, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 1, 2, 3, 3, 0], [15, 40, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [41, 38]], "fitness": -0.7548571228981018, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 3, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(grad, tf.math.pow(tf.math.add(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.2886302722459297, 2.2600947303101844, 2.2279704118748036, 2.1819494771699173, 2.1223367222579497, 2.0367118119091296, 1.9223432512709084, 1.7931937187606979, 1.643438472550669, 1.5099624618799332, 1.4073740383417002, 1.3136623568774812, 1.2557119086528452, 1.1980309267683964, 1.1414922156338332, 1.1179833969876531, 1.0732444174899685, 1.0383400555063846, 1.019500166150195, 0.9985821477378978, 0.9824169125019709, 0.9556642691567274, 0.9327321861083434, 0.9265645083466604, 0.9075606994703855, 0.890282176811902, 0.8810114591601282, 0.8738181494750115, 0.85849644717854, 0.8537417194783774, 0.8370423698863019, 0.8426972977662556, 0.8236017359592628, 0.8121474486190283, 0.8107866164936035, 0.7946202296858623, 0.7955651116204252, 0.7858624546094231, 0.7973650174763822, 0.7746113560470875, 0.7793187805768946, 0.7845367226523808, 0.7656387645476184, 0.753541203057525, 0.7656225782296661, 0.7496092365780338], "accuracy": [0.12719587981700897, 0.19984149932861328, 0.27037379145622253, 0.3259807229042053, 0.3621714413166046, 0.39545634388923645, 0.43230748176574707, 0.462950736284256, 0.48791441321372986, 0.5213313698768616, 0.5403513312339783, 0.5551446080207825, 0.5690133571624756, 0.585919976234436, 0.605468213558197, 0.6106194853782654, 0.6281865239143372, 0.6388852000236511, 0.6392814517021179, 0.6452252268791199, 0.6520935297012329, 0.6635847091674805, 0.6682076454162598, 0.6708492636680603, 0.6728305220603943, 0.6785101294517517, 0.6868313550949097, 0.6889446377754211, 0.6946242451667786, 0.6936996579170227, 0.700171709060669, 0.700171709060669, 0.7025492191314697, 0.7106062769889832, 0.7092854380607605, 0.7177387475967407, 0.7140403985977173, 0.7168141603469849, 0.7087571024894714, 0.720380425453186, 0.7144366502761841, 0.715889573097229, 0.7294940948486328, 0.7296261787414551, 0.7238145470619202, 0.7277770638465881], "val_loss": [1.9436207498822893, 1.9142217636108398, 1.8777969905308314, 1.825699738093785, 1.7543597221374512, 1.6570611681256975, 1.533170291355678, 1.3930631024496896, 1.2495091983250208, 1.1237634590693883, 1.0233892032078333, 0.9439982005528041, 0.8843021733420235, 0.8373222521373204, 0.7971296991620745, 0.7700642006737846, 0.7422287804739816, 0.7189578839710781, 0.7019543136869159, 0.6849050351551601, 0.6725469657352993, 0.6595030341829572, 0.6464978797095162, 0.6365042413984027, 0.6268482889447894, 0.6183138234274728, 0.6125666754586356, 0.6059901884623936, 0.5979813507625035, 0.595439076423645, 0.587367057800293, 0.5824852160045079, 0.5785704851150513, 0.5718006065913609, 0.56755644934518, 0.563106792313712, 0.5607858555657523, 0.5541972092219761, 0.5533840826579502, 0.5493863139833722, 0.5453342880521502, 0.5448461260114398, 0.5411850214004517, 0.5366370848246983, 0.5337126084736415, 0.5348548207964215], "val_accuracy": [0.27133333683013916, 0.3883333206176758, 0.4339999854564667, 0.47200000286102295, 0.5226666927337646, 0.5550000071525574, 0.5643333196640015, 0.5796666741371155, 0.6010000109672546, 0.6259999871253967, 0.6473333239555359, 0.6759999990463257, 0.6866666674613953, 0.6946666836738586, 0.6970000267028809, 0.6993333101272583, 0.7039999961853027, 0.7120000123977661, 0.7210000157356262, 0.7223333120346069, 0.7229999899864197, 0.7319999933242798, 0.7269999980926514, 0.7400000095367432, 0.7423333525657654, 0.7443333268165588, 0.7473333477973938, 0.7513333559036255, 0.7563333511352539, 0.7523333430290222, 0.7613333463668823, 0.7603333592414856, 0.7636666893959045, 0.7636666893959045, 0.7636666893959045, 0.7683333158493042, 0.7643333077430725, 0.7706666588783264, 0.7706666588783264, 0.7706666588783264, 0.7760000228881836, 0.7749999761581421, 0.7730000019073486, 0.7683333158493042, 0.7723333239555359, 0.7736666798591614]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [50, 57, 26], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [5, 5, 1, 6, 9, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 0, 2, 3, 3, 0], [28, 35, 99, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [9, 3, 0], [2, 4], [1], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 4, 9, 5], [0, 1, 3, 1], [56, 38]], "fitness": -0.22714285552501678, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 6, 4, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.pow(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), alpha))", "other_info": {"loss": [2.738362790224748, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1736890822649002, 0.11028926074504852, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [20.984341757638113, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.16366666555404663, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 4, 1, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 8, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 4, 5, 2, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(grad, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3023187244698953, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 1, 9, 0, 6], [2, 0, 0, 3, 1, 0], [5, 57, 66], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1], [3, 4, 2, 4, 8, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 1, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [1, 3, 3, 1], [11, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 6, 4, 3, 14, 14, 7, 7, 3, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), grad))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.multiply(alpha, tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0948355570435524, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 8, 1, 3, 4, 3, 5, 2, 9, 4, 9, 6, 1, 1, 8, 9, 0], [3, 1, 0, 1, 0, 1, 2, 3, 1, 0], [42, 60, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [2, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 6, 5, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))), alpha)))))), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0], [2, 4, 5, 4, 0, 2, 3, 5, 2, 8, 4, 4, 8, 6, 1, 8, 9, 0, 6, 5, 2, 6, 3, 2, 7, 1, 1, 7, 4, 0, 8, 2, 4, 1, 9, 7, 3, 4, 2, 8, 4, 3, 0, 9], [3, 2, 2, 3, 1, 1, 2, 1, 3, 0, 3, 3, 5, 1, 1, 1, 3, 1, 3, 4, 2, 0, 3, 3, 4, 0, 0, 5, 2], [93, 25, 61, 39, 1, 78, 14, 81, 85, 4], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 0, 0], [0, 3, 9, 3, 9], [2, 3, 3, 3], [81, 38, 93]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 0, 5, 4, 2, 2, 0, 4, 3, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.square(tf.math.pow(tf.math.negative(tf.math.add(beta, grad)), beta)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, grad))), tf.math.add(beta, alpha))))), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10408136248588562, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 1, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 1, 2, 3, 3, 0], [69, 61, 33, 18, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [1, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, sigma)))", "other_info": {"loss": [2.300540469877157, 2.302517640702461, 2.3073410398971763, 2.315748547172471, 2.337249098893532, 2.767606808288679, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0952318087220192, 0.09008057415485382, 0.08770307898521423, 0.0754193663597107, 0.08453308790922165, 0.08308017253875732, 0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9712181772504533, 1.9737123080662318, 1.9784754344395228, 1.9868012155805315, 2.0133473532540456, 1082.3282645089287, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03799999877810478, 0.024666666984558105, 0.02199999988079071, 0.045666664838790894, 0.09866666793823242, 0.10000000149011612, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [7, 5, 6, 4, 0, 2, 6, 5, 2, 2, 4, 9, 8, 1, 1, 8, 9, 0], [1, 0, 0, 3, 1, 1, 2, 3, 3, 0], [15, 61, 33, 18, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 4], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 4, 9, 5], [1, 3, 3, 1], [41, 38, 15]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 8, 6, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.square(tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(alpha)), tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), grad)))), tf.math.add(beta, tf.math.square(alpha)))), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.9250053460052254, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1686699241399765, 0.10394927859306335, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [291.738272530692, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [50, 57, 26], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [7, 4, 6, 4, 0, 2, 1, 5, 2, 2, 4, 9, 8, 1, 1, 8, 9, 0], [0, 0, 0, 3, 1, 1, 2, 3, 3, 0], [15, 61, 33, 18, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1, 1], [9, 3, 0], [4, 4], [], [1, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 3, 4, 9, 5], [1, 3, 3, 1], [41, 38, 15]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 7, 7, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), grad)))), tf.math.add(beta, alpha)))), tf.math.add(beta, tf.math.subtract(alpha, tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06868313252925873, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 0, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [0, 3], [54], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [9, 3, 9, 3, 9], [0, 3, 3, 1], [20, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3023187244698953, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 9, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 3, 1, 2, 3, 3, 0], [57, 60, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 7, 5, 3, 1, 1, 0, 1, 0, 4, 3, 1, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.add(tf.math.multiply(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [3455.280350150402, 60668.12260909226, 282900.91881439043, 772940.2766147141, 1669819.295436534, 3055638.7269845465], "accuracy": [0.10077928751707077, 0.10368511080741882, 0.1022322028875351, 0.09893012791872025, 0.1022322028875351, 0.1014397069811821], "val_loss": [12472.231863839286, 97010.84151785714, 324657.6339285714, 766444.8214285715, 1493408.4285714286, 2576581.3571428573], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [50, 57, 26], [1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [2, 1, 1, 7, 3, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 0, 2, 3, 3, 0], [15, 61, 33, 18, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [9, 3, 0], [4, 4], [], [1, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 3, 4, 9, 5], [2, 3, 3, 1], [41, 38, 15]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 2, 11, 11, 5, 6, 4, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.subtract(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))))), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.332424772351, 1043.0442154551415, 5587536.525310395, 27756228275.548275, 146799535330585.47, 7.617768569274208e+17], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.8404483795166016, 18500.869977678572, 95340560.0, 491310696740.5714, 2531833905563940.5, 1.304707419846573e+19], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [0, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [2, 5, 1, 6, 9, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 0, 2, 3, 3, 0], [15, 16, 29, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 3, 4, 9, 5], [2, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 8, 8, 5, 3, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))))), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 8, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 0, 1, 1, 1, 2, 3, 1, 0], [6, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [20, 38, 36]], "fitness": -0.09942857176065445, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 6, 5, 1, 3], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(grad, tf.math.add(beta, beta)), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.sqrt(tf.math.negative(alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3013822294859256, 2.305549610812099, 2.313483936943162, 2.3215371742696966, 2.3396387899776947, 2.3592362461813123, 2.3827816704402527, 2.4184799684021434, 2.457771655291677, 2.5021762548420705, 2.56234240733464, 2.6282282028026933, 2.715204320988714, 2.8047622360526265, 2.8868780635871025, 3.036714478537958, 3.1291965519385236, 3.2637315157334945, 3.4295445433571166, 3.560818076810785], "accuracy": [0.09417514503002167, 0.08915598690509796, 0.09589222073554993, 0.09021265059709549, 0.09536388516426086, 0.09417514503002167, 0.09509972482919693, 0.09377889335155487, 0.09668471664190292, 0.09932637959718704, 0.09602430462837219, 0.10210011899471283, 0.09866596013307571, 0.10051512718200684, 0.10249637067317963, 0.09589222073554993, 0.10196803510189056, 0.10157178342342377, 0.09906221181154251, 0.10236428678035736], "val_loss": [1.9725594520568848, 1.9749396187918526, 1.9774351801191057, 1.9813286917550224, 1.988288266318185, 1.9984945569719588, 2.011864253452846, 2.0286636352539062, 2.0492760794503346, 2.074071475437709, 2.1034596988133023, 2.1378422464643205, 2.177617686135428, 2.223125730242048, 2.274707181113107, 2.332695416041783, 2.3973704746791293, 2.468944958278111, 2.547628334590367, 2.633589540209089], "val_accuracy": [0.024000000208616257, 0.035999998450279236, 0.06599999964237213, 0.08966666460037231, 0.09666666388511658, 0.09666666388511658, 0.0963333323597908, 0.0976666659116745, 0.09866666793823242, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.09966666996479034, 0.09966666996479034, 0.10000000149011612, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [5, 4, 0, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 3, 1, 2, 3, 3, 0], [37, 60, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 5, 9], [0, 3, 3, 1], [15, 38]], "fitness": -0.09942857176065445, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 8, 5, 2, 1, 1, 0, 1, 0, 5, 4, 1, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.pow(tf.math.negative(tf.math.pow(tf.math.add(beta, tf.math.negative(grad)), tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, tf.math.square(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.300842812032653, 2.3027989994722224, 2.306239694762365, 2.3081153153648875, 2.314701281046083, 2.319235593824496, 2.3225723841186876, 2.330953437166286, 2.338022788344688, 2.344922913630814, 2.359181176150212, 2.3709701860680035, 2.389681446081486, 2.409519697618113, 2.420182787117122, 2.458512716069119, 2.471045846023328, 2.5000959121004747, 2.5389346442501606, 2.562208105938042, 2.6083871555555103, 2.63747176700784, 2.6576181508924477, 2.7149736409520493, 2.7645977222373093, 2.808309383585059, 2.856945372276523, 2.9269516093304855, 2.9824079783553885, 3.0258576112290445, 3.0796710971859484, 3.163884852808291, 3.213260434858236], "accuracy": [0.09457138925790787, 0.09060890227556229, 0.09470347315073013, 0.08875974267721176, 0.09391097724437714, 0.09153348207473755, 0.0886276587843895, 0.08757099509239197, 0.09325055778026581, 0.09576013684272766, 0.09338264167308807, 0.09681680053472519, 0.0956280529499054, 0.09760929644107819, 0.10249637067317963, 0.09457138925790787, 0.1018359512090683, 0.09708096832036972, 0.09747721254825592, 0.1022322028875351, 0.09549596905708313, 0.0936468094587326, 0.1006472036242485, 0.1010434553027153, 0.09747721254825592, 0.0948355570435524, 0.09959053993225098, 0.09840179979801178, 0.10210011899471283, 0.09721305221319199, 0.09774138033390045, 0.10157178342342377, 0.09774138033390045], "val_loss": [1.97152921131679, 1.972694260733468, 1.9739680971418108, 1.9752237456185477, 1.976518017905099, 1.9779652867998396, 1.9799131665910994, 1.9827090672084264, 1.98641266141619, 1.9910412515912737, 1.996562889644078, 2.0029634066990445, 2.010267802647182, 2.0185228756495883, 2.027787685394287, 2.0381208828517368, 2.0495741026742116, 2.062204020363944, 2.076070717402867, 2.091238226209368, 2.107764720916748, 2.1257099424089705, 2.145134993961879, 2.1660984584263394, 2.1886465890066966, 2.212829521724156, 2.238699504307338, 2.2663072177342007, 2.295705114092146, 2.32693236214774, 2.3600337164742604, 2.395047732761928, 2.431999819619315], "val_accuracy": [0.026333333924412727, 0.02266666665673256, 0.0273333340883255, 0.03933333232998848, 0.05433333292603493, 0.070333331823349, 0.08399999886751175, 0.09166666865348816, 0.09433333575725555, 0.0963333323597908, 0.09666666388511658, 0.09666666388511658, 0.09600000083446503, 0.09700000286102295, 0.0976666659116745, 0.09833333641290665, 0.09866666793823242, 0.0989999994635582, 0.0989999994635582, 0.09933333098888397, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.10000000149011612, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 5, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 3, 0, 1, 2, 3, 3, 0], [67, 49, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 3, 3, 9], [0, 3, 3, 1], [41, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 0, 1, 1, 0, 1, 0, 8, 5, 3, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.square(tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad))), grad)), tf.math.negative(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), sigma), sigma), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3003879828837883, 2.30088647909924, 2.3017271936782175, 2.3015174776917955, 2.3029021508878547, 2.3025949090431865], "accuracy": [0.09576013684272766, 0.0936468094587326, 0.09298639744520187, 0.09087307006120682, 0.09721305221319199, 0.09126931428909302], "val_loss": [1.97059965133667, 1.9706101417541504, 1.970620972769601, 1.9706333024161202, 1.9706503323146276, 1.9706640924726213], "val_accuracy": [0.039000000804662704, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]