[{"genotype": [[0], [1, 0, 0, 1, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0], [7, 6, 4, 9], [0, 1, 2], [44, 57], [0, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6], [3], [1, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 0, 1, 1], [0, 3], [3, 0], [45]], "fitness": -0.7631428837776184, "mapping_values": [1, 7, 7, 4, 3, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.134524095989001, 1.7552697782456017, 1.264775730426427, 1.0313757187371335, 0.9062743027133713, 0.8647799176342216, 0.8427046101799636, 0.7496216787543705, 0.7368718840584322, 0.7090405386200576, 0.7155826746386119, 0.6536571949921138, 0.6796583064543085, 0.6113785507577899, 0.6074081041463031], "accuracy": [0.308149516582489, 0.4361378848552704, 0.5536917448043823, 0.6382247805595398, 0.6723021864891052, 0.6787742972373962, 0.6818121671676636, 0.7235503792762756, 0.7150970697402954, 0.7334566116333008, 0.7329282760620117, 0.752740740776062, 0.735569953918457, 0.7695152759552002, 0.7692511081695557], "val_loss": [1.4470749241965157, 1.2063189915248327, 0.7684331110545567, 0.7835931948253086, 0.6551550456455776, 0.6884003537041801, 0.5856436491012573, 0.5872283492769513, 0.543160080909729, 0.532370924949646, 0.5197452817644391, 0.5518004723957607, 0.5264273881912231, 0.49970056329454693, 0.4763354744229998], "val_accuracy": [0.5559999942779541, 0.5506666898727417, 0.6896666884422302, 0.6503333449363708, 0.7103333473205566, 0.6759999990463257, 0.7473333477973938, 0.721666693687439, 0.7553333044052124, 0.7699999809265137, 0.765333354473114, 0.7459999918937683, 0.7486666440963745, 0.7599999904632568, 0.7693333625793457]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [7, 4, 3, 9, 5, 3], [0, 1, 1, 0], [18, 57, 61], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [1, 0, 0, 1, 1], [4, 6, 6], [3], [58, 70, 33, 54], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 0, 1, 1], [0, 3], [0, 3], [45]], "fitness": -0.7631428837776184, "mapping_values": [1, 10, 10, 6, 4, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.square(tf.math.multiply(alpha, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.134524095989001, 1.7552697782456017, 1.264775730426427, 1.0313757187371335, 0.9062743027133713, 0.8647799176342216, 0.8427046101799636, 0.7496216787543705, 0.7368718840584322, 0.7090405386200576, 0.7155826746386119, 0.6536571949921138, 0.6796583064543085, 0.6113785507577899, 0.6074081041463031], "accuracy": [0.308149516582489, 0.4361378848552704, 0.5536917448043823, 0.6382247805595398, 0.6723021864891052, 0.6787742972373962, 0.6818121671676636, 0.7235503792762756, 0.7150970697402954, 0.7334566116333008, 0.7329282760620117, 0.752740740776062, 0.735569953918457, 0.7695152759552002, 0.7692511081695557], "val_loss": [1.4470749241965157, 1.2063189915248327, 0.7684331110545567, 0.7835931948253086, 0.6551550456455776, 0.6884003537041801, 0.5856436491012573, 0.5872283492769513, 0.543160080909729, 0.532370924949646, 0.5197452817644391, 0.5518004723957607, 0.5264273881912231, 0.49970056329454693, 0.4763354744229998], "val_accuracy": [0.5559999942779541, 0.5506666898727417, 0.6896666884422302, 0.6503333449363708, 0.7103333473205566, 0.6759999990463257, 0.7473333477973938, 0.721666693687439, 0.7553333044052124, 0.7699999809265137, 0.765333354473114, 0.7459999918937683, 0.7486666440963745, 0.7599999904632568, 0.7693333625793457]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [7, 6, 4, 9, 2, 7, 9], [2, 1, 2, 0], [44, 57, 55], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6, 4, 3, 5, 7, 2, 9, 5, 0, 9], [3], [1, 70, 33, 54], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 0, 1, 1], [0, 3], [3, 0], [45]], "fitness": -0.7631428837776184, "mapping_values": [1, 11, 11, 7, 4, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))))), grad)), tf.math.add(alpha, tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.134524095989001, 1.7552697782456017, 1.264775730426427, 1.0313757187371335, 0.9062743027133713, 0.8647799176342216, 0.8427046101799636, 0.7496216787543705, 0.7368718840584322, 0.7090405386200576, 0.7155826746386119, 0.6536571949921138, 0.6796583064543085, 0.6113785507577899, 0.6074081041463031], "accuracy": [0.308149516582489, 0.4361378848552704, 0.5536917448043823, 0.6382247805595398, 0.6723021864891052, 0.6787742972373962, 0.6818121671676636, 0.7235503792762756, 0.7150970697402954, 0.7334566116333008, 0.7329282760620117, 0.752740740776062, 0.735569953918457, 0.7695152759552002, 0.7692511081695557], "val_loss": [1.4470749241965157, 1.2063189915248327, 0.7684331110545567, 0.7835931948253086, 0.6551550456455776, 0.6884003537041801, 0.5856436491012573, 0.5872283492769513, 0.543160080909729, 0.532370924949646, 0.5197452817644391, 0.5518004723957607, 0.5264273881912231, 0.49970056329454693, 0.4763354744229998], "val_accuracy": [0.5559999942779541, 0.5506666898727417, 0.6896666884422302, 0.6503333449363708, 0.7103333473205566, 0.6759999990463257, 0.7473333477973938, 0.721666693687439, 0.7553333044052124, 0.7699999809265137, 0.765333354473114, 0.7459999918937683, 0.7486666440963745, 0.7599999904632568, 0.7693333625793457]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 0, 1, 1], [7, 6, 4, 9], [3, 2, 2, 1], [44, 57], [1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0], [4, 6, 6], [3, 3, 3, 1, 0, 1], [1, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 1, 1, 1], [0, 3], [3, 0], [45]], "fitness": -0.4114285707473755, "mapping_values": [1, 7, 7, 3, 4, 0, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.divide_no_nan(grad, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(grad, grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.1910622400803543, 2.768211624263662, 2.3184362053320062, 2.275916080118375, 2.3038452104916898, 2.303128450648376, 2.303297791829309], "accuracy": [0.22044643759727478, 0.11979923397302628, 0.1450270712375641, 0.1830669641494751, 0.09972262382507324, 0.09338264167308807, 0.09377889335155487], "val_loss": [4.3239496776035855, 1.7791123390197754, 1.9696463176182337, 1.9753942489624023, 1.9740984780447823, 1.9737306322370256, 1.9737039293561662], "val_accuracy": [0.10233332961797714, 0.3880000114440918, 0.1146666631102562, 0.09966666996479034, 0.09733333438634872, 0.09966666996479034, 0.10400000214576721]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [3, 6, 4, 4, 8, 2, 5, 4, 9, 4, 1], [0, 1, 0, 3, 1, 2, 1, 3], [44, 57, 18], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0], [2, 0, 0, 2, 5, 7, 0, 0, 9, 4, 5, 9], [3, 2, 0, 0], [1, 91, 89], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 1, 1, 1], [0, 3], [3, 0], [45]], "fitness": -0.4114285707473755, "mapping_values": [1, 19, 19, 11, 8, 3, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.math.square(tf.math.add(alpha, tf.math.pow(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))))))))), tf.math.pow(tf.math.subtract(grad, tf.math.add(alpha, alpha)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.negative(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.1910622400803543, 2.768211624263662, 2.3184362053320062, 2.275916080118375, 2.3038452104916898, 2.303128450648376, 2.303297791829309], "accuracy": [0.22044643759727478, 0.11979923397302628, 0.1450270712375641, 0.1830669641494751, 0.09972262382507324, 0.09338264167308807, 0.09377889335155487], "val_loss": [4.3239496776035855, 1.7791123390197754, 1.9696463176182337, 1.9753942489624023, 1.9740984780447823, 1.9737306322370256, 1.9737039293561662], "val_accuracy": [0.10233332961797714, 0.3880000114440918, 0.1146666631102562, 0.09966666996479034, 0.09733333438634872, 0.09966666996479034, 0.10400000214576721]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 0, 1, 1], [3, 6, 4, 9], [0, 1, 2, 3], [44, 57], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1], [2, 0, 0, 2, 5, 7, 0, 0, 9, 4, 5, 9], [3, 2, 0, 0], [1, 91, 89], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 1, 1, 1], [0, 3], [3, 0], [45]], "fitness": -0.4114285707473755, "mapping_values": [1, 7, 7, 3, 4, 1, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.negative(grad))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.1910622400803543, 2.768211624263662, 2.3184362053320062, 2.275916080118375, 2.3038452104916898, 2.303128450648376, 2.303297791829309], "accuracy": [0.22044643759727478, 0.11979923397302628, 0.1450270712375641, 0.1830669641494751, 0.09972262382507324, 0.09338264167308807, 0.09377889335155487], "val_loss": [4.3239496776035855, 1.7791123390197754, 1.9696463176182337, 1.9753942489624023, 1.9740984780447823, 1.9737306322370256, 1.9737039293561662], "val_accuracy": [0.10233332961797714, 0.3880000114440918, 0.1146666631102562, 0.09966666996479034, 0.09733333438634872, 0.09966666996479034, 0.10400000214576721]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 1, 0], [7, 6, 0, 9], [0, 1, 2], [44, 57], [1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [4, 6, 6, 4, 0, 4, 7, 6, 3, 9, 4, 4, 2, 2, 4, 2, 8, 2], [3, 2, 0, 2, 2, 4, 0, 2, 1, 0, 1, 3, 4, 4, 2], [1, 70, 65, 49], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [3], [], [0, 0, 1, 0, 0, 1], [0, 7, 5, 0], [3, 0], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 33, 33, 18, 15, 4, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.add(beta, beta)), tf.math.pow(tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta)))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.math.pow(beta, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.add(beta, grad))), grad), tf.math.add(beta, beta))))))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(sigma, tf.math.square(tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [710637.7367454454, 13475133.318451988, 62168169.16444327, 173169585.40958923, 363925279.657641, 676051996.0480782], "accuracy": [0.10051512718200684, 0.09206181764602661, 0.10236428678035736, 0.1002509593963623, 0.09972262382507324, 0.10196803510189056], "val_loss": [2670753.0, 21285450.285714287, 71749945.14285715, 169969577.14285713, 331850934.85714287, 573298413.7142857], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1], [1, 1, 0, 1, 0, 1, 0], [7, 6, 4, 9], [0, 1, 2], [44, 57], [0, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6], [3], [1, 70], [0, 0, 0, 1, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 1], [3, 3, 0, 2, 9], [5, 4], [7], [0, 0, 0, 1, 1, 1], [0, 3, 2], [3, 0, 1], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 8, 7, 5, 2, 1, 6, 3, 3, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), tf.math.add(sigma, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), alpha))", "other_info": {"loss": [2.302956921659708, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1], [3, 6, 4, 0, 4, 1, 8, 8], [3, 1, 0, 3, 1, 1], [44, 81], [0, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6], [3, 2, 0, 0], [1, 91, 89], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [0, 3, 1, 3, 7, 3, 5, 9, 6, 7, 5, 1], [2, 3, 1, 2, 3, 0, 0, 0], [45, 31, 72, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 8, 6, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 20, 12, 8, 4], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))))))), alpha)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.math.subtract(tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.square(sigma), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(alpha, tf.math.add(tf.math.square(tf.math.subtract(beta, sigma)), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [142.73180021311958, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.04847444221377373, 0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2585.20263671875, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0], [7, 6, 4, 9], [0, 1, 2], [44, 77], [0, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6], [3], [1, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [1, 0, 1, 1], [0, 3], [1, 1], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 0, 1, 1], [7, 4, 3, 9], [0, 1, 2], [44, 57], [1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1], [3, 1, 6, 8, 3, 3, 3, 3, 7, 0, 2, 2, 1, 3, 3, 7], [3, 0, 0, 0, 5, 2, 5, 4, 3, 0, 4, 3, 5], [58, 70, 33, 54], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [1], [], [0, 1, 1, 1], [2, 3], [3, 0], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 2, 8, 8, 4, 4, 3, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0], [0, 1, 0, 1, 0, 1, 0], [7, 6, 3, 9], [0, 1, 2], [44, 57], [1, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6], [3], [1, 70], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 0, 1, 0, 0, 0], [3, 3, 4, 5, 1], [5], [], [0, 0, 0, 1, 0, 0, 1], [0, 3, 1, 5, 9], [3, 0], [45, 20]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 2, 1, 1, 0, 1, 0, 10, 6, 5, 1, 0, 7, 5, 2, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.square(sigma)), tf.math.add(sigma, tf.math.subtract(sigma, sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.subtract(sigma, tf.math.square(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302189390814583, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 0, 1, 0], [3, 3, 4, 9], [2, 1, 2], [44, 38], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0], [0, 0, 0, 2, 5, 7, 0, 0, 9, 3, 5, 9], [2, 3, 0, 0], [96, 91, 89], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 0, 1, 1], [8, 3], [3, 0], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 10, 10, 7, 3, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.multiply(alpha, tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(beta, grad)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [7, 6, 8, 9, 5], [0, 1, 2], [74, 57], [0, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6], [0, 5, 3, 0, 5, 3, 3, 0, 1, 5, 0], [22, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [1, 0, 1, 1], [8, 3], [3, 0], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 4, 2, 2, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.sqrt(alpha), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07621186226606369, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [7, 4, 3, 9, 7, 7, 6, 8], [0, 1, 2, 3, 0, 3], [81, 42, 48], [1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1], [3, 1, 6, 8, 4, 2, 3, 3, 7, 0, 2, 2, 1, 3, 3, 7], [3, 2, 4, 3, 3, 3, 1, 1, 1, 0, 3, 2, 3, 4], [52, 70, 33, 54], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 0, 1, 1], [0, 3], [3, 0], [45]], "fitness": -0.03999999910593033, "mapping_values": [1, 14, 14, 8, 6, 3, 29, 29, 15, 14, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.sqrt(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), grad))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.divide_no_nan(grad, tf.math.add(beta, beta)), tf.math.add(beta, tf.math.sqrt(grad)))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(alpha, tf.math.add(beta, alpha))))), tf.math.add(beta, tf.math.multiply(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))), grad))))), beta), tf.math.add(beta, grad))))), grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303061337408656, 2.301783439080477, 2.302600294040604, 2.3015059477554543, 2.301808979029133, 2.302767508348942], "accuracy": [0.08875974267721176, 0.0874389111995697, 0.09087307006120682, 0.09668471664190292, 0.09206181764602661, 0.09087307006120682], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 1], [7, 1, 4, 9, 0], [2, 1, 2], [86, 57], [1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1], [3, 8, 6, 8, 3, 0, 3, 3, 7, 0, 2, 2, 1, 3, 3, 7], [3, 2, 4, 2, 5, 3, 1, 1, 1, 0, 3, 5, 1, 4], [58, 70, 33, 54], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 1, 1], [0, 3], [3, 0], [45]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.sqrt(grad)), beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.303061337408656, 2.301783439080477, 2.302600294040604, 2.3015059477554543, 2.301808979029133, 2.302767508348942], "accuracy": [0.08875974267721176, 0.0874389111995697, 0.09087307006120682, 0.09668471664190292, 0.09206181764602661, 0.09087307006120682], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 1, 1, 1], [7, 6, 4, 9, 0], [2, 2, 2, 1], [44, 57], [1, 0, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0], [4, 6, 6], [3, 3, 3, 1, 0, 1], [28, 70, 83], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 1, 1, 1], [0, 3], [3, 0], [45]], "fitness": -0.03999999910593033, "mapping_values": [1, 7, 7, 3, 4, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(grad, tf.math.add(alpha, grad)), grad)), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, grad), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.303061337408656, 2.301783439080477, 2.302600294040604, 2.3015059477554543, 2.301808979029133, 2.302767508348942], "accuracy": [0.08875974267721176, 0.0874389111995697, 0.09087307006120682, 0.09668471664190292, 0.09206181764602661, 0.09087307006120682], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [1, 0, 0, 1, 0, 1, 1], [7, 2, 1, 9], [0, 0, 2], [44, 57], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1], [3, 1, 6, 8, 4, 3, 3, 3, 2, 0, 2, 2, 1, 8, 3, 7], [3, 2, 4, 2, 2, 3, 1, 1, 1, 0, 3, 5, 1, 4], [58, 70, 33, 54], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [3], [], [0, 0, 1, 1], [0, 3], [3, 1], [45]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.subtract(beta, tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, alpha))", "other_info": {"loss": [2.303061337408656, 2.301783439080477, 2.302600294040604, 2.3015059477554543, 2.301808979029133, 2.302767508348942], "accuracy": [0.08875974267721176, 0.0874389111995697, 0.09087307006120682, 0.09668471664190292, 0.09206181764602661, 0.09087307006120682], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [7, 6, 4, 9, 1, 8, 8], [0, 1, 2, 1], [86, 57], [1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0], [4, 6, 6], [3, 3, 3, 1, 0, 1], [28, 70, 83], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0], [3, 3, 5], [5], [], [0, 1, 1, 1], [0, 3], [3, 0], [45]], "fitness": -0.03999999910593033, "mapping_values": [1, 11, 11, 7, 4, 2, 1, 1, 0, 1, 0, 6, 4, 3, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)))), grad)), tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.square(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.303061337408656, 2.301783439080477, 2.302600294040604, 2.3015059477554543, 2.301808979029133, 2.302767508348942], "accuracy": [0.08875974267721176, 0.0874389111995697, 0.09087307006120682, 0.09668471664190292, 0.09206181764602661, 0.09087307006120682], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [7, 4, 3, 1, 2, 9], [0, 1, 2, 3, 0], [44, 57, 87], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0], [0, 0, 0, 2, 5, 7, 0, 0, 9, 4, 5, 9], [3, 1, 1, 0, 3, 4], [1, 91, 89], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 0, 0, 1, 1], [0, 3, 5], [3, 0], [45]], "fitness": -0.03942857310175896, "mapping_values": [1, 11, 11, 6, 5, 3, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))))), grad)), tf.math.add(alpha, tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.square(sigma), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303182346410503, 2.302258414646512, 2.3034531925931, 2.3026661409630735, 2.30353609867824, 2.3050913103756385], "accuracy": [0.08902391046285629, 0.08532558381557465, 0.08955223858356476, 0.0956280529499054, 0.09008057415485382, 0.08730682730674744], "val_loss": [1.97085360118321, 1.9711637496948242, 1.9714696747916085, 1.9717888832092285, 1.9722273690359933, 1.9727248464311873], "val_accuracy": [0.039000000804662704, 0.03733333200216293, 0.035999998450279236, 0.03233333304524422, 0.029666665941476822, 0.029666665941476822]}}]