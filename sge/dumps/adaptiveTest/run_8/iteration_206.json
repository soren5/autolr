[{"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [8, 57], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 0, 1, 3, 2], [90, 47, 50]], "fitness": -0.8165714144706726, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 6, 5, 1, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.1519810192305666, 1.9305783799295775, 1.374721539270892, 1.0717334730388026, 0.9203609029347036, 0.8123779531483165, 0.7740783929557156, 0.7291521686746176, 0.7327449930862051, 0.6554858496853263, 0.6400464761920058, 0.623727556508467, 0.5997958562046923, 0.5919424320775694, 0.5738124463536468, 0.5590623783995966, 0.5421457671061042, 0.5180521851297005, 0.5270096297670963, 0.5250453252707963, 0.5013185007193337, 0.49958201392987117, 0.4688304948721737, 0.47283402789128753, 0.46617125251651864, 0.47709551057984345, 0.4684760661653288, 0.43201850035234357, 0.43426292252940524, 0.4405540200177909, 0.42557664295670034, 0.41859219899235495], "accuracy": [0.2793554365634918, 0.42108044028282166, 0.5243692994117737, 0.6085061430931091, 0.6625280380249023, 0.6884163022041321, 0.7091533541679382, 0.7218332886695862, 0.7195879220962524, 0.7458723783493042, 0.7588165402412415, 0.7573636174201965, 0.7745344042778015, 0.774798572063446, 0.7757231593132019, 0.7890635132789612, 0.7951393723487854, 0.8049134612083435, 0.8029322624206543, 0.8020076751708984, 0.8120459914207458, 0.8103289008140564, 0.8259146809577942, 0.8231409192085266, 0.8285563588142395, 0.8216879963874817, 0.822348415851593, 0.8356888294219971, 0.8407079577445984, 0.8327829837799072, 0.8393871188163757, 0.8417646288871765], "val_loss": [1.835285254887172, 1.0706960473741804, 1.2390086991446358, 0.7116186107907977, 0.6379081862313407, 0.6518018075398037, 0.586109961782183, 0.521267192704337, 0.5344999517713275, 0.540205580847604, 0.5115724802017212, 0.4768963371004377, 0.48029494285583496, 0.4708093915666853, 0.4439820221492222, 0.47105698926108225, 0.46554924760546, 0.46061200754983084, 0.4109909108706883, 0.42837822437286377, 0.428049419607435, 0.4095070276941572, 0.3783065506390163, 0.40188030685697285, 0.40376618078776766, 0.3943178824016026, 0.36543309688568115, 0.382567150252206, 0.3710027847971235, 0.37323880195617676, 0.39688476494380404, 0.36810485805783955], "val_accuracy": [0.5056666731834412, 0.5879999995231628, 0.5223333239555359, 0.6893333196640015, 0.703000009059906, 0.6949999928474426, 0.7223333120346069, 0.7730000019073486, 0.7409999966621399, 0.7630000114440918, 0.765999972820282, 0.7886666655540466, 0.7743333578109741, 0.7883333563804626, 0.8083333373069763, 0.7883333563804626, 0.7853333353996277, 0.7863333225250244, 0.8193333148956299, 0.8223333358764648, 0.8003333210945129, 0.8130000233650208, 0.8396666646003723, 0.8230000138282776, 0.8159999847412109, 0.8263333439826965, 0.8463333249092102, 0.8433333039283752, 0.8389999866485596, 0.8376666903495789, 0.8236666917800903, 0.843666672706604]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [8, 6, 5, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1], [8, 5, 2, 3, 0, 6, 2, 2, 2, 1, 2, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 65, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [45, 47, 50]], "fitness": -0.7574285864830017, "mapping_values": [1, 5, 5, 4, 1, 1, 14, 14, 8, 6, 2, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(grad), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, tf.math.negative(alpha)), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1081640475052317, 1.7642312309194346, 1.4004525585165744, 1.0016776013446758, 0.9605292481296586, 0.8925621744002712, 0.836501053335046, 0.7627393248106085, 0.7428419992136776, 0.6858533662717419, 0.7030839649929645, 0.6708782176142591], "accuracy": [0.3061682879924774, 0.45608243346214294, 0.5344076156616211, 0.6453573107719421, 0.6363756656646729, 0.6725663542747498, 0.6864351034164429, 0.7059833407402039, 0.7191916704177856, 0.741909921169281, 0.7346453666687012, 0.7412495017051697], "val_loss": [1.5698772839137487, 1.402341297694615, 0.820107272693089, 0.9115893840789795, 0.7957495110375541, 0.5985250983919416, 0.5565074682235718, 0.5958283969334194, 0.5815506832940238, 0.5923453228814262, 0.5265460014343262, 0.5333126102175031], "val_accuracy": [0.40933331847190857, 0.5166666507720947, 0.6916666626930237, 0.5756666660308838, 0.6786666512489319, 0.7286666631698608, 0.7603333592414856, 0.7210000157356262, 0.7263333201408386, 0.7149999737739563, 0.7486666440963745, 0.7566666603088379]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [72, 57], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1], [8, 5, 3, 4, 0, 6, 5, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 1, 3, 2, 3, 3, 0], [18, 16, 95, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [45, 47, 50]], "fitness": -0.7574285864830017, "mapping_values": [1, 5, 5, 4, 1, 2, 19, 19, 13, 6, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.negative(alpha), tf.math.add(beta, tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, tf.math.square(grad))), tf.math.add(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.pow(tf.math.add(beta, alpha), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.sqrt(grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1081640475052317, 1.7642312309194346, 1.4004525585165744, 1.0016776013446758, 0.9605292481296586, 0.8925621744002712, 0.836501053335046, 0.7627393248106085, 0.7428419992136776, 0.6858533662717419, 0.7030839649929645, 0.6708782176142591], "accuracy": [0.3061682879924774, 0.45608243346214294, 0.5344076156616211, 0.6453573107719421, 0.6363756656646729, 0.6725663542747498, 0.6864351034164429, 0.7059833407402039, 0.7191916704177856, 0.741909921169281, 0.7346453666687012, 0.7412495017051697], "val_loss": [1.5698772839137487, 1.402341297694615, 0.820107272693089, 0.9115893840789795, 0.7957495110375541, 0.5985250983919416, 0.5565074682235718, 0.5958283969334194, 0.5815506832940238, 0.5923453228814262, 0.5265460014343262, 0.5333126102175031], "val_accuracy": [0.40933331847190857, 0.5166666507720947, 0.6916666626930237, 0.5756666660308838, 0.6786666512489319, 0.7286666631698608, 0.7603333592414856, 0.7210000157356262, 0.7263333201408386, 0.7149999737739563, 0.7486666440963745, 0.7566666603088379]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 72, 95, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0], [0, 2, 9, 3, 9], [3, 1, 0, 1, 3, 2], [90, 47, 50]], "fitness": -0.23600000143051147, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.5301572700233947, 2.445438437032945, 2.3109240926503976, 2.3072203548435426, 2.30356842450273, 2.303120124892725], "accuracy": [0.2086910605430603, 0.14476291835308075, 0.13247919082641602, 0.09800554811954498, 0.1002509593963623, 0.1006472036242485], "val_loss": [1.8283555167061942, 1.9744586263384138, 1.9826380184718542, 1.9744487489972795, 1.9739229338509696, 1.973289625985282], "val_accuracy": [0.1836666613817215, 0.0989999994635582, 0.09833333641290665, 0.10000000149011612, 0.09700000286102295, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 1, 0, 2], [2, 0, 0, 3, 1, 0], [5, 57, 13], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [8, 8, 3, 2, 0, 6, 3, 8, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 72, 95, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [90, 47, 50]], "fitness": -0.23600000143051147, "mapping_values": [1, 10, 10, 6, 4, 3, 19, 19, 12, 7, 3, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), grad)), tf.math.subtract(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.add(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(beta, alpha)), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(grad), tf.math.add(beta, tf.math.add(tf.math.subtract(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), tf.math.pow(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), grad)))), tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))))), beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.5301572700233947, 2.445438437032945, 2.3109240926503976, 2.3072203548435426, 2.30356842450273, 2.303120124892725], "accuracy": [0.2086910605430603, 0.14476291835308075, 0.13247919082641602, 0.09800554811954498, 0.1002509593963623, 0.1006472036242485], "val_loss": [1.8283555167061942, 1.9744586263384138, 1.9826380184718542, 1.9744487489972795, 1.9739229338509696, 1.973289625985282], "val_accuracy": [0.1836666613817215, 0.0989999994635582, 0.09833333641290665, 0.10000000149011612, 0.09700000286102295, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [0, 0, 0, 3, 1, 0], [8, 57, 24], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 72, 95, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 0, 1, 3, 2], [90, 47, 50]], "fitness": -0.23600000143051147, "mapping_values": [1, 5, 5, 4, 1, 3, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.5301572700233947, 2.445438437032945, 2.3109240926503976, 2.3072203548435426, 2.30356842450273, 2.303120124892725], "accuracy": [0.2086910605430603, 0.14476291835308075, 0.13247919082641602, 0.09800554811954498, 0.1002509593963623, 0.1006472036242485], "val_loss": [1.8283555167061942, 1.9744586263384138, 1.9826380184718542, 1.9744487489972795, 1.9739229338509696, 1.973289625985282], "val_accuracy": [0.1836666613817215, 0.0989999994635582, 0.09833333641290665, 0.10000000149011612, 0.09700000286102295, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [8, 57], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [1, 1, 0, 1, 3, 2], [90, 47, 50]], "fitness": -0.11428571492433548, "mapping_values": [1, 5, 5, 4, 1, 2, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 6, 5, 1, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [337773740.42249244, 393241539.1823355, 370368553.4218155, 1112481540.348982, 1356860891.016021, 670106181.5529464, 399321932.8494752, 296234075.922884, 267277008.4304909, 202132328.80233413, 94736427.85602959, 76603922.80649848, 61257018.12217673, 60988865.32964602, 45864724.35001981, 46631842.26753401, 42188224.01043455, 47879467.1557258], "accuracy": [0.06934354454278946, 0.08492933213710785, 0.09430722147226334, 0.09008057415485382, 0.0944393053650856, 0.08519349992275238, 0.09311848133802414, 0.09602430462837219, 0.10460969805717468, 0.09391097724437714, 0.10619468986988068, 0.10593052208423615, 0.10672302544116974, 0.10315678268671036, 0.10196803510189056, 0.10527011007070541, 0.10540219396352768, 0.10157178342342377], "val_loss": [1051.613560267857, 698.3868931361607, 3439.9056222098216, 180.50673348563058, 247.49686976841517, 321.4180385044643, 561.642844063895, 852.6941201346261, 1017.2594190325055, 276250.0625, 741902.4464285715, 590469.7321428572, 703280.5535714285, 929920.1071428572, 1406524.1785714286, 981852.1785714285, 994327.9285714285, 1059652.392857143], "val_accuracy": [0.09566666930913925, 0.10066666454076767, 0.09966666996479034, 0.09966666996479034, 0.10366666316986084, 0.10333333164453506, 0.10400000214576721, 0.10466666519641876, 0.10366666316986084, 0.10766666382551193, 0.10533333569765091, 0.10566666722297668, 0.11866666376590729, 0.11766666918992996, 0.10100000351667404, 0.11633333563804626, 0.11599999666213989, 0.11533333361148834]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [0, 0, 0, 3, 1, 0], [66, 57], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1], [5, 5, 2, 5, 0, 6, 6, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [6, 3], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0], [0, 2, 9, 3, 9], [3, 1, 0, 1, 3, 2], [90, 27, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [23499359.261091176, 2.3134674112070286, 2.305333214822683, 2.303475874069581, 2.3031856263271178, 2.302997232632882], "accuracy": [0.09377889335155487, 0.09787346422672272, 0.09734513610601425, 0.09430722147226334, 0.09430722147226334, 0.09615638852119446], "val_loss": [1.9868387494768416, 1.9765007155282157, 1.9740698678152901, 1.9738439151218958, 1.9737036568777901, 1.9737683023725237], "val_accuracy": [0.10400000214576721, 0.09966666996479034, 0.09733333438634872, 0.09700000286102295, 0.09700000286102295, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [8, 57], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [8, 5, 3, 4, 0, 6, 5, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [5, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 95, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [2, 3], [], [1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 3, 8, 3, 9], [0, 1, 0, 1, 3, 2], [97, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302312709683393, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 1], [1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [9, 6, 5, 9, 0], [0, 0, 0, 3, 1, 0], [66, 57], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1], [8, 5, 2, 1, 0, 6, 0, 2, 2, 1, 4, 9, 4, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 13, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [2, 3], [], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 2, 9, 3, 9], [3, 1, 3, 1], [45, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 17, 17, 10, 7, 2, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.negative(tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.negative(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))))), tf.math.add(tf.math.add(grad, tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(grad, beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [5, 6, 9, 0, 0], [2, 0, 0, 3, 1, 0], [5, 34], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [8, 5, 3, 4, 0, 6, 3, 5, 0, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 2, 3, 2, 3, 3, 0], [86, 40, 99, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [2, 3], [], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0], [4, 3, 9, 3, 9], [3, 1, 3, 1], [45, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 19, 19, 13, 6, 2, 5, 4, 2, 2, 0, 3, 1, 2, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.negative(alpha))), tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad))), beta)), tf.math.add(beta, tf.math.sqrt(grad)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(sigma, alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [8, 6, 5, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [8, 5, 3, 4, 0, 6, 5, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 0, 2, 3, 3, 0], [18, 16, 29, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 6, 3, 9, 1, 6], [3, 1, 3, 1, 0], [45, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 1, 19, 19, 13, 6, 4, 1, 1, 0, 1, 0, 12, 7, 5, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(grad), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.negative(alpha), tf.math.divide_no_nan(tf.math.square(tf.math.square(grad)), tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), tf.math.pow(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))))), tf.math.sqrt(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.divide_no_nan(tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), sigma), alpha), tf.math.subtract(sigma, tf.math.divide_no_nan(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08611807972192764, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [8, 57], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 7, 3, 9], [3, 1, 0, 1, 3, 2], [90, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 8, 5, 3, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.math.multiply(sigma, alpha), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 6, 5, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1], [4, 5, 2, 1, 0, 6, 2, 2, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 0, 0, 3, 3, 3, 2, 3, 3, 0], [18, 16, 65, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [45, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 4, 2, 2, 24, 24, 14, 10, 4, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(grad), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(alpha, tf.math.add(tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad))))))), tf.math.add(beta, beta)))), grad), tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)))))), tf.math.sqrt(tf.math.subtract(grad, tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.11808215826749802, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [8, 2, 3, 4, 0, 6, 5, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [1, 3], [], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [1, 1, 0, 1, 3, 2], [90, 47, 50]], "fitness": -0.09542857110500336, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [3.298698897689892, 2.547258740796578, 2.324479159205392, 2.2771706069071596, 2.3491239024978414, 2.3302090320100937], "accuracy": [0.19402985274791718, 0.10328886657953262, 0.11345925182104111, 0.14093250036239624, 0.1002509593963623, 0.10447761416435242], "val_loss": [2.4250050272260393, 2.0044851984296526, 1.8876808030264718, 2.0066884585789273, 1.977121353149414, 1.9785528182983398], "val_accuracy": [0.18133333325386047, 0.10000000149011612, 0.18133333325386047, 0.10700000077486038, 0.10366666316986084, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 2, 3, 9], [3, 1, 3, 1], [45, 99, 50]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 5, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3015961771108344, 2.3017698278075684, 2.302564012376057, 2.302609608646051, 2.3019825480696294, 2.3008655632617625], "accuracy": [0.09615638852119446, 0.09285431355237961, 0.09087307006120682, 0.08942015469074249, 0.0882314071059227, 0.09153348207473755], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 8, 9, 9, 0], [3, 0, 0, 3, 1, 0], [5, 57], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [8, 5, 3, 4, 0, 6, 5, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 95, 84, 1, 78], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [45, 47, 50]], "fitness": -0.03999999910593033, "mapping_values": [1, 3, 3, 3, 0, 1, 1, 1, 0, 1, 0, 6, 4, 3, 1, 0, 4, 2, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, alpha))", "other_info": {"loss": [2.3015961771108344, 2.3017698278075684, 2.302564012376057, 2.302609608646051, 2.3019825480696294, 2.3008655632617625], "accuracy": [0.09615638852119446, 0.09285431355237961, 0.09087307006120682, 0.08942015469074249, 0.0882314071059227, 0.09153348207473755], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [8, 57], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [3, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 0, 1, 3, 2], [90, 47, 50]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 6, 5, 1, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.3015961771108344, 2.3017698278075684, 2.302564012376057, 2.302609608646051, 2.3019825480696294, 2.3008655632617625], "accuracy": [0.09615638852119446, 0.09285431355237961, 0.09087307006120682, 0.08942015469074249, 0.0882314071059227, 0.09153348207473755], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [8, 6, 5, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1], [8, 2, 1, 1, 0, 6, 2, 2, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 3, 2, 2, 3, 3, 0], [18, 16, 65, 84, 1, 78], [0, 0, 0, 1, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [3, 3, 0, 4], [4, 3], [], [1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 0, 1, 3, 2], [90, 47, 50]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 27, 27, 17, 10, 4, 8, 6, 4, 2, 0, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.negative(alpha)), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(tf.math.add(tf.math.add(tf.math.subtract(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), tf.math.pow(tf.math.add(beta, grad), beta)), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.subtract(tf.math.sqrt(beta), tf.math.add(beta, grad)), grad)))))))), tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, sigma))))))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3015961771108344, 2.3017698278075684, 2.302564012376057, 2.302609608646051, 2.3019825480696294, 2.3008655632617625], "accuracy": [0.09615638852119446, 0.09285431355237961, 0.09087307006120682, 0.08942015469074249, 0.0882314071059227, 0.09153348207473755], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [8, 57], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [7, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [61, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [6, 3], [], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 0, 1, 3, 2], [90, 47, 50]], "fitness": -0.03999999910593033, "mapping_values": [1, 5, 5, 4, 1, 2, 19, 19, 12, 7, 4, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.negative(alpha), tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(tf.math.subtract(tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), tf.math.pow(tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)), grad))))), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))))), beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3015961771108344, 2.3017698278075684, 2.302564012376057, 2.302609608646051, 2.3019825480696294, 2.3008655632617625], "accuracy": [0.09615638852119446, 0.09285431355237961, 0.09087307006120682, 0.08942015469074249, 0.0882314071059227, 0.09153348207473755], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]