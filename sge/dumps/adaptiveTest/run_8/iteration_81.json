[{"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.7702857255935669, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 6, 6, 2, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(grad, tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta))), tf.math.add(beta, tf.math.pow(tf.math.negative(grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.237705545528706, 1.8685977010679062, 1.3083356661394114, 1.0713763681180473, 0.9694410091724378, 0.8956486364208303, 0.8349687366075582, 0.7987790273684773, 0.7674209024959379, 0.7526425965521014, 0.7188251794856758, 0.7172385607145529, 0.6867332421809045, 0.703768818984021, 0.6777354044102407, 0.6642130183710666, 0.6539917275449304, 0.6412079152240887, 0.6325885749937065, 0.6345820601165035, 0.6348083035238289], "accuracy": [0.22942808270454407, 0.4367983043193817, 0.5535596609115601, 0.6192048788070679, 0.6462818384170532, 0.6803592443466187, 0.6952846646308899, 0.7086250185966492, 0.7223616242408752, 0.7219653725624084, 0.7363624572753906, 0.735569953918457, 0.7442874312400818, 0.7391361594200134, 0.7560427784919739, 0.7524765729904175, 0.7565711140632629, 0.7631752490997314, 0.7644960880279541, 0.7631752490997314, 0.7614582180976868], "val_loss": [1.7744173322405135, 1.1566722052437919, 0.8444197688783918, 0.7206059523991176, 0.6557269947869437, 0.6254597391401019, 0.5836593934467861, 0.5809857334409442, 0.5657808269773211, 0.5342429535729545, 0.5372395856039864, 0.529884934425354, 0.5556168385914394, 0.5052545751844134, 0.5093355860028949, 0.49162927695683073, 0.5382554531097412, 0.49141812324523926, 0.48925180094582693, 0.49533772468566895, 0.5042164836611066], "val_accuracy": [0.5106666684150696, 0.5883333086967468, 0.6613333225250244, 0.6883333325386047, 0.721666693687439, 0.7246666550636292, 0.7506666779518127, 0.749666690826416, 0.7593333125114441, 0.7703333497047424, 0.7590000033378601, 0.7606666684150696, 0.7423333525657654, 0.7863333225250244, 0.7876666784286499, 0.7933333516120911, 0.753000020980835, 0.7816666960716248, 0.7876666784286499, 0.7879999876022339, 0.784333348274231]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 7, 7, 1, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [1, 3, 3, 1], [56, 72, 29]], "fitness": -0.2720000147819519, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 6, 7, 2, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(grad, tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta)), tf.math.add(beta, tf.math.add(tf.math.subtract(grad, tf.math.add(beta, tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha)))), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [2.314704592674164, 2.2913760239532235, 2.303496958478535, 2.293789997265843, 2.265132874199239, 2.303547711184059, 2.3031816711798636, 2.3028745275872056, 2.3015375629848793], "accuracy": [0.20974771678447723, 0.14753665030002594, 0.09509972482919693, 0.13551710546016693, 0.15400871634483337, 0.09734513610601425, 0.09972262382507324, 0.09879804402589798, 0.10896842926740646], "val_loss": [1.9660087312970842, 1.9746549470084054, 1.9725617000034876, 1.8923343930925642, 1.9738988876342773, 1.9736569268362862, 1.9736083575657435, 1.9735531125749861, 1.9637885093688965], "val_accuracy": [0.1366666704416275, 0.10400000214576721, 0.10199999809265137, 0.2933333218097687, 0.0976666659116745, 0.10400000214576721, 0.10233332961797714, 0.10400000214576721, 0.18033333122730255]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [8, 2, 2, 8, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 2, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1, 1, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [5, 3, 9, 3, 9], [0, 3, 3, 1], [32, 38, 47]], "fitness": -0.10914285480976105, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 5, 1, 3], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3022869518168174, 2.3015233695058304, 2.300934955979603, 2.3029076699110904, 2.3016148243031056, 2.300831160194539, 2.3013469567624507, 2.301747324696275, 2.3006406687254195, 2.3012928334146583, 2.3009142974238306, 2.301283718493825, 2.301031739877719, 2.301658356210197, 2.3012578424729093, 2.300880905187141, 2.301032969413448, 2.3010492439141537, 2.300240557286025, 2.301062003606661, 2.300797748905777, 2.2999947756005317, 2.3006741467436718, 2.3003380456384557, 2.2997636216238835, 2.3003149593762906, 2.3009369231926815, 2.3004122226308477, 2.3001273392276866, 2.3014529408905973, 2.300524515451268, 2.3007495896124395, 2.300739431362331, 2.2999278359393625, 2.3016560888876136, 2.300704115779566, 2.30106383767567, 2.300658818013034, 2.300772456760026, 2.300900223642182, 2.3007769460266196, 2.3007396078380564], "accuracy": [0.09259014576673508, 0.0944393053650856, 0.09245806187391281, 0.09245806187391281, 0.08492933213710785, 0.09338264167308807, 0.08757099509239197, 0.09721305221319199, 0.0952318087220192, 0.09008057415485382, 0.09642054885625839, 0.09325055778026581, 0.09338264167308807, 0.08875974267721176, 0.09906221181154251, 0.09813763201236725, 0.09708096832036972, 0.09681680053472519, 0.10117553919553757, 0.09576013684272766, 0.09047681838274002, 0.09681680053472519, 0.0952318087220192, 0.09853387624025345, 0.09760929644107819, 0.09615638852119446, 0.10051512718200684, 0.09998679161071777, 0.09866596013307571, 0.09879804402589798, 0.10394927859306335, 0.09945846349000931, 0.09959053993225098, 0.09628847241401672, 0.0956280529499054, 0.10460969805717468, 0.09708096832036972, 0.0956280529499054, 0.09906221181154251, 0.09576013684272766, 0.10011887550354004, 0.10645885765552521], "val_loss": [1.9705004692077637, 1.9704137529645647, 1.9703312601361955, 1.9702508108956474, 1.9701813289097376, 1.9701249940054757, 1.9700781958443778, 1.9700330325535365, 1.9700017656598772, 1.9699834414890833, 1.969978196280343, 1.9699734960283553, 1.969973359789167, 1.9699822153363908, 1.9700047629220145, 1.9700356210981096, 1.9700724056788854, 1.9701134136744909, 1.9701577595302038, 1.9702088492257255, 1.9702600751604353, 1.9703187261308943, 1.9703843934195382, 1.9704556465148926, 1.970527172088623, 1.9706034660339355, 1.970684255872454, 1.9707670892987932, 1.970851012638637, 1.9709387506757463, 1.9710290091378349, 1.9711177689688546, 1.97121000289917, 1.9713070052010673, 1.9714025088718958, 1.9714985574994768, 1.9715914045061385, 1.9716830253601074, 1.971773624420166, 1.9718621117728097, 1.971944877079555, 1.972022874014718], "val_accuracy": [0.03933333232998848, 0.0430000014603138, 0.04500000178813934, 0.04699999839067459, 0.04766666516661644, 0.05133333429694176, 0.05366666615009308, 0.055666666477918625, 0.056333333253860474, 0.05966666713356972, 0.06133333221077919, 0.06199999898672104, 0.06300000101327896, 0.06400000303983688, 0.06466666609048843, 0.0689999982714653, 0.07199999690055847, 0.07433333247900009, 0.07766667008399963, 0.0806666687130928, 0.08233333379030228, 0.08266666531562805, 0.08666666597127914, 0.08666666597127914, 0.08799999952316284, 0.09000000357627869, 0.09033333510160446, 0.09233333170413971, 0.09433333575725555, 0.09533333033323288, 0.0963333323597908, 0.09799999743700027, 0.09833333641290665, 0.0989999994635582, 0.0989999994635582, 0.09966666996479034, 0.10166666656732559, 0.10166666656732559, 0.10066666454076767, 0.10166666656732559, 0.10133333504199982, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [5, 0, 2, 5, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [1, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 1, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 6, 6, 2, 1, 1, 0, 1, 0, 4, 3, 1, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.pow(grad, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.pow(tf.math.negative(grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [442627.57623301446, 8373737.54616299, 38633868.76132611, 108283538.04147404, 229058717.823273, 422559304.7660811], "accuracy": [0.10579843819141388, 0.09536388516426086, 0.10659094154834747, 0.09245806187391281, 0.09945846349000931, 0.10170386731624603], "val_loss": [1656600.0, 13193702.857142856, 44464147.428571425, 105320571.42857143, 205615593.14285713, 355202157.71428573], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 7, 7, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1, 1, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [5, 3, 9, 4, 9], [0, 3, 3, 1], [32, 38, 47]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 5, 1, 3], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.301390173853727, 2.3025832176208496, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [5, 4, 4, 4, 5, 5, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 3, 3, 1, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 1, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [56, 38, 39]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 2, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 6, 5, 1, 3], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.pow(tf.math.pow(beta, tf.math.add(beta, grad)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [648.8322119928858, 10892.946278098583, 48986.99444735669, 135900.33706123696, 285925.862633734, 525678.2686319508], "accuracy": [0.10540219396352768, 0.09509972482919693, 0.10685510188341141, 0.09219389408826828, 0.09945846349000931, 0.10157178342342377], "val_loss": [2243.4474748883927, 16880.13895089286, 56014.19866071428, 131731.20982142858, 256117.7142857143, 441260.66071428574], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [0, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [46, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [33274.02227558231, 621506.6773213578, 2857712.273609827, 7997838.427552503, 16904696.880200766, 31169170.817593448], "accuracy": [0.10593052208423615, 0.09536388516426086, 0.10672302544116974, 0.09245806187391281, 0.09945846349000931, 0.10170386731624603], "val_loss": [123542.79464285714, 977125.0357142857, 3285893.8571428573, 7775007.142857143, 15169648.57142857, 26194969.714285713], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [3, 0, 0, 3, 1, 0], [5, 57], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0], [7, 8, 2, 2, 9, 2, 4, 9, 2, 1, 4, 4, 8, 1, 1, 8, 9, 0, 9], [3, 3, 3, 1, 0, 1, 2, 3, 3, 0], [70, 8, 99, 84, 1, 78], [0, 0, 1, 1, 1], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 3, 3, 9], [2, 3, 3, 1], [56, 38, 47]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 27, 27, 19, 8, 5, 5, 2, 2, 0, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.pow(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.add(grad, tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(beta, tf.math.sqrt(alpha)), tf.math.add(beta, beta))))))))), tf.math.subtract(tf.math.subtract(tf.math.sqrt(tf.math.add(beta, grad)), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [2, 8, 9, 9, 0], [2, 0, 0, 3, 1, 0], [43, 57], [1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [7, 8, 2, 2, 0, 2, 4, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 5, 2, 3, 0, 1, 1, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0], [1, 3, 3, 3, 9], [0, 3, 3, 1], [35, 38, 47]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.multiply(sigma, sigma))", "other_info": {"loss": [2.302012017846753, 2.3025845553597533, 2.302585979226621, 2.302586262079042, 2.302585350917614, 2.3025863035527268, 2.3025825320296613, 2.302586026242727, 2.3025849949430244], "accuracy": [0.10315678268671036, 0.09998679161071777, 0.09998679161071777, 0.1014397069811821, 0.09760929644107819, 0.09998679161071777, 0.1006472036242485, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736452783857072, 1.9736450059073312, 1.9736425536019462, 1.973644188472203, 1.973644460950579, 1.9736446653093611, 1.9736428260803223, 1.9736430985586983, 1.9736414636884416], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 5, 2, 3, 0, 1, 1, 3, 3, 0], [28, 8, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [56, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [615695689.6560875, 11730056585.991812, 54230334773.86449, 152136366797.11108, 321987339805.68805, 594181532656.7164], "accuracy": [0.10593052208423615, 0.09536388516426086, 0.10645885765552521, 0.09245806187391281, 0.09945846349000931, 0.10157178342342377], "val_loss": [2314153472.0, 18506183241.142857, 62450293613.71429, 148022624256.0, 289093170907.4286, 499543591204.5714], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [3, 0, 0, 3, 1, 0], [5, 57], [1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [6, 9, 6, 2, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [5, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1, 1, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 4, 3, 3, 9], [2, 3, 3, 1], [32, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 3, 3, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.multiply(beta, sigma), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [7, 4, 2, 2, 0, 2, 3, 5, 2, 1, 2, 9, 8, 1, 1, 8, 9, 0], [2, 3, 2, 3, 0, 1, 3, 2, 3, 0], [96, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [2, 3], [], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [56, 65]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 21, 21, 12, 9, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta))), tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, grad), tf.math.square(tf.math.add(beta, beta))), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))))))), tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), tf.math.add(beta, beta)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [8, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [8, 1, 2, 2, 8, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 5, 9, 3, 9], [0, 3, 3, 1], [66, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.subtract(alpha, tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1132310652.2914064, 21575026525.96698, 99749369215.17157, 279838317703.6587, 592262053098.1228, 1092945784532.8206], "accuracy": [0.10593052208423615, 0.09536388516426086, 0.10659094154834747, 0.09245806187391281, 0.09945846349000931, 0.1018359512090683], "val_loss": [4256201142.857143, 34038975926.857143, 114868832548.57143, 272268619190.85715, 531765414180.5714, 918865107821.7142], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 8, 6, 2, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 1, 3, 3, 0, 4, 2, 3, 3, 0], [41, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 4, 9, 1, 9], [1, 3, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 5, 1, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [7, 7, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1, 1], [6, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 5, 9, 4, 9], [2, 3, 3, 1], [32, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 5, 4, 2, 2, 0, 3, 2, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09509972482919693, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [50, 57], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [6, 9, 6, 2, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [54, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [2, 3, 0], [4, 3], [], [1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [1, 3, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 2, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [5.058575185031206e+30, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09509972482919693, 0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.8818072299090173e+31, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0403333343565464, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [50, 57], [0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [6, 9, 6, 2, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1, 1, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [43, 38, 9]], "fitness": -0.09857142716646194, "mapping_values": [1, 5, 5, 4, 1, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 5, 1, 3], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3026797001813115, 2.303263643241089, 2.304657067794054, 2.308829438212431, 2.308834992757547, 2.3098607925517824, 2.3120108930867156, 2.317760298265017, 2.3195589351112407, 2.3245204927867444, 2.3283097455530215, 2.337184000575799, 2.341380460875429, 2.351945167582316, 2.3603306826882595, 2.3668461737773203, 2.3741310744347937, 2.386604587840618, 2.3995560624454284, 2.4103034188828967, 2.42174701261766, 2.4352651119799016, 2.4540618177670153, 2.480649309545035, 2.489930602490485, 2.5173817689250946, 2.5295367536606523, 2.5535329368529838, 2.580183947894079, 2.6175802657160507, 2.6465603902811985, 2.669870464194956, 2.675847442914403, 2.7049093804795903, 2.757092857467909, 2.7891697267641433, 2.8226409499136023, 2.8703289144720303], "accuracy": [0.09179764986038208, 0.09259014576673508, 0.09087307006120682, 0.08836349099874496, 0.08691058307886124, 0.09298639744520187, 0.08968432247638702, 0.08875974267721176, 0.09126931428909302, 0.09060890227556229, 0.09140139818191528, 0.09351472556591034, 0.09272222965955734, 0.09893012791872025, 0.0940430611371994, 0.09325055778026581, 0.09457138925790787, 0.09470347315073013, 0.09893012791872025, 0.09602430462837219, 0.09919429570436478, 0.09945846349000931, 0.0952318087220192, 0.09298639744520187, 0.09655263274908066, 0.09893012791872025, 0.09787346422672272, 0.10302469879388809, 0.09959053993225098, 0.09668471664190292, 0.09906221181154251, 0.09655263274908066, 0.1022322028875351, 0.10447761416435242, 0.0940430611371994, 0.09972262382507324, 0.10210011899471283, 0.1018359512090683], "val_loss": [1.9712169510977608, 1.9719997133527483, 1.9728458949497767, 1.9737461635044642, 1.9746382577078683, 1.975529670715332, 1.976454734802246, 1.9774370193481445, 1.978593076978411, 1.9800919805254256, 1.9820236478533064, 1.9844085829598563, 1.9872495106288366, 1.9905573981148856, 1.99431426184518, 1.9985095432826452, 2.0031461034502303, 2.008234977722168, 2.0137925148010254, 2.0198376519339427, 2.026393413543701, 2.033480644226074, 2.0411158970424106, 2.0493200165884837, 2.0581122807094028, 2.067512716565813, 2.0775459153311595, 2.0882338115147183, 2.099594865526472, 2.1116530554635182, 2.1244269779750278, 2.137938840048654, 2.1522132328578403, 2.167264529636928, 2.18311037336077, 2.1997677939278737, 2.217256954738072, 2.2355942044939314], "val_accuracy": [0.029999999329447746, 0.023666666820645332, 0.023333333432674408, 0.025333333760499954, 0.03233333304524422, 0.04333333298563957, 0.05299999937415123, 0.06599999964237213, 0.07733333110809326, 0.08500000089406967, 0.09066666662693024, 0.09300000220537186, 0.0963333323597908, 0.0963333323597908, 0.09700000286102295, 0.09666666388511658, 0.09666666388511658, 0.09600000083446503, 0.0963333323597908, 0.09733333438634872, 0.0976666659116745, 0.09799999743700027, 0.09866666793823242, 0.09866666793823242, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.09933333098888397, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [3, 0, 0, 3, 1, 0], [5, 57], [1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [7, 8, 2, 2, 0, 2, 4, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 5, 2, 3, 0, 1, 1, 3, 3, 0], [28, 8, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 3, 3, 9], [2, 3, 3, 1], [56, 38, 47]], "fitness": -0.08485714346170425, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [6.82321069149561, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.18755778670310974, 0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [48.02646963936942, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10433333367109299, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [7, 8, 2, 2, 0, 2, 4, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 5, 2, 3, 0, 1, 1, 3, 3, 0], [28, 8, 99, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 3, 3, 9], [2, 3, 3, 1], [56, 38, 47]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 4, 2, 2, 0, 6, 3, 3, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(beta, sigma), sigma))", "other_info": {"loss": [2.3023405126403618, 2.301731664333613, 2.3013312447545013, 2.303480357352879, 2.3021781459665256, 2.3014674737799545], "accuracy": [0.09285431355237961, 0.09377889335155487, 0.09219389408826828, 0.09219389408826828, 0.08625016361474991, 0.09087307006120682], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 7, 7, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1, 1, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [5, 3, 9, 3, 9], [3, 3, 3, 1], [32, 38, 47]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 5, 1, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.3023405126403618, 2.301731664333613, 2.3013312447545013, 2.303480357352879, 2.3021781459665256, 2.3014674737799545], "accuracy": [0.09285431355237961, 0.09377889335155487, 0.09219389408826828, 0.09219389408826828, 0.08625016361474991, 0.09087307006120682], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]