[{"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [95, 38]], "fitness": -0.7948571443557739, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(grad), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.2120828700024675, 1.642465099509303, 1.2290087362180344, 1.0285467703533588, 0.9466451546062867, 0.8891963831359023, 0.81676893444613, 0.7911641041694961, 0.7659238297484885, 0.7361846826316154, 0.7233891354937989, 0.7223538952166016, 0.707401040475508, 0.6831677880159317, 0.6681464154250145, 0.6420918528461469, 0.6424627987904838, 0.6367456676890396, 0.6413209233474833, 0.614314541179333, 0.6324751276176965, 0.6168897853409688, 0.5976968514621691, 0.6160805466672322, 0.6038251159969275, 0.5815398073419997, 0.5777549697832897, 0.5915604950083938, 0.5719324846498215, 0.5703886086206079, 0.5723186679535759], "accuracy": [0.25478801131248474, 0.48831066489219666, 0.5639941692352295, 0.6421872973442078, 0.6647734642028809, 0.6744155287742615, 0.6984546184539795, 0.7128516435623169, 0.7165499925613403, 0.7322678565979004, 0.7331924438476562, 0.726192057132721, 0.7390040755271912, 0.7434949278831482, 0.7519482374191284, 0.7626469135284424, 0.7580240368843079, 0.763967752456665, 0.759609043598175, 0.7701756954193115, 0.7651565074920654, 0.7705719470977783, 0.7774402499198914, 0.7695152759552002, 0.7749306559562683, 0.7853652238845825, 0.785101056098938, 0.7771760821342468, 0.7902522683143616, 0.7893276810646057, 0.7854973077774048], "val_loss": [1.6639458451952254, 0.9929052761622837, 0.8103805099214826, 0.6929059198924473, 0.6449750150953021, 0.6205928155354091, 0.5850138323647636, 0.5624095712389264, 0.5490899767194476, 0.5389211177825928, 0.5705028772354126, 0.5341228076389858, 0.5459577015468052, 0.504730224609375, 0.49581130913325716, 0.48699499879564556, 0.4746422937938145, 0.4835051809038435, 0.4764931542532785, 0.4826011487415859, 0.4903461592538016, 0.45674729347229004, 0.45840985434395926, 0.4576911670821054, 0.46829538685934885, 0.44857039621898104, 0.4722323077065604, 0.4486710173743112, 0.4512230498450143, 0.4381902388163975, 0.4548943894250052], "val_accuracy": [0.590666651725769, 0.5923333168029785, 0.6840000152587891, 0.7046666741371155, 0.7300000190734863, 0.7153333425521851, 0.7336666584014893, 0.7573333382606506, 0.7643333077430725, 0.762333333492279, 0.734666645526886, 0.7573333382606506, 0.7566666603088379, 0.784333348274231, 0.7879999876022339, 0.7816666960716248, 0.800000011920929, 0.7893333435058594, 0.7923333048820496, 0.7923333048820496, 0.7609999775886536, 0.8026666641235352, 0.809333324432373, 0.7986666560173035, 0.7846666574478149, 0.8183333277702332, 0.7956666946411133, 0.8183333277702332, 0.8019999861717224, 0.815666675567627, 0.8113333582878113]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 71], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [6, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0], [0, 1, 9, 3, 9], [2, 2, 3, 1], [46, 38]], "fitness": -0.2737142741680145, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 4, 2, 2, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.622128717525524, 2.3526281168306227, 3.4603132551624287, 3.483835124005857, 2.4032110857091262, 2.3635268657277715, 2.369922961352319], "accuracy": [0.24025888741016388, 0.1530841439962387, 0.15955619513988495, 0.11861048638820648, 0.10249637067317963, 0.09919429570436478, 0.1010434553027153], "val_loss": [2.039499487195696, 5.993687220982143, 5.428162847246442, 2.079287597111293, 2.010847840990339, 2.0004646437508717, 2.0463128089904785], "val_accuracy": [0.10233332961797714, 0.2436666637659073, 0.24266666173934937, 0.09700000286102295, 0.09833333641290665, 0.09966666996479034, 0.09733333438634872]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [0, 0, 0, 3, 1, 0], [5, 57], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 0, 0, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0], [1, 3, 9, 3, 9], [1, 3, 3, 1], [98, 38, 38, 87, 15]], "fitness": -0.13942857086658478, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, sigma)", "other_info": {"loss": [3.017573317359105, 2.6201898762263705, 2.304908414290739, 2.3052366365609847, 2.3057296551953943, 3139.8040769066492], "accuracy": [0.1954827606678009, 0.108440101146698, 0.09681680053472519, 0.08506141602993011, 0.09721305221319199, 0.09377889335155487], "val_loss": [3.5990160533360074, 1.9745676858084542, 1.973823002406529, 1.9738240923200334, 1.9749422073364258, 7.84620612008231], "val_accuracy": [0.1666666716337204, 0.09966666996479034, 0.09866666793823242, 0.09966666996479034, 0.09700000286102295, 0.09733333438634872]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [48, 57, 3], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [8, 3, 9, 3, 3, 8], [0, 3, 3, 1], [95, 38, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), alpha)), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [3, 0, 0, 3, 1, 0], [5, 57], [1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 3, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [5, 0, 0, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 1, 9, 3, 9], [0, 2, 3, 1], [95, 37]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1225142763.843036, 23680346356.80782, 110820316144.98692, 300839075290.33203, 653696932400.2177, 1212975227404.7815], "accuracy": [0.09826971590518951, 0.1018359512090683, 0.0956280529499054, 0.10553427785634995, 0.10130762308835983, 0.09747721254825592], "val_loss": [4726605092.571428, 37801659830.85714, 127567691776.0, 302366439131.4286, 590525160301.7142, 1020429561270.8572], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 8, 9, 0], [3, 0, 0, 3, 1, 0], [5, 94], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [5, 1, 0, 3, 0, 1, 2, 3, 3, 0], [59, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0], [3, 1, 0, 1], [2, 3], [], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [8, 8, 9, 3, 9], [0, 2, 3, 1], [95, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 4, 2, 2, 1, 1, 0, 1, 0, 8, 5, 4, 1, 0, 3, 2, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, beta), sigma)), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.subtract(sigma, sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.sqrt(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302720500525073, 2.3025825383278673, 2.3025825383278673, 2.3025825383278673, 2.302583851818679, 2.302584058746229], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642144884382, 1.973642144884382, 1.973642144884382, 1.973642144884382, 1.9736433710370744, 1.9736433710370744], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 3, 0, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [1, 3], [], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0], [4, 3, 9, 3, 9, 8, 8], [0, 3, 3, 1], [95, 38, 5]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 9, 7, 2, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))), tf.math.sqrt(sigma))", "other_info": {"loss": [2.30272051850645, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 3, 4, 8, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 0, 3, 0, 1, 2, 3, 3, 0], [61, 16, 99, 84, 1, 78], [0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 1], [3, 3, 3], [4, 3], [], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0], [0, 7, 9, 3, 9], [0, 3, 3, 1], [95, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 5, 3, 2, 1, 0, 2, 1, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.multiply(grad, tf.math.add(beta, tf.math.pow(beta, tf.math.add(beta, tf.math.sqrt(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1225142763.843036, 23680346356.80782, 110820316144.98692, 300839075290.33203, 653696932400.2177, 1212975227404.7815], "accuracy": [0.09826971590518951, 0.1018359512090683, 0.0956280529499054, 0.10553427785634995, 0.10130762308835983, 0.09747721254825592], "val_loss": [4726605092.571428, 37801659830.85714, 127567691776.0, 302366439131.4286, 590525160301.7142, 1020429561270.8572], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [0, 0, 0, 3, 1, 0], [5, 57], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [2, 5, 2, 4, 9, 9], [2, 3, 3, 1, 0, 1, 3, 0, 0], [95, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 14, 14, 8, 6, 3, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.multiply(tf.math.pow(tf.math.add(beta, tf.math.negative(grad)), tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.math.square(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [0, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 0, 0, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [2, 4, 2, 4, 9, 9], [3, 3, 3, 1, 0, 1, 3, 0, 0], [95, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 9, 9, 5, 4, 2, 1, 1, 0, 1, 0, 5, 2, 3, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.multiply(grad, tf.math.add(beta, tf.math.pow(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))))), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 3, 4, 6, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [5, 0, 0, 3, 0, 1, 2, 3, 3, 0], [28, 11, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [7, 3, 9, 0, 9], [0, 2, 3, 1], [70, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 2, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(grad)), tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [95, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 2, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.square(tf.math.add(beta, grad)), tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.30272051850645, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 71], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 0, 0, 3, 0, 1, 2, 3, 3, 0], [65, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 3, 4, 3, 9, 7, 8], [0, 2, 3, 1], [97, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 11, 7, 4, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, beta)), tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.pow(tf.math.multiply(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), beta), tf.math.add(sigma, tf.math.sqrt(alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.11147800832986832, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 0, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [95, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.30272051850645, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 1, 2, 3, 3, 0], [79, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [95, 38, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 2, 9, 9, 5, 4, 2, 1, 1, 0, 1, 0, 6, 5, 1, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), alpha), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(grad)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.negative(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [128617.55809464642, 2457078.0360586448, 11460417.866596222, 31066283.163650773, 67449773.90991943, 125093052.2826575], "accuracy": [0.09826971590518951, 0.10170386731624603, 0.0956280529499054, 0.10553427785634995, 0.10130762308835983, 0.09747721254825592], "val_loss": [492612.6785714286, 3913893.4285714286, 13180167.42857143, 31207826.285714287, 60913241.14285714, 105212251.42857143], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [0, 0, 0, 3, 1, 0], [5, 57], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [6, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 0, 0, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [3, 3], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [95, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 4, 3, 1, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [878478.1413866178, 16885965.09628847, 78894882.0921939, 214019984.43323207, 464861562.88574827, 862362634.6004491], "accuracy": [0.09813763201236725, 0.10170386731624603, 0.0956280529499054, 0.10553427785634995, 0.10130762308835983, 0.09747721254825592], "val_loss": [3377652.285714286, 26927348.0, 90776306.28571428, 215051785.14285713, 419880384.0, 725392877.7142857], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 7, 9, 2, 8, 3], [1, 0, 0, 3, 1, 0], [42, 57, 87], [1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [95, 38, 19]], "fitness": -0.09885714203119278, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 6, 5, 1, 3], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3995820317427716, 3.5254021058733187, 6.530894476109965, 11.193483032334388, 17.992251145636573, 26.848189589117876], "accuracy": [0.09245806187391281, 0.10315678268671036, 0.09866596013307571, 0.10527011007070541, 0.1006472036242485, 0.09800554811954498], "val_loss": [2.191365582602365, 3.392113140651158, 5.853733880179269, 9.487102236066546, 14.349308558872767, 20.55261720929827], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 1, 0, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 0, 3, 9], [0, 3, 3, 1], [95, 38]], "fitness": -0.07371428608894348, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 7, 4, 3, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), sigma)), sigma))", "other_info": {"loss": [2.302544372492085, 2.29943689376041, 2.2997166946374854, 2.2997678716216403, 2.3018744941936147, 2.3007553846230517, 2.3012257058780112, 2.3001107315833873, 2.3008076162417614, 2.2994405137171534, 2.299412064595765, 2.3004316633655537, 2.299466834076486, 2.300534925062769], "accuracy": [0.09047681838274002, 0.09866596013307571, 0.09945846349000931, 0.1018359512090683, 0.09298639744520187, 0.09457138925790787, 0.09430722147226334, 0.09245806187391281, 0.09060890227556229, 0.09721305221319199, 0.10500594228506088, 0.09681680053472519, 0.09998679161071777, 0.09734513610601425], "val_loss": [1.969878877912249, 1.9695001329694475, 1.9694008827209473, 1.9695080348423548, 1.969454220363072, 1.9694319452558244, 1.969362735748291, 1.969294548034668, 1.9692558561052596, 1.9694058554513114, 1.969705036708287, 1.970064299447196, 1.9702749933515276, 1.9704843248639787], "val_accuracy": [0.04766666516661644, 0.0533333346247673, 0.05700000002980232, 0.05999999865889549, 0.06199999898672104, 0.06733333319425583, 0.07199999690055847, 0.07599999755620956, 0.07699999958276749, 0.07400000095367432, 0.07266666740179062, 0.070333331823349, 0.07199999690055847, 0.07233333587646484]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [3, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 0, 0, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [7, 3], [], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0], [1, 3, 9, 3, 9], [1, 1, 3, 1], [95, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 5, 5, 4, 1, 2, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, alpha)", "other_info": {"loss": [2.302895595400388, 2.300358623482721, 2.3008052549499483, 2.301018930397895, 2.3041030471004658, 2.3026019320779585], "accuracy": [0.08928807079792023, 0.0956280529499054, 0.09681680053472519, 0.09826971590518951, 0.0886276587843895, 0.09126931428909302], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [27, 57, 49, 78], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 2, 8, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 2, 0, 3, 0, 1, 2, 3, 3, 0], [34, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [2, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [8, 8, 5, 3, 9], [0, 3, 3, 1], [95, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.sqrt(tf.math.square(tf.math.multiply(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), sigma))))", "other_info": {"loss": [2.302895595400388, 2.300358623482721, 2.3008052549499483, 2.301018930397895, 2.3041030471004658, 2.3026019320779585], "accuracy": [0.08928807079792023, 0.0956280529499054, 0.09681680053472519, 0.09826971590518951, 0.0886276587843895, 0.09126931428909302], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]