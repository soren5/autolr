[{"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [8, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [90, 47, 50]], "fitness": -0.7894285917282104, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 6, 5, 1, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.17819748534471, 1.8250816110701151, 1.444688787313579, 1.01543290382678, 0.8464295762704112, 0.7715594838434254, 0.6951265742104555, 0.6865902450169397, 0.6259458715165249, 0.6561772460084723, 0.5779516492238245, 0.5707892773409939, 0.5834086976582269, 0.541755556076147, 0.5088640371916426, 0.5269175196966207], "accuracy": [0.2596750855445862, 0.3901730179786682, 0.5017831325531006, 0.6345264911651611, 0.6827367544174194, 0.7140403985977173, 0.741909921169281, 0.7416457533836365, 0.7635715007781982, 0.7450799345970154, 0.7833839654922485, 0.7833839654922485, 0.7775723338127136, 0.7965922355651855, 0.811649739742279, 0.8018755912780762], "val_loss": [1.742741925375802, 1.2528470243726457, 0.7511369160243443, 0.7018192836216518, 0.6879697356905256, 0.5604004008429391, 0.5655007362365723, 0.5045086996895927, 0.5426638977868217, 0.48178935050964355, 0.4396226150648935, 0.44054106303623747, 0.4516126939228603, 0.44201833861214773, 0.4676966837474278, 0.45467956577028545], "val_accuracy": [0.39933332800865173, 0.5170000195503235, 0.6763333082199097, 0.6800000071525574, 0.6833333373069763, 0.7513333559036255, 0.7316666841506958, 0.7689999938011169, 0.7419999837875366, 0.7826666831970215, 0.8109999895095825, 0.8009999990463257, 0.8029999732971191, 0.8023333549499512, 0.7916666865348816, 0.7923333048820496]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [8, 57], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1, 3, 2], [42, 47, 50]], "fitness": -0.7828571200370789, "mapping_values": [1, 5, 5, 4, 1, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 5, 1, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.238351050369208, 1.879534004481241, 1.3349766554282625, 1.120451265023196, 0.9925588433768661, 0.9012438419189247, 0.8762295522458046, 0.8358376126531218, 0.7972522123205411, 0.7664997990908262, 0.7509043897226455, 0.7453885248954096, 0.7260511270949964, 0.7044077097794887, 0.6946163265665115, 0.6907775527560842, 0.6690616633724842, 0.670833698778325, 0.6530084503939312, 0.6515298999453328, 0.6514714260174378, 0.645689652320684, 0.625793791300648, 0.6153203175997202, 0.6204819097306041, 0.6127162583122132, 0.6027126052297417, 0.6073390700640443], "accuracy": [0.2218993455171585, 0.431779146194458, 0.544710099697113, 0.6122044920921326, 0.6445648074150085, 0.6763967871665955, 0.6853784322738647, 0.6980583667755127, 0.7079645991325378, 0.7193237543106079, 0.724739134311676, 0.7279091477394104, 0.7314753532409668, 0.7400607466697693, 0.7430986762046814, 0.7428345084190369, 0.7524765729904175, 0.7556465268135071, 0.7563069462776184, 0.7598732113838196, 0.7567031979560852, 0.7607977986335754, 0.7640998363494873, 0.7745344042778015, 0.7716285586357117, 0.7759873270988464, 0.7774402499198914, 0.7744023203849792], "val_loss": [1.7811385563441686, 1.19011310168675, 0.8515706573213849, 0.7191747597285679, 0.6851409162793841, 0.6242669309888568, 0.5872465372085571, 0.6054311990737915, 0.5565875598362514, 0.5478346688406808, 0.5382758719580514, 0.5525464500699725, 0.5137239183698382, 0.5106725863048008, 0.5103251934051514, 0.49764440740857807, 0.5021035330636161, 0.48348115171704975, 0.4914040224892752, 0.49077343940734863, 0.4827659811292376, 0.4753266062055315, 0.4643784931727818, 0.47335667269570486, 0.48062745162418913, 0.4553893634251186, 0.47956415585109163, 0.4638908931187221], "val_accuracy": [0.5133333206176758, 0.6416666507720947, 0.6576666831970215, 0.6953333616256714, 0.6940000057220459, 0.7366666793823242, 0.7506666779518127, 0.7206666469573975, 0.7666666507720947, 0.7613333463668823, 0.7753333449363708, 0.7546666860580444, 0.7749999761581421, 0.7696666717529297, 0.7676666378974915, 0.7889999747276306, 0.7743333578109741, 0.7933333516120911, 0.7723333239555359, 0.7853333353996277, 0.7883333563804626, 0.7979999780654907, 0.8069999814033508, 0.7950000166893005, 0.7950000166893005, 0.8043333292007446, 0.7943333387374878, 0.7863333225250244]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 6, 2, 9, 0, 2], [2, 0, 0, 3, 1, 0], [8, 57], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1, 3, 2], [90, 47, 50]], "fitness": -0.3662857115268707, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2966659406645107, 2.3038284760959993, 2.2615137801524936, 2.3103685953739594, 2.392015088582319, 2.308164021531431], "accuracy": [0.20684190094470978, 0.1694624274969101, 0.20221899449825287, 0.1010434553027153, 0.25042927265167236, 0.09959053993225098], "val_loss": [1.9284751755850655, 1.97039828981672, 1.99604674748012, 1.960803508758545, 1.9816169738769531, 1.9740700040544783], "val_accuracy": [0.3036666810512543, 0.1693333387374878, 0.10000000149011612, 0.12999999523162842, 0.10000000149011612, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [8, 57], [0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 5, 3, 4, 0, 6, 3, 3, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 35, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 3, 2, 3, 9], [3, 1, 0, 1, 3, 2], [56, 47, 50]], "fitness": -0.2688571512699127, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 9, 8, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.negative(tf.math.add(beta, alpha)), grad), tf.math.divide_no_nan(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.multiply(grad, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))))))), tf.math.add(tf.math.add(beta, beta), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.473664034910332, 2.352434968904277, 2.3046559547751317, 2.302848975608976, 2.293691910520883, 2.4224947447065728, 2.2719419252571726, 2.2991874080056354, 2.1604571397892474, 2.3058470011922614, 2.303305528198865, 2.301041575722675, 2.295790593322746], "accuracy": [0.19852067530155182, 0.149649977684021, 0.09998679161071777, 0.10381719470024109, 0.13498876988887787, 0.16933034360408783, 0.14529123902320862, 0.11887465417385101, 0.25214633345603943, 0.09840179979801178, 0.10342095047235489, 0.10738343745470047, 0.19970941543579102], "val_loss": [1.9447268077305384, 1.9760985374450684, 1.9738269533429826, 1.9729601315089635, 1.8008107457842146, 1.9698834419250488, 1.9743541990007674, 1.9058641024998255, 1.9789839472089494, 1.9740514755249023, 1.9731319291251046, 1.962310859135219, 1.9784653527396066], "val_accuracy": [0.18833333253860474, 0.10400000214576721, 0.10400000214576721, 0.10566666722297668, 0.3179999887943268, 0.10466666519641876, 0.09733333438634872, 0.3596666753292084, 0.09833333641290665, 0.0976666659116745, 0.15000000596046448, 0.12200000137090683, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 6, 2, 9, 0, 2], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [8, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [2, 1, 3, 1], [46, 99, 50]], "fitness": -0.2688571512699127, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.473664034910332, 2.352434968904277, 2.3046559547751317, 2.302848975608976, 2.293691910520883, 2.4224947447065728, 2.2719419252571726, 2.2991874080056354, 2.1604571397892474, 2.3058470011922614, 2.303305528198865, 2.301041575722675, 2.295790593322746], "accuracy": [0.19852067530155182, 0.149649977684021, 0.09998679161071777, 0.10381719470024109, 0.13498876988887787, 0.16933034360408783, 0.14529123902320862, 0.11887465417385101, 0.25214633345603943, 0.09840179979801178, 0.10342095047235489, 0.10738343745470047, 0.19970941543579102], "val_loss": [1.9447268077305384, 1.9760985374450684, 1.9738269533429826, 1.9729601315089635, 1.8008107457842146, 1.9698834419250488, 1.9743541990007674, 1.9058641024998255, 1.9789839472089494, 1.9740514755249023, 1.9731319291251046, 1.962310859135219, 1.9784653527396066], "val_accuracy": [0.18833333253860474, 0.10400000214576721, 0.10400000214576721, 0.10566666722297668, 0.3179999887943268, 0.10466666519641876, 0.09733333438634872, 0.3596666753292084, 0.09833333641290665, 0.0976666659116745, 0.15000000596046448, 0.12200000137090683, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 6, 2, 9, 0, 2], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 1, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [3, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 8, 9], [1, 1, 3, 1], [90, 47, 50]], "fitness": -0.2688571512699127, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.473664034910332, 2.352434968904277, 2.3046559547751317, 2.302848975608976, 2.293691910520883, 2.4224947447065728, 2.2719419252571726, 2.2991874080056354, 2.1604571397892474, 2.3058470011922614, 2.303305528198865, 2.301041575722675, 2.295790593322746], "accuracy": [0.19852067530155182, 0.149649977684021, 0.09998679161071777, 0.10381719470024109, 0.13498876988887787, 0.16933034360408783, 0.14529123902320862, 0.11887465417385101, 0.25214633345603943, 0.09840179979801178, 0.10342095047235489, 0.10738343745470047, 0.19970941543579102], "val_loss": [1.9447268077305384, 1.9760985374450684, 1.9738269533429826, 1.9729601315089635, 1.8008107457842146, 1.9698834419250488, 1.9743541990007674, 1.9058641024998255, 1.9789839472089494, 1.9740514755249023, 1.9731319291251046, 1.962310859135219, 1.9784653527396066], "val_accuracy": [0.18833333253860474, 0.10400000214576721, 0.10400000214576721, 0.10566666722297668, 0.3179999887943268, 0.10466666519641876, 0.09733333438634872, 0.3596666753292084, 0.09833333641290665, 0.0976666659116745, 0.15000000596046448, 0.12200000137090683, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [6, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [6, 3], [], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 7, 9, 3, 9], [3, 1, 3, 1, 3, 2], [90, 47, 50]], "fitness": -0.2688571512699127, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.473664034910332, 2.352434968904277, 2.3046559547751317, 2.302848975608976, 2.293691910520883, 2.4224947447065728, 2.2719419252571726, 2.2991874080056354, 2.1604571397892474, 2.3058470011922614, 2.303305528198865, 2.301041575722675, 2.295790593322746], "accuracy": [0.19852067530155182, 0.149649977684021, 0.09998679161071777, 0.10381719470024109, 0.13498876988887787, 0.16933034360408783, 0.14529123902320862, 0.11887465417385101, 0.25214633345603943, 0.09840179979801178, 0.10342095047235489, 0.10738343745470047, 0.19970941543579102], "val_loss": [1.9447268077305384, 1.9760985374450684, 1.9738269533429826, 1.9729601315089635, 1.8008107457842146, 1.9698834419250488, 1.9743541990007674, 1.9058641024998255, 1.9789839472089494, 1.9740514755249023, 1.9731319291251046, 1.962310859135219, 1.9784653527396066], "val_accuracy": [0.18833333253860474, 0.10400000214576721, 0.10400000214576721, 0.10566666722297668, 0.3179999887943268, 0.10466666519641876, 0.09733333438634872, 0.3596666753292084, 0.09833333641290665, 0.0976666659116745, 0.15000000596046448, 0.12200000137090683, 0.09733333438634872]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 2, 0, 5], [2, 0, 0, 3, 1, 0], [8, 57, 4], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 7, 9, 3, 9], [3, 1, 3, 1], [90, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 6, 3, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.add(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.square(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07898560166358948, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 6, 2, 9, 0, 2], [2, 0, 0, 3, 1, 0], [5, 57, 84], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [0, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [22], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 8, 9, 3, 9], [1, 1, 3, 1, 3, 2], [90, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 6, 4, 3, 3, 3, 2, 1, 0, 5, 4, 2, 2, 0, 3, 3, 0, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, grad), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.negative(tf.math.add(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1238852952.3976824, 23542379506.068947, 111010910165.26007, 306980646619.3126, 650836984710.4076, 1213025921348.8774], "accuracy": [0.09853387624025345, 0.09747721254825592, 0.09576013684272766, 0.10527011007070541, 0.10249637067317963, 0.09972262382507324], "val_loss": [4726068662.857142, 37797281792.0, 127554706285.71428, 302336732598.8571, 590470877769.1428, 1020346349275.4286], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [8, 9, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1], [0, 3, 2, 3, 8, 3, 7, 0, 6], [3, 1, 3, 1, 0, 3, 1], [90, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 16, 9, 7, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.sqrt(sigma), alpha), tf.math.multiply(sigma, tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.divide_no_nan(sigma, alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [8, 57], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [8, 6, 3, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [2, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1], [0, 3, 3, 3, 2, 8, 5, 0, 2, 5], [3, 0, 3, 1, 0, 1], [90, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 16, 10, 6, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.multiply(tf.math.add(sigma, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(sigma)), tf.math.square(tf.math.negative(tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))), tf.math.square(alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [8, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 8], [3, 1, 3, 1], [90, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 7, 5, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(sigma), alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 6, 2, 9, 0, 2], [0, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [8, 5, 3, 4, 0, 6, 3, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 1, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [3, 3], [], [1, 1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 3, 3, 9], [2, 1, 3, 1], [56, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 14, 14, 8, 6, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.negative(tf.math.add(beta, alpha)), tf.math.add(beta, alpha)), tf.math.divide_no_nan(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10276053100824356, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 6, 2, 9, 0, 2], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [18, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 3, 5, 3, 9], [2, 1, 3, 1], [56, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 20, 20, 11, 9, 1, 5, 4, 2, 2, 0, 5, 3, 2, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.negative(tf.math.add(beta, alpha)), tf.math.add(beta, grad)), tf.math.divide_no_nan(tf.math.multiply(tf.math.square(tf.math.add(grad, grad)), tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.add(beta, grad), beta)))))), tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.square(beta), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 6, 2, 9, 0, 2], [2, 0, 0, 3, 1, 0], [8, 57], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1], [1, 4, 3, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 3, 3, 9], [0, 1, 3, 1, 3, 2], [56, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 21, 21, 12, 9, 4, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.multiply(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))))), tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.add(beta, grad), beta))), tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), alpha), sigma))", "other_info": {"loss": [134922.37883932778, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1604807823896408, 0.10249637067317963, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.1667072756397562e+19, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 6, 2, 9, 0, 2], [2, 0, 0, 3, 1, 0], [8, 57, 38], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [0, 3, 3, 3, 9, 3, 6, 2, 3, 2], [2, 2, 3, 0, 0, 0, 2, 0], [66, 99, 50]], "fitness": -0.056285712867975235, "mapping_values": [1, 10, 10, 6, 4, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 8, 4, 4, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, grad), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.negative(tf.math.add(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.multiply(beta, beta), sigma), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3024078166527344, 2.301653552852082, 2.301914838862189, 2.3019220002685414, 2.301134707196797, 2.3011691125313747, 2.301382820194644, 2.3038216922985737, 2.3014274370306596, 2.3013859176522375, 2.300932070110232, 2.3023769249611874, 2.300298368894602, 2.301383480530027, 2.301725576487924, 2.3005233317349862, 2.3022468233341553, 2.301950449169493, 2.30174917762841, 2.3011283376638554, 2.300488525236193, 2.3015071548065884, 2.301636774274478, 2.299902325907183, 2.301035011197283, 2.3014753021033147, 2.3012612665869447, 2.302036856080815, 2.3021385189784973, 2.300579801447844, 2.2999138339887506, 2.3005374595552404, 2.3007238326276127, 2.299643340978042, 2.2985301512170384, 2.298527220315496, 2.3000722782030207, 2.298611978765933, 2.2996548832588664, 2.299744113655831, 2.2993908408390076, 2.2975524664397535, 2.2982024786227004, 2.299936192871132, 2.29886253408201, 2.2995220093820956, 2.300453471154931, 2.299714968866125, 2.2982736592122106, 2.2968802172761977, 2.2979170929691213, 2.296690727064339, 2.2968006422805938, 2.2993270967929686, 2.2978491708823263, 2.298168476656711, 2.2987124865096966, 2.298552906665946, 2.2992120120409156, 2.297927225837461, 2.29937671689215, 2.298832306977135, 2.2996618020583326, 2.297882951245946, 2.2987653115453535, 2.298160767904787, 2.298647610235208, 2.299757773456415, 2.2985477233055858, 2.2977192291352475, 2.2972896021622646, 2.2981614314837464, 2.2964654437397543, 2.2988225953642876, 2.2968069592864993, 2.2979182867625325, 2.2977008156064103, 2.296437836531021, 2.298060778093974, 2.298397824654348, 2.2971912204408373, 2.2972867817312514, 2.2973366129777815, 2.29769205247186, 2.2962271854499896, 2.2960503320526437, 2.296753653792216, 2.2984885038590748, 2.2971718115435613, 2.295996843028645, 2.2978091814955386, 2.2975107178066416, 2.297673147557009, 2.296329599660637, 2.296013285345043, 2.2960551944249468, 2.2947168596794483, 2.296721405278202, 2.2958672470845536, 2.2966638610914414], "accuracy": [0.09272222965955734, 0.08611807972192764, 0.09153348207473755, 0.0952318087220192, 0.08968432247638702, 0.09245806187391281, 0.09549596905708313, 0.08413683623075485, 0.0944393053650856, 0.09285431355237961, 0.09219389408826828, 0.08809932321310043, 0.09074098616838455, 0.09008057415485382, 0.09232597798109055, 0.09985470771789551, 0.0956280529499054, 0.08942015469074249, 0.09021265059709549, 0.0952318087220192, 0.09470347315073013, 0.09457138925790787, 0.09391097724437714, 0.09470347315073013, 0.09232597798109055, 0.09113723784685135, 0.09351472556591034, 0.09153348207473755, 0.09298639744520187, 0.09721305221319199, 0.09655263274908066, 0.09338264167308807, 0.09272222965955734, 0.09377889335155487, 0.09496764093637466, 0.0952318087220192, 0.09826971590518951, 0.09985470771789551, 0.09457138925790787, 0.09866596013307571, 0.09338264167308807, 0.10606260597705841, 0.09721305221319199, 0.10434553027153015, 0.09959053993225098, 0.09932637959718704, 0.09628847241401672, 0.09668471664190292, 0.09747721254825592, 0.10474177449941635, 0.1010434553027153, 0.10328886657953262, 0.09998679161071777, 0.09893012791872025, 0.1006472036242485, 0.10751552134752274, 0.09853387624025345, 0.09853387624025345, 0.10315678268671036, 0.10579843819141388, 0.10091137140989304, 0.09642054885625839, 0.10051512718200684, 0.10553427785634995, 0.09998679161071777, 0.1014397069811821, 0.1026284471154213, 0.09774138033390045, 0.1022322028875351, 0.09589222073554993, 0.10011887550354004, 0.10236428678035736, 0.1014397069811821, 0.10434553027153015, 0.107647605240345, 0.09906221181154251, 0.10474177449941635, 0.1018359512090683, 0.10117553919553757, 0.10157178342342377, 0.09813763201236725, 0.10606260597705841, 0.10777968913316727, 0.10117553919553757, 0.10170386731624603, 0.11028926074504852, 0.10368511080741882, 0.09853387624025345, 0.10276053100824356, 0.10830801725387573, 0.10249637067317963, 0.09959053993225098, 0.10566636174917221, 0.1026284471154213, 0.10632677376270294, 0.10936468094587326, 0.11398758739233017, 0.10289261490106583, 0.10328886657953262, 0.10645885765552521], "val_loss": [1.9705074855259486, 1.9704251289367676, 1.9703373227800642, 1.9702650478907995, 1.9701956340244837, 1.9701249258858817, 1.9700499262128557, 1.9699717249189104, 1.9699018342154366, 1.969832147870745, 1.969764164515904, 1.9696848733084542, 1.969611576625279, 1.96954802104405, 1.9694812638419015, 1.969416277749198, 1.969344002859933, 1.9692765644618444, 1.9692019735063826, 1.969127791268485, 1.9690542221069336, 1.9689794267926897, 1.9689051764351981, 1.9688350132533483, 1.9687683922903878, 1.9687014988490514, 1.9686416217258997, 1.9685799053737096, 1.9685185977390833, 1.9684529985700334, 1.9683901923043388, 1.9683305876595634, 1.9682694843837194, 1.9682111740112305, 1.9681541579110282, 1.96809264591762, 1.9680375371660506, 1.9679805891854423, 1.9679186003548759, 1.9678583826337541, 1.9677972112383162, 1.9677393777029855, 1.967679500579834, 1.9676195553370885, 1.9675634247916085, 1.9675045694623674, 1.9674453054155623, 1.9673946244376046, 1.967346123286656, 1.9672901970999581, 1.96723358971732, 1.9671804564339774, 1.9671243258884974, 1.9670713288443429, 1.9670158794948034, 1.9669666971479143, 1.9669128826686315, 1.9668669700622559, 1.9668122019086565, 1.9667590686253138, 1.9667040279933385, 1.9666519165039062, 1.9666002818516322, 1.9665576389857702, 1.966510432107108, 1.966463225228446, 1.9664205142429896, 1.966372013092041, 1.966324942452567, 1.9662739889962333, 1.966228416987828, 1.9661787578037806, 1.966132572719029, 1.9660870688302177, 1.966036319732666, 1.9659908158438546, 1.9659401348658971, 1.9658910206386022, 1.9658431325639998, 1.9657933371407645, 1.9657489912850517, 1.9656984465462821, 1.9656524658203125, 1.965611389705113, 1.9655646596636092, 1.9655156816755022, 1.9654639789036341, 1.9654173851013184, 1.9653748784746443, 1.9653265135628837, 1.9652812140328544, 1.9652374131338937, 1.965188843863351, 1.9651451792035783, 1.965102059500558, 1.9650542395455497, 1.9650022642953056, 1.964956283569336, 1.964914321899414, 1.9648707253592355], "val_accuracy": [0.039000000804662704, 0.03933333232998848, 0.03966666758060455, 0.04100000113248825, 0.0416666679084301, 0.04233333468437195, 0.04266666620969772, 0.04333333298563957, 0.04333333298563957, 0.04399999976158142, 0.04399999976158142, 0.04466666653752327, 0.04500000178813934, 0.045666664838790894, 0.045666664838790894, 0.045666664838790894, 0.04600000008940697, 0.04699999839067459, 0.047333333641290665, 0.047333333641290665, 0.04800000041723251, 0.04833333194255829, 0.04899999871850014, 0.05000000074505806, 0.050333332270383835, 0.052000001072883606, 0.052666667848825455, 0.05299999937415123, 0.05400000140070915, 0.05433333292603493, 0.054666668176651, 0.054999999701976776, 0.054999999701976776, 0.054999999701976776, 0.054999999701976776, 0.055666666477918625, 0.055666666477918625, 0.056333333253860474, 0.05666666850447655, 0.05700000002980232, 0.05700000002980232, 0.05833333358168602, 0.05966666713356972, 0.05966666713356972, 0.05966666713356972, 0.05966666713356972, 0.05999999865889549, 0.06066666543483734, 0.060333333909511566, 0.06066666543483734, 0.061000000685453415, 0.06133333221077919, 0.06199999898672104, 0.06266666948795319, 0.06266666948795319, 0.06266666948795319, 0.06333333253860474, 0.06333333253860474, 0.06333333253860474, 0.06366666406393051, 0.06366666406393051, 0.06366666406393051, 0.06366666406393051, 0.06366666406393051, 0.06400000303983688, 0.06400000303983688, 0.06433333456516266, 0.06466666609048843, 0.06466666609048843, 0.06533333659172058, 0.06599999964237213, 0.06599999964237213, 0.0663333311676979, 0.06666667014360428, 0.06733333319425583, 0.06800000369548798, 0.06866666674613953, 0.07000000029802322, 0.06933332979679108, 0.06966666877269745, 0.07000000029802322, 0.07100000232458115, 0.07100000232458115, 0.0716666653752327, 0.0716666653752327, 0.07199999690055847, 0.07233333587646484, 0.07233333587646484, 0.07333333045244217, 0.07400000095367432, 0.07433333247900009, 0.07466666400432587, 0.07533333450555801, 0.07533333450555801, 0.07533333450555801, 0.07599999755620956, 0.07733333110809326, 0.07733333110809326, 0.07800000160932541, 0.0793333351612091]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [8, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [1, 1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [90, 47, 50]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 5, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302442079490407, 2.3017736332464716, 2.3021243463150185, 2.3022074809305546, 2.3014897105716177, 2.3016021186492037], "accuracy": [0.09245806187391281, 0.08598599582910538, 0.09113723784685135, 0.09391097724437714, 0.08889182657003403, 0.09126931428909302], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [8, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [4, 3], [], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 5, 9, 3, 0], [3, 1, 3, 1], [46, 47, 50]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 4, 3, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302442079490407, 2.3017736332464716, 2.3021243463150185, 2.3022074809305546, 2.3014897105716177, 2.3016021186492037], "accuracy": [0.09245806187391281, 0.08598599582910538, 0.09113723784685135, 0.09391097724437714, 0.08889182657003403, 0.09126931428909302], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 6, 2, 9, 0, 2], [2, 0, 0, 3, 1, 0], [8, 57], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0], [0, 3, 5, 3, 9], [3, 1, 3, 1, 3, 2], [90, 47, 50]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 7, 4, 3, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.square(sigma), tf.math.multiply(alpha, sigma)))", "other_info": {"loss": [2.3024428351806248, 2.3017789098517674, 2.3021363575287532, 2.302221044148153, 2.3015075649457475, 2.3016363613955995], "accuracy": [0.09245806187391281, 0.08585391938686371, 0.09126931428909302, 0.09391097724437714, 0.0882314071059227, 0.09140139818191528], "val_loss": [1.9705922263009208, 1.970597812107631, 1.9706010818481445, 1.9706117766244071, 1.9706200872148787, 1.9706370489937919], "val_accuracy": [0.03933333232998848, 0.039000000804662704, 0.03866666555404663, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 6, 2, 9, 0, 2], [0, 0, 0, 3, 1, 0], [8, 57], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [6, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 5, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [2, 3], [], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [6, 3, 9, 5, 9], [3, 1, 3, 1], [90, 47, 50]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302442079490407, 2.3017736332464716, 2.3021243463150185, 2.3022074809305546, 2.3014897105716177, 2.3016021186492037], "accuracy": [0.09245806187391281, 0.08598599582910538, 0.09113723784685135, 0.09391097724437714, 0.08889182657003403, 0.09126931428909302], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]