[{"genotype": [[0], [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [1, 4, 6, 6, 0, 2, 8, 0, 3, 6, 3, 8, 9, 3, 2, 6, 0, 5, 0, 2], [0, 0, 2, 2, 2, 1, 1, 2, 0, 0, 0, 3, 2, 2], [56, 42, 74, 73, 95], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 2, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [49, 25, 50, 71, 34]], "fitness": -0.801714301109314, "mapping_values": [1, 21, 21, 13, 8, 3, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 5, 2, 3, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.pow(tf.math.divide_no_nan(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))), grad))), tf.math.multiply(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.add(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.336079780530495, 2.0621956815305182, 2.107212794030174, 1.6413114366908004, 1.1181849343760013, 0.858703510037912, 0.7008905120261861, 0.6789161021037738, 0.6497532859800861, 0.6189119652702887, 0.6153663242608014, 0.5724383584575379, 0.5443472159678799, 0.5354004475843983, 0.5295657653220341, 0.5540002747895837, 0.5212852108543102, 0.5092220369417906, 0.48888071373610875], "accuracy": [0.2495046854019165, 0.28358209133148193, 0.3125082552433014, 0.4468366205692291, 0.6001849174499512, 0.6705851554870605, 0.728701651096344, 0.7395324110984802, 0.7577598690986633, 0.7693831920623779, 0.7648923397064209, 0.7821952104568481, 0.7923656105995178, 0.7969884872436523, 0.7981772422790527, 0.787082314491272, 0.8075551390647888, 0.8090080618858337, 0.8190463781356812], "val_loss": [1.518829686301095, 1.9162922586713518, 1.4068060943058558, 0.9662743295942035, 0.8470532383237567, 0.5532974685941424, 0.6124364648546491, 0.5958429064069476, 0.586644002369472, 0.4683495504515512, 0.4825927870614188, 0.4515675817217146, 0.45835944584437777, 0.4178390843527658, 0.49925850118909565, 0.453087534223284, 0.47498657022203716, 0.44807426418576923, 0.4133814402988979], "val_accuracy": [0.4050000011920929, 0.210999995470047, 0.43033334612846375, 0.6679999828338623, 0.6136666536331177, 0.7596666812896729, 0.7120000123977661, 0.7403333187103271, 0.7210000157356262, 0.7986666560173035, 0.7760000228881836, 0.8026666641235352, 0.7933333516120911, 0.8183333277702332, 0.7726666927337646, 0.7979999780654907, 0.7776666879653931, 0.8036666512489319, 0.8163333535194397]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [1, 4, 2, 2, 0, 2, 8, 0, 3, 6, 3, 8, 9, 3, 2, 6, 0, 5, 0, 2], [0, 2, 2, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 42, 35, 73, 95], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 0, 1], [1, 0, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [49, 25, 50, 71, 34]], "fitness": -0.801714301109314, "mapping_values": [1, 13, 13, 7, 6, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.add(tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))))), grad), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(sigma, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.336079780530495, 2.0621956815305182, 2.107212794030174, 1.6413114366908004, 1.1181849343760013, 0.858703510037912, 0.7008905120261861, 0.6789161021037738, 0.6497532859800861, 0.6189119652702887, 0.6153663242608014, 0.5724383584575379, 0.5443472159678799, 0.5354004475843983, 0.5295657653220341, 0.5540002747895837, 0.5212852108543102, 0.5092220369417906, 0.48888071373610875], "accuracy": [0.2495046854019165, 0.28358209133148193, 0.3125082552433014, 0.4468366205692291, 0.6001849174499512, 0.6705851554870605, 0.728701651096344, 0.7395324110984802, 0.7577598690986633, 0.7693831920623779, 0.7648923397064209, 0.7821952104568481, 0.7923656105995178, 0.7969884872436523, 0.7981772422790527, 0.787082314491272, 0.8075551390647888, 0.8090080618858337, 0.8190463781356812], "val_loss": [1.518829686301095, 1.9162922586713518, 1.4068060943058558, 0.9662743295942035, 0.8470532383237567, 0.5532974685941424, 0.6124364648546491, 0.5958429064069476, 0.586644002369472, 0.4683495504515512, 0.4825927870614188, 0.4515675817217146, 0.45835944584437777, 0.4178390843527658, 0.49925850118909565, 0.453087534223284, 0.47498657022203716, 0.44807426418576923, 0.4133814402988979], "val_accuracy": [0.4050000011920929, 0.210999995470047, 0.43033334612846375, 0.6679999828338623, 0.6136666536331177, 0.7596666812896729, 0.7120000123977661, 0.7403333187103271, 0.7210000157356262, 0.7986666560173035, 0.7760000228881836, 0.8026666641235352, 0.7933333516120911, 0.8183333277702332, 0.7726666927337646, 0.7979999780654907, 0.7776666879653931, 0.8036666512489319, 0.8163333535194397]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [1, 4, 6, 6, 3, 2, 8, 0, 3, 6, 3, 8, 9, 3, 2, 6, 0, 5, 0, 2], [1, 2, 2, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 45, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 0, 1], [1, 0, 1, 0], [2, 2, 0], [4, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [49, 25, 50, 71, 34]], "fitness": -0.801714301109314, "mapping_values": [1, 9, 9, 4, 5, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.pow(tf.math.divide_no_nan(alpha, grad), grad), tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.336079780530495, 2.0621956815305182, 2.107212794030174, 1.6413114366908004, 1.1181849343760013, 0.858703510037912, 0.7008905120261861, 0.6789161021037738, 0.6497532859800861, 0.6189119652702887, 0.6153663242608014, 0.5724383584575379, 0.5443472159678799, 0.5354004475843983, 0.5295657653220341, 0.5540002747895837, 0.5212852108543102, 0.5092220369417906, 0.48888071373610875], "accuracy": [0.2495046854019165, 0.28358209133148193, 0.3125082552433014, 0.4468366205692291, 0.6001849174499512, 0.6705851554870605, 0.728701651096344, 0.7395324110984802, 0.7577598690986633, 0.7693831920623779, 0.7648923397064209, 0.7821952104568481, 0.7923656105995178, 0.7969884872436523, 0.7981772422790527, 0.787082314491272, 0.8075551390647888, 0.8090080618858337, 0.8190463781356812], "val_loss": [1.518829686301095, 1.9162922586713518, 1.4068060943058558, 0.9662743295942035, 0.8470532383237567, 0.5532974685941424, 0.6124364648546491, 0.5958429064069476, 0.586644002369472, 0.4683495504515512, 0.4825927870614188, 0.4515675817217146, 0.45835944584437777, 0.4178390843527658, 0.49925850118909565, 0.453087534223284, 0.47498657022203716, 0.44807426418576923, 0.4133814402988979], "val_accuracy": [0.4050000011920929, 0.210999995470047, 0.43033334612846375, 0.6679999828338623, 0.6136666536331177, 0.7596666812896729, 0.7120000123977661, 0.7403333187103271, 0.7210000157356262, 0.7986666560173035, 0.7760000228881836, 0.8026666641235352, 0.7933333516120911, 0.8183333277702332, 0.7726666927337646, 0.7979999780654907, 0.7776666879653931, 0.8036666512489319, 0.8163333535194397]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [3, 4, 6, 3, 0, 2, 8, 5, 8, 6, 5, 8, 9, 3, 2, 6, 0, 5, 0, 2], [0, 0, 2, 2, 2, 1, 1, 2, 0, 0, 0, 3, 2, 2], [6, 42, 35, 73, 95], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [0, 0, 1, 0], [3, 2, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [49, 25, 50, 71, 34]], "fitness": -0.801714301109314, "mapping_values": [1, 14, 14, 8, 6, 2, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 5, 2, 3, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.add(grad, tf.math.sqrt(tf.math.add(alpha, grad))))), grad)), tf.math.square(tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.336079780530495, 2.0621956815305182, 2.107212794030174, 1.6413114366908004, 1.1181849343760013, 0.858703510037912, 0.7008905120261861, 0.6789161021037738, 0.6497532859800861, 0.6189119652702887, 0.6153663242608014, 0.5724383584575379, 0.5443472159678799, 0.5354004475843983, 0.5295657653220341, 0.5540002747895837, 0.5212852108543102, 0.5092220369417906, 0.48888071373610875], "accuracy": [0.2495046854019165, 0.28358209133148193, 0.3125082552433014, 0.4468366205692291, 0.6001849174499512, 0.6705851554870605, 0.728701651096344, 0.7395324110984802, 0.7577598690986633, 0.7693831920623779, 0.7648923397064209, 0.7821952104568481, 0.7923656105995178, 0.7969884872436523, 0.7981772422790527, 0.787082314491272, 0.8075551390647888, 0.8090080618858337, 0.8190463781356812], "val_loss": [1.518829686301095, 1.9162922586713518, 1.4068060943058558, 0.9662743295942035, 0.8470532383237567, 0.5532974685941424, 0.6124364648546491, 0.5958429064069476, 0.586644002369472, 0.4683495504515512, 0.4825927870614188, 0.4515675817217146, 0.45835944584437777, 0.4178390843527658, 0.49925850118909565, 0.453087534223284, 0.47498657022203716, 0.44807426418576923, 0.4133814402988979], "val_accuracy": [0.4050000011920929, 0.210999995470047, 0.43033334612846375, 0.6679999828338623, 0.6136666536331177, 0.7596666812896729, 0.7120000123977661, 0.7403333187103271, 0.7210000157356262, 0.7986666560173035, 0.7760000228881836, 0.8026666641235352, 0.7933333516120911, 0.8183333277702332, 0.7726666927337646, 0.7979999780654907, 0.7776666879653931, 0.8036666512489319, 0.8163333535194397]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [4, 4, 6, 1, 0, 4, 5, 0, 3, 4, 3, 8, 4, 0, 2, 6, 8, 5, 0, 2, 4, 9, 6, 2, 2], [1, 3, 2, 2, 2, 2, 2, 2, 0, 0, 0, 3, 2, 2, 3, 3, 0, 1], [26, 98, 83, 73, 81, 42], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.7922857403755188, "mapping_values": [1, 16, 16, 9, 7, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.pow(alpha, grad)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.negative(tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))), grad)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), grad)))), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.0720041658207253, 1.9584255524126295, 1.4885947231162477, 1.1424835300039322, 0.8918543811629178, 0.8659386607035827, 0.8105334156791784, 0.7356055408987812, 0.7224375242491629, 0.6676195468396842, 0.6341392195944332, 0.6477404935107082, 0.5952283069442181, 0.5880509602111864, 0.5924636495190526, 0.5710668250113399, 0.5457946636484378], "accuracy": [0.3053757846355438, 0.39162594079971313, 0.49227315187454224, 0.5848633050918579, 0.6588297486305237, 0.6716417670249939, 0.6925109028816223, 0.722757875919342, 0.7210407853126526, 0.7437590956687927, 0.7547219395637512, 0.757099449634552, 0.7736098170280457, 0.769911527633667, 0.7777044177055359, 0.7869502305984497, 0.7880068421363831], "val_loss": [1.1285407202584403, 1.3377015931265694, 0.9597291605813163, 0.6677554164613996, 0.6112322977610997, 0.6765611852918353, 0.5756101608276367, 0.6067612000874111, 0.5449106693267822, 0.5212614195687431, 0.5102761302675519, 0.4543920840535845, 0.46096295969826834, 0.4923349618911743, 0.4462239146232605, 0.4495752028056553, 0.45200274671827045], "val_accuracy": [0.5799999833106995, 0.5726666450500488, 0.6176666617393494, 0.699999988079071, 0.7103333473205566, 0.6536666750907898, 0.7369999885559082, 0.7139999866485596, 0.7576666474342346, 0.7506666779518127, 0.7670000195503235, 0.8100000023841858, 0.7923333048820496, 0.7553333044052124, 0.8003333210945129, 0.7839999794960022, 0.7913333177566528]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], [1, 4, 9, 6, 0, 2, 8, 0, 8, 6, 1, 8, 9, 3, 2, 6, 0, 5, 0, 2], [0, 0, 2, 2, 2, 1, 1, 2, 0, 0, 0, 3, 2, 2], [26, 98, 83, 73, 7, 42], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 1, 1], [0, 0, 1, 0], [2, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.7922857403755188, "mapping_values": [1, 12, 12, 8, 4, 3, 1, 1, 0, 1, 0, 5, 2, 2, 0, 0, 5, 2, 3, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad)))))), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.0720041658207253, 1.9584255524126295, 1.4885947231162477, 1.1424835300039322, 0.8918543811629178, 0.8659386607035827, 0.8105334156791784, 0.7356055408987812, 0.7224375242491629, 0.6676195468396842, 0.6341392195944332, 0.6477404935107082, 0.5952283069442181, 0.5880509602111864, 0.5924636495190526, 0.5710668250113399, 0.5457946636484378], "accuracy": [0.3053757846355438, 0.39162594079971313, 0.49227315187454224, 0.5848633050918579, 0.6588297486305237, 0.6716417670249939, 0.6925109028816223, 0.722757875919342, 0.7210407853126526, 0.7437590956687927, 0.7547219395637512, 0.757099449634552, 0.7736098170280457, 0.769911527633667, 0.7777044177055359, 0.7869502305984497, 0.7880068421363831], "val_loss": [1.1285407202584403, 1.3377015931265694, 0.9597291605813163, 0.6677554164613996, 0.6112322977610997, 0.6765611852918353, 0.5756101608276367, 0.6067612000874111, 0.5449106693267822, 0.5212614195687431, 0.5102761302675519, 0.4543920840535845, 0.46096295969826834, 0.4923349618911743, 0.4462239146232605, 0.4495752028056553, 0.45200274671827045], "val_accuracy": [0.5799999833106995, 0.5726666450500488, 0.6176666617393494, 0.699999988079071, 0.7103333473205566, 0.6536666750907898, 0.7369999885559082, 0.7139999866485596, 0.7576666474342346, 0.7506666779518127, 0.7670000195503235, 0.8100000023841858, 0.7923333048820496, 0.7553333044052124, 0.8003333210945129, 0.7839999794960022, 0.7913333177566528]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [1, 4, 6, 6, 0, 4, 5, 0, 3, 0, 3, 8, 4, 6, 2, 6, 8, 5, 0, 2, 4, 4, 6, 5, 2, 0], [1, 3, 2, 2, 2, 0, 2, 2, 0, 0, 0, 0, 2, 2, 3, 3, 0, 1], [26, 98, 97, 73, 7, 42], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.3928571343421936, "mapping_values": [1, 43, 43, 26, 17, 6, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.pow(tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), grad))))), tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))))), grad)), tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(alpha, grad)))), tf.math.add(grad, tf.math.add(alpha, tf.math.negative(grad))))), grad), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, beta), beta)", "other_info": {"loss": [2.26251038577909, 2.3644110884066225, 2.287387531447042, 2.3367108740370113, 2.3047091908002053, 2.3034253446039603], "accuracy": [0.2067098170518875, 0.20776647329330444, 0.14661207795143127, 0.14568749070167542, 0.09655263274908066, 0.09721305221319199], "val_loss": [1.7101312024252755, 1.980175154549735, 1.6804874283926827, 1.97495208467756, 1.9737704140799386, 1.9735593795776367], "val_accuracy": [0.4476666748523712, 0.09966666996479034, 0.3453333377838135, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [4, 2, 6, 6, 9, 4, 2, 0, 8, 6, 8, 8, 4, 3, 2, 6, 8, 5, 0, 2], [1, 2, 2, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 45, 73, 46], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 0, 1], [1, 0, 1, 0], [2, 2, 0], [6, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 6, 2, 9, 2, 9], [2, 1, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [49, 25, 50, 71, 34]], "fitness": -0.3345714211463928, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 0, 1, 1, 0, 1, 0, 5, 2, 3, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.divide_no_nan(beta, alpha), sigma)", "other_info": {"loss": [2.2955697320943904, 7.979337517296586, 2.3108374762922437, 2.1880271939900036, 4.018608143206491, 2.2887305041597723], "accuracy": [0.1974640041589737, 0.12851670384407043, 0.12402588874101639, 0.22335226833820343, 0.13551710546016693, 0.11887465417385101], "val_loss": [1.5691319874354772, 2.081973075866699, 1.7252700669424874, 7.340186527797154, 1.9731977326529366, 1.8875988551548548], "val_accuracy": [0.33766666054725647, 0.10466666519641876, 0.312666654586792, 0.27566665410995483, 0.1106666699051857, 0.24833333492279053]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [2, 4, 6, 6, 6, 2, 8, 0, 3, 6, 3, 8, 9, 3, 2, 6, 0, 5, 0, 2], [1, 2, 2, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 45, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [1, 0, 1, 0], [3, 3, 0], [1, 3], [], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 2, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [49, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 24, 24, 14, 10, 5, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.divide_no_nan(alpha, grad), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))))), tf.math.negative(tf.math.multiply(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))))), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08189142495393753, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [1, 2, 6, 6, 0, 2, 8, 0, 8, 6, 5, 8, 9, 3, 2, 6, 0, 5, 0, 2], [1, 3, 1, 2, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2, 3, 3, 0, 1], [8, 42, 74, 73, 95], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 0, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [0, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 18, 11, 7, 1, 1, 1, 0, 1, 0, 4, 2, 2, 0, 0, 5, 2, 3, 2], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), grad))), tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(grad))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.negative(sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.3028527539970853, 2.3029114042117595, 2.3029916767021605, 2.302892714978965, 2.302868195812007, 2.302974252212065, 2.302891498197103, 2.302999216914098, 2.302970745717498, 2.3029351222784356, 2.3031566031872557, 2.302974922341158], "accuracy": [0.09576013684272766, 0.09681680053472519, 0.09628847241401672, 0.09760929644107819, 0.09668471664190292, 0.0956280529499054, 0.10011887550354004, 0.09509972482919693, 0.09760929644107819, 0.09113723784685135, 0.09576013684272766, 0.09694888442754745], "val_loss": [1.9737671443394251, 1.9737390790666853, 1.9737160546439034, 1.9737311090741838, 1.9736379895891463, 1.9736367634364538, 1.9735851287841797, 1.9737287248883928, 1.9736358097621374, 1.9736177580697196, 1.97376891544887, 1.9737443923950195], "val_accuracy": [0.09700000286102295, 0.0976666659116745, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.10400000214576721, 0.0976666659116745, 0.0976666659116745, 0.10400000214576721, 0.09833333641290665, 0.09733333438634872]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [4, 2, 6, 6, 6, 8, 1, 0, 8, 9, 8, 8, 4, 3, 2, 6, 8, 5, 0, 2], [1, 2, 2, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 18, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [0, 0, 1, 0], [3, 7, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 2, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [50, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.302548262578873, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [4, 4, 6, 6, 0, 2, 8, 0, 2, 6, 3, 8, 4, 3, 2, 6, 8, 5, 4, 2, 2, 4, 6, 5, 2, 1, 4, 7, 8, 8, 7, 4, 7, 8, 5, 1], [0, 0, 2, 2, 2, 0, 1, 2, 1, 2, 2, 3, 2, 2, 3, 1, 2, 3, 2, 3, 0, 2, 2, 1, 3, 1], [26, 98, 22, 73, 76, 42], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [1, 0, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [31, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 30, 30, 17, 13, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad)))), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), alpha)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(grad, alpha)), grad))))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(alpha, grad))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [3.461645744606142, 9.943846512423583e+20, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19059570133686066, 0.09325055778026581, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.1342472348894392, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1], [8, 4, 6, 6, 0, 2, 8, 0, 1, 6, 3, 2, 9, 3, 2, 6, 0, 5, 0, 2], [0, 0, 2, 2, 2, 1, 1, 2, 0, 0, 0, 3, 2, 2], [56, 42, 74, 73, 95], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 2, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 1, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [49, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 11, 8, 2, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 5, 2, 3, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.pow(tf.math.divide_no_nan(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(grad)))), grad)), tf.math.subtract(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.add(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, alpha), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [1, 4, 6, 6, 0, 2, 8, 0, 3, 6, 3, 8, 9, 3, 2, 6, 0, 5, 0, 2], [0, 0, 2, 1, 2, 1, 1, 2, 0, 0, 0, 3, 2, 2], [6, 42, 35, 73, 95], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 1, 1], [1, 0, 1, 0], [3, 0, 0], [5, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [49, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 6, 6, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 9, 5, 4, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.pow(tf.math.divide_no_nan(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, grad)), alpha)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.math.add(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1083589.5342896117, 2.3072833316106647, 2.3048091500332295, 2.303660478983667, 2.303164911496877, 2.3030010711688567, 2.302811948362831, 2.302836549658392, 2.302778272927319, 2.302767472701097, 2.3028860287092554], "accuracy": [0.0952318087220192, 0.09496764093637466, 0.09113723784685135, 0.09932637959718704, 0.09866596013307571, 0.09655263274908066, 0.09708096832036972, 0.09826971590518951, 0.09879804402589798, 0.0956280529499054, 0.0952318087220192], "val_loss": [1.979919365474156, 1.97670807157244, 1.975219658442906, 1.9744922092982702, 1.974109513419015, 1.9738362176077706, 1.9737258638654436, 1.973705223628453, 1.9736700057983398, 1.973637308393206, 1.9736928258623396], "val_accuracy": [0.09833333641290665, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.10400000214576721, 0.10400000214576721, 0.0976666659116745, 0.09966666996479034, 0.10233332961797714, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [4, 2, 6, 6, 9, 4, 2, 0, 8, 6, 8, 8, 4, 3, 2, 6, 8, 5, 0, 2], [1, 2, 2, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 45, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 0, 1], [1, 0, 1, 0], [2, 2, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 1, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [49, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07700435817241669, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [1, 4, 6, 6, 1, 2, 8, 0, 8, 6, 5, 8, 9, 3, 2, 6, 0, 5, 0, 2], [0, 0, 2, 2, 2, 1, 1, 2, 0, 0, 0, 3, 2, 2], [56, 42, 74, 73, 95], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 0, 1], [1, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [43, 25, 50, 71, 34]], "fitness": -0.04771428555250168, "mapping_values": [1, 5, 5, 2, 3, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [3.171784647451715, 11.357297812911419, 2.519436062382134, 2.585707438289686, 2.465095449637082, 2.4747126423026184], "accuracy": [0.21833311021327972, 0.1072513535618782, 0.09589222073554993, 0.09959053993225098, 0.09536388516426086, 0.09774138033390045], "val_loss": [18.91083308628627, 2.2601611273629323, 2.1800688334873746, 2.066320010593959, 2.2700873783656528, 2.142726557595389], "val_accuracy": [0.13600000739097595, 0.09700000286102295, 0.0976666659116745, 0.10233332961797714, 0.09700000286102295, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [4, 2, 6, 6, 9, 4, 2, 0, 8, 6, 8, 8, 4, 3, 2, 6, 8, 5, 0, 2], [1, 2, 2, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 42, 35, 73, 95], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [49, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.3023542968305093, 2.3022577349756372, 2.301623208033741, 2.3026087063021112, 2.3020628352033587, 2.3035479667652488], "accuracy": [0.08453308790922165, 0.08849557489156723, 0.08849557489156723, 0.09192973375320435, 0.09021265059709549, 0.08492933213710785], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1], [1, 4, 2, 0, 0, 2, 8, 8, 3, 6, 3, 8, 9, 3, 2, 6, 0, 5, 0, 2], [0, 0, 2, 2, 2, 1, 1, 2, 0, 0, 0, 3, 2, 2], [56, 42, 74, 73, 95], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 1, 1], [0, 0, 1, 0], [3, 0, 0], [5, 3], [], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [3, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [49, 25, 50, 71, 34]], "fitness": -0.035428572446107864, "mapping_values": [1, 19, 19, 11, 8, 2, 1, 1, 0, 1, 0, 4, 2, 2, 0, 0, 9, 5, 4, 3], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.pow(tf.math.add(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), grad))))), tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.negative(sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(beta, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [6.746925005839092, 21.14667790910083, 6.921644995445903, 8.244308154879938, 5.887615159707, 3.662666129272344], "accuracy": [0.0606260746717453, 0.10566636174917221, 0.09998679161071777, 0.09998679161071777, 0.09985470771789551, 0.1006472036242485], "val_loss": [5.7031547001429965, 4.692892074584961, 6.997718811035156, 6.221202850341797, 3.5207738876342773, 2.7894278935023715], "val_accuracy": [0.10199999809265137, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [6, 2, 6, 6, 6, 8, 1, 0, 8, 9, 8, 8, 4, 3, 2, 6, 8, 5, 0, 2], [0, 0, 2, 2, 2, 1, 1, 2, 0, 0, 0, 3, 2, 2], [6, 76, 35, 73, 95], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.018285714089870453, "mapping_values": [1, 5, 5, 2, 3, 2, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 5, 2, 3, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.1865171098186353, 2.1710636496087266, 2.655309300396846, 1.8605212509325073, 1.5126995998933535, 1.4244063114839665, 2.1534013324142243, 2.079994965664006, 2.1503048629934574, 2.1563690420721877], "accuracy": [0.2690529525279999, 0.23273015022277832, 0.2052568942308426, 0.3679831027984619, 0.49068814516067505, 0.4967639744281769, 0.36164310574531555, 0.3413023352622986, 0.29401662945747375, 0.2296922504901886], "val_loss": [1.9717374529157365, 1.8855765206473214, 1.8750787462506975, 1.1762423855917794, 0.9821663243430001, 1.0592504910060339, 1.3987783363887243, 1.4220740454537528, 1.4521582807813371, 1.7033346039908273], "val_accuracy": [0.09833333641290665, 0.21033333241939545, 0.17100000381469727, 0.5266666412353516, 0.6060000061988831, 0.5693333148956299, 0.5239999890327454, 0.38866665959358215, 0.41733333468437195, 0.28600001335144043]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], [4, 2, 6, 6, 9, 1, 3, 0, 8, 6, 9, 8, 8, 3, 2, 6, 8, 5, 0, 2], [2, 3, 2, 2, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2, 3, 3, 0, 1], [26, 98, 83, 73, 7, 42], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 0, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.018285714089870453, "mapping_values": [1, 17, 17, 11, 6, 3, 1, 1, 0, 1, 0, 6, 4, 3, 1, 0, 5, 2, 3, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), grad)), tf.math.add(alpha, grad))))), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.1865171098186353, 2.1710636496087266, 2.655309300396846, 1.8605212509325073, 1.5126995998933535, 1.4244063114839665, 2.1534013324142243, 2.079994965664006, 2.1503048629934574, 2.1563690420721877], "accuracy": [0.2690529525279999, 0.23273015022277832, 0.2052568942308426, 0.3679831027984619, 0.49068814516067505, 0.4967639744281769, 0.36164310574531555, 0.3413023352622986, 0.29401662945747375, 0.2296922504901886], "val_loss": [1.9717374529157365, 1.8855765206473214, 1.8750787462506975, 1.1762423855917794, 0.9821663243430001, 1.0592504910060339, 1.3987783363887243, 1.4220740454537528, 1.4521582807813371, 1.7033346039908273], "val_accuracy": [0.09833333641290665, 0.21033333241939545, 0.17100000381469727, 0.5266666412353516, 0.6060000061988831, 0.5693333148956299, 0.5239999890327454, 0.38866665959358215, 0.41733333468437195, 0.28600001335144043]}}]