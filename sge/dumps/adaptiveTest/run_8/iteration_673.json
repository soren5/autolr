[{"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 5, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.7842857241630554, "mapping_values": [1, 7, 7, 5, 2, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2866511771928018, 2.2440353191571227, 2.187885526778786, 2.0942997158069683, 1.9617126273630223, 1.7771215509697589, 1.5807590872903525, 1.419994425449263, 1.2912208219765515, 1.2145817889639448, 1.140859665068905, 1.0934177005626364, 1.045763305606245, 1.0061735578768005, 0.9813681570861035, 0.9545448958094346, 0.9407695745747906, 0.9114668072490266, 0.8905868057829278, 0.8717004450367993, 0.8669106521469144, 0.8447121873806969, 0.837269538452817, 0.8309589077090827, 0.8122426413620594, 0.807361873212413, 0.7935940882454553, 0.7874501135528458, 0.7868462482290403, 0.7757150969406428, 0.7638296410864559, 0.7528347270820339, 0.7532354597055901, 0.7534834727115477, 0.747206287384978, 0.7368037449354666, 0.7295627044711871, 0.7261791628081927, 0.7227714195495205, 0.7112023658708984, 0.7100871720995492, 0.7032054920773448, 0.7030074054601879, 0.6970452407190214, 0.6904441597455088, 0.6927850803269561, 0.690294785852902, 0.6773899030361067, 0.6847526741978861, 0.6743641094036579, 0.6728320221906609, 0.6718182543548752, 0.6670387854208926, 0.6718968825490799, 0.6630089541373393, 0.662632548593338, 0.6483227581458872, 0.6481277862985168, 0.6544542331752871, 0.6438236256411614, 0.6406055131781733, 0.643829647481654, 0.6309693148737303, 0.6381773656905052, 0.644805882230899, 0.6358226066283766, 0.6420766468360487, 0.6273994660963236, 0.6327349256058379, 0.6318430870342343, 0.628156644564893, 0.6137305793666474, 0.6167275336723695, 0.6173777349983083], "accuracy": [0.13168670237064362, 0.23695680499076843, 0.31686699390411377, 0.37722888588905334, 0.4233258366584778, 0.46651697158813477, 0.5040285587310791, 0.5344076156616211, 0.5634658336639404, 0.5772024989128113, 0.6020340919494629, 0.6140536069869995, 0.6342623233795166, 0.6431118845939636, 0.6510368585586548, 0.6605468392372131, 0.6625280380249023, 0.6701889038085938, 0.6870955228805542, 0.6896050572395325, 0.6877558827400208, 0.6907938122749329, 0.698718786239624, 0.7010962963104248, 0.709549605846405, 0.7042662501335144, 0.7112666964530945, 0.7147008180618286, 0.717870831489563, 0.7240787148475647, 0.7264562249183655, 0.7226257920265198, 0.7265883088111877, 0.7260599732398987, 0.726192057132721, 0.7304186820983887, 0.7309470176696777, 0.7371549606323242, 0.7390040755271912, 0.7363624572753906, 0.7409853339195251, 0.7467969655990601, 0.7449478507041931, 0.7453441023826599, 0.7461365461349487, 0.7470611333847046, 0.7510236501693726, 0.7474573850631714, 0.7497028112411499, 0.7549861073493958, 0.7520803213119507, 0.7508915662765503, 0.755118191242218, 0.7601373791694641, 0.7582882046699524, 0.7582882046699524, 0.7640998363494873, 0.7568352818489075, 0.7606657147407532, 0.7622507214546204, 0.759080708026886, 0.7613261342048645, 0.7726852297782898, 0.7627789974212646, 0.7647602558135986, 0.7644960880279541, 0.7670056819915771, 0.7711002230644226, 0.7687227725982666, 0.7677981853485107, 0.7658169269561768, 0.7726852297782898, 0.7733456492424011, 0.7766477465629578], "val_loss": [1.933340004512242, 1.8869615282331194, 1.8173462322780065, 1.7052038397107805, 1.541698592049735, 1.3425500392913818, 1.152993815285819, 1.0096756049564906, 0.9080034664699009, 0.8408044236046928, 0.7908818210874285, 0.7481023413794381, 0.717511807169233, 0.6917923518589565, 0.6733945267541068, 0.6574442386627197, 0.6424836601529803, 0.6297155788966587, 0.61788957459586, 0.6078517096383231, 0.5958931956972394, 0.5900156157357352, 0.5832842247826713, 0.5741928815841675, 0.568783061844962, 0.564138650894165, 0.5576617036546979, 0.5542209489004952, 0.5476392337254116, 0.5454412187848773, 0.5392557552882603, 0.5359657491956439, 0.5304231643676758, 0.5291980164391654, 0.5243053776877267, 0.5224242891584124, 0.5167727981294904, 0.5153616326195853, 0.5124147278921944, 0.5076401574271066, 0.5084205184664045, 0.5032056740352085, 0.5039010047912598, 0.49904985087258474, 0.4960154635565622, 0.4930720499583653, 0.49343150002615793, 0.4888379914419992, 0.4895385333469936, 0.4858875274658203, 0.4842737061636789, 0.48232454913003103, 0.48107148919786724, 0.47960250718253, 0.47870331151144846, 0.47925337723323275, 0.47534183093479704, 0.4738465206963675, 0.47206383092062815, 0.4725699595042637, 0.46847942897251676, 0.46833789348602295, 0.4663879019873483, 0.46446733815329416, 0.4630669355392456, 0.4616262572152274, 0.46104986327035086, 0.4614276885986328, 0.46116362299237934, 0.4608257157461984, 0.45692968368530273, 0.4562294823782785, 0.4566834143229893, 0.4565886173929487], "val_accuracy": [0.3513333201408386, 0.4410000145435333, 0.4866666793823242, 0.5473333597183228, 0.5793333053588867, 0.5879999995231628, 0.6353333592414856, 0.6549999713897705, 0.6850000023841858, 0.6966666579246521, 0.6990000009536743, 0.7126666903495789, 0.7066666483879089, 0.7226666808128357, 0.7303333282470703, 0.734000027179718, 0.7396666407585144, 0.7393333315849304, 0.7463333606719971, 0.746666669845581, 0.7549999952316284, 0.7549999952316284, 0.7583333253860474, 0.762666642665863, 0.7636666893959045, 0.7670000195503235, 0.7693333625793457, 0.7696666717529297, 0.7683333158493042, 0.7739999890327454, 0.7739999890327454, 0.7746666669845581, 0.7763333320617676, 0.7733333110809326, 0.7776666879653931, 0.7736666798591614, 0.7803333401679993, 0.7863333225250244, 0.7863333225250244, 0.7863333225250244, 0.7853333353996277, 0.7896666526794434, 0.7833333611488342, 0.7916666865348816, 0.7896666526794434, 0.7940000295639038, 0.7889999747276306, 0.7933333516120911, 0.7910000085830688, 0.7963333129882812, 0.7973333597183228, 0.7929999828338623, 0.7953333258628845, 0.7983333468437195, 0.800000011920929, 0.7963333129882812, 0.7986666560173035, 0.7976666688919067, 0.8006666898727417, 0.7973333597183228, 0.7993333339691162, 0.8013333082199097, 0.8003333210945129, 0.8063333630561829, 0.8016666769981384, 0.8009999990463257, 0.8053333163261414, 0.8080000281333923, 0.8113333582878113, 0.8103333115577698, 0.8096666932106018, 0.8100000023841858, 0.8066666722297668, 0.8066666722297668]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.7842857241630554, "mapping_values": [1, 6, 6, 3, 3, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(grad, grad)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2866511771928018, 2.2440353191571227, 2.187885526778786, 2.0942997158069683, 1.9617126273630223, 1.7771215509697589, 1.5807590872903525, 1.419994425449263, 1.2912208219765515, 1.2145817889639448, 1.140859665068905, 1.0934177005626364, 1.045763305606245, 1.0061735578768005, 0.9813681570861035, 0.9545448958094346, 0.9407695745747906, 0.9114668072490266, 0.8905868057829278, 0.8717004450367993, 0.8669106521469144, 0.8447121873806969, 0.837269538452817, 0.8309589077090827, 0.8122426413620594, 0.807361873212413, 0.7935940882454553, 0.7874501135528458, 0.7868462482290403, 0.7757150969406428, 0.7638296410864559, 0.7528347270820339, 0.7532354597055901, 0.7534834727115477, 0.747206287384978, 0.7368037449354666, 0.7295627044711871, 0.7261791628081927, 0.7227714195495205, 0.7112023658708984, 0.7100871720995492, 0.7032054920773448, 0.7030074054601879, 0.6970452407190214, 0.6904441597455088, 0.6927850803269561, 0.690294785852902, 0.6773899030361067, 0.6847526741978861, 0.6743641094036579, 0.6728320221906609, 0.6718182543548752, 0.6670387854208926, 0.6718968825490799, 0.6630089541373393, 0.662632548593338, 0.6483227581458872, 0.6481277862985168, 0.6544542331752871, 0.6438236256411614, 0.6406055131781733, 0.643829647481654, 0.6309693148737303, 0.6381773656905052, 0.644805882230899, 0.6358226066283766, 0.6420766468360487, 0.6273994660963236, 0.6327349256058379, 0.6318430870342343, 0.628156644564893, 0.6137305793666474, 0.6167275336723695, 0.6173777349983083], "accuracy": [0.13168670237064362, 0.23695680499076843, 0.31686699390411377, 0.37722888588905334, 0.4233258366584778, 0.46651697158813477, 0.5040285587310791, 0.5344076156616211, 0.5634658336639404, 0.5772024989128113, 0.6020340919494629, 0.6140536069869995, 0.6342623233795166, 0.6431118845939636, 0.6510368585586548, 0.6605468392372131, 0.6625280380249023, 0.6701889038085938, 0.6870955228805542, 0.6896050572395325, 0.6877558827400208, 0.6907938122749329, 0.698718786239624, 0.7010962963104248, 0.709549605846405, 0.7042662501335144, 0.7112666964530945, 0.7147008180618286, 0.717870831489563, 0.7240787148475647, 0.7264562249183655, 0.7226257920265198, 0.7265883088111877, 0.7260599732398987, 0.726192057132721, 0.7304186820983887, 0.7309470176696777, 0.7371549606323242, 0.7390040755271912, 0.7363624572753906, 0.7409853339195251, 0.7467969655990601, 0.7449478507041931, 0.7453441023826599, 0.7461365461349487, 0.7470611333847046, 0.7510236501693726, 0.7474573850631714, 0.7497028112411499, 0.7549861073493958, 0.7520803213119507, 0.7508915662765503, 0.755118191242218, 0.7601373791694641, 0.7582882046699524, 0.7582882046699524, 0.7640998363494873, 0.7568352818489075, 0.7606657147407532, 0.7622507214546204, 0.759080708026886, 0.7613261342048645, 0.7726852297782898, 0.7627789974212646, 0.7647602558135986, 0.7644960880279541, 0.7670056819915771, 0.7711002230644226, 0.7687227725982666, 0.7677981853485107, 0.7658169269561768, 0.7726852297782898, 0.7733456492424011, 0.7766477465629578], "val_loss": [1.933340004512242, 1.8869615282331194, 1.8173462322780065, 1.7052038397107805, 1.541698592049735, 1.3425500392913818, 1.152993815285819, 1.0096756049564906, 0.9080034664699009, 0.8408044236046928, 0.7908818210874285, 0.7481023413794381, 0.717511807169233, 0.6917923518589565, 0.6733945267541068, 0.6574442386627197, 0.6424836601529803, 0.6297155788966587, 0.61788957459586, 0.6078517096383231, 0.5958931956972394, 0.5900156157357352, 0.5832842247826713, 0.5741928815841675, 0.568783061844962, 0.564138650894165, 0.5576617036546979, 0.5542209489004952, 0.5476392337254116, 0.5454412187848773, 0.5392557552882603, 0.5359657491956439, 0.5304231643676758, 0.5291980164391654, 0.5243053776877267, 0.5224242891584124, 0.5167727981294904, 0.5153616326195853, 0.5124147278921944, 0.5076401574271066, 0.5084205184664045, 0.5032056740352085, 0.5039010047912598, 0.49904985087258474, 0.4960154635565622, 0.4930720499583653, 0.49343150002615793, 0.4888379914419992, 0.4895385333469936, 0.4858875274658203, 0.4842737061636789, 0.48232454913003103, 0.48107148919786724, 0.47960250718253, 0.47870331151144846, 0.47925337723323275, 0.47534183093479704, 0.4738465206963675, 0.47206383092062815, 0.4725699595042637, 0.46847942897251676, 0.46833789348602295, 0.4663879019873483, 0.46446733815329416, 0.4630669355392456, 0.4616262572152274, 0.46104986327035086, 0.4614276885986328, 0.46116362299237934, 0.4608257157461984, 0.45692968368530273, 0.4562294823782785, 0.4566834143229893, 0.4565886173929487], "val_accuracy": [0.3513333201408386, 0.4410000145435333, 0.4866666793823242, 0.5473333597183228, 0.5793333053588867, 0.5879999995231628, 0.6353333592414856, 0.6549999713897705, 0.6850000023841858, 0.6966666579246521, 0.6990000009536743, 0.7126666903495789, 0.7066666483879089, 0.7226666808128357, 0.7303333282470703, 0.734000027179718, 0.7396666407585144, 0.7393333315849304, 0.7463333606719971, 0.746666669845581, 0.7549999952316284, 0.7549999952316284, 0.7583333253860474, 0.762666642665863, 0.7636666893959045, 0.7670000195503235, 0.7693333625793457, 0.7696666717529297, 0.7683333158493042, 0.7739999890327454, 0.7739999890327454, 0.7746666669845581, 0.7763333320617676, 0.7733333110809326, 0.7776666879653931, 0.7736666798591614, 0.7803333401679993, 0.7863333225250244, 0.7863333225250244, 0.7863333225250244, 0.7853333353996277, 0.7896666526794434, 0.7833333611488342, 0.7916666865348816, 0.7896666526794434, 0.7940000295639038, 0.7889999747276306, 0.7933333516120911, 0.7910000085830688, 0.7963333129882812, 0.7973333597183228, 0.7929999828338623, 0.7953333258628845, 0.7983333468437195, 0.800000011920929, 0.7963333129882812, 0.7986666560173035, 0.7976666688919067, 0.8006666898727417, 0.7973333597183228, 0.7993333339691162, 0.8013333082199097, 0.8003333210945129, 0.8063333630561829, 0.8016666769981384, 0.8009999990463257, 0.8053333163261414, 0.8080000281333923, 0.8113333582878113, 0.8103333115577698, 0.8096666932106018, 0.8100000023841858, 0.8066666722297668, 0.8066666722297668]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 2, 5, 0, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [24, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 3, 2, 6, 6, 9, 1, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 66, 83, 25, 50, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.41600000858306885, "mapping_values": [1, 7, 7, 5, 2, 1, 13, 13, 8, 5, 5, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.subtract(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.square(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3025088828269125, 2.3009777965956295, 2.3003488367637703, 2.297896797977277, 2.2995873545894945, 2.2983717962798345, 2.297003817359895, 2.2967499691214086, 2.294895571771787, 2.2948757006806813, 2.294739531299237, 2.2946718650455598, 2.2930961040977507, 2.292855396530238, 2.2921533130809, 2.291386454537749, 2.289569887298052, 2.2889870738844595, 2.2882500861251924, 2.2859807387004203, 2.2864293350188993, 2.2862216360643632, 2.285681478036566, 2.2835309664492343, 2.2836313182809143, 2.282396706733658, 2.2819991192372404, 2.2811828315879974, 2.281394816817955, 2.2800881125120487, 2.2805195372763754, 2.2787133040382184, 2.279803909409583, 2.2780719940546814, 2.276971241171649, 2.274576464380807, 2.274230014945632, 2.2747151812605177, 2.273789351374765, 2.272958575301497, 2.2702169311580374, 2.269921198497123, 2.2705371850013356, 2.269633735758265, 2.268873033679755, 2.2685686636909503, 2.268207438759532, 2.2650332188546427, 2.266549571882134, 2.26437902894585, 2.2634031777967, 2.262145924010785, 2.2623317540203653, 2.2609113460644568, 2.260231229780593, 2.2610300114094666, 2.256734428373011, 2.2603364332461355, 2.2562007772735146, 2.2561994481946437, 2.255113649487952, 2.254205411593077, 2.253658554321267, 2.2529355232914945, 2.253597340170009, 2.251377253720726, 2.2506755301823564, 2.2503304894983556, 2.2497709748483903, 2.2484430318904702, 2.2464599690936766, 2.245859184190818, 2.2448754346822595, 2.2434914409051467, 2.242572515805352, 2.2419671645143704, 2.241245128223216, 2.2402881752813277, 2.2393988886246072, 2.2374575734532125, 2.2368806331479836, 2.236689165016097, 2.234917381231449, 2.2336316583588327, 2.233653234153801, 2.23377411404243, 2.2315753992002842, 2.2302444148073106, 2.228751032343945, 2.2286749516873705, 2.2276051901649914, 2.2265790463942485, 2.2250890184812353, 2.2246297224244076, 2.2252698339853523, 2.2215168514838703, 2.221650644174389, 2.2203011870809344, 2.2191812561298674, 2.217374482348201], "accuracy": [0.0874389111995697, 0.09074098616838455, 0.1006472036242485, 0.10355303436517715, 0.09959053993225098, 0.09853387624025345, 0.10196803510189056, 0.1072513535618782, 0.11227050423622131, 0.10579843819141388, 0.10685510188341141, 0.11187426000833511, 0.11015717685222626, 0.1138555034995079, 0.11557257920503616, 0.11596883088350296, 0.11847840249538422, 0.1258750557899475, 0.12521463632583618, 0.1328754425048828, 0.1290450394153595, 0.12679962813854218, 0.13842293620109558, 0.13776251673698425, 0.14238542318344116, 0.136045441031456, 0.14529123902320862, 0.1472724825143814, 0.146479994058609, 0.1620657742023468, 0.14674416184425354, 0.1546691358089447, 0.14898955821990967, 0.15612204372882843, 0.15889579057693481, 0.1636507660150528, 0.15968827903270721, 0.16021661460399628, 0.16431118547916412, 0.17144367098808289, 0.17778365314006805, 0.17038699984550476, 0.18055738508701324, 0.17500990629196167, 0.18016114830970764, 0.17540615797042847, 0.17461365461349487, 0.18835029006004333, 0.18399155139923096, 0.19323734939098358, 0.19455818831920624, 0.201294407248497, 0.19812442362308502, 0.19997358322143555, 0.19838859140872955, 0.19218069314956665, 0.20882314443588257, 0.19838859140872955, 0.20842689275741577, 0.21635186672210693, 0.2118610441684723, 0.21304979920387268, 0.22005018591880798, 0.21740853786468506, 0.22163519263267517, 0.22678641974925995, 0.22242768108844757, 0.2211068570613861, 0.2246730923652649, 0.23418307304382324, 0.23537181317806244, 0.23339056968688965, 0.23774930834770203, 0.24224013090133667, 0.24197596311569214, 0.23959846794605255, 0.24276845157146454, 0.2448817789554596, 0.244485542178154, 0.2514859437942505, 0.24976885318756104, 0.24778760969638824, 0.25544843077659607, 0.25624093413352966, 0.25941091775894165, 0.26059964299201965, 0.2619204819202423, 0.27037379145622253, 0.2620525658130646, 0.26997753977775574, 0.2719587981700897, 0.2739400267601013, 0.2705058753490448, 0.2740721106529236, 0.27024170756340027, 0.27578920125961304, 0.2735437750816345, 0.28358209133148193, 0.2786950170993805, 0.28741249442100525], "val_loss": [1.9698598044259208, 1.9691271781921387, 1.96840238571167, 1.967691285269601, 1.966974871499198, 1.9662528038024902, 1.9655382292611259, 1.9648231778826033, 1.964106627873012, 1.9633924620492118, 1.9626710755484444, 1.9619597707475935, 1.9612468310764857, 1.9605344363621302, 1.9598184994288854, 1.9591069902692522, 1.9584033829825265, 1.957685879298619, 1.9569760731288366, 1.9562576838902064, 1.9555512837001257, 1.954836027962821, 1.9541258811950684, 1.9534191404070174, 1.952709334237235, 1.9519998686654227, 1.9512818881443568, 1.9505641119820731, 1.9498469488961356, 1.9491350991385323, 1.9484216826302665, 1.9476972307477678, 1.9469773428780692, 1.9462634495326452, 1.945535114833287, 1.9448136602129256, 1.9440874372209822, 1.9433636665344238, 1.9426393508911133, 1.9419163295200892, 1.9411749839782715, 1.940431799207415, 1.939692837851388, 1.9389422961643763, 1.9381933893476213, 1.9374513626098633, 1.9367082459586007, 1.9359525271824427, 1.935199805668422, 1.9344370024544852, 1.9336773327418737, 1.9329111235482352, 1.932138442993164, 1.9313593591962541, 1.9305904933384486, 1.929814270564488, 1.9290310314723425, 1.928243773324149, 1.9274539947509766, 1.926663534981864, 1.9258576801845007, 1.925056321280343, 1.9242446081978934, 1.923433576311384, 1.92262145451137, 1.9217971393040247, 1.920973437173026, 1.9201414925711495, 1.919311455317906, 1.9184682028634208, 1.917616639818464, 1.9167519296918596, 1.9158885138375419, 1.915010724748884, 1.9141204016549247, 1.9132492882864816, 1.912362916128976, 1.9114723205566406, 1.9105675561087472, 1.9096572058541434, 1.9087506021772112, 1.9078232220241003, 1.9068910734994071, 1.9059511593409948, 1.9050111089433943, 1.9040754181998116, 1.9031297819955009, 1.9021684101649694, 1.9011963435581751, 1.900235652923584, 1.89924955368042, 1.8982562337602888, 1.8972654342651367, 1.896261215209961, 1.8952648980276925, 1.89424044745309, 1.893207618168422, 1.8921683856419154, 1.8911301749093192, 1.8900754792349679], "val_accuracy": [0.04233333468437195, 0.04899999871850014, 0.05299999937415123, 0.059333331882953644, 0.06133333221077919, 0.06566666811704636, 0.07133333384990692, 0.07699999958276749, 0.08266666531562805, 0.08900000154972076, 0.09799999743700027, 0.10700000077486038, 0.11266666650772095, 0.11933333426713943, 0.1276666671037674, 0.1340000033378601, 0.13966666162014008, 0.14666666090488434, 0.15433333814144135, 0.164000004529953, 0.16866666078567505, 0.17800000309944153, 0.18466666340827942, 0.19099999964237213, 0.20000000298023224, 0.20733332633972168, 0.21133333444595337, 0.21933333575725555, 0.22166666388511658, 0.2293333262205124, 0.234333336353302, 0.23866666853427887, 0.2433333396911621, 0.24933333694934845, 0.257999986410141, 0.2639999985694885, 0.2696666717529297, 0.27666667103767395, 0.2826666533946991, 0.28966665267944336, 0.29466667771339417, 0.29733332991600037, 0.30266666412353516, 0.3076666593551636, 0.312666654586792, 0.3166666626930237, 0.31966665387153625, 0.3243333399295807, 0.3283333480358124, 0.3336666524410248, 0.33633333444595337, 0.3423333466053009, 0.3466666638851166, 0.3486666679382324, 0.351666659116745, 0.35466668009757996, 0.35766667127609253, 0.35866665840148926, 0.3619999885559082, 0.3630000054836273, 0.3646666705608368, 0.367333322763443, 0.3683333396911621, 0.36899998784065247, 0.37066665291786194, 0.37466666102409363, 0.3776666522026062, 0.3786666691303253, 0.3799999952316284, 0.38100001215934753, 0.38333332538604736, 0.38466668128967285, 0.3863333463668823, 0.3880000114440918, 0.3889999985694885, 0.3919999897480011, 0.39399999380111694, 0.39500001072883606, 0.39533331990242004, 0.3973333239555359, 0.4000000059604645, 0.3996666669845581, 0.4020000100135803, 0.4036666750907898, 0.40433332324028015, 0.4050000011920929, 0.40700000524520874, 0.40799999237060547, 0.40966665744781494, 0.41200000047683716, 0.4143333435058594, 0.4153333306312561, 0.4163333475589752, 0.41733333468437195, 0.4203333258628845, 0.42399999499320984, 0.42633333802223206, 0.4269999861717224, 0.42800000309944153, 0.42899999022483826]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 2, 5, 0, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [15, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 5, 3, 8, 6, 9, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 3, 3, 0, 0, 2, 1, 3, 0, 0], [65, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.41600000858306885, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 6, 2, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.square(tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.square(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3025088828269125, 2.3009777965956295, 2.3003488367637703, 2.297896797977277, 2.2995873545894945, 2.2983717962798345, 2.297003817359895, 2.2967499691214086, 2.294895571771787, 2.2948757006806813, 2.294739531299237, 2.2946718650455598, 2.2930961040977507, 2.292855396530238, 2.2921533130809, 2.291386454537749, 2.289569887298052, 2.2889870738844595, 2.2882500861251924, 2.2859807387004203, 2.2864293350188993, 2.2862216360643632, 2.285681478036566, 2.2835309664492343, 2.2836313182809143, 2.282396706733658, 2.2819991192372404, 2.2811828315879974, 2.281394816817955, 2.2800881125120487, 2.2805195372763754, 2.2787133040382184, 2.279803909409583, 2.2780719940546814, 2.276971241171649, 2.274576464380807, 2.274230014945632, 2.2747151812605177, 2.273789351374765, 2.272958575301497, 2.2702169311580374, 2.269921198497123, 2.2705371850013356, 2.269633735758265, 2.268873033679755, 2.2685686636909503, 2.268207438759532, 2.2650332188546427, 2.266549571882134, 2.26437902894585, 2.2634031777967, 2.262145924010785, 2.2623317540203653, 2.2609113460644568, 2.260231229780593, 2.2610300114094666, 2.256734428373011, 2.2603364332461355, 2.2562007772735146, 2.2561994481946437, 2.255113649487952, 2.254205411593077, 2.253658554321267, 2.2529355232914945, 2.253597340170009, 2.251377253720726, 2.2506755301823564, 2.2503304894983556, 2.2497709748483903, 2.2484430318904702, 2.2464599690936766, 2.245859184190818, 2.2448754346822595, 2.2434914409051467, 2.242572515805352, 2.2419671645143704, 2.241245128223216, 2.2402881752813277, 2.2393988886246072, 2.2374575734532125, 2.2368806331479836, 2.236689165016097, 2.234917381231449, 2.2336316583588327, 2.233653234153801, 2.23377411404243, 2.2315753992002842, 2.2302444148073106, 2.228751032343945, 2.2286749516873705, 2.2276051901649914, 2.2265790463942485, 2.2250890184812353, 2.2246297224244076, 2.2252698339853523, 2.2215168514838703, 2.221650644174389, 2.2203011870809344, 2.2191812561298674, 2.217374482348201], "accuracy": [0.0874389111995697, 0.09074098616838455, 0.1006472036242485, 0.10355303436517715, 0.09959053993225098, 0.09853387624025345, 0.10196803510189056, 0.1072513535618782, 0.11227050423622131, 0.10579843819141388, 0.10685510188341141, 0.11187426000833511, 0.11015717685222626, 0.1138555034995079, 0.11557257920503616, 0.11596883088350296, 0.11847840249538422, 0.1258750557899475, 0.12521463632583618, 0.1328754425048828, 0.1290450394153595, 0.12679962813854218, 0.13842293620109558, 0.13776251673698425, 0.14238542318344116, 0.136045441031456, 0.14529123902320862, 0.1472724825143814, 0.146479994058609, 0.1620657742023468, 0.14674416184425354, 0.1546691358089447, 0.14898955821990967, 0.15612204372882843, 0.15889579057693481, 0.1636507660150528, 0.15968827903270721, 0.16021661460399628, 0.16431118547916412, 0.17144367098808289, 0.17778365314006805, 0.17038699984550476, 0.18055738508701324, 0.17500990629196167, 0.18016114830970764, 0.17540615797042847, 0.17461365461349487, 0.18835029006004333, 0.18399155139923096, 0.19323734939098358, 0.19455818831920624, 0.201294407248497, 0.19812442362308502, 0.19997358322143555, 0.19838859140872955, 0.19218069314956665, 0.20882314443588257, 0.19838859140872955, 0.20842689275741577, 0.21635186672210693, 0.2118610441684723, 0.21304979920387268, 0.22005018591880798, 0.21740853786468506, 0.22163519263267517, 0.22678641974925995, 0.22242768108844757, 0.2211068570613861, 0.2246730923652649, 0.23418307304382324, 0.23537181317806244, 0.23339056968688965, 0.23774930834770203, 0.24224013090133667, 0.24197596311569214, 0.23959846794605255, 0.24276845157146454, 0.2448817789554596, 0.244485542178154, 0.2514859437942505, 0.24976885318756104, 0.24778760969638824, 0.25544843077659607, 0.25624093413352966, 0.25941091775894165, 0.26059964299201965, 0.2619204819202423, 0.27037379145622253, 0.2620525658130646, 0.26997753977775574, 0.2719587981700897, 0.2739400267601013, 0.2705058753490448, 0.2740721106529236, 0.27024170756340027, 0.27578920125961304, 0.2735437750816345, 0.28358209133148193, 0.2786950170993805, 0.28741249442100525], "val_loss": [1.9698598044259208, 1.9691271781921387, 1.96840238571167, 1.967691285269601, 1.966974871499198, 1.9662528038024902, 1.9655382292611259, 1.9648231778826033, 1.964106627873012, 1.9633924620492118, 1.9626710755484444, 1.9619597707475935, 1.9612468310764857, 1.9605344363621302, 1.9598184994288854, 1.9591069902692522, 1.9584033829825265, 1.957685879298619, 1.9569760731288366, 1.9562576838902064, 1.9555512837001257, 1.954836027962821, 1.9541258811950684, 1.9534191404070174, 1.952709334237235, 1.9519998686654227, 1.9512818881443568, 1.9505641119820731, 1.9498469488961356, 1.9491350991385323, 1.9484216826302665, 1.9476972307477678, 1.9469773428780692, 1.9462634495326452, 1.945535114833287, 1.9448136602129256, 1.9440874372209822, 1.9433636665344238, 1.9426393508911133, 1.9419163295200892, 1.9411749839782715, 1.940431799207415, 1.939692837851388, 1.9389422961643763, 1.9381933893476213, 1.9374513626098633, 1.9367082459586007, 1.9359525271824427, 1.935199805668422, 1.9344370024544852, 1.9336773327418737, 1.9329111235482352, 1.932138442993164, 1.9313593591962541, 1.9305904933384486, 1.929814270564488, 1.9290310314723425, 1.928243773324149, 1.9274539947509766, 1.926663534981864, 1.9258576801845007, 1.925056321280343, 1.9242446081978934, 1.923433576311384, 1.92262145451137, 1.9217971393040247, 1.920973437173026, 1.9201414925711495, 1.919311455317906, 1.9184682028634208, 1.917616639818464, 1.9167519296918596, 1.9158885138375419, 1.915010724748884, 1.9141204016549247, 1.9132492882864816, 1.912362916128976, 1.9114723205566406, 1.9105675561087472, 1.9096572058541434, 1.9087506021772112, 1.9078232220241003, 1.9068910734994071, 1.9059511593409948, 1.9050111089433943, 1.9040754181998116, 1.9031297819955009, 1.9021684101649694, 1.9011963435581751, 1.900235652923584, 1.89924955368042, 1.8982562337602888, 1.8972654342651367, 1.896261215209961, 1.8952648980276925, 1.89424044745309, 1.893207618168422, 1.8921683856419154, 1.8911301749093192, 1.8900754792349679], "val_accuracy": [0.04233333468437195, 0.04899999871850014, 0.05299999937415123, 0.059333331882953644, 0.06133333221077919, 0.06566666811704636, 0.07133333384990692, 0.07699999958276749, 0.08266666531562805, 0.08900000154972076, 0.09799999743700027, 0.10700000077486038, 0.11266666650772095, 0.11933333426713943, 0.1276666671037674, 0.1340000033378601, 0.13966666162014008, 0.14666666090488434, 0.15433333814144135, 0.164000004529953, 0.16866666078567505, 0.17800000309944153, 0.18466666340827942, 0.19099999964237213, 0.20000000298023224, 0.20733332633972168, 0.21133333444595337, 0.21933333575725555, 0.22166666388511658, 0.2293333262205124, 0.234333336353302, 0.23866666853427887, 0.2433333396911621, 0.24933333694934845, 0.257999986410141, 0.2639999985694885, 0.2696666717529297, 0.27666667103767395, 0.2826666533946991, 0.28966665267944336, 0.29466667771339417, 0.29733332991600037, 0.30266666412353516, 0.3076666593551636, 0.312666654586792, 0.3166666626930237, 0.31966665387153625, 0.3243333399295807, 0.3283333480358124, 0.3336666524410248, 0.33633333444595337, 0.3423333466053009, 0.3466666638851166, 0.3486666679382324, 0.351666659116745, 0.35466668009757996, 0.35766667127609253, 0.35866665840148926, 0.3619999885559082, 0.3630000054836273, 0.3646666705608368, 0.367333322763443, 0.3683333396911621, 0.36899998784065247, 0.37066665291786194, 0.37466666102409363, 0.3776666522026062, 0.3786666691303253, 0.3799999952316284, 0.38100001215934753, 0.38333332538604736, 0.38466668128967285, 0.3863333463668823, 0.3880000114440918, 0.3889999985694885, 0.3919999897480011, 0.39399999380111694, 0.39500001072883606, 0.39533331990242004, 0.3973333239555359, 0.4000000059604645, 0.3996666669845581, 0.4020000100135803, 0.4036666750907898, 0.40433332324028015, 0.4050000011920929, 0.40700000524520874, 0.40799999237060547, 0.40966665744781494, 0.41200000047683716, 0.4143333435058594, 0.4153333306312561, 0.4163333475589752, 0.41733333468437195, 0.4203333258628845, 0.42399999499320984, 0.42633333802223206, 0.4269999861717224, 0.42800000309944153, 0.42899999022483826]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 6, 9, 3, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 1, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [37, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [97, 25, 50, 71, 34]], "fitness": -0.3677142858505249, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.438984981097754, 2.193201442546439, 2.3083337153803956, 2.3035155307221578, 2.3033245816568986, 2.303009288910279], "accuracy": [0.190859854221344, 0.2032756507396698, 0.09774138033390045, 0.09959053993225098, 0.10011887550354004, 0.09906221181154251], "val_loss": [1.5400770051138741, 1.9805001531328474, 1.9742625100272042, 1.9736676897321428, 1.973759310586112, 1.9736627170017786], "val_accuracy": [0.3943333327770233, 0.09833333641290665, 0.09833333641290665, 0.10400000214576721, 0.09833333641290665, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 3, 5, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.3677142858505249, "mapping_values": [1, 10, 10, 7, 3, 2, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(tf.math.square(grad), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.438984981097754, 2.193201442546439, 2.3083337153803956, 2.3035155307221578, 2.3033245816568986, 2.303009288910279], "accuracy": [0.190859854221344, 0.2032756507396698, 0.09774138033390045, 0.09959053993225098, 0.10011887550354004, 0.09906221181154251], "val_loss": [1.5400770051138741, 1.9805001531328474, 1.9742625100272042, 1.9736676897321428, 1.973759310586112, 1.9736627170017786], "val_accuracy": [0.3943333327770233, 0.09833333641290665, 0.09833333641290665, 0.10400000214576721, 0.09833333641290665, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 0, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [15, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.3677142858505249, "mapping_values": [1, 7, 7, 4, 3, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.438984981097754, 2.193201442546439, 2.3083337153803956, 2.3035155307221578, 2.3033245816568986, 2.303009288910279], "accuracy": [0.190859854221344, 0.2032756507396698, 0.09774138033390045, 0.09959053993225098, 0.10011887550354004, 0.09906221181154251], "val_loss": [1.5400770051138741, 1.9805001531328474, 1.9742625100272042, 1.9736676897321428, 1.973759310586112, 1.9736627170017786], "val_accuracy": [0.3943333327770233, 0.09833333641290665, 0.09833333641290665, 0.10400000214576721, 0.09833333641290665, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 5, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [7, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [8, 4, 0, 5, 6, 4, 4, 9, 5, 1, 8, 9, 0, 1, 2, 0, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [24, 33, 83, 87, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [38, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 5, 2, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))))))), grad), lambda shape,  alpha, beta, grad: tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, beta))", "other_info": {"loss": [2.3184254743860477, 3.2826599537531114, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06366398185491562, 0.023642847314476967, 0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0326155935015, 381.35382080078125, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.004999999888241291, 0.10000000149011612, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [9, 3, 5, 8, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 0, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [1, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [84, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3026237780659535, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 9, 5, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 0, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [1, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 5, 0, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.square(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3020700398154026, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 0, 2, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [0, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [57, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [5, 3], [], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [83, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 6, 4, 3, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.add(grad, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))), tf.math.add(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [5777947.487097057, 234.97615226813122, 604.8077456104347, 903.0215638875804, 1123.1119408950735, 1288.4322227122304], "accuracy": [0.09259014576673508, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [55.61952863420759, 397.7346627371652, 681.501447405134, 894.9630998883929, 1056.7259347098213, 1171.271484375], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 6, 0, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [15, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1], [0, 1, 5, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [79, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 5, 4, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.square(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), beta))", "other_info": {"loss": [1345787946.2621706, 25376298616.577995, 119076771480.4977, 323650575062.8493, 706187453202.6311, 1301869742548.7866], "accuracy": [0.09232597798109055, 0.10593052208423615, 0.10091137140989304, 0.10315678268671036, 0.10500594228506088, 0.09602430462837219], "val_loss": [5064461165.714286, 40503817947.42857, 136686178889.14285, 323981925229.7143, 632761427090.2858, 1093394572434.2858], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [3, 6, 5, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [24, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [88, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [6, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [0, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 5, 2, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.divide_no_nan(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.349865552063049, 2.8305817142280496, 4.256745935572829, 6.511486175463043, 9.902787523215489, 14.222246200023404, 19.502769288826517], "accuracy": [0.08942015469074249, 0.10408136248588562, 0.09866596013307571, 0.1018359512090683, 0.10421344637870789, 0.09496764093637466, 0.10487385839223862], "val_loss": [2.0618251391819546, 2.5522830145699635, 3.677126884460449, 5.444365910121372, 7.808786119733538, 10.78079468863351, 14.397671290806361], "val_accuracy": [0.0989999994635582, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 6, 9, 3, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [15, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [37, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1], [0, 9, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [97, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 2, 0, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1256142732.8985462, 23685707885.554882, 111142673043.76384, 302088090601.4128, 659142889455.2286, 1215125277906.8594], "accuracy": [0.09232597798109055, 0.10593052208423615, 0.10091137140989304, 0.10315678268671036, 0.10513802617788315, 0.09602430462837219], "val_loss": [4727079497.142858, 37805251437.71429, 127579722313.14285, 302393805092.5714, 590589703899.4286, 1020542021046.8572], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 5, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [24, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 0, 0, 2, 1, 3, 0, 0], [32, 66, 57, 8, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 9, 5, 9, 2, 9], [3, 1, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 5, 2, 1, 14, 14, 9, 5, 6, 1, 1, 0, 1, 0, 2, 2, 0, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), beta)), tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [9250.072227989442, 168470.31786174217, 783423.7281402721, 2121113.267203804, 4618286.978668604, 8502469.549465064], "accuracy": [0.09219389408826828, 0.10593052208423615, 0.10091137140989304, 0.10328886657953262, 0.10513802617788315, 0.09589222073554993], "val_loss": [34048.11607142857, 267336.4464285714, 897062.2142857143, 2120419.3571428573, 4134597.5714285714, 7136788.142857143], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 8, 6, 3, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 9, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 2, 2, 2, 1, 3, 0, 0], [32, 12, 83, 82, 91, 78], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 3, 3, 2, 1, 0, 4, 4, 3, 1, 1, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.pow(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.square(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.302828323130972, 2.302070879933069, 2.302207379655406, 2.300485025921581, 2.3029580038804043, 2.302537198583794], "accuracy": [0.08638224750757217, 0.08875974267721176, 0.09602430462837219, 0.09800554811954498, 0.08994849026203156, 0.09008057415485382], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 2, 5, 0, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 71, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 4, 3, 2, 6, 6, 9, 2, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 66, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [93, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 31, 31, 23, 8, 4, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.negative(tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), grad))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(alpha, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)))))), tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, grad))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.square(sigma), beta))", "other_info": {"loss": [2.3028272750780427, 2.302066966385464, 2.3022004115724797, 2.3004766408368313, 2.302946910567177, 2.3025235862716817], "accuracy": [0.08638224750757217, 0.08875974267721176, 0.09602430462837219, 0.09800554811954498, 0.08981640636920929, 0.09021265059709549], "val_loss": [1.9705873216901506, 1.9705845969063895, 1.9705820083618164, 1.9705801691327776, 1.9705778530665807, 1.9705756732395716], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 6, 9, 3, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 1, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 0, 0, 2, 1, 3, 0, 0], [37, 33, 83, 82, 91, 78], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [2, 3], [], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [97, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302828323130972, 2.302070879933069, 2.302207379655406, 2.300485025921581, 2.3029580038804043, 2.302537198583794], "accuracy": [0.08638224750757217, 0.08875974267721176, 0.09602430462837219, 0.09800554811954498, 0.08994849026203156, 0.09008057415485382], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [3, 6, 5, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [23, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [9, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [5, 3], [], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 2, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 7, 7, 4, 3, 1, 1, 1, 0, 1, 1, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.square(tf.math.add(alpha, grad))), tf.math.square(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302828323130972, 2.302070879933069, 2.302207379655406, 2.300485025921581, 2.3029580038804043, 2.302537198583794], "accuracy": [0.08638224750757217, 0.08875974267721176, 0.09602430462837219, 0.09800554811954498, 0.08994849026203156, 0.09008057415485382], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 2, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [24, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 66, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [4, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 8, 8, 5, 3, 2, 1, 1, 0, 1, 1, 3, 1, 1, 0, 0, 6, 4, 2, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(sigma, tf.math.square(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302828323130972, 2.302070879933069, 2.302207379655406, 2.300485025921581, 2.3029580038804043, 2.302537198583794], "accuracy": [0.08638224750757217, 0.08875974267721176, 0.09602430462837219, 0.09800554811954498, 0.08994849026203156, 0.09008057415485382], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]