[{"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 8, 2, 4, 5, 3, 2, 1, 2, 1, 5, 2, 9, 3, 2, 6, 9, 5, 0, 2, 8, 2, 0, 9, 2], [0, 0, 2, 2, 2, 2, 1, 2, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 10, 35, 27, 57, 79, 53, 52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.7968571186065674, "mapping_values": [1, 24, 24, 14, 10, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(tf.math.subtract(tf.math.add(alpha, grad), grad), grad))))), tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), alpha)))), tf.math.multiply(tf.math.add(alpha, grad), grad)))))), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.145704715888986, 1.9591931214406269, 1.6319469568704523, 1.1624844160377232, 0.978054804352249, 0.9434474379536718, 0.8159165060074574, 0.7712528801880745, 0.7232925306694178, 0.6799118789416011, 0.6766312478429779, 0.6255069385272731, 0.6167287038238908, 0.5971868808526782, 0.5753132770515279, 0.5891704727330811, 0.5675281845205385, 0.5655472907155906, 0.5444986664655265, 0.5292535420768469, 0.513794385580701], "accuracy": [0.2843745946884155, 0.38607844710350037, 0.45066702365875244, 0.5600317120552063, 0.6283186078071594, 0.6479989290237427, 0.6894729733467102, 0.7078325152397156, 0.7232862114906311, 0.7359662055969238, 0.7395324110984802, 0.7613261342048645, 0.763967752456665, 0.7680623531341553, 0.7823272943496704, 0.7711002230644226, 0.7835160493850708, 0.7848368883132935, 0.7950072884559631, 0.7985734939575195, 0.8084797263145447], "val_loss": [1.9272839001246862, 1.7780702454703194, 0.9944456986018589, 0.7527390037264142, 0.7625566039766584, 0.7069750002452305, 0.6078132561274937, 0.5758755207061768, 0.567732572555542, 0.5771205936159406, 0.49673937048230854, 0.49768476826804026, 0.48599396433149067, 0.48527748244149344, 0.5251438617706299, 0.43880800689969746, 0.4248628616333008, 0.42800718545913696, 0.47066313879830496, 0.40347496952329365, 0.41580880539757864], "val_accuracy": [0.39933332800865173, 0.4269999861717224, 0.5273333191871643, 0.6476666927337646, 0.6416666507720947, 0.6506666541099548, 0.7293333411216736, 0.7433333396911621, 0.7386666536331177, 0.7129999995231628, 0.7680000066757202, 0.7763333320617676, 0.7699999809265137, 0.7900000214576721, 0.7693333625793457, 0.8190000057220459, 0.8069999814033508, 0.8033333420753479, 0.8003333210945129, 0.8169999718666077, 0.8076666593551636]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [3, 8, 0, 4, 5, 1, 0, 5, 2, 1, 8, 2, 9, 3, 2, 1, 0, 5, 0, 2, 3, 2, 0, 8, 2, 9, 2, 1, 0, 4, 6, 9], [2, 1, 2, 1, 2, 0, 1, 2, 2, 0, 0, 2, 2, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [47, 55, 35, 17, 95, 52, 54], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [7, 3], [], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1], [1, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.7968571186065674, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.145704715888986, 1.9591931214406269, 1.6319469568704523, 1.1624844160377232, 0.978054804352249, 0.9434474379536718, 0.8159165060074574, 0.7712528801880745, 0.7232925306694178, 0.6799118789416011, 0.6766312478429779, 0.6255069385272731, 0.6167287038238908, 0.5971868808526782, 0.5753132770515279, 0.5891704727330811, 0.5675281845205385, 0.5655472907155906, 0.5444986664655265, 0.5292535420768469, 0.513794385580701], "accuracy": [0.2843745946884155, 0.38607844710350037, 0.45066702365875244, 0.5600317120552063, 0.6283186078071594, 0.6479989290237427, 0.6894729733467102, 0.7078325152397156, 0.7232862114906311, 0.7359662055969238, 0.7395324110984802, 0.7613261342048645, 0.763967752456665, 0.7680623531341553, 0.7823272943496704, 0.7711002230644226, 0.7835160493850708, 0.7848368883132935, 0.7950072884559631, 0.7985734939575195, 0.8084797263145447], "val_loss": [1.9272839001246862, 1.7780702454703194, 0.9944456986018589, 0.7527390037264142, 0.7625566039766584, 0.7069750002452305, 0.6078132561274937, 0.5758755207061768, 0.567732572555542, 0.5771205936159406, 0.49673937048230854, 0.49768476826804026, 0.48599396433149067, 0.48527748244149344, 0.5251438617706299, 0.43880800689969746, 0.4248628616333008, 0.42800718545913696, 0.47066313879830496, 0.40347496952329365, 0.41580880539757864], "val_accuracy": [0.39933332800865173, 0.4269999861717224, 0.5273333191871643, 0.6476666927337646, 0.6416666507720947, 0.6506666541099548, 0.7293333411216736, 0.7433333396911621, 0.7386666536331177, 0.7129999995231628, 0.7680000066757202, 0.7763333320617676, 0.7699999809265137, 0.7900000214576721, 0.7693333625793457, 0.8190000057220459, 0.8069999814033508, 0.8033333420753479, 0.8003333210945129, 0.8169999718666077, 0.8076666593551636]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [3, 8, 0, 4, 5, 1, 0, 5, 2, 1, 8, 2, 9, 3, 2, 1, 0, 5, 0, 2, 3, 2, 0, 8, 2, 9, 2, 1, 0, 4, 6, 9], [0, 2, 0, 2, 2, 0, 1, 2, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [47, 55, 35, 17, 95, 52, 54], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [7, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.7968571186065674, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.145704715888986, 1.9591931214406269, 1.6319469568704523, 1.1624844160377232, 0.978054804352249, 0.9434474379536718, 0.8159165060074574, 0.7712528801880745, 0.7232925306694178, 0.6799118789416011, 0.6766312478429779, 0.6255069385272731, 0.6167287038238908, 0.5971868808526782, 0.5753132770515279, 0.5891704727330811, 0.5675281845205385, 0.5655472907155906, 0.5444986664655265, 0.5292535420768469, 0.513794385580701], "accuracy": [0.2843745946884155, 0.38607844710350037, 0.45066702365875244, 0.5600317120552063, 0.6283186078071594, 0.6479989290237427, 0.6894729733467102, 0.7078325152397156, 0.7232862114906311, 0.7359662055969238, 0.7395324110984802, 0.7613261342048645, 0.763967752456665, 0.7680623531341553, 0.7823272943496704, 0.7711002230644226, 0.7835160493850708, 0.7848368883132935, 0.7950072884559631, 0.7985734939575195, 0.8084797263145447], "val_loss": [1.9272839001246862, 1.7780702454703194, 0.9944456986018589, 0.7527390037264142, 0.7625566039766584, 0.7069750002452305, 0.6078132561274937, 0.5758755207061768, 0.567732572555542, 0.5771205936159406, 0.49673937048230854, 0.49768476826804026, 0.48599396433149067, 0.48527748244149344, 0.5251438617706299, 0.43880800689969746, 0.4248628616333008, 0.42800718545913696, 0.47066313879830496, 0.40347496952329365, 0.41580880539757864], "val_accuracy": [0.39933332800865173, 0.4269999861717224, 0.5273333191871643, 0.6476666927337646, 0.6416666507720947, 0.6506666541099548, 0.7293333411216736, 0.7433333396911621, 0.7386666536331177, 0.7129999995231628, 0.7680000066757202, 0.7763333320617676, 0.7699999809265137, 0.7900000214576721, 0.7693333625793457, 0.8190000057220459, 0.8069999814033508, 0.8033333420753479, 0.8003333210945129, 0.8169999718666077, 0.8076666593551636]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [3, 8, 3, 4, 5, 1, 0, 5, 2, 1, 5, 2, 9, 3, 2, 1, 0, 5, 0, 2, 3, 2, 0, 8, 2, 9, 2, 1, 0, 4, 6, 9], [2, 1, 2, 1, 2, 2, 2, 2, 2, 0, 0, 2, 2, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [47, 55, 35, 17, 95, 52, 54], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [7, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [45, 25, 50, 71, 34]], "fitness": -0.7879999876022339, "mapping_values": [1, 8, 8, 4, 4, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, grad), tf.math.pow(tf.math.add(alpha, alpha), grad)))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.058332812485363, 1.5635147446166444, 1.056620796657966, 0.8978897011464282, 0.8097630607185898, 0.7643214137232015, 0.7210805136545569, 0.6721794486848859, 0.6833857524632746, 0.6532956881766243, 0.6297991602506777, 0.6080877370271291, 0.5799890931146083, 0.590620591396102, 0.5633058583834042, 0.5404389748452377, 0.5558229523674372], "accuracy": [0.3082816004753113, 0.45410117506980896, 0.6052040457725525, 0.6650376319885254, 0.6991150379180908, 0.7094175219535828, 0.7255316376686096, 0.746268630027771, 0.7378153204917908, 0.7417778372764587, 0.7622507214546204, 0.7662131786346436, 0.7774402499198914, 0.7691190242767334, 0.7860256433486938, 0.8001585006713867, 0.7876105904579163], "val_loss": [1.611388887677874, 0.915508508682251, 0.7993455444063459, 0.7160482406616211, 0.6272636822291783, 0.5601826565606254, 0.5438097204480853, 0.5124847037451608, 0.5055300167628697, 0.49941560200282503, 0.49251253264290945, 0.44293894938060213, 0.4703759636197771, 0.4573648827416556, 0.4338822620255606, 0.4624527096748352, 0.4309330497469221], "val_accuracy": [0.47699999809265137, 0.5910000205039978, 0.6353333592414856, 0.6863333582878113, 0.718666672706604, 0.7383333444595337, 0.762666642665863, 0.7663333415985107, 0.7526666522026062, 0.7756666541099548, 0.7799999713897705, 0.8146666884422302, 0.7916666865348816, 0.8109999895095825, 0.8140000104904175, 0.7770000100135803, 0.8069999814033508]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [3, 2, 3, 4, 5, 1, 0, 5, 2, 1, 5, 2, 9, 3, 2, 1, 0, 5, 0, 2, 3, 2, 0, 8, 2, 9, 2, 1, 0, 4, 6, 9], [2, 3, 2, 1, 2, 2, 2, 2, 2, 0, 0, 2, 2, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [47, 55, 35, 17, 95, 52, 54], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [7, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [45, 25, 50, 71, 34]], "fitness": -0.7879999876022339, "mapping_values": [1, 9, 9, 4, 5, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.add(alpha, grad), tf.math.pow(tf.math.add(alpha, grad), grad)), tf.math.add(alpha, alpha)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.058332812485363, 1.5635147446166444, 1.056620796657966, 0.8978897011464282, 0.8097630607185898, 0.7643214137232015, 0.7210805136545569, 0.6721794486848859, 0.6833857524632746, 0.6532956881766243, 0.6297991602506777, 0.6080877370271291, 0.5799890931146083, 0.590620591396102, 0.5633058583834042, 0.5404389748452377, 0.5558229523674372], "accuracy": [0.3082816004753113, 0.45410117506980896, 0.6052040457725525, 0.6650376319885254, 0.6991150379180908, 0.7094175219535828, 0.7255316376686096, 0.746268630027771, 0.7378153204917908, 0.7417778372764587, 0.7622507214546204, 0.7662131786346436, 0.7774402499198914, 0.7691190242767334, 0.7860256433486938, 0.8001585006713867, 0.7876105904579163], "val_loss": [1.611388887677874, 0.915508508682251, 0.7993455444063459, 0.7160482406616211, 0.6272636822291783, 0.5601826565606254, 0.5438097204480853, 0.5124847037451608, 0.5055300167628697, 0.49941560200282503, 0.49251253264290945, 0.44293894938060213, 0.4703759636197771, 0.4573648827416556, 0.4338822620255606, 0.4624527096748352, 0.4309330497469221], "val_accuracy": [0.47699999809265137, 0.5910000205039978, 0.6353333592414856, 0.6863333582878113, 0.718666672706604, 0.7383333444595337, 0.762666642665863, 0.7663333415985107, 0.7526666522026062, 0.7756666541099548, 0.7799999713897705, 0.8146666884422302, 0.7916666865348816, 0.8109999895095825, 0.8140000104904175, 0.7770000100135803, 0.8069999814033508]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 8, 8, 4, 5, 1, 4, 1, 5, 1, 5, 2, 9, 3, 1, 6, 0, 5, 0, 2, 8, 2, 0, 9, 2], [2, 1, 2, 1, 2, 2, 2, 2, 2, 0, 0, 2, 2, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [47, 55, 35, 17, 95, 52, 54], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [7, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [45, 25, 50, 71, 34]], "fitness": -0.7879999876022339, "mapping_values": [1, 15, 15, 9, 6, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.subtract(tf.math.add(alpha, alpha), grad)), tf.math.add(alpha, tf.math.pow(alpha, tf.math.subtract(tf.math.square(tf.math.add(alpha, grad)), grad))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.058332812485363, 1.5635147446166444, 1.056620796657966, 0.8978897011464282, 0.8097630607185898, 0.7643214137232015, 0.7210805136545569, 0.6721794486848859, 0.6833857524632746, 0.6532956881766243, 0.6297991602506777, 0.6080877370271291, 0.5799890931146083, 0.590620591396102, 0.5633058583834042, 0.5404389748452377, 0.5558229523674372], "accuracy": [0.3082816004753113, 0.45410117506980896, 0.6052040457725525, 0.6650376319885254, 0.6991150379180908, 0.7094175219535828, 0.7255316376686096, 0.746268630027771, 0.7378153204917908, 0.7417778372764587, 0.7622507214546204, 0.7662131786346436, 0.7774402499198914, 0.7691190242767334, 0.7860256433486938, 0.8001585006713867, 0.7876105904579163], "val_loss": [1.611388887677874, 0.915508508682251, 0.7993455444063459, 0.7160482406616211, 0.6272636822291783, 0.5601826565606254, 0.5438097204480853, 0.5124847037451608, 0.5055300167628697, 0.49941560200282503, 0.49251253264290945, 0.44293894938060213, 0.4703759636197771, 0.4573648827416556, 0.4338822620255606, 0.4624527096748352, 0.4309330497469221], "val_accuracy": [0.47699999809265137, 0.5910000205039978, 0.6353333592414856, 0.6863333582878113, 0.718666672706604, 0.7383333444595337, 0.762666642665863, 0.7663333415985107, 0.7526666522026062, 0.7756666541099548, 0.7799999713897705, 0.8146666884422302, 0.7916666865348816, 0.8109999895095825, 0.8140000104904175, 0.7770000100135803, 0.8069999814033508]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [3, 8, 3, 4, 5, 1, 0, 5, 2, 1, 5, 2, 9, 3, 2, 1, 0, 5, 0, 2, 3, 2, 0, 8, 2, 9, 2, 1, 0, 4, 6, 9], [2, 1, 1, 1, 2, 2, 2, 2, 2, 0, 0, 2, 2, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [47, 55, 35, 17, 95, 52, 54], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [7, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [45, 25, 50, 71, 34]], "fitness": -0.7879999876022339, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.058332812485363, 1.5635147446166444, 1.056620796657966, 0.8978897011464282, 0.8097630607185898, 0.7643214137232015, 0.7210805136545569, 0.6721794486848859, 0.6833857524632746, 0.6532956881766243, 0.6297991602506777, 0.6080877370271291, 0.5799890931146083, 0.590620591396102, 0.5633058583834042, 0.5404389748452377, 0.5558229523674372], "accuracy": [0.3082816004753113, 0.45410117506980896, 0.6052040457725525, 0.6650376319885254, 0.6991150379180908, 0.7094175219535828, 0.7255316376686096, 0.746268630027771, 0.7378153204917908, 0.7417778372764587, 0.7622507214546204, 0.7662131786346436, 0.7774402499198914, 0.7691190242767334, 0.7860256433486938, 0.8001585006713867, 0.7876105904579163], "val_loss": [1.611388887677874, 0.915508508682251, 0.7993455444063459, 0.7160482406616211, 0.6272636822291783, 0.5601826565606254, 0.5438097204480853, 0.5124847037451608, 0.5055300167628697, 0.49941560200282503, 0.49251253264290945, 0.44293894938060213, 0.4703759636197771, 0.4573648827416556, 0.4338822620255606, 0.4624527096748352, 0.4309330497469221], "val_accuracy": [0.47699999809265137, 0.5910000205039978, 0.6353333592414856, 0.6863333582878113, 0.718666672706604, 0.7383333444595337, 0.762666642665863, 0.7663333415985107, 0.7526666522026062, 0.7756666541099548, 0.7799999713897705, 0.8146666884422302, 0.7916666865348816, 0.8109999895095825, 0.8140000104904175, 0.7770000100135803, 0.8069999814033508]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [3, 8, 6, 4, 5, 1, 0, 5, 2, 1, 8, 2, 9, 3, 2, 1, 0, 5, 0, 2, 3, 2, 0, 8, 2, 9, 2, 1, 0, 4, 6, 9], [0, 2, 0, 2, 2, 0, 1, 2, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [47, 55, 35, 17, 95, 52, 54], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [7, 3], [], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [29, 25, 50, 71, 34]], "fitness": -0.7717142701148987, "mapping_values": [1, 8, 8, 4, 4, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(alpha, grad), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.288588600167509, 2.255207561152313, 2.2127139818682537, 2.1549786637724035, 2.0696304555834244, 1.9482766886617782, 1.795313824830731, 1.632803928582833, 1.4853103908927543, 1.368426823313714, 1.2789839537010501, 1.2108982400714037, 1.1521744923490214, 1.1123825428335028, 1.0769858721177719, 1.0238238776506388, 1.0058674108334946, 0.9800794096891167, 0.9552850356002478, 0.9391155063184875, 0.9229313948009276, 0.9004515892463258, 0.8976074264049845, 0.8721646793514368, 0.8669361647377397, 0.8480576573582121, 0.8347693512767549, 0.8365781496087904, 0.8255333157342107, 0.8229825392989372, 0.8100448603706274, 0.8002245571981442, 0.8002009709056783, 0.78643908301963, 0.7790843566505428, 0.7755289324727183, 0.7696326346193338, 0.7614326485159721, 0.7564755777294893, 0.7557318911355925, 0.7454531331654978, 0.7476993838967019, 0.7371672524311256, 0.7257917813573924, 0.7293428877136569, 0.7353940153984803, 0.7225047080209148, 0.7238886508455429, 0.7148651531060389, 0.7089895127770954, 0.7121617414255058, 0.7035412986233501, 0.7039134373297671, 0.7020170071011348, 0.6999672280562756, 0.6965307014146894, 0.6839402747774609, 0.6848864671560783, 0.6763907610984321, 0.6856005538834116, 0.6758496368707619], "accuracy": [0.12534672021865845, 0.22242768108844757, 0.28926166892051697, 0.3413023352622986, 0.3883238732814789, 0.4247787594795227, 0.4574032425880432, 0.49108439683914185, 0.5213313698768616, 0.54655921459198, 0.5635979175567627, 0.5822216272354126, 0.5950337052345276, 0.6040153503417969, 0.6206578016281128, 0.6382247805595398, 0.6415268778800964, 0.6483951807022095, 0.6616035103797913, 0.670320987701416, 0.6738871932029724, 0.6812838315963745, 0.6793025732040405, 0.6857746839523315, 0.6923788189888, 0.6946242451667786, 0.698190450668335, 0.7049266695976257, 0.7059833407402039, 0.7071720957756042, 0.709549605846405, 0.7096816897392273, 0.7057191729545593, 0.7150970697402954, 0.722229540348053, 0.7127195596694946, 0.7201162576675415, 0.7272487282752991, 0.7246070504188538, 0.7277770638465881, 0.7281733155250549, 0.7314753532409668, 0.7318716049194336, 0.7357020378112793, 0.7314753532409668, 0.7257958054542542, 0.7375511527061462, 0.7415136694908142, 0.7407211661338806, 0.7353057861328125, 0.7432307600975037, 0.7400607466697693, 0.7430986762046814, 0.7405890822410583, 0.7415136694908142, 0.7473253011703491, 0.750759482383728, 0.7495707273483276, 0.7511557340621948, 0.7508915662765503, 0.7515519857406616], "val_loss": [1.9396954945155553, 1.904907499040876, 1.8572216715131487, 1.7874324662344796, 1.6862775938851493, 1.5500355448041643, 1.3875749111175537, 1.224935497556414, 1.0891447748456682, 0.9841292926243373, 0.9048514025551933, 0.8462485415594918, 0.8000813552311489, 0.7667162418365479, 0.7368556090763637, 0.7119007791791644, 0.693804281098502, 0.6765001160757882, 0.66121016229902, 0.6498206002371651, 0.639666029385158, 0.625173704964774, 0.6170446532113212, 0.6107117789132255, 0.599982466016497, 0.5932576486042568, 0.5865661246435983, 0.5807140384401593, 0.5762888363429478, 0.5715628010886056, 0.5649120126451764, 0.5604159491402763, 0.5582561152321952, 0.5534310000283378, 0.5475430829184396, 0.5453457491738456, 0.5423446212496076, 0.537619778088161, 0.5362296785627093, 0.5308234180722918, 0.5276225805282593, 0.5279291868209839, 0.5258211748940604, 0.5184637989316668, 0.5183323792048863, 0.5164434569222587, 0.5128728491919381, 0.5112110035760062, 0.5088224751608712, 0.5066248519080025, 0.5066336223057338, 0.504421421459743, 0.49970524651663645, 0.4992643765040806, 0.49914237431117464, 0.4960384028298514, 0.49240813936506, 0.49321746826171875, 0.4897987331662859, 0.48782256671360563, 0.48707032203674316], "val_accuracy": [0.29866665601730347, 0.382999986410141, 0.44566667079925537, 0.49300000071525574, 0.5416666865348816, 0.5630000233650208, 0.5803333520889282, 0.6060000061988831, 0.6326666474342346, 0.668666660785675, 0.6816666722297668, 0.6846666932106018, 0.7023333311080933, 0.6996666789054871, 0.7126666903495789, 0.7103333473205566, 0.7120000123977661, 0.7243333458900452, 0.7289999723434448, 0.7386666536331177, 0.7423333525657654, 0.7446666955947876, 0.7436666488647461, 0.7490000128746033, 0.7490000128746033, 0.7573333382606506, 0.7563333511352539, 0.7596666812896729, 0.7609999775886536, 0.7636666893959045, 0.7663333415985107, 0.7649999856948853, 0.765666663646698, 0.7680000066757202, 0.7733333110809326, 0.7680000066757202, 0.7760000228881836, 0.7723333239555359, 0.7749999761581421, 0.778333306312561, 0.7799999713897705, 0.7756666541099548, 0.7776666879653931, 0.781333327293396, 0.784333348274231, 0.7799999713897705, 0.7839999794960022, 0.7839999794960022, 0.7883333563804626, 0.7846666574478149, 0.7886666655540466, 0.7870000004768372, 0.7860000133514404, 0.7896666526794434, 0.7873333096504211, 0.7993333339691162, 0.7946666479110718, 0.7873333096504211, 0.793666660785675, 0.7976666688919067, 0.7993333339691162]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [3, 8, 3, 4, 5, 1, 0, 5, 2, 1, 5, 2, 9, 3, 2, 1, 0, 5, 0, 2, 3, 2, 0, 8, 2, 9, 2, 1, 0, 4, 6, 9], [0, 0, 0, 2, 2, 0, 1, 2, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 10, 35, 27, 57, 79, 53, 52], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [6, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [28, 25, 50, 71, 34]], "fitness": -0.7491428852081299, "mapping_values": [1, 13, 13, 8, 5, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad))))), tf.math.square(grad)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2909970088578833, 2.26416220767009, 2.2324034320585415, 2.193325516475647, 2.140252017924468, 2.06500920574222, 1.9655463249928065, 1.844367776170871, 1.7094315555605513, 1.580992814320237, 1.467137145848086, 1.3745983268260138, 1.2973379420723976, 1.2430392583410705, 1.1963720795437802, 1.1311470819360403, 1.1041966223241222, 1.071237129038351, 1.0393567824203105, 1.020085241942279, 0.9998716852054337, 0.9710344277620473, 0.965682563150658, 0.937794779640037, 0.9282753099272233, 0.9073127713091322, 0.8926459525271083, 0.8911857541840956, 0.8787624669931569, 0.8756708490960334, 0.8604010957311787, 0.8498175738037632, 0.8487822372269999, 0.8333523947139851, 0.8243596806360541, 0.8215228968513105, 0.8126080533091765, 0.8018197276966683, 0.7985012090799752, 0.7976586696824787, 0.7853707607317405, 0.7862443422849199, 0.7757090937192209, 0.7641801166496635, 0.766671242290059, 0.773024971246436, 0.7592726369669975, 0.7602333437891022, 0.7508986762265614], "accuracy": [0.11900673806667328, 0.19693566858768463, 0.25901466608047485, 0.30603620409965515, 0.3551710546016693, 0.38845595717430115, 0.4173821210861206, 0.45383700728416443, 0.4760269522666931, 0.5065380930900574, 0.5272751450538635, 0.5406154990196228, 0.5601637959480286, 0.5700700283050537, 0.5849953889846802, 0.6071853041648865, 0.6089023947715759, 0.6210539937019348, 0.637432336807251, 0.6375643610954285, 0.6482630968093872, 0.6585655808448792, 0.6553955674171448, 0.667811393737793, 0.6730946898460388, 0.6787742972373962, 0.681547999382019, 0.6897371411323547, 0.6859067678451538, 0.6931713223457336, 0.693831741809845, 0.6954167485237122, 0.6911900639533997, 0.7010962963104248, 0.709021270275116, 0.6995112895965576, 0.7066437602043152, 0.7125874757766724, 0.7113987803459167, 0.7137762308120728, 0.713379979133606, 0.7170783281326294, 0.7190595865249634, 0.724739134311676, 0.7191916704177856, 0.7124554514884949, 0.7250033020973206, 0.7281733155250549, 0.7279091477394104], "val_loss": [1.9452801431928362, 1.9184165682111467, 1.8847573144095284, 1.8400039672851562, 1.7779711314610072, 1.6940842356000627, 1.5851726191384452, 1.4563605104173933, 1.3197272845676966, 1.1910905838012695, 1.0822587353842599, 0.99529801096235, 0.9269731044769287, 0.8745659419468471, 0.8320428133010864, 0.7945844786507743, 0.7663839374269757, 0.7425309419631958, 0.721383912222726, 0.7057874373027256, 0.6911908217838832, 0.67422502381461, 0.6622110434940883, 0.6528506789888654, 0.6407379933765956, 0.6322026763643537, 0.6236522197723389, 0.616821425301688, 0.6103872231074742, 0.6045625720705304, 0.5968403816223145, 0.5912595646721976, 0.5883574826376778, 0.5828749792916434, 0.5765550306865147, 0.5738229070390973, 0.5685502461024693, 0.5639288936342511, 0.5619321891239711, 0.5571001427514213, 0.552990368434361, 0.551946588924953, 0.5493346793310983, 0.5423088584627423, 0.5413397039685931, 0.5397041014262608, 0.5358313151768276, 0.5341391393116542, 0.5306920494352069], "val_accuracy": [0.26100000739097595, 0.3636666536331177, 0.41733333468437195, 0.4596666693687439, 0.5090000033378601, 0.5400000214576721, 0.5573333501815796, 0.574999988079071, 0.5843333601951599, 0.6143333315849304, 0.640333354473114, 0.6613333225250244, 0.6786666512489319, 0.684333324432373, 0.6983333230018616, 0.6986666917800903, 0.6986666917800903, 0.7106666564941406, 0.7136666774749756, 0.721666693687439, 0.7246666550636292, 0.7250000238418579, 0.7293333411216736, 0.737333357334137, 0.7363333106040955, 0.7416666746139526, 0.7426666617393494, 0.75, 0.750333309173584, 0.7513333559036255, 0.7556666731834412, 0.7573333382606506, 0.7556666731834412, 0.7630000114440918, 0.7620000243186951, 0.7616666555404663, 0.7630000114440918, 0.765333354473114, 0.7670000195503235, 0.7699999809265137, 0.7720000147819519, 0.7703333497047424, 0.7680000066757202, 0.7773333191871643, 0.7760000228881836, 0.7716666460037231, 0.7760000228881836, 0.7763333320617676, 0.7763333320617676]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 8, 1, 4, 5, 1, 6, 3, 2, 1, 5, 2, 9, 3, 2, 6, 0, 5, 0, 2, 8, 2, 0, 8, 2], [0, 1, 1, 2, 2, 0, 1, 2, 2, 0, 0, 0, 2, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [40, 62, 35, 17, 62, 88, 6], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [2, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [19, 25, 50, 71, 34]], "fitness": -0.6880000233650208, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3002162159174158, 2.2959953911662527, 2.29090035268738, 2.2866165328098247, 2.2831909840747175, 2.2786630332399085, 2.2747245570215426, 2.268211410061684, 2.2645672231129272, 2.259944177558787, 2.2554148749715663, 2.2511059544137155, 2.2453631144221182, 2.2413269587637585, 2.235489773539315, 2.2282620062051497, 2.2227637331011176, 2.215797531417395, 2.2083103185977917, 2.201838428192229, 2.195821876932743, 2.1878228887606603, 2.1828425372076734, 2.170638234403391, 2.16080471008461, 2.1500088415283174, 2.1401342421695304, 2.1309158158355843, 2.120008066644947, 2.1090812305528033, 2.0958978086493474, 2.084520411733875, 2.0709591612540623, 2.054528150953999, 2.040060808755907, 2.0259487612876343, 2.0052437732216863, 1.9865333728188175, 1.9713235866313346, 1.9561324714433406, 1.93459041451482, 1.9126647405494646, 1.8960286427356658, 1.8684782472820078, 1.851243743901523, 1.8293603447056435, 1.810909529261979, 1.783674259069904, 1.7609842831763167, 1.73909394938822, 1.7241886993991922, 1.6968688251257038, 1.6794175776224787, 1.6563539709854025, 1.6363637928540098, 1.6254260714153934, 1.5896939541512256, 1.5714729117396138, 1.5417192083040578, 1.5333706523921464, 1.520327043004276, 1.4876110632154116, 1.4830513937031478, 1.4538849837523977, 1.4454722993519675, 1.4323110137523016, 1.4166444794156405, 1.400431816084447, 1.3791048550539642, 1.3732120654271531, 1.3546050346255099, 1.344084549274553, 1.3314525511727404, 1.3176242144446977, 1.3018795015978508, 1.2794976355676495, 1.28357252786818, 1.2803345619962987, 1.2562688142710736, 1.255987838573932, 1.2445582041194363, 1.2447237839646517, 1.2252776644815937, 1.2203298962867302, 1.2066609056445319, 1.2012568238451968, 1.196386805677836, 1.1863839744246159, 1.170242132968623, 1.1706547650048886, 1.1652072465903156, 1.153916156381711, 1.1536518897614727, 1.138848285491771, 1.1314721646766779, 1.1312467409650868, 1.1231032629149102, 1.1170583318457894, 1.117029758980403, 1.1029702492078943], "accuracy": [0.09298639744520187, 0.10962884873151779, 0.11874257028102875, 0.12917712330818176, 0.1372341811656952, 0.1538766324520111, 0.1574428677558899, 0.17976489663124084, 0.18544445931911469, 0.1962752640247345, 0.21529521048069, 0.2188614457845688, 0.2351076453924179, 0.240919291973114, 0.24924051761627197, 0.2650904655456543, 0.27618545293807983, 0.28582748770713806, 0.2989037036895752, 0.3082816004753113, 0.30418702960014343, 0.31343284249305725, 0.3191123902797699, 0.33681151270866394, 0.3423590064048767, 0.35120856761932373, 0.3559635579586029, 0.3579447865486145, 0.3675868511199951, 0.3683793544769287, 0.37907806038856506, 0.3877955377101898, 0.3859463632106781, 0.39941883087158203, 0.39664509892463684, 0.4041738212108612, 0.4251750111579895, 0.41843879222869873, 0.41923126578330994, 0.4295337498188019, 0.4282129108905792, 0.44406285881996155, 0.4360058009624481, 0.454629510641098, 0.4447232782840729, 0.4535728394985199, 0.45766741037368774, 0.47008320689201355, 0.47549861669540405, 0.4695548713207245, 0.47510236501693726, 0.4780081808567047, 0.48448026180267334, 0.48514068126678467, 0.48632940649986267, 0.4892352521419525, 0.49993395805358887, 0.5090476870536804, 0.5157839059829712, 0.5082551836967468, 0.5149914026260376, 0.5241051316261292, 0.5155197381973267, 0.5256901383399963, 0.5296525955200195, 0.5260863900184631, 0.5336151123046875, 0.5424646735191345, 0.5534275770187378, 0.5464271306991577, 0.5461629629135132, 0.5534275770187378, 0.557390034198761, 0.5550125241279602, 0.5616167187690735, 0.5663716793060303, 0.5632016658782959, 0.5539559125900269, 0.5680887699127197, 0.5674283504486084, 0.570202112197876, 0.5719191431999207, 0.5806366205215454, 0.5818253755569458, 0.5867124795913696, 0.5889578461647034, 0.587769091129303, 0.5926561951637268, 0.5987319946289062, 0.5908070206642151, 0.5943732857704163, 0.5963544845581055, 0.5945053696632385, 0.603090763092041, 0.6019020080566406, 0.6077136397361755, 0.6079778075218201, 0.6139215230941772, 0.6081098914146423, 0.6141856908798218], "val_loss": [1.9663742610386439, 1.962221418108259, 1.9581072671072823, 1.9540143013000488, 1.9498822348458427, 1.945723397391183, 1.9415000506809779, 1.937197276524135, 1.9327851704188757, 1.9283014706202917, 1.923666545322963, 1.9188449723379952, 1.9138439042227608, 1.9086973326546806, 1.9033582551138741, 1.8977407727922713, 1.8918301037379675, 1.8856056758335658, 1.8790380614144462, 1.8721790994916643, 1.8649650301252092, 1.857306752886091, 1.8493348530360632, 1.8408149310520716, 1.831810474395752, 1.8223016602652413, 1.8122390338352747, 1.8016637393406458, 1.7906304086957658, 1.779003415788923, 1.766674246106829, 1.753779683794294, 1.740290301186698, 1.7260801451546806, 1.7111472402300154, 1.6956890651157923, 1.6793058259146554, 1.662137542452131, 1.6446071352277483, 1.6264101096561976, 1.60749009677342, 1.5878710065569197, 1.567725488117763, 1.5468153272356306, 1.5258356843675887, 1.5042081560407365, 1.4824515410831995, 1.4603167601994105, 1.4379149845668249, 1.4154062611716134, 1.393200125013079, 1.3706814902169364, 1.3484036241258894, 1.3262776647295271, 1.3042590618133545, 1.2829138892037528, 1.2614988599504744, 1.2403662545340401, 1.2194164821079798, 1.1994429997035436, 1.18031678880964, 1.1609909534454346, 1.1430748530796595, 1.125065462929862, 1.1078821931566512, 1.0916378498077393, 1.0760082176753454, 1.0606367588043213, 1.0455707822527205, 1.0314231940678187, 1.0176900795527868, 1.0046067919049944, 0.9919083799634661, 0.9795349666050502, 0.9678460189274379, 0.9561451162610736, 0.9454225131443569, 0.9347230025700161, 0.9244922229221889, 0.9149807521275112, 0.9057443482535226, 0.8971814087459019, 0.8887819562639508, 0.880568129675729, 0.8725882257734027, 0.8650859253747123, 0.8576878649847848, 0.8505639859608242, 0.8434811149324689, 0.83669342313494, 0.8301762512751988, 0.8237803493227277, 0.8178760324205671, 0.8118192638669696, 0.8061061246054513, 0.8004473277500698, 0.7951209034238543, 0.7898936952863421, 0.7849339587347848, 0.7801769801548549], "val_accuracy": [0.06566666811704636, 0.10499999672174454, 0.1433333307504654, 0.18433333933353424, 0.22166666388511658, 0.25466665625572205, 0.2893333435058594, 0.3153333365917206, 0.33666667342185974, 0.3543333411216736, 0.3646666705608368, 0.3766666650772095, 0.3856666684150696, 0.3956666588783264, 0.4026666581630707, 0.4113333225250244, 0.421999990940094, 0.43033334612846375, 0.43566668033599854, 0.4416666626930237, 0.44699999690055847, 0.4569999873638153, 0.46299999952316284, 0.46966665983200073, 0.47566667199134827, 0.48100000619888306, 0.48500001430511475, 0.49133333563804626, 0.4976666569709778, 0.5009999871253967, 0.5106666684150696, 0.515666663646698, 0.5226666927337646, 0.531000018119812, 0.5339999794960022, 0.5403333306312561, 0.5440000295639038, 0.5483333468437195, 0.5506666898727417, 0.5540000200271606, 0.5563333630561829, 0.559333324432373, 0.562666654586792, 0.5666666626930237, 0.5703333616256714, 0.5753333568572998, 0.574999988079071, 0.5763333439826965, 0.5763333439826965, 0.5770000219345093, 0.5796666741371155, 0.5846666693687439, 0.5879999995231628, 0.5899999737739563, 0.5916666388511658, 0.5946666598320007, 0.6000000238418579, 0.6043333411216736, 0.6083333492279053, 0.6129999756813049, 0.6153333187103271, 0.6203333139419556, 0.6243333220481873, 0.6269999742507935, 0.6346666812896729, 0.6393333077430725, 0.6416666507720947, 0.6463333368301392, 0.6516666412353516, 0.6570000052452087, 0.6596666574478149, 0.6633333563804626, 0.6646666526794434, 0.6673333048820496, 0.6713333129882812, 0.6740000247955322, 0.6743333339691162, 0.6786666512489319, 0.6796666383743286, 0.6826666593551636, 0.6850000023841858, 0.6866666674613953, 0.6893333196640015, 0.6913333535194397, 0.6909999847412109, 0.6913333535194397, 0.6940000057220459, 0.6943333148956299, 0.6940000057220459, 0.6943333148956299, 0.6953333616256714, 0.6956666707992554, 0.6996666789054871, 0.699999988079071, 0.7009999752044678, 0.7023333311080933, 0.7023333311080933, 0.7023333311080933, 0.7039999961853027, 0.7036666870117188]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 8, 1, 4, 5, 1, 2, 3, 2, 1, 5, 2, 9, 3, 2, 6, 0, 5, 0, 2, 8, 2, 0, 8, 2], [0, 1, 1, 2, 2, 0, 1, 2, 2, 0, 1, 0, 2, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [47, 9, 35, 17, 74, 52, 54], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [2, 3, 9, 9, 2, 9], [2, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 22, 22, 13, 9, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.subtract(tf.math.add(alpha, tf.math.add(alpha, alpha)), grad)), tf.math.multiply(grad, tf.math.add(alpha, tf.math.add(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.square(alpha), tf.math.add(alpha, grad))))))))), tf.math.add(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07594769448041916, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [3, 8, 2, 4, 5, 1, 0, 5, 2, 1, 5, 2, 9, 3, 2, 1, 0, 5, 0, 2, 3, 2, 0, 8, 2, 9, 2, 1, 0, 4, 6, 9], [2, 1, 2, 1, 2, 2, 2, 2, 2, 0, 0, 2, 2, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [47, 55, 35, 17, 95, 52, 54], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [7, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [4, 3, 9, 9, 2, 9], [1, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [45, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.sqrt(tf.math.add(tf.math.add(alpha, grad), tf.math.pow(tf.math.add(alpha, alpha), grad))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [7, 8, 3, 4, 5, 1, 0, 5, 2, 1, 5, 2, 9, 3, 2, 1, 0, 5, 0, 2, 3, 2, 0, 8, 2, 9, 2, 1, 0, 4, 6, 9], [2, 0, 1, 3, 2, 2, 2, 2, 2, 0, 0, 2, 2, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [47, 55, 35, 17, 95, 52, 54], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [1, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 3, 9, 2, 9], [0, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [45, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 18, 11, 7, 1, 7, 7, 3, 4, 1, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, alpha))), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.add(tf.math.add(alpha, grad), tf.math.subtract(grad, tf.math.square(grad))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(beta, tf.math.subtract(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 8, 3, 4, 5, 1, 0, 5, 2, 1, 5, 2, 9, 3, 2, 1, 0, 5, 0, 2, 3, 2, 0, 8, 2, 9, 2, 1, 0, 4, 6, 9], [0, 1, 1, 2, 2, 0, 1, 2, 2, 0, 0, 0, 2, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 18, 35, 17, 95, 79, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [44, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07515519857406616, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 8, 1, 4, 5, 1, 6, 3, 2, 1, 5, 2, 9, 3, 2, 6, 0, 5, 0, 2, 8, 2, 0, 8, 2], [2, 1, 2, 1, 2, 2, 2, 2, 2, 0, 0, 2, 2, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [47, 55, 35, 17, 95, 52, 54], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [7, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 3, 9, 9, 2, 9], [0, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [45, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 5, 4, 0, 7, 7, 3, 4, 1, 1, 1, 0, 1, 0, 5, 3, 2, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.pow(alpha, tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(beta, tf.math.add(beta, tf.math.subtract(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 8, 3, 4, 8, 1, 0, 5, 2, 1, 5, 2, 9, 3, 2, 1, 0, 5, 0, 2, 3, 2, 0, 8, 2, 9, 2, 1, 0, 4, 6, 9], [0, 1, 1, 2, 2, 0, 1, 2, 2, 0, 0, 0, 2, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 18, 35, 17, 57, 79, 53], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [8, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [34, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), alpha))), tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(sigma, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 8, 1, 4, 5, 1, 2, 1, 2, 1, 5, 2, 8, 3, 2, 6, 0, 5, 0, 2, 8, 2, 0, 9, 2], [2, 1, 2, 1, 2, 0, 1, 2, 2, 0, 0, 2, 2, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 18, 35, 17, 57, 79, 53], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1], [1, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [45, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 8, 7, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 4, 1, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(alpha)), tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))))))))))), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.302967267155474, 2.303060452195836, 2.302933486539926, 2.3029483384963876, 2.3029514802303677, 2.3029244302868794, 2.3029851564846457, 2.3030028739672734, 2.303079370903758], "accuracy": [0.09140139818191528, 0.0948355570435524, 0.09642054885625839, 0.09774138033390045, 0.09602430462837219, 0.09549596905708313, 0.0944393053650856, 0.09470347315073013, 0.09615638852119446], "val_loss": [1.973733765738351, 1.9736544064113073, 1.973625659942627, 1.9736371040344238, 1.9736316544669015, 1.9736224583217077, 1.9736960956028529, 1.9735845157078333, 1.9736976623535156], "val_accuracy": [0.10233332961797714, 0.09966666996479034, 0.09733333438634872, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 8, 0, 4, 5, 9, 0, 5, 9, 1, 8, 2, 9, 3, 2, 1, 0, 5, 0, 2, 3, 2, 0, 8, 2, 9, 2, 1, 0, 4, 6, 9], [0, 2, 0, 2, 2, 0, 1, 2, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [47, 55, 35, 17, 95, 52, 54], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [7, 3], [], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1], [0, 4, 0, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 7, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 4, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.sqrt(tf.math.negative(tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.pow(tf.math.square(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.negative(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 8, 0, 6, 5, 1, 0, 5, 2, 1, 8, 2, 9, 3, 2, 1, 0, 5, 0, 2, 3, 2, 0, 8, 2, 9, 2, 1, 0, 4, 6, 9], [0, 2, 0, 2, 1, 0, 1, 2, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [47, 55, 35, 17, 95, 52, 54], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [7, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 28, 28, 19, 9, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))), tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), alpha), grad))))), tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, beta))", "other_info": {"loss": [2.3020579921665476, 2.3022913627337314, 2.3015446370980994, 2.3015795667583068, 2.302503784082947, 2.3024988216951368], "accuracy": [0.08915598690509796, 0.09430722147226334, 0.09060890227556229, 0.09206181764602661, 0.08889182657003403, 0.09206181764602661], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 8, 0, 4, 5, 1, 0, 5, 2, 4, 8, 2, 9, 3, 2, 1, 0, 5, 0, 2, 3, 2, 0, 8, 2, 9, 2, 1, 0, 4, 6, 9], [0, 2, 0, 2, 2, 0, 1, 2, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [47, 55, 35, 79, 95, 52, 54], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [7, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 19, 19, 12, 7, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.negative(tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.subtract(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.square(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.pow(tf.math.add(alpha, grad), grad), tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3020579921665476, 2.3022913627337314, 2.3015446370980994, 2.3015795667583068, 2.302503784082947, 2.3024988216951368], "accuracy": [0.08915598690509796, 0.09430722147226334, 0.09060890227556229, 0.09206181764602661, 0.08889182657003403, 0.09206181764602661], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]