[{"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.8308571577072144, "mapping_values": [1, 16, 16, 10, 6, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), grad))))), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.076063871903269, 1.9090721041314465, 1.303774540332393, 0.9259822881217048, 0.8070687017404896, 0.7356777758394266, 0.6817483603048948, 0.681299569726132, 0.6234350801773862, 0.6294635359117652, 0.5873413047203535, 0.5637721832417982, 0.5548077380542253, 0.5262397843864631, 0.5530052745362724, 0.527608517146523, 0.49434037547321874, 0.48807112067020675, 0.49155195913357647, 0.45693419274794445, 0.4632824105302246, 0.4520886919958528, 0.45724219040092207, 0.43609998328826527, 0.45040229734822096, 0.4099748272740562, 0.40816586873928445, 0.4103033832783523, 0.40402145990606125], "accuracy": [0.3155461549758911, 0.39690926671028137, 0.5300488471984863, 0.6539427042007446, 0.6964733600616455, 0.7232862114906311, 0.7448157668113708, 0.7284374833106995, 0.7658169269561768, 0.7630431652069092, 0.780610203742981, 0.7800818681716919, 0.7907806038856506, 0.8042530417442322, 0.785101056098938, 0.8033285140991211, 0.8161405324935913, 0.8169330358505249, 0.8141592741012573, 0.8300092220306396, 0.8190463781356812, 0.8345000743865967, 0.8274996876716614, 0.8372738361358643, 0.8304054737091064, 0.8473120927810669, 0.8506141901016235, 0.8496896028518677, 0.8475762605667114], "val_loss": [1.0285721506391252, 1.4645402090890067, 0.7099709851401192, 0.6895122868674142, 0.5937454189573016, 0.5497570548738752, 0.5406543186732701, 0.5237771613257272, 0.5248189653669085, 0.47149687153952463, 0.5204353502818516, 0.4711411850793021, 0.4432063698768616, 0.46152563605989727, 0.464638352394104, 0.40898878233773367, 0.3936711720057896, 0.4190115673201425, 0.39310779741832186, 0.3864010913031442, 0.387823794569288, 0.4023415616580418, 0.37021818331309725, 0.36616735798971994, 0.37547270740781513, 0.3601371390478952, 0.3884205477578299, 0.3765887362616403, 0.3602905443736485], "val_accuracy": [0.5833333134651184, 0.42533332109451294, 0.6759999990463257, 0.656333327293396, 0.7193333506584167, 0.737666666507721, 0.734666645526886, 0.7526666522026062, 0.746666669845581, 0.7860000133514404, 0.7473333477973938, 0.7723333239555359, 0.7979999780654907, 0.7956666946411133, 0.7973333597183228, 0.8246666789054871, 0.8343333601951599, 0.8076666593551636, 0.8339999914169312, 0.8349999785423279, 0.8320000171661377, 0.8173333406448364, 0.843999981880188, 0.8483333587646484, 0.8373333215713501, 0.8413333296775818, 0.8263333439826965, 0.8299999833106995, 0.847000002861023]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [5, 9, 0, 1, 0, 3, 8, 2, 9, 3, 1, 8], [1, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 3, 2, 2], [24, 98, 75, 86, 46, 73, 18, 25, 62, 84], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.8308571577072144, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.076063871903269, 1.9090721041314465, 1.303774540332393, 0.9259822881217048, 0.8070687017404896, 0.7356777758394266, 0.6817483603048948, 0.681299569726132, 0.6234350801773862, 0.6294635359117652, 0.5873413047203535, 0.5637721832417982, 0.5548077380542253, 0.5262397843864631, 0.5530052745362724, 0.527608517146523, 0.49434037547321874, 0.48807112067020675, 0.49155195913357647, 0.45693419274794445, 0.4632824105302246, 0.4520886919958528, 0.45724219040092207, 0.43609998328826527, 0.45040229734822096, 0.4099748272740562, 0.40816586873928445, 0.4103033832783523, 0.40402145990606125], "accuracy": [0.3155461549758911, 0.39690926671028137, 0.5300488471984863, 0.6539427042007446, 0.6964733600616455, 0.7232862114906311, 0.7448157668113708, 0.7284374833106995, 0.7658169269561768, 0.7630431652069092, 0.780610203742981, 0.7800818681716919, 0.7907806038856506, 0.8042530417442322, 0.785101056098938, 0.8033285140991211, 0.8161405324935913, 0.8169330358505249, 0.8141592741012573, 0.8300092220306396, 0.8190463781356812, 0.8345000743865967, 0.8274996876716614, 0.8372738361358643, 0.8304054737091064, 0.8473120927810669, 0.8506141901016235, 0.8496896028518677, 0.8475762605667114], "val_loss": [1.0285721506391252, 1.4645402090890067, 0.7099709851401192, 0.6895122868674142, 0.5937454189573016, 0.5497570548738752, 0.5406543186732701, 0.5237771613257272, 0.5248189653669085, 0.47149687153952463, 0.5204353502818516, 0.4711411850793021, 0.4432063698768616, 0.46152563605989727, 0.464638352394104, 0.40898878233773367, 0.3936711720057896, 0.4190115673201425, 0.39310779741832186, 0.3864010913031442, 0.387823794569288, 0.4023415616580418, 0.37021818331309725, 0.36616735798971994, 0.37547270740781513, 0.3601371390478952, 0.3884205477578299, 0.3765887362616403, 0.3602905443736485], "val_accuracy": [0.5833333134651184, 0.42533332109451294, 0.6759999990463257, 0.656333327293396, 0.7193333506584167, 0.737666666507721, 0.734666645526886, 0.7526666522026062, 0.746666669845581, 0.7860000133514404, 0.7473333477973938, 0.7723333239555359, 0.7979999780654907, 0.7956666946411133, 0.7973333597183228, 0.8246666789054871, 0.8343333601951599, 0.8076666593551636, 0.8339999914169312, 0.8349999785423279, 0.8320000171661377, 0.8173333406448364, 0.843999981880188, 0.8483333587646484, 0.8373333215713501, 0.8413333296775818, 0.8263333439826965, 0.8299999833106995, 0.847000002861023]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [5, 9, 0, 1, 0, 3, 8, 2, 9, 3, 1, 8], [2, 3, 0, 0, 0, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.8308571577072144, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.076063871903269, 1.9090721041314465, 1.303774540332393, 0.9259822881217048, 0.8070687017404896, 0.7356777758394266, 0.6817483603048948, 0.681299569726132, 0.6234350801773862, 0.6294635359117652, 0.5873413047203535, 0.5637721832417982, 0.5548077380542253, 0.5262397843864631, 0.5530052745362724, 0.527608517146523, 0.49434037547321874, 0.48807112067020675, 0.49155195913357647, 0.45693419274794445, 0.4632824105302246, 0.4520886919958528, 0.45724219040092207, 0.43609998328826527, 0.45040229734822096, 0.4099748272740562, 0.40816586873928445, 0.4103033832783523, 0.40402145990606125], "accuracy": [0.3155461549758911, 0.39690926671028137, 0.5300488471984863, 0.6539427042007446, 0.6964733600616455, 0.7232862114906311, 0.7448157668113708, 0.7284374833106995, 0.7658169269561768, 0.7630431652069092, 0.780610203742981, 0.7800818681716919, 0.7907806038856506, 0.8042530417442322, 0.785101056098938, 0.8033285140991211, 0.8161405324935913, 0.8169330358505249, 0.8141592741012573, 0.8300092220306396, 0.8190463781356812, 0.8345000743865967, 0.8274996876716614, 0.8372738361358643, 0.8304054737091064, 0.8473120927810669, 0.8506141901016235, 0.8496896028518677, 0.8475762605667114], "val_loss": [1.0285721506391252, 1.4645402090890067, 0.7099709851401192, 0.6895122868674142, 0.5937454189573016, 0.5497570548738752, 0.5406543186732701, 0.5237771613257272, 0.5248189653669085, 0.47149687153952463, 0.5204353502818516, 0.4711411850793021, 0.4432063698768616, 0.46152563605989727, 0.464638352394104, 0.40898878233773367, 0.3936711720057896, 0.4190115673201425, 0.39310779741832186, 0.3864010913031442, 0.387823794569288, 0.4023415616580418, 0.37021818331309725, 0.36616735798971994, 0.37547270740781513, 0.3601371390478952, 0.3884205477578299, 0.3765887362616403, 0.3602905443736485], "val_accuracy": [0.5833333134651184, 0.42533332109451294, 0.6759999990463257, 0.656333327293396, 0.7193333506584167, 0.737666666507721, 0.734666645526886, 0.7526666522026062, 0.746666669845581, 0.7860000133514404, 0.7473333477973938, 0.7723333239555359, 0.7979999780654907, 0.7956666946411133, 0.7973333597183228, 0.8246666789054871, 0.8343333601951599, 0.8076666593551636, 0.8339999914169312, 0.8349999785423279, 0.8320000171661377, 0.8173333406448364, 0.843999981880188, 0.8483333587646484, 0.8373333215713501, 0.8413333296775818, 0.8263333439826965, 0.8299999833106995, 0.847000002861023]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [2, 9, 6, 4, 4, 3, 8, 2, 6, 6, 1, 8, 2, 1, 9, 6, 3, 5], [2, 0, 0, 0, 0, 2, 1, 2, 0, 0, 0, 3, 2, 2], [24, 98, 75, 86, 46, 73, 18, 25, 62, 84], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [89, 25, 50, 71, 34]], "fitness": -0.40799999237060547, "mapping_values": [1, 16, 16, 9, 7, 5, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.pow(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))), tf.math.add(alpha, alpha))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.302317202414, 2.3013709634758968, 2.3006931347948387, 2.2993560356628375, 2.29966188768244, 2.298645730535698, 2.298558460360804, 2.297309912301294, 2.2959019806501244, 2.2956505468288166, 2.2959468351489343, 2.295097313253493, 2.2934429742215787, 2.293992255893224, 2.2932351205831094, 2.291182520209743, 2.2902302162569463, 2.2905634589529686, 2.290583455346878, 2.2875479325768246, 2.2870722980295204, 2.288359303405776, 2.287912618813183, 2.285578060962615, 2.2856418832008787, 2.2852153834445113, 2.2831955596897124, 2.2824194272905056, 2.28302153009292, 2.282696073175878, 2.279498388014292, 2.2810451794829523, 2.280354590259129, 2.279176142867278, 2.278167834292628, 2.278263241056564, 2.27781396566554, 2.276543832395244, 2.2752742158612396, 2.27359156494584, 2.2722454491450157, 2.2725024194985712, 2.271778196344412, 2.270930156038894, 2.270176826514084, 2.2696015413458386, 2.2690302470986556, 2.2673007400201817, 2.267525214119799, 2.265364960688232, 2.2653432234072683, 2.26439967181909, 2.265360459706976, 2.265684480003283, 2.263993197743289, 2.2619688881229276, 2.2618637318624373, 2.2611418848008746, 2.262817941715279, 2.2596868728964696, 2.2600303865804836, 2.259113636377103, 2.257709324084347, 2.2546131272656713, 2.2559476556590266, 2.2547474228994107, 2.253468313048371, 2.2524792036407453, 2.2516620055858594, 2.2508271869147505, 2.249678436854197, 2.249573883269016, 2.2497478166607157, 2.2466748668659067, 2.247928066024407, 2.246851496078618, 2.2451501106463247, 2.244422815762743, 2.2450499296534754, 2.2435428611574992, 2.2416936543796826, 2.2426835759724324, 2.2410772082639046, 2.2402205431009437, 2.2364486634628946, 2.2374067361942767, 2.2367288672047017, 2.2371682382892732, 2.234295814044566, 2.234766524906534, 2.2327373268078063, 2.2325289007883975, 2.231937031751579, 2.2312970278269706, 2.2300562397552883, 2.228432908333398, 2.2294709828268062, 2.22756263133069, 2.2244681847833956, 2.2246021148062907], "accuracy": [0.09272222965955734, 0.09232597798109055, 0.09311848133802414, 0.09100515395402908, 0.09470347315073013, 0.10157178342342377, 0.09879804402589798, 0.10540219396352768, 0.10527011007070541, 0.11187426000833511, 0.10579843819141388, 0.10566636174917221, 0.11768590658903122, 0.10738343745470047, 0.1154404953122139, 0.11662924289703369, 0.11795007437467575, 0.1162329912185669, 0.12296922504901886, 0.1278562992811203, 0.13247919082641602, 0.12798838317394257, 0.12310130894184113, 0.13313961029052734, 0.13036586344242096, 0.13881917297840118, 0.1442345827817917, 0.13657376170158386, 0.14357416331768036, 0.14370624721050262, 0.15110288560390472, 0.14674416184425354, 0.14898955821990967, 0.149649977684021, 0.15215955674648285, 0.15942411124706268, 0.15295206010341644, 0.1592920422554016, 0.15836745500564575, 0.16351869702339172, 0.16616034507751465, 0.1706511676311493, 0.17091533541679382, 0.17540615797042847, 0.17514199018478394, 0.1810857206583023, 0.17870822548866272, 0.187689870595932, 0.18438778817653656, 0.18874652683734894, 0.18544445931911469, 0.19231277704238892, 0.18650111556053162, 0.18755778670310974, 0.19323734939098358, 0.1974640041589737, 0.19402985274791718, 0.20538897812366486, 0.19455818831920624, 0.20393607020378113, 0.19878484308719635, 0.20116232335567474, 0.20935148000717163, 0.21080438792705536, 0.21172896027565002, 0.2180689424276352, 0.21780477464199066, 0.21793685853481293, 0.22137102484703064, 0.2250693440437317, 0.2226918488740921, 0.22599393129348755, 0.2234843522310257, 0.23457930982112885, 0.2277110069990158, 0.23220182955265045, 0.2370888888835907, 0.23563598096370697, 0.22784309089183807, 0.23959846794605255, 0.2456742823123932, 0.24303261935710907, 0.2401268035173416, 0.24937260150909424, 0.25042927265167236, 0.2502971887588501, 0.25742965936660767, 0.252938836812973, 0.26099589467048645, 0.2525425851345062, 0.26218464970588684, 0.26284506916999817, 0.2603355050086975, 0.26284506916999817, 0.2641659080982208, 0.26984545588493347, 0.26324132084846497, 0.2665433883666992, 0.27063795924186707, 0.2727513015270233], "val_loss": [1.9699079649788993, 1.9692216600690569, 1.968541485922677, 1.9678616523742676, 1.967186450958252, 1.9665135656084334, 1.9658372061593192, 1.965158462524414, 1.96449191229684, 1.963820116860526, 1.9631497519356864, 1.9624800000871931, 1.9618137223379952, 1.9611454010009766, 1.9604802131652832, 1.9598063741411482, 1.9591385296412878, 1.9584708895002092, 1.9578027725219727, 1.9571364266531808, 1.9564636094229562, 1.9558014188494002, 1.955136503492083, 1.9544696807861328, 1.9537972041538783, 1.9531288828168596, 1.9524598802839006, 1.9517909458705358, 1.9511158806937081, 1.9504424503871374, 1.949768134525844, 1.9490944317408971, 1.9484242711748396, 1.9477490016392298, 1.9470723697117396, 1.9463990075247628, 1.945730413709368, 1.9450565065656389, 1.9443772179739816, 1.9436962263924735, 1.9430110113961356, 1.9423254558018275, 1.941639014652797, 1.9409570693969727, 1.9402721268790108, 1.9395742416381836, 1.9388790811811174, 1.9381779261997767, 1.9374737739562988, 1.9367570195879256, 1.936049461364746, 1.9353429930550712, 1.934634004320417, 1.933922631399972, 1.933211054120745, 1.9324883733476912, 1.931758199419294, 1.9310309546334403, 1.9303009169442313, 1.929572377886091, 1.9288363456726074, 1.9281007221766882, 1.9273594447544642, 1.9266084943498885, 1.9258626529148646, 1.9251057079860143, 1.9243414742606026, 1.9235743113926478, 1.922804832458496, 1.9220324925013952, 1.921260152544294, 1.9204789570399694, 1.9196912901742118, 1.9188953808375768, 1.9181045123508997, 1.9173039027622767, 1.9164889880589075, 1.9156815665108817, 1.9148577962602888, 1.9140424728393555, 1.913215024130685, 1.9123866217476981, 1.9115554264613561, 1.910707882472447, 1.9098458290100098, 1.908994197845459, 1.9081340517316545, 1.907273633139474, 1.906395435333252, 1.905517305646624, 1.9046327045985632, 1.903745446886335, 1.9028513090951102, 1.901949746268136, 1.9010474341256278, 1.9001244136265345, 1.8992101124354772, 1.8982858657836914, 1.8973440442766463, 1.896404606955392], "val_accuracy": [0.04233333468437195, 0.04866666719317436, 0.05166666582226753, 0.05700000002980232, 0.06133333221077919, 0.06466666609048843, 0.07000000029802322, 0.07500000298023224, 0.07999999821186066, 0.0860000029206276, 0.09266666322946548, 0.09933333098888397, 0.10700000077486038, 0.1133333370089531, 0.11933333426713943, 0.1276666671037674, 0.13199999928474426, 0.1393333375453949, 0.1459999978542328, 0.15199999511241913, 0.15933333337306976, 0.1653333306312561, 0.1720000058412552, 0.18133333325386047, 0.18799999356269836, 0.1940000057220459, 0.20133332908153534, 0.20866666734218597, 0.2150000035762787, 0.22166666388511658, 0.22300000488758087, 0.22733333706855774, 0.234333336353302, 0.2409999966621399, 0.2460000067949295, 0.25, 0.25600001215934753, 0.26366665959358215, 0.26899999380111694, 0.2746666669845581, 0.2809999883174896, 0.28700000047683716, 0.2926666736602783, 0.29733332991600037, 0.30000001192092896, 0.30433332920074463, 0.30933332443237305, 0.3136666715145111, 0.31700000166893005, 0.31933334469795227, 0.3240000009536743, 0.3296666741371155, 0.3333333432674408, 0.33799999952316284, 0.3426666557788849, 0.34599998593330383, 0.3490000069141388, 0.35233333706855774, 0.3556666672229767, 0.3569999933242798, 0.35866665840148926, 0.36133334040641785, 0.3630000054836273, 0.3646666705608368, 0.36766666173934937, 0.36766666173934937, 0.36933332681655884, 0.37166666984558105, 0.3736666738986969, 0.37700000405311584, 0.37833333015441895, 0.37966665625572205, 0.3816666603088379, 0.382999986410141, 0.38466668128967285, 0.38499999046325684, 0.3856666684150696, 0.3869999945163727, 0.3889999985694885, 0.3919999897480011, 0.3933333456516266, 0.3956666588783264, 0.3959999978542328, 0.3973333239555359, 0.39899998903274536, 0.4009999930858612, 0.4023333191871643, 0.40433332324028015, 0.40533334016799927, 0.4050000011920929, 0.40700000524520874, 0.40799999237060547, 0.40933331847190857, 0.4103333353996277, 0.41200000047683716, 0.4129999876022339, 0.41499999165534973, 0.41600000858306885, 0.4180000126361847, 0.41999998688697815]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 9, 2, 5, 2, 1, 8], [1, 3, 2, 2, 2, 1, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 5, 2, 9, 2, 9], [2, 2, 1, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.2791428565979004, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.square(beta), beta)", "other_info": {"loss": [2.9807899265934243, 2.4570582276715767, 2.3067491155621114, 2.3033508727925565, 2.3026410957699706, 2.2995679640829794], "accuracy": [0.175670325756073, 0.20274733006954193, 0.10157178342342377, 0.09760929644107819, 0.10051512718200684, 0.10962884873151779], "val_loss": [1.972076143537249, 1.9794043813432967, 1.974280766078404, 1.9734832899911063, 1.9729511397225517, 1.9596142768859863], "val_accuracy": [0.234333336353302, 0.09966666996479034, 0.09833333641290665, 0.09700000286102295, 0.09833333641290665, 0.1586666703224182]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 9, 5, 6, 1, 8], [0, 3, 0, 0, 1, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 3, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.23114286363124847, "mapping_values": [1, 12, 12, 9, 3, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, sigma), beta)", "other_info": {"loss": [3.1264956578161613, 2.387759839003632, 2.3049646764147345, 2.3031523570314043, 2.302485869214551, 2.3000297705101502], "accuracy": [0.1814819723367691, 0.17699114978313446, 0.09681680053472519, 0.09787346422672272, 0.1006472036242485, 0.12178047746419907], "val_loss": [1.934941291809082, 1.976130553654262, 1.9738049507141113, 1.9734491620744978, 1.9730202129908971, 1.9573068618774414], "val_accuracy": [0.3346666693687439, 0.09833333641290665, 0.10366666316986084, 0.09700000286102295, 0.09833333641290665, 0.23999999463558197]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [2, 2, 2, 2, 3, 3, 0, 2, 5, 6, 4, 4, 0, 5, 3, 9], [2, 3, 2, 2, 0, 1, 2, 2, 0, 2, 0, 3, 2, 2], [24, 57, 68, 73, 46, 73, 84, 25, 62, 84], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [9, 5, 2, 9, 2, 9], [2, 3, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 21, 11, 10, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)))))), tf.math.add(alpha, grad)))))), tf.math.pow(tf.math.add(alpha, grad), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3021434454035528, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [2, 9, 6, 6, 2, 3, 8, 2, 6, 6, 1, 8, 2, 1, 9, 6, 3, 5], [1, 1, 0, 0, 0, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 92, 68, 73, 46, 27], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [89, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 7, 5, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 9, 6, 3, 3], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.math.add(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07607977837324142, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 2, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 2, 1, 2, 2, 0, 0, 0, 3, 2, 2], [22, 98, 68, 73, 46, 68, 26, 18, 61, 0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 0, 1, 1], [0, 0, 0, 0], [3, 3, 0], [5, 3], [11], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [95, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 8, 7, 2, 1, 1, 0, 1, 0, 6, 3, 3, 0, 0, 9, 6, 3, 3], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.negative(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), grad)))), tf.math.add(alpha, tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.negative(sigma)))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.math.add(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08149518072605133, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [5, 9, 0, 1, 0, 3, 8, 2, 9, 3, 1, 8], [1, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [89, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 8, 8, 4, 4, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1], [2, 9, 6, 6, 0, 3, 8, 2, 5, 1, 1, 8], [2, 3, 1, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 67, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 12, 7, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 9, 5, 4, 3], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), alpha))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), grad))))), tf.math.subtract(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [970744.9615345942, 2.3062069983829394, 2.304879591276365, 2.3038529736601117, 2.3034037713597653, 2.3030890906412904, 2.3029402490809074], "accuracy": [0.0936468094587326, 0.0944393053650856, 0.09615638852119446, 0.09496764093637466, 0.09496764093637466, 0.0936468094587326, 0.09893012791872025], "val_loss": [1.9780829974583216, 1.9764716965811593, 1.975334712437221, 1.9747390065874373, 1.9743459565298898, 1.9740601948329382, 1.9738998413085938], "val_accuracy": [0.09833333641290665, 0.09966666996479034, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [2, 9, 6, 6, 2, 3, 8, 2, 6, 6, 1, 8, 2, 1, 9, 6, 3, 5], [1, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 3, 2, 2], [24, 98, 75, 86, 46, 73, 18, 25, 62, 84], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [89, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07700435817241669, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [2, 9, 6, 6, 2, 3, 8, 2, 8, 6, 1, 8, 2, 1, 9, 6, 3, 5], [2, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 79], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [2, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [73, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 2, 8, 8, 4, 4, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1], [2, 9, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [24, 61, 68, 73, 46, 73, 84, 25, 62, 99], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 1, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07674019038677216, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1], [2, 7, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8, 7, 6, 3, 9, 9, 6, 0, 6, 1, 4, 7, 0, 9, 6], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2, 0], [26, 98, 68, 73, 46, 45, 80, 18, 61, 69], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 0, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 41, 41, 26, 15, 10, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))), grad))), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))))), tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(grad, tf.math.negative(tf.math.add(alpha, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07700435817241669, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [1, 3, 2, 2, 2, 1, 2, 2, 0, 0, 0, 3, 2, 2], [24, 98, 68, 73, 46, 73, 84, 25, 62, 84], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 10, 6, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 9, 5, 4, 3], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.square(grad), grad))), tf.math.add(alpha, tf.math.divide_no_nan(grad, grad))))), tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [970744.9615345942, 2.3062069983829394, 2.304879591276365, 2.3038529736601117, 2.3034037713597653, 2.3030890906412904, 2.3029402490809074], "accuracy": [0.0936468094587326, 0.0944393053650856, 0.09615638852119446, 0.09496764093637466, 0.09496764093637466, 0.0936468094587326, 0.09893012791872025], "val_loss": [1.9780829974583216, 1.9764716965811593, 1.975334712437221, 1.9747390065874373, 1.9743459565298898, 1.9740601948329382, 1.9738998413085938], "val_accuracy": [0.09833333641290665, 0.09966666996479034, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 2, 6, 6, 0, 3, 8, 2, 5, 6, 1, 2], [2, 3, 0, 0, 0, 0, 2, 2, 0, 0, 0, 3, 2, 2], [4, 98, 6, 73, 46], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [11], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 20, 11, 9, 5, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 9, 5, 4, 3], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [970680.2679111449, 2.4499527398763066, 2.3888066736714335, 2.374498734274529, 2.372029699464878, 2.405801062759643], "accuracy": [0.09496764093637466, 0.10051512718200684, 0.0952318087220192, 0.1010434553027153, 0.09826971590518951, 0.09998679161071777], "val_loss": [2.0830045427594865, 2.089059148515974, 2.0110242707388744, 2.090740271977016, 2.011998040335519, 2.1052087375095914], "val_accuracy": [0.10400000214576721, 0.10000000149011612, 0.09966666996479034, 0.10400000214576721, 0.09700000286102295, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], [9, 7, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [6, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [90, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07700435817241669, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [5, 9, 0, 1, 0, 3, 8, 2, 9, 3, 1, 8], [2, 3, 0, 0, 0, 0, 2, 2, 0, 0, 0, 3, 2, 2], [24, 98, 75, 86, 46, 73, 18, 25, 62, 84], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [5, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [7, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08268392831087112, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1], [2, 9, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [2, 0, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 1, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, alpha), beta)", "other_info": {"loss": [2.3026142443144373, 2.3023950266028756, 2.302442533339114, 2.30182644700834, 2.3028327625157763, 2.302526770770479], "accuracy": [0.09126931428909302, 0.08968432247638702, 0.08902391046285629, 0.08479725569486618, 0.09008057415485382, 0.09192973375320435], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]