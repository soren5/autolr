[{"genotype": [[0], [0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 3, 2, 3], [48, 57], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1], [7, 2, 6, 4, 0, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 2, 2, 3, 2, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.805142879486084, "mapping_values": [1, 3, 3, 1, 2, 1, 18, 18, 9, 9, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, alpha), tf.math.add(tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, grad), tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(beta, tf.math.pow(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), grad))))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.082952343572038, 1.4229378075789247, 1.0767842888784855, 0.9087652949262777, 0.8577621713558192, 0.7920521957259278, 0.758243700563947, 0.7057469277223812, 0.7056932545152276, 0.6793668974329216, 0.6718497352908079, 0.6590182900176844, 0.6460954383489966, 0.6303040725979209, 0.6297033967563678, 0.5950107308127515, 0.5716874645433689, 0.6176001569456696, 0.5880868622198899, 0.5779866307261378, 0.56408780004685, 0.5475095085314535, 0.5411494842782989, 0.5519974261006627, 0.5392364221651478, 0.509271900415452, 0.5271756096507234, 0.5057121166314085, 0.521376581302865, 0.5022681459081865, 0.4935244218611273, 0.5060867576071016, 0.49039406798708124, 0.486217477715735, 0.47838975298028374, 0.48120657275176837, 0.48175027619704375, 0.46485264764847994], "accuracy": [0.32281073927879333, 0.5116893649101257, 0.6127327680587769, 0.665830135345459, 0.6823405027389526, 0.707568347454071, 0.7160216569900513, 0.7368907928466797, 0.7397965788841248, 0.7454761862754822, 0.7470611333847046, 0.7504953145980835, 0.7557786107063293, 0.7658169269561768, 0.7600052952766418, 0.7781006693840027, 0.7872143983840942, 0.7646281719207764, 0.7804781198501587, 0.7861577272415161, 0.7861577272415161, 0.7957997918128967, 0.7938185334205627, 0.7897239327430725, 0.7979130744934082, 0.8053097128868103, 0.8024039268493652, 0.8137630224227905, 0.8034605979919434, 0.8125742673873901, 0.8204993009567261, 0.8076872229576111, 0.8162726163864136, 0.8166688680648804, 0.8234050869941711, 0.8231409192085266, 0.8227446675300598, 0.8281601071357727], "val_loss": [1.1484394754682268, 0.8142905064991542, 0.7956311362130302, 0.6179405621119908, 0.5988718441554478, 0.5851418801716396, 0.5614929028919765, 0.5578029496329171, 0.5226626225880214, 0.5167057173592704, 0.5002599273409162, 0.5382331439426967, 0.4788492066519601, 0.48623148032597135, 0.5125611850193569, 0.4709014211382185, 0.46162004130227224, 0.46848840372903006, 0.4622403723852975, 0.4682865824018206, 0.4634001595633371, 0.44079287563051495, 0.43666590111596243, 0.4386961119515555, 0.4644982133592878, 0.44075950554439, 0.43474198239190237, 0.4241887927055359, 0.4344508818217686, 0.40434196165629793, 0.42070716619491577, 0.4156509722982134, 0.4021229658808027, 0.40496704408100676, 0.4148064596312387, 0.4053564667701721, 0.4018656441143581, 0.4185742565563747], "val_accuracy": [0.550000011920929, 0.6579999923706055, 0.6223333477973938, 0.718999981880188, 0.7416666746139526, 0.7400000095367432, 0.7526666522026062, 0.746999979019165, 0.7836666703224182, 0.7853333353996277, 0.7866666913032532, 0.7736666798591614, 0.7979999780654907, 0.7913333177566528, 0.7799999713897705, 0.8050000071525574, 0.8086666464805603, 0.8046666383743286, 0.8119999766349792, 0.8016666769981384, 0.8040000200271606, 0.8073333501815796, 0.8133333325386047, 0.8069999814033508, 0.7963333129882812, 0.8059999942779541, 0.8080000281333923, 0.8220000267028809, 0.8140000104904175, 0.8323333263397217, 0.82833331823349, 0.8216666579246521, 0.8343333601951599, 0.8343333601951599, 0.828000009059906, 0.8296666741371155, 0.8243333101272583, 0.8136666417121887]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 3, 2, 3], [48, 57], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1], [7, 2, 6, 6, 0, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.7722856998443604, "mapping_values": [1, 3, 3, 1, 2, 1, 18, 18, 9, 9, 1, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, alpha), tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), grad))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, sigma)))", "other_info": {"loss": [2.0671924240380357, 1.4717904712545746, 1.1074844705288547, 0.8903770416231046, 0.8400660997935416, 0.8090704944092505, 0.7359554103541572, 0.672149897920709, 0.6991156468128783, 0.6648456340909334, 0.6157265598306945, 0.62915375213487, 0.6114136431085246, 0.5850913849457647, 0.5907128269110908], "accuracy": [0.3089420199394226, 0.5145951509475708, 0.605468213558197, 0.6756042838096619, 0.6906617283821106, 0.6971337795257568, 0.718399167060852, 0.7454761862754822, 0.7380794882774353, 0.7441553473472595, 0.7642319202423096, 0.7556465268135071, 0.7658169269561768, 0.7755910754203796, 0.7755910754203796], "val_loss": [1.2449514525277274, 0.8968508243560791, 0.7226573058537075, 0.6642261402947562, 0.6308826208114624, 0.5717054946081979, 0.5472003562109811, 0.5440021923610142, 0.5345434631620135, 0.5114359515053886, 0.5281458241598946, 0.5036330393382481, 0.4807067939213344, 0.487541879926409, 0.5066383395876203], "val_accuracy": [0.5596666932106018, 0.6266666650772095, 0.6653333306312561, 0.7089999914169312, 0.7243333458900452, 0.7229999899864197, 0.734333336353302, 0.7559999823570251, 0.749666690826416, 0.7870000004768372, 0.7486666440963745, 0.7716666460037231, 0.7806666493415833, 0.7799999713897705, 0.7699999809265137]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0], [2, 6, 9, 9, 0], [0, 1, 1, 3], [5, 57], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 4, 2, 0, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 2, 2, 3, 3, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.7722856998443604, "mapping_values": [1, 3, 3, 1, 2, 1, 14, 14, 7, 7, 2, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, alpha), tf.math.add(tf.math.pow(tf.math.add(tf.math.add(beta, grad), tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, beta)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, sigma)))", "other_info": {"loss": [2.0671924240380357, 1.4717904712545746, 1.1074844705288547, 0.8903770416231046, 0.8400660997935416, 0.8090704944092505, 0.7359554103541572, 0.672149897920709, 0.6991156468128783, 0.6648456340909334, 0.6157265598306945, 0.62915375213487, 0.6114136431085246, 0.5850913849457647, 0.5907128269110908], "accuracy": [0.3089420199394226, 0.5145951509475708, 0.605468213558197, 0.6756042838096619, 0.6906617283821106, 0.6971337795257568, 0.718399167060852, 0.7454761862754822, 0.7380794882774353, 0.7441553473472595, 0.7642319202423096, 0.7556465268135071, 0.7658169269561768, 0.7755910754203796, 0.7755910754203796], "val_loss": [1.2449514525277274, 0.8968508243560791, 0.7226573058537075, 0.6642261402947562, 0.6308826208114624, 0.5717054946081979, 0.5472003562109811, 0.5440021923610142, 0.5345434631620135, 0.5114359515053886, 0.5281458241598946, 0.5036330393382481, 0.4807067939213344, 0.487541879926409, 0.5066383395876203], "val_accuracy": [0.5596666932106018, 0.6266666650772095, 0.6653333306312561, 0.7089999914169312, 0.7243333458900452, 0.7229999899864197, 0.734333336353302, 0.7559999823570251, 0.749666690826416, 0.7870000004768372, 0.7486666440963745, 0.7716666460037231, 0.7806666493415833, 0.7799999713897705, 0.7699999809265137]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 1, 0], [7, 6, 4, 9, 0], [0, 3, 2, 3], [5, 57], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [2, 2, 6, 6, 0, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.7722856998443604, "mapping_values": [1, 7, 7, 4, 3, 2, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.pow(grad, tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, alpha), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, sigma)))", "other_info": {"loss": [2.0671924240380357, 1.4717904712545746, 1.1074844705288547, 0.8903770416231046, 0.8400660997935416, 0.8090704944092505, 0.7359554103541572, 0.672149897920709, 0.6991156468128783, 0.6648456340909334, 0.6157265598306945, 0.62915375213487, 0.6114136431085246, 0.5850913849457647, 0.5907128269110908], "accuracy": [0.3089420199394226, 0.5145951509475708, 0.605468213558197, 0.6756042838096619, 0.6906617283821106, 0.6971337795257568, 0.718399167060852, 0.7454761862754822, 0.7380794882774353, 0.7441553473472595, 0.7642319202423096, 0.7556465268135071, 0.7658169269561768, 0.7755910754203796, 0.7755910754203796], "val_loss": [1.2449514525277274, 0.8968508243560791, 0.7226573058537075, 0.6642261402947562, 0.6308826208114624, 0.5717054946081979, 0.5472003562109811, 0.5440021923610142, 0.5345434631620135, 0.5114359515053886, 0.5281458241598946, 0.5036330393382481, 0.4807067939213344, 0.487541879926409, 0.5066383395876203], "val_accuracy": [0.5596666932106018, 0.6266666650772095, 0.6653333306312561, 0.7089999914169312, 0.7243333458900452, 0.7229999899864197, 0.734333336353302, 0.7559999823570251, 0.749666690826416, 0.7870000004768372, 0.7486666440963745, 0.7716666460037231, 0.7806666493415833, 0.7799999713897705, 0.7699999809265137]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0], [0, 6, 4, 9], [2, 1, 2, 3], [48, 57, 47], [1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [7, 2, 5, 6, 0, 2, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [56, 38]], "fitness": -0.44771429896354675, "mapping_values": [1, 2, 2, 1, 1, 0, 24, 24, 14, 10, 3, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(beta, grad), tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.subtract(grad, grad), tf.math.pow(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), grad))), tf.math.add(beta, beta))), tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.sqrt(tf.math.subtract(grad, grad))))))), tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.2763990032957877, 2.288654645388987, 2.1870370409381925, 1.8594336068200366, 2.2187597855222916, 2.1450940368827687, 2.294552633712289, 2.2842555453260545, 2.3586354533427145, 2.3046884845670155], "accuracy": [0.24514594674110413, 0.17316074669361115, 0.22942808270454407, 0.3833047151565552, 0.18636904656887054, 0.24263638257980347, 0.14238542318344116, 0.13551710546016693, 0.1018359512090683, 0.10513802617788315], "val_loss": [1.8621326855250768, 1.9094295501708984, 1.6420010498591833, 1.9928458758762904, 1.8567825726100378, 1.8722011702401298, 1.974158832005092, 2.2077886717660085, 1.9743434361049108, 1.9736666679382324], "val_accuracy": [0.19766665995121002, 0.3330000042915344, 0.2919999957084656, 0.10000000149011612, 0.36899998784065247, 0.25099998712539673, 0.09733333438634872, 0.0976666659116745, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 0, 1, 0], [6, 6, 4, 9], [1, 0, 0, 3, 1, 0], [48, 57, 47], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 6, 6, 0, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 1, 3, 1, 3, 2, 3, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.3442857265472412, "mapping_values": [1, 1, 1, 0, 1, 0, 18, 18, 9, 9, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.divide_no_nan(tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.pow(grad, tf.math.add(beta, alpha)), grad)), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), grad))))), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.521628849510472, 2.2529252637977284, 2.421536963865537, 2.3035105443066923, 2.299531101755352, 2.0985614967824855, 2.160130505359656], "accuracy": [0.19323734939098358, 0.2008981704711914, 0.22837141156196594, 0.10011887550354004, 0.1220446452498436, 0.2689208686351776, 0.22414475679397583], "val_loss": [1.9194939477103097, 1.5447981357574463, 1.9762144769941057, 1.97325713293893, 1.9587324687412806, 1.9854694093976701, 1.89630092893328], "val_accuracy": [0.19066666066646576, 0.3499999940395355, 0.09733333438634872, 0.0976666659116745, 0.2773333191871643, 0.10000000149011612, 0.2523333430290222]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9, 0], [1, 2, 1, 3], [48, 57, 47], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 6, 6, 0, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 1, 3, 1, 3, 2, 3, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [1, 6, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07436270266771317, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [0, 1, 0, 1, 0, 1, 0], [7, 6, 4, 9], [0, 2, 2, 3], [48, 57], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1], [7, 1, 6, 6, 0, 2, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 11, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 1, 2, 9], [2, 3, 3, 1], [39, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 2, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 6, 3, 3, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, alpha), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.math.subtract(sigma, sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [2, 6, 9, 9, 0], [2, 2, 2, 3], [48, 53], [1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [8, 2, 6, 6, 1, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0], [2, 6, 9, 2, 9], [3, 3, 3, 1], [44, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08889182657003403, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 1, 0], [3, 6, 4, 9], [0, 3, 2, 3], [3, 57], [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1], [2, 2, 6, 6, 0, 2, 3, 3, 0, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [4, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 12, 12, 6, 6, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, grad: tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.negative(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)))), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(sigma, tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [7, 6, 4, 9], [0, 3, 2, 3], [48, 57], [1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 6, 6, 0, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [7, 3], [], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0], [7, 6, 9, 2, 9], [0, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.3023454558501357, 2.302248092013233, 2.3027669074686212, 2.3051560118749173, 2.3165397289768896, 2.381028314386896], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736720493861608, 1.973874228341239, 1.9749656404767717, 1.979457242148263, 2.0031412669590543, 2.1606903076171875], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 2, 2, 3], [5, 57], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [7, 1, 6, 6, 0, 2, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 1, 1, 3, 1, 3, 2, 3, 3, 0], [66, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0], [4, 6, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 20, 20, 12, 8, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.subtract(grad, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.negative(tf.math.add(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.subtract(alpha, tf.math.add(beta, alpha))), tf.math.pow(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), alpha))), tf.math.add(beta, grad)), tf.math.add(beta, beta)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07436270266771317, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0], [2, 6, 9, 9, 0], [3, 2, 2, 3], [48, 57], [1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [8, 2, 6, 6, 1, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 1, 1, 3, 1, 3, 2, 3, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07436270266771317, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 1, 2, 3], [48, 57], [1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1], [7, 1, 6, 8, 0, 6, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 1, 0], [93, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [1, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 8, 8, 4, 4, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, alpha), tf.math.subtract(tf.math.divide_no_nan(grad, tf.math.add(beta, grad)), tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.302649884128835, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 3, 2, 3], [31, 57], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [7, 2, 6, 6, 0, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.09942857176065445, "mapping_values": [1, 3, 3, 1, 2, 1, 20, 20, 10, 10, 2, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, alpha), tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))))), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(beta, tf.math.add(beta, grad))), tf.math.add(beta, grad))))), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, sigma))", "other_info": {"loss": [2.3034586184973636, 2.3033215941659777, 2.3074747319423667, 2.3088992642153365, 2.314688216236998, 2.3164870533031827, 2.3199377201016333, 2.323832216704951, 2.3313720469398582, 2.3480943123489055, 2.3796855785496844, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08942015469074249, 0.08651433140039444, 0.08466517180204391, 0.08545766770839691, 0.07277770340442657, 0.07277770340442657, 0.07515519857406616, 0.07832518965005875, 0.07528728246688843, 0.0750231146812439, 0.08360850811004639, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9717345237731934, 1.9732495035443987, 1.97523832321167, 1.9773955345153809, 1.9798949105398995, 1.9827042307172502, 1.985858985355922, 1.9896533829825265, 1.9961474963596888, 2.0113558769226074, 2.0904628889901296, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.032999999821186066, 0.03099999949336052, 0.029999999329447746, 0.028333334252238274, 0.03400000184774399, 0.03866666555404663, 0.0573333315551281, 0.07100000232458115, 0.08966666460037231, 0.0989999994635582, 0.10000000149011612, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [1, 1, 2, 3], [48, 57, 47], [1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 6, 6, 0, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0], [6, 2, 7, 2, 9], [1, 3, 3, 1], [83, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302952281015739, 2.3012547241997456, 2.302903049862254, 2.3022219082619837, 2.304515719618449, 2.3029024665224367], "accuracy": [0.09034473448991776, 0.0870426595211029, 0.08849557489156723, 0.09126931428909302, 0.0870426595211029, 0.08968432247638702], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [2, 6, 9, 9, 0], [2, 1, 1, 3], [5, 57], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 9, 9, 2, 0, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 0, 3, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 1, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 5, 5, 3, 2, 1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, alpha), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, sigma)))", "other_info": {"loss": [2.302952281015739, 2.3012547241997456, 2.302903049862254, 2.3022219082619837, 2.304515719618449, 2.3029024665224367], "accuracy": [0.09034473448991776, 0.0870426595211029, 0.08849557489156723, 0.09126931428909302, 0.0870426595211029, 0.08968432247638702], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 3, 2, 3], [48, 57], [0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 6, 6, 0, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 5, 4, 2, 2, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.302952281015739, 2.3012547241997456, 2.302903049862254, 2.3022219082619837, 2.304515719618449, 2.3029024665224367], "accuracy": [0.09034473448991776, 0.0870426595211029, 0.08849557489156723, 0.09126931428909302, 0.0870426595211029, 0.08968432247638702], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9, 0], [1, 0, 0, 3, 1, 0], [48, 57], [1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], [7, 1, 6, 6, 0, 2, 9, 2, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 16, 43, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [83, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 20, 20, 11, 9, 2, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.subtract(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), grad))), tf.math.add(beta, tf.math.add(tf.math.add(grad, tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad))))), tf.math.add(beta, beta)))), tf.math.add(beta, grad)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.302952281015739, 2.3012547241997456, 2.302903049862254, 2.3022219082619837, 2.304515719618449, 2.3029024665224367], "accuracy": [0.09034473448991776, 0.0870426595211029, 0.08849557489156723, 0.09126931428909302, 0.0870426595211029, 0.08968432247638702], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 1, 2, 3], [48, 57], [1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [7, 1, 6, 6, 0, 2, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 3, 3, 3, 0], [42, 30, 43, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [83, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 3, 3, 1, 2, 1, 20, 20, 12, 8, 3, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), alpha), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.subtract(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, grad))), grad), tf.math.pow(tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), grad))))), tf.math.add(beta, grad)), tf.math.add(beta, grad)))), tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302952281015739, 2.3012547241997456, 2.302903049862254, 2.3022219082619837, 2.304515719618449, 2.3029024665224367], "accuracy": [0.09034473448991776, 0.0870426595211029, 0.08849557489156723, 0.09126931428909302, 0.0870426595211029, 0.08968432247638702], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]