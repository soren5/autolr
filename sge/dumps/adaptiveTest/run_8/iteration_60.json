[{"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0], [2, 6, 9, 9, 0], [0, 1, 1, 3], [5, 57], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 4, 2, 2, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 2, 2, 3, 3, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.7991428375244141, "mapping_values": [1, 3, 3, 1, 2, 1, 17, 17, 8, 9, 2, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.pow(tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), tf.math.add(beta, beta))), beta), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, sigma)))", "other_info": {"loss": [1.9351198793701476, 1.4770622623437557, 1.0744802547861572, 0.9017380031029688, 0.8049237771497789, 0.750337339419069, 0.7308489795704842, 0.7008914105439655, 0.6710478420648687, 0.6375572465713455, 0.6243612980247409, 0.6084724887644595, 0.6074278330160501, 0.5675019127203725, 0.550209767782866, 0.5340048394671143, 0.5286137854985242, 0.5161579600839787, 0.5226905263134706, 0.4966484854375965, 0.49474991285852893, 0.48397125010681885], "accuracy": [0.35385021567344666, 0.4846123456954956, 0.6118082404136658, 0.6610751748085022, 0.6929071545600891, 0.7140403985977173, 0.724210798740387, 0.7314753532409668, 0.7387399077415466, 0.7600052952766418, 0.7705719470977783, 0.7643640041351318, 0.7680623531341553, 0.7777044177055359, 0.7884030938148499, 0.7973847389221191, 0.8045172095298767, 0.8005547523498535, 0.7994980812072754, 0.8084797263145447, 0.8198388814926147, 0.8178576231002808], "val_loss": [1.5413896015712194, 0.8830767699650356, 0.7406466007232666, 0.6387366567339215, 0.5797279221670968, 0.5711574043546405, 0.5931911298206874, 0.5284112691879272, 0.5640882253646851, 0.6035446609769549, 0.5609186036246163, 0.47514394351414274, 0.4872503621237619, 0.4539923667907715, 0.46311027663094656, 0.4335649950163705, 0.4215136766433716, 0.4142270088195801, 0.42278664452689035, 0.47721827030181885, 0.4429650051253183, 0.428475090435573], "val_accuracy": [0.3869999945163727, 0.5663333535194397, 0.6650000214576721, 0.7076666951179504, 0.7386666536331177, 0.7459999918937683, 0.7200000286102295, 0.7786666750907898, 0.7549999952316284, 0.7233333587646484, 0.753000020980835, 0.8043333292007446, 0.7766666412353516, 0.7946666479110718, 0.7850000262260437, 0.8163333535194397, 0.8190000057220459, 0.8159999847412109, 0.8149999976158142, 0.8026666641235352, 0.8026666641235352, 0.8190000057220459]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 6, 4, 2, 4, 7], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0], [9, 2, 4, 3, 0, 1, 5, 4, 2, 8, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 1, 3, 3, 0, 2, 3, 2, 0], [97, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.7991428375244141, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, sigma)))", "other_info": {"loss": [1.9351198793701476, 1.4770622623437557, 1.0744802547861572, 0.9017380031029688, 0.8049237771497789, 0.750337339419069, 0.7308489795704842, 0.7008914105439655, 0.6710478420648687, 0.6375572465713455, 0.6243612980247409, 0.6084724887644595, 0.6074278330160501, 0.5675019127203725, 0.550209767782866, 0.5340048394671143, 0.5286137854985242, 0.5161579600839787, 0.5226905263134706, 0.4966484854375965, 0.49474991285852893, 0.48397125010681885], "accuracy": [0.35385021567344666, 0.4846123456954956, 0.6118082404136658, 0.6610751748085022, 0.6929071545600891, 0.7140403985977173, 0.724210798740387, 0.7314753532409668, 0.7387399077415466, 0.7600052952766418, 0.7705719470977783, 0.7643640041351318, 0.7680623531341553, 0.7777044177055359, 0.7884030938148499, 0.7973847389221191, 0.8045172095298767, 0.8005547523498535, 0.7994980812072754, 0.8084797263145447, 0.8198388814926147, 0.8178576231002808], "val_loss": [1.5413896015712194, 0.8830767699650356, 0.7406466007232666, 0.6387366567339215, 0.5797279221670968, 0.5711574043546405, 0.5931911298206874, 0.5284112691879272, 0.5640882253646851, 0.6035446609769549, 0.5609186036246163, 0.47514394351414274, 0.4872503621237619, 0.4539923667907715, 0.46311027663094656, 0.4335649950163705, 0.4215136766433716, 0.4142270088195801, 0.42278664452689035, 0.47721827030181885, 0.4429650051253183, 0.428475090435573], "val_accuracy": [0.3869999945163727, 0.5663333535194397, 0.6650000214576721, 0.7076666951179504, 0.7386666536331177, 0.7459999918937683, 0.7200000286102295, 0.7786666750907898, 0.7549999952316284, 0.7233333587646484, 0.753000020980835, 0.8043333292007446, 0.7766666412353516, 0.7946666479110718, 0.7850000262260437, 0.8163333535194397, 0.8190000057220459, 0.8159999847412109, 0.8149999976158142, 0.8026666641235352, 0.8026666641235352, 0.8190000057220459]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 6, 4, 2, 4, 7], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 4, 2, 0, 5, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 2, 2, 3, 3, 0], [97, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.7991428375244141, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 7, 4, 2, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.square(tf.math.add(beta, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, sigma)))", "other_info": {"loss": [1.9351198793701476, 1.4770622623437557, 1.0744802547861572, 0.9017380031029688, 0.8049237771497789, 0.750337339419069, 0.7308489795704842, 0.7008914105439655, 0.6710478420648687, 0.6375572465713455, 0.6243612980247409, 0.6084724887644595, 0.6074278330160501, 0.5675019127203725, 0.550209767782866, 0.5340048394671143, 0.5286137854985242, 0.5161579600839787, 0.5226905263134706, 0.4966484854375965, 0.49474991285852893, 0.48397125010681885], "accuracy": [0.35385021567344666, 0.4846123456954956, 0.6118082404136658, 0.6610751748085022, 0.6929071545600891, 0.7140403985977173, 0.724210798740387, 0.7314753532409668, 0.7387399077415466, 0.7600052952766418, 0.7705719470977783, 0.7643640041351318, 0.7680623531341553, 0.7777044177055359, 0.7884030938148499, 0.7973847389221191, 0.8045172095298767, 0.8005547523498535, 0.7994980812072754, 0.8084797263145447, 0.8198388814926147, 0.8178576231002808], "val_loss": [1.5413896015712194, 0.8830767699650356, 0.7406466007232666, 0.6387366567339215, 0.5797279221670968, 0.5711574043546405, 0.5931911298206874, 0.5284112691879272, 0.5640882253646851, 0.6035446609769549, 0.5609186036246163, 0.47514394351414274, 0.4872503621237619, 0.4539923667907715, 0.46311027663094656, 0.4335649950163705, 0.4215136766433716, 0.4142270088195801, 0.42278664452689035, 0.47721827030181885, 0.4429650051253183, 0.428475090435573], "val_accuracy": [0.3869999945163727, 0.5663333535194397, 0.6650000214576721, 0.7076666951179504, 0.7386666536331177, 0.7459999918937683, 0.7200000286102295, 0.7786666750907898, 0.7549999952316284, 0.7233333587646484, 0.753000020980835, 0.8043333292007446, 0.7766666412353516, 0.7946666479110718, 0.7850000262260437, 0.8163333535194397, 0.8190000057220459, 0.8159999847412109, 0.8149999976158142, 0.8026666641235352, 0.8026666641235352, 0.8190000057220459]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0], [0, 1, 1, 1, 0, 1, 0], [2, 6, 9, 9, 0], [0, 1, 1, 3, 1, 1], [5, 57], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [3, 2, 4, 2, 8, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 1, 3, 0, 3, 2, 0, 2, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [38, 38]], "fitness": -0.7822856903076172, "mapping_values": [1, 3, 3, 1, 2, 1, 18, 18, 9, 9, 2, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), alpha), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.pow(tf.math.add(tf.math.add(beta, beta), tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), grad)), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), grad)))), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(sigma, sigma)))", "other_info": {"loss": [2.0282858894832096, 1.443215457880738, 1.0427412211603697, 0.9334887748995256, 0.8307092150425033, 0.7753457272954983, 0.7467755591549721, 0.7395457897235406, 0.7202412307600949, 0.6818181858826716, 0.6567623606841042, 0.6463482939823822, 0.6488189949351311, 0.6400871633097732, 0.622372986618176, 0.5928670031881729], "accuracy": [0.33205652236938477, 0.5065380930900574, 0.6281865239143372, 0.6514331102371216, 0.6919825673103333, 0.7094175219535828, 0.7190595865249634, 0.7189275026321411, 0.7170783281326294, 0.7411174178123474, 0.7543256878852844, 0.7486461400985718, 0.7508915662765503, 0.7460044622421265, 0.7609298825263977, 0.7754589915275574], "val_loss": [1.0757578100476946, 0.8975956439971924, 0.6553184815815517, 0.6445600986480713, 0.5694908244269234, 0.6187376465116229, 0.552719099181039, 0.5273107971463885, 0.5175656080245972, 0.5121120044163295, 0.47882219723292757, 0.5175001791545323, 0.5037975822176252, 0.4800861052104405, 0.46195303542273386, 0.47397053241729736], "val_accuracy": [0.6183333396911621, 0.6370000243186951, 0.7146666646003723, 0.7206666469573975, 0.762666642665863, 0.7266666889190674, 0.7613333463668823, 0.7573333382606506, 0.7786666750907898, 0.7816666960716248, 0.8026666641235352, 0.7856666445732117, 0.7699999809265137, 0.7910000085830688, 0.79666668176651, 0.7946666479110718]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [8, 2, 4, 3, 0, 1, 5, 4, 2, 8, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 1, 3, 3, 0, 2, 3, 2, 0], [56, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 7, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.7802857160568237, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 8, 5, 3, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.math.add(sigma, sigma), sigma), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.23455515918384, 1.7681651594081118, 1.3010117745654552, 1.2713251717102259, 0.936213395323468, 0.8779048946130199, 0.8308393922637498, 0.822287515162036, 0.7517812228347679, 0.7362284698049862, 0.6601160004894416, 0.6276657579361157, 0.6436752191608325, 0.6431804908312323, 0.6002390646207066, 0.5633897460242304], "accuracy": [0.31184783577919006, 0.46268656849861145, 0.5543521046638489, 0.5703341960906982, 0.6600185036659241, 0.6790384650230408, 0.6837934255599976, 0.6936996579170227, 0.7111346125602722, 0.7162858247756958, 0.7506273984909058, 0.7553823590278625, 0.7541936039924622, 0.7552502751350403, 0.7738739848136902, 0.7868181467056274], "val_loss": [1.7914267948695592, 0.8982642207826886, 0.9120378834860665, 0.7050895861216954, 0.6451212167739868, 0.6017335142408099, 0.5733713592801776, 0.5823590244565692, 0.572760956627982, 0.5498349325997489, 0.49186953476497103, 0.5592863219124931, 0.5149819680622646, 0.4700839178902762, 0.4739626816340855, 0.4695009078298296], "val_accuracy": [0.3776666522026062, 0.6556666493415833, 0.5809999704360962, 0.6986666917800903, 0.6916666626930237, 0.7110000252723694, 0.7310000061988831, 0.7269999980926514, 0.7296666502952576, 0.750333309173584, 0.7906666398048401, 0.7443333268165588, 0.7683333158493042, 0.7873333096504211, 0.7816666960716248, 0.7903333306312561]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0], [9, 6, 9, 9, 0], [2, 3, 2, 3], [5, 57], [0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [5, 8, 4, 2, 2, 1, 9, 0, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 2, 2, 3, 3, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.7582857012748718, "mapping_values": [1, 1, 1, 1, 0, 1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.079632814849105, 1.3594145308616628, 1.0519884486696613, 0.9037127534884346, 0.8371685860399809, 0.8023966091687826, 0.7387520338739182, 0.7351123497328974, 0.66901805561925, 0.7022984818838465, 0.6572213486878155, 0.6285469711747986, 0.6410511338857218], "accuracy": [0.31805574893951416, 0.5163122415542603, 0.6221106648445129, 0.6667547225952148, 0.6888125538825989, 0.698190450668335, 0.7273808121681213, 0.7187954187393188, 0.7537974119186401, 0.7293620109558105, 0.7547219395637512, 0.7565711140632629, 0.7548540234565735], "val_loss": [1.1360301971435547, 0.8920776503426688, 0.6902786833899361, 0.6254556860242572, 0.5827505247933524, 0.5862240961619786, 0.5833341564450946, 0.5502290555409023, 0.5207291500908988, 0.5244077784674508, 0.492971556527274, 0.4967051233564104, 0.535595008305141], "val_accuracy": [0.6413333415985107, 0.5873333215713501, 0.6919999718666077, 0.7236666679382324, 0.7459999918937683, 0.731333315372467, 0.7223333120346069, 0.7799999713897705, 0.7663333415985107, 0.7786666750907898, 0.7799999713897705, 0.7793333530426025, 0.7673333287239075]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0], [2, 6, 9, 9, 0], [2, 1, 1, 3], [5, 30], [1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 4, 2, 2, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 2, 3, 3, 3, 0], [63, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.7582857012748718, "mapping_values": [1, 5, 5, 4, 1, 2, 19, 19, 9, 10, 3, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), grad), tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.add(beta, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), beta)), tf.math.add(tf.math.add(beta, grad), grad)))), tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.079632814849105, 1.3594145308616628, 1.0519884486696613, 0.9037127534884346, 0.8371685860399809, 0.8023966091687826, 0.7387520338739182, 0.7351123497328974, 0.66901805561925, 0.7022984818838465, 0.6572213486878155, 0.6285469711747986, 0.6410511338857218], "accuracy": [0.31805574893951416, 0.5163122415542603, 0.6221106648445129, 0.6667547225952148, 0.6888125538825989, 0.698190450668335, 0.7273808121681213, 0.7187954187393188, 0.7537974119186401, 0.7293620109558105, 0.7547219395637512, 0.7565711140632629, 0.7548540234565735], "val_loss": [1.1360301971435547, 0.8920776503426688, 0.6902786833899361, 0.6254556860242572, 0.5827505247933524, 0.5862240961619786, 0.5833341564450946, 0.5502290555409023, 0.5207291500908988, 0.5244077784674508, 0.492971556527274, 0.4967051233564104, 0.535595008305141], "val_accuracy": [0.6413333415985107, 0.5873333215713501, 0.6919999718666077, 0.7236666679382324, 0.7459999918937683, 0.731333315372467, 0.7223333120346069, 0.7799999713897705, 0.7663333415985107, 0.7786666750907898, 0.7799999713897705, 0.7793333530426025, 0.7673333287239075]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [0, 1, 0, 0, 1, 1, 0], [2, 5, 9, 9, 0], [2, 3, 2, 3], [5, 57], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [5, 8, 4, 2, 2, 1, 9, 0, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 2, 2, 3, 3, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.7428571581840515, "mapping_values": [1, 4, 4, 3, 1, 1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [4.37097618199138, 2.4267066932389008, 2.3079034765052318, 2.29651813100216, 2.1193576068800075, 1.948473254640136, 1.6037548127789711, 1.4423516180222107, 1.4642193480064494, 1.3155757974655622, 1.2564164176829313, 1.1599779845764135, 1.1141513099980282, 1.0081955425381235, 0.9310386995708055, 0.9313775746498945, 0.8453157492726943, 0.8874302112257886, 0.8676905417171499, 0.8125079001622697, 0.7501477293051182, 0.749388980481288, 0.742254427804797, 0.6785668195545744, 0.6868707980414928, 0.6530151694221834, 0.6180996678178148, 0.6065853352103299, 0.6098568746993539, 0.6016976669511428, 0.5820028713476609, 0.6545283468549655, 0.5756446868279638, 0.5424590487017875, 0.5381174145310452, 0.5219701191201548, 0.5262762313080565, 0.5318084463168129, 0.5037676600684988, 0.5026254364213198, 0.48340246875713433, 0.4807580507993541, 0.5072764388251503, 0.46642675502598485, 0.4785066929278892], "accuracy": [0.1682736724615097, 0.16153743863105774, 0.09919429570436478, 0.11662924289703369, 0.25901466608047485, 0.3649451732635498, 0.46189406514167786, 0.509840190410614, 0.5116893649101257, 0.5617488026618958, 0.5822216272354126, 0.6009774208068848, 0.6089023947715759, 0.6487914323806763, 0.6687359809875488, 0.6641130447387695, 0.6929071545600891, 0.6841896772384644, 0.6868313550949097, 0.7016246318817139, 0.7253995537757874, 0.7214370369911194, 0.7263241410255432, 0.7473253011703491, 0.7395324110984802, 0.755118191242218, 0.754589855670929, 0.7662131786346436, 0.7672698497772217, 0.7667415142059326, 0.7807422876358032, 0.7506273984909058, 0.7841764688491821, 0.7954035401344299, 0.7946110367774963, 0.8006868362426758, 0.7973847389221191, 0.7980451583862305, 0.8026680946350098, 0.8079513907432556, 0.8148196935653687, 0.8153480291366577, 0.8087438941001892, 0.8206313848495483, 0.8131026029586792], "val_loss": [1.9185030800955636, 1.9802006993974959, 1.9735921451023646, 1.9307193756103516, 1.7492950984409876, 1.5443376473018102, 1.1121273381369454, 1.051726988383702, 1.0293101923806327, 0.9506375108446393, 0.842035140310015, 1.1258752346038818, 0.8138143845966884, 0.774286150932312, 0.7468487364905221, 0.6580111128943307, 0.5968050105231149, 0.6663054057529995, 0.6385840347834996, 0.5930261101041522, 0.5752868141446795, 0.6360707453319004, 0.5326142821993146, 0.5532343217304775, 0.5102082320622036, 0.5158661774226597, 0.5189228739057269, 0.5102872678211757, 0.4722710507256644, 0.4912576845714024, 0.4731783866882324, 0.5160186461039952, 0.46747572081429617, 0.47565340995788574, 0.45107307604381014, 0.49213075637817383, 0.43967809847423006, 0.45838749408721924, 0.46583942004612516, 0.44478418145860943, 0.45416644641331266, 0.4685639313289097, 0.43317523172923494, 0.447501472064427, 0.44944341693605694], "val_accuracy": [0.13966666162014008, 0.10199999809265137, 0.125, 0.19566667079925537, 0.3733333349227905, 0.39100000262260437, 0.5490000247955322, 0.5559999942779541, 0.593999981880188, 0.6129999756813049, 0.6430000066757202, 0.4860000014305115, 0.7026666402816772, 0.7049999833106995, 0.6866666674613953, 0.721666693687439, 0.7546666860580444, 0.7443333268165588, 0.7409999966621399, 0.7556666731834412, 0.7776666879653931, 0.731333315372467, 0.7846666574478149, 0.762333333492279, 0.7910000085830688, 0.7953333258628845, 0.7903333306312561, 0.7860000133514404, 0.8036666512489319, 0.8023333549499512, 0.8059999942779541, 0.7870000004768372, 0.8109999895095825, 0.8096666932106018, 0.8243333101272583, 0.8073333501815796, 0.8190000057220459, 0.8023333549499512, 0.8163333535194397, 0.831333339214325, 0.8173333406448364, 0.8069999814033508, 0.831333339214325, 0.8253333568572998, 0.8233333230018616]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0], [2, 6, 9, 9, 0], [0, 1, 2, 3], [5, 57], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1], [1, 2, 4, 2, 2, 1, 8, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 0, 2, 3, 0, 2, 1, 3, 2, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 0, 3, 1], [13, 38]], "fitness": -0.1177142858505249, "mapping_values": [1, 3, 3, 1, 2, 1, 18, 18, 9, 9, 2, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(tf.math.pow(tf.math.add(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.pow(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), grad))))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.309955133092465, 2.3613085983577675, 2.4967849880019988, 2.710940325690015, 2.9678447104526975, 3.177468358816929, 3.3609859774283066, 3.383746831676255, 3.382048746157379, 3.2655026732560524, 3.1553452493271825, 3.072131013700188, 2.925281504031579, 2.8337883590911876, 2.7418712402583587, 2.6587496250060885, 2.5922917323011085, 2.538407125115284, 2.518355767268074, 2.4906352528995446, 2.4653529817591, 2.4543845993322138, 2.4348425366040534, 2.413501442037695, 2.4214099262841167, 2.4052733669600954], "accuracy": [0.09298639744520187, 0.10038304328918457, 0.09628847241401672, 0.10460969805717468, 0.10077928751707077, 0.10487385839223862, 0.10236428678035736, 0.10817593336105347, 0.10606260597705841, 0.1022322028875351, 0.10645885765552521, 0.10474177449941635, 0.10394927859306335, 0.10381719470024109, 0.09919429570436478, 0.10051512718200684, 0.1006472036242485, 0.10408136248588562, 0.10500594228506088, 0.10791176557540894, 0.10777968913316727, 0.10276053100824356, 0.11068551242351532, 0.11068551242351532, 0.09813763201236725, 0.10236428678035736], "val_loss": [1.9787981850760323, 2.0186304364885603, 2.099928651537214, 2.2083894184657504, 2.3099266460963657, 2.3770754677908763, 2.3919016293116977, 2.3691635813031877, 2.3180395535060336, 2.2644859722682407, 2.212641034807478, 2.1607597214835033, 2.11943210874285, 2.084291866847447, 2.0573951176234653, 2.037890298025949, 2.0242863382611955, 2.014803954533168, 2.0067454746791293, 2.000908170427595, 1.996300561087472, 1.9927523476736886, 1.9901041303362166, 1.988161836351667, 1.9856790133884974, 1.9838892391749792], "val_accuracy": [0.09099999815225601, 0.09866666793823242, 0.10000000149011612, 0.09966666996479034, 0.09966666996479034, 0.1003333330154419, 0.10100000351667404, 0.10466666519641876, 0.10966666787862778, 0.11733333021402359, 0.11933333426713943, 0.12433333694934845, 0.1276666671037674, 0.1340000033378601, 0.13733333349227905, 0.1420000046491623, 0.1420000046491623, 0.13866665959358215, 0.14033333957195282, 0.14166666567325592, 0.14233332872390747, 0.14000000059604645, 0.14033333957195282, 0.14133332669734955, 0.14033333957195282, 0.13866665959358215]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 6, 4, 2, 4, 7], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0], [7, 2, 4, 2, 2, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 1, 0, 1, 3, 3, 3, 0], [42, 58, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [0, 38]], "fitness": -0.11057142913341522, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.301886165209765, 2.3026477852517653, 2.301596389832734, 2.3016656109559586, 2.3013788776752926, 2.3018823122508993, 2.304324146621436, 2.3011244777769635, 2.302748804724747, 2.3009967067694825, 2.300375553248754, 2.300854498070024, 2.300840698827165, 2.301262787509163, 2.301534861401009, 2.3005143482262165, 2.299913140619278, 2.301243550175012, 2.300997206878511, 2.300488790579602, 2.298857458672897, 2.2995110834436865, 2.30002828104747, 2.3001508243552227, 2.3022545757011543, 2.3002211199208586, 2.2979025828162865, 2.299439767852136, 2.2986744837974435, 2.299984661059971, 2.300269521632136, 2.299622320243947, 2.2990085693508515, 2.2997499058637416, 2.299011362888526, 2.2982565899094287, 2.2984367481327928, 2.2979882163709227, 2.296265869691088, 2.299756068406151, 2.2982129369508226, 2.298096774418309, 2.2987068282016407, 2.2980262631076345, 2.297965734768002, 2.2969944470783092, 2.2984751920028685, 2.298297637489257, 2.2981309918144266, 2.297362993705416, 2.296284324000808, 2.297930384482123, 2.2975292251472537, 2.297639584764907, 2.2958939453677227, 2.2981050811533787, 2.296294850034642, 2.296764074110667, 2.2974370584637813, 2.2968444487264743, 2.295061139540193, 2.295978027548316, 2.2959600904472532, 2.2978123971704543, 2.2962707206951296, 2.294797504771702, 2.2958320041830826, 2.296425375940305, 2.295763083295327, 2.295273367565983, 2.2951576854920956, 2.2961814544298833, 2.295665365026895, 2.2950284800052705, 2.294669112729642, 2.2940456513258853, 2.2952000702754805, 2.2958219754240847, 2.2943962829271407, 2.294394410879951, 2.294963168083889, 2.295083988422983, 2.2931259591676114, 2.2938884427566033, 2.293776601454554, 2.293540998614302, 2.2937862462749288, 2.294494739282306, 2.293210737016522, 2.2935357398329286, 2.296245338075653, 2.293456880533936, 2.2936873383699012, 2.2940742310720617, 2.2933626270974394, 2.2935288214113547, 2.2932982253927547, 2.291863524351673, 2.293235021764261, 2.292070804097633], "accuracy": [0.09391097724437714, 0.09153348207473755, 0.09206181764602661, 0.0944393053650856, 0.09206181764602661, 0.09113723784685135, 0.08651433140039444, 0.09245806187391281, 0.08413683623075485, 0.09721305221319199, 0.09496764093637466, 0.1006472036242485, 0.0940430611371994, 0.09298639744520187, 0.09232597798109055, 0.09853387624025345, 0.09747721254825592, 0.09536388516426086, 0.09536388516426086, 0.10117553919553757, 0.09470347315073013, 0.09945846349000931, 0.09747721254825592, 0.09351472556591034, 0.08955223858356476, 0.09153348207473755, 0.10091137140989304, 0.09113723784685135, 0.09747721254825592, 0.09351472556591034, 0.10051512718200684, 0.09840179979801178, 0.09602430462837219, 0.0952318087220192, 0.09906221181154251, 0.10276053100824356, 0.10368511080741882, 0.09496764093637466, 0.11240258812904358, 0.1014397069811821, 0.10394927859306335, 0.10038304328918457, 0.09826971590518951, 0.1026284471154213, 0.0956280529499054, 0.1006472036242485, 0.10091137140989304, 0.10051512718200684, 0.10157178342342377, 0.10527011007070541, 0.09972262382507324, 0.10011887550354004, 0.09893012791872025, 0.10540219396352768, 0.1072513535618782, 0.10487385839223862, 0.1072513535618782, 0.1014397069811821, 0.10408136248588562, 0.10513802617788315, 0.10632677376270294, 0.10368511080741882, 0.10857218503952026, 0.109232597053051, 0.10632677376270294, 0.10606260597705841, 0.10976093262434006, 0.10500594228506088, 0.109232597053051, 0.10857218503952026, 0.11028926074504852, 0.10421344637870789, 0.10553427785634995, 0.11438383162021637, 0.11161009222269058, 0.10632677376270294, 0.10777968913316727, 0.10632677376270294, 0.11108175665140152, 0.11161009222269058, 0.1072513535618782, 0.10606260597705841, 0.11227050423622131, 0.11108175665140152, 0.1080438494682312, 0.10936468094587326, 0.11596883088350296, 0.11438383162021637, 0.10870426893234253, 0.11359133571386337, 0.10368511080741882, 0.11266675591468811, 0.11332716792821884, 0.11081759631633759, 0.11108175665140152, 0.11028926074504852, 0.11200633645057678, 0.11240258812904358, 0.10527011007070541, 0.11662924289703369], "val_loss": [1.970498834337507, 1.9704081671578544, 1.9703178405761719, 1.970226424080985, 1.9701354163033622, 1.9700444085257394, 1.9699540819440569, 1.969862597329276, 1.969771112714495, 1.9696799686976842, 1.9695893696376257, 1.9694982937404089, 1.969407081604004, 1.969315528869629, 1.9692252022879464, 1.9691341263907296, 1.9690440041678292, 1.9689527920314245, 1.9688622610909599, 1.9687720707484655, 1.9686811992100306, 1.9685908726283483, 1.9684993880135673, 1.9684092657906669, 1.9683197566441126, 1.9682297706604004, 1.9681394440787179, 1.9680493899754115, 1.967959199632917, 1.9678700310843331, 1.9677788870675224, 1.967688764844622, 1.967599732535226, 1.9675100190298898, 1.9674194880894251, 1.967329638344901, 1.9672397204807825, 1.9671493938991003, 1.967059816632952, 1.9669698987688338, 1.9668805258614677, 1.9667902673993791, 1.9667006901332311, 1.9666106360299247, 1.9665211268833704, 1.9664318220955985, 1.9663419042314803, 1.9662515095302038, 1.9661627496991838, 1.966073649270194, 1.9659838676452637, 1.965895107814244, 1.9658069610595703, 1.9657175881522042, 1.965627670288086, 1.965538774217878, 1.9654491288321358, 1.9653594153267997, 1.9652696337018694, 1.965179170880999, 1.9650893892560686, 1.9649997438703264, 1.9649097578866142, 1.9648195675441198, 1.9647299221583776, 1.9646407536097936, 1.964552334376744, 1.9644633020673479, 1.96437440599714, 1.964285101209368, 1.9641961370195662, 1.9641056741986955, 1.964017050606864, 1.9639265196663993, 1.9638384410313197, 1.9637492724827357, 1.9636594908578056, 1.9635708672659737, 1.963482243674142, 1.9633940969194685, 1.9633050646100725, 1.9632156235831124, 1.9631263869149345, 1.9630369458879744, 1.9629481179373605, 1.9628585406712122, 1.9627701214381628, 1.9626816340855189, 1.9625921930585588, 1.9625037738255091, 1.9624134472438268, 1.9623250280107771, 1.9622358594621931, 1.9621475764683314, 1.962059429713658, 1.961969988686698, 1.96188109261649, 1.9617917878287179, 1.9617018018450056, 1.9616137913295202], "val_accuracy": [0.03933333232998848, 0.03999999910593033, 0.0403333343565464, 0.0403333343565464, 0.04066666588187218, 0.0416666679084301, 0.041999999433755875, 0.04233333468437195, 0.04399999976158142, 0.044333335012197495, 0.04466666653752327, 0.04600000008940697, 0.04699999839067459, 0.04800000041723251, 0.04899999871850014, 0.04899999871850014, 0.04933333396911621, 0.049666665494441986, 0.04933333396911621, 0.05000000074505806, 0.050333332270383835, 0.05066666752099991, 0.05233333259820938, 0.05299999937415123, 0.05366666615009308, 0.05366666615009308, 0.054999999701976776, 0.05533333495259285, 0.055666666477918625, 0.05666666850447655, 0.0573333315551281, 0.05833333358168602, 0.059333331882953644, 0.05999999865889549, 0.061000000685453415, 0.061000000685453415, 0.061000000685453415, 0.06133333221077919, 0.06133333221077919, 0.061666667461395264, 0.06266666948795319, 0.06300000101327896, 0.06400000303983688, 0.06433333456516266, 0.06466666609048843, 0.06499999761581421, 0.06533333659172058, 0.06566666811704636, 0.06566666811704636, 0.06666667014360428, 0.0689999982714653, 0.06933332979679108, 0.07000000029802322, 0.07066666334867477, 0.07066666334867477, 0.07233333587646484, 0.07366666942834854, 0.07433333247900009, 0.07466666400432587, 0.07500000298023224, 0.07533333450555801, 0.07599999755620956, 0.07633333653211594, 0.07733333110809326, 0.07800000160932541, 0.07800000160932541, 0.07833333313465118, 0.07966666668653488, 0.0806666687130928, 0.08100000023841858, 0.08266666531562805, 0.0833333358168602, 0.08433333039283752, 0.08533333241939545, 0.0860000029206276, 0.0860000029206276, 0.08766666799783707, 0.08766666799783707, 0.08866667002439499, 0.08933333307504654, 0.09099999815225601, 0.09133332967758179, 0.09266666322946548, 0.09300000220537186, 0.09333333373069763, 0.09399999678134918, 0.09466666728258133, 0.09600000083446503, 0.09833333641290665, 0.09933333098888397, 0.10000000149011612, 0.10133333504199982, 0.10333333164453506, 0.10433333367109299, 0.10499999672174454, 0.10700000077486038, 0.1080000028014183, 0.10866666585206985, 0.10899999737739563, 0.109333336353302]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0], [2, 6, 9, 9, 0], [0, 1, 1, 3], [5, 57], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 4, 2, 0, 5, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 3, 0, 2, 2, 3, 3, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [0, 3], [92], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [1, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 2, 10, 10, 5, 5, 3, 1, 1, 0, 1, 1, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.pow(tf.math.add(tf.math.add(beta, beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))), tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [3.727822527169331, 240754.7996259928, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09721305221319199, 0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [4495.683454241072, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0], [2, 6, 9, 9, 0], [0, 1, 1, 3], [5, 57], [1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1], [2, 2, 4, 2, 2, 8, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 0, 3, 0, 2, 2, 3, 3, 0], [42, 58, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [8, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 18, 18, 9, 9, 2, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))))), tf.math.pow(tf.math.add(beta, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), beta))), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), grad))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(sigma, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 6, 4, 2, 4, 7], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0], [9, 2, 4, 3, 0, 1, 5, 4, 2, 8, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 1, 3, 3, 0, 2, 3, 2, 0], [97, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 9, 9, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 0, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3025852015556643, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0], [2, 6, 9, 9, 0], [0, 1, 1, 3], [5, 57], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 0, 4, 2, 2, 8, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 3, 3, 2, 3, 3, 0], [42, 87, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 13, 13, 7, 6, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.add(tf.math.add(tf.math.add(beta, grad), tf.math.sqrt(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad)), tf.math.add(beta, grad)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08387266844511032, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0], [7, 2, 4, 2, 2, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 2, 2, 3, 3, 0], [97, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [8, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08387266844511032, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0], [2, 6, 9, 9, 0], [0, 1, 1, 3], [5, 57], [1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 5, 4, 2, 2, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 3, 3, 3, 0], [31, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [3, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.06914285570383072, "mapping_values": [1, 3, 3, 1, 2, 1, 14, 14, 7, 7, 2, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.subtract(tf.math.add(beta, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad))), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(sigma, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.30184972473596, 2.302556322424277, 2.301469342363131, 2.3014922736264523, 2.301083997602492, 2.301582813703814, 2.3037678957646786, 2.300844624404343, 2.302251951837143, 2.3005872758435313, 2.3001296061408865, 2.300523102826698, 2.3006769754568253, 2.300961553459989, 2.300998096437093, 2.300231730098722, 2.299834836822034, 2.3011072980351437, 2.3007468065927688, 2.300678326295997, 2.2990805842321875, 2.2995894000892703, 2.3002084780047993, 2.300380063771792, 2.3020408689511247, 2.300447271831, 2.2984252487742403, 2.300039194861833, 2.299574773388138, 2.30056171400861, 2.3007914716415496, 2.300526703636896, 2.3001007541547662, 2.3006392882216984, 2.3000716833059958, 2.2999179800346212, 2.2997057917190187, 2.299464699142188, 2.298382307386921, 2.3012511701852167, 2.300054973693745, 2.3001744448312, 2.3001717367916688, 2.3002735623405153, 2.29968424713166, 2.2995136360749906, 2.2999549510062978, 2.3004249914872443, 2.300468125946061, 2.2999352245849782, 2.2989563330714695, 2.3002044845644543, 2.299971986991571, 2.3000787617334866, 2.2989269016819103, 2.3003841037873687, 2.2994139333049053], "accuracy": [0.0936468094587326, 0.09126931428909302, 0.09311848133802414, 0.0940430611371994, 0.09285431355237961, 0.09232597798109055, 0.0886276587843895, 0.09430722147226334, 0.08492933213710785, 0.09945846349000931, 0.09430722147226334, 0.09985470771789551, 0.09496764093637466, 0.0936468094587326, 0.09457138925790787, 0.09628847241401672, 0.09774138033390045, 0.09298639744520187, 0.0952318087220192, 0.09972262382507324, 0.09496764093637466, 0.09813763201236725, 0.09826971590518951, 0.09351472556591034, 0.08942015469074249, 0.09008057415485382, 0.10157178342342377, 0.08994849026203156, 0.09298639744520187, 0.09113723784685135, 0.09787346422672272, 0.09668471664190292, 0.09496764093637466, 0.09140139818191528, 0.09628847241401672, 0.09628847241401672, 0.10130762308835983, 0.09906221181154251, 0.10474177449941635, 0.09826971590518951, 0.09813763201236725, 0.09576013684272766, 0.09536388516426086, 0.09668471664190292, 0.0944393053650856, 0.09681680053472519, 0.1022322028875351, 0.09721305221319199, 0.09298639744520187, 0.09840179979801178, 0.09694888442754745, 0.09509972482919693, 0.0944393053650856, 0.1010434553027153, 0.10249637067317963, 0.09932637959718704, 0.09615638852119446], "val_loss": [1.9704523767743791, 1.9703326225280762, 1.9702185903276717, 1.970085688999721, 1.9699475424630302, 1.969860621861049, 1.9697300365992956, 1.9696473394121443, 1.9695559910365514, 1.9694873946053642, 1.9694457054138184, 1.969381332397461, 1.9693512916564941, 1.969299384525844, 1.9692325592041016, 1.9691922324044364, 1.969165597643171, 1.9691436631338937, 1.9691172327314104, 1.969116483415876, 1.9691081728254045, 1.9690890312194824, 1.96907411302839, 1.9690511567252023, 1.9690285410199846, 1.9690301758902413, 1.9690343993050712, 1.9690487044198173, 1.9690659386771066, 1.9690863064357214, 1.9690837860107422, 1.9690961837768555, 1.9691184588841029, 1.9691238403320312, 1.9691388947623116, 1.9691728864397322, 1.9691879408700126, 1.969208036150251, 1.9692320823669434, 1.9692343303135462, 1.9692446163722448, 1.9692463874816895, 1.969238213130406, 1.9692401204790388, 1.9692306518554688, 1.9692249979291643, 1.9691908700125558, 1.9691792215619768, 1.9691712515694755, 1.9691581726074219, 1.9691576276506697, 1.969139235360282, 1.9691205024719238, 1.9691106251307897, 1.9691175052097865, 1.9690988404410226, 1.9690942083086287], "val_accuracy": [0.03999999910593033, 0.0416666679084301, 0.04333333298563957, 0.04500000178813934, 0.04600000008940697, 0.04633333161473274, 0.047333333641290665, 0.04833333194255829, 0.04899999871850014, 0.04933333396911621, 0.05000000074505806, 0.05133333429694176, 0.05299999937415123, 0.0533333346247673, 0.054999999701976776, 0.054999999701976776, 0.056333333253860474, 0.05666666850447655, 0.0573333315551281, 0.05700000002980232, 0.05700000002980232, 0.0573333315551281, 0.057999998331069946, 0.058666665107011795, 0.05966666713356972, 0.06066666543483734, 0.06066666543483734, 0.05999999865889549, 0.06133333221077919, 0.06066666543483734, 0.06133333221077919, 0.06133333221077919, 0.061666667461395264, 0.06266666948795319, 0.06333333253860474, 0.06433333456516266, 0.06433333456516266, 0.06466666609048843, 0.06599999964237213, 0.06733333319425583, 0.06933332979679108, 0.07000000029802322, 0.07133333384990692, 0.07066666334867477, 0.0716666653752327, 0.07233333587646484, 0.07366666942834854, 0.07366666942834854, 0.07366666942834854, 0.07433333247900009, 0.07433333247900009, 0.07566666603088379, 0.07566666603088379, 0.07500000298023224, 0.07533333450555801, 0.07500000298023224, 0.07500000298023224]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0], [2, 6, 9, 9, 0], [2, 1, 1, 3], [5, 57], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [3, 8, 4, 2, 2, 1, 9, 0, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 1, 0, 1, 3, 3, 3, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 1], [3, 3, 0, 5], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 3, 3, 1, 2, 0, 12, 12, 6, 6, 2, 7, 6, 4, 2, 0, 4, 3, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), alpha)), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.square(tf.math.add(sigma, sigma))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.301925645764509, 2.3027837623489877, 2.3018264252480387, 2.301995534151143, 2.3018053214721013, 2.3024063853224934], "accuracy": [0.09391097724437714, 0.09087307006120682, 0.09126931428909302, 0.0936468094587326, 0.09087307006120682, 0.08981640636920929], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 6, 4, 2, 4, 7], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0], [9, 2, 4, 3, 0, 1, 5, 4, 2, 8, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 1, 3, 3, 0, 2, 3, 2, 0], [97, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0, 0], [0, 0, 1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 1, 3, 1], [41, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 5, 3, 2, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, sigma))))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301925645764509, 2.3027837623489877, 2.3018264252480387, 2.301995534151143, 2.3018053214721013, 2.3024063853224934], "accuracy": [0.09391097724437714, 0.09087307006120682, 0.09126931428909302, 0.0936468094587326, 0.09087307006120682, 0.08981640636920929], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [2, 6, 9, 9, 0], [0, 1, 1, 3], [5, 57], [1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 4, 2, 0, 5, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 2, 2, 3, 3, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [36], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [1, 3, 3, 1], [41, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 3, 3, 1, 2, 1, 11, 11, 6, 5, 2, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), alpha), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.pow(grad, tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))), grad))), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, sigma)))", "other_info": {"loss": [2.3019352043939385, 2.3028134246307705, 2.301875700835365, 2.302065623985888, 2.30189553331847, 2.302517100977718], "accuracy": [0.09391097724437714, 0.09074098616838455, 0.09126931428909302, 0.09325055778026581, 0.09060890227556229, 0.08968432247638702], "val_loss": [1.970608847481864, 1.970627989087786, 1.9706467219761439, 1.970665659223284, 1.9706850051879883, 1.9707042830330985], "val_accuracy": [0.03933333232998848, 0.039000000804662704, 0.039000000804662704, 0.038333334028720856, 0.03799999877810478, 0.03799999877810478]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [0, 1, 1, 3], [85, 57], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 4, 2, 2, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 3, 0, 1, 3, 2, 0], [97, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0, 0], [0, 0, 1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 1, 19, 19, 9, 10, 3, 6, 5, 3, 2, 0, 4, 3, 1, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha))), tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, grad)))))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), grad)))), beta)), tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, sigma))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.301925645764509, 2.3027837623489877, 2.3018264252480387, 2.301995534151143, 2.3018053214721013, 2.3024063853224934], "accuracy": [0.09391097724437714, 0.09087307006120682, 0.09126931428909302, 0.0936468094587326, 0.09087307006120682, 0.08981640636920929], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]