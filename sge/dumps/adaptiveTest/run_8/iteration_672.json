[{"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 5, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.7685714364051819, "mapping_values": [1, 7, 7, 5, 2, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2858476769796625, 2.2436670525167535, 2.186836527795556, 2.0938860969835695, 1.9553171653537198, 1.7671872338031844, 1.5835576875728465, 1.431520815822096, 1.3068933411517463, 1.203745832264998, 1.1413226722804957, 1.0959349630090303, 1.0505662352543435, 1.0107923275947948, 0.9802364376730939, 0.9477311405507628, 0.9231387250742435, 0.9179610014276702, 0.8946851656862363, 0.8825183137296733, 0.8656986322243609, 0.8461139600243252, 0.8349676121652654, 0.8229434813223085, 0.8139017048355706, 0.7985469626476579, 0.7948963767061018, 0.7800836367157424, 0.7765067719969184, 0.7713417831334487, 0.7630197906207572, 0.7688911926193701, 0.7518899487450831, 0.7526171763953186, 0.7386095167985604, 0.7345799121559414, 0.7376588376175222, 0.7259341781685114, 0.7258584526126506, 0.7099127574383292, 0.7093493449154185, 0.7113514135164466, 0.694063571166715, 0.7019198305649985, 0.7002299820836729, 0.6881340209282999, 0.686732813926531, 0.6845569824419788, 0.6841393405609222, 0.6797396501829092, 0.6693310068504229], "accuracy": [0.13340377807617188, 0.2362964004278183, 0.3225465714931488, 0.37907806038856506, 0.42345792055130005, 0.4711398780345917, 0.49993395805358887, 0.5259543061256409, 0.5543521046638489, 0.587769091129303, 0.6000528335571289, 0.6129969358444214, 0.6272619366645813, 0.6419231295585632, 0.6485272645950317, 0.6662263870239258, 0.6749438643455505, 0.6796988248825073, 0.67666095495224, 0.6827367544174194, 0.6913221478462219, 0.6984546184539795, 0.7038700580596924, 0.6988508701324463, 0.7055870890617371, 0.7148329019546509, 0.7116629481315613, 0.7131158113479614, 0.717870831489563, 0.7224937081336975, 0.7199841737747192, 0.7219653725624084, 0.7269845604896545, 0.733588695526123, 0.7306828498840332, 0.7313432693481445, 0.735041618347168, 0.7346453666687012, 0.7331924438476562, 0.7433628439903259, 0.7432307600975037, 0.7420420050621033, 0.7437590956687927, 0.7417778372764587, 0.7433628439903259, 0.7453441023826599, 0.7485140562057495, 0.7479857206344604, 0.7454761862754822, 0.7512878179550171, 0.7564390301704407], "val_loss": [1.9326629638671875, 1.8864974294389998, 1.8159212384905135, 1.7021222455160958, 1.5360820974622453, 1.337512493133545, 1.1535756928580148, 1.0133588314056396, 0.9145083768027169, 0.8417150122778756, 0.7883718694959369, 0.7492262125015259, 0.7226437841142926, 0.6945682764053345, 0.6742571422031948, 0.6566050733838763, 0.6419890097209385, 0.6301213332584926, 0.6216708081109183, 0.6103178092411586, 0.6002487625394549, 0.5938984325953892, 0.5823717287608555, 0.5797303744724819, 0.5704704182488578, 0.5636905431747437, 0.5561742782592773, 0.5530918155397687, 0.5491095611027309, 0.5443087475640433, 0.5374538728169033, 0.5385510240282331, 0.5312329871313912, 0.5302533422197614, 0.527083192552839, 0.5204916340964181, 0.5187033585139683, 0.5181734732219151, 0.5140468563352313, 0.5093093258993966, 0.5054636342184884, 0.5027791431971959, 0.5023047583443778, 0.49969238894326345, 0.4990372487476894, 0.4964236191340855, 0.49354604312351774, 0.49240521022251676, 0.49086810861315044, 0.48874599593026297, 0.4906191314969744], "val_accuracy": [0.351666659116745, 0.4339999854564667, 0.4779999852180481, 0.5370000004768372, 0.5540000200271606, 0.5870000123977661, 0.609333336353302, 0.6603333353996277, 0.6696666479110718, 0.6909999847412109, 0.6956666707992554, 0.7113333344459534, 0.7126666903495789, 0.721666693687439, 0.7283333539962769, 0.7239999771118164, 0.734333336353302, 0.7403333187103271, 0.7446666955947876, 0.7493333220481873, 0.7546666860580444, 0.7419999837875366, 0.7573333382606506, 0.753000020980835, 0.7643333077430725, 0.7666666507720947, 0.7689999938011169, 0.7670000195503235, 0.7746666669845581, 0.7720000147819519, 0.7760000228881836, 0.7763333320617676, 0.7749999761581421, 0.778333306312561, 0.778333306312561, 0.7796666622161865, 0.7796666622161865, 0.7776666879653931, 0.784333348274231, 0.7873333096504211, 0.7873333096504211, 0.7906666398048401, 0.7910000085830688, 0.7879999876022339, 0.7906666398048401, 0.7929999828338623, 0.7900000214576721, 0.7900000214576721, 0.7916666865348816, 0.7926666736602783, 0.7836666703224182]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 0, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [15, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.41685715317726135, "mapping_values": [1, 7, 7, 5, 2, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.square(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.302001866713617, 2.3016122893697597, 2.3009395967180453, 2.3001713823916305, 2.3000302241699115, 2.2985432802993135, 2.2969574222884646, 2.2967523215957337, 2.2962977980043218, 2.2940513043119575, 2.29361985533103, 2.2937560136276325, 2.293738972131429, 2.2927829998201776, 2.2914923214877776, 2.2888499419167374, 2.2884277803330075, 2.290597307683612, 2.2881763692797135, 2.288061163035272, 2.2869639793454444, 2.286889123343489, 2.285544274804646, 2.2845988640806003, 2.2843948775089773, 2.283181921082591, 2.2822565888180755, 2.281337794437542, 2.2816312718684286, 2.279893365376787, 2.279138550357166, 2.2788081516474468, 2.276982008143344, 2.2766056383888973, 2.277152144157844, 2.2751731962937845, 2.275002008793833, 2.2736674523419707, 2.273845584023158, 2.273044930252621, 2.2707630622782147, 2.270497084230779, 2.269179190186115, 2.2694537613165457, 2.26896539724514, 2.267363562922137, 2.2669125458567825, 2.265021910394707, 2.266892847651425, 2.2632105382300325, 2.2619232074569764, 2.2641815401701297, 2.2637285493730537, 2.2602570995347944, 2.2609400955472783, 2.260286162794227, 2.258399068970706, 2.259589571474786, 2.257361944876547, 2.256732924392966, 2.2558687639557657, 2.25497478900915, 2.2524207936396388, 2.25182652268758, 2.2505674906662505, 2.2504244512649434, 2.2528151866860946, 2.2495108535969655, 2.2482061655671606, 2.248306198489192, 2.247312772133882, 2.2461619405478155, 2.244598235499511, 2.2449495317504202, 2.2427163804290693, 2.2439150148615186, 2.239993376864765, 2.2402856836796374, 2.2394506068450744, 2.239245586737886, 2.240267110837685, 2.2363091002617845, 2.237066977437556, 2.233275377865339, 2.23401747964172, 2.232676491084242, 2.2323287170104313, 2.2299822230837236, 2.2303590611727513, 2.228890720249529, 2.228335574066571, 2.227017420000483, 2.226270131588675, 2.224315162253591, 2.2220600596382445, 2.2211624372747076, 2.219605405773737, 2.2201307412891844, 2.2190024160579873, 2.2182469429073555], "accuracy": [0.08677849918603897, 0.09377889335155487, 0.08875974267721176, 0.09615638852119446, 0.09826971590518951, 0.1026284471154213, 0.09853387624025345, 0.11174217611551285, 0.10460969805717468, 0.11055342853069305, 0.11042134463787079, 0.11728965491056442, 0.11002509295940399, 0.11174217611551285, 0.1138555034995079, 0.12296922504901886, 0.12059172987937927, 0.11398758739233017, 0.12600713968276978, 0.12310130894184113, 0.12930920720100403, 0.12851670384407043, 0.13181878626346588, 0.13749834895133972, 0.14000792801380157, 0.13710209727287292, 0.14132875204086304, 0.1410645842552185, 0.1484612375497818, 0.14714039862155914, 0.15255580842494965, 0.15176330506801605, 0.15678246319293976, 0.1574428677558899, 0.15717871487140656, 0.1632545292377472, 0.1632545292377472, 0.1636507660150528, 0.16840575635433197, 0.17250032722949982, 0.17672698199748993, 0.1728965789079666, 0.17355699837207794, 0.17540615797042847, 0.17553824186325073, 0.18412363529205322, 0.1818782240152359, 0.19191652536392212, 0.18570862710475922, 0.18914277851581573, 0.1974640041589737, 0.18716153502464294, 0.19759608805179596, 0.20274733006954193, 0.19561484456062317, 0.20591731369495392, 0.20340773463249207, 0.2032756507396698, 0.2024831622838974, 0.20737022161483765, 0.21252146363258362, 0.2164839506149292, 0.2164839506149292, 0.21872936189174652, 0.22903183102607727, 0.22440892457962036, 0.21516312658786774, 0.22361643612384796, 0.23418307304382324, 0.23022057116031647, 0.22956016659736633, 0.22639016807079315, 0.23695680499076843, 0.23299431800842285, 0.24435345828533173, 0.23761722445487976, 0.25082552433013916, 0.25161802768707275, 0.2506934404373169, 0.24356095492839813, 0.2456742823123932, 0.25703340768814087, 0.2525425851345062, 0.2592788338661194, 0.2510896921157837, 0.25756174325942993, 0.25624093413352966, 0.2689208686351776, 0.2569013237953186, 0.2595430016517639, 0.2604675590991974, 0.2709021270275116, 0.26997753977775574, 0.2763175368309021, 0.2767137885093689, 0.2797516882419586, 0.2826575040817261, 0.27116629481315613, 0.2814687490463257, 0.2794875204563141], "val_loss": [1.9698542867388045, 1.9691246577671595, 1.968400546482631, 1.9676711218697684, 1.9669457844325475, 1.9662231036594935, 1.9655120032174247, 1.9648022651672363, 1.9640837396894182, 1.9633797918047224, 1.9626646723066057, 1.9619473729814803, 1.9612366812569755, 1.9605298042297363, 1.9598148209708077, 1.959108761378697, 1.9583959579467773, 1.9576854705810547, 1.9569808415004186, 1.956277915409633, 1.9555666106087821, 1.954857689993722, 1.954139300755092, 1.9534299714224679, 1.952718666621617, 1.9520047732761927, 1.9512881551470076, 1.9505746705191476, 1.9498615264892578, 1.9491424560546875, 1.9484325817653112, 1.9477150099618095, 1.9469926016671317, 1.9462733949933733, 1.9455464226858956, 1.9448240143912179, 1.944093840462821, 1.9433749062674386, 1.9426469121660506, 1.94191803250994, 1.9411842482430595, 1.9404583658490862, 1.9397200175694056, 1.9389736992972237, 1.9382335799080985, 1.9374915531703405, 1.9367339270455497, 1.935969693320138, 1.9352107048034668, 1.9344521250043596, 1.9336731093270438, 1.9329165049961634, 1.9321517944335938, 1.9313759803771973, 1.9306020055498396, 1.9298204694475447, 1.9290393420628138, 1.9282549449375697, 1.9274584225245885, 1.9266631943838937, 1.9258739607674735, 1.9250687190464564, 1.9242518969944544, 1.9234363692147392, 1.9226106916155135, 1.9217856952122279, 1.9209564753941126, 1.9201218741280692, 1.9192778042384557, 1.9184395926339286, 1.9175964764186315, 1.9167457989283971, 1.915879590170724, 1.9150124277387346, 1.914132526942662, 1.913264206477574, 1.912372044154576, 1.911475726536342, 1.910571575164795, 1.9096697398594447, 1.9087611607142858, 1.9078405925205775, 1.906921318599156, 1.9059806551252092, 1.9050301143101283, 1.9040869304112025, 1.9031355040413993, 1.902167865208217, 1.9012016568865096, 1.900237696511405, 1.8992639950343542, 1.8982721737452917, 1.897268431527274, 1.8962670053754533, 1.8952369689941406, 1.8942110879080636, 1.8931800297328405, 1.892141342163086, 1.8910905293055944, 1.8900362423488073], "val_accuracy": [0.04266666620969772, 0.04933333396911621, 0.0533333346247673, 0.05900000035762787, 0.06199999898672104, 0.06566666811704636, 0.07266666740179062, 0.07766667008399963, 0.08433333039283752, 0.09099999815225601, 0.09733333438634872, 0.10633333027362823, 0.1120000034570694, 0.11933333426713943, 0.12800000607967377, 0.1340000033378601, 0.13899999856948853, 0.14666666090488434, 0.15299999713897705, 0.1616666615009308, 0.16833333671092987, 0.17533333599567413, 0.18566666543483734, 0.19099999964237213, 0.20000000298023224, 0.2070000022649765, 0.2136666625738144, 0.21966665983200073, 0.22333332896232605, 0.2280000001192093, 0.23399999737739563, 0.23933333158493042, 0.24566666781902313, 0.2516666650772095, 0.257999986410141, 0.2643333375453949, 0.27133333683013916, 0.2776666581630707, 0.28299999237060547, 0.2916666567325592, 0.29466667771339417, 0.29899999499320984, 0.3033333420753479, 0.3089999854564667, 0.31333333253860474, 0.31566667556762695, 0.320333331823349, 0.32466667890548706, 0.3306666612625122, 0.3330000042915344, 0.33799999952316284, 0.34299999475479126, 0.34833332896232605, 0.34933334589004517, 0.3526666760444641, 0.35633334517478943, 0.3580000102519989, 0.36000001430511475, 0.3630000054836273, 0.3643333315849304, 0.367333322763443, 0.367333322763443, 0.36899998784065247, 0.3723333477973938, 0.37400001287460327, 0.3766666650772095, 0.3799999952316284, 0.3803333342075348, 0.38233333826065063, 0.3840000033378601, 0.38466668128967285, 0.3853333294391632, 0.38600000739097595, 0.3889999985694885, 0.390666663646698, 0.39266666769981384, 0.39533331990242004, 0.3959999978542328, 0.3973333239555359, 0.39899998903274536, 0.4009999930858612, 0.4020000100135803, 0.4050000011920929, 0.40533334016799927, 0.40566667914390564, 0.40666666626930237, 0.40966665744781494, 0.4103333353996277, 0.41066667437553406, 0.41333332657814026, 0.4156666696071625, 0.4166666567325592, 0.4176666736602783, 0.42100000381469727, 0.4243333339691162, 0.4256666600704193, 0.4259999990463257, 0.4273333251476288, 0.42899999022483826, 0.429666668176651]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 8, 6, 3, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [15, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 0, 2, 2, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.41685715317726135, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 8, 4, 3, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))))), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.square(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.302001866713617, 2.3016122893697597, 2.3009395967180453, 2.3001713823916305, 2.3000302241699115, 2.2985432802993135, 2.2969574222884646, 2.2967523215957337, 2.2962977980043218, 2.2940513043119575, 2.29361985533103, 2.2937560136276325, 2.293738972131429, 2.2927829998201776, 2.2914923214877776, 2.2888499419167374, 2.2884277803330075, 2.290597307683612, 2.2881763692797135, 2.288061163035272, 2.2869639793454444, 2.286889123343489, 2.285544274804646, 2.2845988640806003, 2.2843948775089773, 2.283181921082591, 2.2822565888180755, 2.281337794437542, 2.2816312718684286, 2.279893365376787, 2.279138550357166, 2.2788081516474468, 2.276982008143344, 2.2766056383888973, 2.277152144157844, 2.2751731962937845, 2.275002008793833, 2.2736674523419707, 2.273845584023158, 2.273044930252621, 2.2707630622782147, 2.270497084230779, 2.269179190186115, 2.2694537613165457, 2.26896539724514, 2.267363562922137, 2.2669125458567825, 2.265021910394707, 2.266892847651425, 2.2632105382300325, 2.2619232074569764, 2.2641815401701297, 2.2637285493730537, 2.2602570995347944, 2.2609400955472783, 2.260286162794227, 2.258399068970706, 2.259589571474786, 2.257361944876547, 2.256732924392966, 2.2558687639557657, 2.25497478900915, 2.2524207936396388, 2.25182652268758, 2.2505674906662505, 2.2504244512649434, 2.2528151866860946, 2.2495108535969655, 2.2482061655671606, 2.248306198489192, 2.247312772133882, 2.2461619405478155, 2.244598235499511, 2.2449495317504202, 2.2427163804290693, 2.2439150148615186, 2.239993376864765, 2.2402856836796374, 2.2394506068450744, 2.239245586737886, 2.240267110837685, 2.2363091002617845, 2.237066977437556, 2.233275377865339, 2.23401747964172, 2.232676491084242, 2.2323287170104313, 2.2299822230837236, 2.2303590611727513, 2.228890720249529, 2.228335574066571, 2.227017420000483, 2.226270131588675, 2.224315162253591, 2.2220600596382445, 2.2211624372747076, 2.219605405773737, 2.2201307412891844, 2.2190024160579873, 2.2182469429073555], "accuracy": [0.08677849918603897, 0.09377889335155487, 0.08875974267721176, 0.09615638852119446, 0.09826971590518951, 0.1026284471154213, 0.09853387624025345, 0.11174217611551285, 0.10460969805717468, 0.11055342853069305, 0.11042134463787079, 0.11728965491056442, 0.11002509295940399, 0.11174217611551285, 0.1138555034995079, 0.12296922504901886, 0.12059172987937927, 0.11398758739233017, 0.12600713968276978, 0.12310130894184113, 0.12930920720100403, 0.12851670384407043, 0.13181878626346588, 0.13749834895133972, 0.14000792801380157, 0.13710209727287292, 0.14132875204086304, 0.1410645842552185, 0.1484612375497818, 0.14714039862155914, 0.15255580842494965, 0.15176330506801605, 0.15678246319293976, 0.1574428677558899, 0.15717871487140656, 0.1632545292377472, 0.1632545292377472, 0.1636507660150528, 0.16840575635433197, 0.17250032722949982, 0.17672698199748993, 0.1728965789079666, 0.17355699837207794, 0.17540615797042847, 0.17553824186325073, 0.18412363529205322, 0.1818782240152359, 0.19191652536392212, 0.18570862710475922, 0.18914277851581573, 0.1974640041589737, 0.18716153502464294, 0.19759608805179596, 0.20274733006954193, 0.19561484456062317, 0.20591731369495392, 0.20340773463249207, 0.2032756507396698, 0.2024831622838974, 0.20737022161483765, 0.21252146363258362, 0.2164839506149292, 0.2164839506149292, 0.21872936189174652, 0.22903183102607727, 0.22440892457962036, 0.21516312658786774, 0.22361643612384796, 0.23418307304382324, 0.23022057116031647, 0.22956016659736633, 0.22639016807079315, 0.23695680499076843, 0.23299431800842285, 0.24435345828533173, 0.23761722445487976, 0.25082552433013916, 0.25161802768707275, 0.2506934404373169, 0.24356095492839813, 0.2456742823123932, 0.25703340768814087, 0.2525425851345062, 0.2592788338661194, 0.2510896921157837, 0.25756174325942993, 0.25624093413352966, 0.2689208686351776, 0.2569013237953186, 0.2595430016517639, 0.2604675590991974, 0.2709021270275116, 0.26997753977775574, 0.2763175368309021, 0.2767137885093689, 0.2797516882419586, 0.2826575040817261, 0.27116629481315613, 0.2814687490463257, 0.2794875204563141], "val_loss": [1.9698542867388045, 1.9691246577671595, 1.968400546482631, 1.9676711218697684, 1.9669457844325475, 1.9662231036594935, 1.9655120032174247, 1.9648022651672363, 1.9640837396894182, 1.9633797918047224, 1.9626646723066057, 1.9619473729814803, 1.9612366812569755, 1.9605298042297363, 1.9598148209708077, 1.959108761378697, 1.9583959579467773, 1.9576854705810547, 1.9569808415004186, 1.956277915409633, 1.9555666106087821, 1.954857689993722, 1.954139300755092, 1.9534299714224679, 1.952718666621617, 1.9520047732761927, 1.9512881551470076, 1.9505746705191476, 1.9498615264892578, 1.9491424560546875, 1.9484325817653112, 1.9477150099618095, 1.9469926016671317, 1.9462733949933733, 1.9455464226858956, 1.9448240143912179, 1.944093840462821, 1.9433749062674386, 1.9426469121660506, 1.94191803250994, 1.9411842482430595, 1.9404583658490862, 1.9397200175694056, 1.9389736992972237, 1.9382335799080985, 1.9374915531703405, 1.9367339270455497, 1.935969693320138, 1.9352107048034668, 1.9344521250043596, 1.9336731093270438, 1.9329165049961634, 1.9321517944335938, 1.9313759803771973, 1.9306020055498396, 1.9298204694475447, 1.9290393420628138, 1.9282549449375697, 1.9274584225245885, 1.9266631943838937, 1.9258739607674735, 1.9250687190464564, 1.9242518969944544, 1.9234363692147392, 1.9226106916155135, 1.9217856952122279, 1.9209564753941126, 1.9201218741280692, 1.9192778042384557, 1.9184395926339286, 1.9175964764186315, 1.9167457989283971, 1.915879590170724, 1.9150124277387346, 1.914132526942662, 1.913264206477574, 1.912372044154576, 1.911475726536342, 1.910571575164795, 1.9096697398594447, 1.9087611607142858, 1.9078405925205775, 1.906921318599156, 1.9059806551252092, 1.9050301143101283, 1.9040869304112025, 1.9031355040413993, 1.902167865208217, 1.9012016568865096, 1.900237696511405, 1.8992639950343542, 1.8982721737452917, 1.897268431527274, 1.8962670053754533, 1.8952369689941406, 1.8942110879080636, 1.8931800297328405, 1.892141342163086, 1.8910905293055944, 1.8900362423488073], "val_accuracy": [0.04266666620969772, 0.04933333396911621, 0.0533333346247673, 0.05900000035762787, 0.06199999898672104, 0.06566666811704636, 0.07266666740179062, 0.07766667008399963, 0.08433333039283752, 0.09099999815225601, 0.09733333438634872, 0.10633333027362823, 0.1120000034570694, 0.11933333426713943, 0.12800000607967377, 0.1340000033378601, 0.13899999856948853, 0.14666666090488434, 0.15299999713897705, 0.1616666615009308, 0.16833333671092987, 0.17533333599567413, 0.18566666543483734, 0.19099999964237213, 0.20000000298023224, 0.2070000022649765, 0.2136666625738144, 0.21966665983200073, 0.22333332896232605, 0.2280000001192093, 0.23399999737739563, 0.23933333158493042, 0.24566666781902313, 0.2516666650772095, 0.257999986410141, 0.2643333375453949, 0.27133333683013916, 0.2776666581630707, 0.28299999237060547, 0.2916666567325592, 0.29466667771339417, 0.29899999499320984, 0.3033333420753479, 0.3089999854564667, 0.31333333253860474, 0.31566667556762695, 0.320333331823349, 0.32466667890548706, 0.3306666612625122, 0.3330000042915344, 0.33799999952316284, 0.34299999475479126, 0.34833332896232605, 0.34933334589004517, 0.3526666760444641, 0.35633334517478943, 0.3580000102519989, 0.36000001430511475, 0.3630000054836273, 0.3643333315849304, 0.367333322763443, 0.367333322763443, 0.36899998784065247, 0.3723333477973938, 0.37400001287460327, 0.3766666650772095, 0.3799999952316284, 0.3803333342075348, 0.38233333826065063, 0.3840000033378601, 0.38466668128967285, 0.3853333294391632, 0.38600000739097595, 0.3889999985694885, 0.390666663646698, 0.39266666769981384, 0.39533331990242004, 0.3959999978542328, 0.3973333239555359, 0.39899998903274536, 0.4009999930858612, 0.4020000100135803, 0.4050000011920929, 0.40533334016799927, 0.40566667914390564, 0.40666666626930237, 0.40966665744781494, 0.4103333353996277, 0.41066667437553406, 0.41333332657814026, 0.4156666696071625, 0.4166666567325592, 0.4176666736602783, 0.42100000381469727, 0.4243333339691162, 0.4256666600704193, 0.4259999990463257, 0.4273333251476288, 0.42899999022483826, 0.429666668176651]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 2, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [24, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 66, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.41685715317726135, "mapping_values": [1, 10, 10, 6, 4, 2, 12, 12, 8, 4, 5, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))), tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.square(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.302001866713617, 2.3016122893697597, 2.3009395967180453, 2.3001713823916305, 2.3000302241699115, 2.2985432802993135, 2.2969574222884646, 2.2967523215957337, 2.2962977980043218, 2.2940513043119575, 2.29361985533103, 2.2937560136276325, 2.293738972131429, 2.2927829998201776, 2.2914923214877776, 2.2888499419167374, 2.2884277803330075, 2.290597307683612, 2.2881763692797135, 2.288061163035272, 2.2869639793454444, 2.286889123343489, 2.285544274804646, 2.2845988640806003, 2.2843948775089773, 2.283181921082591, 2.2822565888180755, 2.281337794437542, 2.2816312718684286, 2.279893365376787, 2.279138550357166, 2.2788081516474468, 2.276982008143344, 2.2766056383888973, 2.277152144157844, 2.2751731962937845, 2.275002008793833, 2.2736674523419707, 2.273845584023158, 2.273044930252621, 2.2707630622782147, 2.270497084230779, 2.269179190186115, 2.2694537613165457, 2.26896539724514, 2.267363562922137, 2.2669125458567825, 2.265021910394707, 2.266892847651425, 2.2632105382300325, 2.2619232074569764, 2.2641815401701297, 2.2637285493730537, 2.2602570995347944, 2.2609400955472783, 2.260286162794227, 2.258399068970706, 2.259589571474786, 2.257361944876547, 2.256732924392966, 2.2558687639557657, 2.25497478900915, 2.2524207936396388, 2.25182652268758, 2.2505674906662505, 2.2504244512649434, 2.2528151866860946, 2.2495108535969655, 2.2482061655671606, 2.248306198489192, 2.247312772133882, 2.2461619405478155, 2.244598235499511, 2.2449495317504202, 2.2427163804290693, 2.2439150148615186, 2.239993376864765, 2.2402856836796374, 2.2394506068450744, 2.239245586737886, 2.240267110837685, 2.2363091002617845, 2.237066977437556, 2.233275377865339, 2.23401747964172, 2.232676491084242, 2.2323287170104313, 2.2299822230837236, 2.2303590611727513, 2.228890720249529, 2.228335574066571, 2.227017420000483, 2.226270131588675, 2.224315162253591, 2.2220600596382445, 2.2211624372747076, 2.219605405773737, 2.2201307412891844, 2.2190024160579873, 2.2182469429073555], "accuracy": [0.08677849918603897, 0.09377889335155487, 0.08875974267721176, 0.09615638852119446, 0.09826971590518951, 0.1026284471154213, 0.09853387624025345, 0.11174217611551285, 0.10460969805717468, 0.11055342853069305, 0.11042134463787079, 0.11728965491056442, 0.11002509295940399, 0.11174217611551285, 0.1138555034995079, 0.12296922504901886, 0.12059172987937927, 0.11398758739233017, 0.12600713968276978, 0.12310130894184113, 0.12930920720100403, 0.12851670384407043, 0.13181878626346588, 0.13749834895133972, 0.14000792801380157, 0.13710209727287292, 0.14132875204086304, 0.1410645842552185, 0.1484612375497818, 0.14714039862155914, 0.15255580842494965, 0.15176330506801605, 0.15678246319293976, 0.1574428677558899, 0.15717871487140656, 0.1632545292377472, 0.1632545292377472, 0.1636507660150528, 0.16840575635433197, 0.17250032722949982, 0.17672698199748993, 0.1728965789079666, 0.17355699837207794, 0.17540615797042847, 0.17553824186325073, 0.18412363529205322, 0.1818782240152359, 0.19191652536392212, 0.18570862710475922, 0.18914277851581573, 0.1974640041589737, 0.18716153502464294, 0.19759608805179596, 0.20274733006954193, 0.19561484456062317, 0.20591731369495392, 0.20340773463249207, 0.2032756507396698, 0.2024831622838974, 0.20737022161483765, 0.21252146363258362, 0.2164839506149292, 0.2164839506149292, 0.21872936189174652, 0.22903183102607727, 0.22440892457962036, 0.21516312658786774, 0.22361643612384796, 0.23418307304382324, 0.23022057116031647, 0.22956016659736633, 0.22639016807079315, 0.23695680499076843, 0.23299431800842285, 0.24435345828533173, 0.23761722445487976, 0.25082552433013916, 0.25161802768707275, 0.2506934404373169, 0.24356095492839813, 0.2456742823123932, 0.25703340768814087, 0.2525425851345062, 0.2592788338661194, 0.2510896921157837, 0.25756174325942993, 0.25624093413352966, 0.2689208686351776, 0.2569013237953186, 0.2595430016517639, 0.2604675590991974, 0.2709021270275116, 0.26997753977775574, 0.2763175368309021, 0.2767137885093689, 0.2797516882419586, 0.2826575040817261, 0.27116629481315613, 0.2814687490463257, 0.2794875204563141], "val_loss": [1.9698542867388045, 1.9691246577671595, 1.968400546482631, 1.9676711218697684, 1.9669457844325475, 1.9662231036594935, 1.9655120032174247, 1.9648022651672363, 1.9640837396894182, 1.9633797918047224, 1.9626646723066057, 1.9619473729814803, 1.9612366812569755, 1.9605298042297363, 1.9598148209708077, 1.959108761378697, 1.9583959579467773, 1.9576854705810547, 1.9569808415004186, 1.956277915409633, 1.9555666106087821, 1.954857689993722, 1.954139300755092, 1.9534299714224679, 1.952718666621617, 1.9520047732761927, 1.9512881551470076, 1.9505746705191476, 1.9498615264892578, 1.9491424560546875, 1.9484325817653112, 1.9477150099618095, 1.9469926016671317, 1.9462733949933733, 1.9455464226858956, 1.9448240143912179, 1.944093840462821, 1.9433749062674386, 1.9426469121660506, 1.94191803250994, 1.9411842482430595, 1.9404583658490862, 1.9397200175694056, 1.9389736992972237, 1.9382335799080985, 1.9374915531703405, 1.9367339270455497, 1.935969693320138, 1.9352107048034668, 1.9344521250043596, 1.9336731093270438, 1.9329165049961634, 1.9321517944335938, 1.9313759803771973, 1.9306020055498396, 1.9298204694475447, 1.9290393420628138, 1.9282549449375697, 1.9274584225245885, 1.9266631943838937, 1.9258739607674735, 1.9250687190464564, 1.9242518969944544, 1.9234363692147392, 1.9226106916155135, 1.9217856952122279, 1.9209564753941126, 1.9201218741280692, 1.9192778042384557, 1.9184395926339286, 1.9175964764186315, 1.9167457989283971, 1.915879590170724, 1.9150124277387346, 1.914132526942662, 1.913264206477574, 1.912372044154576, 1.911475726536342, 1.910571575164795, 1.9096697398594447, 1.9087611607142858, 1.9078405925205775, 1.906921318599156, 1.9059806551252092, 1.9050301143101283, 1.9040869304112025, 1.9031355040413993, 1.902167865208217, 1.9012016568865096, 1.900237696511405, 1.8992639950343542, 1.8982721737452917, 1.897268431527274, 1.8962670053754533, 1.8952369689941406, 1.8942110879080636, 1.8931800297328405, 1.892141342163086, 1.8910905293055944, 1.8900362423488073], "val_accuracy": [0.04266666620969772, 0.04933333396911621, 0.0533333346247673, 0.05900000035762787, 0.06199999898672104, 0.06566666811704636, 0.07266666740179062, 0.07766667008399963, 0.08433333039283752, 0.09099999815225601, 0.09733333438634872, 0.10633333027362823, 0.1120000034570694, 0.11933333426713943, 0.12800000607967377, 0.1340000033378601, 0.13899999856948853, 0.14666666090488434, 0.15299999713897705, 0.1616666615009308, 0.16833333671092987, 0.17533333599567413, 0.18566666543483734, 0.19099999964237213, 0.20000000298023224, 0.2070000022649765, 0.2136666625738144, 0.21966665983200073, 0.22333332896232605, 0.2280000001192093, 0.23399999737739563, 0.23933333158493042, 0.24566666781902313, 0.2516666650772095, 0.257999986410141, 0.2643333375453949, 0.27133333683013916, 0.2776666581630707, 0.28299999237060547, 0.2916666567325592, 0.29466667771339417, 0.29899999499320984, 0.3033333420753479, 0.3089999854564667, 0.31333333253860474, 0.31566667556762695, 0.320333331823349, 0.32466667890548706, 0.3306666612625122, 0.3330000042915344, 0.33799999952316284, 0.34299999475479126, 0.34833332896232605, 0.34933334589004517, 0.3526666760444641, 0.35633334517478943, 0.3580000102519989, 0.36000001430511475, 0.3630000054836273, 0.3643333315849304, 0.367333322763443, 0.367333322763443, 0.36899998784065247, 0.3723333477973938, 0.37400001287460327, 0.3766666650772095, 0.3799999952316284, 0.3803333342075348, 0.38233333826065063, 0.3840000033378601, 0.38466668128967285, 0.3853333294391632, 0.38600000739097595, 0.3889999985694885, 0.390666663646698, 0.39266666769981384, 0.39533331990242004, 0.3959999978542328, 0.3973333239555359, 0.39899998903274536, 0.4009999930858612, 0.4020000100135803, 0.4050000011920929, 0.40533334016799927, 0.40566667914390564, 0.40666666626930237, 0.40966665744781494, 0.4103333353996277, 0.41066667437553406, 0.41333332657814026, 0.4156666696071625, 0.4166666567325592, 0.4176666736602783, 0.42100000381469727, 0.4243333339691162, 0.4256666600704193, 0.4259999990463257, 0.4273333251476288, 0.42899999022483826, 0.429666668176651]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 2, 5, 0, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.41685715317726135, "mapping_values": [1, 6, 6, 3, 3, 1, 12, 12, 8, 4, 4, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))))), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.square(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.302001866713617, 2.3016122893697597, 2.3009395967180453, 2.3001713823916305, 2.3000302241699115, 2.2985432802993135, 2.2969574222884646, 2.2967523215957337, 2.2962977980043218, 2.2940513043119575, 2.29361985533103, 2.2937560136276325, 2.293738972131429, 2.2927829998201776, 2.2914923214877776, 2.2888499419167374, 2.2884277803330075, 2.290597307683612, 2.2881763692797135, 2.288061163035272, 2.2869639793454444, 2.286889123343489, 2.285544274804646, 2.2845988640806003, 2.2843948775089773, 2.283181921082591, 2.2822565888180755, 2.281337794437542, 2.2816312718684286, 2.279893365376787, 2.279138550357166, 2.2788081516474468, 2.276982008143344, 2.2766056383888973, 2.277152144157844, 2.2751731962937845, 2.275002008793833, 2.2736674523419707, 2.273845584023158, 2.273044930252621, 2.2707630622782147, 2.270497084230779, 2.269179190186115, 2.2694537613165457, 2.26896539724514, 2.267363562922137, 2.2669125458567825, 2.265021910394707, 2.266892847651425, 2.2632105382300325, 2.2619232074569764, 2.2641815401701297, 2.2637285493730537, 2.2602570995347944, 2.2609400955472783, 2.260286162794227, 2.258399068970706, 2.259589571474786, 2.257361944876547, 2.256732924392966, 2.2558687639557657, 2.25497478900915, 2.2524207936396388, 2.25182652268758, 2.2505674906662505, 2.2504244512649434, 2.2528151866860946, 2.2495108535969655, 2.2482061655671606, 2.248306198489192, 2.247312772133882, 2.2461619405478155, 2.244598235499511, 2.2449495317504202, 2.2427163804290693, 2.2439150148615186, 2.239993376864765, 2.2402856836796374, 2.2394506068450744, 2.239245586737886, 2.240267110837685, 2.2363091002617845, 2.237066977437556, 2.233275377865339, 2.23401747964172, 2.232676491084242, 2.2323287170104313, 2.2299822230837236, 2.2303590611727513, 2.228890720249529, 2.228335574066571, 2.227017420000483, 2.226270131588675, 2.224315162253591, 2.2220600596382445, 2.2211624372747076, 2.219605405773737, 2.2201307412891844, 2.2190024160579873, 2.2182469429073555], "accuracy": [0.08677849918603897, 0.09377889335155487, 0.08875974267721176, 0.09615638852119446, 0.09826971590518951, 0.1026284471154213, 0.09853387624025345, 0.11174217611551285, 0.10460969805717468, 0.11055342853069305, 0.11042134463787079, 0.11728965491056442, 0.11002509295940399, 0.11174217611551285, 0.1138555034995079, 0.12296922504901886, 0.12059172987937927, 0.11398758739233017, 0.12600713968276978, 0.12310130894184113, 0.12930920720100403, 0.12851670384407043, 0.13181878626346588, 0.13749834895133972, 0.14000792801380157, 0.13710209727287292, 0.14132875204086304, 0.1410645842552185, 0.1484612375497818, 0.14714039862155914, 0.15255580842494965, 0.15176330506801605, 0.15678246319293976, 0.1574428677558899, 0.15717871487140656, 0.1632545292377472, 0.1632545292377472, 0.1636507660150528, 0.16840575635433197, 0.17250032722949982, 0.17672698199748993, 0.1728965789079666, 0.17355699837207794, 0.17540615797042847, 0.17553824186325073, 0.18412363529205322, 0.1818782240152359, 0.19191652536392212, 0.18570862710475922, 0.18914277851581573, 0.1974640041589737, 0.18716153502464294, 0.19759608805179596, 0.20274733006954193, 0.19561484456062317, 0.20591731369495392, 0.20340773463249207, 0.2032756507396698, 0.2024831622838974, 0.20737022161483765, 0.21252146363258362, 0.2164839506149292, 0.2164839506149292, 0.21872936189174652, 0.22903183102607727, 0.22440892457962036, 0.21516312658786774, 0.22361643612384796, 0.23418307304382324, 0.23022057116031647, 0.22956016659736633, 0.22639016807079315, 0.23695680499076843, 0.23299431800842285, 0.24435345828533173, 0.23761722445487976, 0.25082552433013916, 0.25161802768707275, 0.2506934404373169, 0.24356095492839813, 0.2456742823123932, 0.25703340768814087, 0.2525425851345062, 0.2592788338661194, 0.2510896921157837, 0.25756174325942993, 0.25624093413352966, 0.2689208686351776, 0.2569013237953186, 0.2595430016517639, 0.2604675590991974, 0.2709021270275116, 0.26997753977775574, 0.2763175368309021, 0.2767137885093689, 0.2797516882419586, 0.2826575040817261, 0.27116629481315613, 0.2814687490463257, 0.2794875204563141], "val_loss": [1.9698542867388045, 1.9691246577671595, 1.968400546482631, 1.9676711218697684, 1.9669457844325475, 1.9662231036594935, 1.9655120032174247, 1.9648022651672363, 1.9640837396894182, 1.9633797918047224, 1.9626646723066057, 1.9619473729814803, 1.9612366812569755, 1.9605298042297363, 1.9598148209708077, 1.959108761378697, 1.9583959579467773, 1.9576854705810547, 1.9569808415004186, 1.956277915409633, 1.9555666106087821, 1.954857689993722, 1.954139300755092, 1.9534299714224679, 1.952718666621617, 1.9520047732761927, 1.9512881551470076, 1.9505746705191476, 1.9498615264892578, 1.9491424560546875, 1.9484325817653112, 1.9477150099618095, 1.9469926016671317, 1.9462733949933733, 1.9455464226858956, 1.9448240143912179, 1.944093840462821, 1.9433749062674386, 1.9426469121660506, 1.94191803250994, 1.9411842482430595, 1.9404583658490862, 1.9397200175694056, 1.9389736992972237, 1.9382335799080985, 1.9374915531703405, 1.9367339270455497, 1.935969693320138, 1.9352107048034668, 1.9344521250043596, 1.9336731093270438, 1.9329165049961634, 1.9321517944335938, 1.9313759803771973, 1.9306020055498396, 1.9298204694475447, 1.9290393420628138, 1.9282549449375697, 1.9274584225245885, 1.9266631943838937, 1.9258739607674735, 1.9250687190464564, 1.9242518969944544, 1.9234363692147392, 1.9226106916155135, 1.9217856952122279, 1.9209564753941126, 1.9201218741280692, 1.9192778042384557, 1.9184395926339286, 1.9175964764186315, 1.9167457989283971, 1.915879590170724, 1.9150124277387346, 1.914132526942662, 1.913264206477574, 1.912372044154576, 1.911475726536342, 1.910571575164795, 1.9096697398594447, 1.9087611607142858, 1.9078405925205775, 1.906921318599156, 1.9059806551252092, 1.9050301143101283, 1.9040869304112025, 1.9031355040413993, 1.902167865208217, 1.9012016568865096, 1.900237696511405, 1.8992639950343542, 1.8982721737452917, 1.897268431527274, 1.8962670053754533, 1.8952369689941406, 1.8942110879080636, 1.8931800297328405, 1.892141342163086, 1.8910905293055944, 1.8900362423488073], "val_accuracy": [0.04266666620969772, 0.04933333396911621, 0.0533333346247673, 0.05900000035762787, 0.06199999898672104, 0.06566666811704636, 0.07266666740179062, 0.07766667008399963, 0.08433333039283752, 0.09099999815225601, 0.09733333438634872, 0.10633333027362823, 0.1120000034570694, 0.11933333426713943, 0.12800000607967377, 0.1340000033378601, 0.13899999856948853, 0.14666666090488434, 0.15299999713897705, 0.1616666615009308, 0.16833333671092987, 0.17533333599567413, 0.18566666543483734, 0.19099999964237213, 0.20000000298023224, 0.2070000022649765, 0.2136666625738144, 0.21966665983200073, 0.22333332896232605, 0.2280000001192093, 0.23399999737739563, 0.23933333158493042, 0.24566666781902313, 0.2516666650772095, 0.257999986410141, 0.2643333375453949, 0.27133333683013916, 0.2776666581630707, 0.28299999237060547, 0.2916666567325592, 0.29466667771339417, 0.29899999499320984, 0.3033333420753479, 0.3089999854564667, 0.31333333253860474, 0.31566667556762695, 0.320333331823349, 0.32466667890548706, 0.3306666612625122, 0.3330000042915344, 0.33799999952316284, 0.34299999475479126, 0.34833332896232605, 0.34933334589004517, 0.3526666760444641, 0.35633334517478943, 0.3580000102519989, 0.36000001430511475, 0.3630000054836273, 0.3643333315849304, 0.367333322763443, 0.367333322763443, 0.36899998784065247, 0.3723333477973938, 0.37400001287460327, 0.3766666650772095, 0.3799999952316284, 0.3803333342075348, 0.38233333826065063, 0.3840000033378601, 0.38466668128967285, 0.3853333294391632, 0.38600000739097595, 0.3889999985694885, 0.390666663646698, 0.39266666769981384, 0.39533331990242004, 0.3959999978542328, 0.3973333239555359, 0.39899998903274536, 0.4009999930858612, 0.4020000100135803, 0.4050000011920929, 0.40533334016799927, 0.40566667914390564, 0.40666666626930237, 0.40966665744781494, 0.4103333353996277, 0.41066667437553406, 0.41333332657814026, 0.4156666696071625, 0.4166666567325592, 0.4176666736602783, 0.42100000381469727, 0.4243333339691162, 0.4256666600704193, 0.4259999990463257, 0.4273333251476288, 0.42899999022483826, 0.429666668176651]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 6, 9, 3, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [0, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 1, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 0, 0, 2, 1, 3, 0, 0], [37, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [97, 25, 50, 71, 34]], "fitness": -0.19628570973873138, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.6142324628831215, 2.302255346255138, 2.303628769533084, 2.2774986351926674, 5.491346288681534, 2.3099025923578163], "accuracy": [0.2016906589269638, 0.12072381377220154, 0.09760929644107819, 0.13974376022815704, 0.18478403985500336, 0.10038304328918457], "val_loss": [1.9253642899649483, 1.9741382598876953, 1.9727022988455636, 1.977545874459403, 1.9842094693865096, 1.9750961576189314], "val_accuracy": [0.24933333694934845, 0.09966666996479034, 0.09966666996479034, 0.10233332961797714, 0.10366666316986084, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 8, 6, 3, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [0, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [8, 4, 0, 5, 6, 4, 4, 9, 5, 1, 8, 9, 0, 1, 2, 0, 9, 0], [3, 2, 0, 2, 2, 2, 1, 3, 0, 0], [35, 33, 83, 87, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [38, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 13, 13, 9, 4, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.pow(tf.math.add(beta, tf.math.negative(grad)), tf.math.add(beta, tf.math.square(tf.math.divide_no_nan(beta, tf.math.pow(tf.math.add(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.square(beta)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07713644206523895, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 6, 5, 1, 9, 2, 4, 2, 8, 2, 3, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 1, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [0, 3], [40], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 5, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), alpha)))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3029771703912316, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 4, 5, 5, 2, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 2, 1, 3, 0, 0], [35, 33, 83, 87, 91, 78], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [41, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 8, 4, 3, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 6, 5, 1, 9, 2, 2, 2, 5, 2, 0, 5, 3, 9, 5, 9, 3, 8, 8, 5, 5, 5, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 1, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 52, 88, 56, 8, 79, 86, 52, 44], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 1, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 4, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 21, 16, 5, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), alpha)))), tf.math.add(tf.math.add(grad, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(sigma, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 1, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 1, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 6, 4, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(alpha, tf.math.square(grad))), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07713644206523895, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 5, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 0, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [9, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 2, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 5, 2, 2, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))))), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(sigma, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [28.436265647623912, 2.318934391675734, 702910972.6741863, 54893978492671.12, 2.3155125961988956, 2.305946188107804, 2.303770569069605, 2.3033476158014112, 2.303042435611417, 2.302980727838283, 2.3029453604842662], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.1006472036242485, 0.09351472556591034, 0.09932637959718704, 0.09430722147226334, 0.09259014576673508, 0.09126931428909302, 0.09232597798109055, 0.09602430462837219, 0.09311848133802414], "val_loss": [1.997605868748256, 1.9816747392926897, 15631632938715.428, 1.9932257107325964, 1.9790868759155273, 1.9752730642046248, 1.974026816231864, 1.9738238198416573, 1.9736901691981725, 1.973668439047677, 1.9736308370317732], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.017999999225139618, 0.09700000286102295, 0.09700000286102295, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 6, 9, 3, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 1, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [83, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07713644206523895, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 5, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [4, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 5, 2, 1, 1, 1, 0, 1, 1, 3, 1, 1, 0, 0, 5, 2, 3, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(sigma, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 6, 5, 1, 9, 2, 2, 2, 1, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 2, 2, 1, 8], [0, 2, 0, 2, 2, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 52, 59, 56, 8, 73, 86, 52, 44], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 1, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [1, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 32, 32, 23, 9, 6, 14, 14, 8, 6, 3, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.add(tf.math.add(grad, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.add(alpha, grad)))))), grad))), tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), grad)), tf.math.add(alpha, grad))))), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), grad))), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.square(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 2, 5, 5, 9, 2, 3, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [15, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 1, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 3, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.05657142773270607, "mapping_values": [1, 34, 34, 25, 9, 6, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.square(tf.math.add(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))))))), tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.square(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, grad)))))))), tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, grad), grad)))), grad))))), tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.square(sigma)))", "other_info": {"loss": [2.302286901966519, 2.3025878330405045, 2.302583858683723, 2.302514421846951, 2.3030679199154256, 2.302245844183597, 2.3013089015546524, 2.30176371640659, 2.302037629531973, 2.300439336658579, 2.3007087690829287, 2.301582712649102, 2.3021707719642377, 2.3018098438357666, 2.301263934317959, 2.299226799346295, 2.299546176605315, 2.302414175699164, 2.30057134031226, 2.3010987615730185, 2.300720123425293, 2.3013570394025993, 2.3008289793778123, 2.3004709550685982, 2.300840842111346, 2.3004513496043204, 2.3001406564373683, 2.2998444734232506, 2.3008618469424706, 2.2999711490782766, 2.29966935940139, 2.3001798729083447, 2.2990069687248393, 2.2991767298701324, 2.3005385876268742, 2.2992585667718624, 2.2997942367297246, 2.2990415331520944, 2.299866305996068, 2.299932195998265, 2.298226994325645, 2.2985069156244147, 2.298189719119139, 2.299282053914824, 2.2992990258473447, 2.2982372667307334, 2.2991038642586528, 2.298001953135581, 2.300384139907579, 2.29732315342865, 2.297340242224378, 2.2995066220466533, 2.3001526590225607, 2.2975372028010725, 2.2988356390114015, 2.299037498867885, 2.2978454022879267, 2.2996195709826592, 2.2985309902325186, 2.298276389452917, 2.297823524305046, 2.298480322993647, 2.296603840985523, 2.296961516342647, 2.2966483921312526, 2.2970101031267003, 2.300388049014949, 2.2978505485518546, 2.29747712135063, 2.298180118291732, 2.2978573229649535, 2.2976244123242457, 2.297421749572492, 2.2982155634915715, 2.297114173135643, 2.298265959687158, 2.296148112074983, 2.297263253649952, 2.29737391888804, 2.297990450848363, 2.2998005341167196, 2.296639951055454, 2.297988568629571, 2.2958726125890236, 2.2977224003763217, 2.2963673986574253, 2.2975349502792732, 2.2965103992302938, 2.2972975515686307, 2.296552285668148, 2.2970113286945595, 2.297050282624829, 2.297424075121987, 2.29620950556765, 2.296061295528359, 2.295243651245595, 2.2946444910278947, 2.296451499102815, 2.2967780672752816, 2.2966448542401303], "accuracy": [0.08572183549404144, 0.09153348207473755, 0.08426892012357712, 0.09179764986038208, 0.09060890227556229, 0.0952318087220192, 0.08809932321310043, 0.09826971590518951, 0.09232597798109055, 0.09219389408826828, 0.09351472556591034, 0.09800554811954498, 0.09219389408826828, 0.08770307898521423, 0.08942015469074249, 0.09549596905708313, 0.09351472556591034, 0.0866464152932167, 0.0936468094587326, 0.09047681838274002, 0.09417514503002167, 0.09470347315073013, 0.09074098616838455, 0.09734513610601425, 0.09945846349000931, 0.09589222073554993, 0.09536388516426086, 0.09298639744520187, 0.0944393053650856, 0.09232597798109055, 0.09760929644107819, 0.09879804402589798, 0.10249637067317963, 0.09668471664190292, 0.09457138925790787, 0.1002509593963623, 0.09734513610601425, 0.1002509593963623, 0.10381719470024109, 0.09391097724437714, 0.10302469879388809, 0.10210011899471283, 0.09985470771789551, 0.09536388516426086, 0.09615638852119446, 0.1010434553027153, 0.09787346422672272, 0.10381719470024109, 0.09734513610601425, 0.10355303436517715, 0.10289261490106583, 0.09708096832036972, 0.09985470771789551, 0.10632677376270294, 0.09774138033390045, 0.09985470771789551, 0.09985470771789551, 0.1010434553027153, 0.10077928751707077, 0.10210011899471283, 0.09932637959718704, 0.09734513610601425, 0.10606260597705841, 0.10447761416435242, 0.10870426893234253, 0.10394927859306335, 0.09642054885625839, 0.09945846349000931, 0.10566636174917221, 0.09879804402589798, 0.1002509593963623, 0.10606260597705841, 0.1026284471154213, 0.10487385839223862, 0.10011887550354004, 0.10117553919553757, 0.10777968913316727, 0.1026284471154213, 0.10011887550354004, 0.10487385839223862, 0.10157178342342377, 0.10540219396352768, 0.10777968913316727, 0.1072513535618782, 0.10447761416435242, 0.10698718577623367, 0.1018359512090683, 0.1154404953122139, 0.10421344637870789, 0.09826971590518951, 0.10130762308835983, 0.10513802617788315, 0.10460969805717468, 0.108440101146698, 0.10342095047235489, 0.10989301651716232, 0.11411966383457184, 0.10593052208423615, 0.11055342853069305, 0.10408136248588562], "val_loss": [1.9704993792942591, 1.9704125949314661, 1.9703241756984167, 1.9702468599591936, 1.9701687267848425, 1.9700921603611536, 1.9700159345354353, 1.9699442046029227, 1.9698658670697893, 1.9697985649108887, 1.969719069344657, 1.9696382113865443, 1.9695626667567663, 1.969482149396624, 1.9693985666547502, 1.9693261555262975, 1.9692518370492118, 1.969177314213344, 1.9690985679626465, 1.9690303121294295, 1.9689574922834123, 1.9688830375671387, 1.9688128062656947, 1.96875034059797, 1.9686786787850517, 1.9686173711504256, 1.9685401235307967, 1.9684740475245885, 1.968405314854213, 1.9683369909014021, 1.9682750020708357, 1.9682093347821916, 1.9681519099644251, 1.9680910791669572, 1.9680233682904924, 1.9679617200578963, 1.967902660369873, 1.9678475516183036, 1.9677844047546387, 1.9677310671125139, 1.9676711218697684, 1.9676131520952498, 1.9675566809517997, 1.9674931253705705, 1.9674315452575684, 1.9673736436026437, 1.9673165593828474, 1.9672508920942033, 1.9671937397548132, 1.9671414920261927, 1.9670884268624442, 1.9670327731541224, 1.966977596282959, 1.966930934361049, 1.966876643044608, 1.9668192182268416, 1.966764313834054, 1.9667167663574219, 1.9666664940970284, 1.966618537902832, 1.9665744645254952, 1.9665261677333288, 1.9664769172668457, 1.9664268493652344, 1.9663778713771276, 1.966329642704555, 1.9662785530090332, 1.966223921094622, 1.96617215020316, 1.9661202430725098, 1.966068880898612, 1.966021946498326, 1.9659737859453474, 1.9659254891531808, 1.9658780779157365, 1.9658303260803223, 1.9657774652753557, 1.9657301221575056, 1.9656813485281808, 1.9656284877232142, 1.9655776705060686, 1.965528896876744, 1.9654789652143205, 1.965428011757987, 1.9653788294110979, 1.9653285571507044, 1.9652773312159948, 1.9652295112609863, 1.965184007372175, 1.9651370729718889, 1.9650895936148507, 1.965043204171317, 1.9649932043892997, 1.9649438858032227, 1.9648942947387695, 1.9648500170026506, 1.9648004259381975, 1.9647536277770996, 1.9647118704659599, 1.9646641867501395], "val_accuracy": [0.039000000804662704, 0.03966666758060455, 0.03999999910593033, 0.041333332657814026, 0.041999999433755875, 0.0430000014603138, 0.0430000014603138, 0.04333333298563957, 0.04399999976158142, 0.04466666653752327, 0.04500000178813934, 0.045666664838790894, 0.045666664838790894, 0.045666664838790894, 0.04600000008940697, 0.04600000008940697, 0.04699999839067459, 0.047333333641290665, 0.04766666516661644, 0.04833333194255829, 0.04866666719317436, 0.05000000074505806, 0.05000000074505806, 0.05133333429694176, 0.05233333259820938, 0.05299999937415123, 0.0533333346247673, 0.05366666615009308, 0.05433333292603493, 0.05433333292603493, 0.054666668176651, 0.054666668176651, 0.054999999701976776, 0.05533333495259285, 0.05533333495259285, 0.0560000017285347, 0.05666666850447655, 0.0573333315551281, 0.05766666680574417, 0.058666665107011795, 0.05900000035762787, 0.05900000035762787, 0.059333331882953644, 0.05966666713356972, 0.060333333909511566, 0.060333333909511566, 0.06066666543483734, 0.06066666543483734, 0.061000000685453415, 0.061000000685453415, 0.06133333221077919, 0.06199999898672104, 0.06233333423733711, 0.06266666948795319, 0.06300000101327896, 0.06333333253860474, 0.06366666406393051, 0.06366666406393051, 0.06366666406393051, 0.06400000303983688, 0.06400000303983688, 0.06400000303983688, 0.06400000303983688, 0.06433333456516266, 0.06400000303983688, 0.06466666609048843, 0.06499999761581421, 0.06599999964237213, 0.06599999964237213, 0.06599999964237213, 0.06599999964237213, 0.06666667014360428, 0.06700000166893005, 0.06866666674613953, 0.06866666674613953, 0.06933332979679108, 0.06966666877269745, 0.07000000029802322, 0.070333331823349, 0.07100000232458115, 0.07066666334867477, 0.07133333384990692, 0.0716666653752327, 0.07199999690055847, 0.07199999690055847, 0.07333333045244217, 0.07366666942834854, 0.07366666942834854, 0.07400000095367432, 0.07466666400432587, 0.07533333450555801, 0.07533333450555801, 0.07599999755620956, 0.07666666805744171, 0.07666666805744171, 0.07766667008399963, 0.07800000160932541, 0.07866666465997696, 0.08033332973718643, 0.0806666687130928]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 5, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 6, 5, 9, 2, 9], [1, 1, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.pow(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(alpha, alpha))", "other_info": {"loss": [2.3023237735210174, 2.302718893726819, 2.302808161409162, 2.302825640315755, 2.3034661000730057, 2.3027206166639873], "accuracy": [0.08558975160121918, 0.09179764986038208, 0.08400475233793259, 0.09008057415485382, 0.08928807079792023, 0.09377889335155487], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 8, 6, 3, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [8, 4, 0, 5, 6, 4, 4, 9, 2, 1, 8, 9, 8, 1, 2, 8, 9, 0], [3, 2, 0, 2, 2, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [5, 3], [], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [1, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3023237735210174, 2.302718893726819, 2.302808161409162, 2.302825640315755, 2.3034661000730057, 2.3027206166639873], "accuracy": [0.08558975160121918, 0.09179764986038208, 0.08400475233793259, 0.09008057415485382, 0.08928807079792023, 0.09377889335155487], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 4, 5, 5, 2, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [5, 3, 0, 3, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [5, 3], [], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 1, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [97, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 8, 4, 3, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))))), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3023237735210174, 2.302718893726819, 2.302808161409162, 2.302825640315755, 2.3034661000730057, 2.3027206166639873], "accuracy": [0.08558975160121918, 0.09179764986038208, 0.08400475233793259, 0.09008057415485382, 0.08928807079792023, 0.09377889335155487], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 0, 2, 1, 9, 2, 2, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1], [0, 4, 3, 2, 6, 6, 1, 9, 2, 1, 4, 3, 8, 1, 1, 8, 9, 0], [3, 2, 0, 2, 2, 2, 1, 3, 0, 0, 5, 0], [35, 33, 83, 87, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 1, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [64, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 3, 3, 2, 1, 0, 28, 28, 16, 12, 5, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, beta))), tf.math.add(tf.math.add(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, beta))))), tf.math.add(beta, alpha))), tf.math.subtract(grad, tf.math.add(beta, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))))), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.sqrt(grad)))), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, alpha))", "other_info": {"loss": [2.3023237735210174, 2.302718893726819, 2.302808161409162, 2.302825640315755, 2.3034661000730057, 2.3027206166639873], "accuracy": [0.08558975160121918, 0.09179764986038208, 0.08400475233793259, 0.09008057415485382, 0.08928807079792023, 0.09377889335155487], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]