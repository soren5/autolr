[{"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 3, 4, 1, 4, 6, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 3, 0, 2, 2, 3, 0, 0], [42, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [1, 3, 2, 3, 6, 9], [1, 3, 0, 0, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.7860000133514404, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 9, 8, 3, 1, 1, 0, 1, 0, 11, 6, 5, 3], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.math.pow(tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta))))), tf.math.add(tf.math.add(beta, beta), grad)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.add(alpha, tf.math.multiply(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.1781933138068514, 1.492904667967047, 1.1946801635898132, 0.9695470060938148, 0.9217505727571944, 0.8150564350188763, 0.8025413495737563, 0.744263119921787, 0.7351481991279646, 0.7255725552770896, 0.7226861647453605, 0.6758967161241571, 0.6597722086294248, 0.6526310898136264, 0.6356024469492882, 0.6251213364455647, 0.6172802159578699, 0.6240082139887625, 0.6180653377153051, 0.5856907399039872, 0.5883301229540541], "accuracy": [0.272090882062912, 0.5052172541618347, 0.5646545886993408, 0.6514331102371216, 0.6626601219177246, 0.6959450244903564, 0.7014925479888916, 0.7169462442398071, 0.7243428826332092, 0.7306828498840332, 0.7269845604896545, 0.7390040755271912, 0.7495707273483276, 0.7467969655990601, 0.7564390301704407, 0.7646281719207764, 0.7638356685638428, 0.7651565074920654, 0.7683265209197998, 0.7795535326004028, 0.7823272943496704], "val_loss": [1.5199032511029924, 0.853499276297433, 0.7340104069028582, 0.6623270511627197, 0.6317757538386753, 0.5827550888061523, 0.5608537367412022, 0.5442684718540737, 0.525797860963004, 0.5572113990783691, 0.5231506313596453, 0.5045483963830131, 0.5059386491775513, 0.47982232911246164, 0.4793734039579119, 0.47264184270586285, 0.4749135800770351, 0.5368608747209821, 0.46894586086273193, 0.45459490162985666, 0.48388499873025076], "val_accuracy": [0.5289999842643738, 0.6726666688919067, 0.6923333406448364, 0.7070000171661377, 0.7316666841506958, 0.7513333559036255, 0.7630000114440918, 0.762333333492279, 0.7893333435058594, 0.7493333220481873, 0.7519999742507935, 0.7856666445732117, 0.7913333177566528, 0.7963333129882812, 0.7929999828338623, 0.8073333501815796, 0.8053333163261414, 0.7476666569709778, 0.8056666851043701, 0.8040000200271606, 0.7863333225250244]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [3, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [4, 8, 3, 4, 6, 4, 6, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 0, 0, 0, 2, 3, 0, 0, 0, 3], [42, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [0, 3], [21], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1], [1, 1, 2, 3, 6, 9], [3, 3, 1, 0, 3, 2, 1], [44, 47, 50, 41, 34]], "fitness": -0.28114286065101624, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 6, 4, 3, 1, 1, 5, 2, 3, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), sigma)), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.subtract(sigma, sigma), alpha)", "other_info": {"loss": [2.162236633176077, 2.3787788656078797, 2.2594094559217663, 2.0899567326314066, 2.18922542398317, 2.0931025509348697, 2.115250288046677, 2.361153851851591, 2.3151495103681126], "accuracy": [0.25122177600860596, 0.13829085230827332, 0.15598995983600616, 0.2052568942308426, 0.1802932173013687, 0.20578522980213165, 0.22057852149009705, 0.14872540533542633, 0.09311848133802414], "val_loss": [1.7932842799595423, 1.9259653772626604, 1.9175970213753837, 1.5895380633217948, 1.9098377227783203, 1.7548868315560477, 1.7709620339529855, 1.9853137561253138, 1.975064754486084], "val_accuracy": [0.2750000059604645, 0.18733333051204681, 0.28033334016799927, 0.2956666648387909, 0.18533332645893097, 0.20233333110809326, 0.2446666657924652, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [1, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1], [5, 8, 3, 4, 6, 5, 6, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 0, 0, 1, 1, 2, 0, 0], [75, 4, 99, 29, 1, 78], [0, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1], [1, 3, 2, 3, 6, 9], [3, 1, 3, 0, 3, 2, 1], [44, 47, 50, 41, 34]], "fitness": -0.24485714733600616, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 8, 6, 4, 1, 1, 0, 1, 0, 5, 2, 3, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.square(tf.math.add(beta, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), alpha)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(sigma, alpha), sigma)", "other_info": {"loss": [2.214544063105071, 2.3183658195130814, 2.3045078572217954, 2.3030633455915632, 2.301729205041718, 2.239059934180253, 2.307001307089063, 2.3007923668685164, 2.271705093857414, 2.3050846429690552, 2.3040542697327058, 2.3027187939002576, 2.303075039249763], "accuracy": [0.21437062323093414, 0.2067098170518875, 0.09760929644107819, 0.09985470771789551, 0.11451591551303864, 0.20195482671260834, 0.09708096832036972, 0.10487385839223862, 0.15493330359458923, 0.09840179979801178, 0.0956280529499054, 0.09998679161071777, 0.09853387624025345], "val_loss": [1.963768141610282, 1.976323468344552, 1.97371244430542, 1.9733196667262487, 1.9674768447875977, 1.9802579198564803, 1.973672321864537, 1.946314743586949, 1.9752751077924455, 1.9736768177577428, 1.973600115094866, 1.9736878531319755, 1.9737232072012765], "val_accuracy": [0.10233332961797714, 0.09733333438634872, 0.10700000077486038, 0.09700000286102295, 0.18333333730697632, 0.09966666996479034, 0.10233332961797714, 0.29466667771339417, 0.10233332961797714, 0.10233332961797714, 0.10400000214576721, 0.10400000214576721, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 2, 3, 8, 3, 4, 6, 6, 9, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 0, 0, 2, 3, 3, 0, 0], [42, 34, 99, 82, 1, 78], [0, 0, 0, 1, 0, 1], [1, 1, 1, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1], [1, 1, 2, 3, 6, 9], [3, 3, 1, 0, 3, 2, 1], [44, 47, 50, 41, 34]], "fitness": -0.24485714733600616, "mapping_values": [1, 1, 1, 0, 1, 0, 20, 20, 12, 8, 5, 1, 1, 0, 1, 0, 5, 2, 3, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.add(beta, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta))), tf.math.add(beta, tf.math.divide_no_nan(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.subtract(sigma, sigma), alpha)", "other_info": {"loss": [2.214544063105071, 2.3183658195130814, 2.3045078572217954, 2.3030633455915632, 2.301729205041718, 2.239059934180253, 2.307001307089063, 2.3007923668685164, 2.271705093857414, 2.3050846429690552, 2.3040542697327058, 2.3027187939002576, 2.303075039249763], "accuracy": [0.21437062323093414, 0.2067098170518875, 0.09760929644107819, 0.09985470771789551, 0.11451591551303864, 0.20195482671260834, 0.09708096832036972, 0.10487385839223862, 0.15493330359458923, 0.09840179979801178, 0.0956280529499054, 0.09998679161071777, 0.09853387624025345], "val_loss": [1.963768141610282, 1.976323468344552, 1.97371244430542, 1.9733196667262487, 1.9674768447875977, 1.9802579198564803, 1.973672321864537, 1.946314743586949, 1.9752751077924455, 1.9736768177577428, 1.973600115094866, 1.9736878531319755, 1.9737232072012765], "val_accuracy": [0.10233332961797714, 0.09733333438634872, 0.10700000077486038, 0.09700000286102295, 0.18333333730697632, 0.09966666996479034, 0.10233332961797714, 0.29466667771339417, 0.10233332961797714, 0.10233332961797714, 0.10400000214576721, 0.10400000214576721, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [3, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [6, 1, 3, 4, 6, 4, 6, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 3, 0, 2, 1, 3, 0, 0, 4, 2], [42, 64, 99, 21, 43, 78, 33, 29], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0], [3, 6, 0], [4, 3], [], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1], [1, 1, 2, 3, 6, 9], [3, 3, 1, 0, 3, 2, 1], [44, 47, 50, 41, 34]], "fitness": -0.24485714733600616, "mapping_values": [1, 1, 1, 0, 1, 0, 23, 23, 11, 12, 5, 6, 4, 3, 1, 0, 5, 2, 3, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.pow(beta, tf.math.add(beta, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))))), tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta))), alpha))))), tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), grad)))))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.subtract(sigma, sigma), alpha)", "other_info": {"loss": [2.214544063105071, 2.3183658195130814, 2.3045078572217954, 2.3030633455915632, 2.301729205041718, 2.239059934180253, 2.307001307089063, 2.3007923668685164, 2.271705093857414, 2.3050846429690552, 2.3040542697327058, 2.3027187939002576, 2.303075039249763], "accuracy": [0.21437062323093414, 0.2067098170518875, 0.09760929644107819, 0.09985470771789551, 0.11451591551303864, 0.20195482671260834, 0.09708096832036972, 0.10487385839223862, 0.15493330359458923, 0.09840179979801178, 0.0956280529499054, 0.09998679161071777, 0.09853387624025345], "val_loss": [1.963768141610282, 1.976323468344552, 1.97371244430542, 1.9733196667262487, 1.9674768447875977, 1.9802579198564803, 1.973672321864537, 1.946314743586949, 1.9752751077924455, 1.9736768177577428, 1.973600115094866, 1.9736878531319755, 1.9737232072012765], "val_accuracy": [0.10233332961797714, 0.09733333438634872, 0.10700000077486038, 0.09700000286102295, 0.18333333730697632, 0.09966666996479034, 0.10233332961797714, 0.29466667771339417, 0.10233332961797714, 0.10233332961797714, 0.10400000214576721, 0.10400000214576721, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [3, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1], [5, 8, 3, 4, 6, 4, 8, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 0, 0, 0, 1, 3, 0, 0, 0, 3], [42, 34, 99, 72, 1, 78], [0, 0, 0, 1, 0, 1], [0, 1, 1, 0], [6, 3, 0], [1, 3], [], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1], [6, 1, 2, 3, 6, 9], [0, 3, 1, 0, 3, 2, 1], [44, 47, 50, 41, 34]], "fitness": -0.11342857033014297, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 0, 3, 3, 1, 2, 0, 5, 2, 3, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, alpha), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.subtract(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), sigma), alpha)", "other_info": {"loss": [5.233525706568818e+22, 6.022678347921523e+22, 6.0252537920132615e+22, 5.8465610590924545e+22, 6.134272603138026e+22, 6.057397390679684e+22], "accuracy": [0.10447761416435242, 0.10949676483869553, 0.11081759631633759, 0.11530841141939163, 0.1138555034995079, 0.11557257920503616], "val_loss": [4.4568998727201654e+22, 4.4568998727201654e+22, 4.4568998727201654e+22, 4.4568998727201654e+22, 4.4568998727201654e+22, 4.4568998727201654e+22], "val_accuracy": [0.11100000143051147, 0.11100000143051147, 0.11100000143051147, 0.11100000143051147, 0.11100000143051147, 0.11100000143051147]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1], [1, 2, 3, 8, 3, 9, 6, 6, 9, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 3, 3, 0, 2, 3, 3, 0, 0], [42, 46, 99, 82, 43, 78, 33, 29], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0], [1, 1, 5, 3, 6, 2, 9], [3, 3, 1, 0, 3, 2, 1], [60, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 2, 1, 1, 0, 1, 0, 12, 7, 5, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(grad)), tf.math.multiply(tf.math.add(beta, grad), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.subtract(tf.math.square(sigma), tf.math.multiply(sigma, alpha)), tf.math.divide_no_nan(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [9, 3, 3, 4, 5, 4, 6, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 3, 0, 2, 2, 3, 0, 0], [42, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0], [6, 3, 2, 3, 6, 9], [3, 3, 2, 0, 2, 2], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 7, 3, 4, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(sigma, tf.math.multiply(sigma, tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3022715732673724, 2.30258518795154, 2.3025865015368248, 2.302587018902937, 2.302584508753031, 2.3025827767464464], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736441203526087, 1.973644597189767, 1.9736457552228654, 1.9736457552228654, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [9, 2, 3, 8, 3, 0, 6, 6, 9, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 3, 0, 2, 3, 3, 0, 0, 4, 2], [42, 64, 99, 21, 43, 78, 33, 29], [0, 0, 0, 1, 0, 1], [0, 0, 0, 0], [8, 3, 0, 0], [4, 3], [55], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1], [1, 1, 2, 3, 6, 9], [2, 3, 1, 0, 3, 2, 1], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 6, 4, 4, 0, 0, 5, 2, 3, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.negative(sigma)), tf.math.add(sigma, tf.math.negative(sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.subtract(beta, sigma), alpha)", "other_info": {"loss": [36483.91127798044, 2.3135829692692442, 2.305264560758414, 2.303486550095185, 2.3029468735022363, 2.3028659628146455, 2.302954625963708, 2.3030240308055947], "accuracy": [0.09509972482919693, 0.09826971590518951, 0.09615638852119446, 0.09589222073554993, 0.09760929644107819, 0.09959053993225098, 0.09298639744520187, 0.09708096832036972], "val_loss": [1.9904896872384208, 1.97818204334804, 1.9747604642595564, 1.973961285182408, 1.9736740929739816, 1.9737526348658971, 1.9737001146589006, 1.9738102640424455], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.10400000214576721, 0.0976666659116745, 0.10400000214576721, 0.09700000286102295, 0.09700000286102295, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [1, 2, 3, 8, 4, 4, 6, 5, 9, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 1, 1, 2, 2, 3, 2, 0, 0], [42, 64, 99, 21, 43, 78, 33, 29], [1, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1], [1, 9, 2, 3, 6, 9], [3, 3, 3, 0, 3, 2, 1], [19, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 9, 6, 2, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), tf.math.pow(tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.square(tf.math.add(beta, alpha))), beta))))))), tf.math.add(beta, beta))), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.302270732141993, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1], [8, 2, 3, 4, 1, 4, 6, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 3, 1, 2, 1, 3, 0, 0, 4, 2], [42, 64, 99, 21, 43, 78, 33, 29], [0, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [1, 1, 2, 3, 6, 9], [3, 3, 2, 0, 3, 2, 1], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 22, 22, 11, 11, 4, 1, 1, 0, 1, 0, 11, 6, 5, 2], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.subtract(beta, tf.math.pow(tf.math.add(beta, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(grad, tf.math.add(beta, alpha)), tf.math.subtract(tf.math.add(beta, beta), alpha)), tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)))))))), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.subtract(tf.math.add(sigma, tf.math.multiply(sigma, beta)), tf.math.divide_no_nan(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [1, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [5, 8, 3, 4, 4, 8, 6, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 1, 1, 0, 0, 3, 2, 3, 0, 0], [51, 83, 99, 84, 1, 78], [0, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1], [9, 3, 2, 3, 6, 9], [3, 3, 3, 0, 3, 2, 1], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 20, 20, 11, 9, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))))), tf.math.subtract(grad, tf.math.add(beta, beta)))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302270732141993, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [8, 9, 3, 4, 1, 4, 6, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 3, 0, 2, 2, 3, 0, 0], [42, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [1, 3], [], [1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1], [6, 1, 2, 3, 6, 9], [0, 3, 1, 0, 3, 2, 1], [80, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302270732141993, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [3, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [5, 8, 3, 4, 6, 4, 6, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 0, 0, 0, 2, 0, 0, 0, 0, 3], [42, 34, 99, 54, 1, 78, 83], [0, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1], [1, 0, 2, 3, 6, 9], [1, 0, 1, 0, 3, 2, 1], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 21, 21, 12, 9, 7, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.multiply(tf.math.add(beta, alpha), tf.math.pow(grad, tf.math.divide_no_nan(tf.math.pow(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, tf.math.add(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)))), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(beta, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))))))))), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(alpha), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [119355.2160233664, 2.674016301689556, 2.469596982080986, 2.5727947469337695, 2.6381118470462654, 2.4972835276120877], "accuracy": [0.09496764093637466, 0.09879804402589798, 0.10210011899471283, 0.10289261490106583, 0.10342095047235489, 0.09760929644107819], "val_loss": [2.3266174452645436, 2.2892148154122487, 2.315351826804025, 2.202425684247698, 2.3241405487060547, 2.2802863121032715], "val_accuracy": [0.10400000214576721, 0.09966666996479034, 0.10400000214576721, 0.09733333438634872, 0.09966666996479034, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [5, 8, 3, 4, 6, 4, 6, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 3, 3, 0, 2, 1, 3, 0, 0, 4, 2], [42, 34, 99, 54, 1, 78], [0, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [1, 3], [], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1], [1, 1, 2, 3, 6, 9], [3, 3, 0, 0, 3, 2, 1], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), tf.math.add(beta, grad))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.subtract(sigma, sigma), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [18837511.65050459, 361808816.5135385, 1675202184.3687756, 4694305216.972131, 9919852131.343283, 18347124407.87637], "accuracy": [0.09959053993225098, 0.1010434553027153, 0.09972262382507324, 0.09985470771789551, 0.10421344637870789, 0.09813763201236725], "val_loss": [71955584.0, 574942701.7142857, 1939650560.0, 4596765696.0, 8976953051.428572, 15510942866.285715], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [3, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0], [5, 8, 3, 4, 6, 4, 0, 4, 4, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 0, 0, 2, 1, 3, 0, 0], [42, 34, 99, 54, 61, 78], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [1, 3], [], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1], [1, 1, 2, 3, 6, 9], [3, 0, 1, 0, 3, 2, 1], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 20, 20, 12, 8, 5, 6, 4, 3, 1, 0, 5, 2, 3, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.pow(tf.math.add(beta, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.pow(tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, alpha))))))))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), sigma)), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.subtract(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [119406.79341042814, 2.313582955759593, 2.305264718213558, 2.303486361149012, 2.302946932012568, 2.30286574684917, 2.302954306581694, 2.303024197298664], "accuracy": [0.09509972482919693, 0.09826971590518951, 0.09615638852119446, 0.09589222073554993, 0.09760929644107819, 0.09959053993225098, 0.09298639744520187, 0.09708096832036972], "val_loss": [1.990490164075579, 1.97818204334804, 1.97475985118321, 1.973961285182408, 1.9736740929739816, 1.9737520217895508, 1.9737004552568709, 1.9738104002816337], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.10400000214576721, 0.0976666659116745, 0.10400000214576721, 0.09700000286102295, 0.09700000286102295, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [1, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1], [5, 8, 3, 4, 6, 4, 2, 3, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 1, 1, 2, 3, 1, 1, 0, 0], [42, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1], [2, 9, 2, 3, 6, 9], [3, 3, 3, 0, 3, 2, 1], [76, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 1, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), alpha)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.302270732141993, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1], [8, 8, 3, 4, 1, 4, 6, 6, 1, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 1, 0, 2, 2, 3, 0, 0], [42, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [1, 3, 2, 3, 6, 9], [1, 3, 0, 3, 3, 2], [24, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 5, 4, 2, 2, 0, 11, 6, 5, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.add(alpha, tf.math.multiply(sigma, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.3030220081683055, 2.301792129691188, 2.302792962390072, 2.302653966972211, 2.302771946694542, 2.302558321569259], "accuracy": [0.08770307898521423, 0.09457138925790787, 0.09074098616838455, 0.08558975160121918, 0.0866464152932167, 0.08809932321310043], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [1, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [8, 9, 3, 4, 1, 4, 6, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 3, 1, 0, 0, 2, 2, 3, 0, 0], [75, 4, 99, 84, 1, 78], [1, 0, 0, 1, 0, 1], [0, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1], [1, 1, 2, 3, 6, 9], [3, 3, 3, 0, 3, 2, 1], [44, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.subtract(sigma, sigma), sigma)", "other_info": {"loss": [2.3030220081683055, 2.301792129691188, 2.302792962390072, 2.302653966972211, 2.302771946694542, 2.302558321569259], "accuracy": [0.08770307898521423, 0.09457138925790787, 0.09074098616838455, 0.08558975160121918, 0.0866464152932167, 0.08809932321310043], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [1, 2, 3, 8, 3, 4, 6, 9, 9, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 3, 3, 0, 2, 1, 3, 0, 0, 4, 2], [42, 47, 99, 2, 1, 78], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0], [8, 3, 0], [4, 3], [], [1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1], [1, 0, 2, 3, 6, 9], [3, 3, 1, 0, 3, 2, 1], [44, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 8, 6, 3, 4, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.pow(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))))))), tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3030220081683055, 2.301792129691188, 2.302792962390072, 2.302653966972211, 2.302771946694542, 2.302558321569259], "accuracy": [0.08770307898521423, 0.09457138925790787, 0.09074098616838455, 0.08558975160121918, 0.0866464152932167, 0.08809932321310043], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]