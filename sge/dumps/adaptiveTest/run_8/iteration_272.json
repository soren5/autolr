[{"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.7871428728103638, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.0188699906071683, 1.3632201372341095, 1.0337403917577146, 0.9068973203691683, 0.8253595559840441, 0.7583667643003145, 0.7329285692592354, 0.7054910541856136, 0.693133643668294, 0.6720286241265462, 0.6516564211683534, 0.6446598784294678, 0.6180144511177996, 0.5947957151774733, 0.6054934206860428, 0.5739528868712014, 0.5712198700729756, 0.5712179024820047, 0.5480054695576945, 0.5366171550568084, 0.5313280054748555], "accuracy": [0.3187161684036255, 0.5068022608757019, 0.6222427487373352, 0.6601505875587463, 0.6993792057037354, 0.71100252866745, 0.7271166443824768, 0.7320036888122559, 0.739928662776947, 0.7479857206344604, 0.7540615797042847, 0.7574957013130188, 0.7691190242767334, 0.7770439982414246, 0.7651565074920654, 0.7882710099220276, 0.7841764688491821, 0.7788931727409363, 0.7968564033508301, 0.8001585006713867, 0.798309326171875], "val_loss": [1.39811372756958, 0.8047087022236415, 0.6904243741716657, 0.6404402085712978, 0.5772928850991386, 0.5654596090316772, 0.5562352623258319, 0.5705047845840454, 0.5489985772541591, 0.5041051762444633, 0.5206429447446551, 0.47388241972242084, 0.48457845619746615, 0.49136253765651156, 0.45654415232794626, 0.4376893639564514, 0.4806140661239624, 0.4495489427021572, 0.4442802667617798, 0.447749708380018, 0.4457013266427176], "val_accuracy": [0.3766666650772095, 0.6746666431427002, 0.656000018119812, 0.7226666808128357, 0.7316666841506958, 0.7419999837875366, 0.746666669845581, 0.7283333539962769, 0.7316666841506958, 0.7613333463668823, 0.7876666784286499, 0.7826666831970215, 0.7886666655540466, 0.7756666541099548, 0.7946666479110718, 0.8169999718666077, 0.7776666879653931, 0.8023333549499512, 0.8096666932106018, 0.8059999942779541, 0.7990000247955322]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1], [2, 3, 2, 4, 0, 3, 4, 2, 3, 8, 5, 8, 2, 1, 2, 7, 9, 0], [2, 3, 0, 1, 2, 0, 2, 2, 0, 0, 1, 3, 2, 2], [8, 24, 50, 80, 66, 31], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.7871428728103638, "mapping_values": [1, 30, 30, 18, 12, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.sqrt(alpha)))), grad), tf.math.add(alpha, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))))), tf.math.square(grad))))), tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))))))), tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.0188699906071683, 1.3632201372341095, 1.0337403917577146, 0.9068973203691683, 0.8253595559840441, 0.7583667643003145, 0.7329285692592354, 0.7054910541856136, 0.693133643668294, 0.6720286241265462, 0.6516564211683534, 0.6446598784294678, 0.6180144511177996, 0.5947957151774733, 0.6054934206860428, 0.5739528868712014, 0.5712198700729756, 0.5712179024820047, 0.5480054695576945, 0.5366171550568084, 0.5313280054748555], "accuracy": [0.3187161684036255, 0.5068022608757019, 0.6222427487373352, 0.6601505875587463, 0.6993792057037354, 0.71100252866745, 0.7271166443824768, 0.7320036888122559, 0.739928662776947, 0.7479857206344604, 0.7540615797042847, 0.7574957013130188, 0.7691190242767334, 0.7770439982414246, 0.7651565074920654, 0.7882710099220276, 0.7841764688491821, 0.7788931727409363, 0.7968564033508301, 0.8001585006713867, 0.798309326171875], "val_loss": [1.39811372756958, 0.8047087022236415, 0.6904243741716657, 0.6404402085712978, 0.5772928850991386, 0.5654596090316772, 0.5562352623258319, 0.5705047845840454, 0.5489985772541591, 0.5041051762444633, 0.5206429447446551, 0.47388241972242084, 0.48457845619746615, 0.49136253765651156, 0.45654415232794626, 0.4376893639564514, 0.4806140661239624, 0.4495489427021572, 0.4442802667617798, 0.447749708380018, 0.4457013266427176], "val_accuracy": [0.3766666650772095, 0.6746666431427002, 0.656000018119812, 0.7226666808128357, 0.7316666841506958, 0.7419999837875366, 0.746666669845581, 0.7283333539962769, 0.7316666841506958, 0.7613333463668823, 0.7876666784286499, 0.7826666831970215, 0.7886666655540466, 0.7756666541099548, 0.7946666479110718, 0.8169999718666077, 0.7776666879653931, 0.8023333549499512, 0.8096666932106018, 0.8059999942779541, 0.7990000247955322]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [1, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.7494285702705383, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.496452527732078, 2.3541995528005355, 2.305250776032919, 2.303208162315045, 2.3033300691576146, 2.3028480507804416, 2.3025596414842404, 2.302464242750517, 2.300962596442863, 2.234166847921051, 2.7700372178084374, 2.304555003984084, 2.3026993552754504, 2.3012994284233663, 2.2890199945115017, 2.1288481924622333, 1.958754812091837, 1.9432063982424057, 1.7657422255279365, 1.4013765166070655, 1.6948985388376268, 2.3476614398160205, 2.169471414633053, 1.8623815331996283, 1.2180278300294283, 1.0897537370509696, 1.1165015374223837, 0.9852420592493841, 1.4990997084568616, 1.0681023217305656, 1.0234864449787606, 1.0641990841072722, 0.9457365205306513, 0.8443489452127011, 0.8388666665360377, 0.8137794615979586, 0.7744600540375146], "accuracy": [0.21159687638282776, 0.16616034507751465, 0.09549596905708313, 0.10210011899471283, 0.10117553919553757, 0.10196803510189056, 0.10249637067317963, 0.09787346422672272, 0.11134592443704605, 0.19112402200698853, 0.17091533541679382, 0.10315678268671036, 0.09826971590518951, 0.10447761416435242, 0.12798838317394257, 0.24395720660686493, 0.354510635137558, 0.35966187715530396, 0.40945714712142944, 0.524501383304596, 0.45885616540908813, 0.1162329912185669, 0.2118610441684723, 0.39862632751464844, 0.5736362338066101, 0.6107515692710876, 0.6115440726280212, 0.6490556001663208, 0.5299167633056641, 0.6350548267364502, 0.6392814517021179, 0.6373002529144287, 0.6568484902381897, 0.6816800832748413, 0.6865671873092651, 0.7000396251678467, 0.7033417224884033], "val_loss": [1.9870335715157645, 1.9770631790161133, 1.9739337648664201, 1.973625728062221, 1.9735444613865443, 1.9735138075692313, 1.9735430989946638, 1.972909654889788, 1.969700881413051, 1.8522231919424874, 1.9758041926792689, 1.9733215740748815, 1.972278390611921, 1.9682643072945731, 1.8989785058157784, 1.7117737361363001, 1.6800924369267054, 1.5778864451817103, 1.149228538785662, 0.9886555671691895, 1.8954386711120605, 1.9735776356288366, 1.5251479830060686, 1.0660479749952043, 0.856056673186166, 0.7058933803013393, 0.7537313018526349, 0.6751092331750053, 0.8562848057065692, 0.7299243211746216, 0.6291906833648682, 0.6457521745136806, 0.5937648500714984, 0.6643691573824201, 0.590716975075858, 0.5553137574877057, 0.5327227115631104], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.10000000149011612, 0.09733333438634872, 0.09833333641290665, 0.09733333438634872, 0.09700000286102295, 0.10333333164453506, 0.10300000011920929, 0.18466666340827942, 0.10000000149011612, 0.09833333641290665, 0.10366666316986084, 0.10866666585206985, 0.21699999272823334, 0.30000001192092896, 0.38466668128967285, 0.44600000977516174, 0.5223333239555359, 0.6286666393280029, 0.27533334493637085, 0.11233333498239517, 0.5046666860580444, 0.578000009059906, 0.6439999938011169, 0.6853333115577698, 0.6909999847412109, 0.7223333120346069, 0.6536666750907898, 0.7039999961853027, 0.7473333477973938, 0.7540000081062317, 0.7353333234786987, 0.7246666550636292, 0.7306666374206543, 0.7476666569709778, 0.7456666827201843]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1], [2, 3, 2, 4, 0, 3, 4, 6, 3, 8, 5, 8, 2, 1], [2, 3, 0, 2, 2, 1, 2, 2, 0, 0, 0, 3, 2, 2], [8, 57, 18, 95], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 2, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.7494285702705383, "mapping_values": [1, 20, 20, 11, 9, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.multiply(grad, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), grad)))))), tf.math.add(alpha, tf.math.divide_no_nan(alpha, grad)))), tf.math.multiply(tf.math.sqrt(tf.math.square(tf.math.add(alpha, grad))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.496452527732078, 2.3541995528005355, 2.305250776032919, 2.303208162315045, 2.3033300691576146, 2.3028480507804416, 2.3025596414842404, 2.302464242750517, 2.300962596442863, 2.234166847921051, 2.7700372178084374, 2.304555003984084, 2.3026993552754504, 2.3012994284233663, 2.2890199945115017, 2.1288481924622333, 1.958754812091837, 1.9432063982424057, 1.7657422255279365, 1.4013765166070655, 1.6948985388376268, 2.3476614398160205, 2.169471414633053, 1.8623815331996283, 1.2180278300294283, 1.0897537370509696, 1.1165015374223837, 0.9852420592493841, 1.4990997084568616, 1.0681023217305656, 1.0234864449787606, 1.0641990841072722, 0.9457365205306513, 0.8443489452127011, 0.8388666665360377, 0.8137794615979586, 0.7744600540375146], "accuracy": [0.21159687638282776, 0.16616034507751465, 0.09549596905708313, 0.10210011899471283, 0.10117553919553757, 0.10196803510189056, 0.10249637067317963, 0.09787346422672272, 0.11134592443704605, 0.19112402200698853, 0.17091533541679382, 0.10315678268671036, 0.09826971590518951, 0.10447761416435242, 0.12798838317394257, 0.24395720660686493, 0.354510635137558, 0.35966187715530396, 0.40945714712142944, 0.524501383304596, 0.45885616540908813, 0.1162329912185669, 0.2118610441684723, 0.39862632751464844, 0.5736362338066101, 0.6107515692710876, 0.6115440726280212, 0.6490556001663208, 0.5299167633056641, 0.6350548267364502, 0.6392814517021179, 0.6373002529144287, 0.6568484902381897, 0.6816800832748413, 0.6865671873092651, 0.7000396251678467, 0.7033417224884033], "val_loss": [1.9870335715157645, 1.9770631790161133, 1.9739337648664201, 1.973625728062221, 1.9735444613865443, 1.9735138075692313, 1.9735430989946638, 1.972909654889788, 1.969700881413051, 1.8522231919424874, 1.9758041926792689, 1.9733215740748815, 1.972278390611921, 1.9682643072945731, 1.8989785058157784, 1.7117737361363001, 1.6800924369267054, 1.5778864451817103, 1.149228538785662, 0.9886555671691895, 1.8954386711120605, 1.9735776356288366, 1.5251479830060686, 1.0660479749952043, 0.856056673186166, 0.7058933803013393, 0.7537313018526349, 0.6751092331750053, 0.8562848057065692, 0.7299243211746216, 0.6291906833648682, 0.6457521745136806, 0.5937648500714984, 0.6643691573824201, 0.590716975075858, 0.5553137574877057, 0.5327227115631104], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.10000000149011612, 0.09733333438634872, 0.09833333641290665, 0.09733333438634872, 0.09700000286102295, 0.10333333164453506, 0.10300000011920929, 0.18466666340827942, 0.10000000149011612, 0.09833333641290665, 0.10366666316986084, 0.10866666585206985, 0.21699999272823334, 0.30000001192092896, 0.38466668128967285, 0.44600000977516174, 0.5223333239555359, 0.6286666393280029, 0.27533334493637085, 0.11233333498239517, 0.5046666860580444, 0.578000009059906, 0.6439999938011169, 0.6853333115577698, 0.6909999847412109, 0.7223333120346069, 0.6536666750907898, 0.7039999961853027, 0.7473333477973938, 0.7540000081062317, 0.7353333234786987, 0.7246666550636292, 0.7306666374206543, 0.7476666569709778, 0.7456666827201843]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 2, 0, 1, 0, 2, 2, 0, 0, 0, 3, 2, 2], [20, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [5, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [2, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07726852595806122, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [1, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 57, 18, 39], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 8, 0, 3, 6], [0, 1, 0, 1, 3, 2], [38, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 9, 6, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)))))), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.negative(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1], [4, 3, 2, 4, 0, 3, 4, 2, 3, 8, 5, 3, 2, 1], [2, 2, 2, 0, 1, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50, 41, 66, 31], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [2, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 8, 8, 2, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), grad)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.multiply(grad, tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), alpha))))), tf.math.add(alpha, tf.math.add(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), grad)))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))))), tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), sigma), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [48, 86, 50, 35], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [6, 3], [], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 2, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 10, 6, 4, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.square(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), grad))), tf.math.add(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07779685407876968, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1], [2, 3, 2, 3, 0, 3, 9, 4, 9, 8, 5, 8, 2, 1], [2, 3, 0, 0, 1, 0, 2, 2, 2, 0, 0, 3, 2, 2], [8, 86, 50, 80, 66, 31], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 8, 9, 3, 6], [3, 1, 0, 1, 3, 2], [57, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 10, 5, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 3, 0, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.add(alpha, grad), grad), tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.sqrt(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [933687523.0575497, 17444509761.191917, 82181095174.05257, 227981671394.1091, 489264701261.4661, 900286231202.6416], "accuracy": [0.09945846349000931, 0.10157178342342377, 0.09668471664190292, 0.09430722147226334, 0.10355303436517715, 0.09866596013307571], "val_loss": [3509856036.571429, 28069579629.714287, 94724531346.28572, 224516079616.0, 438502780342.8571, 757709518555.4286], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1], [2, 3, 2, 4, 0, 2, 4, 2, 3, 8, 5, 8, 3, 1], [1, 3, 2, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50, 4, 78, 32], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 9, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 8, 8, 2, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), grad)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.pow(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), grad)), tf.math.add(alpha, tf.math.add(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), grad)))))), grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07779685407876968, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [52, 86, 50, 39], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [10, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [43], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0], [5, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [38, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), grad)))), tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07779685407876968, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], [2, 7, 6, 6, 0, 3, 4, 1, 5, 2], [2, 1, 1, 0, 2, 2, 2, 2, 0, 0, 0, 3, 2, 2], [76, 86, 50, 45], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 3, 0, 3, 0, 3, 2, 3, 3, 0], [10, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 7, 9, 3, 6], [3, 1, 0, 1, 3, 2], [84, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 8, 8, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(alpha, tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, grad), grad))))))), grad), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [20833291.630255017, 2.3123313322547183, 2.304936502839848, 2.303371558147194, 2.303091580510974, 2.3028767634502505], "accuracy": [0.09959053993225098, 0.09774138033390045, 0.09391097724437714, 0.09430722147226334, 0.09959053993225098, 0.09470347315073013], "val_loss": [1.985670702798026, 1.9759519440787179, 1.9740477289472307, 1.9737071309770857, 1.973581314086914, 1.9736658505031042], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1], [2, 4, 6, 6, 0, 3, 4, 1, 5, 0], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [1, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 6, 3, 6], [3, 1, 0, 1, 3, 2], [7, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 18, 10, 8, 3, 9, 9, 5, 4, 2, 6, 4, 3, 1, 0, 6, 3, 3, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), grad)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.square(grad)))), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.negative(grad)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))))), tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), sigma)), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.divide_no_nan(alpha, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 57, 18], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [10, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [5, 3, 5, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.math.square(sigma), alpha))", "other_info": {"loss": [2.3025466459869093, 2.3015902074194856, 1767090.6948803402, 1334189362057.806, 7.25696324653991e+16, 2.2698857842191782e+21, 1.2361342447305873e+26, NaN, NaN, NaN], "accuracy": [0.08889182657003403, 0.09325055778026581, 0.10672302544116974, 0.09932637959718704, 0.10236428678035736, 0.10421344637870789, 0.09642054885625839, 0.09945846349000931, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.970590250832694, 1.9703821454729353, 193475840.0, 20264734237842.285, 7.840127153289485e+17, 2.94849059175508e+22, 3.725465979570735e+27, NaN, NaN, NaN], "val_accuracy": [0.03933333232998848, 0.05700000002980232, 0.09966666996479034, 0.0976666659116745, 0.10233332961797714, 0.09833333641290665, 0.09833333641290665, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 8, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0], [0, 3, 6, 3, 6, 9], [3, 1, 0, 1, 3, 2], [7, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 10, 6, 4, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, grad)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.divide_no_nan(sigma, tf.math.multiply(alpha, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [6, 9, 6, 6, 0, 3, 4, 1, 5], [1, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 1, 0, 3, 6], [0, 1, 0, 1, 3, 2], [38, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 2, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.negative(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), alpha))", "other_info": {"loss": [2.3023352572600193, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 1, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0], [0, 3, 5, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.06257142871618271, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.square(sigma), alpha))", "other_info": {"loss": [2.3024897397769015, 2.3010874273534214, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08942015469074249, 0.09866596013307571, 0.10342095047235489, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9719338417053223, 1.983529772077288, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03200000151991844, 0.12266666442155838, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1], [0, 6, 9, 4, 0, 3, 4], [0, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [3, 86, 50, 45], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 8, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 0, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.302546677477938, 2.3014581619457184, 2.3030132150857865, 2.303139422154304, 2.303296672260253, 2.302216680121381], "accuracy": [0.08889182657003403, 0.09338264167308807, 0.08902391046285629, 0.09021265059709549, 0.08691058307886124, 0.0944393053650856], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 8, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 1, 0, 1, 0, 3, 2, 3, 3, 0], [33, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [3, 3], [42], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 6, 3, 6], [3, 1, 0, 1, 3, 2], [38, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.divide_no_nan(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.302546677477938, 2.3014581619457184, 2.3030132150857865, 2.303139422154304, 2.303296672260253, 2.302216680121381], "accuracy": [0.08889182657003403, 0.09338264167308807, 0.08902391046285629, 0.09021265059709549, 0.08691058307886124, 0.0944393053650856], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [1, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 6, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302546677477938, 2.3014581619457184, 2.3030132150857865, 2.303139422154304, 2.303296672260253, 2.302216680121381], "accuracy": [0.08889182657003403, 0.09338264167308807, 0.08902391046285629, 0.09021265059709549, 0.08691058307886124, 0.0944393053650856], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]