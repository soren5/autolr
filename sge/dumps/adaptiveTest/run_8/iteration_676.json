[{"genotype": [[0], [1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [3, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 5, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 12, 83, 82, 42, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.7774285674095154, "mapping_values": [1, 5, 5, 3, 2, 0, 11, 11, 8, 3, 3, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(alpha)), tf.math.square(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), grad)))), tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.divide_no_nan(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.73276328448496, 2.4019185432337844, 2.3235072582908955, 2.2384628867901486, 1.899245674757201, 1.49702569002709, 1.3281144482065044, 1.1652062816107198, 1.0002185956141605, 0.9584364716198308, 0.941836247527919, 0.8315278003716812, 0.7766045405407781, 0.7601852380620049, 0.7229609764436327, 0.690200531881058, 0.6447086050573073, 0.6818273515827888, 0.6384265950374505, 0.6231482126347189, 0.6076942555121206, 0.609121587250951, 0.5781074092490813, 0.5744080866852205, 0.588236122547974, 0.5868634819952945, 0.5402977452176106, 0.5600512446964799, 0.5427631984738279, 0.5456403126538375, 0.5293167108841356, 0.5269699269959074, 0.5292413604572827], "accuracy": [0.17461365461349487, 0.15493330359458923, 0.1784440577030182, 0.18782195448875427, 0.3291507065296173, 0.468630313873291, 0.5114251971244812, 0.5925241112709045, 0.6332056522369385, 0.6479989290237427, 0.6539427042007446, 0.6877558827400208, 0.7102100253105164, 0.7190595865249634, 0.7296261787414551, 0.7383436560630798, 0.7543256878852844, 0.7479857206344604, 0.7613261342048645, 0.7630431652069092, 0.7718927264213562, 0.774270236492157, 0.7804781198501587, 0.7868181467056274, 0.7779685854911804, 0.7736098170280457, 0.7967243194580078, 0.793422281742096, 0.7991018295288086, 0.7952714562416077, 0.8010830879211426, 0.7989697456359863, 0.7976489067077637], "val_loss": [1.963047913142613, 2.032693522317069, 1.9806958607264928, 1.9050682612827845, 1.0642273426055908, 0.9596517767224994, 1.0507565225873674, 0.789002673966544, 0.6535637208393642, 0.6108583041599819, 0.6375765630177089, 0.5408005033220563, 0.5578842844281878, 0.5084892170769828, 0.5026669331959316, 0.5192410775593349, 0.4575458083833967, 0.4819379023143223, 0.5276578835078648, 0.47490763664245605, 0.44660996539252146, 0.4626288754599435, 0.4442528486251831, 0.46754452160426546, 0.4790718214852469, 0.42293972628457205, 0.4190850257873535, 0.4320540598460606, 0.42129489353724886, 0.44023819480623516, 0.4234383702278137, 0.4747757741383144, 0.43611002819878714], "val_accuracy": [0.14266666769981384, 0.10599999874830246, 0.09700000286102295, 0.20133332908153534, 0.5519999861717224, 0.6136666536331177, 0.6150000095367432, 0.6470000147819519, 0.7049999833106995, 0.6959999799728394, 0.7263333201408386, 0.753333330154419, 0.7236666679382324, 0.7710000276565552, 0.7786666750907898, 0.7429999709129333, 0.8019999861717224, 0.7816666960716248, 0.7556666731834412, 0.7896666526794434, 0.8113333582878113, 0.7933333516120911, 0.8053333163261414, 0.7900000214576721, 0.7766666412353516, 0.8209999799728394, 0.8256666660308838, 0.82833331823349, 0.8180000185966492, 0.8153333067893982, 0.824999988079071, 0.7860000133514404, 0.815666675567627]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 5, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [15, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 6, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.7774285674095154, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.73276328448496, 2.4019185432337844, 2.3235072582908955, 2.2384628867901486, 1.899245674757201, 1.49702569002709, 1.3281144482065044, 1.1652062816107198, 1.0002185956141605, 0.9584364716198308, 0.941836247527919, 0.8315278003716812, 0.7766045405407781, 0.7601852380620049, 0.7229609764436327, 0.690200531881058, 0.6447086050573073, 0.6818273515827888, 0.6384265950374505, 0.6231482126347189, 0.6076942555121206, 0.609121587250951, 0.5781074092490813, 0.5744080866852205, 0.588236122547974, 0.5868634819952945, 0.5402977452176106, 0.5600512446964799, 0.5427631984738279, 0.5456403126538375, 0.5293167108841356, 0.5269699269959074, 0.5292413604572827], "accuracy": [0.17461365461349487, 0.15493330359458923, 0.1784440577030182, 0.18782195448875427, 0.3291507065296173, 0.468630313873291, 0.5114251971244812, 0.5925241112709045, 0.6332056522369385, 0.6479989290237427, 0.6539427042007446, 0.6877558827400208, 0.7102100253105164, 0.7190595865249634, 0.7296261787414551, 0.7383436560630798, 0.7543256878852844, 0.7479857206344604, 0.7613261342048645, 0.7630431652069092, 0.7718927264213562, 0.774270236492157, 0.7804781198501587, 0.7868181467056274, 0.7779685854911804, 0.7736098170280457, 0.7967243194580078, 0.793422281742096, 0.7991018295288086, 0.7952714562416077, 0.8010830879211426, 0.7989697456359863, 0.7976489067077637], "val_loss": [1.963047913142613, 2.032693522317069, 1.9806958607264928, 1.9050682612827845, 1.0642273426055908, 0.9596517767224994, 1.0507565225873674, 0.789002673966544, 0.6535637208393642, 0.6108583041599819, 0.6375765630177089, 0.5408005033220563, 0.5578842844281878, 0.5084892170769828, 0.5026669331959316, 0.5192410775593349, 0.4575458083833967, 0.4819379023143223, 0.5276578835078648, 0.47490763664245605, 0.44660996539252146, 0.4626288754599435, 0.4442528486251831, 0.46754452160426546, 0.4790718214852469, 0.42293972628457205, 0.4190850257873535, 0.4320540598460606, 0.42129489353724886, 0.44023819480623516, 0.4234383702278137, 0.4747757741383144, 0.43611002819878714], "val_accuracy": [0.14266666769981384, 0.10599999874830246, 0.09700000286102295, 0.20133332908153534, 0.5519999861717224, 0.6136666536331177, 0.6150000095367432, 0.6470000147819519, 0.7049999833106995, 0.6959999799728394, 0.7263333201408386, 0.753333330154419, 0.7236666679382324, 0.7710000276565552, 0.7786666750907898, 0.7429999709129333, 0.8019999861717224, 0.7816666960716248, 0.7556666731834412, 0.7896666526794434, 0.8113333582878113, 0.7933333516120911, 0.8053333163261414, 0.7900000214576721, 0.7766666412353516, 0.8209999799728394, 0.8256666660308838, 0.82833331823349, 0.8180000185966492, 0.8153333067893982, 0.824999988079071, 0.7860000133514404, 0.815666675567627]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 5, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.7662857174873352, "mapping_values": [1, 7, 7, 5, 2, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2857372714795803, 2.244078820140024, 2.187307766762077, 2.090052545976015, 1.9538602079965373, 1.767625258315619, 1.5736556121182244, 1.4065767358936858, 1.2994473083947298, 1.2094228000940663, 1.1329032042400948, 1.0878706441784043, 1.0552976004451635, 1.0047112552796247, 0.9712527573636148, 0.9522340864616221, 0.9273882004106522, 0.9081046176529863, 0.884844070561983, 0.8662107382090242, 0.8580653105649997, 0.8426097317488911, 0.8346850599327486, 0.8191726648056464, 0.8100866582320903, 0.8048160631249468, 0.7909136224322079, 0.7915102175009202, 0.7803611782847016, 0.764586806076865, 0.770785849139423, 0.7563335179747245, 0.7521631917335008, 0.7436781332965509, 0.7435740633033537, 0.7399222921890558, 0.7411173748507114, 0.734222985285463, 0.7227019449235143, 0.7114316082554974, 0.7122516861413496, 0.7034022970804843, 0.7075849666949419, 0.6953964712928079, 0.6898267022166128, 0.6890991268896739, 0.689723140835022, 0.6986850447989159], "accuracy": [0.14397041499614716, 0.23418307304382324, 0.3203011453151703, 0.38026681542396545, 0.42728832364082336, 0.46347907185554504, 0.5028398036956787, 0.533350944519043, 0.5568616986274719, 0.5901466012001038, 0.6086382269859314, 0.6211860775947571, 0.6328094005584717, 0.6448289752006531, 0.658961832523346, 0.6596222519874573, 0.6723021864891052, 0.68101966381073, 0.6837934255599976, 0.6915863156318665, 0.6944921612739563, 0.7009642124176025, 0.7041342258453369, 0.7012283802032471, 0.7080966830253601, 0.7121912837028503, 0.7148329019546509, 0.7156254053115845, 0.7201162576675415, 0.7197200059890747, 0.718399167060852, 0.7263241410255432, 0.7289658188819885, 0.7366266250610352, 0.7215691208839417, 0.7305507659912109, 0.7269845604896545, 0.7323999404907227, 0.7375511527061462, 0.7412495017051697, 0.7367587089538574, 0.7479857206344604, 0.7412495017051697, 0.7413815855979919, 0.7460044622421265, 0.7466648817062378, 0.7498348951339722, 0.7420420050621033], "val_loss": [1.9328735215323312, 1.8870926584516252, 1.8164593151637487, 1.7019382204328264, 1.5364161559513636, 1.3352196216583252, 1.1498435565403529, 1.0095256737300329, 0.9110338687896729, 0.8381708519799369, 0.7847770963396344, 0.7461310625076294, 0.7169808489935738, 0.6901063067572457, 0.6727230548858643, 0.6554803337369647, 0.6397873844419207, 0.628262962613787, 0.6154144321169172, 0.6064375128064837, 0.598199588911874, 0.5891101700919015, 0.5850781032017299, 0.5740019593920026, 0.5698232650756836, 0.5636272089821952, 0.5572603259767804, 0.5543955223900932, 0.5485164948872158, 0.5426722424370902, 0.5402639933994838, 0.5359768356595721, 0.5318288803100586, 0.527302588735308, 0.525437729699271, 0.5226739815303257, 0.519166384424482, 0.5166957208088466, 0.5149368899209159, 0.5123168911252703, 0.5053588492529733, 0.5062570231301444, 0.5016797610691616, 0.5003780467169625, 0.5001187665121896, 0.4974067040852138, 0.49674408776419504, 0.4942941665649414], "val_accuracy": [0.3343333303928375, 0.4346666634082794, 0.4933333396911621, 0.5419999957084656, 0.565666675567627, 0.5879999995231628, 0.6236666440963745, 0.659333348274231, 0.6773333549499512, 0.6933333277702332, 0.706333339214325, 0.7046666741371155, 0.7083333134651184, 0.7239999771118164, 0.721666693687439, 0.7269999980926514, 0.7353333234786987, 0.7356666922569275, 0.7483333349227905, 0.7526666522026062, 0.7573333382606506, 0.7586666941642761, 0.7486666440963745, 0.7590000033378601, 0.7639999985694885, 0.7583333253860474, 0.7666666507720947, 0.7710000276565552, 0.7693333625793457, 0.7743333578109741, 0.7703333497047424, 0.7736666798591614, 0.7756666541099548, 0.7799999713897705, 0.7770000100135803, 0.7713333368301392, 0.7823333144187927, 0.7870000004768372, 0.7876666784286499, 0.7820000052452087, 0.7870000004768372, 0.7870000004768372, 0.7953333258628845, 0.7929999828338623, 0.7863333225250244, 0.7913333177566528, 0.7953333258628845, 0.7913333177566528]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 8, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.7662857174873352, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2857372714795803, 2.244078820140024, 2.187307766762077, 2.090052545976015, 1.9538602079965373, 1.767625258315619, 1.5736556121182244, 1.4065767358936858, 1.2994473083947298, 1.2094228000940663, 1.1329032042400948, 1.0878706441784043, 1.0552976004451635, 1.0047112552796247, 0.9712527573636148, 0.9522340864616221, 0.9273882004106522, 0.9081046176529863, 0.884844070561983, 0.8662107382090242, 0.8580653105649997, 0.8426097317488911, 0.8346850599327486, 0.8191726648056464, 0.8100866582320903, 0.8048160631249468, 0.7909136224322079, 0.7915102175009202, 0.7803611782847016, 0.764586806076865, 0.770785849139423, 0.7563335179747245, 0.7521631917335008, 0.7436781332965509, 0.7435740633033537, 0.7399222921890558, 0.7411173748507114, 0.734222985285463, 0.7227019449235143, 0.7114316082554974, 0.7122516861413496, 0.7034022970804843, 0.7075849666949419, 0.6953964712928079, 0.6898267022166128, 0.6890991268896739, 0.689723140835022, 0.6986850447989159], "accuracy": [0.14397041499614716, 0.23418307304382324, 0.3203011453151703, 0.38026681542396545, 0.42728832364082336, 0.46347907185554504, 0.5028398036956787, 0.533350944519043, 0.5568616986274719, 0.5901466012001038, 0.6086382269859314, 0.6211860775947571, 0.6328094005584717, 0.6448289752006531, 0.658961832523346, 0.6596222519874573, 0.6723021864891052, 0.68101966381073, 0.6837934255599976, 0.6915863156318665, 0.6944921612739563, 0.7009642124176025, 0.7041342258453369, 0.7012283802032471, 0.7080966830253601, 0.7121912837028503, 0.7148329019546509, 0.7156254053115845, 0.7201162576675415, 0.7197200059890747, 0.718399167060852, 0.7263241410255432, 0.7289658188819885, 0.7366266250610352, 0.7215691208839417, 0.7305507659912109, 0.7269845604896545, 0.7323999404907227, 0.7375511527061462, 0.7412495017051697, 0.7367587089538574, 0.7479857206344604, 0.7412495017051697, 0.7413815855979919, 0.7460044622421265, 0.7466648817062378, 0.7498348951339722, 0.7420420050621033], "val_loss": [1.9328735215323312, 1.8870926584516252, 1.8164593151637487, 1.7019382204328264, 1.5364161559513636, 1.3352196216583252, 1.1498435565403529, 1.0095256737300329, 0.9110338687896729, 0.8381708519799369, 0.7847770963396344, 0.7461310625076294, 0.7169808489935738, 0.6901063067572457, 0.6727230548858643, 0.6554803337369647, 0.6397873844419207, 0.628262962613787, 0.6154144321169172, 0.6064375128064837, 0.598199588911874, 0.5891101700919015, 0.5850781032017299, 0.5740019593920026, 0.5698232650756836, 0.5636272089821952, 0.5572603259767804, 0.5543955223900932, 0.5485164948872158, 0.5426722424370902, 0.5402639933994838, 0.5359768356595721, 0.5318288803100586, 0.527302588735308, 0.525437729699271, 0.5226739815303257, 0.519166384424482, 0.5166957208088466, 0.5149368899209159, 0.5123168911252703, 0.5053588492529733, 0.5062570231301444, 0.5016797610691616, 0.5003780467169625, 0.5001187665121896, 0.4974067040852138, 0.49674408776419504, 0.4942941665649414], "val_accuracy": [0.3343333303928375, 0.4346666634082794, 0.4933333396911621, 0.5419999957084656, 0.565666675567627, 0.5879999995231628, 0.6236666440963745, 0.659333348274231, 0.6773333549499512, 0.6933333277702332, 0.706333339214325, 0.7046666741371155, 0.7083333134651184, 0.7239999771118164, 0.721666693687439, 0.7269999980926514, 0.7353333234786987, 0.7356666922569275, 0.7483333349227905, 0.7526666522026062, 0.7573333382606506, 0.7586666941642761, 0.7486666440963745, 0.7590000033378601, 0.7639999985694885, 0.7583333253860474, 0.7666666507720947, 0.7710000276565552, 0.7693333625793457, 0.7743333578109741, 0.7703333497047424, 0.7736666798591614, 0.7756666541099548, 0.7799999713897705, 0.7770000100135803, 0.7713333368301392, 0.7823333144187927, 0.7870000004768372, 0.7876666784286499, 0.7820000052452087, 0.7870000004768372, 0.7870000004768372, 0.7953333258628845, 0.7929999828338623, 0.7863333225250244, 0.7913333177566528, 0.7953333258628845, 0.7913333177566528]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [3, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.7662857174873352, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2857372714795803, 2.244078820140024, 2.187307766762077, 2.090052545976015, 1.9538602079965373, 1.767625258315619, 1.5736556121182244, 1.4065767358936858, 1.2994473083947298, 1.2094228000940663, 1.1329032042400948, 1.0878706441784043, 1.0552976004451635, 1.0047112552796247, 0.9712527573636148, 0.9522340864616221, 0.9273882004106522, 0.9081046176529863, 0.884844070561983, 0.8662107382090242, 0.8580653105649997, 0.8426097317488911, 0.8346850599327486, 0.8191726648056464, 0.8100866582320903, 0.8048160631249468, 0.7909136224322079, 0.7915102175009202, 0.7803611782847016, 0.764586806076865, 0.770785849139423, 0.7563335179747245, 0.7521631917335008, 0.7436781332965509, 0.7435740633033537, 0.7399222921890558, 0.7411173748507114, 0.734222985285463, 0.7227019449235143, 0.7114316082554974, 0.7122516861413496, 0.7034022970804843, 0.7075849666949419, 0.6953964712928079, 0.6898267022166128, 0.6890991268896739, 0.689723140835022, 0.6986850447989159], "accuracy": [0.14397041499614716, 0.23418307304382324, 0.3203011453151703, 0.38026681542396545, 0.42728832364082336, 0.46347907185554504, 0.5028398036956787, 0.533350944519043, 0.5568616986274719, 0.5901466012001038, 0.6086382269859314, 0.6211860775947571, 0.6328094005584717, 0.6448289752006531, 0.658961832523346, 0.6596222519874573, 0.6723021864891052, 0.68101966381073, 0.6837934255599976, 0.6915863156318665, 0.6944921612739563, 0.7009642124176025, 0.7041342258453369, 0.7012283802032471, 0.7080966830253601, 0.7121912837028503, 0.7148329019546509, 0.7156254053115845, 0.7201162576675415, 0.7197200059890747, 0.718399167060852, 0.7263241410255432, 0.7289658188819885, 0.7366266250610352, 0.7215691208839417, 0.7305507659912109, 0.7269845604896545, 0.7323999404907227, 0.7375511527061462, 0.7412495017051697, 0.7367587089538574, 0.7479857206344604, 0.7412495017051697, 0.7413815855979919, 0.7460044622421265, 0.7466648817062378, 0.7498348951339722, 0.7420420050621033], "val_loss": [1.9328735215323312, 1.8870926584516252, 1.8164593151637487, 1.7019382204328264, 1.5364161559513636, 1.3352196216583252, 1.1498435565403529, 1.0095256737300329, 0.9110338687896729, 0.8381708519799369, 0.7847770963396344, 0.7461310625076294, 0.7169808489935738, 0.6901063067572457, 0.6727230548858643, 0.6554803337369647, 0.6397873844419207, 0.628262962613787, 0.6154144321169172, 0.6064375128064837, 0.598199588911874, 0.5891101700919015, 0.5850781032017299, 0.5740019593920026, 0.5698232650756836, 0.5636272089821952, 0.5572603259767804, 0.5543955223900932, 0.5485164948872158, 0.5426722424370902, 0.5402639933994838, 0.5359768356595721, 0.5318288803100586, 0.527302588735308, 0.525437729699271, 0.5226739815303257, 0.519166384424482, 0.5166957208088466, 0.5149368899209159, 0.5123168911252703, 0.5053588492529733, 0.5062570231301444, 0.5016797610691616, 0.5003780467169625, 0.5001187665121896, 0.4974067040852138, 0.49674408776419504, 0.4942941665649414], "val_accuracy": [0.3343333303928375, 0.4346666634082794, 0.4933333396911621, 0.5419999957084656, 0.565666675567627, 0.5879999995231628, 0.6236666440963745, 0.659333348274231, 0.6773333549499512, 0.6933333277702332, 0.706333339214325, 0.7046666741371155, 0.7083333134651184, 0.7239999771118164, 0.721666693687439, 0.7269999980926514, 0.7353333234786987, 0.7356666922569275, 0.7483333349227905, 0.7526666522026062, 0.7573333382606506, 0.7586666941642761, 0.7486666440963745, 0.7590000033378601, 0.7639999985694885, 0.7583333253860474, 0.7666666507720947, 0.7710000276565552, 0.7693333625793457, 0.7743333578109741, 0.7703333497047424, 0.7736666798591614, 0.7756666541099548, 0.7799999713897705, 0.7770000100135803, 0.7713333368301392, 0.7823333144187927, 0.7870000004768372, 0.7876666784286499, 0.7820000052452087, 0.7870000004768372, 0.7870000004768372, 0.7953333258628845, 0.7929999828338623, 0.7863333225250244, 0.7913333177566528, 0.7953333258628845, 0.7913333177566528]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 6, 5, 7, 2, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.7662857174873352, "mapping_values": [1, 31, 31, 23, 8, 3, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 44, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(tf.math.add(grad, grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)))))), tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, grad))))))))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2857372714795803, 2.244078820140024, 2.187307766762077, 2.090052545976015, 1.9538602079965373, 1.767625258315619, 1.5736556121182244, 1.4065767358936858, 1.2994473083947298, 1.2094228000940663, 1.1329032042400948, 1.0878706441784043, 1.0552976004451635, 1.0047112552796247, 0.9712527573636148, 0.9522340864616221, 0.9273882004106522, 0.9081046176529863, 0.884844070561983, 0.8662107382090242, 0.8580653105649997, 0.8426097317488911, 0.8346850599327486, 0.8191726648056464, 0.8100866582320903, 0.8048160631249468, 0.7909136224322079, 0.7915102175009202, 0.7803611782847016, 0.764586806076865, 0.770785849139423, 0.7563335179747245, 0.7521631917335008, 0.7436781332965509, 0.7435740633033537, 0.7399222921890558, 0.7411173748507114, 0.734222985285463, 0.7227019449235143, 0.7114316082554974, 0.7122516861413496, 0.7034022970804843, 0.7075849666949419, 0.6953964712928079, 0.6898267022166128, 0.6890991268896739, 0.689723140835022, 0.6986850447989159], "accuracy": [0.14397041499614716, 0.23418307304382324, 0.3203011453151703, 0.38026681542396545, 0.42728832364082336, 0.46347907185554504, 0.5028398036956787, 0.533350944519043, 0.5568616986274719, 0.5901466012001038, 0.6086382269859314, 0.6211860775947571, 0.6328094005584717, 0.6448289752006531, 0.658961832523346, 0.6596222519874573, 0.6723021864891052, 0.68101966381073, 0.6837934255599976, 0.6915863156318665, 0.6944921612739563, 0.7009642124176025, 0.7041342258453369, 0.7012283802032471, 0.7080966830253601, 0.7121912837028503, 0.7148329019546509, 0.7156254053115845, 0.7201162576675415, 0.7197200059890747, 0.718399167060852, 0.7263241410255432, 0.7289658188819885, 0.7366266250610352, 0.7215691208839417, 0.7305507659912109, 0.7269845604896545, 0.7323999404907227, 0.7375511527061462, 0.7412495017051697, 0.7367587089538574, 0.7479857206344604, 0.7412495017051697, 0.7413815855979919, 0.7460044622421265, 0.7466648817062378, 0.7498348951339722, 0.7420420050621033], "val_loss": [1.9328735215323312, 1.8870926584516252, 1.8164593151637487, 1.7019382204328264, 1.5364161559513636, 1.3352196216583252, 1.1498435565403529, 1.0095256737300329, 0.9110338687896729, 0.8381708519799369, 0.7847770963396344, 0.7461310625076294, 0.7169808489935738, 0.6901063067572457, 0.6727230548858643, 0.6554803337369647, 0.6397873844419207, 0.628262962613787, 0.6154144321169172, 0.6064375128064837, 0.598199588911874, 0.5891101700919015, 0.5850781032017299, 0.5740019593920026, 0.5698232650756836, 0.5636272089821952, 0.5572603259767804, 0.5543955223900932, 0.5485164948872158, 0.5426722424370902, 0.5402639933994838, 0.5359768356595721, 0.5318288803100586, 0.527302588735308, 0.525437729699271, 0.5226739815303257, 0.519166384424482, 0.5166957208088466, 0.5149368899209159, 0.5123168911252703, 0.5053588492529733, 0.5062570231301444, 0.5016797610691616, 0.5003780467169625, 0.5001187665121896, 0.4974067040852138, 0.49674408776419504, 0.4942941665649414], "val_accuracy": [0.3343333303928375, 0.4346666634082794, 0.4933333396911621, 0.5419999957084656, 0.565666675567627, 0.5879999995231628, 0.6236666440963745, 0.659333348274231, 0.6773333549499512, 0.6933333277702332, 0.706333339214325, 0.7046666741371155, 0.7083333134651184, 0.7239999771118164, 0.721666693687439, 0.7269999980926514, 0.7353333234786987, 0.7356666922569275, 0.7483333349227905, 0.7526666522026062, 0.7573333382606506, 0.7586666941642761, 0.7486666440963745, 0.7590000033378601, 0.7639999985694885, 0.7583333253860474, 0.7666666507720947, 0.7710000276565552, 0.7693333625793457, 0.7743333578109741, 0.7703333497047424, 0.7736666798591614, 0.7756666541099548, 0.7799999713897705, 0.7770000100135803, 0.7713333368301392, 0.7823333144187927, 0.7870000004768372, 0.7876666784286499, 0.7820000052452087, 0.7870000004768372, 0.7870000004768372, 0.7953333258628845, 0.7929999828338623, 0.7863333225250244, 0.7913333177566528, 0.7953333258628845, 0.7913333177566528]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 9, 5, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.7662857174873352, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2857372714795803, 2.244078820140024, 2.187307766762077, 2.090052545976015, 1.9538602079965373, 1.767625258315619, 1.5736556121182244, 1.4065767358936858, 1.2994473083947298, 1.2094228000940663, 1.1329032042400948, 1.0878706441784043, 1.0552976004451635, 1.0047112552796247, 0.9712527573636148, 0.9522340864616221, 0.9273882004106522, 0.9081046176529863, 0.884844070561983, 0.8662107382090242, 0.8580653105649997, 0.8426097317488911, 0.8346850599327486, 0.8191726648056464, 0.8100866582320903, 0.8048160631249468, 0.7909136224322079, 0.7915102175009202, 0.7803611782847016, 0.764586806076865, 0.770785849139423, 0.7563335179747245, 0.7521631917335008, 0.7436781332965509, 0.7435740633033537, 0.7399222921890558, 0.7411173748507114, 0.734222985285463, 0.7227019449235143, 0.7114316082554974, 0.7122516861413496, 0.7034022970804843, 0.7075849666949419, 0.6953964712928079, 0.6898267022166128, 0.6890991268896739, 0.689723140835022, 0.6986850447989159], "accuracy": [0.14397041499614716, 0.23418307304382324, 0.3203011453151703, 0.38026681542396545, 0.42728832364082336, 0.46347907185554504, 0.5028398036956787, 0.533350944519043, 0.5568616986274719, 0.5901466012001038, 0.6086382269859314, 0.6211860775947571, 0.6328094005584717, 0.6448289752006531, 0.658961832523346, 0.6596222519874573, 0.6723021864891052, 0.68101966381073, 0.6837934255599976, 0.6915863156318665, 0.6944921612739563, 0.7009642124176025, 0.7041342258453369, 0.7012283802032471, 0.7080966830253601, 0.7121912837028503, 0.7148329019546509, 0.7156254053115845, 0.7201162576675415, 0.7197200059890747, 0.718399167060852, 0.7263241410255432, 0.7289658188819885, 0.7366266250610352, 0.7215691208839417, 0.7305507659912109, 0.7269845604896545, 0.7323999404907227, 0.7375511527061462, 0.7412495017051697, 0.7367587089538574, 0.7479857206344604, 0.7412495017051697, 0.7413815855979919, 0.7460044622421265, 0.7466648817062378, 0.7498348951339722, 0.7420420050621033], "val_loss": [1.9328735215323312, 1.8870926584516252, 1.8164593151637487, 1.7019382204328264, 1.5364161559513636, 1.3352196216583252, 1.1498435565403529, 1.0095256737300329, 0.9110338687896729, 0.8381708519799369, 0.7847770963396344, 0.7461310625076294, 0.7169808489935738, 0.6901063067572457, 0.6727230548858643, 0.6554803337369647, 0.6397873844419207, 0.628262962613787, 0.6154144321169172, 0.6064375128064837, 0.598199588911874, 0.5891101700919015, 0.5850781032017299, 0.5740019593920026, 0.5698232650756836, 0.5636272089821952, 0.5572603259767804, 0.5543955223900932, 0.5485164948872158, 0.5426722424370902, 0.5402639933994838, 0.5359768356595721, 0.5318288803100586, 0.527302588735308, 0.525437729699271, 0.5226739815303257, 0.519166384424482, 0.5166957208088466, 0.5149368899209159, 0.5123168911252703, 0.5053588492529733, 0.5062570231301444, 0.5016797610691616, 0.5003780467169625, 0.5001187665121896, 0.4974067040852138, 0.49674408776419504, 0.4942941665649414], "val_accuracy": [0.3343333303928375, 0.4346666634082794, 0.4933333396911621, 0.5419999957084656, 0.565666675567627, 0.5879999995231628, 0.6236666440963745, 0.659333348274231, 0.6773333549499512, 0.6933333277702332, 0.706333339214325, 0.7046666741371155, 0.7083333134651184, 0.7239999771118164, 0.721666693687439, 0.7269999980926514, 0.7353333234786987, 0.7356666922569275, 0.7483333349227905, 0.7526666522026062, 0.7573333382606506, 0.7586666941642761, 0.7486666440963745, 0.7590000033378601, 0.7639999985694885, 0.7583333253860474, 0.7666666507720947, 0.7710000276565552, 0.7693333625793457, 0.7743333578109741, 0.7703333497047424, 0.7736666798591614, 0.7756666541099548, 0.7799999713897705, 0.7770000100135803, 0.7713333368301392, 0.7823333144187927, 0.7870000004768372, 0.7876666784286499, 0.7820000052452087, 0.7870000004768372, 0.7870000004768372, 0.7953333258628845, 0.7929999828338623, 0.7863333225250244, 0.7913333177566528, 0.7953333258628845, 0.7913333177566528]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 6, 5, 6, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [79, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 1, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [1, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 14, 14, 8, 6, 5, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 8, 7, 9, 2, 5, 9, 8, 2, 0, 5, 5, 9, 5, 9, 3, 8, 0, 5, 5, 9, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 95, 59, 56, 60, 79, 86, 52, 44], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 1, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [4, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 8, 3, 3, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))))), tf.math.add(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(alpha, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07594769448041916, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 0, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 6, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, beta))", "other_info": {"loss": [2.3295646827328933, 2.4446776176503526, 13.253931786453153, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.05613525211811066, 0.011887465603649616, 0.0470215305685997, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0404947825840543, 2.239227158682687, 4456.779157366072, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.004999999888241291, 0.007333333138376474, 0.10000000149011612, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 0, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 8, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 8, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 95, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [59, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 8, 4, 5, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.square(beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.14159291982650757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [69, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [0, 3], [1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.09971428662538528, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.309769022655273, 2.3636574344297427, 2.5273762346022575, 2.7963757399381537, 3.2632331210451198, 3.916165070274896, 4.676351798854531, 5.616031613348025, 6.784579117819932], "accuracy": [0.09060890227556229, 0.09668471664190292, 0.0952318087220192, 0.09932637959718704, 0.09760929644107819, 0.09298639744520187, 0.09734513610601425, 0.10130762308835983, 0.09708096832036972], "val_loss": [1.981018338884626, 2.0264902796064104, 2.131377696990967, 2.3184255191258023, 2.6074849537440707, 3.010004384177072, 3.528120449611119, 4.1576448168073386, 4.893349375043597], "val_accuracy": [0.08933333307504654, 0.0976666659116745, 0.0989999994635582, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [7, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [38, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 3, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.301997116921742, 2.302101384694345, 2.3036167901252886, 2.300980740314021, 2.3029181175322626, 2.302464304756353], "accuracy": [0.09430722147226334, 0.09245806187391281, 0.09338264167308807, 0.09509972482919693, 0.09430722147226334, 0.08796724677085876], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [0, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 95, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 1, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.301997116921742, 2.302101384694345, 2.3036167901252886, 2.300980740314021, 2.3029181175322626, 2.302464304756353], "accuracy": [0.09430722147226334, 0.09245806187391281, 0.09338264167308807, 0.09509972482919693, 0.09430722147226334, 0.08796724677085876], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 0, 8, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [5, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 1, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 8, 4, 4, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))))), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, alpha))", "other_info": {"loss": [2.301997116921742, 2.302101384694345, 2.3036167901252886, 2.300980740314021, 2.3029181175322626, 2.302464304756353], "accuracy": [0.09430722147226334, 0.09245806187391281, 0.09338264167308807, 0.09509972482919693, 0.09430722147226334, 0.08796724677085876], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 6, 2, 1, 8], [2, 2, 0, 2, 1, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [53, 95, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 1, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 36, 36, 26, 10, 5, 1, 1, 0, 1, 1, 3, 1, 1, 0, 0, 5, 3, 2, 1], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.add(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.square(grad))))), tf.math.add(alpha, alpha)))))), tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, grad), tf.math.sqrt(grad)), tf.math.add(alpha, grad))), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), alpha)))))))), lambda shape,  alpha, beta, grad: tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.square(sigma), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.301997116921742, 2.302101384694345, 2.3036167901252886, 2.300980740314021, 2.3029181175322626, 2.302464304756353], "accuracy": [0.09430722147226334, 0.09245806187391281, 0.09338264167308807, 0.09509972482919693, 0.09430722147226334, 0.08796724677085876], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 8, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 95, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 6, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [49, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 3, 1, 1, 0, 0, 5, 3, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.square(sigma), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.301997116921742, 2.302101384694345, 2.3036167901252886, 2.300980740314021, 2.3029181175322626, 2.302464304756353], "accuracy": [0.09430722147226334, 0.09245806187391281, 0.09338264167308807, 0.09509972482919693, 0.09430722147226334, 0.08796724677085876], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 0, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [15, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 6, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 0, 0, 2, 1, 3, 0, 0], [71, 33, 83, 82, 91, 78], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 0, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.301997116921742, 2.302101384694345, 2.3036167901252886, 2.300980740314021, 2.3029181175322626, 2.302464304756353], "accuracy": [0.09430722147226334, 0.09245806187391281, 0.09338264167308807, 0.09509972482919693, 0.09430722147226334, 0.08796724677085876], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 0, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [3, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 7, 7, 5, 2, 1, 12, 12, 8, 4, 4, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))))), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.square(sigma), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302004327611554, 2.3021274847739313, 2.303665931560832, 2.301040021294002, 2.3029990087898886, 2.302571817427547], "accuracy": [0.0940430611371994, 0.09259014576673508, 0.09325055778026581, 0.09430722147226334, 0.09457138925790787, 0.08757099509239197], "val_loss": [1.9706034660339355, 1.9706192016601562, 1.97063752583095, 1.9706521715436662, 1.970668043409075, 1.9706853457859583], "val_accuracy": [0.039000000804662704, 0.038333334028720856, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663]}}]