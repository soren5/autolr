[{"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [3, 9, 8, 4, 4, 5, 9, 8, 3, 0, 8, 8, 1, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 1, 0, 2, 2, 1, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 32, 93, 41, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [6, 7, 5, 8, 0, 2, 4, 9, 9, 0, 4, 1, 9, 6, 0, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [3, 1, 3, 3, 1, 0, 3, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [79, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [2, 3, 0], [4, 0], [38], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 2, 3, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 9, 45, 71, 34, 14, 2]], "fitness": -0.826285719871521, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.144521951675415, 1.775113582611084, 1.3679640293121338, 1.0265209674835205, 0.9822946190834045, 0.8654708862304688, 0.7770340442657471, 0.7544553279876709, 0.6958573460578918, 0.6694055795669556, 0.6502149701118469, 0.6118683218955994, 0.6079643964767456, 0.5865249037742615, 0.5677072405815125, 0.5767543315887451, 0.5428490042686462, 0.5411143898963928, 0.5196576118469238, 0.48315858840942383, 0.507020890712738, 0.48215970396995544, 0.49378421902656555, 0.4756888747215271, 0.4589748680591583, 0.4456426203250885, 0.4444686770439148, 0.447399765253067, 0.41888442635536194, 0.4155650734901428, 0.4175621569156647, 0.39864033460617065, 0.4118424355983734, 0.39371129870414734, 0.40579861402511597, 0.3650493025779724], "accuracy": [0.30405494570732117, 0.4315149784088135, 0.5488046407699585, 0.635451078414917, 0.6369040012359619, 0.6758684515953064, 0.7131158113479614, 0.7149649858474731, 0.7331924438476562, 0.7452120184898376, 0.7535332441329956, 0.7677981853485107, 0.7684586048126221, 0.778232753276825, 0.7887993454933167, 0.7792893648147583, 0.793422281742096, 0.8041210174560547, 0.8105930685997009, 0.8189142942428589, 0.8115176558494568, 0.8235371708869934, 0.8189142942428589, 0.8232730031013489, 0.8276317715644836, 0.8300092220306396, 0.8343679904937744, 0.8321225643157959, 0.8502179384231567, 0.8506141901016235, 0.8450667262077332, 0.8549728989601135, 0.8473120927810669, 0.8552370667457581, 0.8462554216384888, 0.8684453964233398], "val_loss": [1.6413201093673706, 1.0590765476226807, 1.1042715311050415, 1.2619086503982544, 0.7470296025276184, 0.6722427010536194, 0.7583249807357788, 0.6171618700027466, 0.6164698004722595, 0.6160281300544739, 0.5604515671730042, 0.5487565398216248, 0.5931432247161865, 0.5086561441421509, 0.49754437804222107, 0.5219991207122803, 0.47587794065475464, 0.46945759654045105, 0.49409061670303345, 0.47900310158729553, 0.5308623313903809, 0.4920385479927063, 0.47390058636665344, 0.5065804719924927, 0.44105955958366394, 0.4268835783004761, 0.47032421827316284, 0.4407864511013031, 0.46224695444107056, 0.4542797803878784, 0.402560293674469, 0.4614875912666321, 0.415814608335495, 0.49711352586746216, 0.39588290452957153, 0.4270040988922119], "val_accuracy": [0.4320000112056732, 0.6466666460037231, 0.6616666913032532, 0.512666642665863, 0.6980000138282776, 0.7446666955947876, 0.6673333048820496, 0.7716666460037231, 0.7553333044052124, 0.7620000243186951, 0.7733333110809326, 0.7723333239555359, 0.7563333511352539, 0.8083333373069763, 0.8146666884422302, 0.8033333420753479, 0.8159999847412109, 0.8236666917800903, 0.8100000023841858, 0.8243333101272583, 0.7973333597183228, 0.8136666417121887, 0.8196666836738586, 0.7839999794960022, 0.8370000123977661, 0.8423333168029785, 0.8236666917800903, 0.8299999833106995, 0.8330000042915344, 0.82833331823349, 0.8539999723434448, 0.8299999833106995, 0.8410000205039978, 0.812333345413208, 0.8539999723434448, 0.8433333039283752]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 1, 1, 4, 3, 5, 9, 5, 3, 0, 8, 8, 1, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 1, 0, 0, 2, 1, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [67, 10, 93, 41, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [6, 7, 5, 8, 0, 2, 4, 9, 9, 0, 4, 1, 9, 6, 0, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [3, 1, 3, 3, 1, 0, 3, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [79, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 0, 1, 0, 1], [0, 1, 1, 0], [9, 3, 0], [4, 0], [38], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 2, 3, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 9, 45, 71, 34, 14, 2]], "fitness": -0.8134285807609558, "mapping_values": [1, 16, 16, 11, 5, 3, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))), alpha)), tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))))), tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.1445512771606445, 1.7703276872634888, 1.3216032981872559, 1.065042495727539, 0.9540704488754272, 0.8065701723098755, 0.7494001984596252, 0.7585654854774475, 0.6885055303573608, 0.6657379269599915, 0.6480509638786316, 0.6155660152435303, 0.6194220781326294, 0.5852952003479004, 0.5662274360656738, 0.5642036199569702, 0.5441728234291077, 0.5284518003463745, 0.5156381130218506, 0.49838563799858093, 0.502341091632843, 0.4686015248298645, 0.48246869444847107, 0.47075504064559937, 0.4581805169582367, 0.44697341322898865, 0.4337600767612457, 0.4481693208217621, 0.41933420300483704, 0.4119175970554352, 0.41797885298728943, 0.39798465371131897, 0.42336925864219666, 0.3829667568206787, 0.40042948722839355, 0.3647233843803406], "accuracy": [0.30405494570732117, 0.4344208240509033, 0.5431250929832458, 0.6149781942367554, 0.6489235162734985, 0.6960771083831787, 0.7112666964530945, 0.7150970697402954, 0.7331924438476562, 0.7494386434555054, 0.752212405204773, 0.7638356685638428, 0.7619865536689758, 0.7807422876358032, 0.7898560166358948, 0.7847048044204712, 0.7922335267066956, 0.8017435073852539, 0.813498854637146, 0.8144234418869019, 0.8121780753135681, 0.8290846943855286, 0.817989706993103, 0.8261788487434387, 0.8281601071357727, 0.8318583965301514, 0.8391229510307312, 0.8327829837799072, 0.8467837572097778, 0.8512746095657349, 0.8409721255302429, 0.8521991968154907, 0.8426892161369324, 0.860652506351471, 0.850350022315979, 0.8647470474243164], "val_loss": [1.6431645154953003, 1.0752501487731934, 1.2464255094528198, 1.084867000579834, 0.7330193519592285, 0.6644084453582764, 0.7364795804023743, 0.6442577838897705, 0.6204898953437805, 0.5772235989570618, 0.6051343083381653, 0.6140790581703186, 0.5638319253921509, 0.526064932346344, 0.5024118423461914, 0.526968777179718, 0.4728502631187439, 0.4827427268028259, 0.527799665927887, 0.4551352262496948, 0.4853520095348358, 0.4540331959724426, 0.4835563004016876, 0.512111246585846, 0.4379274845123291, 0.45081794261932373, 0.4880950152873993, 0.43171659111976624, 0.45013973116874695, 0.45682111382484436, 0.4011053144931793, 0.44554370641708374, 0.4123707711696625, 0.4746304154396057, 0.39142781496047974, 0.4363223612308502], "val_accuracy": [0.42800000309944153, 0.6340000033378601, 0.6066666841506958, 0.5573333501815796, 0.7260000109672546, 0.7239999771118164, 0.699999988079071, 0.7559999823570251, 0.7590000033378601, 0.7803333401679993, 0.7570000290870667, 0.7556666731834412, 0.7776666879653931, 0.8006666898727417, 0.809333324432373, 0.79666668176651, 0.8206666707992554, 0.815666675567627, 0.8040000200271606, 0.8263333439826965, 0.8176666498184204, 0.8309999704360962, 0.8186666369438171, 0.7826666831970215, 0.8353333473205566, 0.8253333568572998, 0.812666654586792, 0.8343333601951599, 0.8370000123977661, 0.8306666612625122, 0.8510000109672546, 0.8353333473205566, 0.8416666388511658, 0.8190000057220459, 0.8483333587646484, 0.8379999995231628]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 4, 2, 4, 2, 8, 0, 2, 9, 2, 2, 8, 3, 2, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 1, 0, 2, 2, 1, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 10, 93, 41, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [6, 7, 5, 8, 0, 2, 4, 9, 9, 0, 4, 1, 9, 6, 0, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [3, 1, 3, 3, 1, 0, 3, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [79, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 0, 1, 0, 1], [0, 1, 1, 0], [2, 3, 0], [4, 0], [38], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 2, 3, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 9, 45, 71, 34, 14, 2]], "fitness": -0.8125714063644409, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.1445505619049072, 1.7765167951583862, 1.3050543069839478, 1.047970175743103, 0.9272958040237427, 0.8819615244865417, 0.7857945561408997, 0.7680115699768066, 0.676230251789093, 0.6585075259208679, 0.6446281671524048, 0.6064347624778748, 0.6097878217697144, 0.5703141689300537, 0.5583587884902954, 0.5729970932006836, 0.5397269129753113, 0.5334751009941101, 0.5090751647949219, 0.493632435798645, 0.49982258677482605, 0.4621222913265228, 0.4789368510246277, 0.4705340266227722, 0.4646788537502289, 0.4365178048610687, 0.4305384159088135, 0.4371476173400879, 0.4132653772830963, 0.41486066579818726, 0.4000324010848999, 0.3968120217323303, 0.4091746211051941, 0.38181161880493164, 0.39341697096824646, 0.36902597546577454, 0.37224987149238586, 0.37120792269706726, 0.3590216338634491, 0.3465763032436371, 0.35143330693244934, 0.38506799936294556, 0.353485643863678, 0.3388515114784241, 0.31399041414260864, 0.3272535502910614, 0.3111627995967865, 0.3157554268836975, 0.3134790360927582], "accuracy": [0.30405494570732117, 0.4353454113006592, 0.531369686126709, 0.6203936338424683, 0.6687359809875488, 0.6799629926681519, 0.7040021419525146, 0.7120591998100281, 0.7479857206344604, 0.7511557340621948, 0.7559106945991516, 0.7761194109916687, 0.7662131786346436, 0.785629391670227, 0.7902522683143616, 0.7825914621353149, 0.7988376617431641, 0.800290584564209, 0.8156121969223022, 0.816008448600769, 0.8150838613510132, 0.8322546482086182, 0.8235371708869934, 0.8289526104927063, 0.8293488025665283, 0.830669641494751, 0.843481719493866, 0.8379341959953308, 0.8499537706375122, 0.8496896028518677, 0.8512746095657349, 0.854708731174469, 0.8516708612442017, 0.8570862412452698, 0.8529917001724243, 0.8640866279602051, 0.8651432991027832, 0.8638224601745605, 0.8720116019248962, 0.8710870146751404, 0.869502067565918, 0.8569541573524475, 0.8683133125305176, 0.8734645247459412, 0.8829745054244995, 0.8808611631393433, 0.8861445188522339, 0.8829745054244995, 0.882710337638855], "val_loss": [1.6421738862991333, 1.131423830986023, 0.9517287015914917, 0.7693888545036316, 0.7247414588928223, 0.7024108171463013, 0.6988797187805176, 0.7238825559616089, 0.6200188994407654, 0.6271963119506836, 0.5741904377937317, 0.5598955154418945, 0.5599255561828613, 0.5050454139709473, 0.5020260810852051, 0.5233675241470337, 0.4873118996620178, 0.4817942976951599, 0.49241116642951965, 0.4528963267803192, 0.4609144330024719, 0.44562044739723206, 0.484854519367218, 0.5221766233444214, 0.44888848066329956, 0.43771013617515564, 0.46479493379592896, 0.4288608729839325, 0.46579572558403015, 0.4306638538837433, 0.39791616797447205, 0.48192527890205383, 0.40950387716293335, 0.4287041425704956, 0.39806726574897766, 0.48777157068252563, 0.432095468044281, 0.4106426239013672, 0.40705227851867676, 0.3809683322906494, 0.4482826888561249, 0.40828511118888855, 0.38358357548713684, 0.37477293610572815, 0.4089072644710541, 0.39866283535957336, 0.39084720611572266, 0.40953144431114197, 0.39828288555145264], "val_accuracy": [0.4283333420753479, 0.6166666746139526, 0.6573333144187927, 0.70333331823349, 0.7256666421890259, 0.7333333492279053, 0.7086666822433472, 0.7393333315849304, 0.7473333477973938, 0.7609999775886536, 0.7773333191871643, 0.7513333559036255, 0.7816666960716248, 0.8090000152587891, 0.8043333292007446, 0.8006666898727417, 0.8116666674613953, 0.815666675567627, 0.815666675567627, 0.828000009059906, 0.8259999752044678, 0.8363333344459534, 0.8146666884422302, 0.7760000228881836, 0.828000009059906, 0.8386666774749756, 0.8226666450500488, 0.8383333086967468, 0.8233333230018616, 0.8399999737739563, 0.8476666808128357, 0.8270000219345093, 0.8433333039283752, 0.8333333134651184, 0.8503333330154419, 0.8140000104904175, 0.8356666564941406, 0.8496666550636292, 0.846666693687439, 0.8586666584014893, 0.8370000123977661, 0.8479999899864197, 0.8583333492279053, 0.8646666407585144, 0.8489999771118164, 0.8539999723434448, 0.8586666584014893, 0.8539999723434448, 0.859333336353302]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 4, 2, 4, 2, 8, 0, 2, 9, 2, 2, 8, 3, 2, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 1, 1, 2, 2, 1, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 85, 45, 41, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [6, 7, 5, 8, 0, 2, 4, 9, 9, 0, 4, 1, 9, 6, 0, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [3, 1, 3, 3, 1, 0, 3, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [79, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 0, 1, 0, 1], [0, 1, 1, 0], [2, 3, 0], [4, 0], [38], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 2, 3, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 9, 45, 71, 34, 14, 2]], "fitness": -0.8122857213020325, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.1444506645202637, 1.74936842918396, 1.4134522676467896, 1.0705684423446655, 0.9271782040596008, 0.8793075680732727, 0.7986168265342712, 0.7681686282157898, 0.7159556746482849, 0.6708347201347351, 0.6509958505630493, 0.6203902363777161, 0.632060706615448, 0.595371663570404, 0.5693878531455994, 0.5756997466087341, 0.5418545007705688, 0.5577751398086548, 0.5166560411453247, 0.5007891058921814, 0.5156604647636414, 0.46454906463623047, 0.4906727075576782, 0.47882550954818726, 0.4695303440093994, 0.44809210300445557, 0.445271372795105, 0.43633395433425903, 0.4154834449291229, 0.41182559728622437], "accuracy": [0.30405494570732117, 0.43930789828300476, 0.5404834151268005, 0.6166952848434448, 0.6564522385597229, 0.6761326193809509, 0.7080966830253601, 0.7117950320243835, 0.724739134311676, 0.7471932172775269, 0.7577598690986633, 0.763439416885376, 0.759080708026886, 0.7712323069572449, 0.7884030938148499, 0.7864218950271606, 0.7928939461708069, 0.791969358921051, 0.8026680946350098, 0.811649739742279, 0.8084797263145447, 0.8286884427070618, 0.821820080280304, 0.8261788487434387, 0.8228767514228821, 0.8300092220306396, 0.8333113193511963, 0.8380662798881531, 0.8475762605667114, 0.8518029451370239], "val_loss": [1.6416175365447998, 1.0673173666000366, 1.1236400604248047, 0.9980348348617554, 0.9623234272003174, 0.6703144311904907, 0.7072086334228516, 0.7533912658691406, 0.634590208530426, 0.6068881750106812, 0.5821331143379211, 0.6065307855606079, 0.5873147249221802, 0.5282812714576721, 0.49794360995292664, 0.5201921463012695, 0.47454318404197693, 0.4704218804836273, 0.49820661544799805, 0.5057685375213623, 0.5000500679016113, 0.45128750801086426, 0.5335146188735962, 0.5115634202957153, 0.4392051100730896, 0.43737369775772095, 0.4811912775039673, 0.42495614290237427, 0.4705858528614044, 0.43305811285972595], "val_accuracy": [0.4313333332538605, 0.6273333430290222, 0.6553333401679993, 0.6309999823570251, 0.6290000081062317, 0.7536666393280029, 0.7353333234786987, 0.715666651725769, 0.7366666793823242, 0.7680000066757202, 0.7609999775886536, 0.7509999871253967, 0.762333333492279, 0.8019999861717224, 0.8119999766349792, 0.7940000295639038, 0.8180000185966492, 0.8223333358764648, 0.809333324432373, 0.8013333082199097, 0.8196666836738586, 0.8339999914169312, 0.7950000166893005, 0.7806666493415833, 0.8410000205039978, 0.8356666564941406, 0.8143333196640015, 0.8363333344459534, 0.8246666789054871, 0.8403333425521851]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [3, 1, 1, 4, 4, 5, 9, 5, 3, 0, 8, 8, 1, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 1, 0, 2, 0, 1, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 10, 93, 41, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [6, 7, 5, 8, 0, 2, 4, 9, 9, 0, 4, 1, 9, 6, 0, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [3, 1, 3, 3, 1, 0, 3, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [79, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [9, 3, 0], [4, 0], [38], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [2, 2, 3, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 9, 45, 71, 34, 14, 2]], "fitness": -0.7879999876022339, "mapping_values": [1, 18, 18, 12, 6, 3, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 11, 6, 5, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.pow(tf.math.pow(tf.math.add(alpha, tf.math.square(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.multiply(alpha, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)))))))))), tf.math.add(alpha, grad))))), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(beta), tf.math.subtract(beta, tf.math.add(tf.math.add(sigma, beta), tf.math.square(beta))))", "other_info": {"loss": [2.2167584896087646, 1.6743658781051636, 1.2234894037246704, 1.0445022583007812, 0.9220277667045593, 0.8537497520446777, 0.8389732837677002, 0.7806310653686523, 0.7459118366241455, 0.7347686290740967, 0.7117816209793091, 0.7161005139350891, 0.6949983239173889, 0.6610440611839294, 0.6630843877792358, 0.64594966173172, 0.6511164307594299, 0.6296517848968506, 0.6307047009468079, 0.6125547885894775, 0.6141617298126221, 0.5963541865348816, 0.5976879596710205, 0.5976018905639648, 0.5990129113197327, 0.5661812424659729, 0.5692585706710815, 0.5755472779273987, 0.5704718828201294, 0.5595003366470337], "accuracy": [0.24580636620521545, 0.47747984528541565, 0.5688812732696533, 0.6279223561286926, 0.6680755615234375, 0.6913221478462219, 0.6963412761688232, 0.7127195596694946, 0.7269845604896545, 0.7306828498840332, 0.7386078238487244, 0.7322678565979004, 0.7386078238487244, 0.7458723783493042, 0.7471932172775269, 0.7573636174201965, 0.754589855670929, 0.7577598690986633, 0.7606657147407532, 0.7660810947418213, 0.7712323069572449, 0.7745344042778015, 0.7736098170280457, 0.7773081660270691, 0.774798572063446, 0.7902522683143616, 0.7839123010635376, 0.7873464822769165, 0.7816668748855591, 0.7847048044204712], "val_loss": [1.9680086374282837, 1.1543962955474854, 0.9500124454498291, 0.8198701739311218, 0.761531412601471, 0.7840268015861511, 0.6994234919548035, 0.6851786375045776, 0.6757447719573975, 0.6412861943244934, 0.6302555203437805, 0.6425014138221741, 0.5967058539390564, 0.590612530708313, 0.5745488405227661, 0.5691418647766113, 0.569185197353363, 0.5718930959701538, 0.5673269629478455, 0.5824828743934631, 0.5393287539482117, 0.5466232895851135, 0.5489502549171448, 0.5819225907325745, 0.5288086533546448, 0.5433740019798279, 0.5250080227851868, 0.5223830342292786, 0.5587838292121887, 0.5217123031616211], "val_accuracy": [0.5236666798591614, 0.6019999980926514, 0.6783333420753479, 0.7020000219345093, 0.7226666808128357, 0.7139999866485596, 0.7300000190734863, 0.7276666760444641, 0.7513333559036255, 0.7570000290870667, 0.765666663646698, 0.7566666603088379, 0.7696666717529297, 0.7906666398048401, 0.7900000214576721, 0.7866666913032532, 0.7940000295639038, 0.7706666588783264, 0.7850000262260437, 0.7630000114440918, 0.7973333597183228, 0.7953333258628845, 0.7816666960716248, 0.7713333368301392, 0.8053333163261414, 0.7979999780654907, 0.7983333468437195, 0.8013333082199097, 0.7746666669845581, 0.8050000071525574]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [3, 2, 1, 4, 4, 5, 9, 8, 3, 0, 3, 8, 1, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 1, 0, 2, 2, 1, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 10, 93, 41, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [6, 7, 5, 8, 0, 2, 4, 9, 9, 0, 4, 1, 9, 6, 0, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [3, 1, 3, 3, 1, 0, 3, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [79, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [2, 3, 0], [4, 0], [38], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 2, 3, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [12, 9, 45, 71, 34, 14, 2]], "fitness": -0.4674285650253296, "mapping_values": [1, 15, 15, 9, 6, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.subtract(tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.square(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), grad)), tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(tf.math.multiply(grad, alpha)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.303880214691162, 2.3007900714874268, 2.2991597652435303, 2.2985165119171143, 2.2996959686279297, 2.2973127365112305, 2.296257257461548, 2.295858144760132, 2.292297124862671, 2.2922897338867188, 2.2907755374908447, 2.289832592010498, 2.288193702697754, 2.2879786491394043, 2.287435293197632, 2.2855515480041504, 2.284801959991455, 2.2833452224731445, 2.2847442626953125, 2.282257080078125, 2.2803118228912354, 2.279592990875244, 2.278376340866089, 2.2777044773101807, 2.2770602703094482, 2.2741494178771973, 2.2734436988830566, 2.2731704711914062, 2.2734341621398926, 2.2719831466674805, 2.268904685974121, 2.268620252609253, 2.268275499343872, 2.267988443374634, 2.266033887863159, 2.2644073963165283, 2.264432907104492, 2.2638802528381348, 2.261167526245117, 2.262328624725342, 2.2587852478027344, 2.2578978538513184, 2.256521701812744, 2.25634503364563, 2.2538840770721436, 2.2531018257141113, 2.2530734539031982, 2.2504594326019287, 2.2492995262145996, 2.246645450592041, 2.2471768856048584, 2.2453887462615967, 2.245431423187256, 2.243171453475952, 2.2420856952667236, 2.24015212059021, 2.2388293743133545, 2.2388298511505127, 2.2370011806488037, 2.2354629039764404, 2.2334914207458496, 2.2319118976593018, 2.230649471282959, 2.230304479598999, 2.2271194458007812, 2.228497266769409, 2.2252275943756104, 2.2220635414123535, 2.2213070392608643, 2.2202229499816895, 2.218801259994507, 2.2177822589874268, 2.2159392833709717, 2.2151176929473877, 2.2136900424957275, 2.211413621902466, 2.2098960876464844, 2.2088167667388916, 2.2058026790618896, 2.204439401626587, 2.2016563415527344, 2.1998801231384277, 2.2003402709960938, 2.1972179412841797, 2.1944093704223633, 2.19319224357605, 2.1930582523345947, 2.1888511180877686, 2.1881628036499023, 2.1860954761505127, 2.1848652362823486, 2.1813900470733643, 2.1790452003479004, 2.177849531173706, 2.1780457496643066, 2.175654888153076, 2.173356056213379, 2.1674745082855225, 2.166625499725342, 2.1646978855133057], "accuracy": [0.0878351628780365, 0.09206181764602661, 0.09655263274908066, 0.10315678268671036, 0.1002509593963623, 0.10091137140989304, 0.109232597053051, 0.10672302544116974, 0.11451591551303864, 0.1158367469906807, 0.12257297337055206, 0.12151630967855453, 0.12759213149547577, 0.12362963706254959, 0.13049794733524323, 0.13353586196899414, 0.13340377807617188, 0.1406683325767517, 0.13749834895133972, 0.14278165996074677, 0.14819706976413727, 0.1562541276216507, 0.1526878923177719, 0.16351869702339172, 0.15678246319293976, 0.16589617729187012, 0.16536785662174225, 0.16642451286315918, 0.16959451138973236, 0.1710474193096161, 0.17223615944385529, 0.1760665625333786, 0.18240654468536377, 0.1818782240152359, 0.18623696267604828, 0.1904636174440384, 0.19244486093521118, 0.19099193811416626, 0.20261524617671967, 0.1938977688550949, 0.19759608805179596, 0.21172896027565002, 0.20274733006954193, 0.21159687638282776, 0.21437062323093414, 0.2176727056503296, 0.21754062175750732, 0.2230881005525589, 0.22903183102607727, 0.2308809906244278, 0.23563598096370697, 0.23206974565982819, 0.23352265357971191, 0.23801347613334656, 0.24514594674110413, 0.24607053399085999, 0.24356095492839813, 0.24607053399085999, 0.2576938271522522, 0.2509576082229614, 0.25795799493789673, 0.261260062456131, 0.2591467499732971, 0.26403382420539856, 0.26997753977775574, 0.26641130447387695, 0.27301543951034546, 0.27644962072372437, 0.2763175368309021, 0.2782987654209137, 0.27605336904525757, 0.28199708461761475, 0.28358209133148193, 0.2813366651535034, 0.29084664583206177, 0.29018622636795044, 0.2911108136177063, 0.294148713350296, 0.299299955368042, 0.2995641231536865, 0.30643242597579956, 0.3090741038322449, 0.3061682879924774, 0.3074890971183777, 0.30999869108200073, 0.31699907779693604, 0.3179236650466919, 0.3195086419582367, 0.3147536516189575, 0.3195086419582367, 0.31501781940460205, 0.33139610290527344, 0.3337736129760742, 0.32941487431526184, 0.32003697752952576, 0.3261128067970276, 0.32479196786880493, 0.3399814963340759, 0.33958524465560913, 0.34024566411972046], "val_loss": [2.2983601093292236, 2.2972090244293213, 2.296064853668213, 2.2949228286743164, 2.2937917709350586, 2.292654514312744, 2.291516065597534, 2.2903919219970703, 2.2892532348632812, 2.2881221771240234, 2.286994695663452, 2.2858633995056152, 2.2847251892089844, 2.283597230911255, 2.282473564147949, 2.2813451290130615, 2.2802164554595947, 2.2790839672088623, 2.2779414653778076, 2.276808500289917, 2.2756764888763428, 2.274538993835449, 2.2733919620513916, 2.272249937057495, 2.2711126804351807, 2.2699618339538574, 2.2687981128692627, 2.267643451690674, 2.2664732933044434, 2.26529598236084, 2.264118194580078, 2.26293683052063, 2.2617690563201904, 2.260594367980957, 2.259401321411133, 2.258176565170288, 2.256962537765503, 2.255750894546509, 2.2545220851898193, 2.2532858848571777, 2.252034902572632, 2.250776767730713, 2.2495126724243164, 2.2482411861419678, 2.246948003768921, 2.2456448078155518, 2.2443485260009766, 2.243040084838867, 2.241706609725952, 2.240353584289551, 2.2389845848083496, 2.237617254257202, 2.2362470626831055, 2.2348473072052, 2.2334513664245605, 2.232018232345581, 2.2305924892425537, 2.22914457321167, 2.22768497467041, 2.2262022495269775, 2.224703550338745, 2.2231972217559814, 2.221662998199463, 2.220123529434204, 2.218550205230713, 2.2170002460479736, 2.2154271602630615, 2.2137980461120605, 2.2121646404266357, 2.210515022277832, 2.2088611125946045, 2.207181453704834, 2.20546817779541, 2.2037556171417236, 2.202012062072754, 2.2002458572387695, 2.19846510887146, 2.1966652870178223, 2.1948349475860596, 2.1929831504821777, 2.1910910606384277, 2.189182996749878, 2.1872658729553223, 2.1853108406066895, 2.1833226680755615, 2.1813223361968994, 2.179306983947754, 2.1772427558898926, 2.175152063369751, 2.173050880432129, 2.1709234714508057, 2.168747901916504, 2.166551113128662, 2.164320230484009, 2.162062883377075, 2.1598169803619385, 2.1575028896331787, 2.155128002166748, 2.1527161598205566, 2.1503078937530518], "val_accuracy": [0.038333334028720856, 0.04466666653752327, 0.05233333259820938, 0.05833333358168602, 0.06300000101327896, 0.07199999690055847, 0.0806666687130928, 0.08866667002439499, 0.09833333641290665, 0.10999999940395355, 0.11733333021402359, 0.12933333218097687, 0.14033333957195282, 0.1483333259820938, 0.156333327293396, 0.1679999977350235, 0.17766666412353516, 0.1899999976158142, 0.19733333587646484, 0.210999995470047, 0.21899999678134918, 0.2280000001192093, 0.23866666853427887, 0.24300000071525574, 0.25, 0.25999999046325684, 0.26499998569488525, 0.27133333683013916, 0.27933332324028015, 0.2853333353996277, 0.2933333218097687, 0.29866665601730347, 0.30266666412353516, 0.30666667222976685, 0.312666654586792, 0.31933334469795227, 0.3233333230018616, 0.32633334398269653, 0.3310000002384186, 0.33766666054725647, 0.3396666646003723, 0.3423333466053009, 0.3463333249092102, 0.35066667199134827, 0.3540000021457672, 0.35633334517478943, 0.36000001430511475, 0.3630000054836273, 0.3636666536331177, 0.367000013589859, 0.3700000047683716, 0.3736666738986969, 0.3763333261013031, 0.37833333015441895, 0.38100001215934753, 0.38466668128967285, 0.3869999945163727, 0.3883333206176758, 0.38866665959358215, 0.39233332872390747, 0.39399999380111694, 0.39500001072883606, 0.3959999978542328, 0.39766666293144226, 0.3996666669845581, 0.4013333320617676, 0.40400001406669617, 0.40666666626930237, 0.40833333134651184, 0.40933331847190857, 0.4113333225250244, 0.4126666784286499, 0.4153333306312561, 0.4169999957084656, 0.4180000126361847, 0.41966667771339417, 0.4216666519641876, 0.4230000078678131, 0.42500001192092896, 0.4259999990463257, 0.4273333251476288, 0.42899999022483826, 0.43066665530204773, 0.4326666593551636, 0.4336666762828827, 0.43533334136009216, 0.43533334136009216, 0.43799999356269836, 0.43833333253860474, 0.4390000104904175, 0.44066667556762695, 0.4416666626930237, 0.4423333406448364, 0.4440000057220459, 0.445333331823349, 0.4466666579246521, 0.44866666197776794, 0.45100000500679016, 0.4533333480358124, 0.4543333351612091]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [3, 1, 1, 4, 4, 5, 9, 5, 6, 0, 8, 8, 1, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 1, 0, 2, 2, 1, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 32, 93, 41, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [6, 7, 5, 8, 0, 2, 4, 9, 9, 0, 4, 1, 9, 6, 0, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [3, 1, 3, 3, 1, 0, 3, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [79, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 0, 1, 0, 1], [1, 1, 1, 0], [9, 3, 0], [4, 0], [38], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 2, 3, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [63, 9, 45, 71, 34, 14, 2]], "fitness": -0.35514286160469055, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.6394948959350586, 2.3104357719421387, 2.3303065299987793, 2.2010836601257324, 2.3027875423431396, 2.3014488220214844], "accuracy": [0.19218069314956665, 0.12851670384407043, 0.19297318160533905, 0.2133139669895172, 0.107647605240345, 0.13855500519275665], "val_loss": [1.9939976930618286, 2.2939670085906982, 2.278061628341675, 2.3080461025238037, 2.286271095275879, 2.3031845092773438], "val_accuracy": [0.3400000035762787, 0.2083333283662796, 0.3343333303928375, 0.10300000011920929, 0.09966666996479034, 0.10199999809265137]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 4, 2, 4, 2, 8, 0, 2, 8, 2, 2, 8, 3, 2, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 1, 1, 2, 2, 1, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 85, 45, 41, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [6, 7, 5, 8, 0, 2, 4, 9, 9, 0, 4, 1, 9, 6, 0, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [3, 1, 3, 3, 1, 0, 3, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [79, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 0, 1, 0, 1], [0, 1, 1, 0], [2, 3, 0], [4, 0], [38], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 2, 3, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [4, 9, 45, 71, 34, 14, 2]], "fitness": -0.21057142317295074, "mapping_values": [1, 33, 33, 21, 12, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.sqrt(alpha), tf.math.add(alpha, tf.math.add(tf.math.add(grad, tf.math.add(alpha, grad)), alpha)))))), tf.math.sqrt(tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))))), tf.math.multiply(tf.math.add(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))), tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), tf.math.square(tf.math.add(alpha, tf.math.square(alpha)))), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.3042335510253906, 2.3020095825195312, 2.301232099533081, 2.3014304637908936, 2.3034558296203613, 2.301905393600464, 2.3017418384552, 2.3021364212036133, 2.2994792461395264, 2.300307512283325, 2.2996108531951904, 2.2995333671569824, 2.298736095428467, 2.299271583557129, 2.299588441848755, 2.298522710800171, 2.2985918521881104, 2.298002243041992, 2.300328016281128, 2.298635721206665, 2.2974720001220703, 2.297569513320923, 2.297278881072998, 2.297355890274048, 2.2974941730499268, 2.2954821586608887, 2.295783281326294, 2.2961137294769287, 2.297551393508911, 2.2969353199005127, 2.294696569442749, 2.295299530029297, 2.2954723834991455, 2.2960805892944336, 2.295201301574707, 2.294922351837158, 2.2954111099243164, 2.295747756958008, 2.294067621231079, 2.2962379455566406, 2.2937097549438477, 2.293541669845581, 2.29300856590271, 2.293954610824585, 2.2924787998199463, 2.2928688526153564, 2.2938053607940674, 2.2920377254486084, 2.2920353412628174, 2.2904138565063477, 2.292194128036499, 2.2911880016326904, 2.2923901081085205, 2.2915091514587402, 2.291109561920166, 2.2904391288757324, 2.290040969848633, 2.291457176208496, 2.2906384468078613, 2.2904574871063232, 2.289677143096924, 2.2888450622558594, 2.2889347076416016, 2.28959059715271, 2.28835129737854, 2.289915084838867, 2.2879819869995117, 2.2873902320861816, 2.2870564460754395, 2.2874608039855957, 2.287041187286377, 2.287536382675171, 2.2869460582733154, 2.2881569862365723, 2.2878332138061523, 2.287064552307129, 2.2867531776428223, 2.286630392074585, 2.285517692565918, 2.2855165004730225, 2.285074234008789, 2.2843499183654785, 2.2859482765197754, 2.285097599029541, 2.283879518508911, 2.2837753295898438, 2.2849361896514893, 2.283278465270996, 2.2841131687164307, 2.2839810848236084, 2.283715009689331, 2.2825767993927, 2.2820804119110107, 2.28263521194458, 2.2842843532562256, 2.2826552391052246, 2.2833383083343506, 2.281111717224121, 2.281162738800049, 2.280794143676758], "accuracy": [0.0874389111995697, 0.08902391046285629, 0.09113723784685135, 0.09734513610601425, 0.09219389408826828, 0.08981640636920929, 0.09470347315073013, 0.08942015469074249, 0.09708096832036972, 0.09496764093637466, 0.10051512718200684, 0.09457138925790787, 0.09906221181154251, 0.09615638852119446, 0.10011887550354004, 0.10051512718200684, 0.0944393053650856, 0.10210011899471283, 0.09747721254825592, 0.09536388516426086, 0.1014397069811821, 0.10593052208423615, 0.10276053100824356, 0.10606260597705841, 0.10685510188341141, 0.10910051316022873, 0.10672302544116974, 0.10368511080741882, 0.107647605240345, 0.10381719470024109, 0.10540219396352768, 0.11055342853069305, 0.10777968913316727, 0.10962884873151779, 0.10487385839223862, 0.11266675591468811, 0.10500594228506088, 0.10645885765552521, 0.10751552134752274, 0.10817593336105347, 0.10857218503952026, 0.11755382269620895, 0.11227050423622131, 0.11240258812904358, 0.11411966383457184, 0.10896842926740646, 0.11200633645057678, 0.11636507511138916, 0.11306300014257431, 0.11940298229455948, 0.11649715900421143, 0.1154404953122139, 0.11649715900421143, 0.11689341068267822, 0.1208558976650238, 0.1224408894777298, 0.120459645986557, 0.12323339283466339, 0.12442214041948318, 0.12270505726337433, 0.12481838464736938, 0.12613920867443085, 0.12296922504901886, 0.1216483935713768, 0.12455421686172485, 0.12151630967855453, 0.1266675442457199, 0.12495046854019165, 0.12693171203136444, 0.11993131786584854, 0.1262712925672531, 0.12521463632583618, 0.1274600476026535, 0.1224408894777298, 0.12917712330818176, 0.13247919082641602, 0.1290450394153595, 0.13353586196899414, 0.13419628143310547, 0.137630432844162, 0.137630432844162, 0.13353586196899414, 0.13221503794193268, 0.13419628143310547, 0.13829085230827332, 0.13591335713863373, 0.13749834895133972, 0.13472460210323334, 0.14093250036239624, 0.1450270712375641, 0.1348566859960556, 0.13815876841545105, 0.14621582627296448, 0.1398758441209793, 0.13617752492427826, 0.1398758441209793, 0.13842293620109558, 0.14489498734474182, 0.1484612375497818, 0.1442345827817917], "val_loss": [2.2992825508117676, 2.2990529537200928, 2.2988240718841553, 2.2985949516296387, 2.2983672618865967, 2.298137664794922, 2.2979073524475098, 2.2976794242858887, 2.2974488735198975, 2.2972195148468018, 2.2969918251037598, 2.2967634201049805, 2.2965338230133057, 2.2963058948516846, 2.2960784435272217, 2.2958507537841797, 2.295624017715454, 2.295396089553833, 2.2951669692993164, 2.2949395179748535, 2.2947142124176025, 2.294487237930298, 2.294259548187256, 2.294034242630005, 2.293808698654175, 2.293583393096924, 2.29335618019104, 2.293131113052368, 2.292902708053589, 2.2926762104034424, 2.292449951171875, 2.292224168777466, 2.2920000553131104, 2.2917771339416504, 2.2915518283843994, 2.291322946548462, 2.291097402572632, 2.2908735275268555, 2.2906484603881836, 2.290421724319458, 2.2901971340179443, 2.2899720668792725, 2.2897489070892334, 2.2895264625549316, 2.289302349090576, 2.289077043533325, 2.288853406906128, 2.288630247116089, 2.288405179977417, 2.288179636001587, 2.2879533767700195, 2.287728786468506, 2.2875025272369385, 2.287276268005371, 2.287053108215332, 2.2868285179138184, 2.2866058349609375, 2.2863805294036865, 2.286156177520752, 2.2859301567077637, 2.285703182220459, 2.285480499267578, 2.2852578163146973, 2.285034418106079, 2.284808397293091, 2.284585952758789, 2.2843620777130127, 2.2841367721557617, 2.2839126586914062, 2.2836880683898926, 2.2834651470184326, 2.2832388877868652, 2.283017158508301, 2.282789945602417, 2.2825639247894287, 2.282338857650757, 2.2821152210235596, 2.281893014907837, 2.2816686630249023, 2.281445026397705, 2.2812187671661377, 2.2809958457946777, 2.2807726860046387, 2.280546188354492, 2.2803196907043457, 2.280094861984253, 2.2798705101013184, 2.279644250869751, 2.279417037963867, 2.2791907787323, 2.2789669036865234, 2.2787420749664307, 2.278514862060547, 2.2782883644104004, 2.278062343597412, 2.2778406143188477, 2.277615547180176, 2.27738618850708, 2.277160167694092, 2.27693510055542], "val_accuracy": [0.03566666692495346, 0.03633333370089531, 0.03700000047683716, 0.03733333200216293, 0.03866666555404663, 0.0403333343565464, 0.04100000113248825, 0.0416666679084301, 0.04233333468437195, 0.04500000178813934, 0.046666666865348816, 0.047333333641290665, 0.04833333194255829, 0.05066666752099991, 0.052000001072883606, 0.05299999937415123, 0.05400000140070915, 0.055666666477918625, 0.05666666850447655, 0.05833333358168602, 0.058666665107011795, 0.059333331882953644, 0.06133333221077919, 0.06266666948795319, 0.06266666948795319, 0.06300000101327896, 0.06466666609048843, 0.0676666647195816, 0.06966666877269745, 0.07133333384990692, 0.07233333587646484, 0.07433333247900009, 0.07666666805744171, 0.07800000160932541, 0.08133333176374435, 0.08299999684095383, 0.08366666734218597, 0.0846666693687439, 0.08666666597127914, 0.08833333104848862, 0.08933333307504654, 0.09133332967758179, 0.09333333373069763, 0.09533333033323288, 0.09666666388511658, 0.09833333641290665, 0.10300000011920929, 0.10700000077486038, 0.10833333432674408, 0.10966666787862778, 0.1106666699051857, 0.11299999803304672, 0.11400000005960464, 0.11566666513681412, 0.11666666716337204, 0.11999999731779099, 0.12266666442155838, 0.12466666847467422, 0.12566666305065155, 0.12800000607967377, 0.1313333362340927, 0.13466666638851166, 0.13600000739097595, 0.13699999451637268, 0.1379999965429306, 0.14133332669734955, 0.14499999582767487, 0.1456666737794876, 0.14666666090488434, 0.14766666293144226, 0.15000000596046448, 0.1523333340883255, 0.15299999713897705, 0.15333333611488342, 0.15600000321865082, 0.1586666703224182, 0.16033333539962769, 0.16333332657814026, 0.1653333306312561, 0.1666666716337204, 0.16833333671092987, 0.1706666648387909, 0.17266666889190674, 0.17399999499320984, 0.1770000010728836, 0.18000000715255737, 0.18166667222976685, 0.18566666543483734, 0.18766666948795319, 0.1899999976158142, 0.19066666066646576, 0.1926666647195816, 0.1940000057220459, 0.19499999284744263, 0.19699999690055847, 0.19900000095367432, 0.20200000703334808, 0.2056666612625122, 0.2083333283662796, 0.21066667139530182]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 4, 2, 4, 2, 8, 0, 2, 9, 2, 2, 8, 3, 2, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 1, 0, 0, 2, 1, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 44, 93, 41, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [6, 7, 5, 8, 0, 2, 4, 9, 9, 0, 4, 1, 9, 6, 0, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [3, 1, 3, 3, 1, 0, 3, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [79, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [9, 3, 0], [4, 0], [38], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 2, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 2, 3, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 9, 45, 71, 34, 14, 2]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 4, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 5, 2, 3, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, alpha))), tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), beta), sigma)", "other_info": {"loss": [784.47998046875, 3.1124351024627686, 3.1394827365875244, 35.221553802490234, 2.8449110984802246, 3.1748664379119873, 51.3709716796875, 3.0073065757751465, 13.558904647827148, 27.34792137145996, 70.28117370605469, 3.176299571990967], "accuracy": [0.09589222073554993, 0.1006472036242485, 0.10011887550354004, 0.0956280529499054, 0.10711926966905594, 0.09272222965955734, 0.09642054885625839, 0.1002509593963623, 0.09959053993225098, 0.09826971590518951, 0.10249637067317963, 0.09602430462837219], "val_loss": [3.3616843223571777, 4.38577127456665, 2.5467517375946045, 2.3049042224884033, 3.911736011505127, 3.4429149627685547, 2.5000123977661133, 2.729025363922119, 3.195246458053589, 450.2362365722656, 3.294145107269287, 3560.36767578125], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.10066666454076767, 0.09966666996479034, 0.10066666454076767, 0.09733333438634872, 0.10199999809265137, 0.10066666454076767, 0.09733333438634872, 0.10066666454076767, 0.10199999809265137, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 4, 2, 4, 2, 8, 0, 2, 8, 4, 3, 8, 3, 2, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 2, 0, 1, 2, 1, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 10, 93, 41, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [6, 7, 5, 8, 0, 2, 4, 9, 9, 0, 4, 1, 9, 6, 0, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [3, 1, 3, 3, 1, 0, 3, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [79, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [9, 3, 0], [4, 0], [38], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [9, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [2, 2, 3, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 9, 45, 71, 34, 14, 2]], "fitness": -0.10000000149011612, "mapping_values": [1, 22, 22, 13, 9, 3, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.negative(grad))), tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha))), grad))), tf.math.add(alpha, alpha)))), tf.math.multiply(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), grad))))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303325891494751, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09549596905708313, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 4, 2, 4, 2, 8, 6, 2, 9, 5, 2, 8, 3, 2, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 0, 1, 2, 2, 1, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 78, 61, 41, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [6, 7, 5, 8, 0, 2, 4, 9, 9, 0, 4, 1, 9, 6, 0, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [3, 1, 3, 3, 1, 0, 3, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [79, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [2, 3, 0], [4, 0], [38], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [1, 8, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 2, 3, 2, 0, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 9, 45, 71, 34, 14, 2]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 3, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, tf.math.pow(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.math.pow(tf.math.add(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(grad)))), tf.math.add(alpha, alpha))))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09549596905708313, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 4, 2, 4, 2, 8, 0, 2, 9, 2, 2, 8, 3, 2, 5, 9, 3, 2, 2, 5, 5, 2, 5, 2, 1, 8], [1, 2, 1, 2, 2, 1, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 85, 45, 41, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [6, 7, 5, 8, 0, 2, 4, 9, 9, 0, 4, 1, 9, 6, 0, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [3, 1, 3, 3, 1, 0, 3, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [79, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 0, 1, 0, 1], [0, 1, 1, 0], [2, 3, 0], [4, 0], [38], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 2, 3, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 9, 45, 71, 34, 14, 2]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 8, 4, 1, 1, 0, 0, 0, 0, 11, 6, 5, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.sqrt(tf.math.negative(alpha))))), tf.math.add(beta, tf.math.add(tf.math.pow(grad, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(beta, tf.math.add(tf.math.add(sigma, beta), tf.math.square(beta))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09549596905708313, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 4, 2, 4, 2, 8, 0, 2, 9, 2, 2, 8, 3, 2, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 1, 1, 2, 2, 1, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [29, 49, 91, 56, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [6, 7, 5, 8, 0, 2, 4, 9, 9, 0, 4, 1, 9, 6, 0, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [5, 1, 3, 3, 1, 0, 3, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [79, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 0, 1, 0, 1], [0, 1, 1, 0], [2, 3, 0], [4, 0], [73], [1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 7, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [2, 2, 3, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 9, 45, 71, 34, 14, 2]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07687227427959442, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 4, 2, 4, 2, 0, 0, 2, 8, 2, 2, 8, 3, 2, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 2, 2, 2, 2, 1, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 10, 93, 41, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [6, 7, 5, 8, 0, 2, 4, 9, 9, 0, 4, 1, 9, 6, 0, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [3, 1, 3, 3, 1, 0, 3, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [79, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [9, 3, 0], [4, 0], [38], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 2, 3, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 9, 45, 71, 34, 14, 2]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 21, 12, 9, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(grad)))), grad), tf.math.add(tf.math.sqrt(tf.math.add(grad, grad)), tf.math.add(alpha, alpha)))))), tf.math.add(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303325891494751, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09549596905708313, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 4, 2, 4, 2, 8, 5, 2, 9, 2, 2, 8, 3, 2, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 1, 0, 2, 1, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [5, 10, 34, 41, 8, 79, 86, 52, 44], [1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [6, 7, 5, 8, 0, 2, 4, 9, 9, 0, 4, 1, 9, 6, 0, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [3, 1, 3, 3, 1, 0, 3, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [79, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [9, 3, 0], [4, 0], [38], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 2, 3, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 9, 45, 71, 34, 14, 2]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 3, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 11, 6, 5, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(alpha)))), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), grad)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.add(alpha, grad), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(beta, tf.math.add(tf.math.add(sigma, beta), tf.math.square(beta))))", "other_info": {"loss": [1159.6038818359375, 2.381446123123169, 2.396096706390381, 2.5524446964263916, 3.2527177333831787, 4.9045586585998535, 7.89211368560791, 12.8256254196167, 19.95611000061035, 29.844932556152344, 42.487457275390625, 59.21844482421875, 79.73109436035156], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.1006472036242485, 0.09470347315073013, 0.09787346422672272, 0.09787346422672272, 0.09853387624025345, 0.10170386731624603, 0.1022322028875351, 0.1026284471154213, 0.10038304328918457, 0.09496764093637466, 0.09919429570436478], "val_loss": [2.3643290996551514, 2.386497735977173, 2.4355008602142334, 2.8354663848876953, 4.016512870788574, 6.40610408782959, 10.463547706604004, 16.539602279663086, 25.10226821899414, 36.53677749633789, 51.38596725463867, 69.92524719238281, 92.61151123046875], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09833333641290665, 0.10066666454076767, 0.10199999809265137, 0.09600000083446503, 0.09966666996479034, 0.10300000011920929, 0.09733333438634872, 0.09966666996479034, 0.09833333641290665, 0.09733333438634872, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [3, 1, 1, 4, 4, 5, 9, 5, 3, 0, 8, 8, 1, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 1, 1, 2, 2, 1, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 32, 93, 41, 8, 79, 86, 52, 44], [1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [6, 7, 5, 8, 0, 2, 4, 9, 9, 0, 4, 1, 9, 6, 0, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [0, 1, 3, 3, 1, 0, 3, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [79, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 0, 1, 0, 1], [0, 1, 1, 0], [2, 3, 0], [4, 0], [38], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [2, 2, 3, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 9, 45, 71, 34, 14, 2]], "fitness": -0.0908571407198906, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 11, 6, 5, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(beta), tf.math.subtract(beta, tf.math.add(tf.math.add(sigma, beta), tf.math.square(beta))))", "other_info": {"loss": [724522126802944.0, 7.58238116896886e+18, 1.5815396364553237e+21, 7.605005312199039e+22, 1.7380229712417346e+24, 2.667393197866577e+25, 2.5083956378406543e+26, 1.7217479611949013e+27, 8.115203218814464e+27, 4.889429641934125e+28, 2.1028792395548188e+29, 1.8317392788903973e+29], "accuracy": [0.09800554811954498, 0.09813763201236725, 0.09972262382507324, 0.10157178342342377, 0.10751552134752274, 0.09668471664190292, 0.1026284471154213, 0.09734513610601425, 0.1010434553027153, 0.09919429570436478, 0.09985470771789551, 0.10011887550354004], "val_loss": [2.2560020096876544e+16, 6.57576474974691e+19, 8.260402794381208e+21, 3.14068860279426e+23, 6.27492920384363e+24, 6.010779322697889e+25, 4.8681990628187634e+26, 3.0075754529477264e+27, 1.2475134567377778e+28, 7.908291196598423e+28, 3.2256426492696015e+29, NaN], "val_accuracy": [0.09600000083446503, 0.09566666930913925, 0.10133333504199982, 0.09266666322946548, 0.10100000351667404, 0.10199999809265137, 0.10966666787862778, 0.10466666519641876, 0.09933333098888397, 0.10133333504199982, 0.0976666659116745, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 4, 1, 4, 1, 5, 9, 5, 3, 2, 8, 8, 1, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 1, 0, 2, 2, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 93, 93, 41, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [6, 7, 5, 8, 0, 2, 4, 9, 9, 0, 4, 1, 9, 6, 0, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [3, 1, 3, 3, 1, 0, 3, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [79, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 1, 1, 0, 1], [0, 1, 1, 0], [9, 3, 0], [4, 0], [38], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [5, 3, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 2, 3, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [75, 9, 45, 71, 34, 14, 2]], "fitness": -0.06942857056856155, "mapping_values": [1, 20, 20, 14, 6, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 11, 6, 5, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), alpha)), tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.sqrt(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(grad, grad))), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))))))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.math.subtract(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), beta), tf.math.add(tf.math.add(sigma, beta), tf.math.square(beta))))", "other_info": {"loss": [2.30375075340271, 2.3009257316589355, 2.299619436264038, 2.2996652126312256, 2.3016583919525146, 2.3001084327697754, 2.3000967502593994, 2.3002376556396484, 2.298677682876587, 2.2990150451660156, 2.2987277507781982, 2.298757791519165, 2.2989718914031982, 2.299379348754883], "accuracy": [0.08730682730674744, 0.09391097724437714, 0.0948355570435524, 0.1010434553027153, 0.09602430462837219, 0.09549596905708313, 0.09760929644107819, 0.09708096832036972, 0.10394927859306335, 0.10302469879388809, 0.10632677376270294, 0.10249637067317963, 0.09853387624025345, 0.1010434553027153], "val_loss": [2.29839825630188, 2.297895669937134, 2.297477960586548, 2.2973666191101074, 2.297363519668579, 2.2973639965057373, 2.297421455383301, 2.297250747680664, 2.2972967624664307, 2.2972731590270996, 2.2974419593811035, 2.2977445125579834, 2.2981910705566406, 2.2984910011291504], "val_accuracy": [0.0430000014603138, 0.04800000041723251, 0.05433333292603493, 0.05900000035762787, 0.06233333423733711, 0.06300000101327896, 0.06966666877269745, 0.07633333653211594, 0.08166666328907013, 0.08166666328907013, 0.07999999821186066, 0.07900000363588333, 0.07666666805744171, 0.07266666740179062]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [3, 6, 1, 4, 2, 2, 8, 2, 8, 0, 8, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 1, 1, 2, 2, 1, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [79, 10, 34, 41, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [6, 7, 5, 8, 0, 2, 4, 9, 9, 0, 4, 1, 9, 6, 0, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [3, 1, 3, 3, 1, 0, 3, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [79, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 0, 1, 0, 1], [0, 1, 1, 0], [9, 3, 0], [4, 0], [38], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 3, 3, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [87, 9, 45, 71, 34, 14, 2]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.3043212890625, 2.3023128509521484, 2.301748752593994, 2.302158832550049, 2.3043971061706543, 2.303056001663208], "accuracy": [0.0870426595211029, 0.08849557489156723, 0.08968432247638702, 0.0956280529499054, 0.08942015469074249, 0.08598599582910538], "val_loss": [2.299511671066284, 2.299511671066284, 2.299511671066284, 2.299511671066284, 2.299511671066284, 2.299511671066284], "val_accuracy": [0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 4, 2, 4, 2, 8, 0, 2, 9, 2, 2, 8, 3, 2, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 1, 1, 2, 2, 1, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 85, 45, 41, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [6, 7, 5, 8, 0, 2, 4, 9, 9, 0, 4, 1, 9, 6, 0, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [3, 1, 3, 3, 1, 0, 3, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [79, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 0, 1, 0, 1], [0, 1, 1, 0], [2, 3, 0], [4, 0], [38], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 2, 3, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [74, 9, 45, 71, 34, 14, 2]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(sigma), beta)", "other_info": {"loss": [2.3043212890625, 2.3023128509521484, 2.301748752593994, 2.302158832550049, 2.3043971061706543, 2.303056001663208], "accuracy": [0.0870426595211029, 0.08849557489156723, 0.08968432247638702, 0.0956280529499054, 0.08942015469074249, 0.08598599582910538], "val_loss": [2.299511671066284, 2.299511671066284, 2.299511671066284, 2.299511671066284, 2.299511671066284, 2.299511671066284], "val_accuracy": [0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 4, 2, 4, 2, 8, 0, 2, 9, 2, 2, 8, 3, 2, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 1, 1, 2, 2, 1, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 10, 93, 41, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [6, 7, 5, 8, 0, 2, 4, 9, 9, 0, 4, 1, 9, 6, 0, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [1, 1, 3, 3, 1, 0, 3, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [79, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 0, 1, 0, 1], [0, 1, 1, 0], [9, 3, 0], [4, 0], [38], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 7, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 2, 3, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 9, 45, 71, 34, 14, 2]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), beta), sigma)", "other_info": {"loss": [2.3043212890625, 2.3023128509521484, 2.301748752593994, 2.302158832550049, 2.3043971061706543, 2.303056001663208], "accuracy": [0.0870426595211029, 0.08849557489156723, 0.08968432247638702, 0.0956280529499054, 0.08942015469074249, 0.08598599582910538], "val_loss": [2.299511671066284, 2.299511671066284, 2.299511671066284, 2.299511671066284, 2.299511671066284, 2.299511671066284], "val_accuracy": [0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161]}}]