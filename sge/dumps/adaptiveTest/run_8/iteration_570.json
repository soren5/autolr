[{"genotype": [[0], [1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [3, 0, 2, 6, 0, 2, 2, 3, 2, 1, 5, 8, 9, 3, 2, 6, 0, 5, 0, 2], [1, 0, 2, 1, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [22, 55, 35, 73, 95], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [1, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 2, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [45, 25, 50, 71, 34]], "fitness": -0.7851428389549255, "mapping_values": [1, 4, 4, 2, 2, 1, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.negative(tf.math.add(alpha, alpha)), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(beta, alpha)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.165833995232351, 1.780737050661967, 1.3096510818873446, 1.058947123934517, 0.9481675503292041, 0.8476867523600853, 0.8339897816553722, 0.7530434640596068, 0.7573426022757597, 0.678363891490903, 0.7003366822233416, 0.6661231659737561, 0.6340095852391595, 0.6184427165210428, 0.6013586433131256, 0.6068598363519486, 0.5782779572646474, 0.5775488970727181], "accuracy": [0.2859595715999603, 0.4439307749271393, 0.5482763051986694, 0.6061286330223083, 0.6510368585586548, 0.6819442510604858, 0.6782459616661072, 0.7111346125602722, 0.7025492191314697, 0.7415136694908142, 0.7289658188819885, 0.7464007139205933, 0.7534011602401733, 0.770439863204956, 0.7712323069572449, 0.7721568942070007, 0.7783648371696472, 0.7730814814567566], "val_loss": [1.7109174728393555, 0.9580663612910679, 0.9840549400874546, 0.6748467513493129, 0.627191424369812, 0.6449128559657505, 0.5974202666963849, 0.6623296056474958, 0.519606385912214, 0.4857411895479475, 0.5210498571395874, 0.49865191323416574, 0.46404639312199186, 0.49093728406088694, 0.4512324162891933, 0.456230674471174, 0.4894772938319615, 0.48658181939806255], "val_accuracy": [0.4313333332538605, 0.6010000109672546, 0.5573333501815796, 0.7153333425521851, 0.734333336353302, 0.6976666450500488, 0.7049999833106995, 0.6949999928474426, 0.7603333592414856, 0.7903333306312561, 0.7676666378974915, 0.7749999761581421, 0.8026666641235352, 0.7733333110809326, 0.7946666479110718, 0.7950000166893005, 0.7716666460037231, 0.7576666474342346]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [3, 2, 8, 0, 2, 2, 2, 3, 2, 1, 5, 8, 9, 3, 2, 6, 0, 5, 0, 2], [1, 1, 2, 1, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [98, 55, 35, 73, 95], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [1, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 2, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [38, 25, 50, 71, 34]], "fitness": -0.7842857241630554, "mapping_values": [1, 13, 13, 7, 6, 1, 8, 8, 4, 4, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.sqrt(alpha), tf.math.negative(alpha)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), grad)))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(beta, grad), grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2121397500434306, 1.6550948049067633, 1.2395655715690705, 1.036973663568969, 0.9315014979575115, 0.895334135933386, 0.8165284792162314, 0.7846910598854017, 0.7626803297612961, 0.7613384997714008, 0.7254558997289018, 0.7088068737219732, 0.6856613430711084, 0.6980329076092178, 0.6701657179166864, 0.6648659100858149, 0.6437082571391936, 0.6416347660345724, 0.6374747960984101, 0.6299378926397204, 0.6339365774378123, 0.6101295052423705, 0.6091653812106386, 0.5985202748761941, 0.5940660987831204, 0.5906895292102857], "accuracy": [0.2541275918483734, 0.4768194556236267, 0.561880886554718, 0.6350548267364502, 0.6567164063453674, 0.6760005354881287, 0.7033417224884033, 0.7066437602043152, 0.7240787148475647, 0.7182670831680298, 0.7273808121681213, 0.7405890822410583, 0.7478536367416382, 0.7359662055969238, 0.7504953145980835, 0.7540615797042847, 0.7618544697761536, 0.7602694630622864, 0.76106196641922, 0.7683265209197998, 0.7662131786346436, 0.7718927264213562, 0.7666094303131104, 0.7713643908500671, 0.7713643908500671, 0.7820631265640259], "val_loss": [1.6613425527300154, 0.9662935393197196, 0.8180548293249947, 0.7274139608655658, 0.6811368806021554, 0.6064912251063755, 0.5932171855654035, 0.5662930352347237, 0.5473589726856777, 0.5460462399891445, 0.5254068204334804, 0.5060123716081891, 0.5008294412067958, 0.5017614875520978, 0.5095942871911185, 0.4884509699685233, 0.4773052760532924, 0.48653323309762136, 0.4708862134388515, 0.5074386256081718, 0.4610827480043684, 0.4686321701322283, 0.45877757242747713, 0.48031156403677805, 0.46159734044756207, 0.4635627099445888], "val_accuracy": [0.5183333158493042, 0.6346666812896729, 0.6643333435058594, 0.6613333225250244, 0.7086666822433472, 0.7423333525657654, 0.7263333201408386, 0.7493333220481873, 0.765333354473114, 0.7509999871253967, 0.777999997138977, 0.7856666445732117, 0.7736666798591614, 0.7886666655540466, 0.7756666541099548, 0.781000018119812, 0.7946666479110718, 0.7773333191871643, 0.7933333516120911, 0.7636666893959045, 0.8050000071525574, 0.7976666688919067, 0.8023333549499512, 0.7889999747276306, 0.7833333611488342, 0.8050000071525574]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [3, 2, 8, 0, 2, 2, 2, 3, 2, 1, 5, 8, 9, 3, 2, 6, 0, 5, 0, 2], [1, 1, 2, 1, 2, 2, 2, 2, 0, 0, 0, 3, 2, 2], [98, 55, 35, 73, 95], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [1, 2, 3, 6, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 1, 0, 2, 1, 3, 0, 0], [58, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 2, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [38, 25, 50, 71, 34]], "fitness": -0.7842857241630554, "mapping_values": [1, 7, 7, 4, 3, 0, 9, 9, 4, 5, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.sqrt(alpha), tf.math.add(alpha, tf.math.negative(alpha))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), alpha)), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2121397500434306, 1.6550948049067633, 1.2395655715690705, 1.036973663568969, 0.9315014979575115, 0.895334135933386, 0.8165284792162314, 0.7846910598854017, 0.7626803297612961, 0.7613384997714008, 0.7254558997289018, 0.7088068737219732, 0.6856613430711084, 0.6980329076092178, 0.6701657179166864, 0.6648659100858149, 0.6437082571391936, 0.6416347660345724, 0.6374747960984101, 0.6299378926397204, 0.6339365774378123, 0.6101295052423705, 0.6091653812106386, 0.5985202748761941, 0.5940660987831204, 0.5906895292102857], "accuracy": [0.2541275918483734, 0.4768194556236267, 0.561880886554718, 0.6350548267364502, 0.6567164063453674, 0.6760005354881287, 0.7033417224884033, 0.7066437602043152, 0.7240787148475647, 0.7182670831680298, 0.7273808121681213, 0.7405890822410583, 0.7478536367416382, 0.7359662055969238, 0.7504953145980835, 0.7540615797042847, 0.7618544697761536, 0.7602694630622864, 0.76106196641922, 0.7683265209197998, 0.7662131786346436, 0.7718927264213562, 0.7666094303131104, 0.7713643908500671, 0.7713643908500671, 0.7820631265640259], "val_loss": [1.6613425527300154, 0.9662935393197196, 0.8180548293249947, 0.7274139608655658, 0.6811368806021554, 0.6064912251063755, 0.5932171855654035, 0.5662930352347237, 0.5473589726856777, 0.5460462399891445, 0.5254068204334804, 0.5060123716081891, 0.5008294412067958, 0.5017614875520978, 0.5095942871911185, 0.4884509699685233, 0.4773052760532924, 0.48653323309762136, 0.4708862134388515, 0.5074386256081718, 0.4610827480043684, 0.4686321701322283, 0.45877757242747713, 0.48031156403677805, 0.46159734044756207, 0.4635627099445888], "val_accuracy": [0.5183333158493042, 0.6346666812896729, 0.6643333435058594, 0.6613333225250244, 0.7086666822433472, 0.7423333525657654, 0.7263333201408386, 0.7493333220481873, 0.765333354473114, 0.7509999871253967, 0.777999997138977, 0.7856666445732117, 0.7736666798591614, 0.7886666655540466, 0.7756666541099548, 0.781000018119812, 0.7946666479110718, 0.7773333191871643, 0.7933333516120911, 0.7636666893959045, 0.8050000071525574, 0.7976666688919067, 0.8023333549499512, 0.7889999747276306, 0.7833333611488342, 0.8050000071525574]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [3, 0, 2, 6, 2, 2, 2, 3, 2, 1, 5, 8, 9, 3, 2, 6, 0, 5, 0, 2], [1, 1, 2, 1, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [98, 55, 35, 73, 95], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [1, 2, 1, 4, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 0, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 2, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [1, 25, 50, 71, 34]], "fitness": -0.7559999823570251, "mapping_values": [1, 14, 14, 7, 7, 1, 9, 9, 4, 5, 2, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), grad)))), tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(beta, grad), grad), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), grad)), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.2971270089734577, 2.2819344385220406, 2.2662428117872246, 2.2511573621326386, 2.2317130122249624, 2.212933565474079, 2.1885015851140355, 2.157191612276151, 2.12290679512558, 2.0804076753728946, 2.03367429966184, 1.9763775379776467, 1.9128472856511025, 1.8389831790204818, 1.7685459955351748, 1.691516018971917, 1.6222493326060918, 1.5502589806400633, 1.4974614227641576, 1.4305692490742836, 1.393537251185023, 1.3342165879727104, 1.3019464028557104, 1.2563958531121346, 1.224256936506494, 1.2020564717450366, 1.1889424794511614, 1.1571401472593013, 1.1441233355402867, 1.1147621691959126, 1.0841642950724586, 1.063227954085288, 1.0606280393635734, 1.0396737414832287, 1.029568272409438, 1.0120833052336784, 0.9949750487263712, 0.9911733075155637, 0.9613897741242422, 0.9622494607805623, 0.9625022424572668, 0.9477453487518678, 0.927347089195327, 0.9202423552559226, 0.9140003166414759, 0.9211898108105602, 0.8939368359527063, 0.8954584067523786, 0.8920578074855198, 0.8811049673771736, 0.8801053885644563, 0.8670031925344259, 0.8603289495243798, 0.8597267950451873, 0.8513403105430316, 0.8527674799377357, 0.847177481079744, 0.8482160793555615, 0.8349593123582219, 0.8485576692211346, 0.8340337173561804, 0.8315963899816866, 0.8192516204514413, 0.8117458205716863, 0.8150789908304065, 0.8013454408787969, 0.8024881229566277, 0.8091838235364472, 0.7971881759275362, 0.8023494122412856, 0.7992553636303762, 0.7925996338182736, 0.7891147748795105, 0.7851379663244199, 0.7695186798834861, 0.7786746099561732, 0.7761967434008926, 0.7703489461563613, 0.7769080492263268, 0.7702549037569943, 0.765581708385204, 0.7616100661774448, 0.7569855065818759, 0.7589847607588047, 0.7528605437974699, 0.7564834404253075, 0.7492704685212064, 0.7409424535696927, 0.7497326451018029, 0.7429698682369856, 0.7454756464326481, 0.7329334009750219, 0.7387019115794273, 0.7347939407364127], "accuracy": [0.10976093262434006, 0.1460837423801422, 0.18821820616722107, 0.22084268927574158, 0.2603355050086975, 0.2863558232784271, 0.3183199167251587, 0.3494914770126343, 0.36085060238838196, 0.38581427931785583, 0.4065513014793396, 0.41989168524742126, 0.4349491596221924, 0.45145952701568604, 0.4585919976234436, 0.4741777777671814, 0.4966318905353546, 0.5153876543045044, 0.5214634537696838, 0.5326905250549316, 0.5370492935180664, 0.5543521046638489, 0.5606921315193176, 0.5694096088409424, 0.574560821056366, 0.5832782983779907, 0.5819574594497681, 0.5931845307350159, 0.6007132530212402, 0.613789439201355, 0.622639000415802, 0.6320168972015381, 0.6304318904876709, 0.6325452327728271, 0.6419231295585632, 0.6468101739883423, 0.6518293619155884, 0.6532822847366333, 0.6596222519874573, 0.6600185036659241, 0.6592260003089905, 0.658961832523346, 0.6716417670249939, 0.6798309087753296, 0.6781138777732849, 0.6750759482383728, 0.6808875799179077, 0.6837934255599976, 0.6836613416671753, 0.6839255094528198, 0.6906617283821106, 0.6893408894538879, 0.6930392384529114, 0.6929071545600891, 0.6954167485237122, 0.6925109028816223, 0.6944921612739563, 0.6950204968452454, 0.7067758440971375, 0.6980583667755127, 0.7005679607391357, 0.7010962963104248, 0.7041342258453369, 0.711530864238739, 0.7047945857048035, 0.7092854380607605, 0.707568347454071, 0.7086250185966492, 0.7132478952407837, 0.7033417224884033, 0.7078325152397156, 0.7149649858474731, 0.7145687341690063, 0.7125874757766724, 0.722757875919342, 0.7176066637039185, 0.7205125093460083, 0.7207766771316528, 0.7268524765968323, 0.7206445932388306, 0.7231541275978088, 0.7290979027748108, 0.7259278893470764, 0.719852089881897, 0.7269845604896545, 0.7197200059890747, 0.7313432693481445, 0.7296261787414551, 0.7285695672035217, 0.7306828498840332, 0.7296261787414551, 0.7374191284179688, 0.7329282760620117, 0.7363624572753906], "val_loss": [1.9566346577235632, 1.942596435546875, 1.927865845816476, 1.911731515611921, 1.8931676319667272, 1.8717754908970423, 1.846224648611886, 1.8151841163635254, 1.7784135682242257, 1.7342091287885393, 1.682995080947876, 1.6238538878304618, 1.55762665612357, 1.4859238352094377, 1.4107725960867745, 1.3353052479880196, 1.2623280116489954, 1.1922494343348913, 1.1311086927141463, 1.075542654309954, 1.02666061265128, 0.982842104775565, 0.9445906026022775, 0.9112319605691093, 0.880293641771589, 0.8549859183175224, 0.8321901048932757, 0.8119621617453439, 0.7942982571465629, 0.7774416378566197, 0.7625858613422939, 0.7474510329110282, 0.7355856043951852, 0.7241276332310268, 0.7141165222440448, 0.7034746408462524, 0.6941624539239066, 0.685847282409668, 0.6766342435564313, 0.6700704438345773, 0.6641054834638324, 0.6575841222490583, 0.6511650936944144, 0.6448678118841988, 0.6392204080309186, 0.6349706990378243, 0.628684231213161, 0.6239860909325736, 0.6207042932510376, 0.6176089218684605, 0.6125437532152448, 0.6085017238344465, 0.6040288720812116, 0.6010170323508126, 0.5972623484475272, 0.5942803280694144, 0.5916210583278111, 0.588935204914638, 0.5858853714806693, 0.5833373069763184, 0.5811749867030552, 0.578954918043954, 0.5757801192147392, 0.5733858857836042, 0.5706240790230888, 0.5672768184116909, 0.5662657533373151, 0.5644151142665318, 0.5614726373127529, 0.5606606176921299, 0.5574398040771484, 0.5557507957730975, 0.5534886121749878, 0.5526625769478934, 0.5505214248384748, 0.5481379543031965, 0.5468355587550572, 0.5449961423873901, 0.5435645239693778, 0.54186064856393, 0.5406327077320644, 0.5390456574303764, 0.5372313942228045, 0.5355278423854283, 0.5345481974737984, 0.5325277021953038, 0.5313054152897426, 0.5295936720711845, 0.5281262908663068, 0.5269769941057477, 0.5262417622974941, 0.5240101984569004, 0.523025495665414, 0.5227339778627668], "val_accuracy": [0.15933333337306976, 0.28866666555404663, 0.3633333444595337, 0.3959999978542328, 0.42633333802223206, 0.4493333399295807, 0.46799999475479126, 0.4793333411216736, 0.4983333349227905, 0.5246666669845581, 0.5389999747276306, 0.550000011920929, 0.559333324432373, 0.5733333230018616, 0.5770000219345093, 0.5856666564941406, 0.6003333330154419, 0.609666645526886, 0.6209999918937683, 0.6353333592414856, 0.6576666831970215, 0.6646666526794434, 0.6790000200271606, 0.687666654586792, 0.6896666884422302, 0.6936666369438171, 0.6966666579246521, 0.6993333101272583, 0.7016666531562805, 0.7023333311080933, 0.7056666612625122, 0.7076666951179504, 0.7096666693687439, 0.7103333473205566, 0.7113333344459534, 0.7173333168029785, 0.7206666469573975, 0.7250000238418579, 0.7283333539962769, 0.7293333411216736, 0.731333315372467, 0.7296666502952576, 0.7326666712760925, 0.7356666922569275, 0.7356666922569275, 0.7409999966621399, 0.7413333058357239, 0.7413333058357239, 0.7446666955947876, 0.7390000224113464, 0.7483333349227905, 0.7483333349227905, 0.7513333559036255, 0.753000020980835, 0.753333330154419, 0.7556666731834412, 0.7580000162124634, 0.7590000033378601, 0.7606666684150696, 0.7636666893959045, 0.7603333592414856, 0.7636666893959045, 0.762333333492279, 0.765666663646698, 0.7620000243186951, 0.7649999856948853, 0.7609999775886536, 0.765999972820282, 0.768666684627533, 0.7699999809265137, 0.7693333625793457, 0.7696666717529297, 0.7689999938011169, 0.7693333625793457, 0.7713333368301392, 0.7693333625793457, 0.7703333497047424, 0.7739999890327454, 0.7710000276565552, 0.7710000276565552, 0.7726666927337646, 0.7730000019073486, 0.7763333320617676, 0.7756666541099548, 0.7763333320617676, 0.7723333239555359, 0.7746666669845581, 0.7776666879653931, 0.781333327293396, 0.7789999842643738, 0.7806666493415833, 0.7799999713897705, 0.7799999713897705, 0.7786666750907898]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [3, 0, 2, 6, 2, 2, 2, 3, 2, 1, 5, 8, 9, 3, 2, 6, 0, 5, 0, 2], [2, 0, 2, 1, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [98, 55, 35, 73, 95], [0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [1, 5, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 2, 1, 3, 0, 0], [55, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 2, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [95, 25, 50, 71, 34]], "fitness": -0.35285714268684387, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.square(tf.math.add(beta, grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.add(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.2649414774575143, 2.2637271482112182, 2.294704929397658, 2.300901640014185, 2.3049493574463162, 2.3031661909773775, 2.296900306348205, 2.2871426081440123], "accuracy": [0.2075023055076599, 0.1872936189174652, 0.1434420794248581, 0.15731078386306763, 0.09668471664190292, 0.10157178342342377, 0.1162329912185669, 0.14040417969226837], "val_loss": [1.9796996116638184, 1.9933277538844518, 1.578096628189087, 1.9758452687944685, 1.9739743641444616, 1.973416873386928, 1.9186485154288155, 1.9794154848371233], "val_accuracy": [0.10233332961797714, 0.09700000286102295, 0.382666677236557, 0.10400000214576721, 0.09733333438634872, 0.09966666996479034, 0.19233334064483643, 0.0976666659116745]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [0, 2, 6, 0, 2, 8, 8, 3, 8, 6, 5, 8, 9, 3, 2, 6, 0, 5, 0, 2], [1, 2, 2, 1, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [98, 55, 35, 73, 95], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 2, 3, 8, 6, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 2, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [38, 25, 50, 71, 34]], "fitness": -0.16771428287029266, "mapping_values": [1, 13, 13, 8, 5, 0, 7, 7, 3, 4, 1, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(grad))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), alpha))))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(sigma, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.9850908820623765, 2.705307860463255, 2.4043050043461047, 2.3544236304281, 2.341883070071171, 2.341673267043545, 2.3351757822728287], "accuracy": [0.09919429570436478, 0.10249637067317963, 0.10711926966905594, 0.10011887550354004, 0.10460969805717468, 0.09866596013307571, 0.10711926966905594], "val_loss": [2.20752968106951, 1.9912823268345423, 1.9707323483058385, 1.9669836589268275, 1.9678867203848702, 1.9692611013139998, 1.9711173602512904], "val_accuracy": [0.14366666972637177, 0.14666666090488434, 0.13366666436195374, 0.1326666623353958, 0.1379999965429306, 0.12666666507720947, 0.12600000202655792]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [3, 0, 2, 5, 2, 2, 2, 3, 2, 1, 5, 8, 9, 3, 2, 6, 0, 5, 0, 2], [1, 0, 2, 1, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [22, 55, 35, 73, 95], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 0, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 2, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [38, 25, 50, 71, 34]], "fitness": -0.16771428287029266, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))))), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(sigma, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.9850908820623765, 2.705307860463255, 2.4043050043461047, 2.3544236304281, 2.341883070071171, 2.341673267043545, 2.3351757822728287], "accuracy": [0.09919429570436478, 0.10249637067317963, 0.10711926966905594, 0.10011887550354004, 0.10460969805717468, 0.09866596013307571, 0.10711926966905594], "val_loss": [2.20752968106951, 1.9912823268345423, 1.9707323483058385, 1.9669836589268275, 1.9678867203848702, 1.9692611013139998, 1.9711173602512904], "val_accuracy": [0.14366666972637177, 0.14666666090488434, 0.13366666436195374, 0.1326666623353958, 0.1379999965429306, 0.12666666507720947, 0.12600000202655792]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [3, 2, 8, 0, 2, 2, 2, 3, 2, 1, 5, 8, 9, 3, 2, 6, 0, 5, 0, 2], [2, 2, 2, 1, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [98, 55, 35, 73, 95], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 9, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 2, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [38, 25, 50, 71, 34]], "fitness": -0.16771428287029266, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(sigma, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.9850908820623765, 2.705307860463255, 2.4043050043461047, 2.3544236304281, 2.341883070071171, 2.341673267043545, 2.3351757822728287], "accuracy": [0.09919429570436478, 0.10249637067317963, 0.10711926966905594, 0.10011887550354004, 0.10460969805717468, 0.09866596013307571, 0.10711926966905594], "val_loss": [2.20752968106951, 1.9912823268345423, 1.9707323483058385, 1.9669836589268275, 1.9678867203848702, 1.9692611013139998, 1.9711173602512904], "val_accuracy": [0.14366666972637177, 0.14666666090488434, 0.13366666436195374, 0.1326666623353958, 0.1379999965429306, 0.12666666507720947, 0.12600000202655792]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [3, 0, 2, 6, 2, 2, 2, 3, 2, 1, 5, 8, 9, 3, 2, 6, 0, 5, 0, 2], [2, 2, 2, 2, 1, 0, 2, 2, 0, 0, 0, 3, 2, 2], [98, 55, 35, 73, 95], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 9, 9, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 0, 2, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 2, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [38, 25, 50, 71, 34]], "fitness": -0.14257143437862396, "mapping_values": [1, 24, 24, 14, 10, 4, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.negative(tf.math.add(grad, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), grad)), tf.math.add(alpha, grad)), tf.math.add(alpha, alpha))), tf.math.subtract(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))))))), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))))), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.2668679861454932, 3.2113170839807754, 2.4013133231974106, 2.3110333828327128, 2.321946581577376, 2.3043394454041053, 2.302470109466202, 2.275831628233104, 2.3037908271539638, 2.3035473158141926, 2.3028766081364966, 2.303033285767033], "accuracy": [0.21080438792705536, 0.19574692845344543, 0.18134988844394684, 0.10685510188341141, 0.11795007437467575, 0.09615638852119446, 0.10513802617788315, 0.16180160641670227, 0.09945846349000931, 0.09245806187391281, 0.10170386731624603, 0.09919429570436478], "val_loss": [1.9808838708060128, 1.975860663822719, 1.9879175594874792, 1.9490256990705217, 1.9746296746390206, 1.9740092413766044, 1.969956942967006, 1.9752708843776159, 1.9739243643624442, 1.9736449377877372, 1.9737484795706612, 1.973733629499163], "val_accuracy": [0.10233332961797714, 0.10300000011920929, 0.09833333641290665, 0.13733333349227905, 0.10400000214576721, 0.10400000214576721, 0.1783333271741867, 0.09733333438634872, 0.09733333438634872, 0.10400000214576721, 0.09733333438634872, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [3, 0, 2, 6, 2, 2, 2, 3, 2, 1, 5, 8, 9, 3, 2, 6, 0, 5, 0, 2], [3, 0, 2, 1, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [22, 55, 35, 73, 95], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 1, 8, 8, 9, 9, 9, 1, 4, 9, 8, 1, 1, 8, 9, 0], [5, 4, 2, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 2, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [91, 25, 50, 71, 34]], "fitness": -0.14257143437862396, "mapping_values": [1, 4, 4, 2, 2, 1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.add(grad, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.2668679861454932, 3.2113170839807754, 2.4013133231974106, 2.3110333828327128, 2.321946581577376, 2.3043394454041053, 2.302470109466202, 2.275831628233104, 2.3037908271539638, 2.3035473158141926, 2.3028766081364966, 2.303033285767033], "accuracy": [0.21080438792705536, 0.19574692845344543, 0.18134988844394684, 0.10685510188341141, 0.11795007437467575, 0.09615638852119446, 0.10513802617788315, 0.16180160641670227, 0.09945846349000931, 0.09245806187391281, 0.10170386731624603, 0.09919429570436478], "val_loss": [1.9808838708060128, 1.975860663822719, 1.9879175594874792, 1.9490256990705217, 1.9746296746390206, 1.9740092413766044, 1.969956942967006, 1.9752708843776159, 1.9739243643624442, 1.9736449377877372, 1.9737484795706612, 1.973733629499163], "val_accuracy": [0.10233332961797714, 0.10300000011920929, 0.09833333641290665, 0.13733333349227905, 0.10400000214576721, 0.10400000214576721, 0.1783333271741867, 0.09733333438634872, 0.09733333438634872, 0.10400000214576721, 0.09733333438634872, 0.10400000214576721]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [6, 2, 6, 0, 2, 8, 8, 3, 8, 6, 5, 8, 9, 3, 2, 6, 0, 5, 0, 2], [1, 0, 2, 1, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [22, 55, 35, 73, 95], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [8, 2, 3, 8, 8, 3, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1], [0, 3, 2, 9, 2, 9], [0, 3, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [38, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 7, 3, 2, 1, 1, 0, 1, 0, 8, 5, 3, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(grad, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))))))))), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.add(sigma, beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [6, 2, 8, 0, 2, 2, 2, 3, 2, 1, 5, 8, 9, 3, 2, 6, 0, 5, 0, 2], [1, 2, 2, 1, 2, 3, 2, 2, 0, 0, 0, 3, 2, 2], [54, 55, 35, 73, 95], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [1, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 0, 3, 0, 2, 1, 3, 0, 0], [81, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1], [0, 9, 2, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [38, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 21, 13, 8, 1, 8, 8, 4, 4, 1, 1, 1, 0, 1, 0, 2, 2, 0, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))), tf.math.negative(grad)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))))), tf.math.add(tf.math.add(alpha, grad), tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(grad, grad)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [888756.9500217853, 16911891.777572315, 78967480.43640207, 221838283.2936204, 465471265.1200634, 867436216.1975961], "accuracy": [0.09787346422672272, 0.09813763201236725, 0.0956280529499054, 0.09430722147226334, 0.10210011899471283, 0.09906221181154251], "val_loss": [3378683.714285714, 26935532.57142857, 90804025.14285715, 215117188.57142857, 420008685.71428573, 725614025.1428572], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [3, 2, 8, 0, 2, 2, 2, 3, 2, 1, 5, 8, 9, 3, 2, 6, 0, 5, 0, 2], [1, 2, 2, 1, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [98, 55, 35, 73, 95], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [1, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [2, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 2, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [38, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 21, 13, 8, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.sqrt(alpha)), tf.math.negative(grad)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), grad)))), tf.math.multiply(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, grad), tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.add(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.619652543605169, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.03077532723546028, 0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [27.09717995779855, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [6, 2, 6, 0, 2, 8, 8, 3, 8, 6, 5, 8, 9, 3, 2, 6, 0, 5, 0, 2], [3, 2, 2, 1, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [22, 55, 35, 73, 95], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [8, 3, 7, 1, 2, 9], [1, 3, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [38, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 10, 6, 4, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, sigma), tf.math.subtract(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [6, 2, 6, 0, 2, 8, 8, 3, 8, 6, 5, 8, 9, 3, 2, 6, 0, 5, 0, 2], [1, 1, 2, 1, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [98, 55, 35, 73, 95], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [1, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 3, 1, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [3, 3, 2, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [38, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 7, 5, 0, 8, 8, 4, 4, 0, 3, 1, 1, 0, 0, 5, 2, 3, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.negative(alpha)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha)))))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(beta, beta), grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, alpha))), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(sigma, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [3, 2, 8, 0, 2, 2, 2, 3, 2, 1, 5, 8, 9, 3, 2, 6, 0, 5, 0, 2], [1, 1, 2, 1, 0, 0, 2, 2, 0, 0, 0, 3, 2, 2], [98, 55, 35, 73, 95], [0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [1, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 1, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 2, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [38, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.sqrt(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(grad, grad), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08334434032440186, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [6, 2, 6, 1, 2, 8, 8, 3, 8, 6, 5, 8, 9, 3, 2, 6, 0, 5, 0, 2], [1, 2, 2, 1, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [98, 55, 35, 73, 95], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 2, 2, 8, 9, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 4, 3, 2, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 2, 9, 2, 9], [1, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [48, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 6, 6, 1, 8, 8, 5, 3, 1, 1, 1, 0, 1, 0, 8, 6, 2, 3], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.subtract(grad, tf.math.add(alpha, tf.math.add(tf.math.sqrt(grad), tf.math.add(alpha, alpha))))), tf.math.add(alpha, grad)), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), alpha), tf.math.add(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [6, 2, 6, 0, 5, 8, 5, 3, 8, 6, 5, 8, 9, 3, 2, 6, 0, 5, 0, 2], [2, 2, 2, 0, 0, 0, 2, 2, 0, 0, 0, 3, 2, 2], [98, 55, 35, 73, 95], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [1, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 0, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [0, 3, 2, 9, 2, 9], [2, 3, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [38, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 8, 5, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 3, 3, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.negative(grad))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.math.add(sigma, beta)))", "other_info": {"loss": [2.3044998343468595, 2.3085947570831014, 2.312563216193414, 2.3225801480114026, 2.3330806007695126, 2.6004976721141224, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08981640636920929, 0.08453308790922165, 0.08453308790922165, 0.07357019931077957, 0.07396645098924637, 0.08519349992275238, 0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9731058393205916, 1.9772117478506905, 1.9821280070713587, 1.9893468448093958, 2.0059082167489186, 120590.69196428571, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.029999999329447746, 0.0273333340883255, 0.03999999910593033, 0.07766667008399963, 0.09666666388511658, 0.10000000149011612, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [3, 0, 2, 6, 2, 2, 2, 3, 2, 1, 5, 8, 9, 3, 2, 6, 0, 5, 0, 2], [1, 0, 2, 1, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [98, 74, 35, 73, 95], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 0, 0, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 2, 9, 2, 9], [0, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [38, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 7, 7, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 4, 2, 3], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), grad)))), tf.math.add(alpha, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [163134.21925043126, 3088252.457139083, 14399340.479725268, 40426353.245806366, 84795210.68075551, 157986744.75551447], "accuracy": [0.09800554811954498, 0.09813763201236725, 0.0956280529499054, 0.09430722147226334, 0.10210011899471283, 0.09906221181154251], "val_loss": [618168.4642857143, 4914103.571428572, 16551205.714285715, 39192924.571428575, 76502669.71428572, 132143744.0], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [3, 2, 8, 0, 2, 2, 2, 3, 2, 1, 5, 8, 9, 3, 2, 6, 0, 5, 0, 2], [1, 1, 2, 1, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [98, 55, 35, 73, 95], [1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [1, 2, 2, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 2, 9, 2, 9], [3, 3, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [38, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(grad)), tf.math.sqrt(tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.303272261327961, 2.3029249482828122, 2.3022814109073164, 2.3027780152992126, 2.3014161957410884, 2.3028645184786094], "accuracy": [0.09206181764602661, 0.09060890227556229, 0.09206181764602661, 0.09179764986038208, 0.09206181764602661, 0.08638224750757217], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]