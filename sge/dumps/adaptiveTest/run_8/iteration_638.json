[{"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [6, 8, 1, 0, 5, 2, 1, 8, 0, 4, 9, 2, 9, 3, 6, 6, 9, 5, 0, 2, 8, 2, 0, 2, 8, 4], [2, 0, 2, 2, 2, 2, 1, 0, 2, 0, 0, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 41, 35, 44, 70, 79, 53, 52, 44], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 4, 3, 8, 4, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 3, 0, 0, 2, 1, 3, 0, 0], [95, 33, 93, 84, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [35, 25, 50, 71, 34]], "fitness": -0.7905714511871338, "mapping_values": [1, 10, 10, 6, 4, 1, 12, 12, 7, 5, 4, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.square(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(tf.math.add(alpha, grad), grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2568107289629307, 2.062210421867028, 1.6316371918700832, 1.2764058236542977, 1.1005115210655705, 0.9928611157639876, 0.9367440792752484, 0.8940426629012554, 0.8602752100443559, 0.832161196667552, 0.7959004747806177, 0.7824902801686243, 0.7727142047447504, 0.7466596754125364, 0.7445005612791553, 0.7251471556283228, 0.708454919237707, 0.7057705301618721, 0.6895151900624744, 0.6990794850346781, 0.6823841787647372, 0.6714943346566591, 0.6659079750357932, 0.6718163690893264, 0.6521741289661671, 0.6471027382974848, 0.6428744506448598, 0.6304820332592033, 0.6432206365237414, 0.6231753587832997, 0.6161920190518795, 0.6234422636432041, 0.6193693852097115, 0.6011588551648273, 0.6014946907298157, 0.6053446671115944, 0.6023725725089428], "accuracy": [0.20182274281978607, 0.3863426148891449, 0.48368775844573975, 0.5663716793060303, 0.6161669492721558, 0.6499801874160767, 0.6609430909156799, 0.6775855422019958, 0.6890767216682434, 0.698718786239624, 0.7120591998100281, 0.7137762308120728, 0.7226257920265198, 0.7277770638465881, 0.7257958054542542, 0.7378153204917908, 0.7411174178123474, 0.7345132827758789, 0.7469290494918823, 0.7428345084190369, 0.7475894689559937, 0.7556465268135071, 0.7539294958114624, 0.7535332441329956, 0.7582882046699524, 0.7605336308479309, 0.7633073329925537, 0.769911527633667, 0.7703077793121338, 0.7745344042778015, 0.7677981853485107, 0.7711002230644226, 0.772288978099823, 0.774798572063446, 0.7716285586357117, 0.7733456492424011, 0.7774402499198914], "val_loss": [1.8527699879237585, 1.515852689743042, 1.0497281210763114, 0.8421497004372733, 0.731607334954398, 0.6866940430232457, 0.6343297958374023, 0.6098147630691528, 0.5954728978020805, 0.5733736753463745, 0.5648926837103707, 0.5494942665100098, 0.5415664059775216, 0.5443105357033866, 0.5237607104437692, 0.5155116319656372, 0.5063373020717076, 0.500841634614127, 0.5105222804205758, 0.5048150505338397, 0.4983197110039847, 0.5092755726405552, 0.4877875702721732, 0.49801407541547504, 0.476067270551409, 0.490716814994812, 0.4712214469909668, 0.46945416927337646, 0.46911067622048513, 0.4651745387486049, 0.5214728798185077, 0.45937739099775043, 0.46969408648354666, 0.4517509341239929, 0.46293445995875765, 0.4486199276787894, 0.44777125120162964], "val_accuracy": [0.4566666781902313, 0.5446666479110718, 0.6603333353996277, 0.6836666464805603, 0.6956666707992554, 0.7129999995231628, 0.734666645526886, 0.7333333492279053, 0.7319999933242798, 0.7639999985694885, 0.762333333492279, 0.7570000290870667, 0.7693333625793457, 0.7459999918937683, 0.7796666622161865, 0.7806666493415833, 0.781333327293396, 0.7900000214576721, 0.7680000066757202, 0.7693333625793457, 0.7833333611488342, 0.7673333287239075, 0.7943333387374878, 0.7753333449363708, 0.800000011920929, 0.7906666398048401, 0.7889999747276306, 0.7976666688919067, 0.8016666769981384, 0.8009999990463257, 0.7580000162124634, 0.815666675567627, 0.8033333420753479, 0.8050000071525574, 0.7983333468437195, 0.8149999976158142, 0.812333345413208]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [6, 8, 1, 0, 5, 2, 1, 8, 0, 4, 9, 2, 9, 3, 6, 6, 9, 5, 0, 2, 8, 2, 0, 2, 8, 4], [2, 0, 2, 2, 2, 2, 1, 0, 2, 0, 0, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 41, 35, 44, 70, 79, 53, 52, 44], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [8, 4, 3, 2, 4, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 3, 0, 0, 2, 1, 3, 0, 0], [95, 17, 23, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [35, 25, 50, 71, 34]], "fitness": -0.7905714511871338, "mapping_values": [1, 7, 7, 4, 3, 1, 10, 10, 5, 5, 3, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))))))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2568107289629307, 2.062210421867028, 1.6316371918700832, 1.2764058236542977, 1.1005115210655705, 0.9928611157639876, 0.9367440792752484, 0.8940426629012554, 0.8602752100443559, 0.832161196667552, 0.7959004747806177, 0.7824902801686243, 0.7727142047447504, 0.7466596754125364, 0.7445005612791553, 0.7251471556283228, 0.708454919237707, 0.7057705301618721, 0.6895151900624744, 0.6990794850346781, 0.6823841787647372, 0.6714943346566591, 0.6659079750357932, 0.6718163690893264, 0.6521741289661671, 0.6471027382974848, 0.6428744506448598, 0.6304820332592033, 0.6432206365237414, 0.6231753587832997, 0.6161920190518795, 0.6234422636432041, 0.6193693852097115, 0.6011588551648273, 0.6014946907298157, 0.6053446671115944, 0.6023725725089428], "accuracy": [0.20182274281978607, 0.3863426148891449, 0.48368775844573975, 0.5663716793060303, 0.6161669492721558, 0.6499801874160767, 0.6609430909156799, 0.6775855422019958, 0.6890767216682434, 0.698718786239624, 0.7120591998100281, 0.7137762308120728, 0.7226257920265198, 0.7277770638465881, 0.7257958054542542, 0.7378153204917908, 0.7411174178123474, 0.7345132827758789, 0.7469290494918823, 0.7428345084190369, 0.7475894689559937, 0.7556465268135071, 0.7539294958114624, 0.7535332441329956, 0.7582882046699524, 0.7605336308479309, 0.7633073329925537, 0.769911527633667, 0.7703077793121338, 0.7745344042778015, 0.7677981853485107, 0.7711002230644226, 0.772288978099823, 0.774798572063446, 0.7716285586357117, 0.7733456492424011, 0.7774402499198914], "val_loss": [1.8527699879237585, 1.515852689743042, 1.0497281210763114, 0.8421497004372733, 0.731607334954398, 0.6866940430232457, 0.6343297958374023, 0.6098147630691528, 0.5954728978020805, 0.5733736753463745, 0.5648926837103707, 0.5494942665100098, 0.5415664059775216, 0.5443105357033866, 0.5237607104437692, 0.5155116319656372, 0.5063373020717076, 0.500841634614127, 0.5105222804205758, 0.5048150505338397, 0.4983197110039847, 0.5092755726405552, 0.4877875702721732, 0.49801407541547504, 0.476067270551409, 0.490716814994812, 0.4712214469909668, 0.46945416927337646, 0.46911067622048513, 0.4651745387486049, 0.5214728798185077, 0.45937739099775043, 0.46969408648354666, 0.4517509341239929, 0.46293445995875765, 0.4486199276787894, 0.44777125120162964], "val_accuracy": [0.4566666781902313, 0.5446666479110718, 0.6603333353996277, 0.6836666464805603, 0.6956666707992554, 0.7129999995231628, 0.734666645526886, 0.7333333492279053, 0.7319999933242798, 0.7639999985694885, 0.762333333492279, 0.7570000290870667, 0.7693333625793457, 0.7459999918937683, 0.7796666622161865, 0.7806666493415833, 0.781333327293396, 0.7900000214576721, 0.7680000066757202, 0.7693333625793457, 0.7833333611488342, 0.7673333287239075, 0.7943333387374878, 0.7753333449363708, 0.800000011920929, 0.7906666398048401, 0.7889999747276306, 0.7976666688919067, 0.8016666769981384, 0.8009999990463257, 0.7580000162124634, 0.815666675567627, 0.8033333420753479, 0.8050000071525574, 0.7983333468437195, 0.8149999976158142, 0.812333345413208]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [9, 2, 2, 5, 5, 3, 2, 6, 6, 1, 5, 2, 9, 3, 2, 6, 9, 5, 2, 2, 8, 2, 6, 9, 2, 1, 1, 4, 6, 3, 9, 9, 4], [2, 0, 2, 2, 2, 2, 1, 0, 2, 0, 0, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 41, 35, 44, 70, 79, 53, 52, 44], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [9, 4, 3, 2, 4, 4, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 0, 0, 2, 1, 3, 0, 0], [64, 17, 14, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [93, 25, 50, 71, 34]], "fitness": -0.41028571128845215, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [4.0914604447190595, 2.3077100310201546, 2.304004915354825, 2.3031699296552994, 2.3028892371727254, 2.302011728381216, 2.275195727337621, 2.3042161718823766, 2.3037035295188923, 2.3033295832195493, 2.3030765785312513, 2.3032713495052217], "accuracy": [0.1814819723367691, 0.09879804402589798, 0.10276053100824356, 0.09589222073554993, 0.10249637067317963, 0.10276053100824356, 0.18042530119419098, 0.14555540680885315, 0.09509972482919693, 0.09126931428909302, 0.09509972482919693, 0.0936468094587326], "val_loss": [1.9800453867231096, 1.974074023110526, 1.9736595835004533, 1.97379698072161, 1.973090308053153, 1.9706530570983887, 1.7338546344212122, 1.974510329110282, 1.9738738877432687, 1.9736412593296595, 1.9737168039594377, 1.9737202099391393], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09700000286102295, 0.14166666567325592, 0.3723333477973938, 0.09833333641290665, 0.09833333641290665, 0.09966666996479034, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 4, 2, 2, 5, 3, 2, 9, 6, 8, 5, 2, 9, 3, 1, 6, 9, 5, 2, 2, 3, 2, 6, 9, 2, 1, 1, 4, 2, 3, 9, 9, 4], [2, 0, 2, 2, 2, 2, 1, 0, 2, 0, 1, 0, 0, 1, 2, 1, 2, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [34, 93, 35, 73, 70, 79, 52, 1, 71, 53, 21, 6], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [4, 8, 4, 5, 8, 2, 9, 0, 5, 2, 2, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 0, 0, 2, 1, 3, 0, 0], [95, 33, 93, 84, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [35, 25, 50, 71, 34]], "fitness": -0.41028571128845215, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [4.0914604447190595, 2.3077100310201546, 2.304004915354825, 2.3031699296552994, 2.3028892371727254, 2.302011728381216, 2.275195727337621, 2.3042161718823766, 2.3037035295188923, 2.3033295832195493, 2.3030765785312513, 2.3032713495052217], "accuracy": [0.1814819723367691, 0.09879804402589798, 0.10276053100824356, 0.09589222073554993, 0.10249637067317963, 0.10276053100824356, 0.18042530119419098, 0.14555540680885315, 0.09509972482919693, 0.09126931428909302, 0.09509972482919693, 0.0936468094587326], "val_loss": [1.9800453867231096, 1.974074023110526, 1.9736595835004533, 1.97379698072161, 1.973090308053153, 1.9706530570983887, 1.7338546344212122, 1.974510329110282, 1.9738738877432687, 1.9736412593296595, 1.9737168039594377, 1.9737202099391393], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09700000286102295, 0.14166666567325592, 0.3723333477973938, 0.09833333641290665, 0.09833333641290665, 0.09966666996479034, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [9, 2, 2, 5, 5, 3, 2, 6, 6, 1, 5, 2, 9, 3, 2, 6, 9, 5, 2, 2, 8, 2, 6, 9, 2, 1, 1, 4, 6, 3, 9, 9, 4], [2, 0, 2, 2, 2, 2, 1, 0, 2, 0, 0, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [86, 41, 35, 44, 70, 79, 53, 52, 44], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 4, 2, 8, 4, 2, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 3, 0, 0, 2, 1, 3, 0, 0], [95, 17, 14, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [51, 25, 50, 71, 34]], "fitness": -0.41028571128845215, "mapping_values": [1, 1, 1, 1, 0, 1, 12, 12, 6, 6, 3, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))))), grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [4.0914604447190595, 2.3077100310201546, 2.304004915354825, 2.3031699296552994, 2.3028892371727254, 2.302011728381216, 2.275195727337621, 2.3042161718823766, 2.3037035295188923, 2.3033295832195493, 2.3030765785312513, 2.3032713495052217], "accuracy": [0.1814819723367691, 0.09879804402589798, 0.10276053100824356, 0.09589222073554993, 0.10249637067317963, 0.10276053100824356, 0.18042530119419098, 0.14555540680885315, 0.09509972482919693, 0.09126931428909302, 0.09509972482919693, 0.0936468094587326], "val_loss": [1.9800453867231096, 1.974074023110526, 1.9736595835004533, 1.97379698072161, 1.973090308053153, 1.9706530570983887, 1.7338546344212122, 1.974510329110282, 1.9738738877432687, 1.9736412593296595, 1.9737168039594377, 1.9737202099391393], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09700000286102295, 0.14166666567325592, 0.3723333477973938, 0.09833333641290665, 0.09833333641290665, 0.09966666996479034, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 4, 2, 2, 5, 3, 2, 9, 6, 8, 5, 2, 9, 3, 1, 6, 9, 5, 2, 2, 3, 2, 6, 9, 2, 1, 1, 4, 2, 3, 9, 9, 4], [0, 0, 1, 2, 2, 2, 1, 0, 2, 0, 0, 0, 2, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [34, 93, 35, 73, 70, 79, 52, 1, 71, 53, 21, 6], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [4, 8, 4, 5, 8, 2, 9, 0, 5, 2, 2, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 2, 2, 1, 3, 0, 0], [95, 33, 93, 84, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 2, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [35, 25, 50, 71, 34]], "fitness": -0.41028571128845215, "mapping_values": [1, 1, 1, 0, 1, 1, 10, 10, 7, 3, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))), tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [4.0914604447190595, 2.3077100310201546, 2.304004915354825, 2.3031699296552994, 2.3028892371727254, 2.302011728381216, 2.275195727337621, 2.3042161718823766, 2.3037035295188923, 2.3033295832195493, 2.3030765785312513, 2.3032713495052217], "accuracy": [0.1814819723367691, 0.09879804402589798, 0.10276053100824356, 0.09589222073554993, 0.10249637067317963, 0.10276053100824356, 0.18042530119419098, 0.14555540680885315, 0.09509972482919693, 0.09126931428909302, 0.09509972482919693, 0.0936468094587326], "val_loss": [1.9800453867231096, 1.974074023110526, 1.9736595835004533, 1.97379698072161, 1.973090308053153, 1.9706530570983887, 1.7338546344212122, 1.974510329110282, 1.9738738877432687, 1.9736412593296595, 1.9737168039594377, 1.9737202099391393], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09700000286102295, 0.14166666567325592, 0.3723333477973938, 0.09833333641290665, 0.09833333641290665, 0.09966666996479034, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 4, 2, 2, 5, 3, 2, 9, 6, 8, 5, 2, 9, 3, 1, 6, 9, 5, 2, 2, 3, 2, 6, 9, 2, 1, 1, 4, 2, 3, 9, 9, 4], [2, 0, 2, 2, 2, 2, 1, 0, 2, 0, 1, 0, 0, 1, 2, 1, 2, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [34, 93, 35, 73, 70, 79, 52, 1, 71, 53, 21, 6], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [4, 8, 4, 5, 8, 2, 9, 0, 5, 2, 2, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 0, 0, 2, 1, 3, 0, 0], [95, 33, 93, 84, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [35, 25, 50, 71, 34]], "fitness": -0.41028571128845215, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [4.0914604447190595, 2.3077100310201546, 2.304004915354825, 2.3031699296552994, 2.3028892371727254, 2.302011728381216, 2.275195727337621, 2.3042161718823766, 2.3037035295188923, 2.3033295832195493, 2.3030765785312513, 2.3032713495052217], "accuracy": [0.1814819723367691, 0.09879804402589798, 0.10276053100824356, 0.09589222073554993, 0.10249637067317963, 0.10276053100824356, 0.18042530119419098, 0.14555540680885315, 0.09509972482919693, 0.09126931428909302, 0.09509972482919693, 0.0936468094587326], "val_loss": [1.9800453867231096, 1.974074023110526, 1.9736595835004533, 1.97379698072161, 1.973090308053153, 1.9706530570983887, 1.7338546344212122, 1.974510329110282, 1.9738738877432687, 1.9736412593296595, 1.9737168039594377, 1.9737202099391393], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09700000286102295, 0.14166666567325592, 0.3723333477973938, 0.09833333641290665, 0.09833333641290665, 0.09966666996479034, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [9, 2, 2, 5, 5, 3, 2, 6, 6, 1, 5, 2, 9, 3, 2, 6, 9, 5, 2, 2, 8, 2, 6, 9, 2, 1, 1, 4, 6, 3, 9, 9, 4], [2, 0, 2, 2, 2, 2, 1, 0, 2, 0, 0, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [61, 41, 35, 44, 70, 79, 53, 52, 44], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 3, 2, 1, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 0, 3, 0, 3, 2, 1, 3, 0, 0], [95, 33, 88, 84, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [93, 25, 50, 71, 34]], "fitness": -0.2882857024669647, "mapping_values": [1, 1, 1, 1, 0, 1, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(alpha, tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [4.095653266104347, 2.307797578819959, 2.3038268510644397, 2.303159111069808, 2.302657400470573, 2.300820969603144, 2.2221946727960273, 2.3793327651239893, 2.3034048783009187, 2.3029307463795456, 2.3023428490542623, 2.299408056575073], "accuracy": [0.1822744756937027, 0.09694888442754745, 0.10315678268671036, 0.09708096832036972, 0.10130762308835983, 0.11676132678985596, 0.21938978135585785, 0.11993131786584854, 0.09972262382507324, 0.09457138925790787, 0.1002509593963623, 0.1154404953122139], "val_loss": [1.98004606791905, 1.974118709564209, 1.9736949375697546, 1.9735828808375768, 1.972743374960763, 1.9678260258265905, 2.1927835600716725, 1.9739249774387904, 1.973545960017613, 1.9732223919459753, 1.9726052965436662, 1.9549830300467355], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.0989999994635582, 0.24266666173934937, 0.29100000858306885, 0.10366666316986084, 0.10400000214576721, 0.10400000214576721, 0.09833333641290665, 0.09733333438634872]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1], [9, 2, 2, 5, 5, 3, 2, 6, 6, 1, 5, 2, 9, 3, 2, 6, 9, 5, 2, 2, 8, 2, 6, 9, 2, 1, 1, 4, 6, 3, 9, 9, 4], [1, 2, 2, 2, 2, 2, 1, 0, 2, 0, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [8, 93, 35, 73, 70, 79, 52, 1, 71, 53, 34], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 8, 3, 1, 4, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 3, 0, 0, 2, 1, 3, 0, 0], [69, 33, 93, 15, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [1, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [4, 25, 50, 71, 34]], "fitness": -0.10314285755157471, "mapping_values": [1, 1, 1, 1, 0, 1, 12, 12, 6, 6, 3, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3016408030162667, 2.302577158589452, 2.303393201175509, 2.3024631556487116, 2.3008586668524176, 2.3010618007414534, 2.301629537163693, 2.3010271137826055, 2.3024595907382865, 2.3018542006188665, 2.3006539701580953, 2.3004233183059015, 2.3003377285552866, 2.301563829022187, 2.300530214918099, 2.300845480865853, 2.3000493686685095, 2.300171391649993, 2.3009028376180103, 2.3013565328379095, 2.3006202142944963, 2.301194761753901, 2.3010982845154233, 2.3018381412648696, 2.3016681064625364, 2.3019574865641736], "accuracy": [0.09879804402589798, 0.09140139818191528, 0.09325055778026581, 0.09272222965955734, 0.08955223858356476, 0.09140139818191528, 0.09113723784685135, 0.09232597798109055, 0.09206181764602661, 0.08836349099874496, 0.09747721254825592, 0.09602430462837219, 0.09840179979801178, 0.08677849918603897, 0.09430722147226334, 0.09813763201236725, 0.1002509593963623, 0.09866596013307571, 0.10051512718200684, 0.0952318087220192, 0.09774138033390045, 0.09906221181154251, 0.10685510188341141, 0.09787346422672272, 0.1026284471154213, 0.09034473448991776], "val_loss": [1.9705790792192732, 1.9705497877938407, 1.970503670828683, 1.9704397746494837, 1.9703615733555384, 1.9702670233590263, 1.9701730864388602, 1.970092841557094, 1.9700172969273158, 1.9699803761073522, 1.9699716567993164, 1.97000367300851, 1.970094817025321, 1.9702258791242326, 1.9704083715166365, 1.970646926334926, 1.9709345272609167, 1.9712645666939872, 1.9716267585754395, 1.9719774382455009, 1.972275733947754, 1.972536291394915, 1.972766535622733, 1.9729440552847726, 1.9730862889971053, 1.973222119467599], "val_accuracy": [0.03933333232998848, 0.039000000804662704, 0.03966666758060455, 0.0416666679084301, 0.044333335012197495, 0.046666666865348816, 0.04833333194255829, 0.052666667848825455, 0.05533333495259285, 0.060333333909511566, 0.06300000101327896, 0.06466666609048843, 0.07400000095367432, 0.08166666328907013, 0.08733333647251129, 0.08933333307504654, 0.09566666930913925, 0.09866666793823242, 0.10166666656732559, 0.10133333504199982, 0.10333333164453506, 0.1003333330154419, 0.0976666659116745, 0.09266666322946548, 0.09300000220537186, 0.09666666388511658]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [9, 2, 2, 5, 5, 3, 2, 6, 6, 1, 5, 2, 9, 3, 2, 6, 9, 5, 2, 2, 8, 2, 6, 9, 2, 1, 1, 4, 6, 3, 9, 9, 4], [2, 0, 2, 2, 2, 2, 1, 0, 2, 0, 0, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 41, 35, 44, 70, 79, 53, 52, 44], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [8, 4, 3, 2, 4, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 3, 0, 0, 3, 1, 3, 0, 0], [59, 14, 14, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 0, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [93, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 6, 6, 3, 1, 1, 0, 1, 0, 3, 2, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.add(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))))), tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07806102186441422, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 8, 1, 4, 5, 0, 1, 8, 0, 4, 9, 2, 9, 3, 6, 6, 9, 5, 0, 2, 8, 2, 0, 2, 8, 4], [2, 0, 2, 2, 2, 2, 1, 0, 2, 0, 0, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 41, 35, 44, 70, 79, 53, 52, 44], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 4, 3, 8, 4, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 3, 0, 0, 2, 1, 3, 0, 0], [95, 33, 93, 84, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [1, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [51, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 0, 8, 8, 4, 4, 2, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, grad), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.square(beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [9, 2, 2, 5, 5, 3, 2, 6, 6, 1, 5, 2, 9, 3, 2, 6, 9, 5, 2, 2, 8, 2, 6, 9, 2, 1, 1, 4, 6, 3, 9, 9, 4], [2, 0, 2, 2, 2, 2, 1, 0, 2, 0, 0, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 41, 35, 44, 70, 79, 53, 52, 44], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 0, 3, 8, 2, 9, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 3, 0, 0, 2, 1, 3, 0, 0], [95, 33, 93, 84, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [1, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [66, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.negative(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.sqrt(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302958275773947, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 4, 2, 2, 5, 6, 2, 1, 6, 8, 5, 2, 9, 3, 2, 6, 9, 5, 4, 2, 8, 2, 6, 9, 2, 1, 1, 4, 6, 3, 9, 9, 4], [2, 0, 2, 1, 2, 2, 1, 1, 2, 0, 2, 0, 2, 1, 2, 1, 2, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [34, 22, 35, 73, 70, 79, 52, 1, 71, 53, 21, 6], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [4, 8, 4, 5, 8, 2, 9, 0, 5, 2, 2, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 0, 0, 2, 1, 3, 0, 0], [95, 33, 93, 84, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [0, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [51, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 31, 31, 19, 12, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.divide_no_nan(grad, grad)))), alpha)))), tf.math.sqrt(tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(tf.math.divide_no_nan(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(grad))), tf.math.add(alpha, tf.math.pow(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))))), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [230262914.82095176, 4553820661.382645, 21136773169.773083, 58316863538.5846, 124448496215.17052, 227885406683.81982], "accuracy": [0.09813763201236725, 0.09747721254825592, 0.09800554811954498, 0.09840179979801178, 0.10328886657953262, 0.09959053993225098], "val_loss": [900104576.0, 7197044004.571428, 24285920694.857143, 57561503451.42857, 112421203382.85715, 194256811739.42856], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1], [6, 1, 1, 0, 5, 2, 1, 8, 0, 4, 9, 2, 9, 3, 6, 6, 9, 5, 0, 2, 8, 2, 0, 2, 8, 4], [1, 2, 2, 2, 2, 2, 1, 0, 2, 0, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 41, 35, 44, 70, 79, 53, 52, 44], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 8, 3, 1, 4, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 0, 0, 2, 1, 3, 0, 0], [95, 33, 93, 84, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [2, 3], [], [1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [1, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [51, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 13, 6, 2, 12, 12, 8, 4, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.add(alpha, grad)), grad))))))), tf.math.negative(grad)), tf.math.pow(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), grad)))), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 2, 2, 5, 5, 3, 2, 6, 6, 1, 5, 2, 9, 3, 2, 6, 9, 5, 2, 2, 8, 2, 6, 9, 2, 1, 1, 4, 6, 3, 9, 9, 4], [2, 0, 2, 2, 2, 2, 1, 0, 2, 0, 0, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 41, 35, 44, 70, 79, 53, 52, 44, 27, 38, 32], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [8, 4, 3, 2, 5, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 3, 0, 0, 2, 1, 3, 0, 0], [95, 65, 14, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [1, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [35, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 52, 52, 33, 19, 12, 11, 11, 8, 3, 3, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.square(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))))), tf.math.multiply(tf.math.add(alpha, grad), grad)), tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.subtract(grad, tf.math.square(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))), tf.math.divide_no_nan(grad, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), alpha))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), grad))))), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [6, 8, 5, 6, 5, 0, 1, 8, 0, 4, 9, 2, 9, 3, 6, 6, 9, 5, 0, 2, 8, 2, 0, 2, 8, 4], [2, 0, 2, 2, 2, 2, 1, 0, 2, 0, 0, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 41, 35, 44, 70, 79, 53, 52, 44], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [8, 4, 9, 2, 5, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 3, 0, 0, 3, 1, 3, 0, 0], [95, 17, 14, 84, 1, 78], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [93, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 5, 5, 3, 2, 1, 4, 4, 3, 1, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.301644545126711, 2.302614102919718, 2.3035154318403275, 2.302645009412049, 2.3010759067699156, 2.3014453762731124], "accuracy": [0.09853387624025345, 0.09140139818191528, 0.09285431355237961, 0.09166556596755981, 0.08955223858356476, 0.09245806187391281], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 8, 1, 0, 5, 2, 1, 8, 0, 4, 9, 2, 9, 3, 6, 6, 9, 5, 0, 2, 8, 2, 0, 2, 8, 4], [0, 0, 2, 2, 2, 2, 1, 0, 2, 0, 1, 0, 0, 1, 2, 1, 2, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 41, 35, 44, 70, 79, 53, 52, 44], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 4, 3, 8, 4, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 3, 0, 0, 2, 1, 3, 0, 0], [95, 33, 93, 84, 91, 78], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [2, 3], [], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [35, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.301644545126711, 2.302614102919718, 2.3035154318403275, 2.302645009412049, 2.3010759067699156, 2.3014453762731124], "accuracy": [0.09853387624025345, 0.09140139818191528, 0.09285431355237961, 0.09166556596755981, 0.08955223858356476, 0.09245806187391281], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1], [9, 2, 2, 5, 5, 3, 2, 6, 6, 1, 5, 2, 9, 3, 2, 6, 9, 5, 2, 2, 8, 2, 6, 9, 2, 1, 1, 4, 6, 3, 9, 9, 4], [1, 2, 2, 2, 2, 2, 1, 0, 2, 0, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [13, 93, 35, 73, 70, 79, 52, 1, 71, 53, 34], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [8, 4, 3, 2, 4, 5, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 3, 3, 0, 2, 1, 3, 0, 0], [95, 17, 14, 84, 1, 78], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [93, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 1, 0, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.301644545126711, 2.302614102919718, 2.3035154318403275, 2.302645009412049, 2.3010759067699156, 2.3014453762731124], "accuracy": [0.09853387624025345, 0.09140139818191528, 0.09285431355237961, 0.09166556596755981, 0.08955223858356476, 0.09245806187391281], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [9, 2, 2, 5, 5, 3, 2, 6, 6, 1, 5, 2, 9, 3, 2, 6, 9, 5, 2, 2, 8, 2, 6, 9, 2, 1, 1, 4, 6, 3, 9, 9, 4], [2, 0, 2, 2, 2, 2, 1, 0, 2, 0, 0, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 41, 35, 44, 70, 79, 53, 52, 44], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [8, 4, 3, 2, 4, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 3, 0, 0, 3, 1, 3, 0, 0], [52, 17, 14, 84, 1, 78], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [93, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.301644545126711, 2.302614102919718, 2.3035154318403275, 2.302645009412049, 2.3010759067699156, 2.3014453762731124], "accuracy": [0.09853387624025345, 0.09140139818191528, 0.09285431355237961, 0.09166556596755981, 0.08955223858356476, 0.09245806187391281], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [9, 2, 2, 5, 5, 3, 2, 6, 6, 1, 5, 2, 9, 3, 2, 6, 9, 5, 2, 2, 8, 2, 6, 9, 2, 1, 1, 4, 6, 3, 9, 9, 4], [2, 0, 2, 2, 2, 2, 1, 0, 2, 0, 0, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 41, 35, 44, 70, 79, 53, 52, 44], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 4, 3, 8, 4, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 3, 0, 0, 3, 1, 3, 0, 0], [95, 33, 93, 84, 91, 78], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [35, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 1, 0, 1, 12, 12, 6, 6, 3, 3, 1, 1, 0, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, tf.math.multiply(grad, tf.math.sqrt(tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.301644545126711, 2.302614102919718, 2.3035154318403275, 2.302645009412049, 2.3010759067699156, 2.3014453762731124], "accuracy": [0.09853387624025345, 0.09140139818191528, 0.09285431355237961, 0.09166556596755981, 0.08955223858356476, 0.09245806187391281], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]