[{"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.8257142901420593, "mapping_values": [1, 16, 16, 10, 6, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), grad))))), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.1217245430506106, 2.1204975294383477, 1.6019147637340418, 1.2640084509426939, 0.8468151052850601, 0.7604722676260155, 0.7132336780647356, 0.6638372276736572, 0.6514859463891113, 0.590696674012993, 0.5884071482155285, 0.5916304551867005, 0.5741208443205826, 0.5191413449053877, 0.5213959744152628, 0.5108112288488137, 0.48904030962847544, 0.4918751515701006, 0.4525468625082017, 0.47667341610349606, 0.46270717973124004, 0.44799477156001216, 0.4515237699740945, 0.43770251752693795, 0.43285647244847697, 0.43530771981030725, 0.41708753519070196, 0.426048686141115, 0.40166001649517596, 0.39075111531153206, 0.42486097926886296, 0.40879892910066895], "accuracy": [0.2945449650287628, 0.30022454261779785, 0.46123364567756653, 0.5612204670906067, 0.6814159154891968, 0.7107383608818054, 0.7326641082763672, 0.7409853339195251, 0.7491744756698608, 0.7726852297782898, 0.7750627398490906, 0.7745344042778015, 0.7783648371696472, 0.8042530417442322, 0.8033285140991211, 0.8083476424217224, 0.8195747137069702, 0.8190463781356812, 0.8304054737091064, 0.8206313848495483, 0.8261788487434387, 0.837141752243042, 0.8345000743865967, 0.837141752243042, 0.8352925777435303, 0.8335754871368408, 0.8450667262077332, 0.8384625315666199, 0.8485008478164673, 0.8558974862098694, 0.8442742228507996, 0.8486329317092896], "val_loss": [1.9434947967529297, 1.7452229772295271, 0.9392318044389997, 0.7037963015692574, 0.5826291867664882, 0.6017893723079136, 0.5696171522140503, 0.5540479251316616, 0.4769276721136911, 0.48432726519448416, 0.4769908700670515, 0.4375011239733015, 0.4170493313244411, 0.4217935800552368, 0.44471350737980436, 0.40970940249306814, 0.38667147500174387, 0.3918334330831255, 0.42886981793812345, 0.40276898656572613, 0.38615433658872333, 0.3725563713482448, 0.38049315554755075, 0.37589980023247854, 0.3742604340825762, 0.3664928504398891, 0.34721400908061434, 0.3479161092213222, 0.34827944210597445, 0.4051594138145447, 0.40222752945763723, 0.379610504422869], "val_accuracy": [0.15533334016799927, 0.46533334255218506, 0.5863333344459534, 0.6919999718666077, 0.7326666712760925, 0.718999981880188, 0.7289999723434448, 0.7360000014305115, 0.7856666445732117, 0.768666684627533, 0.7766666412353516, 0.8006666898727417, 0.8243333101272583, 0.8243333101272583, 0.7953333258628845, 0.8159999847412109, 0.8306666612625122, 0.8403333425521851, 0.800000011920929, 0.8183333277702332, 0.8299999833106995, 0.8456666469573975, 0.8316666483879089, 0.8349999785423279, 0.840666651725769, 0.8366666436195374, 0.8566666841506958, 0.8496666550636292, 0.8516666889190674, 0.8166666626930237, 0.8136666417121887, 0.82833331823349]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 9, 5, 6, 1, 8], [0, 3, 0, 0, 1, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 49, 68, 41, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 3, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.4765714406967163, "mapping_values": [1, 12, 12, 9, 3, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, sigma), beta)", "other_info": {"loss": [2.400979131078361, 2.2382288390398815, 2.2920264738929617, 2.303610277717549, 2.3032208027825174, 2.3028279533318208, 2.3035757630461196], "accuracy": [0.20604939758777618, 0.19693566858768463, 0.12759213149547577, 0.10210011899471283, 0.09760929644107819, 0.09972262382507324, 0.09192973375320435], "val_loss": [1.961559568132673, 1.3700811862945557, 1.9741623061043876, 1.9736819948468889, 1.9736591066632951, 1.9736178261893136, 1.9735843113490514], "val_accuracy": [0.09866666793823242, 0.484333336353302, 0.10400000214576721, 0.10233332961797714, 0.10233332961797714, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [2, 9, 6, 2, 2, 3, 8, 2, 6, 6, 1, 8, 2, 1, 9, 6, 3, 5], [1, 1, 0, 0, 0, 0, 2, 2, 0, 0, 0, 3, 2, 2], [89, 22, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [89, 25, 50, 71, 34]], "fitness": -0.40857142210006714, "mapping_values": [1, 12, 12, 7, 5, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.3012027715915515, 2.300130677749106, 2.3005195494104984, 2.2987391844779554, 2.2988577438871447, 2.2981280994264126, 2.296779534914679, 2.2973605329019517, 2.296067128233733, 2.294893148001773, 2.2949247505403134, 2.2946361970781823, 2.293433451932797, 2.293805869563129, 2.2910759088117936, 2.289144853102674, 2.2907779943264392, 2.291242286372005, 2.2876268507955317, 2.2885051480279293, 2.2863058040265187, 2.2870751479046456, 2.2869484466159222, 2.2860540349202276, 2.2846816960988408, 2.286266650821019, 2.28471674611776, 2.2828572148801847, 2.281649353355858, 2.2817378378878055, 2.2811964459785177, 2.2806354601936505, 2.278637977812221, 2.2788284867903528, 2.277662216601449, 2.276132335216929, 2.2772244954263496, 2.275369918388918, 2.2742535782653928, 2.2743614452106606, 2.2724217223201557, 2.2728141471773107, 2.2716262177422126, 2.271640347483419, 2.2688341362443913, 2.269738513874482, 2.269618939666889, 2.2668786469924216, 2.2677246235963486, 2.2672999748511637, 2.266721010743477, 2.2658594839325072, 2.264778618988281, 2.263348761519358, 2.264434613445888, 2.262791451934212, 2.2616640088612048, 2.2609635164960973, 2.259123028041097, 2.2602677251747525, 2.2573425406714347, 2.2570566207095695, 2.2564378905179807, 2.25536753664935, 2.2559648429901844, 2.2553955764818374, 2.2527156068569854, 2.2528861605370003, 2.2503765502925153, 2.252021911389572, 2.2489665143163275, 2.2481757692294964, 2.249985804568507, 2.2477699437429246, 2.2446460443606795, 2.245868551449265, 2.2446903454046585, 2.2431622278956436, 2.2424017775249268, 2.242471339507047, 2.2426379628547384, 2.2412982418111698, 2.240574738290001, 2.241455482595774, 2.238749681730249, 2.2393244057598523, 2.2371826833186605, 2.236061919272426, 2.235139726600501, 2.234813217127312, 2.234168280353478, 2.231288857416564, 2.229232830535844, 2.2291257760591194, 2.2289716049570214, 2.2277648937369947, 2.2275741750601026, 2.2257095532977207, 2.2248668255602535, 2.225586789993641], "accuracy": [0.08889182657003403, 0.09893012791872025, 0.09708096832036972, 0.09800554811954498, 0.09417514503002167, 0.09985470771789551, 0.09906221181154251, 0.10130762308835983, 0.10579843819141388, 0.10817593336105347, 0.11240258812904358, 0.11042134463787079, 0.11042134463787079, 0.11319508403539658, 0.11689341068267822, 0.11755382269620895, 0.11755382269620895, 0.11570466309785843, 0.1254788041114807, 0.11927089840173721, 0.1340641975402832, 0.13010171055793762, 0.13049794733524323, 0.12930920720100403, 0.13512085378170013, 0.13049794733524323, 0.13247919082641602, 0.13974376022815704, 0.1426495909690857, 0.14555540680885315, 0.1476687341928482, 0.14740456640720367, 0.15559370815753937, 0.15440496802330017, 0.15955619513988495, 0.15480121970176697, 0.1578391194343567, 0.16166952252388, 0.16483952105045319, 0.15995244681835175, 0.16853784024715424, 0.16655659675598145, 0.1736890822649002, 0.17355699837207794, 0.18557654321193695, 0.1826707124710083, 0.17593449354171753, 0.1822744756937027, 0.1822744756937027, 0.18280279636383057, 0.1872936189174652, 0.18214239180088043, 0.19191652536392212, 0.18940694630146027, 0.19297318160533905, 0.1916523575782776, 0.19944524765014648, 0.20340773463249207, 0.2028794139623642, 0.1935015171766281, 0.21252146363258362, 0.20644564926624298, 0.20697398483753204, 0.21212521195411682, 0.20657773315906525, 0.21318188309669495, 0.2160876989364624, 0.21199312806129456, 0.22639016807079315, 0.22084268927574158, 0.23140932619571686, 0.2250693440437317, 0.2207106053829193, 0.22652225196361542, 0.2405230551958084, 0.2308809906244278, 0.2359001487493515, 0.24778760969638824, 0.23497556149959564, 0.24356095492839813, 0.24659886956214905, 0.24224013090133667, 0.24659886956214905, 0.23999471962451935, 0.25082552433013916, 0.24342887103557587, 0.2518821954727173, 0.25822216272354126, 0.25782591104507446, 0.25214633345603943, 0.25703340768814087, 0.2608638107776642, 0.2719587981700897, 0.2635054886341095, 0.254920095205307, 0.26826047897338867, 0.2658829689025879, 0.2744683623313904, 0.26561880111694336, 0.270109623670578], "val_loss": [1.9699108260018485, 1.9692281314304896, 1.968543257032122, 1.9678586551121302, 1.9671815463474818, 1.9665003504071916, 1.9658171789986747, 1.9651470865522112, 1.964481966836112, 1.963822364807129, 1.9631455966404505, 1.9624796594892229, 1.9618080684116908, 1.9611320495605469, 1.9604625701904297, 1.9597909791128976, 1.959130150931222, 1.958458764212472, 1.957787105015346, 1.9571187155587333, 1.9564485549926758, 1.9557709693908691, 1.9550973347255163, 1.9544281278337752, 1.9537579672677177, 1.9530893053327287, 1.9524222782679967, 1.95175416128976, 1.9510815484183175, 1.950411319732666, 1.9497367995125907, 1.949064118521554, 1.9483978407723563, 1.9477193014962333, 1.9470456668308802, 1.9463675362723214, 1.945695127759661, 1.9450105258396693, 1.9443202018737793, 1.94363158089774, 1.9429456847054618, 1.9422552245003837, 1.9415669441223145, 1.9408751215253557, 1.940180846623012, 1.939483710697719, 1.9387828963143485, 1.9380709784371513, 1.9373613085065569, 1.9366610390799386, 1.935957431793213, 1.9352472850254603, 1.9345320974077498, 1.9338209969656808, 1.9331094878060477, 1.93239198412214, 1.931656837463379, 1.9309235300336565, 1.9301865441458566, 1.929450375693185, 1.9287077358790807, 1.9279649598257882, 1.9272105353219169, 1.926450525011335, 1.9257026399884904, 1.9249463762555803, 1.924175466809954, 1.9234083039419991, 1.9226303100585938, 1.9218572889055525, 1.9210704394749232, 1.92028774533953, 1.919508593423026, 1.9187184742518835, 1.9179070336478097, 1.917095524924142, 1.9162773404802596, 1.9154584067208427, 1.9146357263837541, 1.9138062340872628, 1.9129762649536133, 1.91214234488351, 1.9113037245614188, 1.9104584966387068, 1.909604890005929, 1.9087523051670618, 1.9078848702566964, 1.90701505116054, 1.9061437334333147, 1.9052696228027344, 1.9043878827776228, 1.9034934725080217, 1.90257842200143, 1.9016668455941337, 1.900759492601667, 1.8998430797031947, 1.8989124298095703, 1.8979712213788713, 1.8970260620117188, 1.8960787909371513], "val_accuracy": [0.041999999433755875, 0.04899999871850014, 0.052000001072883606, 0.055666666477918625, 0.06133333221077919, 0.06499999761581421, 0.07000000029802322, 0.07566666603088379, 0.08033332973718643, 0.08633333444595337, 0.09200000017881393, 0.10000000149011612, 0.1080000028014183, 0.11299999803304672, 0.12066666781902313, 0.12733332812786102, 0.1326666623353958, 0.13833333551883698, 0.1456666737794876, 0.1523333340883255, 0.15933333337306976, 0.16633333265781403, 0.1720000058412552, 0.18033333122730255, 0.18700000643730164, 0.19466666877269745, 0.20133332908153534, 0.20866666734218597, 0.21400000154972076, 0.22100000083446503, 0.22333332896232605, 0.23000000417232513, 0.23366667330265045, 0.23866666853427887, 0.2446666657924652, 0.24933333694934845, 0.2549999952316284, 0.2626666724681854, 0.26899999380111694, 0.27533334493637085, 0.281333327293396, 0.2849999964237213, 0.2919999957084656, 0.29499998688697815, 0.2996666729450226, 0.30433332920074463, 0.31033334136009216, 0.3136666715145111, 0.3173333406448364, 0.32100000977516174, 0.3233333230018616, 0.32899999618530273, 0.3330000042915344, 0.33666667342185974, 0.34166666865348816, 0.3449999988079071, 0.3490000069141388, 0.35100001096725464, 0.35499998927116394, 0.3566666543483734, 0.36033332347869873, 0.3619999885559082, 0.3633333444595337, 0.36500000953674316, 0.367333322763443, 0.36800000071525574, 0.3686666786670685, 0.37166666984558105, 0.3726666569709778, 0.37599998712539673, 0.3786666691303253, 0.3799999952316284, 0.38233333826065063, 0.382999986410141, 0.3843333423137665, 0.38466668128967285, 0.3856666684150696, 0.38733333349227905, 0.38866665959358215, 0.3916666805744171, 0.39366665482521057, 0.3946666717529297, 0.39533331990242004, 0.39666667580604553, 0.3986666798591614, 0.3996666669845581, 0.4020000100135803, 0.40299999713897705, 0.4050000011920929, 0.40533334016799927, 0.40666666626930237, 0.40799999237060547, 0.4090000092983246, 0.4103333353996277, 0.41200000047683716, 0.41333332657814026, 0.4143333435058594, 0.41600000858306885, 0.4163333475589752, 0.41866666078567505]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [5, 9, 0, 1, 0, 3, 8, 2, 9, 3, 1, 8], [1, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 3, 2, 2], [24, 98, 75, 86, 46, 73, 18, 25, 62, 84], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.22542856633663177, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.327854417428805, 2.1144758021874024, 2.306862198492445, 2.2608806241095545, 2.3956732094610653, 2.279150742045987, 2.1411915755999353, 2.196994130606066, 2.206244356077046, 2.3688015848055746, 2.3474131188514193, 2.3920621871633334, 2.369913042024646], "accuracy": [0.27460044622421265, 0.25201427936553955, 0.22586184740066528, 0.19099193811416626, 0.1018359512090683, 0.1574428677558899, 0.23180557787418365, 0.204860657453537, 0.21278563141822815, 0.1516312211751938, 0.11108175665140152, 0.09998679161071777, 0.10460969805717468], "val_loss": [1.9768750326974052, 1.9136366162981306, 1.986611774989537, 2.0418435505458286, 1.9930733953203474, 1.7153458935873849, 1.5678623403821672, 1.5899719851357597, 1.7787348883492606, 1.9761345045907157, 2.04826477595738, 2.0294114521571567, 2.03260224206107], "val_accuracy": [0.14266666769981384, 0.30033332109451294, 0.10400000214576721, 0.10233332961797714, 0.109333336353302, 0.3083333373069763, 0.3173333406448364, 0.3179999887943268, 0.22599999606609344, 0.13433332741260529, 0.10566666722297668, 0.10366666316986084, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [5, 9, 0, 1, 0, 3, 8, 2, 9, 3, 1, 8], [1, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 2, 9, 2, 9], [2, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [26, 25, 50, 71, 34]], "fitness": -0.17399999499320984, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 4, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3001708378802515, 2.3145550624049807, 2.3600588688493294, 2.3607053121539816, 2.344505948602185, 2.3119304407510493, 2.2959957038091865, 2.2925177986249317, 2.281150656322116, 2.283313820878859, 2.277920645556477, 2.275327466687097, 2.2752551335889146, 2.273286918938168, 2.2728158063136545, 2.2665985282763925, 2.272987668382934], "accuracy": [0.09879804402589798, 0.1208558976650238, 0.12679962813854218, 0.1298375427722931, 0.13247919082641602, 0.1418570876121521, 0.14119666814804077, 0.15176330506801605, 0.15414080023765564, 0.14872540533542633, 0.14793290197849274, 0.14212125539779663, 0.1394795924425125, 0.149649977684021, 0.14463083446025848, 0.1484612375497818, 0.136045441031456], "val_loss": [1.9567320687430245, 1.9525788852146693, 1.9391751289367676, 1.9202630179268974, 1.908036572592599, 1.9040916306631905, 1.9039215360369002, 1.9063518387930733, 1.9084835052490234, 1.9111394201006209, 1.9129945210048132, 1.9150636536734444, 1.9157422610691615, 1.9168966157095773, 1.9168835367475237, 1.9151418549673898, 1.917529855455671], "val_accuracy": [0.109333336353302, 0.14300000667572021, 0.18266665935516357, 0.19066666066646576, 0.20366667211055756, 0.21466666460037231, 0.22633333504199982, 0.23333333432674408, 0.23766666650772095, 0.24799999594688416, 0.25566667318344116, 0.26366665959358215, 0.25833332538604736, 0.2540000081062317, 0.2526666522026062, 0.2423333376646042, 0.23533333837985992]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [5, 9, 0, 1, 0, 3, 8, 2, 9, 3, 1, 8], [1, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 3, 2, 2], [24, 98, 75, 86, 46, 73, 18, 25, 62, 84], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 1, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [59, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 0, 1, 0, 0, 0, 0, 5, 2, 3, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, alpha), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [5, 9, 0, 1, 0, 3, 8, 2, 9, 3, 1, 8], [3, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 3, 2, 2], [24, 98, 75, 86, 46, 73, 18, 25, 62, 84], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 9, 5, 4, 3], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [974395.6675266641, 2.3061233213029406, 2.304683653244867, 2.3038302054573374, 2.3033159116413207, 2.3030527187864367], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09721305221319199, 0.0956280529499054, 0.09826971590518951, 0.09998679161071777], "val_loss": [1.9780757767813546, 1.9763484001159668, 1.9752658435276575, 1.9746289253234863, 1.9742608070373535, 1.974031857081822], "val_accuracy": [0.10400000214576721, 0.09966666996479034, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [2, 9, 6, 4, 4, 3, 8, 2, 6, 6, 1, 8, 2, 1, 9, 6, 3, 5], [2, 0, 0, 0, 0, 2, 1, 2, 0, 0, 0, 3, 2, 2], [24, 98, 75, 86, 46, 73, 18, 25, 62, 84], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 1, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [89, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.pow(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, alpha), beta)", "other_info": {"loss": [2.328304923394762, 2.481788027004685, 2.3122784917569668, 2.3052169675478105, 2.3028693275995824, 2.2527624875515713, 2.305220043024666], "accuracy": [0.20921939611434937, 0.19812442362308502, 0.09642054885625839, 0.09959053993225098, 0.11015717685222626, 0.1732928305864334, 0.09615638852119446], "val_loss": [1.9688664845057897, 1.9871480805533273, 1.97740261895316, 1.9736480712890625, 1.9692333766392298, 1.9772915158952986, 1.9742843764168876], "val_accuracy": [0.10000000149011612, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.1003333330154419, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1], [2, 4, 1, 6, 6, 3, 8, 2, 5, 6, 1, 8], [2, 2, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 1, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [72, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 10, 9, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.subtract(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))))), tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), grad)))), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)))), grad)), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [4, 9, 6, 6, 0, 3, 9, 2, 5, 2, 1, 8], [2, 0, 0, 0, 0, 2, 1, 2, 0, 0, 0, 3, 2, 2], [24, 98, 75, 86, 46, 73, 18, 25, 62, 84], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 3, 1, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 5, 2, 3, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, grad), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, sigma), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [2, 9, 0, 6, 3, 3, 2, 2, 5, 6, 1, 8], [0, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [3, 3, 1, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 9, 6, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), sigma), tf.math.add(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), sigma)), alpha)", "other_info": {"loss": [2.3019802588922724, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [5, 9, 0, 1, 0, 3, 8, 2, 9, 3, 1, 8], [1, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 8, 8, 4, 4, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [1, 9, 0, 1, 0, 3, 8, 2, 9, 3, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [24, 98, 75, 86, 46, 73, 18, 25, 62, 84], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [7, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.301711714609408, 2.302374866990964, 2.302537561580883, 2.3035421126774667, 2.308822991054103, 2.3355602240597078], "accuracy": [0.10540219396352768, 0.10460969805717468, 0.10077928751707077, 0.1022322028875351, 0.10289261490106583, 0.10328886657953262], "val_loss": [1.9737187113080705, 1.9738057681492396, 1.9743593079703194, 1.976605006626674, 1.9873988287789481, 2.0447642462594167], "val_accuracy": [0.10000000149011612, 0.09966666996479034, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [24, 61, 68, 73, 46, 73, 84, 25, 62, 99], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 1, 0, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 1, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07555144280195236, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1], [5, 9, 6, 8, 4, 3, 8, 2, 6, 6, 1, 8, 2, 1, 9, 6, 3, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [44, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [83, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07555144280195236, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 2, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [0, 3, 0, 0, 2, 1, 1, 2, 0, 0, 0, 3, 2, 2], [24, 98, 75, 86, 46, 73, 18, 25, 62, 84], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0], [1, 6, 2, 9, 5, 9, 4, 8, 5, 9], [2, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [18, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 6, 6, 3, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 12, 10, 2, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(grad, alpha))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.add(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.sqrt(beta), tf.math.square(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [5, 9, 0, 1, 0, 3, 8, 2, 9, 3, 1, 8], [1, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [5, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 1, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [89, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 8, 8, 4, 4, 0, 1, 0, 0, 0, 0, 9, 5, 4, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.sqrt(grad), grad), grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))), tf.math.add(sigma, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 9, 5, 6, 1, 8], [0, 3, 0, 0, 1, 0, 2, 2, 0, 0, 0, 3, 2, 2], [19, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 2, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [37, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.add(beta, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.3019802588922724, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [5, 9, 0, 1, 0, 3, 8, 2, 9, 3, 1, 8], [2, 3, 0, 0, 0, 0, 2, 2, 0, 0, 0, 3, 2, 2], [4, 98, 6, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [11], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 0, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 9, 5, 4, 4], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [5, 9, 0, 1, 0, 3, 8, 2, 9, 3, 1, 8], [1, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301497835351523, 2.3011449734926255, 2.3022709725130155, 2.3012268733449224, 2.3020358140426715, 2.3020701083713724], "accuracy": [0.0878351628780365, 0.09589222073554993, 0.09232597798109055, 0.09232597798109055, 0.08691058307886124, 0.09074098616838455], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]