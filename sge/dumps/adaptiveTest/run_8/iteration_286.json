[{"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.7997142672538757, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [1.9990036936641415, 1.4393071557363546, 1.0281754660332412, 0.8784443155224329, 0.793389363114734, 0.7635787301894271, 0.7446788436370424, 0.6759752835800399, 0.6660961326024221, 0.6734184534353524, 0.6426267222784388, 0.6260160716013619, 0.58124506955354, 0.5833890116162792, 0.6054785008349234, 0.5661984832925158, 0.5507729628444773, 0.5192793042054187, 0.5569738579810398, 0.5281866144006593], "accuracy": [0.33020737767219543, 0.49848103523254395, 0.6178840398788452, 0.6682076454162598, 0.7030775547027588, 0.7193237543106079, 0.7144366502761841, 0.7465327978134155, 0.7477215528488159, 0.7417778372764587, 0.7561748623847961, 0.7598732113838196, 0.7819310426712036, 0.774798572063446, 0.7675340175628662, 0.7820631265640259, 0.7876105904579163, 0.8101968169212341, 0.7915731072425842, 0.7968564033508301], "val_loss": [1.6147355011531286, 0.7775197199412754, 0.7521196774074009, 0.5946307352610997, 0.6423984936305455, 0.582598158291408, 0.5562491246632167, 0.5672334943498883, 0.5607423952647618, 0.5068482671465192, 0.4938709224973406, 0.5209638731820243, 0.525501012802124, 0.4551546403339931, 0.44397956132888794, 0.44469480003629414, 0.45858633518218994, 0.5080535752432687, 0.4638157912663051, 0.4258245825767517], "val_accuracy": [0.29466667771339417, 0.6819999814033508, 0.6480000019073486, 0.7446666955947876, 0.7099999785423279, 0.7400000095367432, 0.7793333530426025, 0.7513333559036255, 0.7403333187103271, 0.7766666412353516, 0.7896666526794434, 0.7609999775886536, 0.7639999985694885, 0.8080000281333923, 0.8203333616256714, 0.8136666417121887, 0.7960000038146973, 0.7716666460037231, 0.8029999732971191, 0.8153333067893982]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0], [2, 1, 5, 1, 4, 3, 4, 1, 5, 7, 1, 9, 9], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50, 79, 83], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [4, 6, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 65, 99, 84, 1, 78], [0, 0, 1, 0, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.7997142672538757, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [1.9990036936641415, 1.4393071557363546, 1.0281754660332412, 0.8784443155224329, 0.793389363114734, 0.7635787301894271, 0.7446788436370424, 0.6759752835800399, 0.6660961326024221, 0.6734184534353524, 0.6426267222784388, 0.6260160716013619, 0.58124506955354, 0.5833890116162792, 0.6054785008349234, 0.5661984832925158, 0.5507729628444773, 0.5192793042054187, 0.5569738579810398, 0.5281866144006593], "accuracy": [0.33020737767219543, 0.49848103523254395, 0.6178840398788452, 0.6682076454162598, 0.7030775547027588, 0.7193237543106079, 0.7144366502761841, 0.7465327978134155, 0.7477215528488159, 0.7417778372764587, 0.7561748623847961, 0.7598732113838196, 0.7819310426712036, 0.774798572063446, 0.7675340175628662, 0.7820631265640259, 0.7876105904579163, 0.8101968169212341, 0.7915731072425842, 0.7968564033508301], "val_loss": [1.6147355011531286, 0.7775197199412754, 0.7521196774074009, 0.5946307352610997, 0.6423984936305455, 0.582598158291408, 0.5562491246632167, 0.5672334943498883, 0.5607423952647618, 0.5068482671465192, 0.4938709224973406, 0.5209638731820243, 0.525501012802124, 0.4551546403339931, 0.44397956132888794, 0.44469480003629414, 0.45858633518218994, 0.5080535752432687, 0.4638157912663051, 0.4258245825767517], "val_accuracy": [0.29466667771339417, 0.6819999814033508, 0.6480000019073486, 0.7446666955947876, 0.7099999785423279, 0.7400000095367432, 0.7793333530426025, 0.7513333559036255, 0.7403333187103271, 0.7766666412353516, 0.7896666526794434, 0.7609999775886536, 0.7639999985694885, 0.8080000281333923, 0.8203333616256714, 0.8136666417121887, 0.7960000038146973, 0.7716666460037231, 0.8029999732971191, 0.8153333067893982]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50, 79, 83], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.7997142672538757, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 2, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))))), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [1.9990036936641415, 1.4393071557363546, 1.0281754660332412, 0.8784443155224329, 0.793389363114734, 0.7635787301894271, 0.7446788436370424, 0.6759752835800399, 0.6660961326024221, 0.6734184534353524, 0.6426267222784388, 0.6260160716013619, 0.58124506955354, 0.5833890116162792, 0.6054785008349234, 0.5661984832925158, 0.5507729628444773, 0.5192793042054187, 0.5569738579810398, 0.5281866144006593], "accuracy": [0.33020737767219543, 0.49848103523254395, 0.6178840398788452, 0.6682076454162598, 0.7030775547027588, 0.7193237543106079, 0.7144366502761841, 0.7465327978134155, 0.7477215528488159, 0.7417778372764587, 0.7561748623847961, 0.7598732113838196, 0.7819310426712036, 0.774798572063446, 0.7675340175628662, 0.7820631265640259, 0.7876105904579163, 0.8101968169212341, 0.7915731072425842, 0.7968564033508301], "val_loss": [1.6147355011531286, 0.7775197199412754, 0.7521196774074009, 0.5946307352610997, 0.6423984936305455, 0.582598158291408, 0.5562491246632167, 0.5672334943498883, 0.5607423952647618, 0.5068482671465192, 0.4938709224973406, 0.5209638731820243, 0.525501012802124, 0.4551546403339931, 0.44397956132888794, 0.44469480003629414, 0.45858633518218994, 0.5080535752432687, 0.4638157912663051, 0.4258245825767517], "val_accuracy": [0.29466667771339417, 0.6819999814033508, 0.6480000019073486, 0.7446666955947876, 0.7099999785423279, 0.7400000095367432, 0.7793333530426025, 0.7513333559036255, 0.7403333187103271, 0.7766666412353516, 0.7896666526794434, 0.7609999775886536, 0.7639999985694885, 0.8080000281333923, 0.8203333616256714, 0.8136666417121887, 0.7960000038146973, 0.7716666460037231, 0.8029999732971191, 0.8153333067893982]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0], [2, 1, 5, 1, 4, 3, 4, 1, 5, 7, 1, 9, 9], [0, 2, 0, 0, 2, 0, 1, 0, 0, 0, 0, 3, 2, 2], [8, 86, 50, 79, 83], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 1, 0, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.7997142672538757, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [1.9990036936641415, 1.4393071557363546, 1.0281754660332412, 0.8784443155224329, 0.793389363114734, 0.7635787301894271, 0.7446788436370424, 0.6759752835800399, 0.6660961326024221, 0.6734184534353524, 0.6426267222784388, 0.6260160716013619, 0.58124506955354, 0.5833890116162792, 0.6054785008349234, 0.5661984832925158, 0.5507729628444773, 0.5192793042054187, 0.5569738579810398, 0.5281866144006593], "accuracy": [0.33020737767219543, 0.49848103523254395, 0.6178840398788452, 0.6682076454162598, 0.7030775547027588, 0.7193237543106079, 0.7144366502761841, 0.7465327978134155, 0.7477215528488159, 0.7417778372764587, 0.7561748623847961, 0.7598732113838196, 0.7819310426712036, 0.774798572063446, 0.7675340175628662, 0.7820631265640259, 0.7876105904579163, 0.8101968169212341, 0.7915731072425842, 0.7968564033508301], "val_loss": [1.6147355011531286, 0.7775197199412754, 0.7521196774074009, 0.5946307352610997, 0.6423984936305455, 0.582598158291408, 0.5562491246632167, 0.5672334943498883, 0.5607423952647618, 0.5068482671465192, 0.4938709224973406, 0.5209638731820243, 0.525501012802124, 0.4551546403339931, 0.44397956132888794, 0.44469480003629414, 0.45858633518218994, 0.5080535752432687, 0.4638157912663051, 0.4258245825767517], "val_accuracy": [0.29466667771339417, 0.6819999814033508, 0.6480000019073486, 0.7446666955947876, 0.7099999785423279, 0.7400000095367432, 0.7793333530426025, 0.7513333559036255, 0.7403333187103271, 0.7766666412353516, 0.7896666526794434, 0.7609999775886536, 0.7639999985694885, 0.8080000281333923, 0.8203333616256714, 0.8136666417121887, 0.7960000038146973, 0.7716666460037231, 0.8029999732971191, 0.8153333067893982]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [2, 1, 5, 1, 6, 3, 4, 1, 8, 7, 6, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [5, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 1, 0, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.7997142672538757, "mapping_values": [1, 14, 14, 7, 7, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.math.add(alpha, grad), grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [1.9990036936641415, 1.4393071557363546, 1.0281754660332412, 0.8784443155224329, 0.793389363114734, 0.7635787301894271, 0.7446788436370424, 0.6759752835800399, 0.6660961326024221, 0.6734184534353524, 0.6426267222784388, 0.6260160716013619, 0.58124506955354, 0.5833890116162792, 0.6054785008349234, 0.5661984832925158, 0.5507729628444773, 0.5192793042054187, 0.5569738579810398, 0.5281866144006593], "accuracy": [0.33020737767219543, 0.49848103523254395, 0.6178840398788452, 0.6682076454162598, 0.7030775547027588, 0.7193237543106079, 0.7144366502761841, 0.7465327978134155, 0.7477215528488159, 0.7417778372764587, 0.7561748623847961, 0.7598732113838196, 0.7819310426712036, 0.774798572063446, 0.7675340175628662, 0.7820631265640259, 0.7876105904579163, 0.8101968169212341, 0.7915731072425842, 0.7968564033508301], "val_loss": [1.6147355011531286, 0.7775197199412754, 0.7521196774074009, 0.5946307352610997, 0.6423984936305455, 0.582598158291408, 0.5562491246632167, 0.5672334943498883, 0.5607423952647618, 0.5068482671465192, 0.4938709224973406, 0.5209638731820243, 0.525501012802124, 0.4551546403339931, 0.44397956132888794, 0.44469480003629414, 0.45858633518218994, 0.5080535752432687, 0.4638157912663051, 0.4258245825767517], "val_accuracy": [0.29466667771339417, 0.6819999814033508, 0.6480000019073486, 0.7446666955947876, 0.7099999785423279, 0.7400000095367432, 0.7793333530426025, 0.7513333559036255, 0.7403333187103271, 0.7766666412353516, 0.7896666526794434, 0.7609999775886536, 0.7639999985694885, 0.8080000281333923, 0.8203333616256714, 0.8136666417121887, 0.7960000038146973, 0.7716666460037231, 0.8029999732971191, 0.8153333067893982]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [5, 47, 99, 84, 1, 78], [0, 0, 1, 0, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.7997142672538757, "mapping_values": [1, 3, 3, 2, 1, 1, 9, 9, 5, 4, 2, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))))), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [1.9990036936641415, 1.4393071557363546, 1.0281754660332412, 0.8784443155224329, 0.793389363114734, 0.7635787301894271, 0.7446788436370424, 0.6759752835800399, 0.6660961326024221, 0.6734184534353524, 0.6426267222784388, 0.6260160716013619, 0.58124506955354, 0.5833890116162792, 0.6054785008349234, 0.5661984832925158, 0.5507729628444773, 0.5192793042054187, 0.5569738579810398, 0.5281866144006593], "accuracy": [0.33020737767219543, 0.49848103523254395, 0.6178840398788452, 0.6682076454162598, 0.7030775547027588, 0.7193237543106079, 0.7144366502761841, 0.7465327978134155, 0.7477215528488159, 0.7417778372764587, 0.7561748623847961, 0.7598732113838196, 0.7819310426712036, 0.774798572063446, 0.7675340175628662, 0.7820631265640259, 0.7876105904579163, 0.8101968169212341, 0.7915731072425842, 0.7968564033508301], "val_loss": [1.6147355011531286, 0.7775197199412754, 0.7521196774074009, 0.5946307352610997, 0.6423984936305455, 0.582598158291408, 0.5562491246632167, 0.5672334943498883, 0.5607423952647618, 0.5068482671465192, 0.4938709224973406, 0.5209638731820243, 0.525501012802124, 0.4551546403339931, 0.44397956132888794, 0.44469480003629414, 0.45858633518218994, 0.5080535752432687, 0.4638157912663051, 0.4258245825767517], "val_accuracy": [0.29466667771339417, 0.6819999814033508, 0.6480000019073486, 0.7446666955947876, 0.7099999785423279, 0.7400000095367432, 0.7793333530426025, 0.7513333559036255, 0.7403333187103271, 0.7766666412353516, 0.7896666526794434, 0.7609999775886536, 0.7639999985694885, 0.8080000281333923, 0.8203333616256714, 0.8136666417121887, 0.7960000038146973, 0.7716666460037231, 0.8029999732971191, 0.8153333067893982]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [35, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [1, 1, 0, 1, 3, 2], [66, 47, 50, 41, 34]], "fitness": -0.18457143008708954, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2828704941431766, 2.3124162454835617, 2.3859903241791005, 2.4859468027144342, 2.6229867257808634, 2.8605278876038462], "accuracy": [0.17144367098808289, 0.13089419901371002, 0.10830801725387573, 0.09998679161071777, 0.10342095047235489, 0.09813763201236725], "val_loss": [1.9529437337602888, 2.0387727873665944, 2.1210688182285855, 2.236828531537737, 2.396627834865025, 2.6209192957196916], "val_accuracy": [0.13333334028720856, 0.10133333504199982, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 4, 7, 1, 6, 3, 4, 1, 8, 7, 6, 5], [1, 3, 0, 0, 0, 0, 2, 2, 0, 0, 0, 3, 2, 2], [52, 86, 50], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [5, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [2, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.15371428430080414, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.pow(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [4.117915081766855, 117510849339.67668, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.17144367098808289, 0.13036586344242096, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.071317672729492, 3.7687626930882225e+28, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.1353333294391632, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [2, 4, 8, 1, 6, 3, 4, 1, 8, 7, 6, 5], [1, 3, 0, 0, 0, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50, 79, 83], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [0, 6, 5, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [5, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 65, 99, 84, 1, 78], [0, 0, 1, 0, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.14485713839530945, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.4989367441777715, 2.3061457265716077, 2.388572048092279, 2.304316652953239, 2.3031978849343746, 2.3029272198881756, 2.303037518413233], "accuracy": [0.1612732857465744, 0.11306300014257431, 0.18557654321193695, 0.09536388516426086, 0.09245806187391281, 0.09826971590518951, 0.09919429570436478], "val_loss": [1.984553337097168, 1.9414638791765486, 1.9757067816598075, 1.973666054861886, 1.973550728389195, 1.9736768177577428, 1.9737190519060408], "val_accuracy": [0.09833333641290665, 0.20666666328907013, 0.10233332961797714, 0.10233332961797714, 0.10400000214576721, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [6, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [4, 6, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [44, 47, 99, 84, 1, 78], [0, 0, 1, 0, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.13571429252624512, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.multiply(sigma, alpha)))", "other_info": {"loss": [47259.31553573291, 475334045.0138687, 4715647385.14014, 6822744531.298903, 8686168680.7534, 17318248374.287148, 19379646566.25122, 17562291277.229427, 18642245284.670452, 21258292559.833046, 20615756397.081493, 21730797223.510765, 24775614721.521595, 27239813826.83186, 21221462074.294018, 24542834971.490158, 26002991994.50535, 12009379016160.283, 15999977515767.852, 15266772775021.826, 15750524929276.787, 16394278688469.092], "accuracy": [0.06577730923891068, 0.09153348207473755, 0.08968432247638702, 0.09325055778026581, 0.10011887550354004, 0.11200633645057678, 0.11293092370033264, 0.11002509295940399, 0.11359133571386337, 0.10817593336105347, 0.11147800832986832, 0.10989301651716232, 0.10500594228506088, 0.10870426893234253, 0.1072513535618782, 0.10527011007070541, 0.10896842926740646, 0.09457138925790787, 0.08691058307886124, 0.08638224750757217, 0.08968432247638702, 0.07674019038677216], "val_loss": [685225.5357142857, 1015967195.4285715, 11201593344.0, 11345858852.571428, 11470439570.285715, 18030273682.285713, 18242705115.42857, 18284598418.285713, 18404075812.57143, 18585760914.285713, 18619661750.857143, 18869752978.285713, 18856703707.42857, 19001112868.57143, 18956026441.142857, 18897622162.285713, 22985940992.0, 13120851261147.428, 13015590109184.0, 12910273532489.143, 12807011565568.0, 12701844785444.572], "val_accuracy": [0.08033332973718643, 0.10433333367109299, 0.10433333367109299, 0.10499999672174454, 0.10899999737739563, 0.12099999934434891, 0.12200000137090683, 0.12700000405311584, 0.12666666507720947, 0.12733332812786102, 0.1289999932050705, 0.12933333218097687, 0.12933333218097687, 0.13066667318344116, 0.12999999523162842, 0.1316666603088379, 0.14866666495800018, 0.10233332961797714, 0.10266666859388351, 0.10266666859388351, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [9, 1, 5, 1, 6, 3, 4, 1, 8, 7, 6, 5], [1, 3, 0, 0, 0, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 6, 3, 6, 2, 8, 6, 4, 2, 3, 8, 5, 8, 8, 4, 4, 9], [3, 1, 2, 1, 3, 2, 0, 1, 0, 1, 0], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 29, 18, 11, 4], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.divide_no_nan(tf.math.multiply(tf.math.divide_no_nan(sigma, alpha), tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(alpha, sigma)))), tf.math.pow(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.math.square(tf.math.sqrt(tf.math.sqrt(beta)))), tf.math.pow(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), alpha)), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), alpha)), tf.math.pow(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [1, 3, 0, 0, 0, 0, 2, 2, 0, 0, 0, 3, 2, 2], [95, 86, 50, 21, 46], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [5, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [0, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0], [0, 3, 6, 3, 6], [2, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 2, 9, 9, 5, 4, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))))), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0], [2, 1, 5, 1, 4, 3, 4, 1, 5, 7, 1, 9, 9], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50, 79, 83], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [4, 6, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 1, 0, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [4, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), sigma), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [2, 2, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [60, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [5, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [7, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [72, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 9, 8, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.add(grad, grad)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.square(grad)))), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), sigma), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [76, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [1, 0, 1, 0, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [1, 1, 0, 1, 3, 2], [99, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.303059196868955, 2.302927172147776, 2.3030472580530956, 2.3030031488209732, 2.3029848600910827, 2.3029028919032535, 2.3030763535908325, 2.3030030775567747], "accuracy": [0.09615638852119446, 0.09628847241401672, 0.09470347315073013, 0.0944393053650856, 0.09536388516426086, 0.09826971590518951, 0.0956280529499054, 0.09840179979801178], "val_loss": [1.973743302481515, 1.9736590385437012, 1.9735547474452428, 1.9735535894121443, 1.9735685076032365, 1.9737037931169783, 1.973719801221575, 1.9737144878932409], "val_accuracy": [0.09966666996479034, 0.0976666659116745, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10000000149011612, 0.10000000149011612, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [8, 1, 5, 1, 6, 3, 4, 1, 8, 7, 6, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [1, 0, 1, 0, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [1, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), grad))), lambda shape,  alpha, beta, grad: tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3030516387701128, 2.3016917033517332, 2.301831378660906, 2.302353762679679, 2.3014321481830424, 2.3006548538593456], "accuracy": [0.08757099509239197, 0.09708096832036972, 0.09060890227556229, 0.09047681838274002, 0.09245806187391281, 0.09126931428909302], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0], [2, 1, 5, 1, 4, 3, 4, 1, 5, 7, 1, 9, 9], [0, 2, 0, 0, 2, 0, 1, 0, 0, 0, 0, 3, 2, 2], [8, 86, 50, 79, 83], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [0, 6, 5, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [32, 65, 99, 84, 1, 78], [1, 0, 1, 0, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [1, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 1, 10, 10, 6, 4, 1, 1, 0, 0, 0, 0, 6, 4, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), grad))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, alpha)))", "other_info": {"loss": [2.3030527677864776, 2.301694928662904, 2.301836825758632, 2.302360969086711, 2.3014401280727244, 2.3006621952684188], "accuracy": [0.08757099509239197, 0.09708096832036972, 0.09060890227556229, 0.09034473448991776, 0.09245806187391281, 0.09100515395402908], "val_loss": [1.9705915451049805, 1.970592635018485, 1.9705938611711775, 1.9705954960414342, 1.9705966540745325, 1.9705980164664132], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.039000000804662704, 0.039000000804662704, 0.039000000804662704]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [37, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0, 0], [0, 0, 1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 6, 5, 3, 2, 0, 4, 2, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, sigma))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, alpha))", "other_info": {"loss": [2.3030516387701128, 2.3016917033517332, 2.301831378660906, 2.302353762679679, 2.3014321481830424, 2.3006548538593456], "accuracy": [0.08757099509239197, 0.09708096832036972, 0.09060890227556229, 0.09047681838274002, 0.09245806187391281, 0.09126931428909302], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [47, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 5, 4, 2, 2, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.3030516387701128, 2.3016917033517332, 2.301831378660906, 2.302353762679679, 2.3014321481830424, 2.3006548538593456], "accuracy": [0.08757099509239197, 0.09708096832036972, 0.09060890227556229, 0.09047681838274002, 0.09245806187391281, 0.09126931428909302], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0], [2, 1, 5, 1, 4, 3, 4, 1, 5, 7, 1, 9, 9], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50, 79, 83], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [4, 6, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 1, 0, 0, 1], [0, 0, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 7, 7, 2, 6, 4, 3, 1, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))))), tf.math.negative(grad)), tf.math.divide_no_nan(tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3030516387701128, 2.3016917033517332, 2.301831378660906, 2.302353762679679, 2.3014321481830424, 2.3006548538593456], "accuracy": [0.08757099509239197, 0.09708096832036972, 0.09060890227556229, 0.09047681838274002, 0.09245806187391281, 0.09126931428909302], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]