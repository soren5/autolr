[{"genotype": [[0], [1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 1, 7, 8, 3, 2, 2, 8, 1, 0, 8, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 2, 1, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 74, 59, 56, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 2, 7, 4, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [2, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [49, 9, 43, 71, 34]], "fitness": -0.8151428699493408, "mapping_values": [1, 23, 23, 13, 10, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, grad), alpha), tf.math.sqrt(tf.math.add(alpha, grad)))), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)))))))), tf.math.multiply(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, grad))), alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.negative(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1880526542663574, 1.9134517908096313, 1.5099260807037354, 1.049373984336853, 0.9252834916114807, 0.7978948354721069, 0.7165459394454956, 0.6741360425949097, 0.6504964828491211, 0.5999849438667297, 0.6234292984008789, 0.5955607891082764, 0.5468608736991882, 0.5573222637176514, 0.5334106087684631, 0.5213016271591187, 0.49909284710884094, 0.4967416822910309, 0.4808831810951233, 0.4787839949131012, 0.462200790643692, 0.45536842942237854, 0.4532875120639801, 0.44519537687301636, 0.4170394539833069, 0.45577946305274963, 0.4127754271030426, 0.41374868154525757, 0.41059643030166626, 0.40182527899742126, 0.39639443159103394, 0.3910663425922394, 0.3699361979961395], "accuracy": [0.2487121969461441, 0.363360196352005, 0.4830273389816284, 0.6375643610954285, 0.6572447419166565, 0.6963412761688232, 0.7300224304199219, 0.7416457533836365, 0.754589855670929, 0.7755910754203796, 0.7622507214546204, 0.7779685854911804, 0.7968564033508301, 0.7938185334205627, 0.8005547523498535, 0.8080834746360779, 0.8190463781356812, 0.8157442808151245, 0.8210275769233704, 0.8171972036361694, 0.8302733898162842, 0.832650899887085, 0.8350284099578857, 0.8339717388153076, 0.848368763923645, 0.8323867321014404, 0.8467837572097778, 0.846387505531311, 0.8512746095657349, 0.8498216867446899, 0.8516708612442017, 0.8555012345314026, 0.8639545440673828], "val_loss": [2.0499799251556396, 1.7483733892440796, 0.9376187324523926, 0.8050845265388489, 0.7143158912658691, 0.6499894857406616, 0.6606015563011169, 0.6241047978401184, 0.5625190734863281, 0.6428245306015015, 0.5262668132781982, 0.5162700414657593, 0.5545657277107239, 0.5303292870521545, 0.5851439237594604, 0.48466458916664124, 0.45458152890205383, 0.47419291734695435, 0.4743611514568329, 0.5122580528259277, 0.4582996368408203, 0.4211495816707611, 0.43376651406288147, 0.4095888137817383, 0.5464144349098206, 0.4158453643321991, 0.44285863637924194, 0.407418429851532, 0.4383890926837921, 0.4244934916496277, 0.443388432264328, 0.41778600215911865, 0.4478859007358551], "val_accuracy": [0.31466665863990784, 0.5196666717529297, 0.6733333468437195, 0.6893333196640015, 0.7193333506584167, 0.75, 0.7426666617393494, 0.7513333559036255, 0.781000018119812, 0.7476666569709778, 0.8066666722297668, 0.7943333387374878, 0.7746666669845581, 0.8019999861717224, 0.7723333239555359, 0.8103333115577698, 0.8370000123977661, 0.8066666722297668, 0.8166666626930237, 0.8006666898727417, 0.8293333053588867, 0.8496666550636292, 0.843666672706604, 0.8523333072662354, 0.8103333115577698, 0.8479999899864197, 0.8343333601951599, 0.8560000061988831, 0.8356666564941406, 0.8443333506584167, 0.8349999785423279, 0.8473333120346069, 0.8433333039283752]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 1, 7, 8, 3, 2, 2, 8, 1, 8, 8, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 0, 2, 2, 1, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 50, 59, 56, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [1, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 2, 7, 4, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [2, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [57, 9, 43, 71, 34]], "fitness": -0.798285722732544, "mapping_values": [1, 23, 23, 15, 8, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(grad, tf.math.sqrt(tf.math.add(alpha, grad))), alpha), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(alpha, grad))), grad))))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2689385414123535, 2.2425143718719482, 2.185716152191162, 2.2271103858947754, 2.250609874725342, 2.284355640411377, 2.2999606132507324, 2.071737289428711, 1.558039665222168, 1.3040978908538818, 0.9580135941505432, 0.9285471439361572, 0.8209409713745117, 0.7822186946868896, 0.7171552181243896, 0.6898031234741211, 0.6740448474884033, 0.6446362733840942, 0.653422474861145, 0.602024495601654, 0.6252381205558777, 0.5906684994697571, 0.6113871335983276, 0.5652523040771484, 0.5288349986076355, 0.5599514842033386, 0.5273941159248352, 0.5147508978843689, 0.5059512257575989, 0.5027502179145813, 0.47669604420661926, 0.4709990322589874, 0.463716983795166, 0.4809248149394989, 0.46734729409217834, 0.4344915747642517, 0.4384913742542267, 0.43355825543403625, 0.41948992013931274, 0.4314654469490051, 0.3986233174800873, 0.39728808403015137, 0.3901461064815521, 0.3893895149230957, 0.389835923910141, 0.3827378451824188, 0.3848477602005005, 0.3716900050640106], "accuracy": [0.21595561504364014, 0.24237221479415894, 0.19719983637332916, 0.19257694482803345, 0.186104878783226, 0.16536785662174225, 0.12032756209373474, 0.29045039415359497, 0.48527276515960693, 0.5721833109855652, 0.6637167930603027, 0.6724342703819275, 0.71100252866745, 0.7173424959182739, 0.7276449799537659, 0.7423061728477478, 0.750231146812439, 0.7633073329925537, 0.7524765729904175, 0.7765156626701355, 0.7700436115264893, 0.7791573405265808, 0.7729493975639343, 0.7874785661697388, 0.8092722296714783, 0.7902522683143616, 0.8090080618858337, 0.8074230551719666, 0.8123101592063904, 0.8128384351730347, 0.8161405324935913, 0.8274996876716614, 0.8290846943855286, 0.8181217908859253, 0.8219521641731262, 0.8384625315666199, 0.839519202709198, 0.8380662798881531, 0.8448025584220886, 0.8399154543876648, 0.846387505531311, 0.8500858545303345, 0.8561616539955139, 0.8507462739944458, 0.8543124794960022, 0.8578787446022034, 0.8544445633888245, 0.86118084192276], "val_loss": [2.07043194770813, 1.9766134023666382, 2.3011579513549805, 1.8751710653305054, 2.300365447998047, 2.3062562942504883, 2.2491073608398438, 2.048189401626587, 1.0078272819519043, 0.8197849988937378, 0.9318385124206543, 0.8161661624908447, 0.6854296326637268, 0.6016141176223755, 0.6134303212165833, 0.589759111404419, 0.5984175205230713, 0.5509302020072937, 0.5664869546890259, 0.5764026045799255, 0.5194552540779114, 0.5358065366744995, 0.5864406228065491, 0.4640229344367981, 0.5708571672439575, 0.4892211854457855, 0.5025417804718018, 0.4570745527744293, 0.502012312412262, 0.4570605456829071, 0.44456273317337036, 0.4618120789527893, 0.46380195021629333, 0.43357133865356445, 0.46484845876693726, 0.4271279573440552, 0.4489865303039551, 0.45480525493621826, 0.42627206444740295, 0.45839571952819824, 0.41004395484924316, 0.4003326892852783, 0.40284398198127747, 0.4398041069507599, 0.3971320390701294, 0.38898617029190063, 0.38691622018814087, 0.4069088399410248], "val_accuracy": [0.17933332920074463, 0.23733332753181458, 0.1003333330154419, 0.4193333387374878, 0.10300000011920929, 0.10133333504199982, 0.3316666781902313, 0.36000001430511475, 0.6046666502952576, 0.6976666450500488, 0.6726666688919067, 0.7193333506584167, 0.7416666746139526, 0.7643333077430725, 0.7689999938011169, 0.7793333530426025, 0.7633333206176758, 0.7820000052452087, 0.7913333177566528, 0.7616666555404663, 0.8029999732971191, 0.7820000052452087, 0.7883333563804626, 0.8223333358764648, 0.7773333191871643, 0.824999988079071, 0.809333324432373, 0.8240000009536743, 0.796999990940094, 0.8220000267028809, 0.8363333344459534, 0.8306666612625122, 0.8309999704360962, 0.8370000123977661, 0.8246666789054871, 0.8460000157356262, 0.8349999785423279, 0.8316666483879089, 0.8460000157356262, 0.8303333520889282, 0.8519999980926514, 0.8450000286102295, 0.8616666793823242, 0.8293333053588867, 0.8519999980926514, 0.8550000190734863, 0.8573333621025085, 0.8516666889190674]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 1, 7, 8, 3, 2, 2, 8, 1, 8, 8, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 0, 2, 2, 1, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 68, 59, 56, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [1, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 2, 7, 4, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [2, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [49, 9, 43, 71, 34]], "fitness": -0.7882857322692871, "mapping_values": [1, 18, 18, 10, 8, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), grad), tf.math.sqrt(tf.math.add(alpha, grad)))), alpha))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))))), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.negative(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.461897134780884, 2.3032965660095215, 2.298306703567505, 2.1968510150909424, 1.6869877576828003, 1.4643691778182983, 1.1268781423568726, 1.0195220708847046, 1.01460862159729, 0.9070139527320862, 0.8457273244857788, 0.8003140687942505, 0.781247079372406, 0.7535781860351562, 0.705973744392395, 0.6713292002677917, 0.657018780708313, 0.6320028901100159, 0.6252288222312927, 0.5845093727111816, 0.5750016570091248, 0.608628511428833, 0.5427988171577454, 0.5706150531768799, 0.541957676410675, 0.5448033809661865, 0.5228490233421326, 0.4871160089969635, 0.49827349185943604], "accuracy": [0.23312640190124512, 0.10077928751707077, 0.1216483935713768, 0.20631356537342072, 0.4076079726219177, 0.4986131191253662, 0.5921278595924377, 0.6262052655220032, 0.6284506916999817, 0.6627922058105469, 0.681547999382019, 0.7018887996673584, 0.7087571024894714, 0.7190595865249634, 0.7376832365989685, 0.7460044622421265, 0.7467969655990601, 0.763967752456665, 0.7619865536689758, 0.7874785661697388, 0.7861577272415161, 0.7651565074920654, 0.8054417967796326, 0.7837802171707153, 0.798309326171875, 0.7961959838867188, 0.8108572363853455, 0.8252542614936829, 0.8185180425643921], "val_loss": [2.3035202026367188, 2.3002474308013916, 2.288581609725952, 1.8093056678771973, 1.2833727598190308, 1.0516108274459839, 0.8895573616027832, 1.0586918592453003, 0.9435056447982788, 0.7372310161590576, 0.6824713349342346, 0.7297684550285339, 0.6868178844451904, 0.6129515171051025, 0.6279649138450623, 0.6390414834022522, 0.5771813988685608, 0.6328364610671997, 0.5800990462303162, 0.5361144542694092, 0.5703278183937073, 0.5582152605056763, 0.49836498498916626, 0.46545150876045227, 0.5570945739746094, 0.4756694734096527, 0.4656427800655365, 0.4526219964027405, 0.5756441354751587], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.21699999272823334, 0.4483333230018616, 0.46799999475479126, 0.6213333606719971, 0.6859999895095825, 0.5933333039283752, 0.6213333606719971, 0.6980000138282776, 0.7549999952316284, 0.7283333539962769, 0.7179999947547913, 0.7713333368301392, 0.7606666684150696, 0.746666669845581, 0.7896666526794434, 0.750333309173584, 0.7903333306312561, 0.7923333048820496, 0.777999997138977, 0.7976666688919067, 0.8136666417121887, 0.8289999961853027, 0.7873333096504211, 0.8230000138282776, 0.8240000009536743, 0.824999988079071, 0.777999997138977]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 1, 7, 2, 3, 0, 2, 8, 1, 8, 8, 0, 3, 5, 6, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 1, 2, 2, 2, 1, 2, 1, 2, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 50, 32, 56, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [1, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 2, 7, 4, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [2, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [19, 9, 43, 71, 34]], "fitness": -0.6825714111328125, "mapping_values": [1, 14, 14, 7, 7, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.subtract(tf.math.add(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))))), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.negative(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.300459623336792, 2.2963809967041016, 2.2916033267974854, 2.2874035835266113, 2.2840826511383057, 2.2801573276519775, 2.2745652198791504, 2.2716031074523926, 2.265876054763794, 2.260057210922241, 2.2589573860168457, 2.2504360675811768, 2.24627947807312, 2.24054217338562, 2.2348825931549072, 2.2286038398742676, 2.223527669906616, 2.217740535736084, 2.21105694770813, 2.2053260803222656, 2.195894718170166, 2.189831256866455, 2.1827945709228516, 2.171724796295166, 2.163267135620117, 2.1529393196105957, 2.1443824768066406, 2.134324789047241, 2.1217336654663086, 2.111440658569336, 2.098813056945801, 2.084434747695923, 2.0713791847229004, 2.0570716857910156, 2.0395963191986084, 2.0259392261505127, 2.0059399604797363, 1.9889633655548096, 1.9780972003936768, 1.9549272060394287, 1.9360872507095337, 1.9152402877807617, 1.8971030712127686, 1.8751240968704224, 1.8565996885299683, 1.8346056938171387, 1.8110837936401367, 1.7990742921829224, 1.767660140991211, 1.7495014667510986, 1.728641390800476, 1.7039477825164795, 1.6772043704986572, 1.6623138189315796, 1.6368178129196167, 1.6147373914718628, 1.5974177122116089, 1.5778895616531372, 1.5594481229782104, 1.5440173149108887, 1.5182619094848633, 1.4946876764297485, 1.4828522205352783, 1.459215521812439, 1.4512674808502197, 1.4299598932266235, 1.4193650484085083, 1.3961775302886963, 1.3803985118865967, 1.3670654296875, 1.3531166315078735, 1.3461668491363525, 1.3306005001068115, 1.3152413368225098, 1.3096414804458618, 1.299191951751709, 1.294736385345459, 1.2728188037872314, 1.2588112354278564, 1.2513962984085083, 1.2362823486328125, 1.2321059703826904, 1.2230058908462524, 1.2167848348617554, 1.2072627544403076, 1.212701439857483, 1.190150260925293, 1.182354211807251, 1.1763674020767212, 1.1715973615646362, 1.1651690006256104, 1.1529037952423096, 1.1467349529266357, 1.1366493701934814, 1.130178689956665, 1.1186797618865967, 1.1171265840530396, 1.113630771636963, 1.106481671333313, 1.0968894958496094], "accuracy": [0.0940430611371994, 0.10936468094587326, 0.11411966383457184, 0.12442214041948318, 0.13617752492427826, 0.14793290197849274, 0.1640470176935196, 0.17553824186325073, 0.18623696267604828, 0.19653943181037903, 0.20182274281978607, 0.2242768406867981, 0.23616431653499603, 0.2390701323747635, 0.25716549158096313, 0.26258090138435364, 0.27327960729599, 0.2864879071712494, 0.29322415590286255, 0.2949412167072296, 0.3121120035648346, 0.3127724230289459, 0.3237352967262268, 0.33443403244018555, 0.3343019485473633, 0.3469819128513336, 0.34381189942359924, 0.3556993901729584, 0.3626997768878937, 0.3611147701740265, 0.36586976051330566, 0.38422930240631104, 0.3811914026737213, 0.3910976052284241, 0.4017963409423828, 0.40047550201416016, 0.4177783727645874, 0.4216087758541107, 0.41289129853248596, 0.4220050275325775, 0.4295337498188019, 0.43983620405197144, 0.4430062174797058, 0.44327038526535034, 0.4403645396232605, 0.447761207818985, 0.45410117506980896, 0.4465724527835846, 0.4567428231239319, 0.46427157521247864, 0.4699511229991913, 0.4795931875705719, 0.4897635579109192, 0.4839519262313843, 0.4934619069099426, 0.49848103523254395, 0.4913485646247864, 0.4979526996612549, 0.4974243938922882, 0.5036323070526123, 0.5110289454460144, 0.5229163765907288, 0.5177651643753052, 0.525029718875885, 0.5159159898757935, 0.5336151123046875, 0.5258222222328186, 0.5344076156616211, 0.5436534285545349, 0.5507858991622925, 0.5531634092330933, 0.5550125241279602, 0.5536917448043823, 0.5597675442695618, 0.5546162724494934, 0.5576542019844055, 0.5527671575546265, 0.5653150081634521, 0.5694096088409424, 0.5766741633415222, 0.5786554217338562, 0.5793157815933228, 0.5752212405204773, 0.5802403688430786, 0.5830141305923462, 0.5766741633415222, 0.5810328722000122, 0.5923920273780823, 0.5970149040222168, 0.5905428528785706, 0.5901466012001038, 0.5978074073791504, 0.598599910736084, 0.6057323813438416, 0.6024303436279297, 0.609430730342865, 0.6144498586654663, 0.6041474342346191, 0.6151102781295776, 0.6159027814865112], "val_loss": [2.295297145843506, 2.2905983924865723, 2.2858951091766357, 2.281275510787964, 2.2765696048736572, 2.271862030029297, 2.267061233520508, 2.2622480392456055, 2.257289171218872, 2.252185583114624, 2.247002363204956, 2.24149227142334, 2.2358834743499756, 2.2300543785095215, 2.223931312561035, 2.217520236968994, 2.210891008377075, 2.203946352005005, 2.196577787399292, 2.1888461112976074, 2.1806139945983887, 2.1720008850097656, 2.162909984588623, 2.1532275676727295, 2.1430368423461914, 2.1323108673095703, 2.1209897994995117, 2.1090946197509766, 2.0965867042541504, 2.0833609104156494, 2.0695295333862305, 2.054879903793335, 2.0394952297210693, 2.023430347442627, 2.0065701007843018, 1.9889615774154663, 1.970354437828064, 1.9510338306427002, 1.9313021898269653, 1.910487413406372, 1.8887752294540405, 1.8664013147354126, 1.8436181545257568, 1.8202310800552368, 1.796415090560913, 1.7720506191253662, 1.7471959590911865, 1.722601056098938, 1.6971713304519653, 1.6718299388885498, 1.6462829113006592, 1.6206048727035522, 1.5947749614715576, 1.5693773031234741, 1.5439298152923584, 1.5188748836517334, 1.4943108558654785, 1.4701591730117798, 1.4464454650878906, 1.4236547946929932, 1.4011458158493042, 1.3790702819824219, 1.3579621315002441, 1.3368940353393555, 1.317144751548767, 1.2976391315460205, 1.2794132232666016, 1.2612987756729126, 1.2441562414169312, 1.2273437976837158, 1.2113767862319946, 1.1958796977996826, 1.180989384651184, 1.1662952899932861, 1.152727484703064, 1.1394951343536377, 1.1270002126693726, 1.1146043539047241, 1.1027247905731201, 1.091096043586731, 1.0800960063934326, 1.0692722797393799, 1.0592197179794312, 1.0494871139526367, 1.0399377346038818, 1.0314233303070068, 1.0225403308868408, 1.0139305591583252, 1.0055651664733887, 0.9977074265480042, 0.9900553226470947, 0.9828043580055237, 0.9756829142570496, 0.9684798121452332, 0.961656928062439, 0.9550068378448486, 0.9484880566596985, 0.9422522187232971, 0.9362728595733643, 0.9302577376365662], "val_accuracy": [0.06133333221077919, 0.09600000083446503, 0.13633333146572113, 0.1743333339691162, 0.21066667139530182, 0.24933333694934845, 0.2853333353996277, 0.31033334136009216, 0.3310000002384186, 0.3479999899864197, 0.36800000071525574, 0.3786666691303253, 0.3863333463668823, 0.3943333327770233, 0.4059999883174896, 0.41200000047683716, 0.4206666648387909, 0.42933332920074463, 0.4359999895095825, 0.4426666796207428, 0.4490000009536743, 0.45633333921432495, 0.46266666054725647, 0.46933332085609436, 0.4736666679382324, 0.47733333706855774, 0.48366665840148926, 0.4906666576862335, 0.49399998784065247, 0.5, 0.5063333511352539, 0.5146666765213013, 0.5206666588783264, 0.5260000228881836, 0.5299999713897705, 0.5339999794960022, 0.5403333306312561, 0.5433333516120911, 0.546999990940094, 0.5526666641235352, 0.5556666851043701, 0.5583333373069763, 0.5619999766349792, 0.5649999976158142, 0.5686666369438171, 0.5713333487510681, 0.5716666579246521, 0.5759999752044678, 0.5776666402816772, 0.5806666612625122, 0.5839999914169312, 0.5866666436195374, 0.5929999947547913, 0.5950000286102295, 0.5996666550636292, 0.6006666421890259, 0.6023333072662354, 0.6053333282470703, 0.6079999804496765, 0.6133333444595337, 0.6176666617393494, 0.6213333606719971, 0.6273333430290222, 0.6320000290870667, 0.6383333206176758, 0.6439999938011169, 0.6476666927337646, 0.6503333449363708, 0.6539999842643738, 0.656333327293396, 0.6576666831970215, 0.6589999794960022, 0.659333348274231, 0.6623333096504211, 0.6636666655540466, 0.6660000085830688, 0.6673333048820496, 0.6703333258628845, 0.6706666946411133, 0.6736666560173035, 0.6723333597183228, 0.6743333339691162, 0.6756666898727417, 0.6786666512489319, 0.6796666383743286, 0.6823333501815796, 0.6826666593551636, 0.6850000023841858, 0.6856666803359985, 0.6883333325386047, 0.6880000233650208, 0.687666654586792, 0.6896666884422302, 0.6909999847412109, 0.690666675567627, 0.6916666626930237, 0.6930000185966492, 0.6949999928474426, 0.6946666836738586, 0.6956666707992554]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 1, 1, 6, 3, 2, 2, 8, 1, 8, 8, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 2, 2, 2, 0, 2, 0, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 74, 59, 56, 8, 79, 86, 52, 44], [1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 2, 7, 4, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [2, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [49, 9, 43, 71, 34]], "fitness": -0.17914286255836487, "mapping_values": [1, 22, 22, 12, 10, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.math.subtract(tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(grad, grad), tf.math.sqrt(tf.math.add(alpha, grad)))), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))))))), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), alpha))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.negative(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.9425675868988037, 2.456984281539917, 2.3296098709106445, 2.4206011295318604, 2.905518054962158, 2.3372554779052734, 2.3969292640686035, 2.3365468978881836], "accuracy": [0.2417117953300476, 0.16074495017528534, 0.11253467202186584, 0.19997358322143555, 0.14238542318344116, 0.10342095047235489, 0.09972262382507324, 0.10593052208423615], "val_loss": [2.300446033477783, 2.3558132648468018, 2.1177148818969727, 4.483756065368652, 2.375112771987915, 2.400435447692871, 2.3397269248962402, 2.378216505050659], "val_accuracy": [0.13766667246818542, 0.1003333330154419, 0.21966665983200073, 0.20733332633972168, 0.10133333504199982, 0.10066666454076767, 0.09300000220537186, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 1, 7, 8, 5, 2, 2, 8, 1, 8, 8, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 2, 2, 2, 1, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 74, 59, 56, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [3, 2, 3, 2, 7, 4, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 2, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [19, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 29, 16, 13, 3], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.add(alpha, grad)))), tf.math.square(tf.math.add(alpha, tf.math.add(grad, tf.math.add(tf.math.add(alpha, tf.math.sqrt(alpha)), tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.sqrt(grad)))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.add(tf.math.multiply(beta, tf.math.add(tf.math.add(sigma, beta), tf.math.pow(beta, tf.math.multiply(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), alpha)))), tf.math.subtract(tf.math.pow(tf.math.multiply(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), alpha), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.negative(sigma), tf.math.add(tf.math.sqrt(tf.math.divide_no_nan(beta, beta)), sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 8, 7, 2, 3, 2, 2, 8, 1, 8, 8, 0, 3, 5, 6, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 1, 2, 2, 1, 2, 0, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 50, 59, 56, 8, 79, 86, 52, 44], [1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [6, 0, 3, 6, 7, 4, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [2, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [49, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 37, 37, 24, 13, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 71, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, alpha), tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(alpha, tf.math.add(grad, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))))))))))))))))))))))), tf.math.add(alpha, alpha))))), grad), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(beta, tf.math.negative(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [Infinity, 3.8162617683410645, 3.494455337524414, 3.426661491394043, 3.5555145740509033, 3.783937692642212, 3.44553279876709], "accuracy": [0.17038699984550476, 0.09945846349000931, 0.09919429570436478, 0.09959053993225098, 0.09945846349000931, 0.10130762308835983, 0.09998679161071777], "val_loss": [3.6554644107818604, 3.0464229583740234, 3.1965670585632324, 4.053246021270752, 3.252089738845825, 3.508143901824951, 3.556412696838379], "val_accuracy": [0.1003333330154419, 0.10266666859388351, 0.1003333330154419, 0.10133333504199982, 0.1003333330154419, 0.10133333504199982, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 1, 1, 8, 3, 2, 8, 8, 1, 0, 8, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 2, 2, 2, 1, 0, 2, 0, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 68, 59, 56, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [1, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 2, 7, 4, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [1, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [29, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 18, 11, 7, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, grad)), grad)), tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))))), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 1, 7, 8, 9, 2, 2, 8, 8, 8, 8, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 0, 1, 2, 1, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 50, 59, 56, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [1, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 2, 7, 4, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [2, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [19, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 10, 5, 2, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.subtract(tf.math.add(tf.math.sqrt(tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(grad)))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.negative(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.307544469833374, 2.345170497894287, 2.444646120071411, 2.7872061729431152, 9.245550155639648, 1.4191273242634745e+28, 2.3093833923339844, 2.3227410316467285, 2.3459553718566895, 2.3820738792419434, 2.438284158706665], "accuracy": [0.07779685407876968, 0.03222823888063431, 0.01241579744964838, 0.00713247898966074, 0.03671905770897865, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3220179080963135, 2.389805793762207, 2.5581650733947754, 3.4380366802215576, 59.817386627197266, NaN, 2.3172097206115723, 2.336228132247925, 2.366868734359741, 2.4140079021453857, 2.4851415157318115], "val_accuracy": [0.006000000052154064, 0.003000000026077032, 0.005333333276212215, 0.008666666224598885, 0.0976666659116745, 0.10199999809265137, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 2, 7, 8, 3, 2, 2, 8, 0, 8, 8, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 0, 2, 2, 1, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 68, 59, 56, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [1, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [2, 0, 3, 2, 7, 4, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [49, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, grad), grad), tf.math.add(tf.math.add(alpha, alpha), tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad)))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [132063320.0, 2540199168.0, 11868194816.0, 32914284544.0, 71036567552.0, 130040545280.0], "accuracy": [0.10593052208423615, 0.09959053993225098, 0.09602430462837219, 0.10077928751707077, 0.09760929644107819, 0.10276053100824356], "val_loss": [587878784.0, 4700070400.0, 15859385344.0, 37588676608.0, 73410822144.0, 126848786432.0], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 3, 4, 3, 2, 3, 8, 9, 2, 0, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 2, 2, 2, 0, 2, 0, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 50, 59, 56, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [7, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [2, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [6, 0, 3, 6, 7, 4, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [23, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 4, 2, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [5883876605952.0, 113293335199744.0, 529484004458496.0, 1468628230733824.0, 3170009597607936.0, 5803214318338048.0], "accuracy": [0.10593052208423615, 0.09985470771789551, 0.09589222073554993, 0.10077928751707077, 0.09747721254825592, 0.1026284471154213], "val_loss": [26208202915840.0, 209662636982272.0, 707605928345600.0, 1677178957725696.0, 3275963756445696.0, 5660445847322624.0], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 1, 1, 8, 3, 2, 2, 8, 1, 1, 8, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 2, 1, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 68, 59, 56, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 2, 7, 4, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [49, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 24, 24, 14, 10, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 14, 7, 7, 2], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, grad), alpha), tf.math.sqrt(tf.math.add(alpha, grad)))), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.sqrt(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, grad))), alpha))))))), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(sigma, beta), tf.math.pow(beta, tf.math.multiply(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), alpha))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 1, 7, 8, 3, 2, 2, 8, 1, 8, 8, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 2, 1, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 68, 59, 56, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [1, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 3, 2, 7, 4, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [2, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [60, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 8, 7, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(grad, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, alpha), grad), tf.math.add(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), grad)))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.math.negative(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3026363849639893, 2.302391529083252, 2.3030707836151123, 2.305659055709839, 2.3186938762664795, 2.3820114135742188, 2.7649900913238525], "accuracy": [0.10236428678035736, 0.10328886657953262, 0.10328886657953262, 0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3028368949890137, 2.303377389907837, 2.3050920963287354, 2.3124637603759766, 2.3439300060272217, 2.503059148788452, 3.6118314266204834], "val_accuracy": [0.09300000220537186, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [6, 2, 2, 8, 1, 2, 3, 8, 1, 4, 8, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 1, 2, 2, 0, 2, 0, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [37, 50, 59, 56, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [8, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [1, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [2, 0, 3, 2, 7, 4, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [2, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [23, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.math.negative(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 1, 7, 8, 3, 2, 2, 8, 1, 8, 8, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 0, 2, 2, 1, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 68, 59, 56, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [1, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [5, 0, 3, 2, 7, 4, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [2, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [49, 9, 43, 71, 34]], "fitness": -0.07800000160932541, "mapping_values": [1, 23, 23, 13, 10, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, alpha)), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.add(alpha, grad), grad)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), grad), tf.math.multiply(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(beta)", "other_info": {"loss": [2.3018312454223633, 2.3012492656707764, 2.3004567623138428, 2.300159215927124, 2.3008031845092773, 2.301032543182373, 2.2999916076660156, 2.3005242347717285, 2.2998616695404053, 2.298710584640503, 2.3003921508789062, 2.2993836402893066, 2.2994697093963623, 2.300048589706421, 2.299964189529419, 2.299448251724243, 2.2998111248016357, 2.300774097442627, 2.300518751144409, 2.300978422164917, 2.300769805908203], "accuracy": [0.09034473448991776, 0.09721305221319199, 0.09470347315073013, 0.09192973375320435, 0.09219389408826828, 0.08994849026203156, 0.09853387624025345, 0.10328886657953262, 0.09642054885625839, 0.09668471664190292, 0.09760929644107819, 0.10196803510189056, 0.09774138033390045, 0.09113723784685135, 0.10157178342342377, 0.09893012791872025, 0.10077928751707077, 0.10196803510189056, 0.1010434553027153, 0.09377889335155487, 0.0948355570435524], "val_loss": [2.299156665802002, 2.2986068725585938, 2.2983288764953613, 2.2982332706451416, 2.2981295585632324, 2.298079490661621, 2.2980706691741943, 2.2978975772857666, 2.2978649139404297, 2.298008441925049, 2.2980990409851074, 2.298475503921509, 2.2987751960754395, 2.299077033996582, 2.299337387084961, 2.2995481491088867, 2.299787759780884, 2.299992561340332, 2.300170660018921, 2.3003506660461426, 2.300477981567383], "val_accuracy": [0.044333335012197495, 0.04800000041723251, 0.052000001072883606, 0.0533333346247673, 0.0573333315551281, 0.06266666948795319, 0.06466666609048843, 0.07000000029802322, 0.0729999989271164, 0.07333333045244217, 0.07533333450555801, 0.07333333045244217, 0.07533333450555801, 0.07566666603088379, 0.07466666400432587, 0.07599999755620956, 0.07366666942834854, 0.07366666942834854, 0.0729999989271164, 0.0716666653752327, 0.07000000029802322]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 2, 7, 8, 5, 2, 2, 8, 1, 2, 8, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 2, 1, 2, 0, 2, 2, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 74, 59, 56, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [1, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 2, 7, 4, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [19, 9, 43, 71, 34]], "fitness": -0.04114285856485367, "mapping_values": [1, 24, 24, 16, 8, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, grad)))))))))), tf.math.multiply(tf.math.multiply(tf.math.add(alpha, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad)), grad)))), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3022584915161133, 2.3025341033935547, 2.3021891117095947, 2.3020949363708496, 2.303346633911133, 2.303595542907715], "accuracy": [0.08928807079792023, 0.09430722147226334, 0.08730682730674744, 0.08889182657003403, 0.08849557489156723, 0.08268392831087112], "val_loss": [2.300058603286743, 2.300058603286743, 2.300058603286743, 2.300058603286743, 2.300058603286743, 2.300058603286743], "val_accuracy": [0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 1, 7, 8, 3, 2, 2, 8, 4, 8, 0, 3, 3, 9, 1, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 0, 2, 2, 1, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [49, 68, 59, 56, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [1, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 3, 3, 2, 7, 4, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [2, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [49, 9, 43, 71, 34]], "fitness": -0.04114285856485367, "mapping_values": [1, 5, 5, 2, 3, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.3022584915161133, 2.3025341033935547, 2.3021891117095947, 2.3020949363708496, 2.303346633911133, 2.303595542907715], "accuracy": [0.08928807079792023, 0.09430722147226334, 0.08730682730674744, 0.08889182657003403, 0.08849557489156723, 0.08268392831087112], "val_loss": [2.300058603286743, 2.300058603286743, 2.300058603286743, 2.300058603286743, 2.300058603286743, 2.300058603286743], "val_accuracy": [0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 1, 1, 6, 3, 2, 2, 4, 1, 8, 8, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 2, 1, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 68, 59, 56, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [1, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 2, 7, 4, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 1, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [49, 9, 43, 71, 34]], "fitness": -0.04114285856485367, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(alpha))", "other_info": {"loss": [2.3022584915161133, 2.3025341033935547, 2.3021891117095947, 2.3020949363708496, 2.303346633911133, 2.303595542907715], "accuracy": [0.08928807079792023, 0.09430722147226334, 0.08730682730674744, 0.08889182657003403, 0.08849557489156723, 0.08268392831087112], "val_loss": [2.300058603286743, 2.300058603286743, 2.300058603286743, 2.300058603286743, 2.300058603286743, 2.300058603286743], "val_accuracy": [0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 3, 4, 3, 2, 3, 8, 9, 2, 0, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 2, 2, 2, 0, 2, 0, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [37, 50, 59, 56, 8, 79, 86, 52, 44], [1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [5, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [1, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 6, 7, 4, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [2, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [23, 9, 43, 71, 34]], "fitness": -0.04114285856485367, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.negative(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302253484725952, 2.30251145362854, 2.302170991897583, 2.3022122383117676, 2.3048946857452393, 2.306020498275757], "accuracy": [0.08928807079792023, 0.09417514503002167, 0.08875974267721176, 0.0878351628780365, 0.08466517180204391, 0.07819310575723648], "val_loss": [2.300046443939209, 2.300039768218994, 2.3001039028167725, 2.3005409240722656, 2.302203893661499, 2.303727388381958], "val_accuracy": [0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.036666665226221085, 0.033666666597127914, 0.02500000037252903]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 3, 4, 3, 2, 3, 8, 9, 2, 0, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 2, 1, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [37, 50, 59, 56, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 6, 7, 4, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [23, 9, 43, 71, 34]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302363395690918, 2.302870988845825, 2.3027939796447754, 2.302974224090576, 2.3047127723693848, 2.3052659034729004], "accuracy": [0.08915598690509796, 0.09470347315073013, 0.08770307898521423, 0.08611807972192764, 0.08532558381557465, 0.0816272646188736], "val_loss": [2.300248384475708, 2.3004424571990967, 2.3006393909454346, 2.300837516784668, 2.3010482788085938, 2.301269769668579], "val_accuracy": [0.035999998450279236, 0.03400000184774399, 0.03133333474397659, 0.028333334252238274, 0.027000000700354576, 0.025333333760499954]}}]