[{"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [69, 47, 50]], "fitness": -0.7922857403755188, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.074664733492073, 1.6602847314450908, 1.1403695976634964, 0.9447461218960518, 0.7962685261089505, 0.7535526277744664, 0.7204885025223438, 0.6558827278069564, 0.6812018629519254, 0.6158493037126823, 0.5774964897655588, 0.5964862455025546, 0.6065533559918482, 0.550470015797491, 0.5358987443986555, 0.5107919640308672, 0.5056281236215999], "accuracy": [0.31779158115386963, 0.4497424364089966, 0.6009774208068848, 0.6498481035232544, 0.7043983340263367, 0.7123233675956726, 0.7285695672035217, 0.750759482383728, 0.7421740889549255, 0.7621186375617981, 0.7788931727409363, 0.7738739848136902, 0.7714964747428894, 0.7936864495277405, 0.7988376617431641, 0.8074230551719666, 0.8109893202781677], "val_loss": [1.290057829448155, 1.2919414043426514, 0.6680587530136108, 0.6065608433314732, 0.5728086744035993, 0.5420122998101371, 0.5278786591121128, 0.5296261140278408, 0.49674510955810547, 0.5249582869665963, 0.5125897782189506, 0.43561542885644094, 0.4554018974304199, 0.433283942086356, 0.4273551617349897, 0.4694299357278006, 0.4397107107298715], "val_accuracy": [0.5563333630561829, 0.6023333072662354, 0.7023333311080933, 0.7253333330154419, 0.7379999756813049, 0.7546666860580444, 0.7609999775886536, 0.7563333511352539, 0.7793333530426025, 0.753333330154419, 0.7766666412353516, 0.8186666369438171, 0.7983333468437195, 0.8050000071525574, 0.8159999847412109, 0.7873333096504211, 0.7976666688919067]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [69, 47, 50]], "fitness": -0.7922857403755188, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.074664733492073, 1.6602847314450908, 1.1403695976634964, 0.9447461218960518, 0.7962685261089505, 0.7535526277744664, 0.7204885025223438, 0.6558827278069564, 0.6812018629519254, 0.6158493037126823, 0.5774964897655588, 0.5964862455025546, 0.6065533559918482, 0.550470015797491, 0.5358987443986555, 0.5107919640308672, 0.5056281236215999], "accuracy": [0.31779158115386963, 0.4497424364089966, 0.6009774208068848, 0.6498481035232544, 0.7043983340263367, 0.7123233675956726, 0.7285695672035217, 0.750759482383728, 0.7421740889549255, 0.7621186375617981, 0.7788931727409363, 0.7738739848136902, 0.7714964747428894, 0.7936864495277405, 0.7988376617431641, 0.8074230551719666, 0.8109893202781677], "val_loss": [1.290057829448155, 1.2919414043426514, 0.6680587530136108, 0.6065608433314732, 0.5728086744035993, 0.5420122998101371, 0.5278786591121128, 0.5296261140278408, 0.49674510955810547, 0.5249582869665963, 0.5125897782189506, 0.43561542885644094, 0.4554018974304199, 0.433283942086356, 0.4273551617349897, 0.4694299357278006, 0.4397107107298715], "val_accuracy": [0.5563333630561829, 0.6023333072662354, 0.7023333311080933, 0.7253333330154419, 0.7379999756813049, 0.7546666860580444, 0.7609999775886536, 0.7563333511352539, 0.7793333530426025, 0.753333330154419, 0.7766666412353516, 0.8186666369438171, 0.7983333468437195, 0.8050000071525574, 0.8159999847412109, 0.7873333096504211, 0.7976666688919067]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 0, 9, 9, 0], [3, 0, 0, 3, 1, 0], [5, 57, 34], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [69, 47, 50]], "fitness": -0.7922857403755188, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.074664733492073, 1.6602847314450908, 1.1403695976634964, 0.9447461218960518, 0.7962685261089505, 0.7535526277744664, 0.7204885025223438, 0.6558827278069564, 0.6812018629519254, 0.6158493037126823, 0.5774964897655588, 0.5964862455025546, 0.6065533559918482, 0.550470015797491, 0.5358987443986555, 0.5107919640308672, 0.5056281236215999], "accuracy": [0.31779158115386963, 0.4497424364089966, 0.6009774208068848, 0.6498481035232544, 0.7043983340263367, 0.7123233675956726, 0.7285695672035217, 0.750759482383728, 0.7421740889549255, 0.7621186375617981, 0.7788931727409363, 0.7738739848136902, 0.7714964747428894, 0.7936864495277405, 0.7988376617431641, 0.8074230551719666, 0.8109893202781677], "val_loss": [1.290057829448155, 1.2919414043426514, 0.6680587530136108, 0.6065608433314732, 0.5728086744035993, 0.5420122998101371, 0.5278786591121128, 0.5296261140278408, 0.49674510955810547, 0.5249582869665963, 0.5125897782189506, 0.43561542885644094, 0.4554018974304199, 0.433283942086356, 0.4273551617349897, 0.4694299357278006, 0.4397107107298715], "val_accuracy": [0.5563333630561829, 0.6023333072662354, 0.7023333311080933, 0.7253333330154419, 0.7379999756813049, 0.7546666860580444, 0.7609999775886536, 0.7563333511352539, 0.7793333530426025, 0.753333330154419, 0.7766666412353516, 0.8186666369438171, 0.7983333468437195, 0.8050000071525574, 0.8159999847412109, 0.7873333096504211, 0.7976666688919067]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [3, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 3, 0, 3, 0, 3, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0], [0, 8, 9, 3, 9], [1, 3, 3, 1], [69, 47, 50]], "fitness": -0.11828571557998657, "mapping_values": [1, 5, 5, 4, 1, 2, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [1870069501.092529, 1392735342.4678378, 586072058.1587636, 217270443.5577863, 110710400.8558975, 68176257.89248449, 39568606.898956545, 16578935.760533616, 12558442.538634263, 8757019.103189804, 4630371.251221768], "accuracy": [0.0952318087220192, 0.10421344637870789, 0.1006472036242485, 0.09602430462837219, 0.09179764986038208, 0.1212521493434906, 0.1224408894777298, 0.11768590658903122, 0.11491216719150543, 0.11359133571386337, 0.11372341960668564], "val_loss": [1134153654.857143, 649397924.5714285, 218574948.57142857, 115354121.14285715, 60009709.71428572, 35267378.28571428, 16480640.285714285, 11688062.57142857, 8811491.714285715, 6252888.714285715, 3543402.3571428573], "val_accuracy": [0.07366666942834854, 0.09433333575725555, 0.1106666699051857, 0.13199999928474426, 0.14666666090488434, 0.15133333206176758, 0.14133332669734955, 0.12933333218097687, 0.12433333694934845, 0.1223333328962326, 0.11999999731779099]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 2, 3, 1], [69, 98, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 2, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(alpha, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [3, 0, 0, 3, 1, 0], [12, 57], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 9, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [1, 3], [], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1], [0, 5, 9, 3, 9], [0, 3, 3, 1], [69, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 2, 2, 2, 2, 0, 1, 5, 4, 2, 2, 0, 3, 3, 0, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1123919245.9685032, 21246443507.55673, 99313937819.03368, 273006788850.37326, 581596396224.1268, 1088440879243.8516], "accuracy": [0.09747721254825592, 0.09602430462837219, 0.09602430462837219, 0.09893012791872025, 0.09932637959718704, 0.09615638852119446], "val_loss": [4211840438.857143, 33684193280.0, 113673792950.85715, 269434571044.57144, 526217323666.2857, 909302094701.7142], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57, 34], [1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 4], [], [0, 1, 0, 1, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [69, 40, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1190795781.6779206, 22510889478.55977, 105224719555.711, 289255758098.5635, 616216046342.9994, 1153226734347.8684], "accuracy": [0.09747721254825592, 0.09602430462837219, 0.09602430462837219, 0.09893012791872025, 0.09919429570436478, 0.09615638852119446], "val_loss": [4462477458.285714, 35688608329.14286, 120437286034.28572, 285465097947.4286, 557539112667.4286, 963414364745.1428], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [69, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 0, 0, 0, 0, 6, 5, 1, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(alpha, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))))))), tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [9232641.079667488, 174162009.13591334, 813576700.4496104, 2235825853.015982, 4762295496.377229, 8911543505.236296], "accuracy": [0.09747721254825592, 0.09602430462837219, 0.09602430462837219, 0.09893012791872025, 0.09932637959718704, 0.09615638852119446], "val_loss": [34554518.85714286, 276004150.85714287, 931031003.4285715, 2206321956.571429, 4308574793.142858, 7444446061.714286], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 0, 9, 9, 0], [3, 0, 0, 3, 1, 0], [5, 57, 34], [1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 4], [], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 4, 9, 3, 9], [0, 3, 3, 1], [69, 40, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 6, 5, 1, 3], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [1256761666.44136, 23758250358.380135, 111055347293.2569, 305284455505.5575, 650356316203.0104, 1217122503148.5913], "accuracy": [0.09747721254825592, 0.09602430462837219, 0.09602430462837219, 0.09893012791872025, 0.09932637959718704, 0.09615638852119446], "val_loss": [4709730011.428572, 37666317458.28571, 127112591067.42857, 301285675593.1429, 588433719296.0, 1016807405275.4286], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 4, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 3, 0, 3, 0, 3, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0], [1, 2, 0, 1, 9], [0, 3, 2, 1], [69, 55, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 8, 4, 4, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.add(tf.math.negative(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), sigma), tf.math.subtract(beta, alpha))", "other_info": {"loss": [1190795781.6779206, 22510889478.55977, 105224719555.711, 289255758098.5635, 616216046342.9994, 1153226734347.8684], "accuracy": [0.09747721254825592, 0.09602430462837219, 0.09602430462837219, 0.09893012791872025, 0.09919429570436478, 0.09615638852119446], "val_loss": [4462477458.285714, 35688608329.14286, 120437286034.28572, 285465097947.4286, 557539112667.4286, 963414364745.1428], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 4, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 4], [], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [48, 40, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [206056.1347329212, 3857696.3806630564, 17981734.012415797, 49370016.48712191, 105103166.73306036, 196609724.56373003], "accuracy": [0.09747721254825592, 0.09615638852119446, 0.09589222073554993, 0.09893012791872025, 0.09932637959718704, 0.09615638852119446], "val_loss": [767622.8392857143, 6105058.0, 20565565.714285713, 48702376.0, 95068674.28571428, 164217773.7142857], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 2, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 1, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0], [0, 3, 9, 8, 9], [0, 3, 3, 1], [69, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 5, 3, 2, 1, 0, 2, 1, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1190795781.6779206, 22510889478.55977, 105224719555.711, 289255758098.5635, 616216046342.9994, 1153226734347.8684], "accuracy": [0.09747721254825592, 0.09602430462837219, 0.09602430462837219, 0.09893012791872025, 0.09919429570436478, 0.09615638852119446], "val_loss": [4462477458.285714, 35688608329.14286, 120437286034.28572, 285465097947.4286, 557539112667.4286, 963414364745.1428], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 8, 9], [0, 3, 3, 1], [69, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 5, 4, 1, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(alpha, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [275096868.99769354, 5198757909.505218, 24298621017.537445, 66792269533.206184, 142286467926.25757, 266279546228.08084], "accuracy": [0.09747721254825592, 0.09602430462837219, 0.09589222073554993, 0.09893012791872025, 0.09932637959718704, 0.09615638852119446], "val_loss": [1030717915.4285715, 8241643520.0, 27810867492.57143, 65916918637.71429, 128736821248.0, 222450183606.85715], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [21, 57], [1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 6, 5, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 3, 0, 1, 0, 3, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0], [0, 8, 1, 8, 9, 9], [3, 3, 3, 1], [46, 80, 82]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 2, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 3, 2, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(beta)), tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))))), tf.math.negative(alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [3, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 4, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [3, 3], [], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0], [9, 3, 9, 3, 9], [0, 3, 2, 1], [69, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3032372233071237, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 8, 0], [1, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 3, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [69, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 2, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3032372233071237, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 0, 9, 9, 0], [3, 0, 0, 3, 1, 0], [5, 57], [1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 1, 0, 0], [0, 0, 1, 1], [3, 3, 0], [4, 4], [], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1], [0, 3, 9, 1, 9], [0, 3, 3, 1], [69, 40, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 5, 4, 2, 2, 0, 4, 3, 1, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.square(tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2510571.92107508, 47286954.15348039, 220796612.83106592, 606662279.2698455, 1292048183.402985, 2417593749.860256], "accuracy": [0.09747721254825592, 0.09602430462837219, 0.09602430462837219, 0.09893012791872025, 0.09932637959718704, 0.09615638852119446], "val_loss": [9387529.42857143, 74917067.42857143, 252642157.7142857, 598615643.4285715, 1168891867.4285715, 2019525485.7142856], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 1, 0, 3, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 7, 1, 9], [0, 1, 3, 1], [69, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.square(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1190795781.6779206, 22510889478.55977, 105224719555.711, 289255758098.5635, 616216046342.9994, 1153226734347.8684], "accuracy": [0.09747721254825592, 0.09602430462837219, 0.09602430462837219, 0.09893012791872025, 0.09919429570436478, 0.09615638852119446], "val_loss": [4462477458.285714, 35688608329.14286, 120437286034.28572, 285465097947.4286, 557539112667.4286, 963414364745.1428], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57, 34], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [69, 40, 50]], "fitness": -0.03999999910593033, "mapping_values": [1, 5, 5, 4, 1, 2, 3, 3, 2, 1, 0, 1, 0, 0, 0, 0, 6, 4, 2, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.301076588456216, 2.3020838197542615, 2.3014982290208743, 2.302072778999561, 2.302576389043181, 2.3031208907230547], "accuracy": [0.09100515395402908, 0.08849557489156723, 0.08691058307886124, 0.09509972482919693, 0.08981640636920929, 0.08730682730674744], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 0, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57, 34], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [1, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 6, 9], [1, 3, 3, 1], [69, 47, 50]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.301076588456216, 2.3020838197542615, 2.3014982290208743, 2.302072778999561, 2.302576389043181, 2.3031208907230547], "accuracy": [0.09100515395402908, 0.08849557489156723, 0.08691058307886124, 0.09509972482919693, 0.08981640636920929, 0.08730682730674744], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]