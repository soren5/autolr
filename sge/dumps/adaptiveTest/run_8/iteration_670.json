[{"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 5, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.7674285769462585, "mapping_values": [1, 7, 7, 5, 2, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2863656602846145, 2.242490696507107, 2.1866916288804887, 2.092322599303689, 1.9507483964614456, 1.7613216538895957, 1.5729070563027256, 1.4250221673319006, 1.309413921988919, 1.207073857834342, 1.1475153476995736, 1.093260644181624, 1.0436273159179013, 1.0056356372393638, 0.9916742327757767, 0.9456247793543278, 0.9209538832978015, 0.9119277650874447, 0.883801391434597, 0.8795470200068664, 0.8601620851679721, 0.8385912123656686, 0.8392114977732059, 0.8203567391011253, 0.8052945147730876, 0.8057377863994695, 0.7985709059145535, 0.7856185562527804, 0.7770595470707351, 0.7687629655115734, 0.760942638266781, 0.7636597647627252, 0.7553607446091475, 0.7458877130868554, 0.746391365312708, 0.7231686736189253, 0.7299211856916108, 0.7254884361339016, 0.7191398498672206, 0.7217814682213669, 0.706437906254048, 0.6991186693139505, 0.6994278095795446, 0.6964506776168157, 0.6877697025229036, 0.6953798844562057, 0.6830514004485262], "accuracy": [0.13591335713863373, 0.24157971143722534, 0.3171311616897583, 0.38264429569244385, 0.4263637661933899, 0.46427157521247864, 0.4967639744281769, 0.5262184739112854, 0.5497292280197144, 0.5861841440200806, 0.5929203629493713, 0.6116761565208435, 0.6373002529144287, 0.6427156329154968, 0.6462818384170532, 0.6651697158813477, 0.674679696559906, 0.6800950765609741, 0.6839255094528198, 0.6819442510604858, 0.6948884129524231, 0.6984546184539795, 0.6988508701324463, 0.7080966830253601, 0.707568347454071, 0.7140403985977173, 0.7145687341690063, 0.7140403985977173, 0.7170783281326294, 0.718399167060852, 0.7239466309547424, 0.7238145470619202, 0.7250033020973206, 0.7310791015625, 0.7265883088111877, 0.7371549606323242, 0.7301545143127441, 0.7316074371337891, 0.7384757399559021, 0.735569953918457, 0.7420420050621033, 0.748778223991394, 0.7412495017051697, 0.7457403540611267, 0.7471932172775269, 0.7453441023826599, 0.7493065595626831], "val_loss": [1.9331812858581543, 1.886601175580706, 1.815277440207345, 1.7000956194741386, 1.5331568377358573, 1.3308534962790353, 1.1470562730516707, 1.0084405967167445, 0.9112499782017299, 0.8400057554244995, 0.7887011085237775, 0.7512604679380145, 0.7208209548677716, 0.6919437306267875, 0.6733617782592773, 0.6540817022323608, 0.6441760063171387, 0.6270996843065534, 0.6155396018709455, 0.6064897435052055, 0.6019140992845807, 0.5911192042487008, 0.583838871547154, 0.575466683932713, 0.5674138409750802, 0.5620368719100952, 0.5597919225692749, 0.5531036002295358, 0.5460172891616821, 0.5430710315704346, 0.5375207662582397, 0.5372842720576695, 0.5339618240083966, 0.526310886655535, 0.5243517330714634, 0.5216228110449654, 0.5204120704105922, 0.5166426045554025, 0.5149027960641044, 0.5120952129364014, 0.5073726688112531, 0.5044568266187396, 0.5026871136256627, 0.5004067420959473, 0.49604322229112896, 0.49420082569122314, 0.4924204519816807], "val_accuracy": [0.34299999475479126, 0.4166666567325592, 0.48766666650772095, 0.5366666913032532, 0.562666654586792, 0.5889999866485596, 0.624666690826416, 0.659333348274231, 0.6866666674613953, 0.6936666369438171, 0.7039999961853027, 0.7026666402816772, 0.7153333425521851, 0.7206666469573975, 0.722000002861023, 0.7300000190734863, 0.7223333120346069, 0.7423333525657654, 0.7440000176429749, 0.7476666569709778, 0.746666669845581, 0.7543333172798157, 0.762333333492279, 0.7590000033378601, 0.7636666893959045, 0.7649999856948853, 0.765666663646698, 0.7706666588783264, 0.7693333625793457, 0.7720000147819519, 0.7736666798591614, 0.7763333320617676, 0.7726666927337646, 0.781000018119812, 0.7820000052452087, 0.7786666750907898, 0.778333306312561, 0.7789999842643738, 0.7873333096504211, 0.7766666412353516, 0.7846666574478149, 0.7953333258628845, 0.7906666398048401, 0.7873333096504211, 0.7873333096504211, 0.7923333048820496, 0.7916666865348816]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 6, 9, 3, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [8, 4, 2, 5, 6, 4, 4, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 0, 0, 2, 1, 3, 0, 0], [91, 33, 83, 0, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.7674285769462585, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2863656602846145, 2.242490696507107, 2.1866916288804887, 2.092322599303689, 1.9507483964614456, 1.7613216538895957, 1.5729070563027256, 1.4250221673319006, 1.309413921988919, 1.207073857834342, 1.1475153476995736, 1.093260644181624, 1.0436273159179013, 1.0056356372393638, 0.9916742327757767, 0.9456247793543278, 0.9209538832978015, 0.9119277650874447, 0.883801391434597, 0.8795470200068664, 0.8601620851679721, 0.8385912123656686, 0.8392114977732059, 0.8203567391011253, 0.8052945147730876, 0.8057377863994695, 0.7985709059145535, 0.7856185562527804, 0.7770595470707351, 0.7687629655115734, 0.760942638266781, 0.7636597647627252, 0.7553607446091475, 0.7458877130868554, 0.746391365312708, 0.7231686736189253, 0.7299211856916108, 0.7254884361339016, 0.7191398498672206, 0.7217814682213669, 0.706437906254048, 0.6991186693139505, 0.6994278095795446, 0.6964506776168157, 0.6877697025229036, 0.6953798844562057, 0.6830514004485262], "accuracy": [0.13591335713863373, 0.24157971143722534, 0.3171311616897583, 0.38264429569244385, 0.4263637661933899, 0.46427157521247864, 0.4967639744281769, 0.5262184739112854, 0.5497292280197144, 0.5861841440200806, 0.5929203629493713, 0.6116761565208435, 0.6373002529144287, 0.6427156329154968, 0.6462818384170532, 0.6651697158813477, 0.674679696559906, 0.6800950765609741, 0.6839255094528198, 0.6819442510604858, 0.6948884129524231, 0.6984546184539795, 0.6988508701324463, 0.7080966830253601, 0.707568347454071, 0.7140403985977173, 0.7145687341690063, 0.7140403985977173, 0.7170783281326294, 0.718399167060852, 0.7239466309547424, 0.7238145470619202, 0.7250033020973206, 0.7310791015625, 0.7265883088111877, 0.7371549606323242, 0.7301545143127441, 0.7316074371337891, 0.7384757399559021, 0.735569953918457, 0.7420420050621033, 0.748778223991394, 0.7412495017051697, 0.7457403540611267, 0.7471932172775269, 0.7453441023826599, 0.7493065595626831], "val_loss": [1.9331812858581543, 1.886601175580706, 1.815277440207345, 1.7000956194741386, 1.5331568377358573, 1.3308534962790353, 1.1470562730516707, 1.0084405967167445, 0.9112499782017299, 0.8400057554244995, 0.7887011085237775, 0.7512604679380145, 0.7208209548677716, 0.6919437306267875, 0.6733617782592773, 0.6540817022323608, 0.6441760063171387, 0.6270996843065534, 0.6155396018709455, 0.6064897435052055, 0.6019140992845807, 0.5911192042487008, 0.583838871547154, 0.575466683932713, 0.5674138409750802, 0.5620368719100952, 0.5597919225692749, 0.5531036002295358, 0.5460172891616821, 0.5430710315704346, 0.5375207662582397, 0.5372842720576695, 0.5339618240083966, 0.526310886655535, 0.5243517330714634, 0.5216228110449654, 0.5204120704105922, 0.5166426045554025, 0.5149027960641044, 0.5120952129364014, 0.5073726688112531, 0.5044568266187396, 0.5026871136256627, 0.5004067420959473, 0.49604322229112896, 0.49420082569122314, 0.4924204519816807], "val_accuracy": [0.34299999475479126, 0.4166666567325592, 0.48766666650772095, 0.5366666913032532, 0.562666654586792, 0.5889999866485596, 0.624666690826416, 0.659333348274231, 0.6866666674613953, 0.6936666369438171, 0.7039999961853027, 0.7026666402816772, 0.7153333425521851, 0.7206666469573975, 0.722000002861023, 0.7300000190734863, 0.7223333120346069, 0.7423333525657654, 0.7440000176429749, 0.7476666569709778, 0.746666669845581, 0.7543333172798157, 0.762333333492279, 0.7590000033378601, 0.7636666893959045, 0.7649999856948853, 0.765666663646698, 0.7706666588783264, 0.7693333625793457, 0.7720000147819519, 0.7736666798591614, 0.7763333320617676, 0.7726666927337646, 0.781000018119812, 0.7820000052452087, 0.7786666750907898, 0.778333306312561, 0.7789999842643738, 0.7873333096504211, 0.7766666412353516, 0.7846666574478149, 0.7953333258628845, 0.7906666398048401, 0.7873333096504211, 0.7873333096504211, 0.7923333048820496, 0.7916666865348816]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 4, 5, 2, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [0, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 15, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 1, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.7674285769462585, "mapping_values": [1, 32, 32, 24, 8, 6, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.pow(tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.square(grad), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.square(grad))))), tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))))))), tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(tf.math.add(alpha, grad), grad)))))), lambda shape,  alpha, beta, grad: tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2863656602846145, 2.242490696507107, 2.1866916288804887, 2.092322599303689, 1.9507483964614456, 1.7613216538895957, 1.5729070563027256, 1.4250221673319006, 1.309413921988919, 1.207073857834342, 1.1475153476995736, 1.093260644181624, 1.0436273159179013, 1.0056356372393638, 0.9916742327757767, 0.9456247793543278, 0.9209538832978015, 0.9119277650874447, 0.883801391434597, 0.8795470200068664, 0.8601620851679721, 0.8385912123656686, 0.8392114977732059, 0.8203567391011253, 0.8052945147730876, 0.8057377863994695, 0.7985709059145535, 0.7856185562527804, 0.7770595470707351, 0.7687629655115734, 0.760942638266781, 0.7636597647627252, 0.7553607446091475, 0.7458877130868554, 0.746391365312708, 0.7231686736189253, 0.7299211856916108, 0.7254884361339016, 0.7191398498672206, 0.7217814682213669, 0.706437906254048, 0.6991186693139505, 0.6994278095795446, 0.6964506776168157, 0.6877697025229036, 0.6953798844562057, 0.6830514004485262], "accuracy": [0.13591335713863373, 0.24157971143722534, 0.3171311616897583, 0.38264429569244385, 0.4263637661933899, 0.46427157521247864, 0.4967639744281769, 0.5262184739112854, 0.5497292280197144, 0.5861841440200806, 0.5929203629493713, 0.6116761565208435, 0.6373002529144287, 0.6427156329154968, 0.6462818384170532, 0.6651697158813477, 0.674679696559906, 0.6800950765609741, 0.6839255094528198, 0.6819442510604858, 0.6948884129524231, 0.6984546184539795, 0.6988508701324463, 0.7080966830253601, 0.707568347454071, 0.7140403985977173, 0.7145687341690063, 0.7140403985977173, 0.7170783281326294, 0.718399167060852, 0.7239466309547424, 0.7238145470619202, 0.7250033020973206, 0.7310791015625, 0.7265883088111877, 0.7371549606323242, 0.7301545143127441, 0.7316074371337891, 0.7384757399559021, 0.735569953918457, 0.7420420050621033, 0.748778223991394, 0.7412495017051697, 0.7457403540611267, 0.7471932172775269, 0.7453441023826599, 0.7493065595626831], "val_loss": [1.9331812858581543, 1.886601175580706, 1.815277440207345, 1.7000956194741386, 1.5331568377358573, 1.3308534962790353, 1.1470562730516707, 1.0084405967167445, 0.9112499782017299, 0.8400057554244995, 0.7887011085237775, 0.7512604679380145, 0.7208209548677716, 0.6919437306267875, 0.6733617782592773, 0.6540817022323608, 0.6441760063171387, 0.6270996843065534, 0.6155396018709455, 0.6064897435052055, 0.6019140992845807, 0.5911192042487008, 0.583838871547154, 0.575466683932713, 0.5674138409750802, 0.5620368719100952, 0.5597919225692749, 0.5531036002295358, 0.5460172891616821, 0.5430710315704346, 0.5375207662582397, 0.5372842720576695, 0.5339618240083966, 0.526310886655535, 0.5243517330714634, 0.5216228110449654, 0.5204120704105922, 0.5166426045554025, 0.5149027960641044, 0.5120952129364014, 0.5073726688112531, 0.5044568266187396, 0.5026871136256627, 0.5004067420959473, 0.49604322229112896, 0.49420082569122314, 0.4924204519816807], "val_accuracy": [0.34299999475479126, 0.4166666567325592, 0.48766666650772095, 0.5366666913032532, 0.562666654586792, 0.5889999866485596, 0.624666690826416, 0.659333348274231, 0.6866666674613953, 0.6936666369438171, 0.7039999961853027, 0.7026666402816772, 0.7153333425521851, 0.7206666469573975, 0.722000002861023, 0.7300000190734863, 0.7223333120346069, 0.7423333525657654, 0.7440000176429749, 0.7476666569709778, 0.746666669845581, 0.7543333172798157, 0.762333333492279, 0.7590000033378601, 0.7636666893959045, 0.7649999856948853, 0.765666663646698, 0.7706666588783264, 0.7693333625793457, 0.7720000147819519, 0.7736666798591614, 0.7763333320617676, 0.7726666927337646, 0.781000018119812, 0.7820000052452087, 0.7786666750907898, 0.778333306312561, 0.7789999842643738, 0.7873333096504211, 0.7766666412353516, 0.7846666574478149, 0.7953333258628845, 0.7906666398048401, 0.7873333096504211, 0.7873333096504211, 0.7923333048820496, 0.7916666865348816]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 6, 5, 1, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1], [8, 4, 0, 5, 6, 2, 4, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 0, 0, 0, 2, 1, 3, 0, 0], [87, 33, 83, 45, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.7674285769462585, "mapping_values": [1, 7, 7, 5, 2, 1, 21, 21, 14, 7, 5, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.math.subtract(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))))))))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta))))))))), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2863656602846145, 2.242490696507107, 2.1866916288804887, 2.092322599303689, 1.9507483964614456, 1.7613216538895957, 1.5729070563027256, 1.4250221673319006, 1.309413921988919, 1.207073857834342, 1.1475153476995736, 1.093260644181624, 1.0436273159179013, 1.0056356372393638, 0.9916742327757767, 0.9456247793543278, 0.9209538832978015, 0.9119277650874447, 0.883801391434597, 0.8795470200068664, 0.8601620851679721, 0.8385912123656686, 0.8392114977732059, 0.8203567391011253, 0.8052945147730876, 0.8057377863994695, 0.7985709059145535, 0.7856185562527804, 0.7770595470707351, 0.7687629655115734, 0.760942638266781, 0.7636597647627252, 0.7553607446091475, 0.7458877130868554, 0.746391365312708, 0.7231686736189253, 0.7299211856916108, 0.7254884361339016, 0.7191398498672206, 0.7217814682213669, 0.706437906254048, 0.6991186693139505, 0.6994278095795446, 0.6964506776168157, 0.6877697025229036, 0.6953798844562057, 0.6830514004485262], "accuracy": [0.13591335713863373, 0.24157971143722534, 0.3171311616897583, 0.38264429569244385, 0.4263637661933899, 0.46427157521247864, 0.4967639744281769, 0.5262184739112854, 0.5497292280197144, 0.5861841440200806, 0.5929203629493713, 0.6116761565208435, 0.6373002529144287, 0.6427156329154968, 0.6462818384170532, 0.6651697158813477, 0.674679696559906, 0.6800950765609741, 0.6839255094528198, 0.6819442510604858, 0.6948884129524231, 0.6984546184539795, 0.6988508701324463, 0.7080966830253601, 0.707568347454071, 0.7140403985977173, 0.7145687341690063, 0.7140403985977173, 0.7170783281326294, 0.718399167060852, 0.7239466309547424, 0.7238145470619202, 0.7250033020973206, 0.7310791015625, 0.7265883088111877, 0.7371549606323242, 0.7301545143127441, 0.7316074371337891, 0.7384757399559021, 0.735569953918457, 0.7420420050621033, 0.748778223991394, 0.7412495017051697, 0.7457403540611267, 0.7471932172775269, 0.7453441023826599, 0.7493065595626831], "val_loss": [1.9331812858581543, 1.886601175580706, 1.815277440207345, 1.7000956194741386, 1.5331568377358573, 1.3308534962790353, 1.1470562730516707, 1.0084405967167445, 0.9112499782017299, 0.8400057554244995, 0.7887011085237775, 0.7512604679380145, 0.7208209548677716, 0.6919437306267875, 0.6733617782592773, 0.6540817022323608, 0.6441760063171387, 0.6270996843065534, 0.6155396018709455, 0.6064897435052055, 0.6019140992845807, 0.5911192042487008, 0.583838871547154, 0.575466683932713, 0.5674138409750802, 0.5620368719100952, 0.5597919225692749, 0.5531036002295358, 0.5460172891616821, 0.5430710315704346, 0.5375207662582397, 0.5372842720576695, 0.5339618240083966, 0.526310886655535, 0.5243517330714634, 0.5216228110449654, 0.5204120704105922, 0.5166426045554025, 0.5149027960641044, 0.5120952129364014, 0.5073726688112531, 0.5044568266187396, 0.5026871136256627, 0.5004067420959473, 0.49604322229112896, 0.49420082569122314, 0.4924204519816807], "val_accuracy": [0.34299999475479126, 0.4166666567325592, 0.48766666650772095, 0.5366666913032532, 0.562666654586792, 0.5889999866485596, 0.624666690826416, 0.659333348274231, 0.6866666674613953, 0.6936666369438171, 0.7039999961853027, 0.7026666402816772, 0.7153333425521851, 0.7206666469573975, 0.722000002861023, 0.7300000190734863, 0.7223333120346069, 0.7423333525657654, 0.7440000176429749, 0.7476666569709778, 0.746666669845581, 0.7543333172798157, 0.762333333492279, 0.7590000033378601, 0.7636666893959045, 0.7649999856948853, 0.765666663646698, 0.7706666588783264, 0.7693333625793457, 0.7720000147819519, 0.7736666798591614, 0.7763333320617676, 0.7726666927337646, 0.781000018119812, 0.7820000052452087, 0.7786666750907898, 0.778333306312561, 0.7789999842643738, 0.7873333096504211, 0.7766666412353516, 0.7846666574478149, 0.7953333258628845, 0.7906666398048401, 0.7873333096504211, 0.7873333096504211, 0.7923333048820496, 0.7916666865348816]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 4, 5, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [0, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 15, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.7674285769462585, "mapping_values": [1, 7, 7, 5, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))), grad), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2863656602846145, 2.242490696507107, 2.1866916288804887, 2.092322599303689, 1.9507483964614456, 1.7613216538895957, 1.5729070563027256, 1.4250221673319006, 1.309413921988919, 1.207073857834342, 1.1475153476995736, 1.093260644181624, 1.0436273159179013, 1.0056356372393638, 0.9916742327757767, 0.9456247793543278, 0.9209538832978015, 0.9119277650874447, 0.883801391434597, 0.8795470200068664, 0.8601620851679721, 0.8385912123656686, 0.8392114977732059, 0.8203567391011253, 0.8052945147730876, 0.8057377863994695, 0.7985709059145535, 0.7856185562527804, 0.7770595470707351, 0.7687629655115734, 0.760942638266781, 0.7636597647627252, 0.7553607446091475, 0.7458877130868554, 0.746391365312708, 0.7231686736189253, 0.7299211856916108, 0.7254884361339016, 0.7191398498672206, 0.7217814682213669, 0.706437906254048, 0.6991186693139505, 0.6994278095795446, 0.6964506776168157, 0.6877697025229036, 0.6953798844562057, 0.6830514004485262], "accuracy": [0.13591335713863373, 0.24157971143722534, 0.3171311616897583, 0.38264429569244385, 0.4263637661933899, 0.46427157521247864, 0.4967639744281769, 0.5262184739112854, 0.5497292280197144, 0.5861841440200806, 0.5929203629493713, 0.6116761565208435, 0.6373002529144287, 0.6427156329154968, 0.6462818384170532, 0.6651697158813477, 0.674679696559906, 0.6800950765609741, 0.6839255094528198, 0.6819442510604858, 0.6948884129524231, 0.6984546184539795, 0.6988508701324463, 0.7080966830253601, 0.707568347454071, 0.7140403985977173, 0.7145687341690063, 0.7140403985977173, 0.7170783281326294, 0.718399167060852, 0.7239466309547424, 0.7238145470619202, 0.7250033020973206, 0.7310791015625, 0.7265883088111877, 0.7371549606323242, 0.7301545143127441, 0.7316074371337891, 0.7384757399559021, 0.735569953918457, 0.7420420050621033, 0.748778223991394, 0.7412495017051697, 0.7457403540611267, 0.7471932172775269, 0.7453441023826599, 0.7493065595626831], "val_loss": [1.9331812858581543, 1.886601175580706, 1.815277440207345, 1.7000956194741386, 1.5331568377358573, 1.3308534962790353, 1.1470562730516707, 1.0084405967167445, 0.9112499782017299, 0.8400057554244995, 0.7887011085237775, 0.7512604679380145, 0.7208209548677716, 0.6919437306267875, 0.6733617782592773, 0.6540817022323608, 0.6441760063171387, 0.6270996843065534, 0.6155396018709455, 0.6064897435052055, 0.6019140992845807, 0.5911192042487008, 0.583838871547154, 0.575466683932713, 0.5674138409750802, 0.5620368719100952, 0.5597919225692749, 0.5531036002295358, 0.5460172891616821, 0.5430710315704346, 0.5375207662582397, 0.5372842720576695, 0.5339618240083966, 0.526310886655535, 0.5243517330714634, 0.5216228110449654, 0.5204120704105922, 0.5166426045554025, 0.5149027960641044, 0.5120952129364014, 0.5073726688112531, 0.5044568266187396, 0.5026871136256627, 0.5004067420959473, 0.49604322229112896, 0.49420082569122314, 0.4924204519816807], "val_accuracy": [0.34299999475479126, 0.4166666567325592, 0.48766666650772095, 0.5366666913032532, 0.562666654586792, 0.5889999866485596, 0.624666690826416, 0.659333348274231, 0.6866666674613953, 0.6936666369438171, 0.7039999961853027, 0.7026666402816772, 0.7153333425521851, 0.7206666469573975, 0.722000002861023, 0.7300000190734863, 0.7223333120346069, 0.7423333525657654, 0.7440000176429749, 0.7476666569709778, 0.746666669845581, 0.7543333172798157, 0.762333333492279, 0.7590000033378601, 0.7636666893959045, 0.7649999856948853, 0.765666663646698, 0.7706666588783264, 0.7693333625793457, 0.7720000147819519, 0.7736666798591614, 0.7763333320617676, 0.7726666927337646, 0.781000018119812, 0.7820000052452087, 0.7786666750907898, 0.778333306312561, 0.7789999842643738, 0.7873333096504211, 0.7766666412353516, 0.7846666574478149, 0.7953333258628845, 0.7906666398048401, 0.7873333096504211, 0.7873333096504211, 0.7923333048820496, 0.7916666865348816]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 4, 5, 5, 2, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [68, 25, 50, 71, 34]], "fitness": -0.43457141518592834, "mapping_values": [1, 31, 31, 23, 8, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.pow(tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.add(alpha, tf.math.add(grad, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))))), grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(alpha, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)))))), tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, grad))))))))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.square(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.4758343062364916, 2.506705082544577, 2.2579326047054638, 2.317848416115425, 2.295721008887522, 2.3923854240573172, 2.3047337136201227, 2.3035529163362107], "accuracy": [0.18914277851581573, 0.13895125687122345, 0.16814158856868744, 0.1582353711128235, 0.11742173880338669, 0.13195087015628815, 0.0948355570435524, 0.09694888442754745], "val_loss": [1.9377423695155553, 1.973702839442662, 1.5843727248055595, 1.9748392786298479, 1.8780311856951033, 1.9761568478175573, 1.974118982042585, 1.9736109461103166], "val_accuracy": [0.1080000028014183, 0.10233332961797714, 0.3569999933242798, 0.09733333438634872, 0.24699999392032623, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 5, 3, 3, 9, 2, 3, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 0, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [15, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [42, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [46, 25, 50, 71, 34]], "fitness": -0.34771427512168884, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.453946031898697, 2.278177162754128, 2.250603269072666, 2.2782197439785503, 2.3056749420836145, 2.30327437547818], "accuracy": [0.20221899449825287, 0.17434948682785034, 0.15889579057693481, 0.1310262829065323, 0.09919429570436478, 0.10474177449941635], "val_loss": [1.370525326047625, 1.9834819521222795, 1.9829415593828474, 1.9774398803710938, 1.9738055637904577, 1.9737096514020647], "val_accuracy": [0.39266666769981384, 0.10499999672174454, 0.10400000214576721, 0.09733333438634872, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 8, 5, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [0, 3, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [9, 4, 3, 2, 6, 6, 1, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [0, 24, 83, 40, 91, 6], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.1071428582072258, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302565706845335, 2.301054271866286, 2.3031032378285268, 2.3017366626211966, 2.3018021054507845, 2.301250179131049, 2.3012532805565122, 2.301272380810215, 2.3020611752167572, 2.302630199685057, 2.301800581001571, 2.3016665153153237, 2.300504114964477, 2.3016196886908347, 2.3021335353342423, 2.3007143219905113, 2.300951861717981, 2.3009359056545584, 2.3003475419471386, 2.301149747060227, 2.299680882441196, 2.300846322117197, 2.3007724169553656, 2.3012592245511816, 2.2998695642468543, 2.300342355154257, 2.3008930929710742, 2.300263681116987, 2.299478390937657, 2.3006400653573076, 2.3009383817941536, 2.3008927578435454, 2.3007615423158425, 2.300398097613295, 2.300561418717233, 2.3010774690398543, 2.30048585265556, 2.300476322619985, 2.301316195632709, 2.3007859477372046, 2.3009082882112404, 2.301007021057639, 2.300892770408466, 2.301093890540683, 2.300663930329633, 2.301610087800445, 2.3010142443753536, 2.3012648736008754, 2.3010587660139894, 2.3012681384647777], "accuracy": [0.09126931428909302, 0.09272222965955734, 0.08836349099874496, 0.09008057415485382, 0.08730682730674744, 0.09166556596755981, 0.08611807972192764, 0.09391097724437714, 0.09060890227556229, 0.08809932321310043, 0.08968432247638702, 0.09325055778026581, 0.09417514503002167, 0.09298639744520187, 0.0886276587843895, 0.09285431355237961, 0.09100515395402908, 0.08902391046285629, 0.09642054885625839, 0.09430722147226334, 0.09391097724437714, 0.09509972482919693, 0.09602430462837219, 0.08915598690509796, 0.09879804402589798, 0.1026284471154213, 0.09219389408826828, 0.09932637959718704, 0.1018359512090683, 0.09919429570436478, 0.09694888442754745, 0.09615638852119446, 0.09972262382507324, 0.1022322028875351, 0.09774138033390045, 0.09628847241401672, 0.09985470771789551, 0.10091137140989304, 0.09642054885625839, 0.1018359512090683, 0.09747721254825592, 0.1014397069811821, 0.1010434553027153, 0.09259014576673508, 0.10236428678035736, 0.09589222073554993, 0.09721305221319199, 0.10051512718200684, 0.10130762308835983, 0.09311848133802414], "val_loss": [1.9705040795462472, 1.970420973641532, 1.9703418867928642, 1.9702634130205428, 1.9701950890677316, 1.9701383454459054, 1.9700922284807478, 1.9700474057878767, 1.9700121198381697, 1.969989504132952, 1.9699797630310059, 1.9699764251708984, 1.9699717930385046, 1.9699760164533342, 1.9699888910566057, 1.9700140271868025, 1.9700451578412737, 1.9700816699436732, 1.9701216561453683, 1.9701647077287947, 1.9702142987932478, 1.9702636173793249, 1.970320497240339, 1.9703830991472517, 1.9704514231000627, 1.9705198832920618, 1.9705919538225447, 1.9706685883658273, 1.9707485607692175, 1.970827375139509, 1.9709108216421944, 1.970996652330671, 1.9710818018232072, 1.9711687905447823, 1.971259593963623, 1.9713527815682548, 1.9714433125087194, 1.9715348652430944, 1.9716230119977678, 1.9717108181544714, 1.9717968532017298, 1.9718811171395438, 1.971958773476737, 1.9720329557146346, 1.9721040725708008, 1.9721722602844238, 1.972235883985247, 1.9722958292279924, 1.9723546845572335, 1.9724117006574358], "val_accuracy": [0.03966666758060455, 0.04233333468437195, 0.04500000178813934, 0.046666666865348816, 0.04800000041723251, 0.050999999046325684, 0.05299999937415123, 0.054666668176651, 0.054999999701976776, 0.05999999865889549, 0.05966666713356972, 0.06133333221077919, 0.06300000101327896, 0.06333333253860474, 0.06433333456516266, 0.06599999964237213, 0.070333331823349, 0.07266666740179062, 0.07466666400432587, 0.07866666465997696, 0.0806666687130928, 0.08233333379030228, 0.08266666531562805, 0.08666666597127914, 0.08733333647251129, 0.08799999952316284, 0.08933333307504654, 0.09033333510160446, 0.09133332967758179, 0.09466666728258133, 0.0963333323597908, 0.09566666930913925, 0.09733333438634872, 0.09799999743700027, 0.09866666793823242, 0.09933333098888397, 0.09966666996479034, 0.09966666996479034, 0.10166666656732559, 0.10100000351667404, 0.10066666454076767, 0.10133333504199982, 0.10133333504199982, 0.10233332961797714, 0.10366666316986084, 0.10300000011920929, 0.10333333164453506, 0.10300000011920929, 0.10266666859388351, 0.10166666656732559]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 6, 9, 3, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [8, 4, 2, 5, 6, 4, 4, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 0, 0, 2, 1, 3, 0, 0], [87, 33, 83, 0, 91, 78], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [7, 3, 5, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 6, 4, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.square(sigma), beta), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3031651403421836, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [3, 6, 5, 3, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [8, 4, 2, 5, 6, 4, 4, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [87, 33, 83, 0, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [9, 3, 5, 9, 2, 9], [0, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(alpha, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3031651403421836, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 4, 5, 5, 9, 2, 6, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [0, 2, 1, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [8, 4, 2, 5, 6, 4, 4, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 2, 1, 3, 0, 0], [87, 33, 83, 0, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 2, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 34, 34, 25, 9, 6, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.square(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.divide_no_nan(tf.math.add(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))))))), tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.square(alpha))))))), tf.math.add(alpha, grad))))))), tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, grad), grad)))), grad)), tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(sigma, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [27.72610519228673, 2.9125134818321836, 11661936.08897246, 281260273834.29156, 2.3165014291782704, 2.3061170343394766], "accuracy": [0.0940430611371994, 0.09919429570436478, 0.10117553919553757, 0.09470347315073013, 0.09628847241401672, 0.09272222965955734], "val_loss": [2.059405871800014, 1.9833812032427107, 1626664786797.7144, 1.9950086729867118, 1.9789622170584542, 1.9749714987618583], "val_accuracy": [0.10400000214576721, 0.0976666659116745, 0.08266666531562805, 0.0976666659116745, 0.10000000149011612, 0.10400000214576721]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 2, 5, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 0, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [8, 4, 2, 5, 6, 4, 4, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 0, 0, 2, 1, 3, 0, 0], [87, 33, 83, 0, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 5, 2, 2, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.add(alpha, alpha), tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06894730031490326, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 6, 5, 3, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [0, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 0, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [20, 45, 83, 0, 91, 78, 53], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 3, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.09828571230173111, "mapping_values": [1, 7, 7, 4, 3, 2, 17, 17, 11, 6, 6, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, sigma))", "other_info": {"loss": [2.303271302772535, 2.303520477144017, 2.3077490534434117, 2.3085963813273853, 2.311671884194373, 2.3147831816856557, 2.3188945236553717, 2.3249875294959086, 2.3330367322863053, 2.3493186984756886, 2.387455244924666, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09113723784685135, 0.08625016361474991, 0.08215559273958206, 0.08017434924840927, 0.0758156105875969, 0.07660810649394989, 0.07555144280195236, 0.07991018146276474, 0.07489103078842163, 0.0746268630027771, 0.07819310575723648, 0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9719967160906111, 1.9733680316380091, 1.9752112797328405, 1.9771322522844588, 1.979469163077218, 1.982152325766427, 1.9853334426879883, 1.9895875113351005, 1.9961189542497908, 2.0104744093758717, 2.090402126312256, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03266666829586029, 0.03099999949336052, 0.029999999329447746, 0.0273333340883255, 0.02800000086426735, 0.033666666597127914, 0.04100000113248825, 0.05700000002980232, 0.0820000022649765, 0.09666666388511658, 0.10000000149011612, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 4, 8, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 4, 3, 2, 6, 6, 1, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 3, 3, 1, 2, 0, 17, 17, 9, 8, 4, 3, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.pow(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), beta), tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3026363775635974, 2.3012083706334914, 2.303422901120562, 2.302091329230955, 2.302342388718403, 2.3017978582557292], "accuracy": [0.09126931428909302, 0.09311848133802414, 0.08836349099874496, 0.08915598690509796, 0.08532558381557465, 0.09206181764602661], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 6, 9, 3, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [98, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [8, 4, 2, 5, 6, 3, 4, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 3, 3, 3, 2, 1, 3, 0, 0], [87, 33, 83, 0, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 1, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.math.add(beta, tf.math.add(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(beta, tf.math.square(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, alpha))", "other_info": {"loss": [2.3026363775635974, 2.3012083706334914, 2.303422901120562, 2.302091329230955, 2.302342388718403, 2.3017978582557292], "accuracy": [0.09126931428909302, 0.09311848133802414, 0.08836349099874496, 0.08915598690509796, 0.08532558381557465, 0.09206181764602661], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 6, 5, 3, 8, 2, 8, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [0, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 32, 32, 24, 8, 5, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.divide_no_nan(tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.sqrt(grad), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.square(grad))))), tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))))))), tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(tf.math.add(alpha, grad), grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3026363775635974, 2.3012083706334914, 2.303422901120562, 2.302091329230955, 2.302342388718403, 2.3017978582557292], "accuracy": [0.09126931428909302, 0.09311848133802414, 0.08836349099874496, 0.08915598690509796, 0.08532558381557465, 0.09206181764602661], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 8, 5, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [3, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [0, 24, 83, 40, 91, 6], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 4, 4, 2, 2, 0, 2, 2, 1, 1, 1, 3, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3026363775635974, 2.3012083706334914, 2.303422901120562, 2.302091329230955, 2.302342388718403, 2.3017978582557292], "accuracy": [0.09126931428909302, 0.09311848133802414, 0.08836349099874496, 0.08915598690509796, 0.08532558381557465, 0.09206181764602661], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 6, 9, 3, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [8, 4, 2, 5, 6, 4, 4, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 0, 0, 2, 1, 3, 0, 0], [87, 33, 83, 0, 91, 78], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [0, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 3, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 3, 1, 1, 0, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, sigma))", "other_info": {"loss": [2.3026363775635974, 2.3012083706334914, 2.303422901120562, 2.302091329230955, 2.302342388718403, 2.3017978582557292], "accuracy": [0.09126931428909302, 0.09311848133802414, 0.08836349099874496, 0.08915598690509796, 0.08532558381557465, 0.09206181764602661], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 6, 9, 3, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [8, 4, 2, 5, 6, 4, 4, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3026363775635974, 2.3012083706334914, 2.303422901120562, 2.302091329230955, 2.302342388718403, 2.3017978582557292], "accuracy": [0.09126931428909302, 0.09311848133802414, 0.08836349099874496, 0.08915598690509796, 0.08532558381557465, 0.09206181764602661], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 4, 5, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [54, 25, 50, 71, 34]], "fitness": -0.03828571364283562, "mapping_values": [1, 6, 6, 4, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.square(sigma), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3030780960524386, 2.3027520498122835, 2.3063382829389774, 2.3063277734064425, 2.3081783732529, 2.3097717912835436], "accuracy": [0.09140139818191528, 0.08809932321310043, 0.08189142495393753, 0.08241976052522659, 0.07740060985088348, 0.07951393723487854], "val_loss": [1.971559797014509, 1.97246367590768, 1.9736884662083216, 1.9748008591788155, 1.9762131827218192, 1.9778646741594588], "val_accuracy": [0.03500000014901161, 0.03033333271741867, 0.029666665941476822, 0.029666665941476822, 0.027000000700354576, 0.027666667476296425]}}]