[{"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.7654285430908203, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 6, 6, 2, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(grad, tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta))), tf.math.add(beta, tf.math.pow(tf.math.negative(grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.235750353992922, 1.8545859699566698, 1.2926270201095673, 1.0619328226694862, 0.9497505642671501, 0.9229992256424666, 0.8421835485718364, 0.8133938116420135, 0.7744274737576389, 0.7500576951941164, 0.7222315748732057, 0.7090816452534381, 0.6959772276021801, 0.688188753092152, 0.6675894936833793, 0.6750860661484736], "accuracy": [0.2312772423028946, 0.4395720660686493, 0.5538238286972046, 0.6240919232368469, 0.6593580842018127, 0.6633205413818359, 0.6951525807380676, 0.705058753490448, 0.7182670831680298, 0.7309470176696777, 0.7339849472045898, 0.735041618347168, 0.7390040755271912, 0.7427024245262146, 0.7564390301704407, 0.746268630027771], "val_loss": [1.7679502623421806, 1.144059692110334, 0.8261954273496356, 0.7178095919745309, 0.6612845148359027, 0.6221860306603568, 0.5973761251994542, 0.5832006590706962, 0.5461655003683907, 0.5385149547031948, 0.5238546643938337, 0.5571376596178327, 0.5437069109507969, 0.5049542188644409, 0.5062117065702166, 0.5221444879259381], "val_accuracy": [0.5023333430290222, 0.6276666522026062, 0.6579999923706055, 0.6983333230018616, 0.715666651725769, 0.7369999885559082, 0.7386666536331177, 0.7583333253860474, 0.7743333578109741, 0.7716666460037231, 0.7839999794960022, 0.7570000290870667, 0.7509999871253967, 0.7820000052452087, 0.7776666879653931, 0.778333306312561]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [3, 0, 0, 3, 1, 0], [5, 57], [1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [7, 8, 2, 2, 0, 2, 4, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 5, 2, 3, 0, 1, 1, 3, 3, 0], [28, 8, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 3, 3, 9], [2, 3, 3, 1], [56, 38, 47]], "fitness": -0.6002857089042664, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 3, 3, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(beta, sigma), sigma))", "other_info": {"loss": [2.303138386855241, 2.3004561202747476, 2.299688771605224, 2.2999666007660036, 2.2971738229700445, 2.2968763725049994, 2.2942789699328716, 2.2927838038806163, 2.2915142046666777, 2.2883061014539954, 2.2864295911039454, 2.283287150339286, 2.2835172966345034, 2.283073753555453, 2.280619433653306, 2.278796103242807, 2.2770633132875617, 2.2748223211409124, 2.2722774369762937, 2.2711928053271295, 2.2695445216106718, 2.2672111372732924, 2.2635013647146227, 2.2618677231299014, 2.2595073057282256, 2.2547688541820476, 2.250503260934074, 2.2478286653162702, 2.2408782553442905, 2.2348415445358745, 2.2268348818111257, 2.215611195661892, 2.20757627650936, 2.1896842518313813, 2.1695920808865425, 2.1433236117785586, 2.1036751015846678, 2.046101192394504, 1.9535070843999538, 1.8254006855901301, 1.6834397593887334, 1.5428802392990077, 1.4608755780878697, NaN, NaN, NaN, NaN], "accuracy": [0.09311848133802414, 0.09417514503002167, 0.09351472556591034, 0.09576013684272766, 0.10394927859306335, 0.10553427785634995, 0.10606260597705841, 0.12112006545066833, 0.11610091477632523, 0.13261127471923828, 0.13221503794193268, 0.13776251673698425, 0.1418570876121521, 0.13578127324581146, 0.14568749070167542, 0.15414080023765564, 0.1526878923177719, 0.16180160641670227, 0.16642451286315918, 0.17051908373832703, 0.16840575635433197, 0.16840575635433197, 0.1760665625333786, 0.18676528334617615, 0.18597279489040375, 0.19931316375732422, 0.19984149932861328, 0.20538897812366486, 0.2078985571861267, 0.22242768108844757, 0.22057852149009705, 0.23444722592830658, 0.24646678566932678, 0.2526746690273285, 0.26601505279541016, 0.27605336904525757, 0.2911108136177063, 0.3090741038322449, 0.3483027219772339, 0.3851538896560669, 0.41949543356895447, 0.4497424364089966, 0.4613657295703888, 0.16034869849681854, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9702798298427038, 1.9694089889526367, 1.9681921686444963, 1.966743332999093, 1.9651575088500977, 1.9634011813572474, 1.9617408343723841, 1.9602078710283553, 1.958481788635254, 1.9568204879760742, 1.9553288732256209, 1.9536875316074915, 1.952059064592634, 1.9504967417035783, 1.9488818304879325, 1.9471639905657088, 1.9453743525913783, 1.9434372356959753, 1.9414061137608118, 1.9392825535365514, 1.9369885580880302, 1.9345597539629256, 1.9316443715776717, 1.9285625730242049, 1.9251890182495117, 1.9213144438607352, 1.9168167114257812, 1.9116156441824776, 1.9055571556091309, 1.898393222263881, 1.8894331114632743, 1.8783761433192663, 1.8649168695722307, 1.8459348678588867, 1.8200122969491142, 1.782989570072719, 1.7300400733947754, 1.6481938021523612, 1.5125984464372908, 1.3466126237596785, 1.1680436474936349, 1.0260374205453056, 0.9814303943089077, NaN, NaN, NaN, NaN], "val_accuracy": [0.0403333343565464, 0.04533333331346512, 0.054666668176651, 0.06233333423733711, 0.07433333247900009, 0.09200000017881393, 0.10733333230018616, 0.11733333021402359, 0.13099999725818634, 0.14733333885669708, 0.16099999845027924, 0.1743333339691162, 0.18799999356269836, 0.2006666660308838, 0.21199999749660492, 0.22033333778381348, 0.2329999953508377, 0.2423333376646042, 0.2526666522026062, 0.2626666724681854, 0.2763333320617676, 0.2926666736602783, 0.3140000104904175, 0.32199999690055847, 0.33399999141693115, 0.3529999852180481, 0.36899998784065247, 0.3779999911785126, 0.390666663646698, 0.40066665410995483, 0.4143333435058594, 0.4216666519641876, 0.4246666729450226, 0.4323333203792572, 0.44066667556762695, 0.4476666748523712, 0.46566668152809143, 0.4906666576862335, 0.5260000228881836, 0.5609999895095825, 0.5923333168029785, 0.6019999980926514, 0.5713333487510681, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 7, 7, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1, 1, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [5, 3, 9, 3, 9], [0, 3, 3, 1], [32, 38, 47]], "fitness": -0.10914285480976105, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 5, 1, 3], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3031680452321357, 2.300909907605906, 2.301088274052713, 2.302532489383855, 2.301196499838254, 2.3025157950447537, 2.30155052601496, 2.3014311813139847, 2.3022331180920172, 2.3007722668376314, 2.3001013407381596, 2.299396896532356, 2.30042404766962, 2.301486932401565, 2.3005875841407035, 2.300586312186559, 2.3003552502266973, 2.300691487530613, 2.300304513676071, 2.30053968606545, 2.300743300381621, 2.3004787837383596, 2.299690742786172, 2.300858372127879, 2.300709135669995, 2.300620965355533, 2.3003365894617924, 2.3014009308742573, 2.300808677552414, 2.3002375354383915, 2.3013647972175457, 2.299993918950075, 2.300464201061686, 2.3002361603196366, 2.3000518175368736, 2.301268313208497, 2.300966617374876, 2.301281515727851, 2.301329348490711, 2.300610101769361, 2.3009230554883255, 2.3008189588064814], "accuracy": [0.09245806187391281, 0.09259014576673508, 0.09153348207473755, 0.09034473448991776, 0.0940430611371994, 0.09166556596755981, 0.08889182657003403, 0.09681680053472519, 0.08875974267721176, 0.09681680053472519, 0.09945846349000931, 0.09589222073554993, 0.09417514503002167, 0.0952318087220192, 0.09642054885625839, 0.10196803510189056, 0.10117553919553757, 0.09906221181154251, 0.09576013684272766, 0.09721305221319199, 0.09919429570436478, 0.09655263274908066, 0.09853387624025345, 0.09708096832036972, 0.09628847241401672, 0.1006472036242485, 0.10157178342342377, 0.09140139818191528, 0.09721305221319199, 0.1002509593963623, 0.09391097724437714, 0.1018359512090683, 0.1002509593963623, 0.10077928751707077, 0.10011887550354004, 0.09932637959718704, 0.09325055778026581, 0.09747721254825592, 0.09615638852119446, 0.1022322028875351, 0.09893012791872025, 0.1018359512090683], "val_loss": [1.9705004692077637, 1.9704137529645647, 1.9703312601361955, 1.9702508108956474, 1.9701813289097376, 1.9701249940054757, 1.9700781958443778, 1.9700330325535365, 1.9700017656598772, 1.9699834414890833, 1.969978196280343, 1.9699734960283553, 1.969973359789167, 1.9699822153363908, 1.9700047629220145, 1.9700356210981096, 1.9700724056788854, 1.9701134136744909, 1.9701577595302038, 1.9702088492257255, 1.9702600751604353, 1.9703187261308943, 1.9703843934195382, 1.9704556465148926, 1.970527172088623, 1.9706034660339355, 1.970684255872454, 1.9707670892987932, 1.970851012638637, 1.9709387506757463, 1.9710290091378349, 1.9711177689688546, 1.97121000289917, 1.9713070052010673, 1.9714025088718958, 1.9714985574994768, 1.9715914045061385, 1.9716830253601074, 1.971773624420166, 1.9718621117728097, 1.971944877079555, 1.972022874014718], "val_accuracy": [0.03933333232998848, 0.0430000014603138, 0.04500000178813934, 0.04699999839067459, 0.04766666516661644, 0.05133333429694176, 0.05366666615009308, 0.055666666477918625, 0.056333333253860474, 0.05966666713356972, 0.06133333221077919, 0.06199999898672104, 0.06300000101327896, 0.06400000303983688, 0.06466666609048843, 0.0689999982714653, 0.07199999690055847, 0.07433333247900009, 0.07766667008399963, 0.0806666687130928, 0.08233333379030228, 0.08266666531562805, 0.08666666597127914, 0.08666666597127914, 0.08799999952316284, 0.09000000357627869, 0.09033333510160446, 0.09233333170413971, 0.09433333575725555, 0.09533333033323288, 0.0963333323597908, 0.09799999743700027, 0.09833333641290665, 0.0989999994635582, 0.0989999994635582, 0.09966666996479034, 0.10166666656732559, 0.10166666656732559, 0.10066666454076767, 0.10166666656732559, 0.10133333504199982, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [50, 57], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [6, 9, 6, 2, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [2, 3, 0], [4, 3], [], [1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [2, 3, 3, 1], [56, 38]], "fitness": -0.1022857129573822, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.479996896601654e+16, 3.100860670233232e+21, 6.904284582977692e+29, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.107647605240345, 0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.0147800957351176e+17, 2.9489392274825316e+23, 6.192237420855633e+31, NaN, NaN, NaN], "val_accuracy": [0.10499999672174454, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [50, 57], [1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 2, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 5, 9, 3, 9], [0, 3, 3, 1], [35, 38, 47]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 2, 14, 14, 7, 7, 2, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(grad, tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))))), alpha))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302895766081764, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.10236428678035736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [7, 4, 2, 2, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 1, 3, 3, 0, 4, 2, 3, 3, 0], [41, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [2, 3], [], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [0, 4, 9, 1, 9], [1, 1, 3, 1], [56, 65]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 21, 21, 11, 10, 2, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, alpha), tf.math.square(tf.math.add(beta, grad))), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))))))), tf.math.subtract(tf.math.add(beta, grad), beta)), tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, grad)))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10236428678035736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [8, 4, 2, 4, 8, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 3, 3, 0, 1, 2, 3, 1, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 6, 5, 2, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.math.add(tf.math.pow(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.add(grad, grad)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [629277340.8903649, 11510941685.720778, 53854116689.11795, 150844600501.23895, 322385164303.95984, 596545326360.1089], "accuracy": [0.10051512718200684, 0.10249637067317963, 0.10051512718200684, 0.1010434553027153, 0.10011887550354004, 0.09893012791872025], "val_loss": [2314153472.0, 18506183241.142857, 62450293613.71429, 148022624256.0, 289093170907.4286, 499543591204.5714], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0], [7, 4, 2, 0, 5, 5, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 3, 2, 3, 0, 1, 3, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 4], [], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [27, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 10, 7, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.negative(tf.math.add(beta, beta)), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.multiply(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))))))))), grad)), tf.math.add(tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302895766081764, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.10236428678035736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [7, 7, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 5, 9, 4, 9], [0, 1, 3, 1], [32, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 5, 4, 2, 2, 0, 3, 3, 0, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(grad, tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [5.6397769664965445, 34.528656870477064, 107.34242171142805, 242.76956880947603, 458.502696091583, 787.1433992981674], "accuracy": [0.09813763201236725, 0.10315678268671036, 0.10077928751707077, 0.1014397069811821, 0.09959053993225098, 0.09893012791872025], "val_loss": [10.688477379935128, 43.25996943882534, 109.08762686593192, 220.78050885881697, 392.85015869140625, 640.746564592634], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [0, 3], [60], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0], [5, 3, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302895766081764, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.10236428678035736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 5, 0, 5, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 7, 9, 1, 9], [1, 2, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.pow(grad, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [9997719.647909867, 2.3139607263294746, 2.3054446937259727, 2.3034422441700966, 2.3030595082522476, 2.3031311397303083, 2.3030188470358515, 2.302858030318962], "accuracy": [0.0956280529499054, 0.09747721254825592, 0.09338264167308807, 0.09430722147226334, 0.09470347315073013, 0.09338264167308807, 0.09668471664190292, 0.0956280529499054], "val_loss": [1.9911383901323592, 1.9780410357883997, 1.9748759950910295, 1.973938260759626, 1.9736761365618025, 1.9737027032034737, 1.9736285890851701, 1.973684583391462], "val_accuracy": [0.09833333641290665, 0.09966666996479034, 0.10233332961797714, 0.09833333641290665, 0.09966666996479034, 0.10000000149011612, 0.09833333641290665, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0], [7, 4, 2, 4, 5, 5, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 3, 3, 1, 0, 1, 2, 3, 3, 0], [28, 8, 99, 84, 1, 78], [0, 0, 1, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 4], [], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 3, 3, 9], [1, 3, 3, 1], [27, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 20, 20, 12, 8, 2, 5, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.square(beta), tf.math.add(beta, grad))))))), tf.math.add(beta, grad)), alpha), tf.math.add(tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), beta)))), tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08374059200286865, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [1, 9, 2, 5, 4, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 5, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 9, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 6, 4, 3, 1, 0, 2, 1, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [629277340.8903649, 11510941685.720778, 53854116689.11795, 150844600501.23895, 322385164303.95984, 596545326360.1089], "accuracy": [0.10051512718200684, 0.10249637067317963, 0.10051512718200684, 0.1010434553027153, 0.10011887550354004, 0.09893012791872025], "val_loss": [2314153472.0, 18506183241.142857, 62450293613.71429, 148022624256.0, 289093170907.4286, 499543591204.5714], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [6, 9, 6, 2, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [5, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1, 1, 1], [2, 3, 0], [4, 3], [], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [32, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302895766081764, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.10236428678035736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [5, 4, 2, 4, 2, 3, 0, 5, 5, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 5, 3, 3, 0, 1, 2, 3, 1, 0], [15, 52, 72, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0], [2, 2, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 1, 1, 1, 0, 1, 0, 7, 4, 3, 2], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.pow(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))))), tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))))), alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.multiply(sigma, sigma)))", "other_info": {"loss": [2.302899355586683, 2.302586524934659, 2.3025851296301547, 2.3025847929280747, 2.3025837802710614, 2.3025822509092473], "accuracy": [0.10210011899471283, 0.09998679161071777, 0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736426898411341, 1.973640033176967, 1.9736389432634627, 1.9736405781337194, 1.9736439159938268, 1.973637580871582], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 1, 4, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 3, 3, 0, 1, 2, 3, 1, 0], [53, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [0, 3], [72], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [0, 3, 3, 1], [56, 38, 19]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 8, 8, 2, 1, 1, 0, 1, 1, 1, 0, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, alpha)), tf.math.add(beta, beta)), tf.math.square(tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302895766081764, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.10236428678035736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 5, 5, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 3, 2, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 4], [], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [1, 3, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 6, 5, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.add(beta, grad)), tf.math.add(beta, beta)), tf.math.add(beta, tf.math.pow(tf.math.square(grad), tf.math.square(tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08374059200286865, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [4, 9, 6, 2, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 5, 2, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 7, 5, 2, 1, 1, 0, 1, 0, 4, 3, 1, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, grad)), tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [452373.09497166926, 8217490.647734777, 38366214.53440761, 107364757.86025624, 229342798.45515785, 424238359.60163784], "accuracy": [0.1006472036242485, 0.10249637067317963, 0.10051512718200684, 0.1010434553027153, 0.10011887550354004, 0.09893012791872025], "val_loss": [1656600.0, 13193702.857142856, 44464147.428571425, 105320571.42857143, 205615593.14285713, 355202157.71428573], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 6, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 9, 2, 5, 4, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 5, 1, 2, 3, 3, 0], [74, 35, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 2, 3, 1], [4, 38]], "fitness": -0.09942857176065445, "mapping_values": [1, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3038501038196744, 2.3038207823652965, 2.3064721257317227, 2.3142958611639624, 2.317057931837294, 2.3273991614820275, 2.3332020991419475, 2.3453269032218973, 2.355313814925543, 2.3705167564434415, 2.3875673645759194, 2.4059627927163683, 2.4434146681765303, 2.469471344559216, 2.4950929900139016, 2.541112804205001, 2.572366854266216, 2.6143278218751664, 2.6679225284756294, 2.708328557068, 2.7655324342622105, 2.834800197747185, 2.9047782477166093, 2.9847951901508534, 3.0565781613477014, 3.117105197597882, 3.1916417310644434, 3.3034504327193353], "accuracy": [0.09259014576673508, 0.08928807079792023, 0.09060890227556229, 0.08757099509239197, 0.08717474341392517, 0.08691058307886124, 0.09153348207473755, 0.09694888442754745, 0.09391097724437714, 0.09919429570436478, 0.1006472036242485, 0.10130762308835983, 0.09576013684272766, 0.09628847241401672, 0.09760929644107819, 0.09509972482919693, 0.10091137140989304, 0.10091137140989304, 0.10051512718200684, 0.10117553919553757, 0.09681680053472519, 0.09509972482919693, 0.09642054885625839, 0.10117553919553757, 0.10157178342342377, 0.09721305221319199, 0.10210011899471283, 0.0956280529499054], "val_loss": [1.97177369253976, 1.9732386725289481, 1.9747798102242606, 1.976335116795131, 1.9780918530055456, 1.980644975389753, 1.984482901436942, 1.989673137664795, 1.9962118693760462, 2.004045690808977, 2.0132263728550504, 2.0238429478236606, 2.0360045433044434, 2.0498059136526927, 2.0653480802263533, 2.0827413967677524, 2.102095331464495, 2.1235177176339284, 2.147116184234619, 2.1729932512555803, 2.2012363842555454, 2.2319367953709195, 2.2651868547712053, 2.3010780470711842, 2.3396848269871304, 2.381085123334612, 2.425337110246931, 2.4724812507629395], "val_accuracy": [0.023000000044703484, 0.02266666665673256, 0.033666666597127914, 0.052666667848825455, 0.0729999989271164, 0.08833333104848862, 0.09300000220537186, 0.0963333323597908, 0.09666666388511658, 0.09666666388511658, 0.0963333323597908, 0.0976666659116745, 0.09799999743700027, 0.09866666793823242, 0.0989999994635582, 0.09866666793823242, 0.0989999994635582, 0.0989999994635582, 0.09933333098888397, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.10000000149011612, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 4, 3, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.09857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 1, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, beta)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [1147.7574668322036, 2.3117085560012756, 2.3055981219547017, 2.3036622313964386, 2.3031117228028197, 2.3030706079266627, 2548493285532.764, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09589222073554993, 0.09747721254825592, 0.09153348207473755, 0.09509972482919693, 0.09470347315073013, 0.09391097724437714, 0.09681680053472519, 0.1022322028875351, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.986659049987793, 1.9779915128435408, 1.975226879119873, 1.9741734777178084, 1.9737980025155204, 1.973738534109933, 1.5073500014662296e+28, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09966666996479034, 0.09966666996479034, 0.09833333641290665, 0.09966666996479034, 0.10000000149011612, 0.10733333230018616, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}]