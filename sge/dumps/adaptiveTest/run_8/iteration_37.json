[{"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 3, 2, 3], [79, 57], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 2, 6, 6, 0, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.8097142577171326, "mapping_values": [1, 3, 3, 1, 2, 1, 12, 12, 7, 5, 2, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(alpha, tf.math.add(beta, grad)), tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.add(beta, grad), grad)))), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, sigma)))", "other_info": {"loss": [2.393293259843245, 1.9100361820445668, 1.3665585553625619, 1.2100664275968867, 0.9291685275854514, 0.9461822996223292, 0.8184392273134764, 0.8023180910121055, 0.7573330544241352, 0.7040250979914027, 0.7140833031090417, 0.6813542336331792, 0.6781874436743901, 0.6331076880708079, 0.6367023047234451, 0.6194231264217418, 0.6260447040399021, 0.6031953437437613, 0.5773008012768457, 0.5597925947295392, 0.5638918331065875, 0.5756527217797096, 0.5308563388129267, 0.5419475082015286, 0.5176599440699351, 0.5007174723278404, 0.5046600649983829, 0.49137132383687165, 0.4932034326275153, 0.4841642012063617, 0.4683761172613621, 0.4616320831562156], "accuracy": [0.27143046259880066, 0.4085325598716736, 0.5474838018417358, 0.6046757102012634, 0.6619997620582581, 0.6551313996315002, 0.6902654767036438, 0.6976621150970459, 0.7180029153823853, 0.7334566116333008, 0.7331924438476562, 0.739400327205658, 0.737947404384613, 0.7598732113838196, 0.7531369924545288, 0.7618544697761536, 0.7606657147407532, 0.7685906887054443, 0.780610203742981, 0.7869502305984497, 0.791969358921051, 0.7862898111343384, 0.7993659973144531, 0.7940827012062073, 0.8043851256370544, 0.8148196935653687, 0.8171972036361694, 0.8165367841720581, 0.813498854637146, 0.8211596608161926, 0.8201030492782593, 0.8273676037788391], "val_loss": [1.910304410117013, 0.9776419912065778, 0.9905024256025042, 0.7333190781729562, 0.7224894762039185, 0.5853234018598285, 0.5746367658887591, 0.6219339370727539, 0.5720997708184379, 0.5843430246625628, 0.5212544543402535, 0.5445246696472168, 0.5085622753415789, 0.5073158740997314, 0.47597907270704, 0.5243255070277623, 0.48023280075618197, 0.45775855439049856, 0.4692638771874564, 0.4432844008718218, 0.5118263619286674, 0.4487746698515756, 0.4497327719415937, 0.4264088613646371, 0.41033650296075, 0.3965129256248474, 0.4033138411385672, 0.40600781781332834, 0.47237292357853483, 0.4085256372179304, 0.4001415882791792, 0.39273654563086374], "val_accuracy": [0.2853333353996277, 0.6173333525657654, 0.6103333234786987, 0.6896666884422302, 0.6833333373069763, 0.7490000128746033, 0.7480000257492065, 0.7300000190734863, 0.7210000157356262, 0.7356666922569275, 0.7736666798591614, 0.7329999804496765, 0.7823333144187927, 0.7733333110809326, 0.7886666655540466, 0.7559999823570251, 0.7793333530426025, 0.8083333373069763, 0.7749999761581421, 0.8196666836738586, 0.778333306312561, 0.8006666898727417, 0.7986666560173035, 0.8180000185966492, 0.8243333101272583, 0.8403333425521851, 0.8410000205039978, 0.8146666884422302, 0.79666668176651, 0.8190000057220459, 0.8230000138282776, 0.8396666646003723]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 3, 2, 3], [44, 57], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 2, 6, 6, 5, 2, 2, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 1, 0, 1, 2, 3, 3, 0, 2, 2, 5], [94, 82, 66, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 4, 8, 9], [3, 3, 3, 1], [71, 38]], "fitness": -0.3334285616874695, "mapping_values": [1, 1, 1, 0, 1, 1, 14, 14, 8, 6, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, grad), grad), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, alpha)), tf.math.add(beta, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.210543588766285, 2.615151703239605, 2.3032423431815694, 2.2793160961477623, 2.34899690925579, 2.2490955354861613, 2.3053957878118334, 2.3033620944002346, 2.3033930585526394], "accuracy": [0.2218993455171585, 0.10500594228506088, 0.10315678268671036, 0.14634791016578674, 0.15559370815753937, 0.16919825971126556, 0.09998679161071777, 0.09576013684272766, 0.09760929644107819], "val_loss": [3.7628451756068637, 1.9746598516191756, 1.9722026416233607, 1.9324222292218889, 1.9617400169372559, 1.976832594190325, 1.9742114884512765, 1.9738238198416573, 1.97374085017613], "val_accuracy": [0.09966666996479034, 0.10400000214576721, 0.10466666519641876, 0.1276666671037674, 0.1003333330154419, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 2, 2, 3], [44, 57], [1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 2, 6, 6, 8, 3, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0, 5, 4, 5, 7, 8, 7], [3, 3, 3, 1, 0, 3, 2, 3, 3, 0, 2, 2, 5], [42, 71, 43, 99, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 3, 3, 6, 9, 2, 9], [3, 0, 3, 1], [45, 38]], "fitness": -0.3334285616874695, "mapping_values": [1, 3, 3, 1, 2, 1, 36, 36, 24, 12, 5, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.sqrt(grad), tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), tf.math.add(beta, grad)), tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.subtract(alpha, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.subtract(tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.negative(tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.square(tf.math.add(beta, beta)), tf.math.add(beta, grad))))))), tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(tf.math.add(beta, grad), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), beta))))))), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.210543588766285, 2.615151703239605, 2.3032423431815694, 2.2793160961477623, 2.34899690925579, 2.2490955354861613, 2.3053957878118334, 2.3033620944002346, 2.3033930585526394], "accuracy": [0.2218993455171585, 0.10500594228506088, 0.10315678268671036, 0.14634791016578674, 0.15559370815753937, 0.16919825971126556, 0.09998679161071777, 0.09576013684272766, 0.09760929644107819], "val_loss": [3.7628451756068637, 1.9746598516191756, 1.9722026416233607, 1.9324222292218889, 1.9617400169372559, 1.976832594190325, 1.9742114884512765, 1.9738238198416573, 1.97374085017613], "val_accuracy": [0.09966666996479034, 0.10400000214576721, 0.10466666519641876, 0.1276666671037674, 0.1003333330154419, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [1, 2, 2, 3], [44, 57], [1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 2, 6, 6, 5, 2, 2, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [94, 82, 66, 84, 1, 78], [0, 0, 0, 1, 0, 0], [0, 0, 1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 2, 1, 2], [45, 38]], "fitness": -0.2945714294910431, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 1, 6, 5, 3, 2, 0, 6, 4, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.divide_no_nan(alpha, grad), tf.math.add(beta, grad)), tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, sigma))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, beta)))", "other_info": {"loss": [2.320806782936234, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.28543123602867126, 0.12970545887947083, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.8948002542768205, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.19966666400432587, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [2, 2, 2, 3], [44, 57], [1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 2, 6, 6, 5, 2, 2, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 2, 3, 2, 3, 3, 0], [58, 82, 66, 84, 1, 78], [0, 0, 0, 1, 0, 0], [0, 0, 1, 0, 1], [3, 3, 0], [2, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [9, 8, 9, 2, 9], [3, 2, 1, 2], [3, 38]], "fitness": -0.11800000071525574, "mapping_values": [1, 3, 3, 1, 2, 0, 10, 10, 5, 5, 0, 6, 5, 3, 2, 0, 1, 1, 0, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.divide_no_nan(alpha, grad), tf.math.add(beta, grad)), tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), sigma)), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, sigma))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3018807842746907, 2.3025248017624116, 2.3025827452554175, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.1010434553027153, 0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9735828127179826, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.1120000034570694, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 3, 2, 3], [44, 57], [1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 2, 5, 2, 1, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 0, 0, 1, 1, 3, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0], [0, 3, 3, 6, 9], [3, 2, 3, 1], [45, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 12, 12, 7, 5, 3, 1, 1, 0, 1, 0, 8, 4, 4, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(grad, tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.subtract(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(sigma, beta), sigma), alpha))", "other_info": {"loss": [2.3021998528586467, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09206181764602661, 0.09549596905708313, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9705072811671667, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03933333232998848, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 1, 0], [9, 6, 4, 9], [0, 3, 2, 3], [44, 57], [1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [8, 2, 6, 2, 1, 5, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 3, 0, 1, 1, 3, 3, 0], [33, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [1, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 1, 9, 9, 9], [3, 0, 3, 1], [45, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07832518965005875, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [1, 2, 2, 3], [44, 57], [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [2, 2, 4, 3, 8, 2, 2, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 2, 3, 3, 0, 3, 2, 3, 3, 0], [94, 82, 66, 84, 1, 78], [0, 0, 0, 1, 0, 0], [0, 0, 1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [2, 2, 1, 2], [40, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 7, 7, 1, 6, 5, 3, 2, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(alpha, beta), grad), tf.math.multiply(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), grad), tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, sigma))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [9, 6, 4, 9], [0, 3, 2, 3], [44, 57], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [8, 2, 6, 2, 1, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 1, 3, 1, 1, 3, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [17], [0, 0, 0, 1, 1, 1, 1, 0, 0, 0], [1, 3, 3, 0, 0], [3, 3, 3, 1], [45, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 14, 14, 8, 6, 3, 1, 1, 0, 1, 0, 7, 3, 4, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, grad)))), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.multiply(sigma, sigma), sigma), alpha)", "other_info": {"loss": [2.3029446941026057, 2.3025844321668485, 2.3025845762068142, 2.302584760586788, 2.3025855658438856, 2.3025847650585143, 2.3025826507823313, 2.302583275942235, 2.3025831456953396, 2.302583703212514, 2.3025859796989865], "accuracy": [0.1014397069811821, 0.10210011899471283, 0.09998679161071777, 0.10051512718200684, 0.10368511080741882, 0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.10500594228506088, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736429623195104, 1.973644188472203, 1.9736452783857072, 1.9736438478742326, 1.9736449377877372, 1.973642417362758, 1.973642417362758, 1.9736430304391044, 1.973642417362758, 1.9736428260803223, 1.9736454146248954], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09966666996479034, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0], [4, 6, 4, 9], [2, 2, 2, 3], [44, 57], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 6, 4, 6, 1, 1, 9, 0, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 3, 3, 1, 0, 3, 3, 0], [11, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [5, 3, 3, 5, 5, 2, 9], [3, 2, 1, 2], [45, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 10, 7, 3, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.math.multiply(tf.math.square(sigma), tf.math.square(beta)), tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [1, 2, 2, 3], [44, 57], [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 2, 6, 6, 5, 2, 2, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 1, 2, 3, 3, 0], [94, 82, 66, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [7], [], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 3, 2, 9], [3, 3, 3, 1], [45, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07832518965005875, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [1, 2, 2, 3], [44, 57], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 2, 6, 6, 5, 2, 2, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 1, 2, 3, 3, 0], [94, 82, 66, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [1, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 3, 2, 9], [3, 3, 3, 1], [45, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07832518965005875, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [9, 6, 4, 9], [1, 2, 2, 3], [44, 57], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [1, 2, 6, 6, 5, 2, 2, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 1, 0, 1, 1, 3, 3, 0], [94, 82, 66, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 3, 2, 9, 9], [3, 2, 3, 1], [45, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 12, 12, 6, 6, 2, 1, 1, 0, 1, 0, 8, 6, 2, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.add(beta, grad)), tf.math.add(beta, tf.math.square(tf.math.add(tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha))))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), sigma), beta), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3028605199367176, 2.3024543493084697, 2.3024235961459585, 2.3024340580955487, 2.3022414060269427, 2.3027213624660225], "accuracy": [0.10381719470024109, 0.10474177449941635, 0.10276053100824356, 0.10210011899471283, 0.10606260597705841, 0.1018359512090683], "val_loss": [1.9736697333199638, 1.9736862863813127, 1.973721981048584, 1.9738255909511022, 1.9741157804216658, 1.9754510607038225], "val_accuracy": [0.09966666996479034, 0.09733333438634872, 0.0976666659116745, 0.0976666659116745, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [1, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [1, 2, 2, 3], [44, 57], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [8, 2, 6, 2, 1, 1, 0, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 1, 2, 3, 3, 0], [94, 80, 66, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 3, 6, 9], [2, 3, 3, 1], [45, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(beta, grad)), tf.math.add(beta, tf.math.subtract(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.negative(tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [9, 6, 4, 9], [0, 3, 2, 3], [44, 57], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [1, 2, 6, 6, 0, 2, 2, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 1, 2, 3, 3, 0], [94, 82, 66, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [6, 3, 9, 2, 9, 0], [3, 3, 3, 1], [45, 38]], "fitness": -0.09828571230173111, "mapping_values": [1, 1, 1, 1, 0, 1, 10, 10, 5, 5, 1, 1, 1, 0, 1, 0, 7, 5, 2, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad)))), tf.math.divide_no_nan(tf.math.negative(tf.math.add(beta, grad)), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)), sigma)", "other_info": {"loss": [1.6430724931509775e+18, 1.8713997971819036e+18, 1.8907777622035113e+18, 1.8989772368858127e+18, 1.9545779580202094e+18, 2.0037170543057062e+18], "accuracy": [0.1026284471154213, 0.09919429570436478, 0.1026284471154213, 0.09708096832036972, 0.09972262382507324, 0.10077928751707077], "val_loss": [1.3598276812582794e+18, 1.348024423934104e+18, 1.3763453695644513e+18, 1.4047490534447887e+18, 1.43107077278966e+18, 1.4577446500015987e+18], "val_accuracy": [0.09166666865348816, 0.08933333307504654, 0.08799999952316284, 0.08733333647251129, 0.08666666597127914, 0.08666666597127914]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0], [6, 6, 4, 9], [1, 2, 2, 3], [44, 57], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 2, 6, 6, 5, 2, 2, 2, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 1, 0, 1, 1, 3, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0, 0], [1, 0, 1], [3, 3, 0], [4], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 3, 6, 9], [1, 2, 1, 2], [56, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 3, 3, 1, 2, 0, 18, 18, 9, 9, 1, 1, 1, 0, 1, 0, 6, 3, 3, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.square(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, alpha)))), tf.math.add(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), grad))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(alpha, beta), alpha))", "other_info": {"loss": [2.3022696668949614, 2.30233327593896, 2.3011147993241696, 2.3033802124172578, 2.301749290114365, 2.3018506940298264], "accuracy": [0.09219389408826828, 0.09377889335155487, 0.09747721254825592, 0.08981640636920929, 0.09126931428909302, 0.09615638852119446], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [0, 0, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 3, 2, 3], [44, 57], [1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1], [1, 2, 6, 6, 4, 1, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 1, 3, 1, 1, 3, 3, 0], [42, 71, 43, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3], [1], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 1, 0, 9], [3, 3, 3, 1], [36, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 7, 7, 4, 3, 2, 13, 13, 7, 6, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(grad, grad), tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, alpha)), grad)), tf.math.add(beta, alpha)))), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3022696668949614, 2.30233327593896, 2.3011147993241696, 2.3033802124172578, 2.301749290114365, 2.3018506940298264], "accuracy": [0.09219389408826828, 0.09377889335155487, 0.09747721254825592, 0.08981640636920929, 0.09126931428909302, 0.09615638852119446], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [1, 2, 2, 3], [44, 57], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [1, 2, 6, 6, 5, 2, 2, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 1, 0, 1, 1, 3, 3, 0], [78, 71, 43, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 1, 9, 9, 9], [3, 3, 3, 1], [45, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 3, 3, 1, 2, 0, 14, 14, 7, 7, 1, 1, 0, 0, 0, 0, 6, 5, 1, 2], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.math.add(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.add(beta, alpha))), tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))), alpha)), alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.subtract(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), sigma))", "other_info": {"loss": [2.3022696668949614, 2.30233327593896, 2.3011147993241696, 2.3033802124172578, 2.301749290114365, 2.3018506940298264], "accuracy": [0.09219389408826828, 0.09377889335155487, 0.09747721254825592, 0.08981640636920929, 0.09126931428909302, 0.09615638852119446], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [2, 3, 2, 3], [44, 57], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [8, 2, 6, 2, 1, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [0], [17], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 8, 2, 9], [3, 3, 3, 1], [45, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 3, 3, 1, 2, 0, 6, 6, 3, 3, 0, 6, 4, 3, 1, 1, 7, 4, 3, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(alpha, grad), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), sigma)), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.add(sigma, sigma)), sigma))", "other_info": {"loss": [2.3022696668949614, 2.30233327593896, 2.3011147993241696, 2.3033802124172578, 2.301749290114365, 2.3018506940298264], "accuracy": [0.09219389408826828, 0.09377889335155487, 0.09747721254825592, 0.08981640636920929, 0.09126931428909302, 0.09615638852119446], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 3, 2, 3], [44, 57], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [8, 2, 6, 2, 1, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 3, 1, 1, 3, 3, 0], [42, 71, 43, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3], [0], [17], [0, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 3, 3, 6, 0], [3, 0, 2, 1], [45, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 3, 3, 1, 2, 1, 14, 14, 8, 6, 3, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad)))), alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3022696668949614, 2.30233327593896, 2.3011147993241696, 2.3033802124172578, 2.301749290114365, 2.3018506940298264], "accuracy": [0.09219389408826828, 0.09377889335155487, 0.09747721254825592, 0.08981640636920929, 0.09126931428909302, 0.09615638852119446], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]