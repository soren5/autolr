[{"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [8, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 95, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [45, 47, 50]], "fitness": -0.8097142577171326, "mapping_values": [1, 5, 5, 4, 1, 2, 19, 19, 12, 7, 3, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.negative(alpha), tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(grad), tf.math.add(tf.math.subtract(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), tf.math.pow(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad))), tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))))), beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.023724461653607, 1.389218728429905, 1.0508985330305551, 0.8659960594175357, 0.8829226131609891, 0.771766964124257, 0.7051853029924124, 0.688549433701137, 0.6510002318232869, 0.6700478880680343, 0.6404620026632023, 0.5987828410517317, 0.5971245775133344, 0.5713873972053211, 0.5597139111898516, 0.5381831865284846, 0.535869042713723, 0.533133645240956, 0.5327748987007418, 0.49978990534970225, 0.5150245088612037, 0.49360283103522656, 0.4781778862904312, 0.4828000181992891, 0.46800772427898496, 0.45799877232706004, 0.4587548944251318, 0.44391209997158987, 0.4326407870698709, 0.42771812470014997, 0.4266391921477972, 0.42449376540901385, 0.43101638730301944, 0.4105236702520519, 0.386299551170988, 0.39918242127840875, 0.38168107844488636, 0.3793041002851168, 0.37841033335642776, 0.3929746768273351, 0.3711867986605892, 0.38688072103629606, 0.3595603574315838, 0.36982719025686195, 0.35731517114439, 0.3684860797425019, 0.3561557938575178, 0.3378815846381139, 0.34354328169184684, 0.33631678116697883, 0.3374520938598941, 0.32347116172274326, 0.3483897332053348, 0.3240703738140408, 0.3200159089881132], "accuracy": [0.328490287065506, 0.5258222222328186, 0.6197332143783569, 0.6769251227378845, 0.6803592443466187, 0.7067758440971375, 0.7293620109558105, 0.7357020378112793, 0.7511557340621948, 0.7454761862754822, 0.7585523724555969, 0.7794214487075806, 0.7717606425285339, 0.7852331399917603, 0.7917051911354065, 0.7976489067077637, 0.7971205711364746, 0.8001585006713867, 0.7946110367774963, 0.8140271902084351, 0.8063663840293884, 0.8132346868515015, 0.817989706993103, 0.821820080280304, 0.8256505131721497, 0.8300092220306396, 0.8261788487434387, 0.837537944316864, 0.8412362933158875, 0.8425571322441101, 0.837537944316864, 0.8426892161369324, 0.8367455005645752, 0.8490291833877563, 0.8533879518508911, 0.8544445633888245, 0.8590674996376038, 0.8597279191017151, 0.8636903762817383, 0.854708731174469, 0.8621054291725159, 0.852331280708313, 0.8688416481018066, 0.86118084192276, 0.8713511824607849, 0.8607845902442932, 0.8717474341392517, 0.8734645247459412, 0.8716153502464294, 0.8730682730674744, 0.8747853636741638, 0.8803328275680542, 0.876370370388031, 0.8803328275680542, 0.8778232932090759], "val_loss": [1.5376288209642683, 0.7816523483821324, 0.6742923259735107, 0.6516340630395072, 0.5685669524329049, 0.5745866128376552, 0.5346845047814506, 0.5433727673121861, 0.5275756461279733, 0.5191808257784162, 0.48894807270595003, 0.48635661602020264, 0.47294294834136963, 0.4796396153313773, 0.5071476527622768, 0.4490946616445269, 0.4266683203833444, 0.44235157115118845, 0.4386976787022182, 0.43452521732875277, 0.4113100256238665, 0.4188257796423776, 0.4377418671335493, 0.39628740719386507, 0.4198967558997018, 0.3952333331108093, 0.4051107679094587, 0.38253780773707796, 0.3707163419042315, 0.3716700758252825, 0.387414140360696, 0.43385701520102365, 0.3741820199148996, 0.3581538796424866, 0.3916551470756531, 0.35952103989464895, 0.3481631023543222, 0.3545633980206081, 0.3496471643447876, 0.3443513342312404, 0.40630423171179636, 0.3576383250100272, 0.3648808257920401, 0.3480424199785505, 0.34112214190619333, 0.4127011128834316, 0.3295654484203884, 0.3602744681494577, 0.3653724789619446, 0.33007359504699707, 0.32837376424244474, 0.35729960032871794, 0.3239614282335554, 0.3446939161845616, 0.3205261060169765], "val_accuracy": [0.5173333287239075, 0.6353333592414856, 0.7196666598320007, 0.7163333296775818, 0.7639999985694885, 0.7383333444595337, 0.765333354473114, 0.7580000162124634, 0.7706666588783264, 0.7493333220481873, 0.7856666445732117, 0.7866666913032532, 0.777999997138977, 0.7910000085830688, 0.7649999856948853, 0.8143333196640015, 0.8216666579246521, 0.8016666769981384, 0.7963333129882812, 0.8059999942779541, 0.8226666450500488, 0.8199999928474426, 0.7946666479110718, 0.8303333520889282, 0.8109999895095825, 0.8333333134651184, 0.8346666693687439, 0.8336666822433472, 0.843666672706604, 0.8423333168029785, 0.8330000042915344, 0.800000011920929, 0.8416666388511658, 0.8479999899864197, 0.8266666531562805, 0.8423333168029785, 0.8523333072662354, 0.8473333120346069, 0.8553333282470703, 0.8583333492279053, 0.8180000185966492, 0.8426666855812073, 0.8446666598320007, 0.8526666760444641, 0.859000027179718, 0.8166666626930237, 0.8659999966621399, 0.8483333587646484, 0.8413333296775818, 0.8673333525657654, 0.862666666507721, 0.8603333234786987, 0.8656666874885559, 0.8463333249092102, 0.8663333058357239]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [8, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [90, 47, 50]], "fitness": -0.7528571486473083, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 6, 5, 1, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.1313822745584052, 1.7187531941507974, 1.3614619149035625, 1.061021813249166, 0.907688606188455, 0.7911800335127805, 0.8131438206845365, 0.7315203094321817, 0.6777416167006028, 0.666630797398136, 0.6353459228629749, 0.6004372771389969, 0.6080420349236603], "accuracy": [0.2946770489215851, 0.3879276216030121, 0.4928014874458313, 0.5881653428077698, 0.6540747880935669, 0.6996433734893799, 0.6914542317390442, 0.7197200059890747, 0.7432307600975037, 0.7420420050621033, 0.759080708026886, 0.7693831920623779, 0.7670056819915771], "val_loss": [1.914240768977574, 1.1548799106052943, 0.869643109185355, 0.725304126739502, 0.6199936696461269, 0.6014256136757987, 0.5829088176999774, 0.5347917931420463, 0.5247685398374285, 0.5199297836848668, 0.5073472602026803, 0.4976235968726022, 0.4966638428824289], "val_accuracy": [0.2316666692495346, 0.4623333215713501, 0.6019999980926514, 0.6443333625793457, 0.7136666774749756, 0.7236666679382324, 0.7396666407585144, 0.7720000147819519, 0.7613333463668823, 0.7680000066757202, 0.7710000276565552, 0.7703333497047424, 0.7583333253860474]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [8, 57], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 0, 1, 3, 2], [90, 47, 50]], "fitness": -0.7528571486473083, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 5, 1, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.1313822745584052, 1.7187531941507974, 1.3614619149035625, 1.061021813249166, 0.907688606188455, 0.7911800335127805, 0.8131438206845365, 0.7315203094321817, 0.6777416167006028, 0.666630797398136, 0.6353459228629749, 0.6004372771389969, 0.6080420349236603], "accuracy": [0.2946770489215851, 0.3879276216030121, 0.4928014874458313, 0.5881653428077698, 0.6540747880935669, 0.6996433734893799, 0.6914542317390442, 0.7197200059890747, 0.7432307600975037, 0.7420420050621033, 0.759080708026886, 0.7693831920623779, 0.7670056819915771], "val_loss": [1.914240768977574, 1.1548799106052943, 0.869643109185355, 0.725304126739502, 0.6199936696461269, 0.6014256136757987, 0.5829088176999774, 0.5347917931420463, 0.5247685398374285, 0.5199297836848668, 0.5073472602026803, 0.4976235968726022, 0.4966638428824289], "val_accuracy": [0.2316666692495346, 0.4623333215713501, 0.6019999980926514, 0.6443333625793457, 0.7136666774749756, 0.7236666679382324, 0.7396666407585144, 0.7720000147819519, 0.7613333463668823, 0.7680000066757202, 0.7710000276565552, 0.7703333497047424, 0.7583333253860474]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [3, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [8, 2, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [96, 57, 50]], "fitness": -0.3774285614490509, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 6, 5, 1, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.1928181783508363, 2.255579694954002, 2.24388334260184, 2.227238106359155, 3.3810621165108166, 2.3080955120424758, 2.303847114061399], "accuracy": [0.2347113937139511, 0.16497160494327545, 0.23603223264217377, 0.16457535326480865, 0.1578391194343567, 0.10038304328918457, 0.09972262382507324], "val_loss": [1.9703939301627023, 1.4695827960968018, 1.974604538508824, 1.977733543940953, 1.9806733131408691, 1.9745006561279297, 1.9714716502598353], "val_accuracy": [0.27433332800865173, 0.3903333246707916, 0.09700000286102295, 0.10000000149011612, 0.10400000214576721, 0.10433333367109299, 0.13733333349227905]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 6, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [90, 47, 50]], "fitness": -0.162285715341568, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.2097040045892777, 3.2234950093324897, 2.3044389022292555, 2.303575207292443, 2.3033271251558043, 2.303306647358538], "accuracy": [0.20552106201648712, 0.16919825971126556, 0.09259014576673508, 0.10038304328918457, 0.09945846349000931, 0.09060890227556229], "val_loss": [3.880350112915039, 1.9755137307303292, 1.9740889413016183, 1.9737121718270438, 1.9738071305411202, 1.9737306322370256], "val_accuracy": [0.11533333361148834, 0.10400000214576721, 0.10400000214576721, 0.10999999940395355, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [8, 57], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 0, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [90, 47, 50]], "fitness": -0.162285715341568, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.2097040045892777, 3.2234950093324897, 2.3044389022292555, 2.303575207292443, 2.3033271251558043, 2.303306647358538], "accuracy": [0.20552106201648712, 0.16919825971126556, 0.09259014576673508, 0.10038304328918457, 0.09945846349000931, 0.09060890227556229], "val_loss": [3.880350112915039, 1.9755137307303292, 1.9740889413016183, 1.9737121718270438, 1.9738071305411202, 1.9737306322370256], "val_accuracy": [0.11533333361148834, 0.10400000214576721, 0.10400000214576721, 0.10999999940395355, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 0, 9, 0], [2, 0, 0, 3, 1, 0], [54, 57], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1], [0, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [90, 47, 44, 43, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [90, 47, 50]], "fitness": -0.15457142889499664, "mapping_values": [1, 6, 6, 3, 3, 2, 19, 19, 13, 6, 4, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.negative(tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(grad, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))))), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, tf.math.sqrt(grad)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2101201393884233, 2.8586751512485393, 2.3043071246181794, 2.3034662938058146, 2.3031652369566595, 2.3032353168402397], "accuracy": [0.20578522980213165, 0.16880200803279877, 0.09457138925790787, 0.09972262382507324, 0.10236428678035736, 0.09047681838274002], "val_loss": [3.994875226702009, 1.9756952013288225, 1.9741631235395158, 1.9736898286002023, 1.9737870352608817, 1.973642008645194], "val_accuracy": [0.1106666699051857, 0.10400000214576721, 0.10400000214576721, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [8, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0], [0, 3, 9, 9, 9], [3, 1, 3, 1], [90, 47, 50]], "fitness": -0.15457142889499664, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.2101201393884233, 2.8586751512485393, 2.3043071246181794, 2.3034662938058146, 2.3031652369566595, 2.3032353168402397], "accuracy": [0.20578522980213165, 0.16880200803279877, 0.09457138925790787, 0.09972262382507324, 0.10236428678035736, 0.09047681838274002], "val_loss": [3.994875226702009, 1.9756952013288225, 1.9741631235395158, 1.9736898286002023, 1.9737870352608817, 1.973642008645194], "val_accuracy": [0.1106666699051857, 0.10400000214576721, 0.10400000214576721, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [8, 57], [0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 5, 3, 4, 0, 6, 3, 3, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 3, 9, 9, 9], [2, 1, 0, 1, 3, 2], [42, 47, 50]], "fitness": -0.15399999916553497, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, alpha)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.2060182017735865, 2.6586776560386727, NaN, NaN, NaN, NaN], "accuracy": [0.21040813624858856, 0.14251750707626343, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.8651977266584123, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1080000028014183, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [2, 1, 3, 1], [26, 89, 50]], "fitness": -0.11342857033014297, "mapping_values": [1, 5, 5, 4, 1, 2, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 6, 5, 1, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), beta)))", "other_info": {"loss": [2.301246829461806, 2.300010334814009, 2.300400051915052, 2.3014398635165914, 2.3019745872950024, 2.3023365147282906, 2.3024358305681054, 2.3025449548871713, 2.302574863082398, 2.3025775492356644, 2.3025828082374753], "accuracy": [0.08981640636920929, 0.1014397069811821, 0.1018359512090683, 0.09919429570436478, 0.09721305221319199, 0.10315678268671036, 0.10408136248588562, 0.10236428678035736, 0.1014397069811821, 0.1006472036242485, 0.09998679161071777], "val_loss": [1.9700473376682825, 1.9711809158325195, 1.9724790028163366, 1.973104749407087, 1.9734691892351424, 1.9736106736319405, 1.9736411230904716, 1.973642417362758, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.07100000232458115, 0.09733333438634872, 0.10133333504199982, 0.09366666525602341, 0.10533333569765091, 0.10999999940395355, 0.10133333504199982, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [8, 57], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 5, 3, 4, 0, 2, 3, 3, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 69, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 3, 2, 3, 9, 4, 9], [3, 1, 0, 1, 3, 2], [56, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 21, 21, 12, 9, 3, 1, 0, 0, 0, 0, 10, 7, 3, 3], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(alpha, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.add(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.multiply(tf.math.add(tf.math.subtract(tf.math.add(beta, grad), tf.math.pow(tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))), beta), tf.math.add(beta, grad)))))))))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.math.multiply(sigma, alpha), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [130544935.84140585, 2488056042.7314754, 11511017482.279222, 32180286345.112667, 68921292610.37538, 127321196614.60204], "accuracy": [0.09800554811954498, 0.10276053100824356, 0.10038304328918457, 0.10077928751707077, 0.09919429570436478, 0.10487385839223862], "val_loss": [496460324.5714286, 3969154048.0, 13392977627.428572, 31743166756.57143, 61994816073.14286, 107122290102.85715], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [8, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [3, 1, 9, 3, 9], [3, 1, 3, 1], [90, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 7, 5, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), sigma)), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07040020823478699, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [8, 57], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [2, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1], [1, 3, 6, 3, 3, 7, 8, 0, 0, 2, 9, 7, 0], [3, 1, 0, 1, 3, 2, 1, 2], [16, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 20, 20, 13, 7, 4, 1, 0, 0, 0, 0, 21, 13, 8, 2], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))), tf.math.multiply(tf.math.pow(tf.math.add(beta, tf.math.negative(grad)), tf.math.add(beta, tf.math.divide_no_nan(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(grad, tf.math.pow(tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.sqrt(grad))))))), tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.add(sigma, tf.math.sqrt(alpha)), tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), alpha), tf.math.negative(sigma)), tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.negative(beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1], [8, 5, 3, 4, 0, 6, 3, 0, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [90, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [2, 3], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0], [0, 3, 9, 9, 9], [3, 1, 3, 1], [90, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 20, 20, 13, 7, 3, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.negative(tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), tf.math.pow(tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))))), tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.add(beta, beta)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [8, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0], [1, 3, 9, 9, 9], [1, 1, 3, 1], [90, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 2, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 5, 4, 1, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2084332635670.4185, 24301208176284.285, 95016376652542.61, 247178636913482.1, 510809425170791.75, 909202038868285.2], "accuracy": [0.1002509593963623, 0.09668471664190292, 0.0952318087220192, 0.1002509593963623, 0.10130762308835983, 0.10289261490106583], "val_loss": [7628268465590.857, 43942715176667.43, 131259564481389.72, 291999113393883.44, 548507473973833.1, 923176491773366.9], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [6, 1, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 0, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0], [0, 0, 9, 3, 9], [3, 1, 3, 1, 3, 2], [90, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 3, 3, 0, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(beta, tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303071611986625, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 0, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 4, 9], [3, 1, 3, 1], [90, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 6, 5, 1, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, alpha)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [8, 57], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [2, 5, 3, 4, 0, 6, 8, 3, 2, 1, 4, 0, 8, 1, 1, 8, 9, 0], [4, 0, 0, 3, 0, 3, 2, 3, 2, 0, 3], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 3, 0, 3, 9], [3, 1, 0, 1, 3, 2], [42, 47, 50]], "fitness": -0.06914285570383072, "mapping_values": [1, 1, 1, 0, 1, 0, 27, 27, 16, 11, 4, 1, 1, 0, 1, 0, 7, 4, 3, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.negative(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(tf.math.subtract(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), tf.math.pow(tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(grad)))))), tf.math.add(beta, tf.math.subtract(beta, tf.math.subtract(tf.math.sqrt(tf.math.add(beta, grad)), beta))))))), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.negative(tf.math.multiply(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.301844214309775, 2.301041506631358, 2.3011960332671713, 2.301459787323679, 2.302152760670311, 2.3017288939418448, 2.3024257261046737, 2.301427052525198, 2.301230905897125, 2.301315053075202, 2.3005204843476528, 2.3008461500187245, 2.3004026059634524, 2.3007285136430804, 2.300200102997179, 2.3004105577316456, 2.299978523962313, 2.300288013605126, 2.3000225349739165, 2.2999269715421127, 2.300132644426837, 2.299664992508934, 2.2998139601279055, 2.298500884714506, 2.300606177105423, 2.299293604288843, 2.299894858408031, 2.2999563344701754, 2.2990699169610895, 2.299165909269215, 2.2996537679410993, 2.3005109605473013, 2.3005312289292266, 2.3001234125798136, 2.2994340243608473, 2.3006369706394336, 2.299779222374028, 2.300290410954167, 2.300072989175978, 2.299971736417455, 2.299252602024605, 2.2993272598535155, 2.2990252288923667, 2.2989882554643897, 2.299983655236511, 2.299111245031512, 2.2996591509545814, 2.2995081172092102, 2.3005077105786556], "accuracy": [0.09060890227556229, 0.09655263274908066, 0.09272222965955734, 0.09470347315073013, 0.09338264167308807, 0.09100515395402908, 0.09509972482919693, 0.09259014576673508, 0.09140139818191528, 0.09509972482919693, 0.09430722147226334, 0.09391097724437714, 0.09074098616838455, 0.0956280529499054, 0.09351472556591034, 0.09536388516426086, 0.09034473448991776, 0.09681680053472519, 0.10011887550354004, 0.10038304328918457, 0.09787346422672272, 0.10117553919553757, 0.0940430611371994, 0.09153348207473755, 0.09377889335155487, 0.09800554811954498, 0.09919429570436478, 0.09681680053472519, 0.09628847241401672, 0.1002509593963623, 0.09708096832036972, 0.09576013684272766, 0.09800554811954498, 0.09985470771789551, 0.09840179979801178, 0.08994849026203156, 0.0948355570435524, 0.09285431355237961, 0.1014397069811821, 0.09985470771789551, 0.10157178342342377, 0.09879804402589798, 0.10619468986988068, 0.09879804402589798, 0.09655263274908066, 0.10051512718200684, 0.09906221181154251, 0.09972262382507324, 0.09576013684272766], "val_loss": [1.97043091910226, 1.9702745165143694, 1.9701368468148368, 1.9700260843549455, 1.9698690005711146, 1.9697820799691337, 1.9696589197431291, 1.9695665495736259, 1.9694833074297224, 1.969390528542655, 1.9693260192871094, 1.9692776543753487, 1.9692278589521135, 1.9691617148263114, 1.9691149847848075, 1.9690574237278529, 1.969036647251674, 1.9690160070146834, 1.9690088544573103, 1.969031470162528, 1.9690143721444267, 1.9690272467476981, 1.9690299034118652, 1.9690744536263602, 1.9690701620919364, 1.9690943445478166, 1.9691019739423479, 1.9691098076956612, 1.9691267694745744, 1.9691675731113978, 1.969168254307338, 1.9691788809640067, 1.9691815376281738, 1.9691952296665736, 1.9692209107535226, 1.9692184584481376, 1.9692086492265974, 1.969193594796317, 1.9691899163382394, 1.9691850798470634, 1.9691790172031947, 1.9691760880606515, 1.969175066266741, 1.9691579682486398, 1.9691427775791712, 1.969135011945452, 1.9691168921334403, 1.9691294942583357, 1.9691378048488073], "val_accuracy": [0.03999999910593033, 0.0430000014603138, 0.044333335012197495, 0.04600000008940697, 0.04600000008940697, 0.04833333194255829, 0.04899999871850014, 0.04933333396911621, 0.050333332270383835, 0.05233333259820938, 0.0533333346247673, 0.05433333292603493, 0.05533333495259285, 0.05766666680574417, 0.057999998331069946, 0.057999998331069946, 0.05766666680574417, 0.05833333358168602, 0.05900000035762787, 0.05900000035762787, 0.059333331882953644, 0.05999999865889549, 0.05999999865889549, 0.05999999865889549, 0.06066666543483734, 0.06066666543483734, 0.061000000685453415, 0.06199999898672104, 0.06199999898672104, 0.06300000101327896, 0.06400000303983688, 0.06533333659172058, 0.0676666647195816, 0.06866666674613953, 0.07100000232458115, 0.07066666334867477, 0.07199999690055847, 0.07233333587646484, 0.07233333587646484, 0.0729999989271164, 0.07400000095367432, 0.07466666400432587, 0.07533333450555801, 0.07566666603088379, 0.07533333450555801, 0.07533333450555801, 0.07533333450555801, 0.07533333450555801, 0.07466666400432587]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 1, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 79], [0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [8, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6, 3, 9], [3, 1, 3, 1], [90, 47, 50]], "fitness": -0.04171428456902504, "mapping_values": [1, 5, 5, 4, 1, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 10, 7, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(sigma, alpha), tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.3018292638808666, 2.301144585050785, 2.3014534076821174, 2.3018243783626575, 2.3027921407261482, 2.3024322310805303, 2.303350666841228, 2.3023174994688747, 2.3022459234465162, 2.3025867482690354, 2.3018069801045886, 2.3020920009345995, 2.301866137324827, 2.3023866619243125, 2.30188348154429, 2.302219575847444, 2.301650305402718, 2.3019937611117482], "accuracy": [0.09047681838274002, 0.09602430462837219, 0.09166556596755981, 0.09100515395402908, 0.09206181764602661, 0.08915598690509796, 0.09259014576673508, 0.09179764986038208, 0.09126931428909302, 0.09100515395402908, 0.09245806187391281, 0.09192973375320435, 0.08796724677085876, 0.09100515395402908, 0.08981640636920929, 0.09126931428909302, 0.08532558381557465, 0.09245806187391281], "val_loss": [1.9704653876168388, 1.9704369136265345, 1.9704219954354423, 1.970412118094308, 1.9704008783612932, 1.9703938620431083, 1.9703868457249232, 1.9703820773533411, 1.9703776495797294, 1.9703724043709892, 1.9703685896737235, 1.9703655924115862, 1.970362595149449, 1.9703591210501534, 1.9703559194292342, 1.970353330884661, 1.9703508104596819, 1.970348494393485], "val_accuracy": [0.03933333232998848, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03999999910593033, 0.04100000113248825, 0.04100000113248825, 0.04100000113248825, 0.04100000113248825, 0.041333332657814026, 0.041333332657814026, 0.041333332657814026, 0.0416666679084301, 0.0416666679084301, 0.0416666679084301, 0.0416666679084301, 0.0416666679084301, 0.0416666679084301]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [8, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 0, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [90, 47, 50]], "fitness": -0.03999999910593033, "mapping_values": [1, 5, 5, 4, 1, 2, 3, 3, 2, 1, 0, 6, 4, 3, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.301915684837187, 2.3013011839537496, 2.3016369386261575, 2.302009592250259, 2.3030308158941524, 2.3026601703584846], "accuracy": [0.09021265059709549, 0.09496764093637466, 0.09100515395402908, 0.09166556596755981, 0.09272222965955734, 0.0882314071059227], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]