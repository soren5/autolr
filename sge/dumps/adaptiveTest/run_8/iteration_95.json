[{"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.7928571701049805, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 6, 6, 2, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(grad, tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta))), tf.math.add(beta, tf.math.pow(tf.math.negative(grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.2349795069220266, 1.851260500199224, 1.3101781888991268, 1.1135993152561598, 0.982253019269022, 0.9126272330178938, 0.8566074032415693, 0.8253474266159694, 0.8055302168415711, 0.757323308675013, 0.7568990652823508, 0.7305936739980395, 0.7203984966115582, 0.7050855072293188, 0.6931811009636172, 0.683077067526466, 0.6933780253256285, 0.6696517364208204, 0.6542985841362248, 0.6668886590344071, 0.6475600653698637, 0.6296891713060518, 0.625810756997945, 0.622724360636181, 0.619047058437951, 0.6061272283649684, 0.6005441381820772, 0.604825909150952, 0.5990011755973907, 0.5916521703530895, 0.5935781817504868, 0.5889504819639985, 0.5953300898935754, 0.5820865073633578, 0.57416857531231], "accuracy": [0.23497556149959564, 0.4476291239261627, 0.5514463186264038, 0.6141856908798218, 0.6514331102371216, 0.6740192770957947, 0.6894729733467102, 0.7049266695976257, 0.7041342258453369, 0.7257958054542542, 0.7230220437049866, 0.733060359954834, 0.7323999404907227, 0.7391361594200134, 0.7446836829185486, 0.7498348951339722, 0.7386078238487244, 0.7500990629196167, 0.7584202885627747, 0.7514199018478394, 0.7565711140632629, 0.7666094303131104, 0.7627789974212646, 0.7652885913848877, 0.7707040309906006, 0.7730814814567566, 0.7794214487075806, 0.774270236492157, 0.7810064554214478, 0.780610203742981, 0.7800818681716919, 0.7783648371696472, 0.7807422876358032, 0.7817989587783813, 0.7853652238845825], "val_loss": [1.7706311770847865, 1.1472724505833216, 0.84134955065591, 0.7251607179641724, 0.7095681428909302, 0.6239643267222813, 0.6155056272234235, 0.6206956080027989, 0.556101884160723, 0.558138234274728, 0.5634130239486694, 0.5348114626748222, 0.5534231662750244, 0.5220837763377598, 0.5068133899143764, 0.5213275807244437, 0.5364168541772025, 0.49414518901279997, 0.4934475762503488, 0.4929765633174351, 0.48159280845097135, 0.46745709010532926, 0.4651152065822056, 0.4726276397705078, 0.46179635184151785, 0.4645989452089582, 0.4563608595303127, 0.45991160188402447, 0.45631096192768644, 0.4429402095930917, 0.4512855921472822, 0.45539748668670654, 0.4609661442892892, 0.43627273184912546, 0.4508518576622009], "val_accuracy": [0.5163333415985107, 0.597000002861023, 0.6489999890327454, 0.6916666626930237, 0.6909999847412109, 0.7300000190734863, 0.731333315372467, 0.7163333296775818, 0.7586666941642761, 0.7603333592414856, 0.7639999985694885, 0.75, 0.750333309173584, 0.7676666378974915, 0.7836666703224182, 0.7756666541099548, 0.7570000290870667, 0.7896666526794434, 0.7799999713897705, 0.7739999890327454, 0.7976666688919067, 0.8033333420753479, 0.8053333163261414, 0.8029999732971191, 0.8040000200271606, 0.7953333258628845, 0.8059999942779541, 0.8109999895095825, 0.7919999957084656, 0.8186666369438171, 0.8109999895095825, 0.8003333210945129, 0.7996666431427002, 0.812666654586792, 0.8063333630561829]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 3, 0, 0, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [85, 56, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 2, 3, 1], [56, 38]], "fitness": -0.7928571701049805, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 6, 5, 2, 1, 1, 0, 1, 0, 6, 5, 1, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), tf.math.negative(beta)), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(sigma, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.2349795069220266, 1.851260500199224, 1.3101781888991268, 1.1135993152561598, 0.982253019269022, 0.9126272330178938, 0.8566074032415693, 0.8253474266159694, 0.8055302168415711, 0.757323308675013, 0.7568990652823508, 0.7305936739980395, 0.7203984966115582, 0.7050855072293188, 0.6931811009636172, 0.683077067526466, 0.6933780253256285, 0.6696517364208204, 0.6542985841362248, 0.6668886590344071, 0.6475600653698637, 0.6296891713060518, 0.625810756997945, 0.622724360636181, 0.619047058437951, 0.6061272283649684, 0.6005441381820772, 0.604825909150952, 0.5990011755973907, 0.5916521703530895, 0.5935781817504868, 0.5889504819639985, 0.5953300898935754, 0.5820865073633578, 0.57416857531231], "accuracy": [0.23497556149959564, 0.4476291239261627, 0.5514463186264038, 0.6141856908798218, 0.6514331102371216, 0.6740192770957947, 0.6894729733467102, 0.7049266695976257, 0.7041342258453369, 0.7257958054542542, 0.7230220437049866, 0.733060359954834, 0.7323999404907227, 0.7391361594200134, 0.7446836829185486, 0.7498348951339722, 0.7386078238487244, 0.7500990629196167, 0.7584202885627747, 0.7514199018478394, 0.7565711140632629, 0.7666094303131104, 0.7627789974212646, 0.7652885913848877, 0.7707040309906006, 0.7730814814567566, 0.7794214487075806, 0.774270236492157, 0.7810064554214478, 0.780610203742981, 0.7800818681716919, 0.7783648371696472, 0.7807422876358032, 0.7817989587783813, 0.7853652238845825], "val_loss": [1.7706311770847865, 1.1472724505833216, 0.84134955065591, 0.7251607179641724, 0.7095681428909302, 0.6239643267222813, 0.6155056272234235, 0.6206956080027989, 0.556101884160723, 0.558138234274728, 0.5634130239486694, 0.5348114626748222, 0.5534231662750244, 0.5220837763377598, 0.5068133899143764, 0.5213275807244437, 0.5364168541772025, 0.49414518901279997, 0.4934475762503488, 0.4929765633174351, 0.48159280845097135, 0.46745709010532926, 0.4651152065822056, 0.4726276397705078, 0.46179635184151785, 0.4645989452089582, 0.4563608595303127, 0.45991160188402447, 0.45631096192768644, 0.4429402095930917, 0.4512855921472822, 0.45539748668670654, 0.4609661442892892, 0.43627273184912546, 0.4508518576622009], "val_accuracy": [0.5163333415985107, 0.597000002861023, 0.6489999890327454, 0.6916666626930237, 0.6909999847412109, 0.7300000190734863, 0.731333315372467, 0.7163333296775818, 0.7586666941642761, 0.7603333592414856, 0.7639999985694885, 0.75, 0.750333309173584, 0.7676666378974915, 0.7836666703224182, 0.7756666541099548, 0.7570000290870667, 0.7896666526794434, 0.7799999713897705, 0.7739999890327454, 0.7976666688919067, 0.8033333420753479, 0.8053333163261414, 0.8029999732971191, 0.8040000200271606, 0.7953333258628845, 0.8059999942779541, 0.8109999895095825, 0.7919999957084656, 0.8186666369438171, 0.8109999895095825, 0.8003333210945129, 0.7996666431427002, 0.812666654586792, 0.8063333630561829]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [0, 6, 5, 4, 9, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 0, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [56, 38]], "fitness": -0.7928571701049805, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 6, 5, 1, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(sigma, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.2349795069220266, 1.851260500199224, 1.3101781888991268, 1.1135993152561598, 0.982253019269022, 0.9126272330178938, 0.8566074032415693, 0.8253474266159694, 0.8055302168415711, 0.757323308675013, 0.7568990652823508, 0.7305936739980395, 0.7203984966115582, 0.7050855072293188, 0.6931811009636172, 0.683077067526466, 0.6933780253256285, 0.6696517364208204, 0.6542985841362248, 0.6668886590344071, 0.6475600653698637, 0.6296891713060518, 0.625810756997945, 0.622724360636181, 0.619047058437951, 0.6061272283649684, 0.6005441381820772, 0.604825909150952, 0.5990011755973907, 0.5916521703530895, 0.5935781817504868, 0.5889504819639985, 0.5953300898935754, 0.5820865073633578, 0.57416857531231], "accuracy": [0.23497556149959564, 0.4476291239261627, 0.5514463186264038, 0.6141856908798218, 0.6514331102371216, 0.6740192770957947, 0.6894729733467102, 0.7049266695976257, 0.7041342258453369, 0.7257958054542542, 0.7230220437049866, 0.733060359954834, 0.7323999404907227, 0.7391361594200134, 0.7446836829185486, 0.7498348951339722, 0.7386078238487244, 0.7500990629196167, 0.7584202885627747, 0.7514199018478394, 0.7565711140632629, 0.7666094303131104, 0.7627789974212646, 0.7652885913848877, 0.7707040309906006, 0.7730814814567566, 0.7794214487075806, 0.774270236492157, 0.7810064554214478, 0.780610203742981, 0.7800818681716919, 0.7783648371696472, 0.7807422876358032, 0.7817989587783813, 0.7853652238845825], "val_loss": [1.7706311770847865, 1.1472724505833216, 0.84134955065591, 0.7251607179641724, 0.7095681428909302, 0.6239643267222813, 0.6155056272234235, 0.6206956080027989, 0.556101884160723, 0.558138234274728, 0.5634130239486694, 0.5348114626748222, 0.5534231662750244, 0.5220837763377598, 0.5068133899143764, 0.5213275807244437, 0.5364168541772025, 0.49414518901279997, 0.4934475762503488, 0.4929765633174351, 0.48159280845097135, 0.46745709010532926, 0.4651152065822056, 0.4726276397705078, 0.46179635184151785, 0.4645989452089582, 0.4563608595303127, 0.45991160188402447, 0.45631096192768644, 0.4429402095930917, 0.4512855921472822, 0.45539748668670654, 0.4609661442892892, 0.43627273184912546, 0.4508518576622009], "val_accuracy": [0.5163333415985107, 0.597000002861023, 0.6489999890327454, 0.6916666626930237, 0.6909999847412109, 0.7300000190734863, 0.731333315372467, 0.7163333296775818, 0.7586666941642761, 0.7603333592414856, 0.7639999985694885, 0.75, 0.750333309173584, 0.7676666378974915, 0.7836666703224182, 0.7756666541099548, 0.7570000290870667, 0.7896666526794434, 0.7799999713897705, 0.7739999890327454, 0.7976666688919067, 0.8033333420753479, 0.8053333163261414, 0.8029999732971191, 0.8040000200271606, 0.7953333258628845, 0.8059999942779541, 0.8109999895095825, 0.7919999957084656, 0.8186666369438171, 0.8109999895095825, 0.8003333210945129, 0.7996666431427002, 0.812666654586792, 0.8063333630561829]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [5, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57, 79], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [0, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.7928571701049805, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.negative(beta))), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.2349795069220266, 1.851260500199224, 1.3101781888991268, 1.1135993152561598, 0.982253019269022, 0.9126272330178938, 0.8566074032415693, 0.8253474266159694, 0.8055302168415711, 0.757323308675013, 0.7568990652823508, 0.7305936739980395, 0.7203984966115582, 0.7050855072293188, 0.6931811009636172, 0.683077067526466, 0.6933780253256285, 0.6696517364208204, 0.6542985841362248, 0.6668886590344071, 0.6475600653698637, 0.6296891713060518, 0.625810756997945, 0.622724360636181, 0.619047058437951, 0.6061272283649684, 0.6005441381820772, 0.604825909150952, 0.5990011755973907, 0.5916521703530895, 0.5935781817504868, 0.5889504819639985, 0.5953300898935754, 0.5820865073633578, 0.57416857531231], "accuracy": [0.23497556149959564, 0.4476291239261627, 0.5514463186264038, 0.6141856908798218, 0.6514331102371216, 0.6740192770957947, 0.6894729733467102, 0.7049266695976257, 0.7041342258453369, 0.7257958054542542, 0.7230220437049866, 0.733060359954834, 0.7323999404907227, 0.7391361594200134, 0.7446836829185486, 0.7498348951339722, 0.7386078238487244, 0.7500990629196167, 0.7584202885627747, 0.7514199018478394, 0.7565711140632629, 0.7666094303131104, 0.7627789974212646, 0.7652885913848877, 0.7707040309906006, 0.7730814814567566, 0.7794214487075806, 0.774270236492157, 0.7810064554214478, 0.780610203742981, 0.7800818681716919, 0.7783648371696472, 0.7807422876358032, 0.7817989587783813, 0.7853652238845825], "val_loss": [1.7706311770847865, 1.1472724505833216, 0.84134955065591, 0.7251607179641724, 0.7095681428909302, 0.6239643267222813, 0.6155056272234235, 0.6206956080027989, 0.556101884160723, 0.558138234274728, 0.5634130239486694, 0.5348114626748222, 0.5534231662750244, 0.5220837763377598, 0.5068133899143764, 0.5213275807244437, 0.5364168541772025, 0.49414518901279997, 0.4934475762503488, 0.4929765633174351, 0.48159280845097135, 0.46745709010532926, 0.4651152065822056, 0.4726276397705078, 0.46179635184151785, 0.4645989452089582, 0.4563608595303127, 0.45991160188402447, 0.45631096192768644, 0.4429402095930917, 0.4512855921472822, 0.45539748668670654, 0.4609661442892892, 0.43627273184912546, 0.4508518576622009], "val_accuracy": [0.5163333415985107, 0.597000002861023, 0.6489999890327454, 0.6916666626930237, 0.6909999847412109, 0.7300000190734863, 0.731333315372467, 0.7163333296775818, 0.7586666941642761, 0.7603333592414856, 0.7639999985694885, 0.75, 0.750333309173584, 0.7676666378974915, 0.7836666703224182, 0.7756666541099548, 0.7570000290870667, 0.7896666526794434, 0.7799999713897705, 0.7739999890327454, 0.7976666688919067, 0.8033333420753479, 0.8053333163261414, 0.8029999732971191, 0.8040000200271606, 0.7953333258628845, 0.8059999942779541, 0.8109999895095825, 0.7919999957084656, 0.8186666369438171, 0.8109999895095825, 0.8003333210945129, 0.7996666431427002, 0.812666654586792, 0.8063333630561829]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 3, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 0, 1, 3, 0, 1, 2, 3, 3, 0], [85, 59, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 5, 3, 9], [1, 1, 3, 1], [56, 38]], "fitness": -0.34457144141197205, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 4, 2, 2, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.031229866998008, 2.3363860764161486, 2.3036130405514705, 2.3030070703043175, 2.3009771434716924, 2.214467278781458], "accuracy": [0.1900673657655716, 0.12230881303548813, 0.09932637959718704, 0.10091137140989304, 0.10606260597705841, 0.19191652536392212], "val_loss": [1.8882224900381905, 1.9741943223135812, 1.9735753876822335, 1.9735020228794642, 1.9552508762904577, 1.8094113894871302], "val_accuracy": [0.33933332562446594, 0.09833333641290665, 0.10400000214576721, 0.09700000286102295, 0.1899999976158142, 0.10566666722297668]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [5, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [3, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 29, 20, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0], [0, 3, 9, 1, 9], [1, 1, 3, 1], [56, 91]], "fitness": -0.1860000044107437, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [4.191763558675584, 2.3069196507883833, 2.3035178868179513, 2.3030475519588673, 2.301723608739498, 2.304244642543629, 2.3042863580481785, 2.3030666331290064, 2.303461149714768, 2.302908182049692], "accuracy": [0.17884030938148499, 0.09919429570436478, 0.1006472036242485, 0.10302469879388809, 0.10751552134752274, 0.1364416927099228, 0.10210011899471283, 0.1018359512090683, 0.09351472556591034, 0.10091137140989304], "val_loss": [1.979069709777832, 1.9744069916861398, 1.9736021586826868, 1.9733918734959193, 1.9670324325561523, 1.9746394157409668, 1.973987647465297, 1.9737787246704102, 1.9739422798156738, 1.9737281799316406], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.10400000214576721, 0.10400000214576721, 0.19566667079925537, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09166666865348816]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57, 79], [1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [0, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 0, 2, 0, 0, 1, 2, 3, 3, 0], [85, 59, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0], [9, 3, 9, 3, 9], [1, 1, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), tf.math.negative(beta)), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3023727000932714, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [5, 6, 2, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 7, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 0, 2, 4, 1, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [2, 3], [], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 2, 9, 3, 9], [0, 3, 3, 1], [56, 38, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 6, 6, 1, 5, 4, 2, 2, 0, 6, 5, 1, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), beta), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(grad)), tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [747313651.0639272, 14248541050.50535, 66746956475.798706, 182804907860.22876, 391470349193.3832, 724050138196.5331], "accuracy": [0.09879804402589798, 0.09509972482919693, 0.10236428678035736, 0.10553427785634995, 0.09708096832036972, 0.10236428678035736], "val_loss": [2839606710.857143, 22708649984.0, 76633299821.71428, 181637663012.57144, 354755177910.8571, 612993616164.5714], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 3, 3, 0, 4, 2, 3, 3, 0], [28, 23, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [9, 3, 9, 3, 9], [0, 3, 3, 1], [56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(grad, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3023727000932714, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [5, 6, 2, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [5, 6, 4, 4, 9, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 0, 2, 4, 4, 1, 2, 3, 3, 0], [21, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [1, 1, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(beta, tf.math.add(beta, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07264561951160431, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [5, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 3, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [56, 38, 22]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 10, 10, 5, 5, 3, 1, 1, 0, 1, 0, 4, 3, 1, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta))), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [437895.450223827, 8289432.594637432, 38750845.136441685, 106032149.64469688, 226947807.64918768, 419613392.68683136], "accuracy": [0.09879804402589798, 0.09509972482919693, 0.10249637067317963, 0.10553427785634995, 0.09708096832036972, 0.10236428678035736], "val_loss": [1656600.0, 13193702.857142856, 44464147.428571425, 105320571.42857143, 205615593.14285713, 355202157.71428573], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 0, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 1, 0, 1, 2, 3, 3, 0], [85, 54, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 2, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [609042924.0492659, 11611694285.990227, 54394355476.11887, 148972965367.00568, 319017203585.13275, 590042517417.9791], "accuracy": [0.09879804402589798, 0.09509972482919693, 0.10236428678035736, 0.10553427785634995, 0.09708096832036972, 0.10236428678035736], "val_loss": [2314153472.0, 18506183241.142857, 62450293613.71429, 148022624256.0, 289093170907.4286, 499543591204.5714], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [5, 6, 9, 9, 0], [3, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 6, 2, 4, 3, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 1, 2, 3, 3, 0], [28, 92, 99, 84, 1, 78], [0, 0, 0, 1, 0, 1], [0, 0, 0, 1], [3, 3, 0], [2, 3], [], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [4, 3, 9, 3, 9], [1, 1, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 4, 3, 1, 0, 7, 5, 2, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.negative(sigma)), tf.math.add(sigma, beta))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 0, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 1, 0, 1, 2, 3, 3, 0], [85, 54, 99, 84, 1, 78, 2, 15], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 1, 9, 3, 9], [2, 1, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 2, 5, 5, 2, 3, 2, 1, 0, 0, 0, 0, 6, 4, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(beta, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [5, 6, 2, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57, 79], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [0, 6, 5, 4, 9, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [85, 54, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [2, 3], [], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0], [6, 3, 9, 3, 9], [2, 1, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 5, 2, 2, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.pow(tf.math.add(beta, grad), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(beta, tf.math.multiply(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [3, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 3, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 3, 1, 4, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [0, 3], [20], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 6, 6, 1, 1, 1, 0, 1, 1, 2, 1, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.multiply(grad, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.negative(tf.math.add(beta, alpha)))))), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [609042924.0492659, 11611694285.990227, 54394355476.11887, 148972965367.00568, 319017203585.13275, 590042517417.9791], "accuracy": [0.09879804402589798, 0.09509972482919693, 0.10236428678035736, 0.10553427785634995, 0.09708096832036972, 0.10236428678035736], "val_loss": [2314153472.0, 18506183241.142857, 62450293613.71429, 148022624256.0, 289093170907.4286, 499543591204.5714], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 1, 4, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 0, 2, 2, 0, 1, 2, 3, 3, 0], [85, 59, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0], [8, 3, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 4, 5, 2, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta)), beta)), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3023727000932714, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [3, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [7, 4, 4, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 1, 4, 4, 2, 3, 3, 0], [85, 54, 99, 84, 1, 78, 2, 15], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [3, 2, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 21, 21, 12, 9, 2, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.multiply(grad, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.square(tf.math.add(tf.math.add(beta, beta), alpha)))))), tf.math.add(beta, grad))), tf.math.subtract(tf.math.add(beta, grad), beta)), tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, grad))))), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)), sigma)", "other_info": {"loss": [2.302237621875975, 2.3013827799176183, 2.3007761510355977, 2.302660595109481, 2.301676639271702, 2.301816441332266], "accuracy": [0.0878351628780365, 0.09272222965955734, 0.09034473448991776, 0.09245806187391281, 0.08942015469074249, 0.09166556596755981], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [5, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57, 79], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [7, 4, 2, 7, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 0, 2, 3, 0, 1, 2, 3, 3, 0], [85, 54, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 1], [0, 1, 1, 1], [6, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0], [0, 3, 9, 6, 9], [1, 1, 3, 1], [56, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 21, 21, 11, 10, 4, 3, 3, 1, 2, 0, 4, 2, 2, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)))))), tf.math.subtract(tf.math.add(beta, alpha), beta)))))))), tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, grad))))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, alpha))", "other_info": {"loss": [2.302237621875975, 2.3013827799176183, 2.3007761510355977, 2.302660595109481, 2.301676639271702, 2.301816441332266], "accuracy": [0.0878351628780365, 0.09272222965955734, 0.09034473448991776, 0.09245806187391281, 0.08942015469074249, 0.09166556596755981], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 4, 7, 0, 8, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [19, 37, 99, 84, 1, 78], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [56, 38, 1]], "fitness": -0.034285712987184525, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 6, 5, 2, 6, 4, 3, 1, 0, 6, 5, 1, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.pow(grad, tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta))), tf.math.add(beta, tf.math.add(tf.math.negative(grad), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.302467302166948, 2.3023857777821877, 2.3028469571914845, 2.3056961003075407, 2.3056684547112427, 2.306544281283484], "accuracy": [0.0882314071059227, 0.09074098616838455, 0.08889182657003403, 0.09021265059709549, 0.08360850811004639, 0.08796724677085876], "val_loss": [1.9710369110107422, 1.9715802328927177, 1.9721786635262626, 1.9728056362697057, 1.9734676906040736, 1.9741367612566267], "val_accuracy": [0.03233333304524422, 0.026333333924412727, 0.023666666820645332, 0.023333333432674408, 0.024000000208616257, 0.02866666577756405]}}]