[{"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 3, 2, 3], [79, 57], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 2, 6, 6, 0, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.8214285969734192, "mapping_values": [1, 3, 3, 1, 2, 1, 12, 12, 7, 5, 2, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(alpha, tf.math.add(beta, grad)), tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.add(beta, grad), grad)))), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, sigma)))", "other_info": {"loss": [2.090288723622016, 1.9352132506012176, 1.29624860520691, 1.0463608492398542, 0.8790043453892477, 0.8381831826409172, 0.7538916878239857, 0.7233293060739326, 0.6873534167951297, 0.6588327737610967, 0.6294739696768847, 0.6447093130228715, 0.6126532565727052, 0.5948118651390327, 0.5749727783658485, 0.5431843706960329, 0.5639667228039434, 0.5796419379418599, 0.5266043003980652, 0.5292791820567565, 0.5015218605486284, 0.5052459714332702, 0.4913105863377623, 0.47635412344118827, 0.47668869650327705, 0.46507992148950444, 0.46440375219278207, 0.45054830353116126], "accuracy": [0.3144895136356354, 0.34922730922698975, 0.5287280678749084, 0.6222427487373352, 0.6785101294517517, 0.6847180128097534, 0.7153612375259399, 0.7182670831680298, 0.7460044622421265, 0.7510236501693726, 0.7593448758125305, 0.7614582180976868, 0.765949010848999, 0.7716285586357117, 0.7807422876358032, 0.8010830879211426, 0.7901201844215393, 0.7758552432060242, 0.8041210174560547, 0.8010830879211426, 0.8137630224227905, 0.8058380484580994, 0.8181217908859253, 0.8249900937080383, 0.819442629814148, 0.8278959393501282, 0.8259146809577942, 0.830669641494751], "val_loss": [1.9192700386047363, 1.1079519476209367, 1.0308094705854143, 0.7841528654098511, 0.6987617867333549, 0.5909296785082135, 0.5884861094611031, 0.5790151868547712, 0.5677948338644845, 0.4910369941166469, 0.5304068156651088, 0.48617965834481375, 0.46385627133505686, 0.4805947371891567, 0.4668904883520944, 0.5021597828183856, 0.43051139797483173, 0.516424332346235, 0.4461296626499721, 0.44646486214229036, 0.4328212227140154, 0.4038868376186916, 0.39950140033449444, 0.4012787256922041, 0.41924302918570383, 0.3902747460774013, 0.4202004671096802, 0.39639945541109356], "val_accuracy": [0.37299999594688416, 0.5740000009536743, 0.5263333320617676, 0.6433333158493042, 0.6520000100135803, 0.7170000076293945, 0.7276666760444641, 0.7429999709129333, 0.7369999885559082, 0.7756666541099548, 0.7586666941642761, 0.7720000147819519, 0.7886666655540466, 0.7746666669845581, 0.7826666831970215, 0.7816666960716248, 0.8166666626930237, 0.777999997138977, 0.7990000247955322, 0.7946666479110718, 0.8040000200271606, 0.8216666579246521, 0.831333339214325, 0.8259999752044678, 0.8133333325386047, 0.8296666741371155, 0.8149999976158142, 0.8163333535194397]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 3, 2, 3], [79, 57], [1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [5, 2, 6, 6, 0, 1, 9, 4, 1, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 3, 3, 3, 2, 3, 3, 0, 2, 2, 5], [42, 53, 43, 84, 1, 78], [0, 0, 0, 1, 0, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [45, 38]], "fitness": -0.795714259147644, "mapping_values": [1, 1, 1, 0, 1, 1, 11, 11, 7, 4, 1, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(grad, grad)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.negative(tf.math.subtract(grad, tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, sigma)))", "other_info": {"loss": [2.2405315698523642, 2.0918290239236357, 1.9206279590853832, 1.961435696105947, 1.6432749916769966, 1.0812976754352543, 0.8817395541677701, 0.7999419440462321, 0.6840116848578432, 0.7136173769703725, 0.6596619941539232, 0.6161033781512286, 0.6109273865899673, 0.6049706326137523, 0.5724900846767261, 0.5792843466342921, 0.5632559963032208], "accuracy": [0.2607317268848419, 0.2985074520111084, 0.33760401606559753, 0.3757759928703308, 0.45383700728416443, 0.6230352520942688, 0.68101966381073, 0.7071720957756042, 0.7367587089538574, 0.7374191284179688, 0.7511557340621948, 0.7709681391716003, 0.7728173136711121, 0.7684586048126221, 0.7781006693840027, 0.7803460359573364, 0.7829877138137817], "val_loss": [1.888270718710763, 1.6348203250340052, 1.387901782989502, 1.808190141405378, 1.0077736718314034, 0.7191171475819179, 0.7436308009283883, 0.605640207018171, 0.5354308571134295, 0.5110101188932147, 0.5473927940641131, 0.45642956665584017, 0.47749762875693186, 0.4625912053244455, 0.49360125405447824, 0.42914860589163645, 0.46428799629211426], "val_accuracy": [0.1993333399295807, 0.37566667795181274, 0.43966665863990784, 0.3163333237171173, 0.5839999914169312, 0.6756666898727417, 0.7250000238418579, 0.6890000104904175, 0.75, 0.7683333158493042, 0.7456666827201843, 0.8090000152587891, 0.7789999842643738, 0.7963333129882812, 0.7699999809265137, 0.8069999814033508, 0.7713333368301392]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 1, 0], [2, 6, 4, 9], [0, 3, 2, 3], [37, 57], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 4, 6, 6, 6, 3, 9, 3, 1, 4, 4, 9, 8, 1, 1, 8, 9, 0, 5, 4, 5, 7, 0, 7], [1, 3, 3, 5, 2, 3, 2, 3, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 3, 6, 9, 2, 9], [3, 0, 3, 1], [45, 38]], "fitness": -0.36399999260902405, "mapping_values": [1, 7, 7, 4, 3, 2, 19, 19, 10, 9, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), grad)), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.add(beta, grad), tf.math.subtract(beta, tf.math.pow(tf.math.add(beta, grad), beta)))), tf.math.add(beta, grad)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.834259169968663, 2.305860757008992, 2.303479901772165, 2.303581682036912, 2.3031303454005974, 2.3033013844833303, 2.3029968516229244, 2.301240622989411, 2.2663786267686308, 2.4929148554408305, 2.304079277231047, 2.303269016901736, 2.3031302440309758, 2.3031845636938417], "accuracy": [0.13630960881710052, 0.10210011899471283, 0.10210011899471283, 0.0956280529499054, 0.09747721254825592, 0.09259014576673508, 0.1026284471154213, 0.10474177449941635, 0.17236824333667755, 0.15202747285366058, 0.10091137140989304, 0.09259014576673508, 0.09192973375320435, 0.09430722147226334], "val_loss": [1.9790453229631697, 1.9740142141069685, 1.973593030657087, 1.9735411235264368, 1.973545687539237, 1.973813874380929, 1.9727779115949358, 1.9991121973310197, 1.7091267449515206, 1.975588117327009, 1.9739412580217635, 1.9736099243164062, 1.9734514781406947, 1.9734911918640137], "val_accuracy": [0.0976666659116745, 0.09833333641290665, 0.0976666659116745, 0.10400000214576721, 0.09700000286102295, 0.09833333641290665, 0.09700000286102295, 0.10400000214576721, 0.28866666555404663, 0.09733333438634872, 0.09733333438634872, 0.10233332961797714, 0.10000000149011612, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [0, 0, 1, 1, 0, 1, 0], [1, 6, 4, 9], [0, 2, 2, 3], [44, 57], [1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 5, 6, 6, 2, 3, 9, 8, 2, 1, 4, 9, 8, 9, 1, 0, 9, 0, 0, 5, 1, 7, 8, 6], [3, 3, 3, 1, 0, 3, 0, 3, 3, 0, 0, 0, 5], [58, 45, 43, 99, 81, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 3, 3, 6, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.36399999260902405, "mapping_values": [1, 7, 7, 4, 3, 2, 13, 13, 8, 5, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.divide_no_nan(grad, tf.math.add(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, alpha)), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.sqrt(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.834259169968663, 2.305860757008992, 2.303479901772165, 2.303581682036912, 2.3031303454005974, 2.3033013844833303, 2.3029968516229244, 2.301240622989411, 2.2663786267686308, 2.4929148554408305, 2.304079277231047, 2.303269016901736, 2.3031302440309758, 2.3031845636938417], "accuracy": [0.13630960881710052, 0.10210011899471283, 0.10210011899471283, 0.0956280529499054, 0.09747721254825592, 0.09259014576673508, 0.1026284471154213, 0.10474177449941635, 0.17236824333667755, 0.15202747285366058, 0.10091137140989304, 0.09259014576673508, 0.09192973375320435, 0.09430722147226334], "val_loss": [1.9790453229631697, 1.9740142141069685, 1.973593030657087, 1.9735411235264368, 1.973545687539237, 1.973813874380929, 1.9727779115949358, 1.9991121973310197, 1.7091267449515206, 1.975588117327009, 1.9739412580217635, 1.9736099243164062, 1.9734514781406947, 1.9734911918640137], "val_accuracy": [0.0976666659116745, 0.09833333641290665, 0.0976666659116745, 0.10400000214576721, 0.09700000286102295, 0.09833333641290665, 0.09700000286102295, 0.10400000214576721, 0.28866666555404663, 0.09733333438634872, 0.09733333438634872, 0.10233332961797714, 0.10000000149011612, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [0, 0, 1, 1, 0, 1, 0], [7, 6, 4, 9], [2, 2, 2, 3], [79, 57], [1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [1, 6, 6, 8, 2, 3, 9, 4, 2, 1, 4, 9, 8, 9, 1, 0, 9, 0, 0, 5, 1, 7, 8, 6], [3, 3, 3, 1, 0, 3, 0, 3, 3, 0, 0, 0, 5], [37, 66, 43, 99, 87, 78], [0, 0, 0, 1, 0, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 3, 6, 9, 2, 9], [3, 3, 3, 1], [45, 38]], "fitness": -0.36399999260902405, "mapping_values": [1, 7, 7, 4, 3, 1, 14, 14, 8, 6, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(tf.math.add(beta, grad), tf.math.multiply(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)))), tf.math.add(beta, grad))), tf.math.pow(tf.math.add(beta, alpha), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.834259169968663, 2.305860757008992, 2.303479901772165, 2.303581682036912, 2.3031303454005974, 2.3033013844833303, 2.3029968516229244, 2.301240622989411, 2.2663786267686308, 2.4929148554408305, 2.304079277231047, 2.303269016901736, 2.3031302440309758, 2.3031845636938417], "accuracy": [0.13630960881710052, 0.10210011899471283, 0.10210011899471283, 0.0956280529499054, 0.09747721254825592, 0.09259014576673508, 0.1026284471154213, 0.10474177449941635, 0.17236824333667755, 0.15202747285366058, 0.10091137140989304, 0.09259014576673508, 0.09192973375320435, 0.09430722147226334], "val_loss": [1.9790453229631697, 1.9740142141069685, 1.973593030657087, 1.9735411235264368, 1.973545687539237, 1.973813874380929, 1.9727779115949358, 1.9991121973310197, 1.7091267449515206, 1.975588117327009, 1.9739412580217635, 1.9736099243164062, 1.9734514781406947, 1.9734911918640137], "val_accuracy": [0.0976666659116745, 0.09833333641290665, 0.0976666659116745, 0.10400000214576721, 0.09700000286102295, 0.09833333641290665, 0.09700000286102295, 0.10400000214576721, 0.28866666555404663, 0.09733333438634872, 0.09733333438634872, 0.10233332961797714, 0.10000000149011612, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0], [0, 0, 1, 1, 0, 1, 0], [3, 6, 4, 9], [1, 3, 2, 3], [79, 57], [1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 4, 9, 6, 2, 3, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0, 5, 4, 5, 7, 0, 7], [1, 3, 3, 5, 2, 3, 2, 3, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 3, 6, 9, 2, 9], [3, 0, 3, 1], [45, 38]], "fitness": -0.36399999260902405, "mapping_values": [1, 7, 7, 4, 3, 1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, alpha), tf.math.pow(tf.math.add(beta, grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.834259169968663, 2.305860757008992, 2.303479901772165, 2.303581682036912, 2.3031303454005974, 2.3033013844833303, 2.3029968516229244, 2.301240622989411, 2.2663786267686308, 2.4929148554408305, 2.304079277231047, 2.303269016901736, 2.3031302440309758, 2.3031845636938417], "accuracy": [0.13630960881710052, 0.10210011899471283, 0.10210011899471283, 0.0956280529499054, 0.09747721254825592, 0.09259014576673508, 0.1026284471154213, 0.10474177449941635, 0.17236824333667755, 0.15202747285366058, 0.10091137140989304, 0.09259014576673508, 0.09192973375320435, 0.09430722147226334], "val_loss": [1.9790453229631697, 1.9740142141069685, 1.973593030657087, 1.9735411235264368, 1.973545687539237, 1.973813874380929, 1.9727779115949358, 1.9991121973310197, 1.7091267449515206, 1.975588117327009, 1.9739412580217635, 1.9736099243164062, 1.9734514781406947, 1.9734911918640137], "val_accuracy": [0.0976666659116745, 0.09833333641290665, 0.0976666659116745, 0.10400000214576721, 0.09700000286102295, 0.09833333641290665, 0.09700000286102295, 0.10400000214576721, 0.28866666555404663, 0.09733333438634872, 0.09733333438634872, 0.10233332961797714, 0.10000000149011612, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [1, 1, 0, 1, 0, 1, 0], [1, 6, 4, 9], [0, 3, 2, 3], [96, 57], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [5, 2, 6, 6, 0, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [40, 45, 43, 99, 81, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4], [], [0, 0, 0, 0, 1, 0, 1, 1, 1, 0], [0, 3, 3, 6, 9, 2, 9], [3, 3, 1, 1], [41, 38]], "fitness": -0.14257143437862396, "mapping_values": [1, 1, 1, 0, 1, 1, 17, 17, 10, 7, 2, 1, 1, 0, 1, 0, 8, 5, 3, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.negative(tf.math.subtract(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))))), grad), tf.math.pow(tf.math.add(beta, grad), tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, beta)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(sigma, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), sigma), alpha))", "other_info": {"loss": [2.3007735397365066, 2.3025426033260863, 2.3033034055460684, 2.351803625390483, 3.520465636376172, 5.609175397451953, 8.726792868338462, 105.9982869061717], "accuracy": [0.09866596013307571, 0.08994849026203156, 0.09681680053472519, 0.09813763201236725, 0.10038304328918457, 0.10038304328918457, 0.10276053100824356, 0.10038304328918457], "val_loss": [1.9724314553397042, 1.972977978842599, 1.9754244940621513, 2.3676336152212962, 3.995953014918736, 5.833757264273507, 29.103339059012278, 154.82513863699776], "val_accuracy": [0.0806666687130928, 0.10599999874830246, 0.11733333021402359, 0.10199999809265137, 0.10233332961797714, 0.09966666996479034, 0.09966666996479034, 0.09700000286102295]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [2, 2, 2, 3], [44, 57], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 8, 1, 4, 8, 0, 2, 4, 2, 4, 4, 9, 8, 2, 1, 8, 1, 0, 5, 4, 5, 7, 5, 7], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 71, 43, 94, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [3, 3], [], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 2, 1, 2], [45, 81]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 0, 1, 1, 0, 1, 0, 6, 5, 1, 2], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(alpha, tf.math.sqrt(tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(tf.math.negative(grad))))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [29133262.973158058, 571631168.1944261, 2585849106.9354115, 7245703779.343284, 15466356944.830538, 28188060505.77414], "accuracy": [0.09826971590518951, 0.09628847241401672, 0.1022322028875351, 0.09747721254825592, 0.10355303436517715, 0.10460969805717468], "val_loss": [111578000.0, 891685193.1428572, 3008410477.714286, 7129759012.571428, 13923931282.285715, 24058692169.142857], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [1, 3, 2, 3], [44, 57], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 6, 6, 2, 2, 3, 9, 4, 2, 2, 4, 9, 6, 5, 1, 0, 9, 0, 0, 5, 1, 7, 8, 6], [3, 3, 3, 1, 0, 3, 0, 3, 3, 0, 0, 0, 5], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [2, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 13, 13, 7, 6, 2, 1, 1, 0, 1, 0, 5, 2, 3, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(grad, grad), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, alpha), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08347642421722412, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 0, 0, 1, 0], [7, 6, 4, 9], [2, 2, 2, 3], [44, 57], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 8, 0, 1, 8, 0, 2, 4, 2, 4, 4, 9, 8, 2, 1, 8, 1, 0, 5, 4, 5, 7, 5, 7], [1, 3, 3, 1, 0, 3, 2, 3, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [8, 3, 9, 2, 9], [3, 2, 1, 2], [45, 81]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 19, 19, 11, 8, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.negative(tf.math.add(beta, alpha)))), tf.math.add(beta, tf.math.subtract(tf.math.sqrt(tf.math.negative(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, grad), tf.math.pow(alpha, tf.math.pow(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), grad))), tf.math.add(beta, beta)))))), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0], [7, 6, 4, 9], [0, 3, 2, 3], [79, 57], [0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 4, 6, 6, 2, 3, 9, 2, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0, 5, 4, 5, 7, 0, 7], [1, 3, 3, 5, 2, 3, 3, 3, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4], [], [1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 3, 3, 6, 9, 2, 9], [3, 0, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 1, 28, 28, 18, 10, 4, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, alpha), tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), tf.math.add(beta, grad))), grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.sqrt(grad)))))), tf.math.subtract(grad, tf.math.add(beta, tf.math.subtract(tf.math.sqrt(tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07449477910995483, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [0, 0, 1, 1, 0, 1, 0], [2, 6, 4, 9], [0, 2, 2, 3], [79, 57], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 4, 6, 6, 2, 3, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0, 5, 4, 5, 7, 0, 7], [1, 3, 3, 3, 2, 3, 2, 3, 2, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0], [0, 3, 3, 6, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 2, 19, 19, 10, 9, 1, 1, 1, 0, 1, 0, 8, 4, 4, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.divide_no_nan(alpha, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, grad), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), beta)))))))), tf.math.add(beta, grad))))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(sigma, sigma), sigma), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 3, 2, 3], [79, 57], [1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1], [1, 2, 6, 6, 0, 1, 1, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 3, 3, 2, 3, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [2, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 18, 18, 9, 9, 1, 5, 4, 2, 2, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.divide_no_nan(alpha, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), grad)))), tf.math.subtract(tf.math.add(beta, tf.math.pow(grad, grad)), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), grad)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1], [2, 6, 4, 9, 0, 1, 6, 1, 9, 2, 9, 7, 0, 5, 2], [0, 3, 2, 3, 2, 0, 3], [79, 57, 63, 33, 24], [0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 4, 6, 6, 2, 9, 9, 2, 8, 1, 4, 9, 8, 1, 1, 8, 9, 0, 5, 4, 5, 7, 0, 7], [1, 3, 3, 5, 2, 3, 2, 1, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [4, 3, 3, 6, 9, 2, 9], [3, 0, 3, 1], [45, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 22, 22, 15, 7, 5, 13, 13, 8, 5, 2, 1, 1, 0, 1, 0, 7, 3, 4, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, grad), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), tf.math.square(tf.math.add(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.divide_no_nan(tf.math.add(beta, alpha), grad), tf.math.divide_no_nan(tf.math.add(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.add(beta, grad), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(sigma, tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), sigma)), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [2, 2, 2, 3], [44, 57], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [1, 2, 6, 6, 0, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 1, 3, 2, 3, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4, 3], [], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [45, 81]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 5, 1, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [88616.12439887042, 2.305012346243011, 2.304213074361801, 2.3036532011549817, 2.3033632264082473, 2.303111300980489], "accuracy": [0.09800554811954498, 0.09813763201236725, 0.0948355570435524, 0.09747721254825592, 0.09417514503002167, 0.09140139818191528], "val_loss": [1.9754236085074288, 1.9747109413146973, 1.9742775644574846, 1.9740045411246163, 1.9738285882132394, 1.97373594556536], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.09700000286102295, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [0, 0, 1, 1, 0, 1, 0], [4, 6, 4, 9], [0, 2, 2, 3], [79, 57], [1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 2, 6, 6, 0, 1, 0, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [58, 45, 43, 99, 81, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3], [3, 1], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 3, 6, 9, 2, 9], [3, 1, 2, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 2, 17, 17, 9, 8, 1, 5, 4, 2, 2, 0, 8, 5, 3, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(alpha, grad)), tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))))), tf.math.negative(tf.math.add(beta, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))))), tf.math.pow(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, sigma), sigma)), tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(sigma, alpha), beta), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [2, 6, 4, 9], [1, 2, 2, 3], [17, 57], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [3, 2, 6, 6, 0, 9, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 1, 3, 2, 3, 1, 2, 3, 3, 0], [13, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [0, 3, 9, 2, 9, 1, 6, 1, 7, 4, 6, 1, 4, 8, 5, 1, 0, 0, 6, 3, 0, 1, 1, 8, 0, 2, 6, 5, 8, 6, 7, 5, 4, 7, 4], [3, 2, 3, 3, 3, 1, 1, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 3, 0, 2, 2, 2, 1, 0], [41, 38, 76, 89, 50, 83, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 10, 10, 5, 5, 0, 1, 1, 0, 1, 0, 16, 10, 6, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(tf.math.divide_no_nan(alpha, tf.math.add(beta, grad)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.negative(beta), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, tf.math.divide_no_nan(beta, tf.math.subtract(tf.math.add(tf.math.pow(sigma, sigma), sigma), alpha))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [1, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [2, 2, 2, 3], [79, 57], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1], [1, 2, 2, 6, 5, 2, 2, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 3, 0, 1, 2, 3, 3, 0, 2, 2, 5], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [45, 38]], "fitness": -0.0868571400642395, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 5, 1, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [51.64977115417091, 2631.2045383992495, 2.304026783323559, 2.3035345625458548, 2.305633938496753, 2.4580702246959576], "accuracy": [0.09840179979801178, 0.09787346422672272, 0.09747721254825592, 0.09747721254825592, 0.09879804402589798, 0.09826971590518951], "val_loss": [1.9749046734401159, 1.974653857094901, 1.9742625781467982, 1.9740025656563895, 1.9756380489894323, 2.276376519884382], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.09700000286102295, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [0, 0, 1, 1, 0, 1, 0], [7, 6, 4, 9], [2, 2, 2, 3], [79, 57], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [2, 2, 6, 6, 0, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 0, 3, 3, 0, 3, 2, 3, 3, 0], [13, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0], [0, 3, 0, 2, 1, 1, 6, 1, 7, 4, 6, 1, 4, 8, 5, 1, 0, 0, 6, 3, 2, 1, 1, 8, 0, 3, 6, 5, 5, 6, 7, 5, 7, 7, 4], [3, 3, 2, 1, 3, 3, 3, 2, 3, 1, 0, 3, 1, 0, 2, 0, 1, 1, 3, 1, 1, 3, 2, 1], [41, 38]], "fitness": -0.07800000160932541, "mapping_values": [1, 7, 7, 4, 3, 1, 18, 18, 10, 8, 3, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.negative(tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))), grad), tf.math.pow(grad, tf.math.add(beta, tf.math.add(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), beta))))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(sigma), sigma))", "other_info": {"loss": [2.3019864730169872, 2.301960209719399, 2.300888990067913, 2.299601902027707, 2.30010544606613, 2.298898869281306, 2.300343000436928, 2.299746349078002, 2.2993030984561362, 2.3009311415972475, 2.299501847723267, 2.299677775504803, 2.298978465281426, 2.2995762386972, 2.300513584789205, 2.2998349956312922, 2.2999526048616694], "accuracy": [0.08955223858356476, 0.09232597798109055, 0.0956280529499054, 0.09602430462837219, 0.09813763201236725, 0.10368511080741882, 0.09681680053472519, 0.09285431355237961, 0.09430722147226334, 0.09800554811954498, 0.09893012791872025, 0.10408136248588562, 0.10355303436517715, 0.09536388516426086, 0.09694888442754745, 0.09906221181154251, 0.09126931428909302], "val_loss": [1.969806330544608, 1.9693542207990373, 1.9688995225088937, 1.968940121786935, 1.9689248629978724, 1.9690954344613212, 1.9690776552472795, 1.969083649771554, 1.9691076278686523, 1.969114167349679, 1.9692600795200892, 1.969447476523263, 1.96966586794172, 1.9699723379952567, 1.970270769936698, 1.9705536024911063, 1.9707703590393066], "val_accuracy": [0.046666666865348816, 0.052000001072883606, 0.058666665107011795, 0.06233333423733711, 0.06833333522081375, 0.07066666334867477, 0.0729999989271164, 0.07533333450555801, 0.07599999755620956, 0.07900000363588333, 0.07833333313465118, 0.08100000023841858, 0.0806666687130928, 0.07966666668653488, 0.07566666603088379, 0.07633333653211594, 0.07500000298023224]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [2, 2, 2, 3], [79, 57], [0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [1, 4, 6, 6, 2, 2, 2, 4, 1, 1, 4, 9, 8, 1, 1, 8, 9, 0, 5, 4, 5, 7, 0, 7], [3, 3, 0, 5, 2, 3, 2, 3, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 3, 9, 5, 9], [3, 0, 3, 1], [43, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 5, 4, 2, 2, 0, 5, 4, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, grad))), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.square(sigma)))", "other_info": {"loss": [2.3024410714310837, 2.3031429320499015, 2.3030107998813323, 2.301525333569806, 2.3028902294865343, 2.3009238350487435], "accuracy": [0.0882314071059227, 0.0886276587843895, 0.08968432247638702, 0.09060890227556229, 0.09298639744520187, 0.09509972482919693], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]