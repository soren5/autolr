[{"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0], [2, 6, 9, 9, 0], [0, 1, 1, 3], [5, 57], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 4, 2, 2, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 2, 2, 3, 3, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.8122857213020325, "mapping_values": [1, 3, 3, 1, 2, 1, 17, 17, 8, 9, 2, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.pow(tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), tf.math.add(beta, beta))), beta), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, sigma)))", "other_info": {"loss": [2.0817675885586078, 1.4909057285429512, 1.0746164243171843, 0.865807126400068, 0.8181031713349046, 0.7863002707850837, 0.7265528332539962, 0.6825004061215337, 0.6535271700614825, 0.6610231637687038, 0.6233054048680295, 0.6091946852111136, 0.5786996544737936, 0.5920728863647601, 0.5783150619157411, 0.5584603394373706, 0.5332459139235032, 0.5298614918028343, 0.5039041000759723, 0.5000495840616356, 0.5004665398358386, 0.48096465931797167, 0.47363984539933635, 0.4795608805147349, 0.4628047693785014, 0.45449811656319816, 0.43729514631108996, 0.45382644690936347, 0.43301278089393697, 0.4231400141319531, 0.41727648960238733, 0.4141464820430578, 0.4259611168604926, 0.40689427896166963, 0.407925468221112, 0.3915417498058064, 0.3986094541411752, 0.3813710307810427], "accuracy": [0.30062079429626465, 0.4951789677143097, 0.6111478209495544, 0.687491774559021, 0.6909258961677551, 0.7029454708099365, 0.7253995537757874, 0.7390040755271912, 0.7567031979560852, 0.7467969655990601, 0.7626469135284424, 0.7740060687065125, 0.7832518815994263, 0.7720248103141785, 0.7885351777076721, 0.7881389260292053, 0.800818920135498, 0.8041210174560547, 0.8098005652427673, 0.8164047002792358, 0.8088759779930115, 0.8215559124946594, 0.8226125836372375, 0.8204993009567261, 0.8261788487434387, 0.8308017253875732, 0.8364813327789307, 0.8315942287445068, 0.8429533839225769, 0.8408400416374207, 0.8462554216384888, 0.8454629778862, 0.8389908671379089, 0.8475762605667114, 0.8519350290298462, 0.8573504090309143, 0.8494254350662231, 0.8623695969581604], "val_loss": [1.4978267465318953, 1.1184733254568917, 0.7787094456808907, 0.6025670596531459, 0.5770162514277867, 0.5608278512954712, 0.5463613442012242, 0.5119435787200928, 0.530470439365932, 0.5258395671844482, 0.5210963147027152, 0.5090323856898716, 0.5128452607563564, 0.49864137172698975, 0.4858340876443045, 0.4428551197052002, 0.4536180581365313, 0.46690780775887625, 0.4019010492733547, 0.41525778600147795, 0.4258925659315927, 0.38811460563114714, 0.41115946429116385, 0.38580433811460224, 0.4224068096705845, 0.3713859064238412, 0.38109884943280903, 0.36846541506903513, 0.39520712409700665, 0.3633560197693961, 0.35970866680145264, 0.44476114000592915, 0.35460288184029715, 0.36855592897960116, 0.365070070539202, 0.39002130712781635, 0.3508930632046291, 0.3779737949371338], "val_accuracy": [0.527999997138977, 0.5053333044052124, 0.6603333353996277, 0.7316666841506958, 0.7566666603088379, 0.7409999966621399, 0.762666642665863, 0.7726666927337646, 0.762666642665863, 0.7459999918937683, 0.7699999809265137, 0.7793333530426025, 0.762333333492279, 0.7789999842643738, 0.781333327293396, 0.8196666836738586, 0.7950000166893005, 0.7873333096504211, 0.8303333520889282, 0.8270000219345093, 0.815666675567627, 0.8379999995231628, 0.8266666531562805, 0.8383333086967468, 0.809333324432373, 0.8370000123977661, 0.8383333086967468, 0.8479999899864197, 0.8220000267028809, 0.8476666808128357, 0.8539999723434448, 0.8026666641235352, 0.8560000061988831, 0.846666693687439, 0.8463333249092102, 0.8303333520889282, 0.8446666598320007, 0.8456666469573975]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 6, 4, 2, 4, 7], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0], [9, 2, 4, 3, 0, 1, 5, 4, 2, 8, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 1, 3, 3, 0, 2, 3, 2, 0], [97, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.8122857213020325, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, sigma)))", "other_info": {"loss": [2.0817675885586078, 1.4909057285429512, 1.0746164243171843, 0.865807126400068, 0.8181031713349046, 0.7863002707850837, 0.7265528332539962, 0.6825004061215337, 0.6535271700614825, 0.6610231637687038, 0.6233054048680295, 0.6091946852111136, 0.5786996544737936, 0.5920728863647601, 0.5783150619157411, 0.5584603394373706, 0.5332459139235032, 0.5298614918028343, 0.5039041000759723, 0.5000495840616356, 0.5004665398358386, 0.48096465931797167, 0.47363984539933635, 0.4795608805147349, 0.4628047693785014, 0.45449811656319816, 0.43729514631108996, 0.45382644690936347, 0.43301278089393697, 0.4231400141319531, 0.41727648960238733, 0.4141464820430578, 0.4259611168604926, 0.40689427896166963, 0.407925468221112, 0.3915417498058064, 0.3986094541411752, 0.3813710307810427], "accuracy": [0.30062079429626465, 0.4951789677143097, 0.6111478209495544, 0.687491774559021, 0.6909258961677551, 0.7029454708099365, 0.7253995537757874, 0.7390040755271912, 0.7567031979560852, 0.7467969655990601, 0.7626469135284424, 0.7740060687065125, 0.7832518815994263, 0.7720248103141785, 0.7885351777076721, 0.7881389260292053, 0.800818920135498, 0.8041210174560547, 0.8098005652427673, 0.8164047002792358, 0.8088759779930115, 0.8215559124946594, 0.8226125836372375, 0.8204993009567261, 0.8261788487434387, 0.8308017253875732, 0.8364813327789307, 0.8315942287445068, 0.8429533839225769, 0.8408400416374207, 0.8462554216384888, 0.8454629778862, 0.8389908671379089, 0.8475762605667114, 0.8519350290298462, 0.8573504090309143, 0.8494254350662231, 0.8623695969581604], "val_loss": [1.4978267465318953, 1.1184733254568917, 0.7787094456808907, 0.6025670596531459, 0.5770162514277867, 0.5608278512954712, 0.5463613442012242, 0.5119435787200928, 0.530470439365932, 0.5258395671844482, 0.5210963147027152, 0.5090323856898716, 0.5128452607563564, 0.49864137172698975, 0.4858340876443045, 0.4428551197052002, 0.4536180581365313, 0.46690780775887625, 0.4019010492733547, 0.41525778600147795, 0.4258925659315927, 0.38811460563114714, 0.41115946429116385, 0.38580433811460224, 0.4224068096705845, 0.3713859064238412, 0.38109884943280903, 0.36846541506903513, 0.39520712409700665, 0.3633560197693961, 0.35970866680145264, 0.44476114000592915, 0.35460288184029715, 0.36855592897960116, 0.365070070539202, 0.39002130712781635, 0.3508930632046291, 0.3779737949371338], "val_accuracy": [0.527999997138977, 0.5053333044052124, 0.6603333353996277, 0.7316666841506958, 0.7566666603088379, 0.7409999966621399, 0.762666642665863, 0.7726666927337646, 0.762666642665863, 0.7459999918937683, 0.7699999809265137, 0.7793333530426025, 0.762333333492279, 0.7789999842643738, 0.781333327293396, 0.8196666836738586, 0.7950000166893005, 0.7873333096504211, 0.8303333520889282, 0.8270000219345093, 0.815666675567627, 0.8379999995231628, 0.8266666531562805, 0.8383333086967468, 0.809333324432373, 0.8370000123977661, 0.8383333086967468, 0.8479999899864197, 0.8220000267028809, 0.8476666808128357, 0.8539999723434448, 0.8026666641235352, 0.8560000061988831, 0.846666693687439, 0.8463333249092102, 0.8303333520889282, 0.8446666598320007, 0.8456666469573975]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0], [2, 6, 9, 9, 0], [2, 3, 2, 3], [5, 57], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [5, 8, 4, 2, 2, 1, 9, 0, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 2, 2, 3, 3, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.7702857255935669, "mapping_values": [1, 5, 5, 3, 2, 1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.0759754616271677, 1.3805292591899379, 1.1158395464457163, 0.9327911480054754, 0.8146145728837072, 0.7959646985767351, 0.7348982738922647, 0.7094460860802088, 0.7088987681340106, 0.6603477106370221, 0.6863167177038957, 0.6314382772120691, 0.6568781281065522, 0.6186616070644337, 0.6091417571919201, 0.6017274756425911], "accuracy": [0.31581032276153564, 0.5296525955200195, 0.5984678268432617, 0.6495839357376099, 0.6930392384529114, 0.7051908373832703, 0.7215691208839417, 0.7368907928466797, 0.7320036888122559, 0.7528728246688843, 0.737947404384613, 0.7618544697761536, 0.7477215528488159, 0.7609298825263977, 0.7724210619926453, 0.7720248103141785], "val_loss": [1.1427248886653356, 1.0214785507747106, 0.7361039774758475, 0.6978367907660348, 0.5810399055480957, 0.5626229899270194, 0.5626888275146484, 0.5948539461408343, 0.5314771107264927, 0.5616257020405361, 0.5069216319492885, 0.5150002922330584, 0.486693160874503, 0.5193790027073452, 0.5105548756463187, 0.5102440799985614], "val_accuracy": [0.628333330154419, 0.5933333039283752, 0.6603333353996277, 0.6693333387374878, 0.749666690826416, 0.7573333382606506, 0.7516666650772095, 0.7146666646003723, 0.7710000276565552, 0.7333333492279053, 0.7836666703224182, 0.7649999856948853, 0.7743333578109741, 0.7559999823570251, 0.7536666393280029, 0.7680000066757202]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0], [2, 6, 9, 9, 0], [0, 1, 1, 3], [5, 57], [1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 4, 2, 2, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 1, 0, 1, 3, 3, 3, 0], [42, 58, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.7702857255935669, "mapping_values": [1, 3, 3, 1, 2, 1, 13, 13, 6, 7, 2, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.subtract(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha)), tf.math.add(beta, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, alpha))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0759754616271677, 1.3805292591899379, 1.1158395464457163, 0.9327911480054754, 0.8146145728837072, 0.7959646985767351, 0.7348982738922647, 0.7094460860802088, 0.7088987681340106, 0.6603477106370221, 0.6863167177038957, 0.6314382772120691, 0.6568781281065522, 0.6186616070644337, 0.6091417571919201, 0.6017274756425911], "accuracy": [0.31581032276153564, 0.5296525955200195, 0.5984678268432617, 0.6495839357376099, 0.6930392384529114, 0.7051908373832703, 0.7215691208839417, 0.7368907928466797, 0.7320036888122559, 0.7528728246688843, 0.737947404384613, 0.7618544697761536, 0.7477215528488159, 0.7609298825263977, 0.7724210619926453, 0.7720248103141785], "val_loss": [1.1427248886653356, 1.0214785507747106, 0.7361039774758475, 0.6978367907660348, 0.5810399055480957, 0.5626229899270194, 0.5626888275146484, 0.5948539461408343, 0.5314771107264927, 0.5616257020405361, 0.5069216319492885, 0.5150002922330584, 0.486693160874503, 0.5193790027073452, 0.5105548756463187, 0.5102440799985614], "val_accuracy": [0.628333330154419, 0.5933333039283752, 0.6603333353996277, 0.6693333387374878, 0.749666690826416, 0.7573333382606506, 0.7516666650772095, 0.7146666646003723, 0.7710000276565552, 0.7333333492279053, 0.7836666703224182, 0.7649999856948853, 0.7743333578109741, 0.7559999823570251, 0.7536666393280029, 0.7680000066757202]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [9, 0, 6, 2, 4, 7], [1, 0, 0, 3, 1, 0], [10, 57, 85], [1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0], [3, 2, 4, 2, 0, 8, 5, 4, 2, 8, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 1, 3, 0, 3, 2, 3, 2, 0], [97, 16, 23, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 1, 3, 1], [48, 38]], "fitness": -0.5382857322692871, "mapping_values": [1, 1, 1, 1, 0, 1, 7, 7, 3, 4, 0, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(beta, tf.math.add(beta, tf.math.pow(alpha, tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, alpha)))", "other_info": {"loss": [1.9996572362276006, 1.6865859383274582, 1.5600553884986148, 1.5611488008858143, 1.6301339612172785, 1.8005365257202721, 2.18162889736298, 2.156340468340798, 2.1781588534731924], "accuracy": [0.3333773612976074, 0.3871351182460785, 0.422929584980011, 0.39690926671028137, 0.3928146958351135, 0.32241448760032654, 0.16933034360408783, 0.17342491447925568, 0.16589617729187012], "val_loss": [1.5684681279318673, 0.96651748248509, 1.1314335209982735, 1.056305204119001, 1.476658889225551, 1.5819054671696253, 1.7803996631077357, 1.7220382690429688, 1.92873934337071], "val_accuracy": [0.37599998712539673, 0.5603333115577698, 0.5523333549499512, 0.5893333554267883, 0.3426666557788849, 0.2639999985694885, 0.21666666865348816, 0.281333327293396, 0.15000000596046448]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [2, 6, 9, 9, 0], [1, 3, 2, 3, 1, 2], [5, 57], [1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 4, 2, 0, 5, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 2, 2, 3, 3, 0], [42, 78, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [0, 3], [36], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [1, 3, 3, 1], [41, 38]], "fitness": -0.46971428394317627, "mapping_values": [1, 3, 3, 1, 2, 0, 11, 11, 6, 5, 2, 1, 1, 0, 1, 1, 4, 3, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.pow(tf.math.add(tf.math.add(beta, grad), tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))))), grad), tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2149207281823866, 2.082310475504488, 2.451244965520407, 2.525805857455206, 2.606116270833185, 2.66258482362427], "accuracy": [0.24501386284828186, 0.26680755615234375, 0.15097081661224365, 0.14793290197849274, 0.148064985871315, 0.15242372453212738], "val_loss": [1.7294118744986398, 1.8949339049203056, 2.048215797969273, 2.099098341805594, 2.1528444971357072, 2.206399372645787], "val_accuracy": [0.47866666316986084, 0.17800000309944153, 0.1446666717529297, 0.14533333480358124, 0.14800000190734863, 0.15199999511241913]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0], [2, 6, 9, 9, 0], [3, 1, 2, 3], [5, 57], [1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 5, 9, 2, 0, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 0, 2, 3, 0, 2, 3, 3, 2, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.2725714147090912, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, alpha), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.196390483168689, 2.7549675246271335, 2.3089085811196286, 2.304062111219316, 2.3038854986338677, 2.3036010051211346], "accuracy": [0.17434948682785034, 0.12653546035289764, 0.0940430611371994, 0.09840179979801178, 0.09628847241401672, 0.09285431355237961], "val_loss": [1.8062975066048759, 1.9821312768118722, 1.9750466346740723, 1.973959309714181, 1.9737397602626257, 1.9736200741359167], "val_accuracy": [0.2786666750907898, 0.09833333641290665, 0.09833333641290665, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0], [0, 1, 0, 1, 0, 1, 0, 1, 1], [6, 6, 4, 2, 4, 7], [2, 0, 0, 3, 1, 0], [5, 57, 85], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [7, 2, 4, 2, 2, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 2, 3, 3, 3, 0], [7, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.2725714147090912, "mapping_values": [1, 9, 9, 4, 5, 2, 13, 13, 6, 7, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, alpha)))))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.pow(tf.math.add(tf.math.add(beta, grad), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.196390483168689, 2.7549675246271335, 2.3089085811196286, 2.304062111219316, 2.3038854986338677, 2.3036010051211346], "accuracy": [0.17434948682785034, 0.12653546035289764, 0.0940430611371994, 0.09840179979801178, 0.09628847241401672, 0.09285431355237961], "val_loss": [1.8062975066048759, 1.9821312768118722, 1.9750466346740723, 1.973959309714181, 1.9737397602626257, 1.9736200741359167], "val_accuracy": [0.2786666750907898, 0.09833333641290665, 0.09833333641290665, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 1, 0, 1, 0, 1, 0], [6, 6, 4, 2, 4, 7], [2, 0, 0, 3, 1, 0], [5, 57, 85], [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0], [9, 2, 4, 3, 0, 1, 5, 4, 2, 8, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 1, 3, 3, 0, 2, 3, 2, 0], [97, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [48, 38]], "fitness": -0.2725714147090912, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.196390483168689, 2.7549675246271335, 2.3089085811196286, 2.304062111219316, 2.3038854986338677, 2.3036010051211346], "accuracy": [0.17434948682785034, 0.12653546035289764, 0.0940430611371994, 0.09840179979801178, 0.09628847241401672, 0.09285431355237961], "val_loss": [1.8062975066048759, 1.9821312768118722, 1.9750466346740723, 1.973959309714181, 1.9737397602626257, 1.9736200741359167], "val_accuracy": [0.2786666750907898, 0.09833333641290665, 0.09833333641290665, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [0, 1, 1, 3], [5, 57], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1], [7, 2, 4, 2, 5, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [5, 2, 3, 3, 0, 0, 2, 1, 2, 0], [42, 14, 43, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [9, 3, 9, 2, 9], [3, 3, 3, 1], [57, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 2, 3, 3, 1, 2, 0, 5, 4, 2, 2, 0, 1, 1, 0, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3022108676962296, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1], [7, 6, 4, 4, 1, 3, 9], [1, 3, 2, 3, 1, 2], [5, 57], [1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 8, 4, 2, 0, 5, 9, 0, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 1, 2, 3, 2, 0], [42, 63, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [1, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 7, 6, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.multiply(grad, tf.math.add(alpha, grad)), tf.math.add(alpha, alpha)))))), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [6, 6, 4, 6, 4, 7], [2, 0, 0, 3, 1, 0], [64, 57], [1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 4, 2, 5, 1, 5, 4, 2, 8, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [97, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 1, 3, 1], [94, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, alpha)))", "other_info": {"loss": [8.410888204491361e+21, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.14000792801380157, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [7, 3, 1, 9, 1, 3], [1, 3, 2, 3, 1, 2], [5, 57], [1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [8, 1, 7, 8, 0, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 5, 3, 0, 3, 2, 3, 2, 0], [42, 63, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [9, 3, 9, 2, 9], [1, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 6, 5, 1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))), grad)), tf.math.add(alpha, tf.math.subtract(tf.math.multiply(grad, tf.math.add(alpha, grad)), tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3022108676962296, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57, 85], [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 3, 2, 0, 1, 5, 4, 2, 8, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 1, 3, 1, 0, 2, 3, 2, 0], [59, 63, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 0, 9, 2, 9], [1, 3, 3, 1], [48, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08030643314123154, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [6, 6, 4, 2, 4, 7], [0, 1, 1, 3, 1, 1], [5, 57], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [8, 6, 4, 2, 0, 8, 5, 4, 2, 8, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 1, 3, 0, 3, 2, 3, 2, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [48, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 5, 6, 1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(grad, tf.math.pow(alpha, tf.math.add(alpha, alpha))))))))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07938185334205627, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0], [2, 6, 9, 9, 0], [0, 0, 1, 3, 3], [5, 57, 72], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0], [7, 5, 9, 2, 0, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 0, 2, 3, 0, 2, 3, 3, 2, 0], [4, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 9, 9, 2, 9], [3, 2, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 3, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 2, 2, 0, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, alpha), tf.math.square(tf.math.add(beta, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [4377432.526749045, 81884176.86857747, 386888823.3945318, 1076516751.7907805, 2321300334.839783, 4286690902.3590016], "accuracy": [0.09602430462837219, 0.10342095047235489, 0.09774138033390045, 0.10249637067317963, 0.10381719470024109, 0.10302469879388809], "val_loss": [16737837.142857144, 133634724.57142857, 450719030.85714287, 1068019126.8571428, 2085576118.857143, 3603403190.857143], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0], [2, 6, 9, 9, 0], [0, 1, 2, 3], [5, 57], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [1, 2, 4, 2, 2, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 0, 2, 3, 0, 2, 3, 3, 2, 0], [42, 95, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 0, 9], [3, 0, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 17, 17, 8, 9, 2, 1, 1, 0, 1, 0, 5, 4, 1, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(tf.math.pow(tf.math.add(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, beta))), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma)))", "other_info": {"loss": [29354.181096814234, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.04873860627412796, 0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.2421722729292948e+16, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0], [2, 6, 9, 9, 0], [0, 1, 1, 3], [65, 57, 85], [1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 8, 2, 0, 1, 5, 4, 2, 8, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 1, 3, 1, 0, 2, 3, 2, 0], [97, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [6, 3, 9, 2, 9], [1, 1, 3, 1], [48, 38]], "fitness": -0.04828571528196335, "mapping_values": [1, 3, 3, 1, 2, 1, 12, 12, 7, 5, 0, 1, 1, 0, 1, 0, 7, 4, 3, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), alpha), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))))))), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)), sigma)", "other_info": {"loss": [7.544346284442271e+23, 8.629088156362873e+23, 8.530991511494839e+23, 8.643360363695085e+23, 8.554206186644537e+23, 8.655588501712398e+23], "accuracy": [0.08928807079792023, 0.1026284471154213, 0.08994849026203156, 0.09272222965955734, 0.09430722147226334, 0.08809932321310043], "val_loss": [4.576367709285638e+23, 4.576367709285638e+23, 4.576367709285638e+23, 4.576367709285638e+23, 4.576367709285638e+23, 4.576367709285638e+23], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 1], [1, 1, 0, 1, 0, 1, 0], [6, 6, 4, 2, 4, 7], [0, 1, 2, 3], [5, 57, 85], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0], [9, 2, 4, 3, 0, 1, 5, 4, 2, 8, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 1, 3, 3, 0, 2, 3, 2, 0], [97, 16, 43, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [0, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [48, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3023790197759144, 2.3023162841356, 2.304013272538523, 2.3020906297207318, 2.301460349281088, 2.302291795168539], "accuracy": [0.09047681838274002, 0.08836349099874496, 0.08915598690509796, 0.09206181764602661, 0.09457138925790787, 0.09430722147226334], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0], [2, 6, 9, 9, 0], [0, 1, 2, 3], [5, 57], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 5, 9, 2, 0, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [5, 0, 2, 3, 0, 2, 3, 3, 2, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [3, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [7, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 5, 5, 3, 2, 2, 3, 3, 1, 2, 1, 6, 4, 3, 1, 0, 5, 3, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, sigma), sigma)), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.3023790197759144, 2.3023162841356, 2.304013272538523, 2.3020906297207318, 2.301460349281088, 2.302291795168539], "accuracy": [0.09047681838274002, 0.08836349099874496, 0.08915598690509796, 0.09206181764602661, 0.09457138925790787, 0.09430722147226334], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]