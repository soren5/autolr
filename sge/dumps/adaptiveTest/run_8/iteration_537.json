[{"genotype": [[0], [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [1, 4, 6, 6, 0, 2, 8, 0, 3, 6, 3, 8, 9, 3, 2, 6, 0, 5, 0, 2], [0, 0, 2, 2, 2, 1, 1, 2, 0, 0, 0, 3, 2, 2], [56, 42, 74, 73, 95], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 2, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [49, 25, 50, 71, 34]], "fitness": -0.8080000281333923, "mapping_values": [1, 21, 21, 13, 8, 3, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 5, 2, 3, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.pow(tf.math.divide_no_nan(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))), grad))), tf.math.multiply(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.add(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.2832160053661297, 2.1546448333593107, 1.955482033501684, 1.7722382120972122, 1.331672375889628, 1.1100296710051125, 0.8697884357238506, 0.8085883730170497, 0.7605304588038356, 0.682867157319124, 0.6882737822315995, 0.639305034388861, 0.5982291252385388, 0.638610497662231, 0.6019831682082889, 0.5923786613730517, 0.5787804420865711, 0.5479467041567095, 0.5447028900543776, 0.5518936007415866, 0.5256111450860403, 0.5218627229578947, 0.5091649113416578, 0.47563064830130936, 0.48130500224508616, 0.47287014272817296, 0.4926906450588973, 0.46217639446888364, 0.4738390288883905, 0.46323540679625297, 0.4561688848899702, 0.4728383426345996], "accuracy": [0.2793554365634918, 0.25637298822402954, 0.3263769745826721, 0.4239862561225891, 0.5355963706970215, 0.6283186078071594, 0.6847180128097534, 0.6983225345611572, 0.7153612375259399, 0.748778223991394, 0.7387399077415466, 0.7582882046699524, 0.7812706232070923, 0.7606657147407532, 0.774270236492157, 0.7786290049552917, 0.7821952104568481, 0.7971205711364746, 0.7950072884559631, 0.7911768555641174, 0.8079513907432556, 0.8076872229576111, 0.8113855719566345, 0.8235371708869934, 0.8219521641731262, 0.8280280232429504, 0.8138951063156128, 0.828292191028595, 0.8296129703521729, 0.8267071843147278, 0.8302733898162842, 0.8247259259223938], "val_loss": [1.8579964637756348, 1.8129429136003767, 1.3562889099121094, 1.1281615325382777, 0.7917299611227853, 0.6262543371745518, 0.647968224116734, 0.6087912150791713, 0.5367919206619263, 0.5724068369184222, 0.5600814989634922, 0.4851874623979841, 0.5350727183478219, 0.46273360933576313, 0.4553565297807966, 0.49411518233163015, 0.43030994279044016, 0.4777798482349941, 0.48485524313790457, 0.41198246819632395, 0.40769557441983906, 0.39249835695539204, 0.3912015301840646, 0.40067197595323834, 0.4212782808712551, 0.4175521561077663, 0.37430964197431293, 0.3824652007647923, 0.38767440829958233, 0.3779058200972421, 0.4505195277077811, 0.40457917962755474], "val_accuracy": [0.4026666581630707, 0.29366666078567505, 0.4583333432674408, 0.47566667199134827, 0.6859999895095825, 0.7446666955947876, 0.7003333568572998, 0.7306666374206543, 0.762666642665863, 0.7506666779518127, 0.7456666827201843, 0.7906666398048401, 0.7553333044052124, 0.8033333420753479, 0.8153333067893982, 0.7676666378974915, 0.8113333582878113, 0.784333348274231, 0.7753333449363708, 0.8173333406448364, 0.8330000042915344, 0.831333339214325, 0.8363333344459534, 0.8186666369438171, 0.8203333616256714, 0.8196666836738586, 0.8483333587646484, 0.8376666903495789, 0.8379999995231628, 0.8433333039283752, 0.8056666851043701, 0.8213333487510681]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.8057143092155457, "mapping_values": [1, 16, 16, 10, 6, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), grad))))), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.0712897878643575, 1.9857470720136454, 1.3377927497724076, 1.0916219285419038, 0.8537265598230735, 0.7588615242075438, 0.7013071291340561, 0.6757995654106644, 0.6579002655807378, 0.6039609948106492, 0.5997522841307937, 0.5642682292505168, 0.5716816716032919, 0.5501299597615217, 0.5163727987947843, 0.5404054063296415, 0.5133272663729145, 0.49215289605150386, 0.4961893277444765, 0.49094642512770914, 0.4720346415795513, 0.47157599617855156, 0.46905451134416043, 0.42744814194645375, 0.4598967037094173, 0.4304248540944049, 0.4294820657188646, 0.4130778096339738, 0.40090702178298426, 0.40220193034464796, 0.4056800630594588, 0.3999575409458109], "accuracy": [0.29718664288520813, 0.37062475085258484, 0.5251618027687073, 0.6206578016281128, 0.6749438643455505, 0.715889573097229, 0.7358341217041016, 0.7409853339195251, 0.7446836829185486, 0.7692511081695557, 0.7746664881706238, 0.785629391670227, 0.7819310426712036, 0.7950072884559631, 0.8061022162437439, 0.7991018295288086, 0.8092722296714783, 0.8175934553146362, 0.8100647330284119, 0.8137630224227905, 0.8277638554573059, 0.8259146809577942, 0.8235371708869934, 0.8424250483512878, 0.8301413059234619, 0.8399154543876648, 0.8368775844573975, 0.8473120927810669, 0.8552370667457581, 0.852859616279602, 0.8479725122451782, 0.8494254350662231], "val_loss": [1.8969441141401018, 1.0578735555921281, 0.6598012447357178, 0.7306521620069232, 0.6102136373519897, 0.5919478450502668, 0.551449009350368, 0.5637292180742536, 0.5081239938735962, 0.5274921825953892, 0.44901646035058157, 0.4962159735815866, 0.43488614899771555, 0.4331094026565552, 0.5088178430284772, 0.4747013534818377, 0.4292167680604117, 0.42443771021706717, 0.4496533104351589, 0.40286305972508024, 0.3988987718309675, 0.3779328635760716, 0.37114180837358746, 0.4038687433515276, 0.386302649974823, 0.3905982886041914, 0.3623632277761187, 0.35695756333214895, 0.3633110097476414, 0.37998867886407034, 0.3541800379753113, 0.37589515107018606], "val_accuracy": [0.390666663646698, 0.5823333263397217, 0.7139999866485596, 0.6366666555404663, 0.7393333315849304, 0.7246666550636292, 0.7506666779518127, 0.7423333525657654, 0.7680000066757202, 0.7696666717529297, 0.8113333582878113, 0.7576666474342346, 0.8190000057220459, 0.812333345413208, 0.7763333320617676, 0.7730000019073486, 0.8109999895095825, 0.8203333616256714, 0.7943333387374878, 0.8163333535194397, 0.8303333520889282, 0.8433333039283752, 0.8453333377838135, 0.8199999928474426, 0.8360000252723694, 0.8306666612625122, 0.8533333539962769, 0.8496666550636292, 0.847000002861023, 0.8399999737739563, 0.8513333201408386, 0.8416666388511658]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [4, 2, 6, 6, 9, 4, 2, 9, 8, 9, 8, 8, 4, 3, 2, 6, 8, 5, 0, 2], [2, 2, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.8057143092155457, "mapping_values": [1, 14, 14, 10, 4, 5, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(grad)), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.0712897878643575, 1.9857470720136454, 1.3377927497724076, 1.0916219285419038, 0.8537265598230735, 0.7588615242075438, 0.7013071291340561, 0.6757995654106644, 0.6579002655807378, 0.6039609948106492, 0.5997522841307937, 0.5642682292505168, 0.5716816716032919, 0.5501299597615217, 0.5163727987947843, 0.5404054063296415, 0.5133272663729145, 0.49215289605150386, 0.4961893277444765, 0.49094642512770914, 0.4720346415795513, 0.47157599617855156, 0.46905451134416043, 0.42744814194645375, 0.4598967037094173, 0.4304248540944049, 0.4294820657188646, 0.4130778096339738, 0.40090702178298426, 0.40220193034464796, 0.4056800630594588, 0.3999575409458109], "accuracy": [0.29718664288520813, 0.37062475085258484, 0.5251618027687073, 0.6206578016281128, 0.6749438643455505, 0.715889573097229, 0.7358341217041016, 0.7409853339195251, 0.7446836829185486, 0.7692511081695557, 0.7746664881706238, 0.785629391670227, 0.7819310426712036, 0.7950072884559631, 0.8061022162437439, 0.7991018295288086, 0.8092722296714783, 0.8175934553146362, 0.8100647330284119, 0.8137630224227905, 0.8277638554573059, 0.8259146809577942, 0.8235371708869934, 0.8424250483512878, 0.8301413059234619, 0.8399154543876648, 0.8368775844573975, 0.8473120927810669, 0.8552370667457581, 0.852859616279602, 0.8479725122451782, 0.8494254350662231], "val_loss": [1.8969441141401018, 1.0578735555921281, 0.6598012447357178, 0.7306521620069232, 0.6102136373519897, 0.5919478450502668, 0.551449009350368, 0.5637292180742536, 0.5081239938735962, 0.5274921825953892, 0.44901646035058157, 0.4962159735815866, 0.43488614899771555, 0.4331094026565552, 0.5088178430284772, 0.4747013534818377, 0.4292167680604117, 0.42443771021706717, 0.4496533104351589, 0.40286305972508024, 0.3988987718309675, 0.3779328635760716, 0.37114180837358746, 0.4038687433515276, 0.386302649974823, 0.3905982886041914, 0.3623632277761187, 0.35695756333214895, 0.3633110097476414, 0.37998867886407034, 0.3541800379753113, 0.37589515107018606], "val_accuracy": [0.390666663646698, 0.5823333263397217, 0.7139999866485596, 0.6366666555404663, 0.7393333315849304, 0.7246666550636292, 0.7506666779518127, 0.7423333525657654, 0.7680000066757202, 0.7696666717529297, 0.8113333582878113, 0.7576666474342346, 0.8190000057220459, 0.812333345413208, 0.7763333320617676, 0.7730000019073486, 0.8109999895095825, 0.8203333616256714, 0.7943333387374878, 0.8163333535194397, 0.8303333520889282, 0.8433333039283752, 0.8453333377838135, 0.8199999928474426, 0.8360000252723694, 0.8306666612625122, 0.8533333539962769, 0.8496666550636292, 0.847000002861023, 0.8399999737739563, 0.8513333201408386, 0.8416666388511658]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1], [4, 4, 6, 6, 0, 2, 8, 0, 3, 6, 3, 8, 4, 3, 2, 6, 8, 5, 0, 2], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [56, 73, 74, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.8057143092155457, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.0712897878643575, 1.9857470720136454, 1.3377927497724076, 1.0916219285419038, 0.8537265598230735, 0.7588615242075438, 0.7013071291340561, 0.6757995654106644, 0.6579002655807378, 0.6039609948106492, 0.5997522841307937, 0.5642682292505168, 0.5716816716032919, 0.5501299597615217, 0.5163727987947843, 0.5404054063296415, 0.5133272663729145, 0.49215289605150386, 0.4961893277444765, 0.49094642512770914, 0.4720346415795513, 0.47157599617855156, 0.46905451134416043, 0.42744814194645375, 0.4598967037094173, 0.4304248540944049, 0.4294820657188646, 0.4130778096339738, 0.40090702178298426, 0.40220193034464796, 0.4056800630594588, 0.3999575409458109], "accuracy": [0.29718664288520813, 0.37062475085258484, 0.5251618027687073, 0.6206578016281128, 0.6749438643455505, 0.715889573097229, 0.7358341217041016, 0.7409853339195251, 0.7446836829185486, 0.7692511081695557, 0.7746664881706238, 0.785629391670227, 0.7819310426712036, 0.7950072884559631, 0.8061022162437439, 0.7991018295288086, 0.8092722296714783, 0.8175934553146362, 0.8100647330284119, 0.8137630224227905, 0.8277638554573059, 0.8259146809577942, 0.8235371708869934, 0.8424250483512878, 0.8301413059234619, 0.8399154543876648, 0.8368775844573975, 0.8473120927810669, 0.8552370667457581, 0.852859616279602, 0.8479725122451782, 0.8494254350662231], "val_loss": [1.8969441141401018, 1.0578735555921281, 0.6598012447357178, 0.7306521620069232, 0.6102136373519897, 0.5919478450502668, 0.551449009350368, 0.5637292180742536, 0.5081239938735962, 0.5274921825953892, 0.44901646035058157, 0.4962159735815866, 0.43488614899771555, 0.4331094026565552, 0.5088178430284772, 0.4747013534818377, 0.4292167680604117, 0.42443771021706717, 0.4496533104351589, 0.40286305972508024, 0.3988987718309675, 0.3779328635760716, 0.37114180837358746, 0.4038687433515276, 0.386302649974823, 0.3905982886041914, 0.3623632277761187, 0.35695756333214895, 0.3633110097476414, 0.37998867886407034, 0.3541800379753113, 0.37589515107018606], "val_accuracy": [0.390666663646698, 0.5823333263397217, 0.7139999866485596, 0.6366666555404663, 0.7393333315849304, 0.7246666550636292, 0.7506666779518127, 0.7423333525657654, 0.7680000066757202, 0.7696666717529297, 0.8113333582878113, 0.7576666474342346, 0.8190000057220459, 0.812333345413208, 0.7763333320617676, 0.7730000019073486, 0.8109999895095825, 0.8203333616256714, 0.7943333387374878, 0.8163333535194397, 0.8303333520889282, 0.8433333039283752, 0.8453333377838135, 0.8199999928474426, 0.8360000252723694, 0.8306666612625122, 0.8533333539962769, 0.8496666550636292, 0.847000002861023, 0.8399999737739563, 0.8513333201408386, 0.8416666388511658]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [6, 4, 6, 6, 0, 2, 8, 0, 3, 6, 3, 8, 2, 3, 2, 6, 8, 5, 0, 2], [0, 3, 2, 0, 2, 1, 1, 2, 0, 0, 0, 3, 2, 2], [56, 73, 74, 54, 46], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 2, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.27799999713897705, "mapping_values": [1, 23, 23, 13, 10, 4, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 5, 2, 3, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.negative(tf.math.add(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad)))))), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha))), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.add(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.307622329355184, 3.268626743036254, 2.4034030804339968, 2.3093137634019367, 2.436209619163349, 2.402571950307092], "accuracy": [0.2277110069990158, 0.2436930388212204, 0.19033153355121613, 0.20116232335567474, 0.1006472036242485, 0.09972262382507324], "val_loss": [1.764049666268485, 2.0003659384591237, 1.9285759925842285, 2.0635192734854564, 2.0204542704990933, 1.9941261836460658], "val_accuracy": [0.30666667222976685, 0.1326666623353958, 0.19233334064483643, 0.10166666656732559, 0.0976666659116745, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [5, 8, 6, 6, 0, 8, 8, 4, 5, 8, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 77, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 0, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.2685714364051819, "mapping_values": [1, 12, 12, 8, 4, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))))))), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.328063632896815, 3.3290262016968533, 2.280550431361241, 2.4203155051133005, 2.30758242181358, 2.3037575381133757, 2.3031863530455894, 2.3033771096691718], "accuracy": [0.2071060687303543, 0.16563200950622559, 0.13432836532592773, 0.16074495017528534, 0.10011887550354004, 0.09760929644107819, 0.09325055778026581, 0.09351472556591034], "val_loss": [1.9480009760175432, 1.9804635047912598, 1.87255825315203, 1.98067045211792, 1.9750432286943709, 1.9739018167768205, 1.973794596535819, 1.9736050878252303], "val_accuracy": [0.1889999955892563, 0.10000000149011612, 0.28999999165534973, 0.10400000214576721, 0.10400000214576721, 0.0976666659116745, 0.0976666659116745, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [4, 4, 6, 0, 6, 2, 8, 0, 3, 6, 3, 8, 5, 3, 2, 6, 8, 5, 0, 2], [0, 3, 2, 0, 2, 1, 1, 2, 0, 0, 2, 1, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [11, 25, 50, 71, 34]], "fitness": -0.24142856895923615, "mapping_values": [1, 22, 22, 13, 9, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(grad, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.multiply(alpha, grad))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.3271891754915246, 3.177082683526451, 2.3067644185960696, 2.2255036835310844, 2.267846381013986, 2.335244816307851, 8.070684458270694, 2.3066606880919083], "accuracy": [0.20842689275741577, 0.15017831325531006, 0.11398758739233017, 0.23405098915100098, 0.22414475679397583, 0.16457535326480865, 0.10579843819141388, 0.09906221181154251], "val_loss": [1.9404283932277135, 1.9814556666782923, 1.9689321517944336, 1.9714007377624512, 1.9713452884129115, 37.05325426374163, 1.9790357862200056, 1.974571909223284], "val_accuracy": [0.18700000643730164, 0.09966666996479034, 0.20233333110809326, 0.11866666376590729, 0.10533333569765091, 0.09700000286102295, 0.10266666859388351, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1], [2, 9, 6, 9, 0, 3, 8, 8, 5, 5, 1, 8], [1, 3, 2, 1, 2, 1, 1, 2, 0, 0, 0, 3, 2, 2], [56, 73, 10, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0], [5, 9, 0], [5, 3], [62], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 3, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.11114285886287689, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 2, 2, 2, 0, 1, 5, 2, 3, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, sigma), beta)", "other_info": {"loss": [2.697626760339441, 2.476308571333426, 2.312626541219824, 2.304867753326271, 2.3036763237577937, 2.303436576855606], "accuracy": [0.2075023055076599, 0.19112402200698853, 0.09708096832036972, 0.09813763201236725, 0.10011887550354004, 0.09602430462837219], "val_loss": [1.9706264223371233, 1.9873884746006556, 1.97433716910226, 1.9736407824925013, 1.9738526344299316, 1.9735431671142578], "val_accuracy": [0.12800000607967377, 0.11599999666213989, 0.10400000214576721, 0.1003333330154419, 0.09833333641290665, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [6, 4, 6, 6, 0, 2, 3, 0, 3, 6, 3, 8, 4, 3, 2, 8, 8, 5, 0, 2], [0, 2, 1, 0, 2, 1, 1, 2, 0, 0, 0, 3, 2, 2], [56, 73, 74, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [0, 0, 1, 0], [3, 2, 0], [5, 3], [], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [58, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 24, 24, 13, 11, 5, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 9, 5, 4, 3], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(grad, alpha)))), tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(alpha, grad), alpha)))), tf.math.add(alpha, alpha))), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))))))), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.add(beta, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1760696.7507987695, 2.3138952368301817, 2.305599483469332, 2.3033782003924452, 2.3032264260095676, 2.3029961781242916, 2.303034743392283], "accuracy": [0.09496764093637466, 0.0936468094587326, 0.09470347315073013, 0.0936468094587326, 0.0956280529499054, 0.09985470771789551, 0.09998679161071777], "val_loss": [1.990565504346575, 1.978217261178153, 1.9749115535191126, 1.9740613528660365, 1.9738067899431502, 1.9737640108380998, 1.9737071309770857], "val_accuracy": [0.09966666996479034, 0.10400000214576721, 0.09833333641290665, 0.09833333641290665, 0.10400000214576721, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1], [2, 9, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8, 1, 2, 6, 9, 3, 9, 9], [2, 3, 0, 0, 2, 2, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46, 97], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 27, 27, 19, 8, 6, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 9, 5, 4, 3], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))), grad))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1781416.2891688345, 2.3138953448129196, 2.305599168559044, 2.303378038465575, 2.303226677937798, 2.302996124180159, 2.303035314702528], "accuracy": [0.09496764093637466, 0.0936468094587326, 0.09470347315073013, 0.0936468094587326, 0.0956280529499054, 0.09985470771789551, 0.09998679161071777], "val_loss": [1.990565504346575, 1.9782169886997767, 1.9749113491603307, 1.9740612166268485, 1.973806721823556, 1.9737650326320104, 1.9737064497811454], "val_accuracy": [0.09966666996479034, 0.10400000214576721, 0.09833333641290665, 0.09833333641290665, 0.10400000214576721, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1], [4, 4, 6, 6, 0, 2, 8, 0, 0, 6, 8, 8, 4, 3, 2, 6, 8, 5, 0, 2], [2, 3, 0, 0, 2, 1, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 3, 2, 9, 2, 9, 5, 0], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 11, 8, 3, 3], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), beta), tf.math.add(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.negative(beta)))", "other_info": {"loss": [2.30272524364085, 2.3023810508842906, 2.3023461289078946, 2.3024927577196475, 2.3024539987503374, 2.3027905299600246], "accuracy": [0.1014397069811821, 0.10236428678035736, 0.10474177449941635, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736498423985072, 1.973680087498256, 1.9737228666033064, 1.9737895556858607, 1.9739642143249512, 1.9743144171578544], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [4, 9, 6, 6, 0, 3, 8, 2, 5, 3, 1, 8], [0, 3, 2, 0, 2, 1, 1, 2, 0, 0, 0, 3, 2, 2], [56, 73, 74, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 1, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 12, 7, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), grad))), tf.math.add(alpha, tf.math.multiply(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))))))))), tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, alpha), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.12230881303548813, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 4, 6, 6, 0, 2, 8, 0, 3, 6, 3, 8, 4, 2, 2, 6, 8, 5, 0, 2], [0, 3, 2, 0, 2, 1, 1, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 18], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [2, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 30, 30, 17, 13, 5, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), grad))))), tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))), grad))), tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), grad)))))))))))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0882314071059227, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1], [4, 4, 6, 6, 0, 2, 8, 0, 3, 6, 3, 8, 4, 3, 2, 6, 8, 5, 0, 2], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [56, 73, 74, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 2, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 1, 2, 9, 2, 9], [2, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.subtract(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [4, 9, 6, 6, 0, 3, 8, 2, 9, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 56, 68, 73, 46], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 1, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [90, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 11, 11, 7, 4, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.sqrt(grad))), grad)), tf.math.sqrt(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1], [2, 9, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 1, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 1, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [23, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 5, 3, 2, 1, 0, 5, 2, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [6.899709753718721, 2.3103402455122937, 2.3410103032617617, 2.746527585528546, 2.3111632572834626, 17.180029272450557, 3.3925796734768685, 2.3191373666610384, 14383989.524752086, 12.511961891351675], "accuracy": [0.10157178342342377, 0.1010434553027153, 0.09655263274908066, 0.10249637067317963, 0.09232597798109055, 0.10857218503952026, 0.10051512718200684, 0.09615638852119446, 0.0874389111995697, 0.09774138033390045], "val_loss": [1.9774879728044783, 2.0048843111310686, 4.123326029096331, 1.9738336290631975, 92.02774701799665, 1.974555288042341, 1.973940099988665, 4.440853800092425, 1.998368535723005, 1.979330403464181], "val_accuracy": [0.10000000149011612, 0.10400000214576721, 0.10100000351667404, 0.09966666996479034, 0.15433333814144135, 0.09966666996479034, 0.09733333438634872, 0.0989999994635582, 0.0976666659116745, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [2, 9, 1, 6, 0, 3, 8, 2, 4, 6, 1, 8, 6, 9, 8, 5, 5, 3, 1, 6, 0], [2, 3, 0, 0, 2, 2, 2, 2, 0, 0, 0, 3, 2, 2], [80, 98, 68, 73, 46, 96, 76], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 32, 32, 21, 11, 7, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 9, 5, 4, 3], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, grad), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), grad)))))), tf.math.add(alpha, grad)))), tf.math.subtract(tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.subtract(grad, grad), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))))))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [178357313.55077714, 3425018721.348303, 16113723623.823538, 44729755805.704926, 95437733760.32123, 174619912168.466], "accuracy": [0.09893012791872025, 0.10276053100824356, 0.10460969805717468, 0.09536388516426086, 0.10302469879388809, 0.10632677376270294], "val_loss": [685437184.0, 5480401773.714286, 18492873581.714287, 43830874697.14286, 85602397622.85715, 147914789449.14285], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [9, 9, 1, 6, 2, 3, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 0, 2, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07515519857406616, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [2, 9, 1, 6, 0, 3, 5, 2, 5, 6, 1, 8], [0, 2, 2, 0, 2, 1, 1, 2, 0, 0, 0, 3, 2, 2], [26, 47, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 12, 7, 3, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 3, 1, 2, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), grad))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(alpha)))))))), alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1], [2, 9, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 2, 1, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, beta)", "other_info": {"loss": [2.301992719073605, 2.3020098709458643, 2.303301344773143, 2.302955927645384, 2.302180628750728, 2.3004178543289844], "accuracy": [0.09549596905708313, 0.09325055778026581, 0.08625016361474991, 0.08889182657003403, 0.09021265059709549, 0.09192973375320435], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]