[{"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 2, 2, 2, 2, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 0, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 7, 2, 9], [1, 3, 3, 1], [41, 38]], "fitness": -0.8142856955528259, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 6, 7, 4, 1, 1, 0, 1, 0, 8, 5, 3, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.math.add(alpha, sigma), sigma), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2232338749516862, 1.9848747437010668, 1.5662299454755408, 1.3292550989319036, 1.0232420727529892, 0.919312461563121, 0.8713675478918362, 0.7626712112268673, 0.726144215883029, 0.6611922408265051, 0.6611433503980791, 0.6224211702619514, 0.6121257537108182, 0.588188667968752, 0.5643116574419047, 0.5533863034907774, 0.552517638883854, 0.540244695186426, 0.5244223604805639, 0.5052253134640184, 0.5205829428281797, 0.4912597027791411, 0.48565842915267804, 0.4807049813500138, 0.4702224208379324, 0.4512893369468353, 0.45311573374902786, 0.4425580105084344, 0.43217195262053637, 0.428024267803141, 0.42731343521701504, 0.4291989293828727, 0.41083288993014794, 0.3979749672637403], "accuracy": [0.2736758589744568, 0.34883105754852295, 0.4881785809993744, 0.542728841304779, 0.6388852000236511, 0.6631884574890137, 0.6775855422019958, 0.7141724824905396, 0.7232862114906311, 0.7474573850631714, 0.7497028112411499, 0.7675340175628662, 0.76542067527771, 0.7771760821342468, 0.7860256433486938, 0.7881389260292053, 0.7907806038856506, 0.7975168228149414, 0.7989697456359863, 0.8084797263145447, 0.8042530417442322, 0.8161405324935913, 0.8177255392074585, 0.8191784620285034, 0.8231409192085266, 0.8296129703521729, 0.8308017253875732, 0.8305375576019287, 0.8401796221733093, 0.8338396549224854, 0.8403117060661316, 0.8400475382804871, 0.843481719493866, 0.8519350290298462], "val_loss": [1.5419442653656006, 1.4655937126704626, 1.2924497468130929, 0.9247340474809919, 0.792305452483041, 0.6396426643644061, 0.6021361010415214, 0.554503151348659, 0.521646431514195, 0.5287961278642926, 0.498785172189985, 0.5086419752665928, 0.48428734711238314, 0.44511485951287405, 0.4308458055768694, 0.4448468003954206, 0.4222493086542402, 0.42770484515598844, 0.4810807704925537, 0.4047658273151943, 0.4202342288834708, 0.39772500310625347, 0.42998307943344116, 0.37863764592579435, 0.39053199120930265, 0.37100509234837126, 0.3835002865110125, 0.36338203293936594, 0.3518566744668143, 0.389028685433524, 0.38762577942439486, 0.3536125591823033, 0.3594321778842381, 0.3847809944834028], "val_accuracy": [0.41499999165534973, 0.5450000166893005, 0.45766666531562805, 0.6589999794960022, 0.6679999828338623, 0.7103333473205566, 0.7160000205039978, 0.7473333477973938, 0.7713333368301392, 0.7536666393280029, 0.7670000195503235, 0.7633333206176758, 0.7853333353996277, 0.8016666769981384, 0.8133333325386047, 0.8076666593551636, 0.8236666917800903, 0.809333324432373, 0.765333354473114, 0.8276666402816772, 0.8253333568572998, 0.8196666836738586, 0.815666675567627, 0.8416666388511658, 0.8349999785423279, 0.8453333377838135, 0.8293333053588867, 0.8516666889190674, 0.8533333539962769, 0.8246666789054871, 0.8289999961853027, 0.8529999852180481, 0.8510000109672546, 0.8303333520889282]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0], [9, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [7, 4, 4, 2, 2, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 2, 0, 3, 3, 0, 5], [30, 63, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.7842857241630554, "mapping_values": [1, 1, 1, 1, 0, 1, 7, 7, 3, 4, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.pow(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.0884985788040757, 1.3442442028073114, 1.1614053752192133, 0.9278911503550714, 0.8214344117052882, 0.790677635228204, 0.7470015677888049, 0.7263272733122146, 0.6983381327054189, 0.6622428117395471, 0.6879253352102492, 0.6509553811821278, 0.6482932178839685, 0.6294160351194584, 0.6027108899685119, 0.6070400896782195, 0.6298392627060043, 0.5844225139350876, 0.5868091988856404, 0.5616635236332619], "accuracy": [0.30986660718917847, 0.5350680351257324, 0.5906749367713928, 0.6629242897033691, 0.6952846646308899, 0.707040011882782, 0.7228899598121643, 0.7257958054542542, 0.7359662055969238, 0.7516840696334839, 0.7446836829185486, 0.7563069462776184, 0.7549861073493958, 0.759080708026886, 0.7725531458854675, 0.7720248103141785, 0.7578919529914856, 0.7828556299209595, 0.783119797706604, 0.7924976944923401], "val_loss": [1.2314821992601668, 0.789023756980896, 0.7615804501942226, 0.6571792023522514, 0.6151005029678345, 0.5790016991751534, 0.5432331562042236, 0.5508107968739101, 0.5286818402154105, 0.5203464371817452, 0.5298411505562919, 0.5265378611428397, 0.5062547411237445, 0.509434734072004, 0.47031387260981966, 0.4979621342250279, 0.4814530781337193, 0.4734270061765398, 0.48618349007197786, 0.4913497822625296], "val_accuracy": [0.5059999823570251, 0.6880000233650208, 0.6359999775886536, 0.6996666789054871, 0.7146666646003723, 0.731333315372467, 0.7519999742507935, 0.749666690826416, 0.7733333110809326, 0.7733333110809326, 0.7416666746139526, 0.7670000195503235, 0.781333327293396, 0.7743333578109741, 0.7983333468437195, 0.7760000228881836, 0.7906666398048401, 0.7960000038146973, 0.7770000100135803, 0.7953333258628845]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 0], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 5, 2, 2, 2, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 1, 3, 3, 0, 2, 3, 2, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.7842857241630554, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 7, 7, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), grad)))))), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.0884985788040757, 1.3442442028073114, 1.1614053752192133, 0.9278911503550714, 0.8214344117052882, 0.790677635228204, 0.7470015677888049, 0.7263272733122146, 0.6983381327054189, 0.6622428117395471, 0.6879253352102492, 0.6509553811821278, 0.6482932178839685, 0.6294160351194584, 0.6027108899685119, 0.6070400896782195, 0.6298392627060043, 0.5844225139350876, 0.5868091988856404, 0.5616635236332619], "accuracy": [0.30986660718917847, 0.5350680351257324, 0.5906749367713928, 0.6629242897033691, 0.6952846646308899, 0.707040011882782, 0.7228899598121643, 0.7257958054542542, 0.7359662055969238, 0.7516840696334839, 0.7446836829185486, 0.7563069462776184, 0.7549861073493958, 0.759080708026886, 0.7725531458854675, 0.7720248103141785, 0.7578919529914856, 0.7828556299209595, 0.783119797706604, 0.7924976944923401], "val_loss": [1.2314821992601668, 0.789023756980896, 0.7615804501942226, 0.6571792023522514, 0.6151005029678345, 0.5790016991751534, 0.5432331562042236, 0.5508107968739101, 0.5286818402154105, 0.5203464371817452, 0.5298411505562919, 0.5265378611428397, 0.5062547411237445, 0.509434734072004, 0.47031387260981966, 0.4979621342250279, 0.4814530781337193, 0.4734270061765398, 0.48618349007197786, 0.4913497822625296], "val_accuracy": [0.5059999823570251, 0.6880000233650208, 0.6359999775886536, 0.6996666789054871, 0.7146666646003723, 0.731333315372467, 0.7519999742507935, 0.749666690826416, 0.7733333110809326, 0.7733333110809326, 0.7416666746139526, 0.7670000195503235, 0.781333327293396, 0.7743333578109741, 0.7983333468437195, 0.7760000228881836, 0.7906666398048401, 0.7960000038146973, 0.7770000100135803, 0.7953333258628845]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [0, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1], [7, 2, 2, 2, 2, 2, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 0, 2, 3, 3, 0], [15, 25, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [56, 38]], "fitness": -0.35028570890426636, "mapping_values": [1, 1, 1, 0, 1, 1, 17, 17, 8, 9, 3, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.add(tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.add(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), grad), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(beta, tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.676530339383745, 2.284933436138912, 2.333798766120424, 2.271016026154139, 2.2882570062157908, 2.303809257561993, 2.303225250134552, 2.3031481378318737, 2.30302751094217], "accuracy": [0.19033153355121613, 0.1224408894777298, 0.17038699984550476, 0.13195087015628815, 0.1212521493434906, 0.09642054885625839, 0.09417514503002167, 0.09826971590518951, 0.09985470771789551], "val_loss": [1.9742439133780343, 1.6889685222080775, 1.9759985378810339, 1.6799043927873885, 1.974477972303118, 1.9738548823765345, 1.9737470490591866, 1.973661150251116, 1.9736943244934082], "val_accuracy": [0.12333333492279053, 0.20499999821186066, 0.10400000214576721, 0.31433331966400146, 0.10233332961797714, 0.10233332961797714, 0.09733333438634872, 0.10400000214576721, 0.09700000286102295]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 6, 4, 2, 4, 7], [2, 0, 0, 3, 1, 0, 1], [5, 57, 16], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [9, 2, 4, 3, 0, 1, 5, 4, 2, 8, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 1, 3, 3, 0, 2, 3, 2, 0], [42, 16, 43, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [2, 3, 3, 1], [57, 38]], "fitness": -0.22942857444286346, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.8402100773283423, 2.280747691701038, 2.337319928672981, 2.3034505552194373, 2.3029392915017035, 2.302185773534577, 2.2801823683103724], "accuracy": [0.20221899449825287, 0.1266675442457199, 0.1080438494682312, 0.10011887550354004, 0.10328886657953262, 0.11015717685222626, 0.14872540533542633], "val_loss": [1.9817470141819544, 1.9099314553397042, 1.9739083562578474, 1.9736161913190569, 1.9735851287841797, 1.9702439308166504, 1.976767131260463], "val_accuracy": [0.09966666996479034, 0.21533332765102386, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10233332961797714, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 0], [9, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [7, 0, 4, 2, 2, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 2, 0, 3, 3, 0, 5], [30, 63, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.22942857444286346, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.negative(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.8402100773283423, 2.280747691701038, 2.337319928672981, 2.3034505552194373, 2.3029392915017035, 2.302185773534577, 2.2801823683103724], "accuracy": [0.20221899449825287, 0.1266675442457199, 0.1080438494682312, 0.10011887550354004, 0.10328886657953262, 0.11015717685222626, 0.14872540533542633], "val_loss": [1.9817470141819544, 1.9099314553397042, 1.9739083562578474, 1.9736161913190569, 1.9735851287841797, 1.9702439308166504, 1.976767131260463], "val_accuracy": [0.09966666996479034, 0.21533332765102386, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10233332961797714, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0], [2, 6, 9, 9, 0], [2, 1, 1, 3], [5, 57], [1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [6, 5, 2, 5, 6, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 2, 0, 3, 3, 0, 5], [30, 63, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.22942857444286346, "mapping_values": [1, 5, 5, 3, 2, 1, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(grad, tf.math.square(tf.math.add(beta, grad)))))), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.8402100773283423, 2.280747691701038, 2.337319928672981, 2.3034505552194373, 2.3029392915017035, 2.302185773534577, 2.2801823683103724], "accuracy": [0.20221899449825287, 0.1266675442457199, 0.1080438494682312, 0.10011887550354004, 0.10328886657953262, 0.11015717685222626, 0.14872540533542633], "val_loss": [1.9817470141819544, 1.9099314553397042, 1.9739083562578474, 1.9736161913190569, 1.9735851287841797, 1.9702439308166504, 1.976767131260463], "val_accuracy": [0.09966666996479034, 0.21533332765102386, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10233332961797714, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0], [1, 6, 9, 9, 0], [0, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [5, 8, 4, 2, 2, 1, 9, 0, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 1, 3, 3, 0, 2, 3, 2, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0], [0, 3, 7, 2, 9], [3, 3, 0, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 2, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0734381154179573, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 0], [1, 6, 9, 9, 0], [2, 1, 1, 3], [5, 57], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [1, 2, 2, 0, 6, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 3, 0, 0, 0, 2, 2, 3, 3, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [0, 3], [69], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [0, 3, 3, 1], [53, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.3029662115132066, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0], [9, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0], [7, 4, 4, 2, 2, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 2, 0, 3, 3, 0, 5, 2], [42, 22, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 0, 0, 1, 1, 1, 1, 0], [0, 2, 7, 2, 9], [2, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 29, 29, 17, 12, 6, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.pow(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))))))))), tf.math.add(beta, tf.math.subtract(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.math.add(beta, grad)))))), tf.math.sqrt(tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), grad), tf.math.add(beta, beta))), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [0, 0, 0, 3, 1, 0], [67, 57], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [5, 8, 4, 2, 2, 1, 9, 0, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 1, 3, 3, 0, 2, 3, 2, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [1, 3, 3, 1], [72, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [2.3029662115132066, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0, 1], [5, 57], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 2, 2, 2, 2, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 2, 3, 3, 0, 2, 3, 2, 0], [2, 16, 43, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 5, 0, 2, 9], [2, 3, 3, 1], [15, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 8, 9, 1, 1, 0, 0, 0, 0, 4, 3, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.multiply(beta, tf.math.add(beta, beta))), tf.math.add(beta, grad)), grad)), tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), beta)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), beta)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.negative(beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09496764093637466, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1], [7, 4, 4, 2, 2, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 0, 3, 0, 2, 0, 3, 3, 0, 5, 3], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 7, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 29, 29, 17, 12, 6, 1, 1, 0, 1, 0, 6, 3, 3, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.pow(grad, tf.math.add(beta, tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.subtract(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))))), grad)), tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))))), tf.math.add(beta, tf.math.subtract(tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))), grad), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.add(sigma, sigma)))", "other_info": {"loss": [2.304022782955187, 2.307805248334061, 2.310772241807302, 2.3189806925574974, 2.3329784695372493, 2.393918813007099, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08545766770839691, 0.08228767663240433, 0.07713644206523895, 0.07185312360525131, 0.0730418711900711, 0.07938185334205627, 0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9732724598475866, 1.9771095684596471, 1.9816065515790666, 1.987424033028739, 2.0017188617161343, 3.2006775311061313, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.02866666577756405, 0.026000000536441803, 0.026333333924412727, 0.04266666620969772, 0.08433333039283752, 0.10000000149011612, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [7, 8, 2, 2, 2, 2, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 1, 3, 3, 0, 2, 3, 2, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 0, 0, 1, 0, 1, 1, 1, 0], [0, 3, 7, 8, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 7, 5, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.math.sqrt(sigma), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 2, 2, 2, 2, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 3, 0, 2, 2, 3, 3, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 5, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 3, 3, 0, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [16302.140355466017, 302497.49744914804, 1397167.6096618676, 3814537.091005151, 8305979.779025228, 15115454.006339982], "accuracy": [0.09470347315073013, 0.09853387624025345, 0.09998679161071777, 0.10117553919553757, 0.10051512718200684, 0.09734513610601425], "val_loss": [60521.10491071428, 476981.01785714284, 1602298.7142857143, 3789383.4285714286, 7391154.571428572, 12760534.285714285], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0], [9, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [7, 4, 9, 2, 2, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 1, 3, 3, 0, 2, 3, 2, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 0, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [13.019842238962186, 2.790207920608551, 60.06397725411252, 2.3486180347678935, 2.330166849556569, 2.3488913744731335, 2.3490559923776373], "accuracy": [0.09391097724437714, 0.09893012791872025, 0.09760929644107819, 0.10328886657953262, 0.10276053100824356, 0.09945846349000931, 0.09826971590518951], "val_loss": [2.0191970552716936, 275.70111083984375, 2.0250821113586426, 1.974724428994315, 2.0438978331429616, 2.0560521398271834, 2.021073409489223], "val_accuracy": [0.09833333641290665, 0.10400000214576721, 0.09733333438634872, 0.09966666996479034, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 4, 2, 2, 0, 2, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 1, 3, 3, 2, 2, 3, 2, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 0, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.07571428269147873, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 6, 6, 0, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, beta), alpha), tf.math.add(beta, tf.math.negative(grad)))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(sigma), sigma))", "other_info": {"loss": [2.3022481964374846, 2.301144336429113, 2.2992871637751224, 2.300268796960581, 2.3008099965541557, 2.300231589207859, 2.3001855264612554, 2.2993662860871873, 2.2997447692360686, 2.2990799700626527, 2.29927273357801, 2.299614863420254, 2.2996650678669663, 2.2997036653187894, 2.300408422482437], "accuracy": [0.08942015469074249, 0.09694888442754745, 0.09602430462837219, 0.09417514503002167, 0.09232597798109055, 0.09615638852119446, 0.09047681838274002, 0.09853387624025345, 0.09721305221319199, 0.09681680053472519, 0.10777968913316727, 0.1018359512090683, 0.09615638852119446, 0.09906221181154251, 0.09153348207473755], "val_loss": [1.9697482926504952, 1.969177518572126, 1.9690581730433874, 1.9690615109034948, 1.9690522466387068, 1.9691729545593262, 1.9690938677106584, 1.9690419605800085, 1.9690497943333216, 1.9691414833068848, 1.9694466590881348, 1.96969849722726, 1.969973019191197, 1.9702369826180595, 1.9704855510166712], "val_accuracy": [0.04899999871850014, 0.0533333346247673, 0.05766666680574417, 0.06066666543483734, 0.061666667461395264, 0.0663333311676979, 0.07266666740179062, 0.07433333247900009, 0.07466666400432587, 0.07533333450555801, 0.07199999690055847, 0.07066666334867477, 0.06933332979679108, 0.06700000166893005, 0.0676666647195816]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [0, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 2, 2, 2, 2, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 1, 3, 3, 0, 2, 3, 2, 0], [90, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 3, 2, 9], [3, 3, 3, 1], [72, 38]], "fitness": -0.051428571343421936, "mapping_values": [1, 1, 1, 0, 1, 1, 13, 13, 6, 7, 1, 1, 1, 0, 1, 0, 6, 3, 3, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), alpha)), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(sigma, sigma), sigma))", "other_info": {"loss": [2.3027043796376057, 2.3024488017858533, 2.3008114576434195, 2.3019199377951005, 2.3026719421144364, 2.301943552256292, 2.3018097256184444, 2.301315201020055, 2.302131607736878, 2.3010626321361047, 2.300280204207874, 2.3013898730829108, 2.3008672622342576, 2.30104943909555, 2.300628749937854, 2.301411821637187, 2.2993201190108055, 2.3009988513085444, 2.2995217002346657, 2.30149216306145, 2.299660727930831, 2.3004896680141376, 2.3012024012255616, 2.300124953057961, 2.3002405282198053, 2.2998198645068606, 2.3000244854337675, 2.299402368445013, 2.2999420262378174, 2.3000387198196632, 2.3003604358544107, 2.3001440138848954, 2.2997698810641887, 2.300021302383558, 2.3003177731626967, 2.2987124797391254, 2.2998656031792866, 2.299236523996428, 2.299524608273721, 2.3001505481789, 2.2998152142896187, 2.299704787281164, 2.298650506968984, 2.3015936832417903, 2.299906333298054, 2.2991929954903676, 2.2982234842725924, 2.3002012163625025, 2.298102705155255, 2.2998440113238936, 2.298764374655755, 2.298232635565564, 2.2985605543567647, 2.2995607297748952, 2.299998766301157, 2.2992165594714398, 2.297833448072954, 2.298545291032994, 2.2974297720695356, 2.29850106544152, 2.299377777761929, 2.2977301944689335, 2.296627009470764, 2.297577179969341], "accuracy": [0.08796724677085876, 0.09391097724437714, 0.09179764986038208, 0.0886276587843895, 0.08994849026203156, 0.09126931428909302, 0.08717474341392517, 0.09166556596755981, 0.08875974267721176, 0.08915598690509796, 0.09985470771789551, 0.09325055778026581, 0.09377889335155487, 0.09826971590518951, 0.0948355570435524, 0.09245806187391281, 0.09694888442754745, 0.08625016361474991, 0.09879804402589798, 0.09100515395402908, 0.09826971590518951, 0.09602430462837219, 0.09259014576673508, 0.09536388516426086, 0.09496764093637466, 0.09681680053472519, 0.1010434553027153, 0.09615638852119446, 0.09945846349000931, 0.09879804402589798, 0.09760929644107819, 0.09166556596755981, 0.09866596013307571, 0.09391097724437714, 0.09694888442754745, 0.10606260597705841, 0.1014397069811821, 0.10157178342342377, 0.09457138925790787, 0.09655263274908066, 0.09655263274908066, 0.09694888442754745, 0.09549596905708313, 0.09232597798109055, 0.09774138033390045, 0.09642054885625839, 0.09866596013307571, 0.09325055778026581, 0.09800554811954498, 0.09549596905708313, 0.09853387624025345, 0.10038304328918457, 0.09589222073554993, 0.09391097724437714, 0.1010434553027153, 0.09734513610601425, 0.10659094154834747, 0.10302469879388809, 0.09879804402589798, 0.10038304328918457, 0.10077928751707077, 0.10368511080741882, 0.10196803510189056, 0.1022322028875351], "val_loss": [1.9705048288617815, 1.9704228809901647, 1.9703467914036341, 1.9702678407941545, 1.970187050955636, 1.9701154572623116, 1.9700446810041154, 1.9699734960283553, 1.969897678920201, 1.9698237010410853, 1.9697531972612654, 1.9696813992091589, 1.9696118491036552, 1.9695369856698173, 1.9694654600960868, 1.9693967274257116, 1.9693243162972587, 1.96925687789917, 1.9691816057477678, 1.9691106251307897, 1.9690392357962472, 1.9689642361232214, 1.9688921655927385, 1.968822615487235, 1.9687486376081194, 1.968681744166783, 1.9686126027788435, 1.9685398510524206, 1.968472617013114, 1.9684006146022253, 1.9683427810668945, 1.9682822227478027, 1.9682164192199707, 1.968160833631243, 1.9681000028337752, 1.9680465970720564, 1.96798494883946, 1.9679226875305176, 1.9678603581019811, 1.9678022520882743, 1.9677363804408483, 1.9676799774169922, 1.967613901410784, 1.9675549098423548, 1.9674899918692452, 1.9674327714102608, 1.9673752103533064, 1.967315605708531, 1.9672568866184779, 1.967203140258789, 1.967149325779506, 1.9670850890023368, 1.9670212609427316, 1.9669669696262904, 1.9669157436915807, 1.9668589319501604, 1.9668056624276298, 1.9667493956429618, 1.966696330479213, 1.9666434696742467, 1.9665961946759904, 1.9665474891662598, 1.966496195111956, 1.9664481707981654], "val_accuracy": [0.03933333232998848, 0.03966666758060455, 0.03966666758060455, 0.041333332657814026, 0.0416666679084301, 0.04266666620969772, 0.0430000014603138, 0.043666668236255646, 0.04399999976158142, 0.04466666653752327, 0.04466666653752327, 0.04500000178813934, 0.045666664838790894, 0.04533333331346512, 0.04533333331346512, 0.045666664838790894, 0.045666664838790894, 0.04600000008940697, 0.04699999839067459, 0.047333333641290665, 0.04833333194255829, 0.04899999871850014, 0.04899999871850014, 0.05000000074505806, 0.050999999046325684, 0.05233333259820938, 0.052666667848825455, 0.05299999937415123, 0.0533333346247673, 0.05366666615009308, 0.05433333292603493, 0.054666668176651, 0.054999999701976776, 0.05533333495259285, 0.05533333495259285, 0.05533333495259285, 0.05533333495259285, 0.056333333253860474, 0.05700000002980232, 0.0573333315551281, 0.058666665107011795, 0.05900000035762787, 0.05900000035762787, 0.059333331882953644, 0.059333331882953644, 0.05999999865889549, 0.060333333909511566, 0.060333333909511566, 0.06066666543483734, 0.06066666543483734, 0.06066666543483734, 0.061000000685453415, 0.06199999898672104, 0.06233333423733711, 0.06300000101327896, 0.06300000101327896, 0.06366666406393051, 0.06366666406393051, 0.06400000303983688, 0.06400000303983688, 0.06400000303983688, 0.06400000303983688, 0.06400000303983688, 0.06366666406393051]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 0], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [7, 4, 4, 2, 2, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 5, 0, 3, 0, 2, 2, 1, 3, 0], [30, 63, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [3, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 1, 1, 1, 0, 1, 0, 5, 2, 3, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.pow(grad, tf.math.pow(tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.multiply(sigma, sigma))", "other_info": {"loss": [2.3027768597674014, 2.3026843051459447, 2.3011953012267155, 2.3024634825570818, 2.30339407265824, 2.3028037165134276], "accuracy": [0.08717474341392517, 0.09298639744520187, 0.09060890227556229, 0.08717474341392517, 0.08875974267721176, 0.08796724677085876], "val_loss": [1.9706717218671526, 1.9707485607692175, 1.970820699419294, 1.9708988325936454, 1.9709810529436385, 1.9710578918457031], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.03799999877810478]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [0, 0, 0, 3, 1, 0], [19, 57], [0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 2, 2, 2, 2, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 2, 0, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 1, 13, 13, 6, 7, 2, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), beta))), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, sigma))", "other_info": {"loss": [2.3033517203421057, 2.3048233304435017, 2.304811530408606, 2.3080630180558916, 2.3118636710154714, 2.3142821472303003], "accuracy": [0.08625016361474991, 0.08770307898521423, 0.08321225643157959, 0.08083476126194, 0.08175934851169586, 0.0758156105875969], "val_loss": [1.971776008605957, 1.9733411243983678, 1.9748061043875558, 1.9766996928623743, 1.9791665077209473, 1.9816901343209403], "val_accuracy": [0.03099999949336052, 0.028333334252238274, 0.025333333760499954, 0.02500000037252903, 0.024666666984558105, 0.026333333924412727]}}]