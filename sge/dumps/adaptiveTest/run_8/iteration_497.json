[{"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.7851428389549255, "mapping_values": [1, 16, 16, 10, 6, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), grad))))), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.1389790558150543, 1.9735726124385975, 1.3677694491108159, 1.0534603218156207, 0.8997662921292576, 0.8326926999686652, 0.7718205295612374, 0.7341792194079005, 0.6972406649743844, 0.6719289200653284, 0.6306286939162589, 0.613468071677823, 0.6064915807255664, 0.5902602116209152, 0.5605285517716877, 0.5422173100707554, 0.5384362846900286, 0.5356397791435343, 0.5239408737506849, 0.5301967468307066], "accuracy": [0.29163914918899536, 0.37524765729904175, 0.5180293321609497, 0.6149781942367554, 0.6682076454162598, 0.6802271604537964, 0.7046625018119812, 0.7170783281326294, 0.7293620109558105, 0.7440232634544373, 0.7559106945991516, 0.7689869403839111, 0.7622507214546204, 0.7683265209197998, 0.7897239327430725, 0.7915731072425842, 0.7967243194580078, 0.8016114234924316, 0.8038568496704102, 0.7996301651000977], "val_loss": [1.9363895143781389, 1.0505364622388567, 0.9215727533612933, 0.8913038117544991, 0.6054542575563703, 0.6248391015189034, 0.6375500815255302, 0.5846330778939384, 0.5370554753712246, 0.5080142532076154, 0.4829143285751343, 0.46697083541325163, 0.5041735853467669, 0.45568552187510897, 0.4496318187032427, 0.46058917897088186, 0.46246419634137836, 0.4303596190043858, 0.48292878695896696, 0.45582120759146555], "val_accuracy": [0.38466668128967285, 0.6056666374206543, 0.5860000252723694, 0.6029999852180481, 0.7013333439826965, 0.6976666450500488, 0.7149999737739563, 0.7326666712760925, 0.7593333125114441, 0.7763333320617676, 0.7829999923706055, 0.7723333239555359, 0.762666642665863, 0.7893333435058594, 0.8063333630561829, 0.7960000038146973, 0.7893333435058594, 0.8006666898727417, 0.7720000147819519, 0.7896666526794434]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 9, 1, 6, 2, 3, 8, 1, 5, 8, 1, 8], [2, 3, 0, 0, 2, 2, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.7851428389549255, "mapping_values": [1, 16, 16, 10, 6, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, grad))), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.1389790558150543, 1.9735726124385975, 1.3677694491108159, 1.0534603218156207, 0.8997662921292576, 0.8326926999686652, 0.7718205295612374, 0.7341792194079005, 0.6972406649743844, 0.6719289200653284, 0.6306286939162589, 0.613468071677823, 0.6064915807255664, 0.5902602116209152, 0.5605285517716877, 0.5422173100707554, 0.5384362846900286, 0.5356397791435343, 0.5239408737506849, 0.5301967468307066], "accuracy": [0.29163914918899536, 0.37524765729904175, 0.5180293321609497, 0.6149781942367554, 0.6682076454162598, 0.6802271604537964, 0.7046625018119812, 0.7170783281326294, 0.7293620109558105, 0.7440232634544373, 0.7559106945991516, 0.7689869403839111, 0.7622507214546204, 0.7683265209197998, 0.7897239327430725, 0.7915731072425842, 0.7967243194580078, 0.8016114234924316, 0.8038568496704102, 0.7996301651000977], "val_loss": [1.9363895143781389, 1.0505364622388567, 0.9215727533612933, 0.8913038117544991, 0.6054542575563703, 0.6248391015189034, 0.6375500815255302, 0.5846330778939384, 0.5370554753712246, 0.5080142532076154, 0.4829143285751343, 0.46697083541325163, 0.5041735853467669, 0.45568552187510897, 0.4496318187032427, 0.46058917897088186, 0.46246419634137836, 0.4303596190043858, 0.48292878695896696, 0.45582120759146555], "val_accuracy": [0.38466668128967285, 0.6056666374206543, 0.5860000252723694, 0.6029999852180481, 0.7013333439826965, 0.6976666450500488, 0.7149999737739563, 0.7326666712760925, 0.7593333125114441, 0.7763333320617676, 0.7829999923706055, 0.7723333239555359, 0.762666642665863, 0.7893333435058594, 0.8063333630561829, 0.7960000038146973, 0.7893333435058594, 0.8006666898727417, 0.7720000147819519, 0.7896666526794434]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 0, 8, 5, 0, 3, 3, 2, 5, 6, 1, 8, 3, 6, 2, 3, 5, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 3, 2, 9, 2, 9], [3, 0, 1, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [72, 60, 50, 71, 34]], "fitness": -0.3720000088214874, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [3.303113999257801, 2.3057134142956164, 2.303591612984775, 2.3031425930804676, 2.3027671183955323, 2.3026918259909, 2.302868949738728, 2.302154653753508, 2.301392386539375, 2.2911509545786886, 2.410739305359167, 2.1581577216440486, 2.4067833305208235, 2.3042887670803913, 2.303732590825881, 2.3033187200112697, 2.303508852734589], "accuracy": [0.16497160494327545, 0.10130762308835983, 0.09259014576673508, 0.09708096832036972, 0.09747721254825592, 0.10077928751707077, 0.10276053100824356, 0.10659094154834747, 0.10936468094587326, 0.16140536963939667, 0.18795403838157654, 0.2141064554452896, 0.1208558976650238, 0.10038304328918457, 0.09668471664190292, 0.09774138033390045, 0.09866596013307571], "val_loss": [1.978912694113595, 1.9748469080243791, 1.9739948681422643, 1.9736523628234863, 1.9737978662763322, 1.9735136713300432, 1.9732811791556222, 1.972661086491176, 1.9704031263078963, 1.9723591123308455, 1.9645203181675501, 1.9713201522827148, 1.9750951358250208, 1.9738600594656808, 1.9736060414995467, 1.9735544749668665, 1.9738594463893346], "val_accuracy": [0.09833333641290665, 0.10233332961797714, 0.08699999749660492, 0.1433333307504654, 0.0976666659116745, 0.0976666659116745, 0.10233332961797714, 0.13833333551883698, 0.15166667103767395, 0.10233332961797714, 0.1289999932050705, 0.35766667127609253, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 5, 8, 9, 0, 3, 3, 2, 5, 6, 1, 8, 3, 6, 2, 3, 5, 8], [1, 1, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [99, 98, 38, 73, 46, 77, 40, 36], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.23114286363124847, "mapping_values": [1, 5, 5, 4, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.336469752173524, 2.3056825594170816, 2.3035523218170777, 2.3031807343217565, 2.3028664482803456, 2.302796171231434, 2.303061370127835], "accuracy": [0.16391493380069733, 0.10051512718200684, 0.09272222965955734, 0.09391097724437714, 0.09576013684272766, 0.09694888442754745, 0.09721305221319199], "val_loss": [1.9787981169564384, 1.9748022215706962, 1.973996707371303, 1.973700863974435, 1.9737968444824219, 1.9736718450273787, 1.9736710957118444], "val_accuracy": [0.09833333641290665, 0.10233332961797714, 0.09966666996479034, 0.08900000154972076, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 5, 8, 9, 0, 3, 3, 2, 5, 6, 1, 8, 3, 6, 2, 3, 5, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 38, 73, 46, 77, 40, 36], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [5, 3, 2, 9, 2, 9], [2, 1, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.13199999928474426, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.square(grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(beta)", "other_info": {"loss": [2.3017004047323764, 2.3013443209948306, 2.3023605094436546, 2.303063277476468, 2.3051798397193197, 2.3372006310825855], "accuracy": [0.09496764093637466, 0.08545766770839691, 0.09457138925790787, 0.09774138033390045, 0.0956280529499054, 0.1006472036242485], "val_loss": [1.969285011291504, 1.9729221207754952, 1.973792348589216, 1.974574089050293, 1.980553150177002, 2.095707757132394], "val_accuracy": [0.10766666382551193, 0.07066666334867477, 0.09233333170413971, 0.09266666322946548, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [0, 1, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [62, 25, 50, 71, 34]], "fitness": -0.10342857241630554, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [4.726427655698066, 2.461173594005828, 7.05404485048257, 238303.07028256214, 27.407799754900434, 73.88522052752296, 68.70692512630362, 40.495051231398136, 3586.887381713246, 1027935.3894023217, 2.3032666396439714, 2.303183650422515, 2.3031304266159607, 2.303079152670928], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.10460969805717468, 0.10632677376270294, 0.09998679161071777, 0.09932637959718704, 0.10051512718200684, 0.10011887550354004, 0.09919429570436478, 0.1022322028875351, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.080240113394601, 2.0961294855390276, 1540193.7857142857, 21.863810811723983, 102.63773795536586, 74.76524843488421, 145.27003479003906, 1.97434663772583, 4326.814732142857, 1.9744223867143904, 1.9743396214076452, 1.9742774963378906, 1.9742168698992049, 1.974161011832101], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09733333438634872, 0.09966666996479034, 0.10000000149011612, 0.09966666996479034, 0.10000000149011612, 0.09966666996479034, 0.10066666454076767, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 9, 6, 6, 8, 3, 8, 2, 4, 6, 1, 8], [1, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [1, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 5, 4, 1, 9, 9], [1, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [62, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 8, 8, 4, 4, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.multiply(tf.math.sqrt(tf.math.add(beta, grad)), grad))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [193.95055833125488, 2455.5732536673654, 10152.77914286422, 27012.435094129738, 56115.240984306896, 102802.24439679369], "accuracy": [0.09840179979801178, 0.09906221181154251, 0.09747721254825592, 0.09906221181154251, 0.10619468986988068, 0.09774138033390045], "val_loss": [472.50144740513394, 3288.9812360491073, 10716.917410714286, 25010.19308035714, 48421.197544642855, 83203.66071428571], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [2, 5, 8, 9, 0, 3, 3, 2, 5, 6, 1, 8, 3, 6, 2, 3, 5, 8], [2, 3, 0, 0, 2, 1, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 0, 2, 9, 2, 9], [0, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [41, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 4, 2, 2, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [5049239.125224136, 97516697.74032493, 448023411.86104876, 1244872923.7860255, 2645199810.054154, 4916183701.0487385], "accuracy": [0.09787346422672272, 0.09866596013307571, 0.09747721254825592, 0.09906221181154251, 0.10606260597705841, 0.09760929644107819], "val_loss": [19164490.285714287, 153022706.2857143, 516126518.85714287, 1223029394.2857144, 2388294436.571429, 4126447469.714286], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07753269374370575, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 5, 8, 9, 0, 3, 3, 2, 5, 6, 1, 8, 3, 6, 2, 3, 5, 8], [2, 1, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 38, 73, 46, 77, 40, 36], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [9, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302428628160434, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 2, 6, 0, 3, 8, 5, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 27, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [26, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 10, 5, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 9, 5, 4, 3], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))))), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1719845.7549944462, 2.313622385708254, 2.305495978000063, 2.3034566102514744, 2.3029917267099145, 2.3029281130052435, 2.3030432659353735], "accuracy": [0.08942015469074249, 0.09721305221319199, 0.09668471664190292, 0.09642054885625839, 0.09721305221319199, 0.09325055778026581, 0.0940430611371994], "val_loss": [1.9903971808297294, 1.9782024792262487, 1.9748475892203194, 1.9739124434334892, 1.9739231382097517, 1.9737629890441895, 1.9738010678972517], "val_accuracy": [0.09966666996479034, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.0976666659116745, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [1, 5, 8, 5, 0, 0, 3, 2, 5, 2, 1, 8, 3, 6, 2, 3, 5, 8], [1, 1, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [61, 6, 1, 73, 46, 77, 40, 36], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 0, 1], [0, 1, 1, 0], [3, 8, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 0, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [62, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 11, 6, 3, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 5, 2, 3, 2], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.sqrt(alpha))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 3, 6, 6, 8, 3, 8, 2, 4, 6, 1, 8], [2, 1, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 38, 73, 46, 77, 40, 36], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 0, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [7, 3, 2, 3, 6, 9], [0, 0, 1, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [62, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 0, 1, 0, 0, 0, 0, 11, 6, 5, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))), alpha)", "other_info": {"loss": [2.3026884927599736, 6.920527162049283, 3884902884.025279, 2.9882371973880684e+18, 2.4601457146243306e+27, Infinity], "accuracy": [0.1022322028875351, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9818942206246513, 575.5844029017857, 513074341010.2857, 3.765337809990267e+20, 3.2429008748931406e+29, Infinity], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [2, 9, 6, 6, 3, 3, 8, 2, 5, 6, 1, 8], [1, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [8, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), grad))), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [1, 3, 0, 2, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [61, 98, 38, 73, 46, 77, 40, 36], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [5, 3, 2, 9, 2, 9], [2, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(alpha, tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(beta, beta))", "other_info": {"loss": [5901923.74330751, 9655749.379738476, 9655712.607845727, 9655752.044644037, 9655722.208162727, 9655701.22665434, 9655734.99735834, 9659490.481706511, 9659457.977017567, 9659491.79117686], "accuracy": [0.09853387624025345, 0.10011887550354004, 0.09787346422672272, 0.09998679161071777, 0.09866596013307571, 0.09760929644107819, 0.09932637959718704, 0.10130762308835983, 0.09826971590518951, 0.10196803510189056], "val_loss": [8084619.428571428, 8084587.142857143, 8084629.714285715, 8084597.714285715, 8084574.571428572, 8084618.285714285, 8087862.857142857, 8087796.0, 8087778.285714285, 8087821.428571428], "val_accuracy": [0.10000000149011612, 0.09833333641290665, 0.10233332961797714, 0.10233332961797714, 0.10400000214576721, 0.09733333438634872, 0.09733333438634872, 0.10400000214576721, 0.10400000214576721, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [2, 5, 8, 9, 0, 3, 3, 2, 5, 6, 1, 8, 3, 6, 2, 3, 5, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [61, 98, 38, 73, 46, 77, 40, 36], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 3, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [5, 3, 2, 9, 2, 9], [1, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [72, 25, 50, 71, 34]], "fitness": -0.07657142728567123, "mapping_values": [1, 4, 4, 2, 2, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(alpha, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303825921701198, 2.3023608657331547, 2.300818998453687, 2.300686534968003, 2.2995808680043983, 2.2993988163199455, 2.2992318259128224, 2.298991646481354, 2.299831883120987, 2.2978098855404694, 2.298584369384318, 2.299795229956773, 2.2992804855986075, 2.2994628140892037], "accuracy": [0.08928807079792023, 0.0882314071059227, 0.0936468094587326, 0.09642054885625839, 0.09430722147226334, 0.10249637067317963, 0.10315678268671036, 0.1010434553027153, 0.09391097724437714, 0.09945846349000931, 0.10038304328918457, 0.10157178342342377, 0.10170386731624603, 0.09681680053472519], "val_loss": [1.9695356232779366, 1.968862806047712, 1.968423639025007, 1.9682790211268835, 1.968165057046073, 1.9681685992649622, 1.968252454485212, 1.9682532038007463, 1.9682187352861678, 1.9683548382350378, 1.9685992513384138, 1.968801770891462, 1.969104834965297, 1.9695115770612444], "val_accuracy": [0.04899999871850014, 0.057999998331069946, 0.06700000166893005, 0.0689999982714653, 0.07599999755620956, 0.0793333351612091, 0.0793333351612091, 0.0820000022649765, 0.08433333039283752, 0.0820000022649765, 0.0820000022649765, 0.0806666687130928, 0.07699999958276749, 0.07533333450555801]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [2, 5, 8, 5, 0, 3, 3, 3, 5, 6, 1, 8, 3, 6, 2, 3, 5, 8], [1, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1], [5, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.07514286041259766, "mapping_values": [1, 6, 6, 4, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.sqrt(alpha))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(beta)", "other_info": {"loss": [2.3038733828069353, 2.302512426512384, 2.3010714742501555, 2.3010731158774873, 2.3000425336036887, 2.2999380300577528, 2.2997586029930956, 2.299477943733557, 2.3002536703078755, 2.2982288380624, 2.299042417987022, 2.3002495920306987, 2.29975567810634, 2.29998323218603], "accuracy": [0.08915598690509796, 0.08809932321310043, 0.09285431355237961, 0.09589222073554993, 0.09457138925790787, 0.09945846349000931, 0.10236428678035736, 0.1006472036242485, 0.09245806187391281, 0.09813763201236725, 0.09840179979801178, 0.09840179979801178, 0.09932637959718704, 0.09536388516426086], "val_loss": [1.969653538295201, 1.9690752710614885, 1.9687399864196777, 1.9686829021998815, 1.9686801774161202, 1.9687094007219588, 1.9687477520533971, 1.9687086514064245, 1.9686493192400252, 1.9688168934413366, 1.9690664836338587, 1.9692963191441126, 1.9696202278137207, 1.970026629311698], "val_accuracy": [0.04833333194255829, 0.05666666850447655, 0.06466666609048843, 0.06533333659172058, 0.07100000232458115, 0.07366666942834854, 0.07566666603088379, 0.07666666805744171, 0.07800000160932541, 0.07766667008399963, 0.07466666400432587, 0.0729999989271164, 0.07100000232458115, 0.0676666647195816]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [2, 1, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [61, 98, 38, 73, 46, 77, 40, 36], [0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [5, 3, 2, 9, 2, 9], [3, 0, 1, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.multiply(tf.math.sqrt(tf.math.add(beta, grad)), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(sigma)", "other_info": {"loss": [2.304393945384602, 2.30401652436514, 2.3031517638348946, 2.3034607631308983, 2.302703693574052, 2.302771022905212], "accuracy": [0.08849557489156723, 0.08611807972192764, 0.08717474341392517, 0.09087307006120682, 0.08347642421722412, 0.08981640636920929], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 5, 8, 9, 0, 3, 3, 2, 5, 6, 1, 8, 3, 6, 2, 3, 5, 8], [2, 1, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 38, 73, 46, 77, 40, 36], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 2, 9, 2, 9], [0, 3, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [62, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 5, 3, 2, 1, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.sqrt(grad))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.304393945384602, 2.30401652436514, 2.3031517638348946, 2.3034607631308983, 2.302703693574052, 2.302771022905212], "accuracy": [0.08849557489156723, 0.08611807972192764, 0.08717474341392517, 0.09087307006120682, 0.08347642421722412, 0.08981640636920929], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [2, 5, 5, 4, 0, 3, 3, 2, 5, 6, 1, 8, 3, 6, 2, 3, 5, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [61, 98, 38, 73, 46, 77, 40, 36], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [3, 3, 2, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [62, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 15, 15, 9, 6, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.square(grad))), tf.math.add(alpha, tf.math.pow(tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.square(grad)))), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.304393945384602, 2.30401652436514, 2.3031517638348946, 2.3034607631308983, 2.302703693574052, 2.302771022905212], "accuracy": [0.08849557489156723, 0.08611807972192764, 0.08717474341392517, 0.09087307006120682, 0.08347642421722412, 0.08981640636920929], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]