[{"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [1, 2, 2, 3], [44, 57], [1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 2, 6, 6, 5, 2, 2, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [94, 82, 66, 84, 1, 78], [0, 0, 0, 1, 0, 0], [0, 0, 1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 2, 1, 2], [45, 38]], "fitness": -0.7965714335441589, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 1, 6, 5, 3, 2, 0, 6, 4, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.divide_no_nan(alpha, grad), tf.math.add(beta, grad)), tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, sigma))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, beta)))", "other_info": {"loss": [2.113661320895063, 1.4758515126039764, 1.086928583281057, 0.886246272168533, 0.8125865606583971, 0.7517337079029892, 0.7204271378990776, 0.687462392830814, 0.6639215323856053, 0.649446593386197, 0.6328709084029368, 0.6064741667770926, 0.6011194143911253, 0.5739004704473891, 0.5581949098770566, 0.5585642534161382, 0.5344799255272967, 0.5296672465637171, 0.5189456384274245], "accuracy": [0.29679039120674133, 0.48289525508880615, 0.5945053696632385, 0.6643772125244141, 0.6913221478462219, 0.7123233675956726, 0.7236824631690979, 0.7309470176696777, 0.7486461400985718, 0.7420420050621033, 0.7560427784919739, 0.7685906887054443, 0.7703077793121338, 0.7808743715286255, 0.789459764957428, 0.7858935594558716, 0.802800178527832, 0.8029322624206543, 0.8055738806724548], "val_loss": [1.275519711630685, 0.8542439767292568, 0.7709789105824062, 0.6793151072093419, 0.5656757865633283, 0.5692650590624128, 0.5263160637446812, 0.5429954699107579, 0.517379641532898, 0.49422504220690044, 0.5101883070809501, 0.5372025115149361, 0.47149022987910677, 0.4422488978930882, 0.4825629506792341, 0.4555495892252241, 0.43139926876340595, 0.45985977138791767, 0.4248955760683332], "val_accuracy": [0.44333332777023315, 0.6026666760444641, 0.6703333258628845, 0.687666654586792, 0.7390000224113464, 0.7436666488647461, 0.765333354473114, 0.7720000147819519, 0.7633333206176758, 0.7793333530426025, 0.7703333497047424, 0.7576666474342346, 0.7923333048820496, 0.8173333406448364, 0.7916666865348816, 0.8029999732971191, 0.8149999976158142, 0.7946666479110718, 0.815666675567627]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 3, 2, 3], [44, 57], [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 2, 6, 6, 1, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 1, 0, 1, 1, 3, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 3, 6, 9], [3, 3, 3, 1], [45, 38]], "fitness": -0.7917143106460571, "mapping_values": [1, 3, 3, 1, 2, 1, 17, 17, 9, 8, 2, 1, 1, 0, 1, 0, 8, 5, 3, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.add(beta, grad)), tf.math.add(beta, tf.math.subtract(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, alpha)), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.pow(alpha, tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(sigma, sigma), sigma), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0094848142056305, 1.5929206458569014, 1.1668276807588278, 0.9226532894874435, 0.8248030992310674, 0.7842857812326723, 0.7911108900070695, 0.6993356377315433, 0.680150512423356, 0.6848154914865656, 0.6368703574725524, 0.6200344594730095, 0.6215026779827298, 0.6053606967695511, 0.5928488984524912, 0.5673931729776228, 0.5609510966012381, 0.5450958212400393, 0.5286288252832269, 0.5304371958568725], "accuracy": [0.32664114236831665, 0.49266940355300903, 0.588297426700592, 0.6642451286315918, 0.6935675740242004, 0.7082287669181824, 0.7061154246330261, 0.737947404384613, 0.7436270117759705, 0.7411174178123474, 0.7619865536689758, 0.7671377658843994, 0.7648923397064209, 0.7701756954193115, 0.7730814814567566, 0.7847048044204712, 0.7926297783851624, 0.7967243194580078, 0.8018755912780762, 0.7973847389221191], "val_loss": [1.6817453588758196, 0.994232041495187, 1.040485177721296, 0.6405877385820661, 0.6615263904844012, 0.6992930684770856, 0.5221504143306187, 0.5281598738261631, 0.5937104565756661, 0.4881616660526821, 0.4893070799963815, 0.499382632119315, 0.5253545727048602, 0.47085329464503695, 0.44044763701302664, 0.46064432178224834, 0.4409304601805551, 0.43861799580710276, 0.44350461448941914, 0.4328969120979309], "val_accuracy": [0.4346666634082794, 0.5730000138282776, 0.5590000152587891, 0.7103333473205566, 0.6916666626930237, 0.6883333325386047, 0.7749999761581421, 0.7639999985694885, 0.7413333058357239, 0.7926666736602783, 0.7853333353996277, 0.7526666522026062, 0.7710000276565552, 0.7803333401679993, 0.8180000185966492, 0.7983333468437195, 0.8033333420753479, 0.8069999814033508, 0.8106666803359985, 0.8136666417121887]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [9, 6, 4, 9], [0, 3, 2, 3], [44, 57], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [8, 2, 6, 2, 9, 1, 6, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 1, 0, 1, 1, 3, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 1, 9, 9, 9], [3, 0, 3, 1], [45, 38]], "fitness": -0.7897142767906189, "mapping_values": [1, 1, 1, 1, 0, 1, 10, 10, 6, 4, 1, 1, 1, 0, 1, 0, 6, 5, 1, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.subtract(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), sigma))", "other_info": {"loss": [1.9823098279828046, 1.430497850157471, 1.0407807044679966, 0.8745850657254729, 0.8649104957283921, 0.782946507967915, 0.752428230663348, 0.7160099147963029, 0.6957552409474372, 0.7123173189563144, 0.6754869754052102, 0.6346077758087191, 0.6287744346311803, 0.6261498982707003, 0.6167018516125727, 0.5904057112116116, 0.5819719958188843, 0.5815521663584021, 0.5533738247533563, 0.565667092099465], "accuracy": [0.3423590064048767, 0.486989825963974, 0.6209219098091125, 0.6787742972373962, 0.6679434776306152, 0.7065116763114929, 0.7141724824905396, 0.728701651096344, 0.7337207794189453, 0.7337207794189453, 0.7464007139205933, 0.7597411274909973, 0.7534011602401733, 0.7618544697761536, 0.7642319202423096, 0.7775723338127136, 0.7804781198501587, 0.7816668748855591, 0.7895918488502502, 0.7841764688491821], "val_loss": [1.3737575326647078, 0.9388209070478167, 0.6917879751750401, 0.6919115441186088, 0.5896009036472866, 0.5761290107454572, 0.5459119251796177, 0.5230418273380825, 0.543263486453465, 0.516923359462193, 0.5059457165854317, 0.4964327301297869, 0.5047237362180438, 0.48138327257973806, 0.4534914067813328, 0.4470335159982954, 0.44058309282575336, 0.4417243685041155, 0.46482462542397635, 0.45812754120145527], "val_accuracy": [0.390666663646698, 0.6086666584014893, 0.6883333325386047, 0.6930000185966492, 0.7453333139419556, 0.750333309173584, 0.7703333497047424, 0.765333354473114, 0.7673333287239075, 0.7940000295639038, 0.765333354473114, 0.7833333611488342, 0.7720000147819519, 0.7889999747276306, 0.8113333582878113, 0.8063333630561829, 0.8080000281333923, 0.809333324432373, 0.7946666479110718, 0.8019999861717224]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [2, 3, 2, 3], [44, 57], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [8, 2, 6, 2, 1, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 1, 3, 1, 1, 3, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [0], [17], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0], [0, 3, 3, 6, 0], [3, 3, 3, 1], [45, 38]], "fitness": -0.16685713827610016, "mapping_values": [1, 3, 3, 1, 2, 0, 14, 14, 8, 6, 3, 1, 1, 0, 1, 1, 9, 5, 4, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, grad)))), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(sigma, sigma), tf.math.divide_no_nan(sigma, tf.math.negative(alpha))))", "other_info": {"loss": [2.307850648005562, 2.3203058969925707, 2.3296570905116822, 2.3344402526741597, 2.3626587873657128, 2.550176787291378, 2.570071166800218, 2.547949555779587, 2.560988694102678, 2.5465968289411207, 2.553098163490109, 2.5445749014281422, 2.5589811088953507, 2.563380535205342, 2.564262856865257, 2.5621600150117283, 2.5454260053069064, 2.5344837727469223, 2.543008555227251, 2.5312817033413237, 2.5238561225904212, 2.578707442165854, 2.6165286148732854, 2.610570739588135, 2.6319785919864622, 2.6032048779204064, 2.630840892852211, 2.6133764944591733], "accuracy": [0.0956280529499054, 0.10249637067317963, 0.09457138925790787, 0.09628847241401672, 0.09496764093637466, 0.09047681838274002, 0.08849557489156723, 0.09351472556591034, 0.09074098616838455, 0.09259014576673508, 0.0956280529499054, 0.0940430611371994, 0.09311848133802414, 0.09470347315073013, 0.09417514503002167, 0.09430722147226334, 0.09628847241401672, 0.1006472036242485, 0.10447761416435242, 0.09602430462837219, 0.11438383162021637, 0.109232597053051, 0.11530841141939163, 0.10474177449941635, 0.10698718577623367, 0.11200633645057678, 0.11068551242351532, 0.11940298229455948], "val_loss": [1.9690006801060267, 1.9713824135916573, 1.9748175484793526, 1.9664889063153947, 2.065683364868164, 2.0631307874407088, 2.0598088673182895, 2.0617882864815846, 2.061837605067662, 2.0612623350960866, 2.0574584007263184, 2.060107776096889, 2.062272684914725, 2.061264855521066, 2.064089502607073, 2.061821392604283, 2.0488150460379466, 2.048499516078404, 2.0431032861982072, 2.0466538837977817, 2.015331813267299, 2.0634702954973494, 2.060784067426409, 2.0584659576416016, 2.05870144707816, 2.06172936303275, 2.058762550354004, 2.0583181381225586], "val_accuracy": [0.054999999701976776, 0.06733333319425583, 0.06533333659172058, 0.06733333319425583, 0.10166666656732559, 0.09833333641290665, 0.10366666316986084, 0.1066666692495346, 0.1106666699051857, 0.11100000143051147, 0.11266666650772095, 0.13500000536441803, 0.12300000339746475, 0.1316666603088379, 0.12466666847467422, 0.12666666507720947, 0.14666666090488434, 0.15066666901111603, 0.15600000321865082, 0.15033333003520966, 0.17466667294502258, 0.17299999296665192, 0.1756666600704193, 0.13966666162014008, 0.13733333349227905, 0.1420000046491623, 0.1433333307504654, 0.14233332872390747]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [1, 2, 2, 3], [44, 57], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 2, 6, 6, 5, 2, 2, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 1, 2, 3, 3, 0], [94, 82, 66, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 3, 2, 9], [3, 3, 3, 1], [45, 38]], "fitness": -0.14971429109573364, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3952529058165446, 2.9890134857945108, 2.3052629542120884, 2.271523923291947, 2.3483386645936193, 2.304607612424444, 2.302720843966233, 2.297378056777734, 2.472801851826321], "accuracy": [0.21912561357021332, 0.12151630967855453, 0.09615638852119446, 0.14159291982650757, 0.16642451286315918, 0.09919429570436478, 0.09615638852119446, 0.12112006545066833, 0.12230881303548813], "val_loss": [1.9432834216526575, 1.979621478489467, 1.9731954847063338, 2.001910754612514, 1.9771356582641602, 1.973874568939209, 1.972574165889195, 1.9348177909851074, 1.976635319846017], "val_accuracy": [0.11166666448116302, 0.10233332961797714, 0.09966666996479034, 0.2549999952316284, 0.09966666996479034, 0.10400000214576721, 0.09700000286102295, 0.09966666996479034, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 3, 2, 3], [44, 57], [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 2, 6, 6, 4, 1, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 1, 3, 1, 1, 3, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 1, 0, 9], [3, 3, 3, 1], [36, 38]], "fitness": -0.14971429109573364, "mapping_values": [1, 3, 3, 1, 2, 1, 13, 13, 7, 6, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(grad, grad), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, grad)), tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3952529058165446, 2.9890134857945108, 2.3052629542120884, 2.271523923291947, 2.3483386645936193, 2.304607612424444, 2.302720843966233, 2.297378056777734, 2.472801851826321], "accuracy": [0.21912561357021332, 0.12151630967855453, 0.09615638852119446, 0.14159291982650757, 0.16642451286315918, 0.09919429570436478, 0.09615638852119446, 0.12112006545066833, 0.12230881303548813], "val_loss": [1.9432834216526575, 1.979621478489467, 1.9731954847063338, 2.001910754612514, 1.9771356582641602, 1.973874568939209, 1.972574165889195, 1.9348177909851074, 1.976635319846017], "val_accuracy": [0.11166666448116302, 0.10233332961797714, 0.09966666996479034, 0.2549999952316284, 0.09966666996479034, 0.10400000214576721, 0.09700000286102295, 0.09966666996479034, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 3, 2, 3], [44, 57], [1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 2, 6, 6, 1, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0, 5, 4, 5, 7, 8, 7], [3, 3, 3, 1, 0, 1, 2, 3, 3, 0, 2, 2, 5], [42, 46, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 3, 3, 6, 9, 2, 9], [3, 3, 3, 1], [45, 38]], "fitness": -0.14971429109573364, "mapping_values": [1, 3, 3, 1, 2, 1, 37, 37, 24, 13, 5, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.subtract(grad, tf.math.add(beta, tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)))), tf.math.add(beta, grad)), tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(alpha, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, alpha))), tf.math.add(beta, tf.math.subtract(tf.math.subtract(tf.math.sqrt(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.square(tf.math.add(beta, beta)), grad)))))), tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(tf.math.add(beta, grad), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), beta)))))), beta)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3952529058165446, 2.9890134857945108, 2.3052629542120884, 2.271523923291947, 2.3483386645936193, 2.304607612424444, 2.302720843966233, 2.297378056777734, 2.472801851826321], "accuracy": [0.21912561357021332, 0.12151630967855453, 0.09615638852119446, 0.14159291982650757, 0.16642451286315918, 0.09919429570436478, 0.09615638852119446, 0.12112006545066833, 0.12230881303548813], "val_loss": [1.9432834216526575, 1.979621478489467, 1.9731954847063338, 2.001910754612514, 1.9771356582641602, 1.973874568939209, 1.972574165889195, 1.9348177909851074, 1.976635319846017], "val_accuracy": [0.11166666448116302, 0.10233332961797714, 0.09966666996479034, 0.2549999952316284, 0.09966666996479034, 0.10400000214576721, 0.09700000286102295, 0.09966666996479034, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [1, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [1, 3, 2, 3], [44, 57], [1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [8, 2, 6, 2, 1, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 1, 0, 1, 1, 3, 3, 0], [83, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 3, 6, 9], [3, 3, 3, 1], [45, 38]], "fitness": -0.14971429109573364, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 7, 5, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.subtract(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, alpha)), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3952529058165446, 2.9890134857945108, 2.3052629542120884, 2.271523923291947, 2.3483386645936193, 2.304607612424444, 2.302720843966233, 2.297378056777734, 2.472801851826321], "accuracy": [0.21912561357021332, 0.12151630967855453, 0.09615638852119446, 0.14159291982650757, 0.16642451286315918, 0.09919429570436478, 0.09615638852119446, 0.12112006545066833, 0.12230881303548813], "val_loss": [1.9432834216526575, 1.979621478489467, 1.9731954847063338, 2.001910754612514, 1.9771356582641602, 1.973874568939209, 1.972574165889195, 1.9348177909851074, 1.976635319846017], "val_accuracy": [0.11166666448116302, 0.10233332961797714, 0.09966666996479034, 0.2549999952316284, 0.09966666996479034, 0.10400000214576721, 0.09700000286102295, 0.09966666996479034, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [1, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [1, 3, 2, 3], [44, 57], [1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 2, 6, 6, 5, 2, 2, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 1, 0, 2, 1, 3, 3, 0], [94, 82, 66, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 3, 8, 9], [3, 2, 1, 2], [45, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 7, 7, 1, 1, 1, 0, 1, 0, 7, 4, 3, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.add(beta, grad)), tf.math.square(grad)), tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta)), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.sqrt(sigma), beta), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [1, 3, 2, 3], [44, 57], [1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 3, 6, 5, 1, 1, 2, 8, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 3, 3, 1, 0, 3, 3, 0], [42, 46, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [1], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 3, 3, 6, 9, 2, 9], [3, 3, 2, 1], [45, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 17, 17, 9, 8, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, grad), tf.math.multiply(tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.math.add(beta, tf.math.subtract(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.add(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, alpha)))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08677849918603897, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [8, 6, 4, 9], [0, 3, 2, 3], [44, 57], [0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [5, 2, 6, 6, 1, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 1, 0, 1, 1, 3, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [3, 0, 5, 8, 5, 5, 5, 2, 1, 8, 1, 2, 7, 4, 3, 9, 1, 5], [3, 3, 3, 1], [45, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 12, 12, 7, 5, 2, 1, 1, 0, 1, 0, 6, 4, 2, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.add(beta, grad)), tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, alpha))), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.square(tf.math.sqrt(sigma))), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [1, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [1, 2, 2, 3], [44, 57], [1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 2, 6, 6, 5, 2, 2, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 1, 6, 9], [3, 3, 3, 1], [45, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 7, 7, 1, 1, 1, 0, 1, 0, 8, 5, 3, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(alpha, tf.math.add(beta, grad)), tf.math.square(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)))), tf.math.add(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(sigma, sigma), sigma), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10434553027153015, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [0, 1, 0, 1, 0, 1, 0], [7, 6, 4, 9], [0, 2, 2, 3], [44, 57], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 2, 6, 6, 1, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 3, 3, 1, 3, 3, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 2, 8, 6, 9], [3, 3, 3, 1], [45, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 2, 17, 17, 9, 8, 1, 1, 1, 0, 1, 0, 7, 4, 3, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.subtract(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.pow(alpha, tf.math.add(grad, tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.divide_no_nan(sigma, sigma)), sigma))", "other_info": {"loss": [22588028.789888084, 2.314285718155512, 2.305865011793385, 2.3034689005072155, 2.303105381548822, 2.3029426948001688], "accuracy": [0.09668471664190292, 0.08730682730674744, 0.09245806187391281, 0.09893012791872025, 0.09774138033390045, 0.09628847241401672], "val_loss": [1.987630912235805, 1.9769902229309082, 1.9742424828665597, 1.9736617633274622, 1.9737647601536341, 1.973679746900286], "val_accuracy": [0.10400000214576721, 0.09700000286102295, 0.09966666996479034, 0.10400000214576721, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [1, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [1, 3, 2, 3], [44, 57], [1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [8, 4, 8, 2, 1, 5, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 1, 2, 1, 1, 3, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [0], [51], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 6, 3, 6, 9], [3, 3, 2, 1], [45, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 0, 1, 1, 0, 1, 1, 8, 5, 3, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.pow(grad, tf.math.sqrt(tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.divide_no_nan(sigma, sigma), beta), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [1, 3, 2, 3], [44, 57], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 2, 6, 6, 5, 2, 2, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 1, 0, 1, 1, 3, 3, 0], [59, 82, 66, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [0], [83], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [0, 3, 3, 1], [45, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 7, 7, 1, 1, 1, 0, 1, 1, 6, 4, 2, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, grad)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.square(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, alpha))), tf.math.add(tf.math.add(beta, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha))))), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.30271286618645, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [4, 6, 4, 9], [2, 2, 2, 3], [44, 57], [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 6, 6, 6, 1, 1, 9, 0, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 3, 3, 1, 0, 3, 3, 0], [11, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [5, 3, 3, 6, 5], [0, 1, 2, 1], [57, 38, 14]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 14, 14, 8, 6, 1, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.add(beta, grad)), tf.math.add(beta, tf.math.subtract(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.negative(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.math.multiply(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), alpha), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 2, 2, 3], [44, 57], [0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1], [1, 2, 0, 6, 5, 2, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 1, 3, 2, 3, 3, 0], [94, 82, 66, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 1, 2], [69, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, sigma)))", "other_info": {"loss": [5.262730721580509e+31, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.15334829688072205, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [1, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [2, 2, 2, 3], [44, 57], [1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 0, 6, 6, 5, 3, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [94, 38, 66, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 8, 6, 9], [3, 3, 3, 1], [45, 38]], "fitness": -0.07114285975694656, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 7, 4, 1, 1, 1, 0, 1, 0, 7, 4, 3, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.negative(tf.math.divide_no_nan(alpha, grad)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.square(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.divide_no_nan(sigma, sigma)), sigma))", "other_info": {"loss": [2.395329930873327, 2.8370186370582062, 2.3027562101865726, 2.374884235860492, 2.3036863310399105, 2.3030654076241293, 2.302940565754693, 2.3031568324104543], "accuracy": [0.21925769746303558, 0.11900673806667328, 0.09985470771789551, 0.11530841141939163, 0.09576013684272766, 0.09338264167308807, 0.09760929644107819, 0.09760929644107819], "val_loss": [1.9496332577296667, 1.9749633925301688, 1.9614436285836356, 1.9750975200108118, 1.9742533820016044, 1.97382048198155, 1.9739182335989816, 1.9737155778067452], "val_accuracy": [0.10466666519641876, 0.10233332961797714, 0.18433333933353424, 0.09733333438634872, 0.09733333438634872, 0.09966666996479034, 0.09700000286102295, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [2, 6, 4, 9], [0, 3, 2, 3], [44, 57], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], [1, 2, 6, 5, 1, 2, 9, 8, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 1, 3, 1, 3, 3, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 8, 6, 9], [3, 3, 3, 1], [45, 38]], "fitness": -0.07114285975694656, "mapping_values": [1, 3, 3, 1, 2, 1, 12, 12, 7, 5, 1, 1, 1, 0, 1, 0, 7, 4, 3, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.square(grad), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, alpha)), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.divide_no_nan(sigma, sigma)), sigma))", "other_info": {"loss": [2.395329930873327, 2.8370186370582062, 2.3027562101865726, 2.374884235860492, 2.3036863310399105, 2.3030654076241293, 2.302940565754693, 2.3031568324104543], "accuracy": [0.21925769746303558, 0.11900673806667328, 0.09985470771789551, 0.11530841141939163, 0.09576013684272766, 0.09338264167308807, 0.09760929644107819, 0.09760929644107819], "val_loss": [1.9496332577296667, 1.9749633925301688, 1.9614436285836356, 1.9750975200108118, 1.9742533820016044, 1.97382048198155, 1.9739182335989816, 1.9737155778067452], "val_accuracy": [0.10466666519641876, 0.10233332961797714, 0.18433333933353424, 0.09733333438634872, 0.09733333438634872, 0.09966666996479034, 0.09700000286102295, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [0, 6, 4, 9], [0, 3, 2, 3], [44, 57], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 2, 6, 6, 1, 2, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 2, 3, 1, 0, 3, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3], [4, 1], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 3, 3, 6, 9, 2, 9], [3, 3, 3, 1], [4, 38, 14]], "fitness": -0.03999999910593033, "mapping_values": [1, 2, 2, 1, 1, 1, 17, 17, 9, 8, 2, 5, 4, 2, 2, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.add(beta, grad)), tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, beta)), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.pow(alpha, tf.math.add(beta, tf.math.add(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3030532061415987, 2.3030929145024452, 2.300312994399075, 2.302549687358981, 2.3027426063140557, 2.303079199435106], "accuracy": [0.09140139818191528, 0.08994849026203156, 0.09325055778026581, 0.08981640636920929, 0.09192973375320435, 0.08598599582910538], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]