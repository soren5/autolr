[{"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 0, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [95, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [1, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [1, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 3, 6, 7, 4], [3, 0, 3, 2, 1, 1, 3, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [47, 25, 61, 71, 34]], "fitness": -0.8134285807609558, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(alpha), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1921394677477712, 1.8277173296115055, 1.3041832388321233, 1.022796674080812, 0.9749963343056863, 0.9321936115754389, 0.8014090029617987, 0.7719274518622415, 0.7451524975482168, 0.687949555188815, 0.6656634076443708, 0.658099387914214, 0.6337835984994644, 0.6427689062338212, 0.604981806544013, 0.593440245501889, 0.5616747919814997, 0.5616058360284834, 0.5367612649247852, 0.5258498422505282, 0.52970775960695, 0.519348045893475, 0.5011796436100714, 0.49068905782973554, 0.4978573745378115, 0.4733319166369206, 0.46007952408594716, 0.46013478440946165, 0.46500669565214664, 0.44607445668503437, 0.43589438519867074], "accuracy": [0.29441288113594055, 0.42742040753364563, 0.5387663245201111, 0.6361114978790283, 0.6384889483451843, 0.6462818384170532, 0.7054550051689148, 0.7073041796684265, 0.7152291536331177, 0.7428345084190369, 0.7481178045272827, 0.7485140562057495, 0.7621186375617981, 0.7577598690986633, 0.7725531458854675, 0.7798177003860474, 0.7898560166358948, 0.7873464822769165, 0.7988376617431641, 0.8010830879211426, 0.7985734939575195, 0.8042530417442322, 0.8090080618858337, 0.8117818236351013, 0.8115176558494568, 0.8210275769233704, 0.8315942287445068, 0.8236692547798157, 0.822348415851593, 0.8370096683502197, 0.8364813327789307], "val_loss": [1.5749762058258057, 1.0074941090175085, 0.8362603187561035, 0.8636113575526646, 0.7327526126589093, 0.6685642514910016, 0.6281448432377407, 0.641809378351484, 0.5739389147077288, 0.5453889199665615, 0.5382445199148995, 0.4870241028921945, 0.6334327799933297, 0.5177984407969883, 0.5032938207898822, 0.4632104975836618, 0.4513536947114127, 0.46419572830200195, 0.4310303671019418, 0.46920486858912874, 0.44287971939359394, 0.4566478729248047, 0.4073248931339809, 0.406538120337895, 0.39984032085963656, 0.391425507409232, 0.4174521906035287, 0.3866457853998457, 0.4051617554255894, 0.393714930330004, 0.4136087042944772], "val_accuracy": [0.5109999775886536, 0.5483333468437195, 0.6886666417121887, 0.6223333477973938, 0.6650000214576721, 0.7106666564941406, 0.7213333249092102, 0.6940000057220459, 0.7236666679382324, 0.749666690826416, 0.7443333268165588, 0.7826666831970215, 0.7329999804496765, 0.765333354473114, 0.777999997138977, 0.7913333177566528, 0.7870000004768372, 0.7960000038146973, 0.8050000071525574, 0.7889999747276306, 0.7979999780654907, 0.7876666784286499, 0.8143333196640015, 0.8263333439826965, 0.8296666741371155, 0.8416666388511658, 0.8149999976158142, 0.8323333263397217, 0.8220000267028809, 0.8306666612625122, 0.8056666851043701]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 0, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [95, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [1, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 3, 6, 7, 4], [3, 0, 3, 2, 1, 1, 3, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [47, 25, 61, 71, 34]], "fitness": -0.8134285807609558, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1921394677477712, 1.8277173296115055, 1.3041832388321233, 1.022796674080812, 0.9749963343056863, 0.9321936115754389, 0.8014090029617987, 0.7719274518622415, 0.7451524975482168, 0.687949555188815, 0.6656634076443708, 0.658099387914214, 0.6337835984994644, 0.6427689062338212, 0.604981806544013, 0.593440245501889, 0.5616747919814997, 0.5616058360284834, 0.5367612649247852, 0.5258498422505282, 0.52970775960695, 0.519348045893475, 0.5011796436100714, 0.49068905782973554, 0.4978573745378115, 0.4733319166369206, 0.46007952408594716, 0.46013478440946165, 0.46500669565214664, 0.44607445668503437, 0.43589438519867074], "accuracy": [0.29441288113594055, 0.42742040753364563, 0.5387663245201111, 0.6361114978790283, 0.6384889483451843, 0.6462818384170532, 0.7054550051689148, 0.7073041796684265, 0.7152291536331177, 0.7428345084190369, 0.7481178045272827, 0.7485140562057495, 0.7621186375617981, 0.7577598690986633, 0.7725531458854675, 0.7798177003860474, 0.7898560166358948, 0.7873464822769165, 0.7988376617431641, 0.8010830879211426, 0.7985734939575195, 0.8042530417442322, 0.8090080618858337, 0.8117818236351013, 0.8115176558494568, 0.8210275769233704, 0.8315942287445068, 0.8236692547798157, 0.822348415851593, 0.8370096683502197, 0.8364813327789307], "val_loss": [1.5749762058258057, 1.0074941090175085, 0.8362603187561035, 0.8636113575526646, 0.7327526126589093, 0.6685642514910016, 0.6281448432377407, 0.641809378351484, 0.5739389147077288, 0.5453889199665615, 0.5382445199148995, 0.4870241028921945, 0.6334327799933297, 0.5177984407969883, 0.5032938207898822, 0.4632104975836618, 0.4513536947114127, 0.46419572830200195, 0.4310303671019418, 0.46920486858912874, 0.44287971939359394, 0.4566478729248047, 0.4073248931339809, 0.406538120337895, 0.39984032085963656, 0.391425507409232, 0.4174521906035287, 0.3866457853998457, 0.4051617554255894, 0.393714930330004, 0.4136087042944772], "val_accuracy": [0.5109999775886536, 0.5483333468437195, 0.6886666417121887, 0.6223333477973938, 0.6650000214576721, 0.7106666564941406, 0.7213333249092102, 0.6940000057220459, 0.7236666679382324, 0.749666690826416, 0.7443333268165588, 0.7826666831970215, 0.7329999804496765, 0.765333354473114, 0.777999997138977, 0.7913333177566528, 0.7870000004768372, 0.7960000038146973, 0.8050000071525574, 0.7889999747276306, 0.7979999780654907, 0.7876666784286499, 0.8143333196640015, 0.8263333439826965, 0.8296666741371155, 0.8416666388511658, 0.8149999976158142, 0.8323333263397217, 0.8220000267028809, 0.8306666612625122, 0.8056666851043701]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 0, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [95, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [1, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [1, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 3, 6, 7, 4], [3, 0, 3, 2, 1, 1, 3, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [47, 25, 61, 71, 34]], "fitness": -0.8134285807609558, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1921394677477712, 1.8277173296115055, 1.3041832388321233, 1.022796674080812, 0.9749963343056863, 0.9321936115754389, 0.8014090029617987, 0.7719274518622415, 0.7451524975482168, 0.687949555188815, 0.6656634076443708, 0.658099387914214, 0.6337835984994644, 0.6427689062338212, 0.604981806544013, 0.593440245501889, 0.5616747919814997, 0.5616058360284834, 0.5367612649247852, 0.5258498422505282, 0.52970775960695, 0.519348045893475, 0.5011796436100714, 0.49068905782973554, 0.4978573745378115, 0.4733319166369206, 0.46007952408594716, 0.46013478440946165, 0.46500669565214664, 0.44607445668503437, 0.43589438519867074], "accuracy": [0.29441288113594055, 0.42742040753364563, 0.5387663245201111, 0.6361114978790283, 0.6384889483451843, 0.6462818384170532, 0.7054550051689148, 0.7073041796684265, 0.7152291536331177, 0.7428345084190369, 0.7481178045272827, 0.7485140562057495, 0.7621186375617981, 0.7577598690986633, 0.7725531458854675, 0.7798177003860474, 0.7898560166358948, 0.7873464822769165, 0.7988376617431641, 0.8010830879211426, 0.7985734939575195, 0.8042530417442322, 0.8090080618858337, 0.8117818236351013, 0.8115176558494568, 0.8210275769233704, 0.8315942287445068, 0.8236692547798157, 0.822348415851593, 0.8370096683502197, 0.8364813327789307], "val_loss": [1.5749762058258057, 1.0074941090175085, 0.8362603187561035, 0.8636113575526646, 0.7327526126589093, 0.6685642514910016, 0.6281448432377407, 0.641809378351484, 0.5739389147077288, 0.5453889199665615, 0.5382445199148995, 0.4870241028921945, 0.6334327799933297, 0.5177984407969883, 0.5032938207898822, 0.4632104975836618, 0.4513536947114127, 0.46419572830200195, 0.4310303671019418, 0.46920486858912874, 0.44287971939359394, 0.4566478729248047, 0.4073248931339809, 0.406538120337895, 0.39984032085963656, 0.391425507409232, 0.4174521906035287, 0.3866457853998457, 0.4051617554255894, 0.393714930330004, 0.4136087042944772], "val_accuracy": [0.5109999775886536, 0.5483333468437195, 0.6886666417121887, 0.6223333477973938, 0.6650000214576721, 0.7106666564941406, 0.7213333249092102, 0.6940000057220459, 0.7236666679382324, 0.749666690826416, 0.7443333268165588, 0.7826666831970215, 0.7329999804496765, 0.765333354473114, 0.777999997138977, 0.7913333177566528, 0.7870000004768372, 0.7960000038146973, 0.8050000071525574, 0.7889999747276306, 0.7979999780654907, 0.7876666784286499, 0.8143333196640015, 0.8263333439826965, 0.8296666741371155, 0.8416666388511658, 0.8149999976158142, 0.8323333263397217, 0.8220000267028809, 0.8306666612625122, 0.8056666851043701]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 0, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [95, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [1, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [1, 4, 3, 3, 0, 3, 1, 0, 0, 0], [23, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 3, 6, 7, 4], [3, 0, 3, 2, 1, 1, 3, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [50, 25, 61, 71, 34]], "fitness": -0.8037142753601074, "mapping_values": [1, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.5927667348549557, 2.3046333699131276, 2.2943482070535386, 2.2346109106965493, 2.304666319889809, 2.2393982731009583, 1.949359635761338, 1.7206645755090135, 1.4164856576711715, 1.0315932876335363, 0.8384663506411385, 0.7687089636561704, 0.7365706891132431, 0.6657438951870076, 0.6700378749364592, 0.6182094703355501, 0.5954510093900458, 0.5830577515324487, 0.5611852710399141, 0.5830199951902593, 0.554127430454489, 0.5430394874792436, 0.5372218627420162, 0.5249943382956365, 0.5147238832974337, 0.5197771994185217, 0.5047239422593465, 0.47485271056078493, 0.49265403085302256, 0.4805691549885369, 0.4756307272611277, 0.4482075873107454, 0.4551405677894922], "accuracy": [0.21595561504364014, 0.1022322028875351, 0.17963281273841858, 0.24422137439250946, 0.09866596013307571, 0.18451987206935883, 0.31264033913612366, 0.38647469878196716, 0.4904239773750305, 0.6347906589508057, 0.6888125538825989, 0.7045304179191589, 0.7232862114906311, 0.748249888420105, 0.7511557340621948, 0.7689869403839111, 0.7718927264213562, 0.7845727205276489, 0.7923656105995178, 0.780610203742981, 0.7972526550292969, 0.7973847389221191, 0.8006868362426758, 0.805177628993988, 0.8145555257797241, 0.8070268034934998, 0.8120459914207458, 0.8227446675300598, 0.8171972036361694, 0.8182538747787476, 0.8231409192085266, 0.8343679904937744, 0.8317263126373291], "val_loss": [1.9769093649727958, 1.9718401091439384, 1.937447956630162, 1.9766144752502441, 1.968649251120431, 1.4665552888597762, 1.8401738575526647, 1.3300413404192244, 1.1615057332175118, 0.6696532964706421, 0.6716812167848859, 0.5631439515522548, 0.5137630871364048, 0.5209090709686279, 0.49071807520730154, 0.48757100105285645, 0.45562344789505005, 0.47065368720463346, 0.4615345426968166, 0.4782935210636684, 0.45338861431394306, 0.48531932490212576, 0.4291234016418457, 0.40843677520751953, 0.43414523771830965, 0.40865633317402433, 0.4009834272520883, 0.38109616722379414, 0.4072666849408831, 0.43806724888937815, 0.406531606401716, 0.3991501586777823, 0.398360618523189], "val_accuracy": [0.09833333641290665, 0.10100000351667404, 0.3216666579246521, 0.10233332961797714, 0.10233332961797714, 0.41499999165534973, 0.1509999930858612, 0.4073333442211151, 0.5730000138282776, 0.687666654586792, 0.6696666479110718, 0.7293333411216736, 0.7693333625793457, 0.7703333497047424, 0.7770000100135803, 0.7796666622161865, 0.7926666736602783, 0.7903333306312561, 0.7883333563804626, 0.784333348274231, 0.7990000247955322, 0.7713333368301392, 0.8116666674613953, 0.8243333101272583, 0.8080000281333923, 0.8270000219345093, 0.8226666450500488, 0.8360000252723694, 0.8176666498184204, 0.8276666402816772, 0.8223333358764648, 0.8323333263397217, 0.8306666612625122]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [0, 0, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [28, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [9, 5, 9, 6, 2, 4, 6, 2, 8, 3, 0, 8, 8, 1, 1, 8, 9, 0], [2, 4, 3, 3, 0, 3, 1, 0, 0, 0], [23, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 3, 6, 7, 4], [3, 0, 3, 2, 1, 1, 3, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [50, 25, 61, 71, 34]], "fitness": -0.8037142753601074, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.5927667348549557, 2.3046333699131276, 2.2943482070535386, 2.2346109106965493, 2.304666319889809, 2.2393982731009583, 1.949359635761338, 1.7206645755090135, 1.4164856576711715, 1.0315932876335363, 0.8384663506411385, 0.7687089636561704, 0.7365706891132431, 0.6657438951870076, 0.6700378749364592, 0.6182094703355501, 0.5954510093900458, 0.5830577515324487, 0.5611852710399141, 0.5830199951902593, 0.554127430454489, 0.5430394874792436, 0.5372218627420162, 0.5249943382956365, 0.5147238832974337, 0.5197771994185217, 0.5047239422593465, 0.47485271056078493, 0.49265403085302256, 0.4805691549885369, 0.4756307272611277, 0.4482075873107454, 0.4551405677894922], "accuracy": [0.21595561504364014, 0.1022322028875351, 0.17963281273841858, 0.24422137439250946, 0.09866596013307571, 0.18451987206935883, 0.31264033913612366, 0.38647469878196716, 0.4904239773750305, 0.6347906589508057, 0.6888125538825989, 0.7045304179191589, 0.7232862114906311, 0.748249888420105, 0.7511557340621948, 0.7689869403839111, 0.7718927264213562, 0.7845727205276489, 0.7923656105995178, 0.780610203742981, 0.7972526550292969, 0.7973847389221191, 0.8006868362426758, 0.805177628993988, 0.8145555257797241, 0.8070268034934998, 0.8120459914207458, 0.8227446675300598, 0.8171972036361694, 0.8182538747787476, 0.8231409192085266, 0.8343679904937744, 0.8317263126373291], "val_loss": [1.9769093649727958, 1.9718401091439384, 1.937447956630162, 1.9766144752502441, 1.968649251120431, 1.4665552888597762, 1.8401738575526647, 1.3300413404192244, 1.1615057332175118, 0.6696532964706421, 0.6716812167848859, 0.5631439515522548, 0.5137630871364048, 0.5209090709686279, 0.49071807520730154, 0.48757100105285645, 0.45562344789505005, 0.47065368720463346, 0.4615345426968166, 0.4782935210636684, 0.45338861431394306, 0.48531932490212576, 0.4291234016418457, 0.40843677520751953, 0.43414523771830965, 0.40865633317402433, 0.4009834272520883, 0.38109616722379414, 0.4072666849408831, 0.43806724888937815, 0.406531606401716, 0.3991501586777823, 0.398360618523189], "val_accuracy": [0.09833333641290665, 0.10100000351667404, 0.3216666579246521, 0.10233332961797714, 0.10233332961797714, 0.41499999165534973, 0.1509999930858612, 0.4073333442211151, 0.5730000138282776, 0.687666654586792, 0.6696666479110718, 0.7293333411216736, 0.7693333625793457, 0.7703333497047424, 0.7770000100135803, 0.7796666622161865, 0.7926666736602783, 0.7903333306312561, 0.7883333563804626, 0.784333348274231, 0.7990000247955322, 0.7713333368301392, 0.8116666674613953, 0.8243333101272583, 0.8080000281333923, 0.8270000219345093, 0.8226666450500488, 0.8360000252723694, 0.8176666498184204, 0.8276666402816772, 0.8223333358764648, 0.8323333263397217, 0.8306666612625122]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [0, 0, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [95, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [1, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [1, 4, 3, 3, 0, 3, 1, 0, 0, 0], [23, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [7, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 3, 6, 7, 4], [3, 0, 3, 2, 1, 1, 3, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [42, 25, 61, 71, 34]], "fitness": -0.7971428632736206, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.021808167175295, 1.4009817739786994, 1.0616587166536784, 0.9150961495157498, 0.8386919517416949, 0.7868695683278396, 0.7415535054218185, 0.7197986148635331, 0.6888419438614554, 0.689557975112581, 0.6599782887876247, 0.6497715701673954, 0.6372073543007191, 0.6112339549517477, 0.604900138150778, 0.5981353204547296, 0.5892813514803442, 0.5733198540054213, 0.572690719201533, 0.5614398535783375, 0.5673255666789283, 0.5393646888335494, 0.5516435295567773, 0.5407443127344314, 0.5220125632168925], "accuracy": [0.33047154545783997, 0.5193501710891724, 0.6273940205574036, 0.6654338836669922, 0.6911900639533997, 0.7033417224884033, 0.7149649858474731, 0.724210798740387, 0.7376832365989685, 0.7375511527061462, 0.752212405204773, 0.7555144429206848, 0.7553823590278625, 0.7658169269561768, 0.7638356685638428, 0.7761194109916687, 0.7708360552787781, 0.7775723338127136, 0.7827235460281372, 0.7861577272415161, 0.7865539789199829, 0.7964601516723633, 0.7980451583862305, 0.7951393723487854, 0.8005547523498535], "val_loss": [1.2252488136291504, 0.9950968197413853, 0.6977927344185966, 0.6232133252280099, 0.6656218767166138, 0.5875682660511562, 0.5444091558456421, 0.5190494401114327, 0.5253511156354632, 0.5031859193529401, 0.48705550602504183, 0.4913661650248936, 0.5467297009059361, 0.49778049332754953, 0.46118487630571636, 0.4768226146697998, 0.45639868293489727, 0.4636120711054121, 0.43030240706035067, 0.4306443844522749, 0.4317935960633414, 0.44387788431985037, 0.4372111814362662, 0.4343046716281346, 0.42870183501924786], "val_accuracy": [0.5136666893959045, 0.5630000233650208, 0.6943333148956299, 0.721666693687439, 0.6853333115577698, 0.7366666793823242, 0.7543333172798157, 0.7756666541099548, 0.7693333625793457, 0.7760000228881836, 0.7879999876022339, 0.7860000133514404, 0.7576666474342346, 0.7646666765213013, 0.8073333501815796, 0.7786666750907898, 0.8083333373069763, 0.7896666526794434, 0.8199999928474426, 0.8240000009536743, 0.8186666369438171, 0.8103333115577698, 0.8136666417121887, 0.8050000071525574, 0.8173333406448364]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [0, 0, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [95, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [1, 5, 9, 6, 2, 4, 6, 4, 8, 3, 0, 8, 0, 1, 1, 8, 9, 0], [1, 4, 3, 3, 0, 3, 1, 0, 0, 0], [30, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 3, 6, 7, 4], [3, 0, 3, 2, 1, 1, 3, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [55, 25, 61, 71, 34]], "fitness": -0.332571417093277, "mapping_values": [1, 4, 4, 2, 2, 2, 25, 25, 17, 8, 4, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.square(tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.sqrt(tf.math.multiply(grad, tf.math.add(beta, grad))))))), tf.math.negative(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.sqrt(grad))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.subtract(alpha, tf.math.sqrt(tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.289573863859206, 2.337662258609222, 2.2599992510224096, 2.29199356797223, 2.636363854261516, 2.3058841098427156, 2.3037815742394425, 2.303216884511258, 2.303022470141698], "accuracy": [0.25122177600860596, 0.10276053100824356, 0.13261127471923828, 0.14991414546966553, 0.17540615797042847, 0.09985470771789551, 0.1026284471154213, 0.09893012791872025, 0.09866596013307571], "val_loss": [2.1624201365879605, 1.972587721688407, 1.9768765994480677, 1.8004490988595145, 1.9776883806501115, 1.9744929586138045, 1.973924228123256, 1.9737067903791154, 1.973722185407366], "val_accuracy": [0.09966666996479034, 0.1313333362340927, 0.10466666519641876, 0.27033331990242004, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 0, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [95, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [1, 5, 9, 6, 2, 1, 6, 4, 1, 3, 9, 8, 8, 1, 6, 8, 9, 0], [1, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 3, 6, 7, 4], [3, 0, 3, 2, 1, 1, 3, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [47, 25, 61, 71, 34]], "fitness": -0.1062857136130333, "mapping_values": [1, 1, 1, 0, 1, 0, 18, 18, 11, 7, 3, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.square(tf.math.add(beta, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, tf.math.subtract(grad, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.pow(tf.math.subtract(grad, tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), tf.math.multiply(grad, tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))))))), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.9515574684767847, 2.3366731735441615, 2.4848293582950016, 2.303675824058149, 2.30348159614697, 2.302939922896831, 2.303058237557744, 2.3029257312442617, 2.3031764130912924, 2.3029004479159987, 2.3030340910241307], "accuracy": [0.15863162279129028, 0.17751948535442352, 0.09853387624025345, 0.09496764093637466, 0.09496764093637466, 0.09259014576673508, 0.09668471664190292, 0.09813763201236725, 0.0944393053650856, 0.09893012791872025, 0.09285431355237961], "val_loss": [1.9747611454554967, 2.805801119123186, 1.9749881199428014, 1.9740432330540247, 1.9737110137939453, 1.9736090387616838, 1.973634924207415, 1.973679746900286, 1.9738689831324987, 1.9738280432564872, 1.9737447329929896], "val_accuracy": [0.10000000149011612, 0.09700000286102295, 0.09833333641290665, 0.09833333641290665, 0.09733333438634872, 0.10400000214576721, 0.10400000214576721, 0.0976666659116745, 0.0976666659116745, 0.09733333438634872, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 0, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [95, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [1, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [1, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 3, 6, 7, 4], [0, 0, 3, 2, 1, 1, 3, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [84, 25, 61, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302710252431059, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [3, 0, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [95, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [1, 5, 9, 2, 2, 4, 0, 4, 3, 3, 6, 0, 2, 1, 8, 8, 9, 0], [3, 4, 3, 3, 0, 3, 2, 0, 0, 0], [71, 32, 50, 35, 66, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [5, 8, 3, 6, 7, 4], [3, 2, 3, 2, 1, 1, 3, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [50, 25, 61, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 26, 26, 16, 10, 5, 1, 1, 0, 1, 0, 3, 2, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.square(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.negative(grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), grad)))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.subtract(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))))))), tf.math.sqrt(tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.sqrt(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 0, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [95, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [1, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [2, 0, 3, 3, 0, 3, 3, 0, 0, 0], [53, 32, 50, 35, 74, 78], [1, 0, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [7, 3], [23], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 3, 3, 6, 7, 4, 5, 8], [0, 0, 3, 2, 1, 1, 3, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [50, 25, 61, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 14, 8, 6, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(tf.math.pow(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), sigma), tf.math.square(beta)), alpha)), tf.math.sqrt(alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 0, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [95, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [1, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 1, 2, 1, 0, 0, 0], [30, 32, 12, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [7, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 6, 3, 6, 7, 4], [0, 0, 0, 2, 1, 1, 3, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [50, 25, 61, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 0, 25, 25, 17, 8, 4, 1, 1, 0, 1, 0, 5, 2, 3, 3], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.square(tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.sqrt(tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.sqrt(alpha)))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.math.subtract(alpha, tf.math.sqrt(tf.math.add(beta, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)))))))), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.divide_no_nan(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302710252431059, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [3, 0, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [95, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [1, 5, 9, 2, 6, 4, 4, 6, 8, 3, 0, 8, 8, 1, 1, 8, 9, 0], [2, 0, 3, 3, 0, 3, 3, 0, 0, 0], [38, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 3, 2, 6, 7, 4, 0, 4, 6, 3, 7, 0, 7, 0, 6, 8, 3, 7, 6, 1, 5, 3, 2], [3, 0, 2, 2, 1, 1, 3, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [50, 25, 61, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 18, 18, 11, 7, 3, 1, 1, 0, 1, 0, 41, 23, 18, 3], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.square(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(beta, tf.math.pow(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))))))), tf.math.multiply(grad, tf.math.add(beta, tf.math.negative(grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(sigma, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(tf.math.pow(beta, tf.math.negative(beta)), alpha), tf.math.pow(alpha, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.math.negative(sigma), tf.math.add(alpha, tf.math.negative(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(sigma, tf.math.sqrt(beta))), tf.math.multiply(beta, tf.math.add(tf.math.divide_no_nan(sigma, tf.math.subtract(tf.math.square(sigma), tf.math.multiply(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), tf.math.add(sigma, beta))))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [3, 0, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [95, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [1, 8, 9, 4, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [2, 0, 3, 3, 0, 3, 3, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [0, 3], [21], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [1, 6, 3, 6, 7, 4], [3, 0, 3, 2, 1, 1, 3, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [42, 25, 61, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 4, 4, 3, 1, 1, 1, 1, 0, 1, 1, 5, 2, 3, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.divide_no_nan(sigma, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [4004.325212621985, 71827.368391725, 329355.43314126274, 915745.879523841, 1950169.7902522783, 3599738.7333245277], "accuracy": [0.09430722147226334, 0.09589222073554993, 0.0952318087220192, 0.09853387624025345, 0.10566636174917221, 0.09879804402589798], "val_loss": [14594.826450892857, 113722.63392857143, 380773.97321428574, 899130.8928571428, 1752177.642857143, 3023296.5], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 0, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [95, 52, 59, 56, 8, 79, 86, 52, 44], [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [6, 8, 9, 1, 2, 4, 9, 4, 3, 3, 4, 5, 8, 1, 1, 8, 9, 0], [1, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 83, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 3, 3, 6, 7, 4, 5], [3, 3, 3, 2, 1, 1, 3, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [58, 25, 61, 71, 34]], "fitness": -0.05657142773270607, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 13, 7, 6, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.multiply(sigma, tf.math.divide_no_nan(tf.math.add(sigma, beta), tf.math.pow(alpha, tf.math.square(alpha))))))", "other_info": {"loss": [2.3032622706101256, 2.3026183899824155, 2.300772640289742, 2.3023365012816215, 2.3018572026586424, 2.3025091095308285, 2.3022864095413014, 2.3013135565270395, 2.3032672845487503, 2.299699038688328, 2.3017561472229056, 2.3025649563826276, 2.302014696158753, 2.3005978389108153, 2.301538817461503, 2.2996808081538593, 2.30096543690217, 2.300191273668486, 2.3005575124755464, 2.3009220365016154, 2.3021150623188515, 2.299732038798727, 2.302148396643539, 2.3013816839353427, 2.301224594055748, 2.2992849762822973, 2.3010622096839537, 2.299169810944702, 2.2998124771838677, 2.299775492891486, 2.3005757889239353, 2.300684237917889, 2.2985974440186046, 2.2991130061358067, 2.300982699685833, 2.299602967873068, 2.300352735699538, 2.2986202998609118, 2.299250883811091, 2.2987111219404364, 2.30092230049091, 2.299240217768143, 2.300273703168396, 2.3009506316154136, 2.2984610653162916, 2.2994077231795513, 2.299862795155739, 2.2995002625908407, 2.2969011931040852, 2.299827387997062, 2.297633977787228, 2.299708710779934, 2.2978257724181015, 2.298200955055236, 2.298288715167556, 2.2990021832851197, 2.3001483789508717, 2.299164337426003, 2.2976955974169724, 2.298083980211634, 2.2981081422703253, 2.2983510620511205, 2.2973066978545282, 2.2970694707070107, 2.2986042052999447, 2.2977586894097692, 2.2976272852193125, 2.2988552444126973, 2.2968558702392032, 2.2967074014381286, 2.2976291705557164, 2.2982432082376114, 2.299096657442237, 2.2972375547975643, 2.2976079512391943, 2.296810709490138, 2.2968636361473447, 2.296289001835682, 2.2970602170367047, 2.2969356202619453, 2.2983082545321647, 2.2973140417828835, 2.2978762768483545, 2.2976174869431545, 2.296205042879485, 2.2974364246438443, 2.2963855878126824, 2.2959336402819, 2.2983166331927443, 2.297895978612198, 2.2960313087000337, 2.2963869643170427, 2.2968028231603026, 2.2963382030726898, 2.2962267240749266, 2.295754092039764, 2.296377486147192, 2.2968977929232315, 2.297423973531928, 2.295196086282444], "accuracy": [0.09140139818191528, 0.09272222965955734, 0.09377889335155487, 0.08770307898521423, 0.0940430611371994, 0.09311848133802414, 0.09338264167308807, 0.08928807079792023, 0.09074098616838455, 0.09734513610601425, 0.09126931428909302, 0.08968432247638702, 0.09166556596755981, 0.09351472556591034, 0.09325055778026581, 0.09985470771789551, 0.09681680053472519, 0.09549596905708313, 0.09338264167308807, 0.09509972482919693, 0.0878351628780365, 0.09179764986038208, 0.09351472556591034, 0.09615638852119446, 0.09060890227556229, 0.09417514503002167, 0.09285431355237961, 0.09919429570436478, 0.09311848133802414, 0.0948355570435524, 0.09879804402589798, 0.09721305221319199, 0.0944393053650856, 0.09945846349000931, 0.09998679161071777, 0.10210011899471283, 0.09615638852119446, 0.1014397069811821, 0.09694888442754745, 0.09668471664190292, 0.09153348207473755, 0.09998679161071777, 0.09694888442754745, 0.09615638852119446, 0.10276053100824356, 0.09760929644107819, 0.09615638852119446, 0.09787346422672272, 0.10962884873151779, 0.09417514503002167, 0.09959053993225098, 0.09589222073554993, 0.10368511080741882, 0.10487385839223862, 0.1014397069811821, 0.10236428678035736, 0.1014397069811821, 0.09721305221319199, 0.10342095047235489, 0.1022322028875351, 0.10236428678035736, 0.1010434553027153, 0.10315678268671036, 0.10130762308835983, 0.10196803510189056, 0.10342095047235489, 0.09760929644107819, 0.10077928751707077, 0.10381719470024109, 0.10249637067317963, 0.10196803510189056, 0.10276053100824356, 0.09866596013307571, 0.10408136248588562, 0.10315678268671036, 0.09893012791872025, 0.10619468986988068, 0.10698718577623367, 0.09959053993225098, 0.1014397069811821, 0.09694888442754745, 0.10315678268671036, 0.1010434553027153, 0.1014397069811821, 0.10870426893234253, 0.10962884873151779, 0.10817593336105347, 0.10698718577623367, 0.10553427785634995, 0.10210011899471283, 0.10579843819141388, 0.10434553027153015, 0.10936468094587326, 0.1072513535618782, 0.10553427785634995, 0.10751552134752274, 0.10408136248588562, 0.10659094154834747, 0.10540219396352768, 0.10910051316022873], "val_loss": [1.9704976081848145, 1.9704160690307617, 1.9703355516706194, 1.9702482223510742, 1.9701689311436243, 1.9700896399361747, 1.9700103487287248, 1.9699303082057409, 1.9698540823800224, 1.9697727475847517, 1.9696979522705078, 1.9696217264447893, 1.9695484297616142, 1.9694774491446358, 1.9694068091256278, 1.9693348067147392, 1.9692658015659876, 1.969198158809117, 1.9691313334873743, 1.9690538815089635, 1.9689791543143136, 1.9689084461757116, 1.9688400541033064, 1.9687632833208357, 1.968691008431571, 1.9686215264456612, 1.9685546330043249, 1.968489101954869, 1.9684276580810547, 1.9683667591639928, 1.9683076994759696, 1.968247958592006, 1.968189103262765, 1.9681309291294642, 1.9680688721793038, 1.9679969378880091, 1.9679348809378487, 1.9678726877485002, 1.9678174427577428, 1.9677645138331823, 1.9677043642316545, 1.9676457132611955, 1.9675895827157157, 1.9675286156790597, 1.9674617222377233, 1.9673968723842077, 1.9673408099583216, 1.9672897883823939, 1.9672324998038155, 1.9671777997698103, 1.9671248708452498, 1.9670713969639368, 1.9670228276933943, 1.9669763701302665, 1.9669181959969657, 1.9668656076703752, 1.966817855834961, 1.966763700757708, 1.966712474822998, 1.9666517121451241, 1.9666037559509277, 1.966553006853376, 1.966500895363944, 1.966454369681222, 1.9664060047694616, 1.9663547788347517, 1.9663026673453194, 1.9662541661943709, 1.9662089347839355, 1.9661613191877092, 1.9661124093191964, 1.96606411252703, 1.9660119329180037, 1.9659687450953893, 1.9659209932599748, 1.9658681324550085, 1.9658207212175642, 1.9657714026314872, 1.9657209260123116, 1.9656716755458288, 1.9656175204685755, 1.9655701092311315, 1.9655186108180456, 1.9654652050563268, 1.965414115360805, 1.9653702463422502, 1.965315818786621, 1.965268611907959, 1.965219497680664, 1.9651728357587541, 1.9651201793125697, 1.9650699751717704, 1.9650229045322962, 1.964980125427246, 1.9649361882890974, 1.964890480041504, 1.9648474284580775, 1.9647962025233678, 1.9647489275251115, 1.9647057397024972], "val_accuracy": [0.039000000804662704, 0.03933333232998848, 0.03999999910593033, 0.041333332657814026, 0.0416666679084301, 0.0430000014603138, 0.0430000014603138, 0.0430000014603138, 0.04399999976158142, 0.04399999976158142, 0.04500000178813934, 0.04533333331346512, 0.045666664838790894, 0.045666664838790894, 0.045666664838790894, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04800000041723251, 0.04833333194255829, 0.04933333396911621, 0.05000000074505806, 0.050333332270383835, 0.05166666582226753, 0.052000001072883606, 0.05299999937415123, 0.05299999937415123, 0.0533333346247673, 0.05400000140070915, 0.05433333292603493, 0.054666668176651, 0.054666668176651, 0.054999999701976776, 0.054999999701976776, 0.05533333495259285, 0.0560000017285347, 0.0560000017285347, 0.05666666850447655, 0.05666666850447655, 0.05766666680574417, 0.059333331882953644, 0.059333331882953644, 0.059333331882953644, 0.059333331882953644, 0.05999999865889549, 0.060333333909511566, 0.06066666543483734, 0.06066666543483734, 0.06066666543483734, 0.061000000685453415, 0.06199999898672104, 0.06233333423733711, 0.06233333423733711, 0.06266666948795319, 0.06333333253860474, 0.06333333253860474, 0.06333333253860474, 0.06366666406393051, 0.06333333253860474, 0.06366666406393051, 0.06400000303983688, 0.06400000303983688, 0.06466666609048843, 0.06466666609048843, 0.06466666609048843, 0.06499999761581421, 0.06566666811704636, 0.06599999964237213, 0.06599999964237213, 0.0663333311676979, 0.06666667014360428, 0.06700000166893005, 0.06700000166893005, 0.06833333522081375, 0.0689999982714653, 0.06966666877269745, 0.07000000029802322, 0.070333331823349, 0.070333331823349, 0.06966666877269745, 0.07066666334867477, 0.07066666334867477, 0.07100000232458115, 0.07100000232458115, 0.0716666653752327, 0.07266666740179062, 0.0729999989271164, 0.07366666942834854, 0.07433333247900009, 0.07500000298023224, 0.07566666603088379, 0.07599999755620956, 0.07633333653211594, 0.07666666805744171, 0.07733333110809326, 0.07699999958276749, 0.07800000160932541, 0.07966666668653488, 0.0806666687130928, 0.08100000023841858]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [3, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 0, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [95, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [1, 5, 9, 6, 2, 4, 6, 4, 3, 3, 9, 8, 8, 1, 1, 8, 9, 0], [1, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 3, 6, 7, 4], [3, 0, 3, 2, 1, 1, 3, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [6, 25, 61, 71, 34]], "fitness": -0.04600000008940697, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.subtract(alpha, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(sigma, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.950516525843455, 2.36067348429713, 2.361747985786183, 2.3035530745156483, 2.303194019064187, 2.3031262143444566, 2.303127534668821, 2.302975166396631, 2.3030759608662126, 2.3029493419580205, 2.303031062342944], "accuracy": [0.16021661460399628, 0.1904636174440384, 0.09985470771789551, 0.09576013684272766, 0.09576013684272766, 0.09589222073554993, 0.09826971590518951, 0.09893012791872025, 0.09113723784685135, 0.1002509593963623, 0.09972262382507324], "val_loss": [1.9741714341299874, 2.278106893811907, 1.9745969091142928, 1.9739721843174525, 1.9736762728009904, 1.9736483437674386, 1.9736614227294922, 1.9736894880022322, 1.9737989561898368, 1.9737954139709473, 1.9737514087132044], "val_accuracy": [0.10000000149011612, 0.09733333438634872, 0.10233332961797714, 0.09833333641290665, 0.09733333438634872, 0.10400000214576721, 0.10400000214576721, 0.0976666659116745, 0.0976666659116745, 0.09733333438634872, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 0, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [95, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [1, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [1, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [5, 3], [], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 3, 6, 7, 4], [2, 0, 3, 2, 1, 1, 3, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [84, 25, 61, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(alpha)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3033008600002454, 2.3027476788889762, 2.300987339668491, 2.3026485278417153, 2.30224245370198, 2.302980749283673], "accuracy": [0.09126931428909302, 0.09245806187391281, 0.09338264167308807, 0.08677849918603897, 0.09311848133802414, 0.09192973375320435], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [0, 0, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [95, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [1, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [1, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [1, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 3, 6, 7, 4], [3, 0, 3, 2, 1, 1, 3, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [50, 25, 61, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 2, 2, 1, 1, 1, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.subtract(alpha, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3033008600002454, 2.3027476788889762, 2.300987339668491, 2.3026485278417153, 2.30224245370198, 2.302980749283673], "accuracy": [0.09126931428909302, 0.09245806187391281, 0.09338264167308807, 0.08677849918603897, 0.09311848133802414, 0.09192973375320435], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 0, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [95, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [1, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [1, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 3, 6, 7, 4], [1, 1, 3, 2, 1, 1, 3, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [47, 25, 61, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(alpha), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3033008600002454, 2.3027476788889762, 2.300987339668491, 2.3026485278417153, 2.30224245370198, 2.302980749283673], "accuracy": [0.09126931428909302, 0.09245806187391281, 0.09338264167308807, 0.08677849918603897, 0.09311848133802414, 0.09192973375320435], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 0, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [95, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [1, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [2, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0], [0, 3, 3, 6, 7, 4, 8, 3, 1, 9, 9], [0, 0, 3, 2, 1, 1, 3, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [47, 25, 61, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 17, 11, 6, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(alpha)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(sigma, beta), tf.math.pow(alpha, tf.math.sqrt(tf.math.multiply(tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))))))", "other_info": {"loss": [2.3033008600002454, 2.3027476788889762, 2.300987339668491, 2.3026485278417153, 2.30224245370198, 2.302980749283673], "accuracy": [0.09126931428909302, 0.09245806187391281, 0.09338264167308807, 0.08677849918603897, 0.09311848133802414, 0.09192973375320435], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]