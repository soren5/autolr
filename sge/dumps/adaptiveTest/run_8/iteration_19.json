[{"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [3, 2, 2, 3], [44, 57], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 6, 6, 6, 5, 2, 2, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 1, 0, 1, 1, 3, 0, 0], [90, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 3, 3, 6, 9], [3, 3, 3, 1], [45, 38]], "fitness": -0.8011428713798523, "mapping_values": [1, 3, 3, 1, 2, 0, 18, 18, 9, 9, 2, 1, 1, 0, 1, 0, 8, 5, 3, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(grad, grad), tf.math.add(beta, grad))), tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(alpha, tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, grad)))))), tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(sigma, tf.math.divide_no_nan(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), sigma)), sigma))", "other_info": {"loss": [2.028142278913368, 1.583370062511642, 1.047564455515295, 0.891732273816968, 0.8178315127310012, 0.7309532821249292, 0.7310794237472157, 0.6969860045586469, 0.651755467067069, 0.6320360862835602, 0.6747967021308791, 0.6180605005594434, 0.5939749273027585, 0.5810432398024803, 0.5602236395703488, 0.5506499210967206, 0.5571348276183653, 0.5249704968471096, 0.5119003078775667, 0.506514827171573, 0.4996293593887419, 0.4978437776287486, 0.4825949504264924, 0.47046214669230374, 0.49210601749830807, 0.4591912462128435, 0.45167836323705224, 0.4608632745586602, 0.42588744783414084, 0.4739817992618386, 0.42563843464161727, 0.41922310196633794, 0.41070060737223407, 0.4097216601117318, 0.40109205160945904, 0.4145187066727468, 0.39574385857648225, 0.4007758874155354, 0.38604679680881465, 0.37909003090801774, 0.3648648809928463, 0.3640423774672002, 0.3605580424486197, 0.37971999601224443, 0.3571271759494421, 0.353557555261557, 0.3604150484849307, 0.3434535646876324, 0.34569322792861157, 0.35586195593307896, 0.32288750650671416, 0.3279645637537841, 0.3203297549975059, 0.3216682065235484, 0.3147945729433789, 0.32525859418688136, 0.3014155912156811, 0.3109761262889457, 0.2915222474163896], "accuracy": [0.3179236650466919, 0.450931191444397, 0.6115440726280212, 0.6716417670249939, 0.6926429867744446, 0.724739134311676, 0.719852089881897, 0.7374191284179688, 0.7543256878852844, 0.7544577717781067, 0.7481178045272827, 0.7605336308479309, 0.7732135653495789, 0.7737419009208679, 0.7938185334205627, 0.7884030938148499, 0.7878747582435608, 0.8057059645652771, 0.8070268034934998, 0.8121780753135681, 0.8166688680648804, 0.8144234418869019, 0.8216879963874817, 0.8261788487434387, 0.8162726163864136, 0.8302733898162842, 0.8322546482086182, 0.8215559124946594, 0.8426892161369324, 0.8169330358505249, 0.8418967127799988, 0.8445383906364441, 0.8504821062088013, 0.844010055065155, 0.8536521196365356, 0.8477083444595337, 0.8511425256729126, 0.8485008478164673, 0.8598600029945374, 0.8569541573524475, 0.8626337051391602, 0.8640866279602051, 0.8664641380310059, 0.8574824929237366, 0.8647470474243164, 0.8685774803161621, 0.8702945709228516, 0.8708229064941406, 0.8713511824607849, 0.868049144744873, 0.8836349248886108, 0.8735966086387634, 0.8823140859603882, 0.8833707571029663, 0.8823140859603882, 0.8767666220664978, 0.8906353116035461, 0.8833707571029663, 0.8918240666389465], "val_loss": [1.8453890255519323, 0.9683574948992048, 0.7391755751201085, 0.6086540733064923, 0.5909204483032227, 0.553694316319057, 0.558706419808524, 0.5325348206928798, 0.5047355890274048, 0.5151451826095581, 0.4981232370649065, 0.4988388163702829, 0.5071478060313633, 0.4637725864137922, 0.4623796599251883, 0.4317927786282131, 0.4476120301655361, 0.45511177607945036, 0.4195618118558611, 0.42149522474833895, 0.40610469239098684, 0.40488414253507343, 0.4200666546821594, 0.43088351828711374, 0.38929344926561626, 0.41250130108424593, 0.4148646422794887, 0.3766036629676819, 0.38505285126822336, 0.4037870594433376, 0.36335510866982595, 0.36002727917262484, 0.3673736367906843, 0.37063030685697285, 0.3606691530772618, 0.370700478553772, 0.3739411405154637, 0.37224450281688143, 0.3503673417227609, 0.3501598409243992, 0.3598719835281372, 0.34220760209219797, 0.354369444506509, 0.3461145418030875, 0.3541045103754316, 0.35336307116917204, 0.3247221452849252, 0.33233743054526194, 0.35959345953805105, 0.32481569051742554, 0.34751937219074797, 0.36067175013678415, 0.3358904719352722, 0.3221818804740906, 0.32402961594717844, 0.3346349596977234, 0.3193383387156895, 0.3289162686892918, 0.33328876325062345], "val_accuracy": [0.2746666669845581, 0.621666669845581, 0.6583333611488342, 0.734666645526886, 0.749666690826416, 0.753333330154419, 0.7456666827201843, 0.7513333559036255, 0.7776666879653931, 0.7666666507720947, 0.765333354473114, 0.7896666526794434, 0.7616666555404663, 0.8016666769981384, 0.8083333373069763, 0.8169999718666077, 0.8026666641235352, 0.793666660785675, 0.8216666579246521, 0.8303333520889282, 0.8190000057220459, 0.8289999961853027, 0.8163333535194397, 0.8036666512489319, 0.8363333344459534, 0.812333345413208, 0.8240000009536743, 0.8373333215713501, 0.8360000252723694, 0.8303333520889282, 0.8479999899864197, 0.8476666808128357, 0.8463333249092102, 0.8399999737739563, 0.8489999771118164, 0.8456666469573975, 0.8370000123977661, 0.8343333601951599, 0.8473333120346069, 0.859000027179718, 0.8539999723434448, 0.8586666584014893, 0.847000002861023, 0.8619999885559082, 0.8543333411216736, 0.8523333072662354, 0.8663333058357239, 0.8600000143051147, 0.8489999771118164, 0.871999979019165, 0.8633333444595337, 0.8486666679382324, 0.8656666874885559, 0.8726666569709778, 0.8679999709129333, 0.8659999966621399, 0.8703333139419556, 0.8636666536331177, 0.8573333621025085]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [3, 2, 2, 3], [44, 57], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [4, 6, 6, 6, 5, 2, 2, 4, 5, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 1, 0, 1, 1, 0, 0, 0], [42, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 3, 3, 6, 9], [3, 1, 3, 1], [45, 38]], "fitness": -0.7960000038146973, "mapping_values": [1, 3, 3, 1, 2, 0, 14, 14, 7, 7, 1, 1, 1, 0, 1, 0, 8, 5, 3, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(grad, grad)), grad)), tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha)), alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(sigma, tf.math.divide_no_nan(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), alpha)), sigma))", "other_info": {"loss": [2.101381914474866, 1.3759350102449437, 1.1071156450880517, 0.9455545714990794, 0.8771153081756116, 0.782720106412643, 0.7645481137583174, 0.7419468138227688, 0.7094292053142165, 0.6973605706722918, 0.6724693063401024, 0.6842081977029628, 0.6627894053763371, 0.6417075647591064, 0.6324491600759781, 0.6095526029468133, 0.5987748708612868, 0.6087954286822963, 0.5887795334573372, 0.5849316953085417, 0.5818768960373701, 0.5707082328007851, 0.5688077969920161, 0.5681979336506813], "accuracy": [0.3140932619571686, 0.518161416053772, 0.5923920273780823, 0.6572447419166565, 0.681547999382019, 0.7099458575248718, 0.7185312509536743, 0.7215691208839417, 0.7331924438476562, 0.7327961921691895, 0.7445515990257263, 0.7457403540611267, 0.752212405204773, 0.7532690763473511, 0.7640998363494873, 0.767401933670044, 0.780610203742981, 0.7725531458854675, 0.7784969210624695, 0.7828556299209595, 0.7844406366348267, 0.7840443849563599, 0.7866860628128052, 0.7836481332778931], "val_loss": [1.2244318553379603, 0.9081415789467948, 0.7399365561349052, 0.684968216078622, 0.6107546431677682, 0.604440416608538, 0.5554323026112148, 0.5902814524514335, 0.5569402830941337, 0.5098249741962978, 0.5690262828554425, 0.49689413819994244, 0.5251801524843488, 0.48109512669699533, 0.5025277308055333, 0.46758757318769184, 0.48497828415461947, 0.4828031233378819, 0.4429489629609244, 0.4944899763379778, 0.4469412735530308, 0.44780720131737844, 0.4682666233607701, 0.43485374110085623], "val_accuracy": [0.581333339214325, 0.6499999761581421, 0.6696666479110718, 0.7153333425521851, 0.7239999771118164, 0.7176666855812073, 0.7559999823570251, 0.7283333539962769, 0.7473333477973938, 0.7739999890327454, 0.7223333120346069, 0.7870000004768372, 0.7646666765213013, 0.7876666784286499, 0.7803333401679993, 0.8080000281333923, 0.7946666479110718, 0.7789999842643738, 0.8199999928474426, 0.7716666460037231, 0.7993333339691162, 0.8149999976158142, 0.7883333563804626, 0.8083333373069763]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [3, 2, 2, 3], [44, 57], [1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [2, 6, 6, 6, 5, 2, 2, 4, 5, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 1, 0, 1, 1, 3, 0, 0], [42, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 3, 3, 6, 9], [3, 1, 3, 1], [45, 38]], "fitness": -0.7960000038146973, "mapping_values": [1, 3, 3, 1, 2, 0, 19, 19, 10, 9, 2, 1, 1, 0, 1, 0, 8, 5, 3, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(grad, grad)), tf.math.square(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), alpha)))))), tf.math.square(tf.math.add(beta, alpha)))), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(sigma, tf.math.divide_no_nan(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), alpha)), sigma))", "other_info": {"loss": [2.101381914474866, 1.3759350102449437, 1.1071156450880517, 0.9455545714990794, 0.8771153081756116, 0.782720106412643, 0.7645481137583174, 0.7419468138227688, 0.7094292053142165, 0.6973605706722918, 0.6724693063401024, 0.6842081977029628, 0.6627894053763371, 0.6417075647591064, 0.6324491600759781, 0.6095526029468133, 0.5987748708612868, 0.6087954286822963, 0.5887795334573372, 0.5849316953085417, 0.5818768960373701, 0.5707082328007851, 0.5688077969920161, 0.5681979336506813], "accuracy": [0.3140932619571686, 0.518161416053772, 0.5923920273780823, 0.6572447419166565, 0.681547999382019, 0.7099458575248718, 0.7185312509536743, 0.7215691208839417, 0.7331924438476562, 0.7327961921691895, 0.7445515990257263, 0.7457403540611267, 0.752212405204773, 0.7532690763473511, 0.7640998363494873, 0.767401933670044, 0.780610203742981, 0.7725531458854675, 0.7784969210624695, 0.7828556299209595, 0.7844406366348267, 0.7840443849563599, 0.7866860628128052, 0.7836481332778931], "val_loss": [1.2244318553379603, 0.9081415789467948, 0.7399365561349052, 0.684968216078622, 0.6107546431677682, 0.604440416608538, 0.5554323026112148, 0.5902814524514335, 0.5569402830941337, 0.5098249741962978, 0.5690262828554425, 0.49689413819994244, 0.5251801524843488, 0.48109512669699533, 0.5025277308055333, 0.46758757318769184, 0.48497828415461947, 0.4828031233378819, 0.4429489629609244, 0.4944899763379778, 0.4469412735530308, 0.44780720131737844, 0.4682666233607701, 0.43485374110085623], "val_accuracy": [0.581333339214325, 0.6499999761581421, 0.6696666479110718, 0.7153333425521851, 0.7239999771118164, 0.7176666855812073, 0.7559999823570251, 0.7283333539962769, 0.7473333477973938, 0.7739999890327454, 0.7223333120346069, 0.7870000004768372, 0.7646666765213013, 0.7876666784286499, 0.7803333401679993, 0.8080000281333923, 0.7946666479110718, 0.7789999842643738, 0.8199999928474426, 0.7716666460037231, 0.7993333339691162, 0.8149999976158142, 0.7883333563804626, 0.8083333373069763]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [3, 2, 2, 3], [44, 57], [1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], [4, 6, 6, 6, 5, 2, 9, 4, 5, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 3, 0, 1, 1, 0, 0, 0], [42, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 3, 3, 2, 9], [3, 1, 0, 1], [45, 38]], "fitness": -0.7748571634292603, "mapping_values": [1, 3, 3, 1, 2, 0, 17, 17, 10, 7, 2, 1, 1, 0, 1, 0, 8, 5, 3, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.square(grad), tf.math.add(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), grad))), tf.math.add(beta, tf.math.square(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))))), tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(sigma, tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), alpha)), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.279692484355952, 2.215469176034571, 2.1085819621458346, 1.9005102293287617, 1.6331566847735832, 1.3918052310594682, 1.244689800546878, 1.1462197885096364, 1.0744503529442457, 1.0158420492865547, 0.9633792759389327, 0.9337384307924562, 0.9160869208624208, 0.8910072094508292, 0.8661180897364291, 0.8481009353846292, 0.8295578007543123, 0.8193613154194406, 0.8014606789527962, 0.8011559195301835, 0.7864489049849147, 0.7717818485164781, 0.7674965081418337, 0.7493686649494199, 0.752576359936023, 0.7405367549526032, 0.7319607185712816, 0.7286259041816929, 0.716697347697927, 0.7106502062026394, 0.7131236950482958, 0.6968426229836934, 0.7057062430058048, 0.6941107576155723, 0.6951335165337202, 0.6836083425176205, 0.6741635964578405, 0.6750051610190493, 0.6723283504403703, 0.6664398355632647, 0.6618874654589139, 0.6644049153084202], "accuracy": [0.14951789379119873, 0.2847708463668823, 0.3617751896381378, 0.442609965801239, 0.49332982301712036, 0.5448421835899353, 0.5741645693778992, 0.6044115424156189, 0.6292431354522705, 0.64231938123703, 0.6597543358802795, 0.6717738509178162, 0.6740192770957947, 0.6814159154891968, 0.6890767216682434, 0.6977941989898682, 0.7020208835601807, 0.7014925479888916, 0.7124554514884949, 0.7121912837028503, 0.7172104120254517, 0.7219653725624084, 0.7164179086685181, 0.7187954187393188, 0.7280412316322327, 0.7289658188819885, 0.7338528633117676, 0.7265883088111877, 0.7354378700256348, 0.7347774505615234, 0.7391361594200134, 0.7445515990257263, 0.7453441023826599, 0.7420420050621033, 0.7450799345970154, 0.7475894689559937, 0.7547219395637512, 0.750231146812439, 0.7523444890975952, 0.7553823590278625, 0.7578919529914856, 0.7537974119186401], "val_loss": [1.9180034228733607, 1.8377884456089564, 1.6853217056819372, 1.4242888518742152, 1.1458183356693812, 0.9561543464660645, 0.8416461774281093, 0.7752780573708671, 0.7274068253380912, 0.6921507120132446, 0.6831038168498448, 0.6421690838677543, 0.626289861542838, 0.614880016871861, 0.6005665234157017, 0.5866272790091378, 0.5874346324375698, 0.5746728181838989, 0.5627376522336688, 0.5696022169930595, 0.5498503787176949, 0.5413000753947667, 0.5399599415915353, 0.5310216801507133, 0.5244129214968, 0.5223569018500192, 0.5179344075066703, 0.5179430416652134, 0.5113472597939628, 0.5073927811213902, 0.5039328336715698, 0.5002977337156024, 0.5027003799165998, 0.4984165940965925, 0.4922999995095389, 0.4949272360120501, 0.49293153626578196, 0.4857736655644008, 0.48868426254817415, 0.48479701791490826, 0.4823320082255772, 0.4807013954435076], "val_accuracy": [0.3876666724681854, 0.4716666638851166, 0.5563333630561829, 0.5826666951179504, 0.6186666488647461, 0.6700000166893005, 0.6976666450500488, 0.6986666917800903, 0.7023333311080933, 0.7210000157356262, 0.7023333311080933, 0.7386666536331177, 0.7390000224113464, 0.7366666793823242, 0.750333309173584, 0.7536666393280029, 0.7483333349227905, 0.7576666474342346, 0.7636666893959045, 0.753000020980835, 0.7633333206176758, 0.7739999890327454, 0.7616666555404663, 0.7749999761581421, 0.7806666493415833, 0.7816666960716248, 0.7789999842643738, 0.7839999794960022, 0.7763333320617676, 0.7786666750907898, 0.7853333353996277, 0.7919999957084656, 0.7839999794960022, 0.7929999828338623, 0.7893333435058594, 0.7923333048820496, 0.7993333339691162, 0.7900000214576721, 0.7866666913032532, 0.7983333468437195, 0.7943333387374878, 0.793666660785675]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1, 0, 1, 1, 0, 1], [7, 6, 4, 0, 8, 8], [3, 2, 2, 3], [44, 57, 55], [1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 6, 6, 1, 1, 8, 4], [2, 1, 2, 3, 2, 0, 2, 1, 4, 1, 3, 2, 1, 3, 5], [48, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [6], [], [0, 0, 1, 1], [0, 3], [3, 0], [18]], "fitness": -0.6654285788536072, "mapping_values": [1, 9, 9, 5, 4, 0, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, grad)), tf.math.sqrt(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, beta), tf.math.divide_no_nan(tf.math.add(beta, alpha), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.300374517729254, 2.296846510349657, 2.2951438990345943, 2.288749119010757, 2.287033548161118, 2.2819991687726287, 2.2801527701758153, 2.2756229844532307, 2.272566606875314, 2.269573185185967, 2.2638949576685095, 2.259205291740741, 2.2575309327281365, 2.2526682910823457, 2.2490368043080515, 2.244261622979987, 2.2384981380682327, 2.233689252490365, 2.229255567782937, 2.2262893266303743, 2.220929906352825, 2.2152345985422173, 2.211603258232698, 2.204801264219847, 2.2001939946004443, 2.1926594784451576, 2.1876106808261473, 2.1817742447102972, 2.170775709938238, 2.1661196446547875, 2.156916612867729, 2.1483189744121756, 2.1399493615514866, 2.1361921510329855, 2.1233824771928465, 2.1143600656970176, 2.101809232399653, 2.093539596753365, 2.0819932284876024, 2.0721242537414706, 2.0579261637445705, 2.0445156957117194, 2.0329088451776993, 2.0200871985113897, 2.010801339571455, 1.9924390570771944, 1.9830044249596455, 1.9617149782313048, 1.9501730163005113, 1.9416735240134895, 1.923685281504383, 1.90257381358403, 1.8878566844352185, 1.871076464558542, 1.8532565399136416, 1.8331463514711437, 1.8158629720300148, 1.7995439674781535, 1.7851272822056212, 1.7566632369348418, 1.7397251030426015, 1.7285562393734908, 1.708232220169292, 1.690678736379732, 1.6694798742885588, 1.659280363657786, 1.6375327493536347, 1.614919035536439, 1.6013495573325478, 1.5834694913885046, 1.569780119783953, 1.5571742934195625, 1.5380396455144523, 1.518430449502532, 1.5034388060803427, 1.490071264964683, 1.4795112324397106, 1.4651094666246598, 1.4487812504745068, 1.4421481611611837, 1.4245413759396832, 1.4227835152206199, 1.401625321793471, 1.3808276219500872, 1.3777015741396386, 1.3637697634176098, 1.3523031421042138, 1.3354402804623473, 1.3383111829503243, 1.3199471281881991, 1.319260047553096, 1.3065406739074068, 1.28604632421586, 1.2822159855136814, 1.2819982505729564, 1.2711237797159576, 1.2619614091767863, 1.2446357165156354, 1.2453269202868857, 1.2375986220861517], "accuracy": [0.09642054885625839, 0.10249637067317963, 0.11319508403539658, 0.12732796370983124, 0.12732796370983124, 0.1434420794248581, 0.151234969496727, 0.15770703554153442, 0.16972659528255463, 0.17831197381019592, 0.19244486093521118, 0.19878484308719635, 0.2110685557126999, 0.21899352967739105, 0.2316734939813614, 0.23299431800842285, 0.2487121969461441, 0.25518426299095154, 0.2677321434020996, 0.2739400267601013, 0.2767137885093689, 0.29084664583206177, 0.2900541424751282, 0.2991678714752197, 0.30339452624320984, 0.3074890971183777, 0.3203011453151703, 0.32465988397598267, 0.3315281867980957, 0.3353586196899414, 0.340509831905365, 0.3533218801021576, 0.35622772574424744, 0.3583410382270813, 0.36441686749458313, 0.36520934104919434, 0.3897767663002014, 0.3761722445487976, 0.38528597354888916, 0.3881917893886566, 0.39585259556770325, 0.4041738212108612, 0.4080042243003845, 0.42068418860435486, 0.4037775695323944, 0.4163254499435425, 0.4221371114253998, 0.43349623680114746, 0.43323206901550293, 0.42385417222976685, 0.428609162569046, 0.439439982175827, 0.4345529079437256, 0.4473649561405182, 0.4501386880874634, 0.4579315781593323, 0.4571390748023987, 0.45383700728416443, 0.454629510641098, 0.4737815260887146, 0.48368775844573975, 0.4707436263561249, 0.4811781942844391, 0.4811781942844391, 0.49214106798171997, 0.4788006842136383, 0.4970281422138214, 0.49729230999946594, 0.4943864643573761, 0.5011227130889893, 0.49966979026794434, 0.505349338054657, 0.5066701769828796, 0.5149914026260376, 0.520142674446106, 0.5219917893409729, 0.5196143388748169, 0.5243692994117737, 0.5315017700195312, 0.5235767960548401, 0.5337471961975098, 0.5256901383399963, 0.5400871634483337, 0.5453705191612244, 0.5418042540550232, 0.5457667708396912, 0.5515784025192261, 0.5589750409126282, 0.5580504536628723, 0.5534275770187378, 0.5550125241279602, 0.5564654469490051, 0.5596354603767395, 0.5694096088409424, 0.5674283504486084, 0.5672962665557861, 0.5756174921989441, 0.5703341960906982, 0.5789195895195007, 0.5803724527359009], "val_loss": [1.967125415802002, 1.9636804035731725, 1.9602984019688197, 1.9569450105939592, 1.9535988398960658, 1.9502259663173132, 1.9468259130205428, 1.9434174128941126, 1.9399704251970564, 1.9364521162850517, 1.9328655515398299, 1.9291578701564245, 1.9254064559936523, 1.9215475491115026, 1.9175780841282435, 1.9134963580540247, 1.9092652457101005, 1.9048354285103934, 1.9002722331455775, 1.8955777032034737, 1.8906759534563338, 1.8855928693498885, 1.8803386007036482, 1.8748437336512975, 1.8691423961094447, 1.8631319318498885, 1.8568601608276367, 1.8503683635166712, 1.8434414863586426, 1.8362599100385393, 1.8286983626229423, 1.8208315031869071, 1.8126393045697893, 1.8042198589869909, 1.7953722136361259, 1.7860779762268066, 1.7763167108808244, 1.7661882128034319, 1.7556238174438477, 1.744689873286656, 1.733285972050258, 1.721335002354213, 1.7089273248400008, 1.6961236000061035, 1.6828974655696325, 1.6691553933279855, 1.655109064919608, 1.6404016699109758, 1.6253416538238525, 1.6101512908935547, 1.5943424701690674, 1.578031369618007, 1.5615031038011824, 1.544614315032959, 1.5274453503744942, 1.5098068714141846, 1.4920893056052071, 1.4741164616176061, 1.4561248506818498, 1.4375848429543632, 1.4191594805036272, 1.40099378994533, 1.3826214926583427, 1.364257710320609, 1.3457972662789481, 1.3277520452226912, 1.3095969132014684, 1.2915824481419154, 1.2739321163722448, 1.2562709535871233, 1.2389017513820104, 1.2221356119428362, 1.2057005337306432, 1.1894614015306746, 1.1734935556139265, 1.1581197125571114, 1.1432009083884103, 1.1286443301609583, 1.1143875803266252, 1.1008173738207137, 1.0875615392412459, 1.074894836970738, 1.0624594347817558, 1.050229583467756, 1.0384480612618583, 1.0270435810089111, 1.0161120210375105, 1.0052844456263952, 0.9949815273284912, 0.9848878043038505, 0.9752662181854248, 0.9661063126155308, 0.9566396645137242, 0.9477166107722691, 0.939286368233817, 0.9309978144509452, 0.9229236670902797, 0.9148196833474296, 0.9071898800986153, 0.8999127319880894], "val_accuracy": [0.061000000685453415, 0.08666666597127914, 0.12266666442155838, 0.15533334016799927, 0.19033333659172058, 0.2199999988079071, 0.2460000067949295, 0.2759999930858612, 0.30133333802223206, 0.32100000977516174, 0.34466665983200073, 0.359333336353302, 0.37033334374427795, 0.3773333430290222, 0.3863333463668823, 0.39399999380111694, 0.4020000100135803, 0.40966665744781494, 0.4163333475589752, 0.42399999499320984, 0.4309999942779541, 0.43666666746139526, 0.44066667556762695, 0.44566667079925537, 0.4543333351612091, 0.45766666531562805, 0.46399998664855957, 0.4703333377838135, 0.47733333706855774, 0.4816666543483734, 0.4869999885559082, 0.4896666705608368, 0.49300000071525574, 0.5006666779518127, 0.5049999952316284, 0.5096666812896729, 0.515666663646698, 0.5213333368301392, 0.5263333320617676, 0.5320000052452087, 0.5326666831970215, 0.5376666784286499, 0.5396666526794434, 0.5443333387374878, 0.54666668176651, 0.5473333597183228, 0.5493333339691162, 0.5523333549499512, 0.5556666851043701, 0.5569999814033508, 0.5580000281333923, 0.5606666803359985, 0.5613333582878113, 0.5643333196640015, 0.5703333616256714, 0.5733333230018616, 0.5753333568572998, 0.5766666531562805, 0.5753333568572998, 0.5756666660308838, 0.5766666531562805, 0.5803333520889282, 0.5820000171661377, 0.5833333134651184, 0.5866666436195374, 0.5896666646003723, 0.5920000076293945, 0.5920000076293945, 0.5946666598320007, 0.5983333587646484, 0.6016666889190674, 0.6043333411216736, 0.6079999804496765, 0.6136666536331177, 0.6190000176429749, 0.621999979019165, 0.6230000257492065, 0.6256666779518127, 0.6306666731834412, 0.6359999775886536, 0.640666663646698, 0.6420000195503235, 0.6453333497047424, 0.6486666798591614, 0.656000018119812, 0.6586666703224182, 0.6616666913032532, 0.6629999876022339, 0.6650000214576721, 0.6656666398048401, 0.6683333516120911, 0.6703333258628845, 0.6740000247955322, 0.6746666431427002, 0.6759999990463257, 0.6786666512489319, 0.6803333163261414, 0.6833333373069763, 0.6850000023841858, 0.6863333582878113]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 0], [7, 6, 4, 9], [3, 2, 2, 3], [44, 57, 55], [1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], [4, 6, 6, 6, 5, 2, 2, 4, 5, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 3, 1, 3, 3, 2, 0, 0, 2], [48, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 1, 1, 1], [0, 3, 3, 6, 9], [3, 0], [45, 38]], "fitness": -0.257999986410141, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, alpha)))), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.386520796196257, 2.579296750793084, 2.286723450363556, 2.37925188753347, 2.303830633514892, 2.3029924230710344, 2.3026545448325897], "accuracy": [0.18636904656887054, 0.1846519559621811, 0.12270505726337433, 0.11676132678985596, 0.09932637959718704, 0.09576013684272766, 0.10091137140989304], "val_loss": [1.959494182041713, 1.642235313143049, 1.9709924970354353, 1.9747728620256697, 1.9735829489571708, 1.9734243665422713, 1.9731198719569616], "val_accuracy": [0.16066665947437286, 0.2563333213329315, 0.1469999998807907, 0.09966666996479034, 0.10133333504199982, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 0], [7, 6, 4, 9], [2, 2, 2, 3], [44, 57, 55], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 6, 6, 6, 5, 2, 2, 4, 5, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 0, 3, 2, 3, 1, 2, 0, 0, 2], [42, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 1, 0, 1, 0, 1], [0, 3], [3, 0], [45, 11]], "fitness": -0.257999986410141, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 7, 7, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.square(tf.math.add(tf.math.add(beta, beta), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, alpha)))))))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.386520796196257, 2.579296750793084, 2.286723450363556, 2.37925188753347, 2.303830633514892, 2.3029924230710344, 2.3026545448325897], "accuracy": [0.18636904656887054, 0.1846519559621811, 0.12270505726337433, 0.11676132678985596, 0.09932637959718704, 0.09576013684272766, 0.10091137140989304], "val_loss": [1.959494182041713, 1.642235313143049, 1.9709924970354353, 1.9747728620256697, 1.9735829489571708, 1.9734243665422713, 1.9731198719569616], "val_accuracy": [0.16066665947437286, 0.2563333213329315, 0.1469999998807907, 0.09966666996479034, 0.10133333504199982, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 0], [8, 6, 4, 6], [2, 1, 3, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 2, 3, 0, 1, 3, 2, 0, 1, 1, 3, 3, 0, 2, 2, 1, 2, 2, 0, 3, 1, 1, 3, 0, 3, 2], [44, 57], [1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [4, 0, 0, 4, 9, 2, 4, 9, 4, 9, 9, 5, 5, 2, 5, 2, 4, 4, 2, 5, 1, 7, 8], [3, 2, 2, 3, 2, 3, 2, 1, 4, 0, 0, 2, 1, 3, 5], [99, 70], [0, 0, 0, 1, 0], [1, 0, 1, 1], [3, 3], [5, 2], [], [0, 1, 0, 1, 0, 1], [0, 3, 3], [3, 0, 0], [45, 38]], "fitness": -0.257999986410141, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.negative(beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.386520796196257, 2.579296750793084, 2.286723450363556, 2.37925188753347, 2.303830633514892, 2.3029924230710344, 2.3026545448325897], "accuracy": [0.18636904656887054, 0.1846519559621811, 0.12270505726337433, 0.11676132678985596, 0.09932637959718704, 0.09576013684272766, 0.10091137140989304], "val_loss": [1.959494182041713, 1.642235313143049, 1.9709924970354353, 1.9747728620256697, 1.9735829489571708, 1.9734243665422713, 1.9731198719569616], "val_accuracy": [0.16066665947437286, 0.2563333213329315, 0.1469999998807907, 0.09966666996479034, 0.10133333504199982, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 6, 4, 9, 8, 8], [2, 1, 2, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 2, 3, 0, 1, 3, 2, 0, 1, 1, 3, 3, 0, 2, 2, 1, 2, 2, 0, 3, 1, 1, 3, 0, 3, 2], [44, 57, 42, 27, 0, 44, 42, 35, 73, 42, 46, 86, 85, 6, 20, 59, 93, 8], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 1], [4, 0, 6, 1, 1, 8, 4, 4, 4, 3, 9, 5, 5, 2, 5, 2, 4, 4, 2, 5, 1, 7, 8], [3, 1, 3, 1, 0, 1], [48, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3], [4, 6], [], [1, 1, 0, 1, 0, 1], [0, 3], [1, 0, 0], [87]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08189142495393753, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0], [1, 0, 0, 1, 0, 1, 0], [7, 6, 4, 9], [2, 1, 3, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 2, 3, 0, 1, 3, 2, 0, 1, 1, 3, 3, 0, 2, 2, 1, 2, 2, 0, 3, 1, 1, 3, 0, 3, 2], [44, 57], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [4, 6, 6, 6, 5, 2, 2, 4, 5, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 1, 0, 1, 1, 0, 0, 0], [42, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3], [4, 7], [], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 4, 1, 2, 5], [3, 1, 3, 1], [45, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 9, 8, 2, 5, 4, 2, 2, 0, 9, 5, 4, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, grad))), tf.math.add(beta, grad))), tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.square(tf.math.add(beta, alpha)))))), tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.subtract(sigma, tf.math.add(tf.math.square(alpha), sigma)), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [3, 2, 2, 3], [44, 57], [1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [4, 6, 8, 6, 5, 2, 5, 4, 5, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 1, 0, 1, 1, 0, 0, 0], [42, 83, 49, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0], [0, 3, 3, 6, 9], [3, 1, 3, 1], [45, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.divide_no_nan(tf.math.add(beta, grad), grad), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08268392831087112, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 0], [7, 6, 4, 9], [3, 2, 2, 3], [44, 57, 55], [0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [4, 6, 6, 6, 5, 9, 2, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 2, 0, 1, 1, 0, 0, 0], [54, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 1, 1], [0, 3], [3, 1, 3, 1], [17]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, grad), grad), grad)), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, alpha))", "other_info": {"loss": [2.303282575427171, 2.323385806840094, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09153348207473755, 0.07898560166358948, 0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.976181983947754, 2.022892815726144, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.02800000086426735, 0.09866666793823242, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [2, 2, 2, 3], [44, 57], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [4, 6, 6, 6, 5, 2, 2, 4, 5, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 1, 3, 1, 0, 1, 1, 0, 0, 0], [42, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [1], [], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0], [2, 3, 6, 6, 9], [3, 1, 0, 1, 2], [45, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 9, 4, 5, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(alpha, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(sigma, alpha), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), alpha), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.11266675591468811, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0], [7, 6, 4, 9], [1, 2, 2, 3], [44, 57, 55], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 3, 0, 0, 1, 0, 8], [0, 3, 3, 2, 3, 1, 3, 0, 0, 2], [42, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 1, 1], [0, 3], [3, 1, 3, 1], [17]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))), tf.math.pow(tf.math.add(alpha, grad), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [5, 0, 4, 9, 6, 4, 5, 9, 6, 1, 7, 1, 6, 7, 4, 2, 0, 4, 9, 3, 1, 0, 6, 3, 7, 7, 9, 0, 4, 7, 1, 4, 4, 7, 1, 2, 1, 1, 5, 5, 1, 3, 6, 9, 0, 4, 6, 7, 5, 5, 0, 1, 1, 1, 8, 0, 2, 0, 5, 0, 9, 4, 6, 7, 5, 1, 6, 5], [2, 1, 2, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 2, 3, 0, 1, 3, 2, 0, 1, 1, 3, 3, 0, 2, 2, 1, 2, 2, 0, 3, 1, 1, 3, 0, 3, 2], [44, 57, 42, 27, 0, 44, 42, 35, 73, 42, 46, 86, 85, 6, 20, 59, 93, 8], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6, 6, 5, 2, 2, 4, 5, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 1, 0, 1, 1, 0, 0, 0], [42, 71, 49, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0], [1, 3, 2, 6, 9], [3, 1, 3, 1], [45, 11]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 9, 5, 4, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(alpha, tf.math.add(tf.math.divide_no_nan(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), sigma), alpha)))", "other_info": {"loss": [2.301874281471715, 2.3019998231977756, 2.3036239988311658, 2.2996722024429617, 2.8267364863470137, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09377889335155487, 0.08981640636920929, 0.09272222965955734, 0.09800554811954498, 0.09972262382507324, 0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9705864361354284, 1.970468521118164, 1.9697629383632116, 1.9672019822256905, 368171282.28571427, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.0403333343565464, 0.07699999958276749, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 1, 0], [7, 6, 4, 9], [3, 2, 2, 3], [44, 57], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [4, 6, 0, 6, 5, 2, 2, 4, 5, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 1, 0, 1, 1, 0, 0, 0], [88, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 5, 3, 6, 9], [3, 1, 3, 1], [99, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 7, 4, 3, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, grad))), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(grad)), grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.multiply(sigma, tf.math.divide_no_nan(alpha, sigma))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1], [7, 6, 4, 9, 2], [3, 2, 2, 3], [44, 57], [1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [4, 6, 6, 1, 1, 1, 4, 9, 6], [3, 3, 3, 1, 0, 1, 1, 0, 0, 0], [48, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 9, 3, 6, 0], [3, 1, 3, 1], [45, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 5, 4, 1, 17, 17, 9, 8, 3, 1, 1, 0, 1, 0, 2, 2, 0, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, grad), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(grad, grad)), tf.math.add(beta, tf.math.subtract(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), alpha))), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, alpha))), tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(beta, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [30136607.50662628, 559898802.4324396, 2661440654.89473, 7200886445.7324, 15626153109.99551, 28563719215.203274], "accuracy": [0.09919429570436478, 0.09813763201236725, 0.10170386731624603, 0.10196803510189056, 0.10157178342342377, 0.10500594228506088], "val_loss": [112155428.57142857, 896301147.4285715, 3023962989.714286, 7166656512.0, 13995870208.0, 24183408932.57143], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [3, 2, 2, 3], [44, 57], [1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [5, 4, 6, 6, 9, 2, 2, 4, 5, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 1, 1, 0, 1, 1, 0, 0, 0], [42, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 3, 3, 6, 9], [3, 0, 3, 1], [45, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 8, 5, 3, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(grad, grad)), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(sigma, tf.math.divide_no_nan(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), sigma))", "other_info": {"loss": [2.303509208047867, 2.311432481741058, 2.33059403783279, 3686136.094450025, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09087307006120682, 0.0812310129404068, 0.07911768555641174, 0.08413683623075485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.974726608821324, 1.982999052320208, 2.002699443272182, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03033333271741867, 0.03500000014901161, 0.09333333373069763, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [7, 6, 4, 9, 3, 3, 3, 4, 2, 9], [3, 2, 2, 3, 3, 2, 1], [44, 57], [1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [4, 7, 0, 1, 1, 2, 4, 4, 4, 9, 9, 5, 5, 2, 5, 2, 4, 4, 2, 5, 1, 7, 8], [3, 3, 3, 1, 0, 1, 1, 0, 0, 0], [42, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1, 1], [3, 3], [0], [92], [0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 3, 1, 7, 6], [3, 1, 3, 1], [45, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 2, 6, 6, 3, 3, 0, 1, 1, 0, 1, 1, 8, 4, 4, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)), tf.math.multiply(tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.add(grad, alpha))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(grad)), tf.math.add(beta, grad))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.subtract(sigma, tf.math.add(alpha, sigma)), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 0], [7, 6, 4, 9], [3, 2, 2, 3], [44, 57, 55], [1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 6, 6, 6, 5, 2, 2, 4, 5, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 3, 2, 3, 3, 2, 0, 0, 2], [48, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 3, 2, 4, 4, 3, 8, 1, 3, 9], [3, 0, 2, 1, 1, 1, 2], [17, 28]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 7, 7, 1, 1, 1, 0, 1, 0, 17, 10, 7, 2], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(grad, grad))))))), tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.math.pow(tf.math.pow(tf.math.multiply(sigma, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.math.sqrt(beta)), tf.math.subtract(alpha, tf.math.multiply(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), alpha), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}]