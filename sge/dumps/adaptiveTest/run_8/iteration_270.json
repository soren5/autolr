[{"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.8171428442001343, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.001771861441525, 1.4513826499982296, 1.0568141517952812, 0.875880575600459, 0.844301789601434, 0.750515844930259, 0.7315871979440476, 0.6929344787353285, 0.6959821069402748, 0.6499618208167449, 0.6391893476621744, 0.6336369939672949, 0.6095090706933207, 0.5762406072564932, 0.5785100312044655, 0.5729576790841374, 0.5402277547764253, 0.5468170891238273, 0.518708468247178, 0.5339067127954659, 0.4969732665807784, 0.4978494213367765, 0.48465263751818755, 0.4908568382641076, 0.46863961412670146, 0.4728439505058367, 0.4715835291239343, 0.46181802666340016, 0.4445004998897565, 0.4435063709853395, 0.4422840613022047, 0.4373003705271231, 0.42687571374275085, 0.4212972175498696], "accuracy": [0.32465988397598267, 0.5097081065177917, 0.629507303237915, 0.6749438643455505, 0.6917183995246887, 0.7193237543106079, 0.7244749665260315, 0.737947404384613, 0.7357020378112793, 0.7514199018478394, 0.7598732113838196, 0.7607977986335754, 0.7691190242767334, 0.787082314491272, 0.7757231593132019, 0.7848368883132935, 0.7954035401344299, 0.7971205711364746, 0.8039889335632324, 0.7968564033508301, 0.8128384351730347, 0.8168009519577026, 0.8168009519577026, 0.8173292875289917, 0.8255184292793274, 0.8220842480659485, 0.8259146809577942, 0.8272355198860168, 0.832650899887085, 0.8374059200286865, 0.832650899887085, 0.8370096683502197, 0.8462554216384888, 0.8429533839225769], "val_loss": [1.354926007134574, 0.8891261645725795, 0.7344238928386143, 0.6804933718272618, 0.582672153200422, 0.5904574564525059, 0.5620360715048653, 0.5345021656581334, 0.5166111673627581, 0.4994580234800066, 0.4747325863157, 0.5035216638020107, 0.462827205657959, 0.5006544760295323, 0.46499552045549664, 0.45239040681294035, 0.44540228162493023, 0.43228447437286377, 0.4457553284508841, 0.4202110937663487, 0.43145160164151874, 0.4369552220617022, 0.40403108085904804, 0.3900724138532366, 0.38848163400377544, 0.3943948745727539, 0.38687130383082796, 0.40594632284981863, 0.3719923325947353, 0.37677708693913053, 0.3810235261917114, 0.374567517212459, 0.36881619691848755, 0.3906841448375157], "val_accuracy": [0.4573333263397217, 0.6393333077430725, 0.640333354473114, 0.6859999895095825, 0.7296666502952576, 0.7226666808128357, 0.7396666407585144, 0.762666642665863, 0.7673333287239075, 0.7766666412353516, 0.7889999747276306, 0.7730000019073486, 0.7976666688919067, 0.7643333077430725, 0.7976666688919067, 0.7979999780654907, 0.8149999976158142, 0.8140000104904175, 0.8019999861717224, 0.8133333325386047, 0.8180000185966492, 0.800000011920929, 0.8289999961853027, 0.8326666951179504, 0.8326666951179504, 0.824999988079071, 0.8349999785423279, 0.8153333067893982, 0.8460000157356262, 0.8330000042915344, 0.8386666774749756, 0.8443333506584167, 0.8413333296775818, 0.8286666870117188]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.8171428442001343, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.001771861441525, 1.4513826499982296, 1.0568141517952812, 0.875880575600459, 0.844301789601434, 0.750515844930259, 0.7315871979440476, 0.6929344787353285, 0.6959821069402748, 0.6499618208167449, 0.6391893476621744, 0.6336369939672949, 0.6095090706933207, 0.5762406072564932, 0.5785100312044655, 0.5729576790841374, 0.5402277547764253, 0.5468170891238273, 0.518708468247178, 0.5339067127954659, 0.4969732665807784, 0.4978494213367765, 0.48465263751818755, 0.4908568382641076, 0.46863961412670146, 0.4728439505058367, 0.4715835291239343, 0.46181802666340016, 0.4445004998897565, 0.4435063709853395, 0.4422840613022047, 0.4373003705271231, 0.42687571374275085, 0.4212972175498696], "accuracy": [0.32465988397598267, 0.5097081065177917, 0.629507303237915, 0.6749438643455505, 0.6917183995246887, 0.7193237543106079, 0.7244749665260315, 0.737947404384613, 0.7357020378112793, 0.7514199018478394, 0.7598732113838196, 0.7607977986335754, 0.7691190242767334, 0.787082314491272, 0.7757231593132019, 0.7848368883132935, 0.7954035401344299, 0.7971205711364746, 0.8039889335632324, 0.7968564033508301, 0.8128384351730347, 0.8168009519577026, 0.8168009519577026, 0.8173292875289917, 0.8255184292793274, 0.8220842480659485, 0.8259146809577942, 0.8272355198860168, 0.832650899887085, 0.8374059200286865, 0.832650899887085, 0.8370096683502197, 0.8462554216384888, 0.8429533839225769], "val_loss": [1.354926007134574, 0.8891261645725795, 0.7344238928386143, 0.6804933718272618, 0.582672153200422, 0.5904574564525059, 0.5620360715048653, 0.5345021656581334, 0.5166111673627581, 0.4994580234800066, 0.4747325863157, 0.5035216638020107, 0.462827205657959, 0.5006544760295323, 0.46499552045549664, 0.45239040681294035, 0.44540228162493023, 0.43228447437286377, 0.4457553284508841, 0.4202110937663487, 0.43145160164151874, 0.4369552220617022, 0.40403108085904804, 0.3900724138532366, 0.38848163400377544, 0.3943948745727539, 0.38687130383082796, 0.40594632284981863, 0.3719923325947353, 0.37677708693913053, 0.3810235261917114, 0.374567517212459, 0.36881619691848755, 0.3906841448375157], "val_accuracy": [0.4573333263397217, 0.6393333077430725, 0.640333354473114, 0.6859999895095825, 0.7296666502952576, 0.7226666808128357, 0.7396666407585144, 0.762666642665863, 0.7673333287239075, 0.7766666412353516, 0.7889999747276306, 0.7730000019073486, 0.7976666688919067, 0.7643333077430725, 0.7976666688919067, 0.7979999780654907, 0.8149999976158142, 0.8140000104904175, 0.8019999861717224, 0.8133333325386047, 0.8180000185966492, 0.800000011920929, 0.8289999961853027, 0.8326666951179504, 0.8326666951179504, 0.824999988079071, 0.8349999785423279, 0.8153333067893982, 0.8460000157356262, 0.8330000042915344, 0.8386666774749756, 0.8443333506584167, 0.8413333296775818, 0.8286666870117188]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [10, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [42], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [38, 47, 50, 41, 34]], "fitness": -0.7948571443557739, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.213231454388718, 1.6539787995171285, 1.2026927816302564, 1.0094463447412212, 0.9173725307058618, 0.8479900796573081, 0.8153782501007824, 0.7625187025755435, 0.7378792407458815, 0.7139986845968642, 0.6953739411228479, 0.6764441028939986, 0.667391618001006, 0.646055664101045, 0.669509283760362, 0.6585703783535356, 0.6456332384414204, 0.619736695861174, 0.6039602999138621, 0.598582997762642, 0.5992171734063664, 0.5960318044097652, 0.5933428500637387, 0.5759568933277964, 0.5681691077076417, 0.5621912503727454, 0.5750591725862856, 0.5524223227825903, 0.5486009373656668], "accuracy": [0.2584863305091858, 0.4753665328025818, 0.5832782983779907, 0.629507303237915, 0.6642451286315918, 0.6881521344184875, 0.6979262828826904, 0.7172104120254517, 0.7297582626342773, 0.735041618347168, 0.7421740889549255, 0.7461365461349487, 0.7503632307052612, 0.7604015469551086, 0.7483819723129272, 0.7497028112411499, 0.763439416885376, 0.7689869403839111, 0.7701756954193115, 0.7738739848136902, 0.7766477465629578, 0.7795535326004028, 0.7757231593132019, 0.7843085527420044, 0.7923656105995178, 0.7918372750282288, 0.785629391670227, 0.7936864495277405, 0.7935543656349182], "val_loss": [1.6639899185725622, 0.9440006187983921, 0.8156865324292865, 0.7165214334215436, 0.6134688854217529, 0.6022101129804339, 0.6276090485709054, 0.5469143901552472, 0.5464814901351929, 0.5307918616703579, 0.514505250113351, 0.5206969976425171, 0.5020190817969186, 0.5277255603245327, 0.5332894325256348, 0.49138833795275005, 0.5131687607084002, 0.4694703647068569, 0.49436352934156147, 0.472860438483102, 0.4739879710333688, 0.46037676504680086, 0.4727207933153425, 0.44892735140664236, 0.45521817037037443, 0.4659331185477121, 0.4639381170272827, 0.43997228145599365, 0.4491725819451468], "val_accuracy": [0.5379999876022339, 0.6330000162124634, 0.6416666507720947, 0.6736666560173035, 0.7400000095367432, 0.7409999966621399, 0.7146666646003723, 0.7699999809265137, 0.7573333382606506, 0.7766666412353516, 0.784333348274231, 0.7693333625793457, 0.7933333516120911, 0.7573333382606506, 0.750333309173584, 0.7836666703224182, 0.7773333191871643, 0.8023333549499512, 0.7846666574478149, 0.8040000200271606, 0.7990000247955322, 0.7953333258628845, 0.8036666512489319, 0.8146666884422302, 0.8096666932106018, 0.8016666769981384, 0.8026666641235352, 0.812666654586792, 0.8059999942779541]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 2, 0, 1, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [1, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 7, 5, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(grad, grad))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), alpha)))))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [2, 9, 6, 6, 4, 3, 4, 1, 5], [2, 3, 2, 0, 1, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 2, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 6, 5, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(tf.math.multiply(grad, tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(sigma, alpha), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.11755382269620895, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1], [0, 6, 9, 4, 0, 3, 4], [0, 0, 0, 2, 2, 0], [8, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 8, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 1, 0, 1, 0, 3, 2, 3, 3, 0], [78, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [42], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 4, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 7, 7, 4, 3, 2, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))))), tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(sigma, alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [2, 6, 9, 4, 0, 3, 4], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 6, 4, 3, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), grad)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.multiply(grad, tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08334434032440186, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], [2, 3, 2, 4, 0, 3, 4, 2, 3, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 57, 18, 54], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [9, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 10, 9, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.add(alpha, grad), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))), grad), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad))), tf.math.add(alpha, grad)))), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302182683225447, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [4, 3, 6, 6, 0, 3, 4, 1, 5], [3, 3, 0, 1, 1, 0, 1], [8, 86, 50], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [4, 5, 3, 4, 5, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [1, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [5, 1, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 7, 7, 2, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)))), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.pow(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), alpha))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))))))), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.subtract(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [6, 6, 9, 4, 0, 0, 4, 5], [2, 3, 2, 0, 1, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 57, 18], [1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 9, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 8, 4, 2, 13, 13, 8, 5, 3, 1, 0, 0, 0, 0, 2, 2, 0, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), grad)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.square(tf.math.multiply(beta, tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), grad)))))))), tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [132912669.51281914, 2536756490.110157, 11663782683.287281, 32682009067.238674, 70042822155.29362, 130442826940.40735], "accuracy": [0.1002509593963623, 0.09932637959718704, 0.09813763201236725, 0.1022322028875351, 0.09549596905708313, 0.10460969805717468], "val_loss": [506310692.5714286, 4047932562.285714, 13658874733.714285, 32373108150.857143, 63224643584.0, 109248359862.85715], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [2, 0, 6, 6, 0, 3, 4, 1, 5], [2, 3, 2, 0, 1, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 31, 50], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 2, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [1, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 7, 6, 2, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), tf.math.add(alpha, grad)))), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), alpha)))), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.pow(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))))), tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [2, 6, 9, 0, 0, 3, 4], [2, 3, 3, 0, 1, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [7, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 5, 4, 2, 2, 0, 5, 3, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), sigma), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [6, 4, 6, 3, 9, 6, 4, 2, 9, 5, 4, 2, 9, 5, 6, 0], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 31, 46, 92, 32, 84, 93, 88], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 3, 2, 3, 6], [3, 1, 0, 1, 3, 2], [40, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 18, 11, 7, 5, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.multiply(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.square(tf.math.add(alpha, tf.math.pow(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad)))))), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [2, 6, 9, 4, 4, 3, 4], [2, 3, 2, 0, 1, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 1, 1, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), grad)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08334434032440186, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [2, 3, 9, 4, 0, 3, 4], [1, 3, 1, 1, 1, 0], [8, 86, 98], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [6, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), grad)), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08334434032440186, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0], [1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [2, 6, 2, 4, 0, 3, 4], [2, 3, 0, 0, 1, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 57, 18], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [6, 3, 8, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.08142857253551483, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(sigma, alpha), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.300572152402911, 2.299289091561433, 2.300495061514132, 2.301200438578682, 2.3017509808047194, 2.3014915731085166], "accuracy": [0.09338264167308807, 0.10051512718200684, 0.09338264167308807, 0.08994849026203156, 0.08215559273958206, 0.08585391938686371], "val_loss": [1.968527044568743, 1.9707948139735632, 1.972224167415074, 1.9725055013384138, 1.9725207601274763, 1.9726282528468542], "val_accuracy": [0.09266666322946548, 0.07833333313465118, 0.04533333331346512, 0.06300000101327896, 0.07233333587646484, 0.08966666460037231]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [2, 0, 9, 9, 0, 3, 4], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 43, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [5, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.0454285703599453, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.301847113058977, 2.3024334490905427, 2.3026007065730814, 2.301071582799732, 2.3023796478959753, 2.3012142050393805, 2.3019716994102053, 2.302043512622993, 2.3025393691029548, 2.301469720759333, 2.3016938299724, 2.302841767501428, 2.302494893472712, 2.301521583492131, 2.299330678047238, 2.3007926379747836, 2.3002075251177585, 2.3015517772794984, 2.3015434354004403, 2.300384043482049], "accuracy": [0.08955223858356476, 0.08915598690509796, 0.09351472556591034, 0.09866596013307571, 0.09206181764602661, 0.09391097724437714, 0.08730682730674744, 0.08955223858356476, 0.09153348207473755, 0.09126931428909302, 0.08757099509239197, 0.09126931428909302, 0.09047681838274002, 0.09549596905708313, 0.09325055778026581, 0.09787346422672272, 0.08981640636920929, 0.0944393053650856, 0.0944393053650856, 0.09285431355237961], "val_loss": [1.970531736101423, 1.970463752746582, 1.970409529549735, 1.970360483442034, 1.9703080994742257, 1.970264094216483, 1.9702153887067522, 1.9701572145734514, 1.9700921603611536, 1.970036574772426, 1.9699859619140625, 1.9699368476867676, 1.969900063105992, 1.9698619842529297, 1.9698284694126673, 1.9697916167122977, 1.9697556495666504, 1.9697228159223283, 1.9696732929774694, 1.9696509497506278], "val_accuracy": [0.03933333232998848, 0.03966666758060455, 0.04066666588187218, 0.0416666679084301, 0.041999999433755875, 0.04266666620969772, 0.04333333298563957, 0.0430000014603138, 0.044333335012197495, 0.04466666653752327, 0.045666664838790894, 0.045666664838790894, 0.046666666865348816, 0.047333333641290665, 0.04766666516661644, 0.047333333641290665, 0.047333333641290665, 0.04766666516661644, 0.04766666516661644, 0.04766666516661644]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [7, 6, 8, 4, 0, 6, 4], [1, 3, 2, 0, 1, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 57, 18], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [99, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 4, 3, 1, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.3018712891626665, 2.302538099668092, 2.3027741948390887, 2.3013117955172175, 2.3026881162847244, 2.301556073128193], "accuracy": [0.08968432247638702, 0.08942015469074249, 0.0936468094587326, 0.09760929644107819, 0.09047681838274002, 0.0944393053650856], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [7, 6, 9, 4, 0, 7, 4], [1, 3, 2, 0, 1, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [99, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0], [0, 7, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)))))), tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3018712891626665, 2.302538099668092, 2.3027741948390887, 2.3013117955172175, 2.3026881162847244, 2.301556073128193], "accuracy": [0.08968432247638702, 0.08942015469074249, 0.0936468094587326, 0.09760929644107819, 0.09047681838274002, 0.0944393053650856], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1], [6, 3, 6, 6, 9, 3, 4, 9, 1, 5, 4, 2, 9, 5, 6, 0], [2, 1, 0, 2, 2, 0], [93, 57, 18], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [0, 0, 1], [3, 3, 0], [4, 3], [42], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [38, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 9, 9, 5, 4, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3018712891626665, 2.302538099668092, 2.3027741948390887, 2.3013117955172175, 2.3026881162847244, 2.301556073128193], "accuracy": [0.08968432247638702, 0.08942015469074249, 0.0936468094587326, 0.09760929644107819, 0.09047681838274002, 0.0944393053650856], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]