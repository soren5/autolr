[{"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0], [2, 6, 9, 9, 0], [0, 1, 1, 3], [5, 57], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 4, 2, 2, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 2, 2, 3, 3, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.8157142996788025, "mapping_values": [1, 3, 3, 1, 2, 1, 17, 17, 8, 9, 2, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.pow(tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), tf.math.add(beta, beta))), beta), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, sigma)))", "other_info": {"loss": [2.014055855805454, 1.53181968288273, 1.1312980265618, 0.8812239007423299, 0.7975733782148884, 0.7415181259122648, 0.7070079152185085, 0.699517672402968, 0.6722874227705066, 0.6315900912657705, 0.5943340818564874, 0.61167917035401, 0.5835575523976054, 0.584221208171129, 0.5381015134824502, 0.5459627046907551, 0.5244291151881517, 0.5113195960374635, 0.5078283920736518, 0.5021300050938654, 0.4931312840746347, 0.485695983712164, 0.4651860776255868, 0.4628027528701536, 0.4597545118143593, 0.42701316503737785, 0.44530178743692955, 0.45515863007133067, 0.42724362212149475, 0.4294122744190726, 0.40769674315932497, 0.424391502945761, 0.42516670691858366, 0.39021316443089843, 0.39340793340512553, 0.37934656163893826], "accuracy": [0.3191123902797699, 0.48514068126678467, 0.5762779116630554, 0.6668868064880371, 0.7021529674530029, 0.7189275026321411, 0.7313432693481445, 0.7357020378112793, 0.7464007139205933, 0.7650244235992432, 0.7757231593132019, 0.7652885913848877, 0.7788931727409363, 0.776251494884491, 0.7964601516723633, 0.7927618622779846, 0.8016114234924316, 0.8076872229576111, 0.8068947196006775, 0.8148196935653687, 0.8161405324935913, 0.813498854637146, 0.8235371708869934, 0.8252542614936829, 0.8255184292793274, 0.8448025584220886, 0.8368775844573975, 0.82683926820755, 0.8437458872795105, 0.8392550349235535, 0.8515387773513794, 0.8389908671379089, 0.8407079577445984, 0.8602562546730042, 0.8518029451370239, 0.8578787446022034], "val_loss": [1.404036045074463, 1.1159683295658656, 0.6749439069202968, 0.6889595985412598, 0.5784133502415248, 0.5928973981312343, 0.583188670022147, 0.5608362129756382, 0.5633894545691354, 0.474192602293832, 0.5162102494921003, 0.500806450843811, 0.49176486900874544, 0.4528155411992754, 0.4324594395501273, 0.43018109457833426, 0.4249459334782192, 0.4154972178595407, 0.46216899156570435, 0.4274958372116089, 0.4036416326250349, 0.3942731193133763, 0.39803773164749146, 0.40060841185706003, 0.38294040305273874, 0.36339306831359863, 0.3944872191974095, 0.3781428337097168, 0.39744051013674053, 0.36639770439692904, 0.3559591940471104, 0.41384512186050415, 0.37042207377297537, 0.35136764390128, 0.3634393385478428, 0.3480409213474819], "val_accuracy": [0.54666668176651, 0.534333348274231, 0.6949999928474426, 0.6996666789054871, 0.7170000076293945, 0.7213333249092102, 0.7379999756813049, 0.7286666631698608, 0.7289999723434448, 0.7973333597183228, 0.750333309173584, 0.7680000066757202, 0.7906666398048401, 0.7896666526794434, 0.8166666626930237, 0.8206666707992554, 0.8220000267028809, 0.8196666836738586, 0.7953333258628845, 0.8159999847412109, 0.8309999704360962, 0.8360000252723694, 0.8320000171661377, 0.8266666531562805, 0.828000009059906, 0.8420000076293945, 0.8416666388511658, 0.8429999947547913, 0.831333339214325, 0.8516666889190674, 0.8546666502952576, 0.8226666450500488, 0.8393333554267883, 0.8543333411216736, 0.8456666469573975, 0.8486666679382324]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 1, 0, 1, 0, 1, 0], [5, 6, 4, 9], [0, 3, 2, 3], [5, 57], [1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1], [7, 2, 4, 2, 0, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 2, 3, 3, 2, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.8157142996788025, "mapping_values": [1, 1, 1, 0, 1, 1, 18, 18, 9, 9, 1, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha))), tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.add(beta, grad))), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad)))))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, sigma)))", "other_info": {"loss": [2.014055855805454, 1.53181968288273, 1.1312980265618, 0.8812239007423299, 0.7975733782148884, 0.7415181259122648, 0.7070079152185085, 0.699517672402968, 0.6722874227705066, 0.6315900912657705, 0.5943340818564874, 0.61167917035401, 0.5835575523976054, 0.584221208171129, 0.5381015134824502, 0.5459627046907551, 0.5244291151881517, 0.5113195960374635, 0.5078283920736518, 0.5021300050938654, 0.4931312840746347, 0.485695983712164, 0.4651860776255868, 0.4628027528701536, 0.4597545118143593, 0.42701316503737785, 0.44530178743692955, 0.45515863007133067, 0.42724362212149475, 0.4294122744190726, 0.40769674315932497, 0.424391502945761, 0.42516670691858366, 0.39021316443089843, 0.39340793340512553, 0.37934656163893826], "accuracy": [0.3191123902797699, 0.48514068126678467, 0.5762779116630554, 0.6668868064880371, 0.7021529674530029, 0.7189275026321411, 0.7313432693481445, 0.7357020378112793, 0.7464007139205933, 0.7650244235992432, 0.7757231593132019, 0.7652885913848877, 0.7788931727409363, 0.776251494884491, 0.7964601516723633, 0.7927618622779846, 0.8016114234924316, 0.8076872229576111, 0.8068947196006775, 0.8148196935653687, 0.8161405324935913, 0.813498854637146, 0.8235371708869934, 0.8252542614936829, 0.8255184292793274, 0.8448025584220886, 0.8368775844573975, 0.82683926820755, 0.8437458872795105, 0.8392550349235535, 0.8515387773513794, 0.8389908671379089, 0.8407079577445984, 0.8602562546730042, 0.8518029451370239, 0.8578787446022034], "val_loss": [1.404036045074463, 1.1159683295658656, 0.6749439069202968, 0.6889595985412598, 0.5784133502415248, 0.5928973981312343, 0.583188670022147, 0.5608362129756382, 0.5633894545691354, 0.474192602293832, 0.5162102494921003, 0.500806450843811, 0.49176486900874544, 0.4528155411992754, 0.4324594395501273, 0.43018109457833426, 0.4249459334782192, 0.4154972178595407, 0.46216899156570435, 0.4274958372116089, 0.4036416326250349, 0.3942731193133763, 0.39803773164749146, 0.40060841185706003, 0.38294040305273874, 0.36339306831359863, 0.3944872191974095, 0.3781428337097168, 0.39744051013674053, 0.36639770439692904, 0.3559591940471104, 0.41384512186050415, 0.37042207377297537, 0.35136764390128, 0.3634393385478428, 0.3480409213474819], "val_accuracy": [0.54666668176651, 0.534333348274231, 0.6949999928474426, 0.6996666789054871, 0.7170000076293945, 0.7213333249092102, 0.7379999756813049, 0.7286666631698608, 0.7289999723434448, 0.7973333597183228, 0.750333309173584, 0.7680000066757202, 0.7906666398048401, 0.7896666526794434, 0.8166666626930237, 0.8206666707992554, 0.8220000267028809, 0.8196666836738586, 0.7953333258628845, 0.8159999847412109, 0.8309999704360962, 0.8360000252723694, 0.8320000171661377, 0.8266666531562805, 0.828000009059906, 0.8420000076293945, 0.8416666388511658, 0.8429999947547913, 0.831333339214325, 0.8516666889190674, 0.8546666502952576, 0.8226666450500488, 0.8393333554267883, 0.8543333411216736, 0.8456666469573975, 0.8486666679382324]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [7, 6, 4, 9, 1, 3], [0, 3, 2, 3, 1], [5, 57], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [7, 2, 4, 2, 0, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 3, 3, 0, 3, 2, 3, 2, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.8157142996788025, "mapping_values": [1, 11, 11, 6, 5, 2, 18, 18, 10, 8, 2, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.subtract(tf.math.multiply(grad, tf.math.add(alpha, grad)), tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.pow(tf.math.add(tf.math.add(beta, beta), tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.subtract(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), beta), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, sigma)))", "other_info": {"loss": [2.014055855805454, 1.53181968288273, 1.1312980265618, 0.8812239007423299, 0.7975733782148884, 0.7415181259122648, 0.7070079152185085, 0.699517672402968, 0.6722874227705066, 0.6315900912657705, 0.5943340818564874, 0.61167917035401, 0.5835575523976054, 0.584221208171129, 0.5381015134824502, 0.5459627046907551, 0.5244291151881517, 0.5113195960374635, 0.5078283920736518, 0.5021300050938654, 0.4931312840746347, 0.485695983712164, 0.4651860776255868, 0.4628027528701536, 0.4597545118143593, 0.42701316503737785, 0.44530178743692955, 0.45515863007133067, 0.42724362212149475, 0.4294122744190726, 0.40769674315932497, 0.424391502945761, 0.42516670691858366, 0.39021316443089843, 0.39340793340512553, 0.37934656163893826], "accuracy": [0.3191123902797699, 0.48514068126678467, 0.5762779116630554, 0.6668868064880371, 0.7021529674530029, 0.7189275026321411, 0.7313432693481445, 0.7357020378112793, 0.7464007139205933, 0.7650244235992432, 0.7757231593132019, 0.7652885913848877, 0.7788931727409363, 0.776251494884491, 0.7964601516723633, 0.7927618622779846, 0.8016114234924316, 0.8076872229576111, 0.8068947196006775, 0.8148196935653687, 0.8161405324935913, 0.813498854637146, 0.8235371708869934, 0.8252542614936829, 0.8255184292793274, 0.8448025584220886, 0.8368775844573975, 0.82683926820755, 0.8437458872795105, 0.8392550349235535, 0.8515387773513794, 0.8389908671379089, 0.8407079577445984, 0.8602562546730042, 0.8518029451370239, 0.8578787446022034], "val_loss": [1.404036045074463, 1.1159683295658656, 0.6749439069202968, 0.6889595985412598, 0.5784133502415248, 0.5928973981312343, 0.583188670022147, 0.5608362129756382, 0.5633894545691354, 0.474192602293832, 0.5162102494921003, 0.500806450843811, 0.49176486900874544, 0.4528155411992754, 0.4324594395501273, 0.43018109457833426, 0.4249459334782192, 0.4154972178595407, 0.46216899156570435, 0.4274958372116089, 0.4036416326250349, 0.3942731193133763, 0.39803773164749146, 0.40060841185706003, 0.38294040305273874, 0.36339306831359863, 0.3944872191974095, 0.3781428337097168, 0.39744051013674053, 0.36639770439692904, 0.3559591940471104, 0.41384512186050415, 0.37042207377297537, 0.35136764390128, 0.3634393385478428, 0.3480409213474819], "val_accuracy": [0.54666668176651, 0.534333348274231, 0.6949999928474426, 0.6996666789054871, 0.7170000076293945, 0.7213333249092102, 0.7379999756813049, 0.7286666631698608, 0.7289999723434448, 0.7973333597183228, 0.750333309173584, 0.7680000066757202, 0.7906666398048401, 0.7896666526794434, 0.8166666626930237, 0.8206666707992554, 0.8220000267028809, 0.8196666836738586, 0.7953333258628845, 0.8159999847412109, 0.8309999704360962, 0.8360000252723694, 0.8320000171661377, 0.8266666531562805, 0.828000009059906, 0.8420000076293945, 0.8416666388511658, 0.8429999947547913, 0.831333339214325, 0.8516666889190674, 0.8546666502952576, 0.8226666450500488, 0.8393333554267883, 0.8543333411216736, 0.8456666469573975, 0.8486666679382324]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 1, 0], [6, 6, 4, 9], [1, 0, 0, 3, 1, 0], [48, 57, 47], [1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [7, 0, 6, 6, 0, 9, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 2, 3, 3, 2, 3, 2, 0], [64, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [48, 38]], "fitness": -0.8091428279876709, "mapping_values": [1, 3, 3, 1, 2, 1, 9, 9, 5, 4, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, alpha), tf.math.negative(tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.negative(tf.math.add(beta, grad)))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0685267007078525, 1.9251343376994559, 1.4253196376048027, 1.1150988815105067, 0.8981336265696102, 0.7663237830399364, 0.7377974666372629, 0.6723714447953619, 0.668189636499906, 0.6218978137136089, 0.6292571443387813, 0.5917555448905336, 0.5851449436279194, 0.5517374621705451, 0.5210888525199235, 0.5476313349971084, 0.49638082387188814, 0.4988471296060008, 0.470687225490529, 0.4766897162536447, 0.4602967891844587, 0.48661905897134455, 0.46069868167771516, 0.4465890401437251, 0.4379750560846595, 0.43004225387139927, 0.42711909103702167, 0.42034731989350255, 0.40789436015470576, 0.4128867056131709], "accuracy": [0.31026285886764526, 0.36388853192329407, 0.5342755317687988, 0.5892220139503479, 0.6720380187034607, 0.7107383608818054, 0.715889573097229, 0.7528728246688843, 0.7449478507041931, 0.7625148296356201, 0.757099449634552, 0.770439863204956, 0.7810064554214478, 0.789988100528717, 0.8041210174560547, 0.7960638999938965, 0.81548011302948, 0.8168009519577026, 0.8271034359931946, 0.8259146809577942, 0.8294808864593506, 0.8113855719566345, 0.8222163319587708, 0.8313300609588623, 0.8339717388153076, 0.8380662798881531, 0.8370096683502197, 0.837141752243042, 0.8491612672805786, 0.8449346423149109], "val_loss": [1.6667591163090296, 0.9704946449824742, 1.1162679876599992, 0.6817693540028164, 0.5876743623188564, 0.5936775718416486, 0.5490557125636509, 0.590408478464399, 0.5227857828140259, 0.5256294693265643, 0.47766973291124615, 0.47484023230416433, 0.4613739422389439, 0.45181464297430857, 0.5264205421720233, 0.42086935894829886, 0.42364093235560824, 0.38749236719948904, 0.39503735303878784, 0.41470813751220703, 0.39821551527295795, 0.40859998975481304, 0.373575644833701, 0.3674011060169765, 0.3617124472345625, 0.36266638551439556, 0.3903832861355373, 0.3742159349577768, 0.39849417550223215, 0.3692356433187212], "val_accuracy": [0.42533332109451294, 0.6013333201408386, 0.4909999966621399, 0.706333339214325, 0.7250000238418579, 0.7070000171661377, 0.7540000081062317, 0.7419999837875366, 0.7519999742507935, 0.7590000033378601, 0.7696666717529297, 0.7933333516120911, 0.7973333597183228, 0.7929999828338623, 0.7630000114440918, 0.8216666579246521, 0.8149999976158142, 0.8326666951179504, 0.828000009059906, 0.8143333196640015, 0.8253333568572998, 0.8270000219345093, 0.8443333506584167, 0.8399999737739563, 0.8456666469573975, 0.8443333506584167, 0.8396666646003723, 0.8456666469573975, 0.824999988079071, 0.8450000286102295]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 3, 2, 3], [48, 57], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1], [7, 2, 6, 4, 0, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 2, 2, 3, 2, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.795714259147644, "mapping_values": [1, 3, 3, 1, 2, 1, 18, 18, 9, 9, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, alpha), tf.math.add(tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, grad), tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(beta, tf.math.pow(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), grad))))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.078884725242542, 1.3634061808473383, 1.145894957059536, 0.9332455926961147, 0.8648338003826809, 0.8143175524444061, 0.7813383417909864, 0.729493263265035, 0.7011389844075264, 0.7005524878504411, 0.6851206686140571, 0.6534291762229301, 0.6666829135786069, 0.6423552478655628, 0.6312392538234054, 0.6181524555366021, 0.6129223931309664, 0.6056002043871564, 0.5874764827169746, 0.5821912711826471, 0.570443945939688, 0.553206895407338, 0.5670212755003594, 0.554028158788715, 0.5544688953400414, 0.5524092358668026, 0.5413214048815284, 0.5266622887894052, 0.5489109139148948, 0.5180445866514868, 0.5178292781653863], "accuracy": [0.3225465714931488, 0.5266147255897522, 0.5909391045570374, 0.6642451286315918, 0.6781138777732849, 0.6917183995246887, 0.7028133869171143, 0.7281733155250549, 0.7310791015625, 0.7388719916343689, 0.7454761862754822, 0.7536653280258179, 0.7445515990257263, 0.7588165402412415, 0.763967752456665, 0.772288978099823, 0.7658169269561768, 0.7738739848136902, 0.7786290049552917, 0.7827235460281372, 0.7861577272415161, 0.7930260300636292, 0.7843085527420044, 0.791969358921051, 0.7891955971717834, 0.7902522683143616, 0.8038568496704102, 0.8029322624206543, 0.7915731072425842, 0.8082155585289001, 0.8037247657775879], "val_loss": [1.16412809916905, 1.010185922895159, 0.6779768637248448, 0.6628516401563372, 0.6195799452917916, 0.5579894610813686, 0.5565187420163836, 0.5385375022888184, 0.5354210989815849, 0.5101531233106341, 0.5556093454360962, 0.5018680095672607, 0.5014146055494036, 0.4869793483189174, 0.47953249726976666, 0.4772860492978777, 0.46324452332087923, 0.4656855378832136, 0.4588429161480495, 0.461868303162711, 0.4435707756451198, 0.4686673028128488, 0.4764219011579241, 0.43983096735818045, 0.45703535420554026, 0.42329307964869906, 0.43866085154669626, 0.418143630027771, 0.4172345995903015, 0.41442759547914776, 0.4409861479486738], "val_accuracy": [0.5423333048820496, 0.6320000290870667, 0.7006666660308838, 0.6943333148956299, 0.731333315372467, 0.7570000290870667, 0.7486666440963745, 0.7720000147819519, 0.7419999837875366, 0.7760000228881836, 0.7229999899864197, 0.7870000004768372, 0.7720000147819519, 0.7916666865348816, 0.784333348274231, 0.7916666865348816, 0.8029999732971191, 0.8003333210945129, 0.8063333630561829, 0.8029999732971191, 0.8109999895095825, 0.7933333516120911, 0.7816666960716248, 0.8173333406448364, 0.7979999780654907, 0.8336666822433472, 0.8109999895095825, 0.8256666660308838, 0.8270000219345093, 0.8199999928474426, 0.7946666479110718]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0], [0, 6, 4, 9], [0, 1, 1, 3], [49, 57], [1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0], [7, 2, 5, 6, 0, 2, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 74, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [56, 38]], "fitness": -0.40457141399383545, "mapping_values": [1, 2, 2, 1, 1, 1, 27, 27, 17, 10, 4, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.square(tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, grad))), tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))), grad))))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.subtract(beta, grad), tf.math.add(beta, tf.math.sqrt(grad))))))))), tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.8236265462450363, 2.3056536060928305, 2.3037571732898066, 2.3027687605582114, 2.3021721961460155, 2.2917806024580365, 2.1981990830836247, 1.9817816778936752, 3.501903124142789, 2.3045551014803087, 2.268844680385567, 2.324003258779332, 2.3040325558810673], "accuracy": [0.22691850364208221, 0.09760929644107819, 0.09747721254825592, 0.10421344637870789, 0.1018359512090683, 0.15361246466636658, 0.21714437007904053, 0.313300758600235, 0.19640734791755676, 0.10051512718200684, 0.13578127324581146, 0.10527011007070541, 0.09906221181154251], "val_loss": [1.978050776890346, 1.9743830817086356, 1.973696572440011, 1.9733472551618303, 1.9709241049630302, 1.918586594717843, 1.8753557886396135, 1.0713608264923096, 1.976167815072196, 1.9699999945504325, 1.945408548627581, 1.9739083562578474, 1.9737358093261719], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.10400000214576721, 0.09833333641290665, 0.2253333330154419, 0.2706666588783264, 0.2226666659116745, 0.5726666450500488, 0.10000000149011612, 0.10133333504199982, 0.19699999690055847, 0.10433333367109299, 0.10400000214576721]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 3, 2, 3], [48, 57], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1], [6, 2, 6, 6, 0, 1, 3, 4, 0, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [6, 1, 9, 8, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.1679999977350235, "mapping_values": [1, 7, 7, 4, 3, 2, 17, 17, 9, 8, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta)))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.subtract(sigma, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [4.792324143220216e+22, 5.427866616358117e+22, 5.497977094295536e+22, 5.5038891182980495e+22, 5.434400189991258e+22, 5.2093278960487565e+22], "accuracy": [0.10659094154834747, 0.10751552134752274, 0.10355303436517715, 0.10632677376270294, 0.10328886657953262, 0.10659094154834747], "val_loss": [4.149578609073755e+22, 4.159505443372405e+22, 4.157760620202487e+22, 4.15522972588618e+22, 4.086415881648434e+22, 4.110026839077711e+22], "val_accuracy": [0.09466666728258133, 0.09399999678134918, 0.09233333170413971, 0.09200000017881393, 0.09066666662693024, 0.09033333510160446]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 0, 1, 0], [6, 6, 4, 9], [1, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1], [2, 2, 6, 6, 0, 1, 3, 4, 2, 1, 4, 8, 8, 1, 1, 8, 9, 0], [3, 1, 1, 3, 1, 0, 2, 3, 3, 0, 2, 0, 0], [66, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 29, 29, 16, 13, 4, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.subtract(alpha, tf.math.add(beta, alpha)), tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), alpha))), tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, beta)), tf.math.add(beta, grad)))), grad), tf.math.sqrt(tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))), tf.math.sqrt(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))))))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0734381154179573, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 1], [1, 1, 0, 1, 0, 1, 0], [7, 6, 4, 9, 0], [0, 3, 2, 3], [48, 57, 47], [1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [2, 2, 6, 6, 0, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 30, 43, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 4, 9, 2, 9], [3, 2, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 6, 4, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, alpha), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09549596905708313, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0], [2, 6, 9, 9, 0], [0, 1, 1, 3], [48, 57], [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [7, 2, 4, 2, 0, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 2, 3, 2, 2, 3, 2, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 20, 20, 10, 10, 1, 1, 1, 0, 1, 0, 3, 3, 0, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(beta, alpha)), tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), beta)))), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.subtract(beta, beta))))))), tf.math.add(beta, grad)), tf.math.add(beta, beta))), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3023945233762353, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9, 0], [0, 3, 2, 3], [48, 57], [1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [2, 2, 6, 6, 0, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [1, 3, 9, 2, 9], [3, 1, 3, 1], [35, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 1, 2, 0, 6, 4, 3, 1, 0, 7, 5, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), alpha)", "other_info": {"loss": [2.3027171484625115, 2.302884739435045, 2.302950918745324, 2.302957764485603, 2.3029834641567577, 2.3029962124810037, 2.3031320199990364, 2.303050331451543, 2.3030288435165454, 2.303000717556094], "accuracy": [0.09206181764602661, 0.09642054885625839, 0.09668471664190292, 0.09034473448991776, 0.09206181764602661, 0.09628847241401672, 0.09576013684272766, 0.08902391046285629, 0.09311848133802414, 0.09351472556591034], "val_loss": [1.9736209596906389, 1.9736685752868652, 1.9736527715410506, 1.97362334387643, 1.9736155101231165, 1.973569665636335, 1.9736031804765974, 1.9736635344369071, 1.9735797473362513, 1.9735562460763114], "val_accuracy": [0.09833333641290665, 0.0976666659116745, 0.10000000149011612, 0.10233332961797714, 0.10400000214576721, 0.10233332961797714, 0.10400000214576721, 0.09733333438634872, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0], [6, 6, 4, 9], [1, 0, 0, 3, 1, 0], [48, 57, 47], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 6, 8, 8, 0, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 1, 1, 1, 3, 2, 3, 3, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 8, 8, 5, 3, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta)))), tf.math.negative(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0734381154179573, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 0, 2, 3], [5, 57], [1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [7, 2, 4, 2, 1, 1, 4, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 2, 2, 3, 3, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [5, 3, 9, 4, 9], [3, 3, 3, 1], [4, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 2, 19, 19, 9, 10, 3, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, alpha), tf.math.add(tf.math.pow(tf.math.add(tf.math.add(beta, grad), tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.pow(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), grad)))), tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.math.pow(sigma, sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0], [2, 6, 9, 9, 0], [0, 1, 1, 3], [48, 57], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [6, 2, 4, 2, 0, 1, 6, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 2, 3, 0, 2, 2, 3, 2, 0, 0], [69, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [6, 2, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.08914285898208618, "mapping_values": [1, 3, 3, 1, 2, 1, 25, 25, 14, 11, 4, 1, 1, 0, 1, 0, 7, 4, 3, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), grad)))), tf.math.add(beta, tf.math.add(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), beta))))))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), beta), tf.math.sqrt(tf.math.subtract(tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, sigma)), sigma)", "other_info": {"loss": [1.2013162570637474e+22, 1.2556780485825213e+22, 1.218750820705169e+22, 1.0924369803011965e+22, 1.0853493905392998e+22, 1.0940156384818286e+22, 9.927017163473168e+21, 1.0103742876447238e+22, 9.363209835562605e+21, 9.82957298296371e+21, 9.582834276201807e+21, 1.0572833561283748e+22, 1.187061978230917e+22, 1.2293561320283302e+22, 1.282735591998784e+22, 1.2666294146927096e+22, 1.2987328228369147e+22], "accuracy": [0.0956280529499054, 0.09074098616838455, 0.09470347315073013, 0.09945846349000931, 0.09998679161071777, 0.09840179979801178, 0.09826971590518951, 0.09615638852119446, 0.09536388516426086, 0.09681680053472519, 0.09615638852119446, 0.09391097724437714, 0.09602430462837219, 0.09034473448991776, 0.09206181764602661, 0.08717474341392517, 0.09034473448991776], "val_loss": [6.676798116759247e+21, 6.258656423227875e+21, 5.893452613202115e+21, 5.528830893428195e+21, 5.182635973215348e+21, 4.855862183024161e+21, 4.5716086461862615e+21, 4.3787477824864985e+21, 4.3806363991588046e+21, 4.880618952704348e+21, 5.685656687238085e+21, 6.628770926118748e+21, 7.284982385680712e+21, 7.619253865037251e+21, 7.793042627686476e+21, 7.936480024018412e+21, 8.072964666739908e+21], "val_accuracy": [0.06400000303983688, 0.06733333319425583, 0.07199999690055847, 0.07866666465997696, 0.08566666394472122, 0.08966666460037231, 0.09200000017881393, 0.09300000220537186, 0.09566666930913925, 0.1003333330154419, 0.10766666382551193, 0.109333336353302, 0.10733333230018616, 0.10466666519641876, 0.10366666316986084, 0.10466666519641876, 0.10300000011920929]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [2, 1, 2, 3], [48, 57, 47], [1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1], [7, 2, 6, 4, 0, 0, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [3, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.06942857056856155, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 10, 7, 2, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, alpha), tf.math.add(tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, grad), tf.math.negative(tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.add(beta, grad), grad)), tf.math.add(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(sigma, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.302631990359428, 2.3025038243914637, 2.302142991649319, 2.300756617244901, 2.3020750178857456, 2.3013087303694197, 2.300522035721696, 2.300627946034871, 2.301222857766384, 2.30131307474579, 2.3001206739624935, 2.3017694576305248, 2.3007314234456335, 2.301695010980453, 2.300711123068823, 2.30025182776778, 2.299786163815544, 2.3003697543332544, 2.3017352221900476, 2.300578468873469, 2.300742814852939, 2.300187589029169, 2.3011518909379776, 2.300800684499482, 2.3001936922739716, 2.300684641349459, 2.299301619385495, 2.300436483665842, 2.3001229085658976, 2.300715268264436, 2.298469808863422, 2.3008645520848274, 2.3004823891147566, 2.2997428363167205, 2.300288011558209, 2.3002847075194666, 2.2984821753904345, 2.3003384088874728, 2.299295153112113, 2.3007344571968757, 2.2997843761013295, 2.3000031674873433, 2.299489027379038, 2.3000008010939834, 2.2988197693278716, 2.2994150573141963, 2.2999406924667833, 2.299899835880044, 2.2986044750206065, 2.299939947577988, 2.2998294697430124, 2.2996102912377814, 2.2994145225335454, 2.2988922871839197, 2.300683985454311, 2.2993263938817146, 2.299926877856302, 2.2987779189472453], "accuracy": [0.09470347315073013, 0.09100515395402908, 0.08625016361474991, 0.09232597798109055, 0.08981640636920929, 0.0956280529499054, 0.09285431355237961, 0.09853387624025345, 0.1002509593963623, 0.0952318087220192, 0.09259014576673508, 0.08611807972192764, 0.09047681838274002, 0.09457138925790787, 0.09919429570436478, 0.09496764093637466, 0.0944393053650856, 0.09893012791872025, 0.09140139818191528, 0.09576013684272766, 0.09496764093637466, 0.09694888442754745, 0.09536388516426086, 0.08875974267721176, 0.09536388516426086, 0.09417514503002167, 0.1014397069811821, 0.10408136248588562, 0.09800554811954498, 0.09126931428909302, 0.09509972482919693, 0.09232597798109055, 0.0940430611371994, 0.09549596905708313, 0.09840179979801178, 0.09377889335155487, 0.09959053993225098, 0.09655263274908066, 0.09377889335155487, 0.09774138033390045, 0.09457138925790787, 0.09179764986038208, 0.10196803510189056, 0.09681680053472519, 0.10289261490106583, 0.10130762308835983, 0.09840179979801178, 0.09853387624025345, 0.10091137140989304, 0.09959053993225098, 0.10091137140989304, 0.09628847241401672, 0.10381719470024109, 0.09721305221319199, 0.09853387624025345, 0.1006472036242485, 0.10038304328918457, 0.1022322028875351], "val_loss": [1.9704386847359794, 1.9703066008431571, 1.9701709747314453, 1.9700745855058943, 1.96997104372297, 1.9698661395481654, 1.9698055812290736, 1.969742979322161, 1.9696521077837263, 1.9695820808410645, 1.969550677708217, 1.9694978169032507, 1.9694484301975794, 1.9693920271737235, 1.9693664823259627, 1.9693252018519811, 1.96928494317191, 1.9692572866167342, 1.9692093304225378, 1.9691723414829798, 1.969132763998849, 1.9691155297415597, 1.9690882819039481, 1.969064440046038, 1.96905061176845, 1.9690298352922713, 1.9690335137503487, 1.969029154096331, 1.9690539496285575, 1.9690735680716378, 1.9690946170261927, 1.969090461730957, 1.9691030638558524, 1.9691301073346819, 1.969123227255685, 1.969111101967948, 1.9691175733293806, 1.9691034044538225, 1.9691100120544434, 1.9691177095685686, 1.969127791268485, 1.969125407082694, 1.9691333770751953, 1.9691336495535714, 1.969149385179792, 1.9691592625209264, 1.969142232622419, 1.9691381454467773, 1.9691295623779297, 1.9691155297415597, 1.969109330858503, 1.9690920284816198, 1.969092505318778, 1.969092845916748, 1.969090257372175, 1.969081197466169, 1.9690704345703125, 1.969078608921596], "val_accuracy": [0.03933333232998848, 0.041333332657814026, 0.043666668236255646, 0.04500000178813934, 0.04600000008940697, 0.045666664838790894, 0.047333333641290665, 0.04699999839067459, 0.04766666516661644, 0.04899999871850014, 0.049666665494441986, 0.05066666752099991, 0.052666667848825455, 0.05400000140070915, 0.054666668176651, 0.055666666477918625, 0.055666666477918625, 0.05700000002980232, 0.05700000002980232, 0.05700000002980232, 0.05700000002980232, 0.0573333315551281, 0.058666665107011795, 0.06066666543483734, 0.060333333909511566, 0.060333333909511566, 0.06066666543483734, 0.061666667461395264, 0.06233333423733711, 0.06199999898672104, 0.06266666948795319, 0.06366666406393051, 0.06366666406393051, 0.06433333456516266, 0.06466666609048843, 0.06666667014360428, 0.06733333319425583, 0.0676666647195816, 0.06866666674613953, 0.06966666877269745, 0.07133333384990692, 0.07266666740179062, 0.07400000095367432, 0.07500000298023224, 0.07433333247900009, 0.07400000095367432, 0.07466666400432587, 0.07633333653211594, 0.07633333653211594, 0.07500000298023224, 0.07566666603088379, 0.07566666603088379, 0.07733333110809326, 0.07666666805744171, 0.07633333653211594, 0.07666666805744171, 0.07699999958276749, 0.07633333653211594]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0], [7, 6, 4, 9], [2, 1, 2, 3], [5, 57], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1], [7, 5, 5, 6, 0, 2, 3, 4, 2, 2, 4, 9, 8, 1, 1, 8, 9, 0], [3, 1, 1, 1, 1, 3, 2, 3, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0, 0], [0, 0, 1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 7, 7, 4, 3, 1, 20, 20, 12, 8, 1, 6, 5, 3, 2, 0, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.square(grad)), tf.math.square(tf.math.divide_no_nan(tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, alpha))), tf.math.pow(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha))), alpha), tf.math.add(beta, grad)), tf.math.add(beta, beta))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, sigma))))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3027102813083324, 2.302744212230561, 2.3025613739631905, 2.301241361768947, 2.302710925614782, 2.3021578416533366], "accuracy": [0.09470347315073013, 0.09021265059709549, 0.08545766770839691, 0.09179764986038208, 0.08796724677085876, 0.09219389408826828], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [1, 0, 0, 3, 1, 0], [48, 57], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [7, 2, 6, 6, 0, 1, 3, 4, 1, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 1, 3, 1, 3, 2, 3, 3, 0], [42, 30, 43, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 20, 20, 10, 10, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, alpha))))))), tf.math.pow(tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), beta)), tf.math.add(beta, grad)), tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3027102813083324, 2.302744212230561, 2.3025613739631905, 2.301241361768947, 2.302710925614782, 2.3021578416533366], "accuracy": [0.09470347315073013, 0.09021265059709549, 0.08545766770839691, 0.09179764986038208, 0.08796724677085876, 0.09219389408826828], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 3, 2, 3], [48, 57], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1], [0, 2, 6, 4, 0, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 2, 2, 2, 3, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 3, 2, 9], [3, 3, 3, 1], [60, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 3, 3, 1, 2, 1, 2, 2, 1, 1, 0, 5, 4, 2, 2, 0, 6, 3, 3, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.multiply(sigma, sigma)))", "other_info": {"loss": [2.3027102813083324, 2.302744212230561, 2.3025613739631905, 2.301241361768947, 2.302710925614782, 2.3021578416533366], "accuracy": [0.09470347315073013, 0.09021265059709549, 0.08545766770839691, 0.09179764986038208, 0.08796724677085876, 0.09219389408826828], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 3, 2, 3], [48, 57], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], [7, 2, 5, 4, 0, 3, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 3, 2, 2, 3, 2, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0, 0], [0, 0, 1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 3, 3, 1, 2, 1, 15, 15, 8, 7, 0, 6, 5, 3, 2, 0, 4, 3, 1, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, alpha), tf.math.add(tf.math.square(tf.math.pow(tf.math.add(beta, grad), tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)))))))), tf.math.add(beta, tf.math.pow(beta, tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, sigma))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3027102813083324, 2.302744212230561, 2.3025613739631905, 2.301241361768947, 2.302710925614782, 2.3021578416533366], "accuracy": [0.09470347315073013, 0.09021265059709549, 0.08545766770839691, 0.09179764986038208, 0.08796724677085876, 0.09219389408826828], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 3, 2, 3], [48, 57], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], [7, 2, 6, 6, 0, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 3, 2, 2, 3, 2, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.03771428391337395, "mapping_values": [1, 3, 3, 1, 2, 1, 20, 20, 10, 10, 1, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.negative(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), beta)))))), tf.math.add(beta, grad)))))), tf.math.add(beta, beta)), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, sigma))", "other_info": {"loss": [2.3033071186217837, 2.3048974647655496, 2.306909350513735, 2.3073835534473783, 2.311885416169192, 2.3149692538612476], "accuracy": [0.09391097724437714, 0.0878351628780365, 0.08083476126194, 0.08334434032440186, 0.07409853488206863, 0.07898560166358948], "val_loss": [1.971804482596261, 1.9733191217694963, 1.9752330098833357, 1.977187156677246, 1.9795748165675573, 1.982207911355155], "val_accuracy": [0.03266666829586029, 0.027666667476296425, 0.02566666714847088, 0.027666667476296425, 0.026333333924412727, 0.03033333271741867]}}]