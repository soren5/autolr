[{"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 2, 2, 2, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 0, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 7, 9, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.7965714335441589, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 6, 6, 4, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)))), tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), sigma), sigma))", "other_info": {"loss": [2.0781811297986925, 1.4745882616980264, 1.171473143296298, 0.8748542656043202, 0.8333874299085026, 0.8027895958573826, 0.7269584764547478, 0.7279310703529516, 0.6963088356461334, 0.6715822529090536, 0.6612845884810475, 0.6386000121258599, 0.617681444620239, 0.6102913811206503, 0.6065470145803952, 0.5926689487154836, 0.5909478832402832, 0.574404735205243, 0.5611415441010087, 0.5452135033485298, 0.5374504733102953, 0.5357358181371098, 0.54419199223878, 0.5268724638362996, 0.5155363146576348], "accuracy": [0.31264033913612366, 0.4823669195175171, 0.5857878923416138, 0.6723021864891052, 0.6939638257026672, 0.7057191729545593, 0.7202483415603638, 0.726192057132721, 0.7430986762046814, 0.7553823590278625, 0.7485140562057495, 0.7563069462776184, 0.7696473598480225, 0.7631752490997314, 0.7717606425285339, 0.7765156626701355, 0.7795535326004028, 0.7852331399917603, 0.7889314293861389, 0.7977809906005859, 0.7969884872436523, 0.7991018295288086, 0.7975168228149414, 0.8031964302062988, 0.8094043135643005], "val_loss": [1.1735435553959437, 1.0645513193947929, 0.7650814056396484, 0.6787148714065552, 0.6954798187528338, 0.5802830457687378, 0.599526081766401, 0.5581506661006382, 0.5491551160812378, 0.5030768939426967, 0.5231940235410418, 0.48319556031908306, 0.5031706435339791, 0.48138560567583355, 0.49090210029057096, 0.4897379193987165, 0.46043134587151663, 0.47249179227011545, 0.4505927733012608, 0.4359144227845328, 0.44029851470674786, 0.4759882688522339, 0.44588954959596905, 0.4387902447155544, 0.4455309084483555], "val_accuracy": [0.5586666464805603, 0.5603333115577698, 0.624666690826416, 0.7089999914169312, 0.6986666917800903, 0.7453333139419556, 0.7046666741371155, 0.7350000143051147, 0.7433333396911621, 0.7716666460037231, 0.7573333382606506, 0.7943333387374878, 0.7773333191871643, 0.7983333468437195, 0.7870000004768372, 0.7753333449363708, 0.7983333468437195, 0.7873333096504211, 0.8066666722297668, 0.8143333196640015, 0.8096666932106018, 0.7940000295639038, 0.8116666674613953, 0.8100000023841858, 0.7979999780654907]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 2, 2, 2, 2, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 0, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 7, 2, 9], [1, 3, 3, 1], [41, 38]], "fitness": -0.7888571619987488, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 6, 7, 4, 1, 1, 0, 1, 0, 8, 5, 3, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.math.add(alpha, sigma), sigma), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.170402454552067, 1.7450401609473933, 1.3964761664067213, 1.080009936506974, 0.9108182665158918, 0.846828335445665, 0.7929201474546866, 0.7670517104287048, 0.7146932636631824, 0.6862547932646105, 0.6594485502122747, 0.6155112755533223, 0.6172909435185427, 0.6001978501384253, 0.5951984824678918, 0.5635313852792875, 0.5615524084277361], "accuracy": [0.2806762754917145, 0.428609162569046, 0.5213313698768616, 0.6160348653793335, 0.6601505875587463, 0.6840575933456421, 0.7036058902740479, 0.7103421092033386, 0.7316074371337891, 0.7417778372764587, 0.7499669790267944, 0.7646281719207764, 0.7691190242767334, 0.7666094303131104, 0.7701756954193115, 0.7872143983840942, 0.7902522683143616], "val_loss": [1.7405041285923548, 1.366649900163923, 0.9569029467446464, 0.7935755593436105, 0.6619266271591187, 0.7019327538354057, 0.6580875430788312, 0.5661072731018066, 0.5802925995418003, 0.5028389181409564, 0.5181573799678257, 0.47373450653893606, 0.46559109006609234, 0.502311110496521, 0.4769352844783238, 0.46006691455841064, 0.46949946880340576], "val_accuracy": [0.2866666615009308, 0.46966665983200073, 0.6486666798591614, 0.6316666603088379, 0.6953333616256714, 0.6923333406448364, 0.7103333473205566, 0.7360000014305115, 0.7603333592414856, 0.7703333497047424, 0.7593333125114441, 0.8016666769981384, 0.7919999957084656, 0.7556666731834412, 0.7983333468437195, 0.796999990940094, 0.7803333401679993]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 0], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1], [7, 1, 5, 2, 2, 9, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 0, 3, 0, 0, 2, 3, 3, 0], [74, 75, 8, 84, 1, 78], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [1, 3, 3, 1], [41, 38]], "fitness": -0.6079999804496765, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 2, 6, 4, 3, 1, 0, 4, 3, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [1.905074315001196, 1.301100801687829, 0.9357274192325222, 0.7920482853982804, 0.7492674930992222, 0.6725034461974342, 0.6411631617170078, 0.6507248227008345, 0.6324550421277939, 0.6562612925884573, 0.6576601764497945, 0.6640112102385982, 0.6625826090097963, 0.6856029419504719], "accuracy": [0.3467177450656891, 0.5766741633415222, 0.6509047746658325, 0.7129837274551392, 0.7219653725624084, 0.7456082701683044, 0.7552502751350403, 0.7656848430633545, 0.7642319202423096, 0.7541936039924622, 0.754589855670929, 0.752740740776062, 0.752212405204773, 0.7489103078842163], "val_loss": [1.1437809126717704, 0.7395717586789813, 0.566900338445391, 0.5368050677435738, 0.48974287509918213, 0.4776477473122733, 0.4645204373768398, 0.45076832601002287, 0.4713292121887207, 0.5015159164156232, 0.4926403079714094, 0.46723287446158274, 0.5178405727658953, 0.49998792580195833], "val_accuracy": [0.6493333578109741, 0.6713333129882812, 0.753333330154419, 0.7586666941642761, 0.7986666560173035, 0.7873333096504211, 0.7883333563804626, 0.8003333210945129, 0.8019999861717224, 0.8003333210945129, 0.7979999780654907, 0.8003333210945129, 0.7963333129882812, 0.7896666526794434]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 5, 2, 2, 2, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 0, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 7, 9, 9], [3, 3, 3, 1], [89, 38]], "fitness": -0.32828572392463684, "mapping_values": [1, 5, 5, 4, 1, 2, 6, 6, 3, 3, 2, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.square(tf.math.add(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), sigma), sigma))", "other_info": {"loss": [2.2257896535479396, 2.434665007976068, 2.30295406709242, 2.3053575018692674, 2.194089534937383, 2.3089212789637554], "accuracy": [0.2378813922405243, 0.12402588874101639, 0.09985470771789551, 0.1138555034995079, 0.21820102632045746, 0.10117553919553757], "val_loss": [1.9265668051583427, 1.9751746313912528, 1.971071652003697, 1.966235842023577, 1.9819944245474679, 1.9740470477512904], "val_accuracy": [0.33399999141693115, 0.09833333641290665, 0.09600000083446503, 0.13633333146572113, 0.10233332961797714, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 0], [0, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [7, 2, 2, 2, 2, 2, 2, 9, 2, 3, 2, 9, 8, 1, 1, 8, 9, 0], [1, 1, 1, 0, 3, 3, 2, 3, 2, 0, 0, 3], [35, 3, 4, 96, 67, 78, 69], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [1, 3], [], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.14714285731315613, "mapping_values": [1, 1, 1, 0, 1, 0, 27, 27, 17, 10, 5, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, alpha), tf.math.add(tf.math.add(beta, alpha), tf.math.add(tf.math.add(beta, alpha), tf.math.add(tf.math.add(beta, tf.math.add(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)), beta)))), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)))))))), tf.math.add(beta, tf.math.sqrt(tf.math.subtract(beta, tf.math.add(beta, tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.sqrt(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [4.405553244108443, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.227314755320549, 0.11900673806667328, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [5.9446074622018, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.2016666680574417, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 2, 2, 2, 9, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 1, 0, 3, 0, 0, 2, 3, 3, 0, 2, 0], [15, 40, 43, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 7, 2, 8], [1, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 9, 5, 4, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.math.add(alpha, sigma), sigma), tf.math.sqrt(alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 5, 2, 2, 2, 2, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 0, 2, 3, 3, 0], [15, 16, 21, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 7, 2, 9, 9], [1, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 3, 1, 1, 0, 1, 0, 8, 6, 2, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(beta, grad), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), alpha), sigma), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [12.233332201568851, 2.3062239905641913, 2.3063835441759153, 2.303946573122413, 2.302919287612929, 2.3050443517722474, 2.3057357578103757], "accuracy": [0.09734513610601425, 0.09628847241401672, 0.09840179979801178, 0.09998679161071777, 0.10276053100824356, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.975416932787214, 1.977057593209403, 1.9756150245666504, 1.973823138645717, 1.975008487701416, 1.9766579355512346, 1.9755123683384486], "val_accuracy": [0.09700000286102295, 0.10000000149011612, 0.09733333438634872, 0.09733333438634872, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1], [7, 2, 5, 2, 2, 2, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 2, 1, 0, 3, 3, 2, 3, 2, 0], [42, 16, 43, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 7, 2, 9], [3, 3, 0, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 1, 1, 0, 0, 0, 0, 8, 5, 3, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), alpha)))), tf.math.add(beta, tf.math.add(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.math.add(sigma, sigma), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [3427.2439575185235, 61312.399395101376, 280012.8318542795, 774733.8389578655, 1671141.3754788006, 3072373.7778034606], "accuracy": [0.09879804402589798, 0.09893012791872025, 0.10157178342342377, 0.1002509593963623, 0.1010434553027153, 0.09734513610601425], "val_loss": [12472.231863839286, 97010.84151785714, 324657.6339285714, 766444.8214285715, 1493408.4285714286, 2576581.3571428573], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 0], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [7, 2, 2, 2, 2, 2, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 2, 3, 2, 3, 3, 3, 3, 2, 0, 0], [74, 75, 8, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 4, 9, 2, 9], [3, 3, 3, 1], [83, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, grad))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 0], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [5, 4, 4, 2, 2, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 2, 1, 3, 3, 3, 2, 3, 2, 0], [74, 75, 8, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 7, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 3, 3, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(sigma, sigma), sigma))", "other_info": {"loss": [2.3038686989887656, 2.3075405275344596, 2.310738649382142, 2.3194073002651114, 2.3360107307499582, 2.3838116564629117, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08598599582910538, 0.07991018146276474, 0.08030643314123154, 0.07277770340442657, 0.07766477018594742, 0.08228767663240433, 0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9729225976126534, 1.9763947895595007, 1.9810816219874792, 1.9870003291538783, 2.0020253317696706, 2.382411616189139, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.029333332553505898, 0.029666665941476822, 0.03533333167433739, 0.04699999839067459, 0.08866667002439499, 0.10000000149011612, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 2, 2, 2, 2, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 0, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0], [8, 3, 7, 2, 9], [1, 2, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 6, 7, 4, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07898560166358948, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [0, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [7, 2, 2, 2, 2, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 0, 2, 3, 3, 2, 3], [15, 16, 43, 30, 1, 58], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 7, 9, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 25, 25, 14, 11, 4, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, grad), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.pow(tf.math.add(beta, beta), grad), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(grad))))), tf.math.subtract(tf.math.add(beta, beta), grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07898560166358948, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1], [7, 2, 2, 2, 2, 2, 3, 5, 8, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 0, 2, 3, 3, 0], [15, 75, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [4, 3, 0, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 6, 7, 4, 1, 1, 0, 1, 0, 5, 2, 3, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(sigma, tf.math.multiply(sigma, sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [35, 57], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [5, 4, 0, 2, 2, 6, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 1, 2, 0, 2, 0, 3, 3, 0, 5, 0], [74, 75, 8, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 2, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 6, 3, 3, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.add(sigma, sigma)))", "other_info": {"loss": [2.3038686989887656, 2.3075405275344596, 2.310738649382142, 2.3194073002651114, 2.3360107307499582, 2.3838116564629117, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08598599582910538, 0.07991018146276474, 0.08030643314123154, 0.07277770340442657, 0.07766477018594742, 0.08228767663240433, 0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9729225976126534, 1.9763947895595007, 1.9810816219874792, 1.9870003291538783, 2.0020253317696706, 2.382411616189139, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.029333332553505898, 0.029666665941476822, 0.03533333167433739, 0.04699999839067459, 0.08866667002439499, 0.10000000149011612, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0], [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [7, 2, 5, 2, 2, 2, 1, 2, 2, 3, 4, 9, 4, 1, 1, 8, 9, 0], [1, 2, 1, 0, 3, 3, 0, 3, 2, 0, 3, 1], [36, 3, 43, 96, 67, 78, 69], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [1, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 7, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 6, 3, 3, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(sigma, sigma), sigma))", "other_info": {"loss": [2.3287111169799695, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08241976052522659, 0.10421344637870789, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [4.037096568516323, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [4, 1, 2, 2, 2, 2, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 2, 0, 3, 0, 0, 2, 3, 3, 0, 2], [10, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0], [0, 3, 7, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.09799999743700027, "mapping_values": [1, 1, 1, 0, 1, 0, 23, 23, 12, 11, 5, 1, 1, 0, 1, 0, 8, 4, 4, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(beta, beta), tf.math.add(beta, grad)))), tf.math.add(beta, grad))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.math.add(sigma, sigma), sigma), alpha))", "other_info": {"loss": [2.304457572315505, 2.3110354353864793, 2.3204380558970237, 2.3558447978531505, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08519349992275238, 0.07713644206523895, 0.07938185334205627, 0.07687227427959442, 0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9743851934160506, 1.9814184052603585, 1.9919235365731376, 2.1093859672546387, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.028333334252238274, 0.03433333337306976, 0.0676666647195816, 0.10000000149011612, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 0], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [5, 4, 4, 2, 2, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 2, 1, 3, 3, 3, 2, 3, 2, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 6, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.09685714542865753, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, sigma)))", "other_info": {"loss": [5.976161968349168e+21, 6.895151680516453e+21, 6.909428346674028e+21, 6.87408979834901e+21, 6.822985773673175e+21, 6.947937534127514e+21], "accuracy": [0.1010434553027153, 0.09826971590518951, 0.10077928751707077, 0.10236428678035736, 0.10315678268671036, 0.10249637067317963], "val_loss": [5.886021352131267e+21, 5.886021352131267e+21, 5.886021352131267e+21, 5.886021352131267e+21, 5.886021352131267e+21, 5.886021352131267e+21], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 5, 2, 2, 9, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 2, 1, 3, 3, 3, 2, 3, 2, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 2, 9, 2, 9], [1, 3, 3, 1], [29, 38]], "fitness": -0.08971428871154785, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [17.37832562218977, 3.0308252611589817, 13.186635787980494, 13573660024.802933, 2.3145765644479597, 2.305345573162028, 2.303482085549049, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.1002509593963623, 0.0956280529499054, 0.09338264167308807, 0.09919429570436478, 0.09866596013307571, 0.09879804402589798, 0.10408136248588562, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9861677033560616, 1.9851086480276925, 1829.0885184151787, 1.9913160460335868, 1.9774280275617326, 1.9745441164289201, 4429023393500.086, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09966666996479034, 0.07833333313465118, 0.09966666996479034, 0.10000000149011612, 0.10400000214576721, 0.10000000149011612, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1], [5, 4, 4, 2, 2, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 0, 0, 3, 0, 0, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 3, 2, 9], [3, 0, 3, 1], [41, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 5, 5, 4, 1, 2, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.302984121437511, 2.3033002227477866, 2.301620316558967, 2.303186003621134, 2.305817250546652, 2.3038894783756154], "accuracy": [0.08717474341392517, 0.08347642421722412, 0.08730682730674744, 0.08532558381557465, 0.08598599582910538, 0.09074098616838455], "val_loss": [1.9707180431910925, 1.9708914075578963, 1.9710561207362585, 1.9712589127676827, 1.971475533076695, 1.971653733934675], "val_accuracy": [0.03866666555404663, 0.03866666555404663, 0.03799999877810478, 0.03733333200216293, 0.035999998450279236, 0.03500000014901161]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 2, 2, 2, 2, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 0, 2, 0, 3, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [5, 3, 7, 9, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 8, 8, 5, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, beta)), tf.math.square(tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), sigma), sigma))", "other_info": {"loss": [2.3029252049976794, 2.303056660801932, 2.3011864639937745, 2.3024754853627116, 2.304763279539357, 2.3027030161705313], "accuracy": [0.0866464152932167, 0.08400475233793259, 0.08902391046285629, 0.0878351628780365, 0.0866464152932167, 0.09417514503002167], "val_loss": [1.9705918857029505, 1.9705933843340193, 1.970599583217076, 1.970597267150879, 1.97059542792184, 1.9705995150974818], "val_accuracy": [0.03933333232998848, 0.039000000804662704, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]