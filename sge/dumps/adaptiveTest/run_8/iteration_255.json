[{"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [2, 6, 9, 0, 0, 3, 4], [3, 0, 0, 1, 1, 0], [8, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.7962856888771057, "mapping_values": [1, 11, 11, 7, 4, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha))))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.5825788449491602, 2.303685679994381, 2.188984662077887, 1.8429122941526423, 1.5495727551123564, 1.2478619588285846, 0.9438962755800318, 0.9054743263857192, 0.8283689232975374, 0.7332023198987829, 0.7227346798243414, 0.6936327100366948, 0.6516936752994882, 0.6518955247639319, 0.6314696786174087, 0.629466174962325, 0.5932190766061821, 0.6075946111342753, 0.5826621406806726], "accuracy": [0.23365473747253418, 0.10619468986988068, 0.22982433438301086, 0.40007925033569336, 0.45383700728416443, 0.5462950468063354, 0.6559239029884338, 0.6695284843444824, 0.6925109028816223, 0.7246070504188538, 0.7218332886695862, 0.7351737022399902, 0.7561748623847961, 0.7559106945991516, 0.7609298825263977, 0.7644960880279541, 0.7755910754203796, 0.7712323069572449, 0.7853652238845825], "val_loss": [1.9781077248709542, 1.9665391104561942, 1.632049322128296, 1.5156518050602503, 1.0622101170676095, 0.6764034884316581, 0.6123711551938739, 0.6257377352033343, 0.5630055836268834, 0.5664499657494682, 0.5202700751168388, 0.511971013886588, 0.47209594930921284, 0.4638368231909616, 0.46742873532431467, 0.4480781555175781, 0.4951978751591274, 0.4878077677318028, 0.47193586826324463], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.3840000033378601, 0.40799999237060547, 0.5270000100135803, 0.7176666855812073, 0.734666645526886, 0.7006666660308838, 0.7279999852180481, 0.7450000047683716, 0.7713333368301392, 0.7710000276565552, 0.7963333129882812, 0.8066666722297668, 0.800000011920929, 0.8026666641235352, 0.7753333449363708, 0.7996666431427002, 0.7883333563804626]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [2, 6, 9, 0, 0, 3, 4], [3, 0, 2, 1, 1, 0], [8, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.7962856888771057, "mapping_values": [1, 11, 11, 7, 4, 2, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.math.add(alpha, alpha))))))), lambda shape,  alpha, beta, grad: tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.5825788449491602, 2.303685679994381, 2.188984662077887, 1.8429122941526423, 1.5495727551123564, 1.2478619588285846, 0.9438962755800318, 0.9054743263857192, 0.8283689232975374, 0.7332023198987829, 0.7227346798243414, 0.6936327100366948, 0.6516936752994882, 0.6518955247639319, 0.6314696786174087, 0.629466174962325, 0.5932190766061821, 0.6075946111342753, 0.5826621406806726], "accuracy": [0.23365473747253418, 0.10619468986988068, 0.22982433438301086, 0.40007925033569336, 0.45383700728416443, 0.5462950468063354, 0.6559239029884338, 0.6695284843444824, 0.6925109028816223, 0.7246070504188538, 0.7218332886695862, 0.7351737022399902, 0.7561748623847961, 0.7559106945991516, 0.7609298825263977, 0.7644960880279541, 0.7755910754203796, 0.7712323069572449, 0.7853652238845825], "val_loss": [1.9781077248709542, 1.9665391104561942, 1.632049322128296, 1.5156518050602503, 1.0622101170676095, 0.6764034884316581, 0.6123711551938739, 0.6257377352033343, 0.5630055836268834, 0.5664499657494682, 0.5202700751168388, 0.511971013886588, 0.47209594930921284, 0.4638368231909616, 0.46742873532431467, 0.4480781555175781, 0.4951978751591274, 0.4878077677318028, 0.47193586826324463], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.3840000033378601, 0.40799999237060547, 0.5270000100135803, 0.7176666855812073, 0.734666645526886, 0.7006666660308838, 0.7279999852180481, 0.7450000047683716, 0.7713333368301392, 0.7710000276565552, 0.7963333129882812, 0.8066666722297668, 0.800000011920929, 0.8026666641235352, 0.7753333449363708, 0.7996666431427002, 0.7883333563804626]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [2, 8, 9, 9, 0, 2, 5], [3, 0, 0, 2, 1, 0], [8, 57, 18], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [6, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [2, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.7962856888771057, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.5825788449491602, 2.303685679994381, 2.188984662077887, 1.8429122941526423, 1.5495727551123564, 1.2478619588285846, 0.9438962755800318, 0.9054743263857192, 0.8283689232975374, 0.7332023198987829, 0.7227346798243414, 0.6936327100366948, 0.6516936752994882, 0.6518955247639319, 0.6314696786174087, 0.629466174962325, 0.5932190766061821, 0.6075946111342753, 0.5826621406806726], "accuracy": [0.23365473747253418, 0.10619468986988068, 0.22982433438301086, 0.40007925033569336, 0.45383700728416443, 0.5462950468063354, 0.6559239029884338, 0.6695284843444824, 0.6925109028816223, 0.7246070504188538, 0.7218332886695862, 0.7351737022399902, 0.7561748623847961, 0.7559106945991516, 0.7609298825263977, 0.7644960880279541, 0.7755910754203796, 0.7712323069572449, 0.7853652238845825], "val_loss": [1.9781077248709542, 1.9665391104561942, 1.632049322128296, 1.5156518050602503, 1.0622101170676095, 0.6764034884316581, 0.6123711551938739, 0.6257377352033343, 0.5630055836268834, 0.5664499657494682, 0.5202700751168388, 0.511971013886588, 0.47209594930921284, 0.4638368231909616, 0.46742873532431467, 0.4480781555175781, 0.4951978751591274, 0.4878077677318028, 0.47193586826324463], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.3840000033378601, 0.40799999237060547, 0.5270000100135803, 0.7176666855812073, 0.734666645526886, 0.7006666660308838, 0.7279999852180481, 0.7450000047683716, 0.7713333368301392, 0.7710000276565552, 0.7963333129882812, 0.8066666722297668, 0.800000011920929, 0.8026666641235352, 0.7753333449363708, 0.7996666431427002, 0.7883333563804626]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [2, 6, 9, 2, 0, 3, 4], [3, 0, 0, 1, 1, 0], [8, 29, 18, 0], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [84, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.7962856888771057, "mapping_values": [1, 12, 12, 7, 5, 3, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.pow(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha)))), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.5825788449491602, 2.303685679994381, 2.188984662077887, 1.8429122941526423, 1.5495727551123564, 1.2478619588285846, 0.9438962755800318, 0.9054743263857192, 0.8283689232975374, 0.7332023198987829, 0.7227346798243414, 0.6936327100366948, 0.6516936752994882, 0.6518955247639319, 0.6314696786174087, 0.629466174962325, 0.5932190766061821, 0.6075946111342753, 0.5826621406806726], "accuracy": [0.23365473747253418, 0.10619468986988068, 0.22982433438301086, 0.40007925033569336, 0.45383700728416443, 0.5462950468063354, 0.6559239029884338, 0.6695284843444824, 0.6925109028816223, 0.7246070504188538, 0.7218332886695862, 0.7351737022399902, 0.7561748623847961, 0.7559106945991516, 0.7609298825263977, 0.7644960880279541, 0.7755910754203796, 0.7712323069572449, 0.7853652238845825], "val_loss": [1.9781077248709542, 1.9665391104561942, 1.632049322128296, 1.5156518050602503, 1.0622101170676095, 0.6764034884316581, 0.6123711551938739, 0.6257377352033343, 0.5630055836268834, 0.5664499657494682, 0.5202700751168388, 0.511971013886588, 0.47209594930921284, 0.4638368231909616, 0.46742873532431467, 0.4480781555175781, 0.4951978751591274, 0.4878077677318028, 0.47193586826324463], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.3840000033378601, 0.40799999237060547, 0.5270000100135803, 0.7176666855812073, 0.734666645526886, 0.7006666660308838, 0.7279999852180481, 0.7450000047683716, 0.7713333368301392, 0.7710000276565552, 0.7963333129882812, 0.8066666722297668, 0.800000011920929, 0.8026666641235352, 0.7753333449363708, 0.7996666431427002, 0.7883333563804626]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [5, 6, 9, 0, 3, 3, 6], [3, 0, 1, 0, 0, 0, 2], [85, 5, 27], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.7962856888771057, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.5825788449491602, 2.303685679994381, 2.188984662077887, 1.8429122941526423, 1.5495727551123564, 1.2478619588285846, 0.9438962755800318, 0.9054743263857192, 0.8283689232975374, 0.7332023198987829, 0.7227346798243414, 0.6936327100366948, 0.6516936752994882, 0.6518955247639319, 0.6314696786174087, 0.629466174962325, 0.5932190766061821, 0.6075946111342753, 0.5826621406806726], "accuracy": [0.23365473747253418, 0.10619468986988068, 0.22982433438301086, 0.40007925033569336, 0.45383700728416443, 0.5462950468063354, 0.6559239029884338, 0.6695284843444824, 0.6925109028816223, 0.7246070504188538, 0.7218332886695862, 0.7351737022399902, 0.7561748623847961, 0.7559106945991516, 0.7609298825263977, 0.7644960880279541, 0.7755910754203796, 0.7712323069572449, 0.7853652238845825], "val_loss": [1.9781077248709542, 1.9665391104561942, 1.632049322128296, 1.5156518050602503, 1.0622101170676095, 0.6764034884316581, 0.6123711551938739, 0.6257377352033343, 0.5630055836268834, 0.5664499657494682, 0.5202700751168388, 0.511971013886588, 0.47209594930921284, 0.4638368231909616, 0.46742873532431467, 0.4480781555175781, 0.4951978751591274, 0.4878077677318028, 0.47193586826324463], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.3840000033378601, 0.40799999237060547, 0.5270000100135803, 0.7176666855812073, 0.734666645526886, 0.7006666660308838, 0.7279999852180481, 0.7450000047683716, 0.7713333368301392, 0.7710000276565552, 0.7963333129882812, 0.8066666722297668, 0.800000011920929, 0.8026666641235352, 0.7753333449363708, 0.7996666431427002, 0.7883333563804626]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [6, 6, 9, 0, 5, 3, 4], [3, 2, 0, 1, 1, 0], [85, 5, 20], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [2, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [2, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.7962856888771057, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.5825788449491602, 2.303685679994381, 2.188984662077887, 1.8429122941526423, 1.5495727551123564, 1.2478619588285846, 0.9438962755800318, 0.9054743263857192, 0.8283689232975374, 0.7332023198987829, 0.7227346798243414, 0.6936327100366948, 0.6516936752994882, 0.6518955247639319, 0.6314696786174087, 0.629466174962325, 0.5932190766061821, 0.6075946111342753, 0.5826621406806726], "accuracy": [0.23365473747253418, 0.10619468986988068, 0.22982433438301086, 0.40007925033569336, 0.45383700728416443, 0.5462950468063354, 0.6559239029884338, 0.6695284843444824, 0.6925109028816223, 0.7246070504188538, 0.7218332886695862, 0.7351737022399902, 0.7561748623847961, 0.7559106945991516, 0.7609298825263977, 0.7644960880279541, 0.7755910754203796, 0.7712323069572449, 0.7853652238845825], "val_loss": [1.9781077248709542, 1.9665391104561942, 1.632049322128296, 1.5156518050602503, 1.0622101170676095, 0.6764034884316581, 0.6123711551938739, 0.6257377352033343, 0.5630055836268834, 0.5664499657494682, 0.5202700751168388, 0.511971013886588, 0.47209594930921284, 0.4638368231909616, 0.46742873532431467, 0.4480781555175781, 0.4951978751591274, 0.4878077677318028, 0.47193586826324463], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.3840000033378601, 0.40799999237060547, 0.5270000100135803, 0.7176666855812073, 0.734666645526886, 0.7006666660308838, 0.7279999852180481, 0.7450000047683716, 0.7713333368301392, 0.7710000276565552, 0.7963333129882812, 0.8066666722297668, 0.800000011920929, 0.8026666641235352, 0.7753333449363708, 0.7996666431427002, 0.7883333563804626]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [2, 2, 9, 9, 0, 2, 5], [3, 0, 0, 2, 1, 0], [8, 57, 18], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [2, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [2, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.7962856888771057, "mapping_values": [1, 5, 5, 4, 1, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.5825788449491602, 2.303685679994381, 2.188984662077887, 1.8429122941526423, 1.5495727551123564, 1.2478619588285846, 0.9438962755800318, 0.9054743263857192, 0.8283689232975374, 0.7332023198987829, 0.7227346798243414, 0.6936327100366948, 0.6516936752994882, 0.6518955247639319, 0.6314696786174087, 0.629466174962325, 0.5932190766061821, 0.6075946111342753, 0.5826621406806726], "accuracy": [0.23365473747253418, 0.10619468986988068, 0.22982433438301086, 0.40007925033569336, 0.45383700728416443, 0.5462950468063354, 0.6559239029884338, 0.6695284843444824, 0.6925109028816223, 0.7246070504188538, 0.7218332886695862, 0.7351737022399902, 0.7561748623847961, 0.7559106945991516, 0.7609298825263977, 0.7644960880279541, 0.7755910754203796, 0.7712323069572449, 0.7853652238845825], "val_loss": [1.9781077248709542, 1.9665391104561942, 1.632049322128296, 1.5156518050602503, 1.0622101170676095, 0.6764034884316581, 0.6123711551938739, 0.6257377352033343, 0.5630055836268834, 0.5664499657494682, 0.5202700751168388, 0.511971013886588, 0.47209594930921284, 0.4638368231909616, 0.46742873532431467, 0.4480781555175781, 0.4951978751591274, 0.4878077677318028, 0.47193586826324463], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.3840000033378601, 0.40799999237060547, 0.5270000100135803, 0.7176666855812073, 0.734666645526886, 0.7006666660308838, 0.7279999852180481, 0.7450000047683716, 0.7713333368301392, 0.7710000276565552, 0.7963333129882812, 0.8066666722297668, 0.800000011920929, 0.8026666641235352, 0.7753333449363708, 0.7996666431427002, 0.7883333563804626]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [0, 2, 9, 9, 0, 2, 5], [3, 0, 0, 2, 1, 0], [8, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1], [3, 3, 0, 2, 8, 0, 0], [4, 3], [], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 3, 6, 3, 6], [2, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.6740000247955322, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 1, 0, 1, 11, 9, 7, 2, 0, 4, 2, 2, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, sigma))))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, alpha))", "other_info": {"loss": [2.2870683469761004, 2.073017507638, 1.4734438673191224, 1.0741119174877918, 1.0359042346784546, 0.9548919492897782, 0.8826097791945346, 0.8962293270162981, 0.8745199893176233, 0.9084118422326978, 0.9889132394105404, 1.1363144665031448, 1.2392460909250027, 1.4098657624533526, 1.6482087135031522], "accuracy": [0.13617752492427826, 0.3835688829421997, 0.5229163765907288, 0.6122044920921326, 0.6066569685935974, 0.6338660717010498, 0.6601505875587463, 0.6777176260948181, 0.6767930388450623, 0.6730946898460388, 0.6717738509178162, 0.6215823292732239, 0.6096948981285095, 0.5332188606262207, 0.4855369031429291], "val_loss": [1.9059004102434431, 1.2576470715659005, 0.75029798916408, 0.6846560069492885, 0.679760047367641, 0.5887387309755597, 0.5846237625394549, 0.6245629617146083, 0.5830062968390328, 0.5960443530763898, 0.7538170644215175, 0.7152826615742275, 0.8864902428218296, 0.8864342825753349, 1.4957094533102853], "val_accuracy": [0.4036666750907898, 0.5496666431427002, 0.6370000243186951, 0.6949999928474426, 0.6769999861717224, 0.7316666841506958, 0.7426666617393494, 0.7326666712760925, 0.7303333282470703, 0.7453333139419556, 0.7006666660308838, 0.7110000252723694, 0.6489999890327454, 0.6539999842643738, 0.35499998927116394]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1], [2, 6, 9, 0, 0, 3, 4], [3, 0, 1, 0, 0, 0, 2], [8, 57, 18], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.14171428978443146, "mapping_values": [1, 5, 5, 3, 2, 2, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3690755971591897, 2.546492194235049, 2.303306646413807, 2.210349634890039, 2.303942492546391, 2.2121274631572296], "accuracy": [0.2102760523557663, 0.1340641975402832, 0.1026284471154213, 0.16351869702339172, 0.10949676483869553, 0.16682076454162598], "val_loss": [1.7716194561549596, 1.9756829398018974, 1.967238289969308, 1.9758616174970354, 1.9713219915117537, 1.9775959423610143], "val_accuracy": [0.21833333373069763, 0.10199999809265137, 0.09833333641290665, 0.09733333438634872, 0.1889999955892563, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 6, 9, 0, 8, 3, 4, 8, 9], [2, 0, 0, 1, 1, 0], [8, 29, 18, 0], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [74, 47, 50, 41, 34]], "fitness": -0.14171428978443146, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3690755971591897, 2.546492194235049, 2.303306646413807, 2.210349634890039, 2.303942492546391, 2.2121274631572296], "accuracy": [0.2102760523557663, 0.1340641975402832, 0.1026284471154213, 0.16351869702339172, 0.10949676483869553, 0.16682076454162598], "val_loss": [1.7716194561549596, 1.9756829398018974, 1.967238289969308, 1.9758616174970354, 1.9713219915117537, 1.9775959423610143], "val_accuracy": [0.21833333373069763, 0.10199999809265137, 0.09833333641290665, 0.09733333438634872, 0.1889999955892563, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [2, 4, 9, 2, 5, 6, 5, 4, 1, 1, 2], [3, 0, 0, 1, 1, 0], [4, 5, 27], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [0, 3, 0, 3, 6], [3, 1, 0, 1, 3, 2], [1, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 7, 4, 3, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.pow(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.negative(alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.16721701622009277, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [2, 6, 9, 0, 0, 8, 4], [3, 0, 0, 1, 1, 0], [3, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [1, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 7, 3, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.pow(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10619468986988068, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1], [2, 6, 6, 0, 8, 3, 4, 0, 9], [3, 0, 0, 1, 1, 0], [8, 29, 18, 0], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 1, 1, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 8, 6, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), tf.math.negative(alpha)))))), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07674019038677216, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [2, 2, 9, 4, 0, 2, 5], [3, 0, 0, 2, 1, 0], [8, 57, 18], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [2, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [74, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07674019038677216, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1], [2, 6, 9, 0, 0, 3, 4], [3, 0, 1, 0, 0, 0, 2], [8, 34, 18], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [5, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07674019038677216, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [2, 6, 9, 2, 0, 6, 5, 4, 1, 1, 2], [3, 0, 0, 1, 1, 0], [8, 57, 18], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [8, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [74, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07674019038677216, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [4, 6, 9, 0, 0, 3, 6], [3, 0, 0, 0, 1, 0], [8, 29, 18, 0], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 0, 3, 6], [3, 1, 0, 1, 3, 2], [30, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 7, 4, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(sigma), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [2, 4, 8, 2, 0, 6, 5, 4, 1, 1, 2], [3, 2, 0, 1, 1, 0], [8, 6, 18], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 6, 5, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, alpha)))), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [2, 6, 9, 0, 0, 3, 4], [2, 0, 0, 1, 1, 0], [8, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 11, 11, 7, 4, 3, 1, 1, 0, 1, 1, 5, 4, 2, 2, 0, 4, 3, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), alpha))))))), lambda shape,  alpha, beta, grad: tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.301951323738345, 2.302347065891966, 2.30145517360454, 2.3024310497890577, 2.3022324096698332, 2.301842034248833], "accuracy": [0.08942015469074249, 0.08717474341392517, 0.09311848133802414, 0.08849557489156723, 0.08400475233793259, 0.09206181764602661], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0], [2, 6, 5, 0, 8, 3, 4, 8, 9], [3, 0, 1, 1, 1, 0], [6, 29, 18, 24], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [3, 3], [], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 13, 13, 9, 4, 2, 9, 9, 5, 4, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))), tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha))), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))))), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.301951323738345, 2.302347065891966, 2.30145517360454, 2.3024310497890577, 2.3022324096698332, 2.301842034248833], "accuracy": [0.08942015469074249, 0.08717474341392517, 0.09311848133802414, 0.08849557489156723, 0.08400475233793259, 0.09206181764602661], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]