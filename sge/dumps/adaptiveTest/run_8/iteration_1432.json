[{"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [5, 3, 2, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [7, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [2, 3, 2, 0], [1, 0], [12], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 6, 7, 7, 5, 3, 1, 4, 3, 9, 5, 6, 4, 4, 4, 3, 3, 1, 4, 5, 1, 1, 0, 1, 4, 7, 3, 9, 9, 3, 2, 4, 6, 4, 2, 0, 7, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [0, 1, 2, 2, 2, 0, 2, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0, 2, 3, 2, 1, 2, 0], [48, 9, 45, 71, 34, 14, 69, 20, 87, 76, 68, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.8117142915725708, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.2505717277526855, 2.155802011489868, 1.986873745918274, 1.5488380193710327, 1.1612104177474976, 0.825050950050354, 0.7723857164382935, 0.7127121090888977, 0.6646813154220581, 0.6602780818939209, 0.5831913352012634, 0.5845356583595276, 0.5501537322998047, 0.5601381063461304, 0.5160907506942749, 0.5160794258117676, 0.5212761759757996, 0.4882081151008606, 0.49929094314575195, 0.4950743615627289, 0.47113513946533203, 0.45348358154296875, 0.47054052352905273, 0.45370805263519287, 0.4626549184322357, 0.42375448346138, 0.4408954083919525, 0.4213581383228302, 0.40224501490592957, 0.3996557295322418, 0.4000609219074249, 0.40065035223960876, 0.38744452595710754, 0.3921078145503998, 0.37748584151268005, 0.3718337118625641, 0.3712131083011627, 0.3501270115375519, 0.3850265145301819], "accuracy": [0.2518821954727173, 0.24765552580356598, 0.3230748772621155, 0.48672565817832947, 0.5880332589149475, 0.6988508701324463, 0.7078325152397156, 0.7337207794189453, 0.7504953145980835, 0.7518161535263062, 0.7792893648147583, 0.783119797706604, 0.7967243194580078, 0.7921014428138733, 0.8068947196006775, 0.8063663840293884, 0.8100647330284119, 0.8182538747787476, 0.819970965385437, 0.8144234418869019, 0.8264430165290833, 0.8339717388153076, 0.8261788487434387, 0.8327829837799072, 0.8305375576019287, 0.8457271456718445, 0.8374059200286865, 0.8469158411026001, 0.854708731174469, 0.8471800088882446, 0.8519350290298462, 0.8477083444595337, 0.8615770936012268, 0.8544445633888245, 0.8601241707801819, 0.8601241707801819, 0.8643507957458496, 0.8712190985679626, 0.8543124794960022], "val_loss": [2.2585954666137695, 2.1263155937194824, 1.2385634183883667, 1.622893214225769, 0.8953182101249695, 0.6772624254226685, 0.7019016742706299, 0.569681704044342, 0.5692034959793091, 0.5552916526794434, 0.5575101375579834, 0.5473929047584534, 0.5048487186431885, 0.49039942026138306, 0.5407618284225464, 0.593904972076416, 0.5238866209983826, 0.5298414826393127, 0.4497866928577423, 0.45754989981651306, 0.4606296420097351, 0.4807626008987427, 0.4347471594810486, 0.4287615120410919, 0.4179212152957916, 0.44655925035476685, 0.44679126143455505, 0.4151642918586731, 0.4194818437099457, 0.4226821959018707, 0.42356082797050476, 0.4361228942871094, 0.4594404995441437, 0.41260677576065063, 0.40978458523750305, 0.42677929997444153, 0.40909260511398315, 0.45587158203125, 0.4331693649291992], "val_accuracy": [0.2199999988079071, 0.27300000190734863, 0.6486666798591614, 0.5113333463668823, 0.6756666898727417, 0.7183333039283752, 0.7263333201408386, 0.7919999957084656, 0.7683333158493042, 0.7853333353996277, 0.7860000133514404, 0.7919999957084656, 0.8096666932106018, 0.8100000023841858, 0.7703333497047424, 0.7513333559036255, 0.7973333597183228, 0.7986666560173035, 0.8330000042915344, 0.831333339214325, 0.8326666951179504, 0.8183333277702332, 0.8446666598320007, 0.8429999947547913, 0.8543333411216736, 0.8360000252723694, 0.8410000205039978, 0.8543333411216736, 0.8553333282470703, 0.8443333506584167, 0.8473333120346069, 0.8373333215713501, 0.8320000171661377, 0.8569999933242798, 0.8510000109672546, 0.8473333120346069, 0.8500000238418579, 0.8289999961853027, 0.8253333568572998]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [2, 3, 2, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [7, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [2, 3, 2, 0], [1, 0], [12], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 6, 7, 7, 5, 3, 1, 4, 3, 9, 5, 6, 4, 4, 4, 3, 3, 1, 4, 5, 1, 1, 0, 1, 4, 7, 3, 9, 9, 3, 2, 4, 6, 4, 2, 0, 7, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [0, 1, 2, 2, 2, 0, 2, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0, 2, 3, 2, 1, 2, 0], [48, 9, 45, 71, 34, 14, 69, 20, 87, 76, 68, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.805142879486084, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.2500686645507812, 2.162152051925659, 1.8792513608932495, 1.4522641897201538, 1.1670374870300293, 0.8606008291244507, 0.8209716081619263, 0.7432735562324524, 0.6866244077682495, 0.6650746464729309, 0.6153109073638916, 0.5954604744911194, 0.5815029144287109, 0.5673890113830566, 0.5664710402488708, 0.533158004283905, 0.5207507014274597], "accuracy": [0.251750111579895, 0.2440892904996872, 0.3653414249420166, 0.518161416053772, 0.5807687044143677, 0.6767930388450623, 0.6897371411323547, 0.7136441469192505, 0.7449478507041931, 0.7415136694908142, 0.767401933670044, 0.7716285586357117, 0.7814027070999146, 0.7866860628128052, 0.7865539789199829, 0.7955356240272522, 0.8024039268493652], "val_loss": [2.2569148540496826, 2.1553092002868652, 1.280802607536316, 0.9093963503837585, 0.8250436186790466, 0.6913331747055054, 0.6615054607391357, 0.6069037318229675, 0.583161473274231, 0.5696057677268982, 0.5812932252883911, 0.5303020477294922, 0.517553448677063, 0.5429707765579224, 0.5120367407798767, 0.49970173835754395, 0.5257929563522339], "val_accuracy": [0.22066666185855865, 0.289000004529953, 0.5446666479110718, 0.6643333435058594, 0.6936666369438171, 0.7269999980926514, 0.7490000128746033, 0.7703333497047424, 0.7753333449363708, 0.7609999775886536, 0.7896666526794434, 0.8163333535194397, 0.8003333210945129, 0.7886666655540466, 0.7979999780654907, 0.8076666593551636, 0.7986666560173035]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [0, 3, 2, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [7, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [2, 3, 2, 0], [1, 0], [12], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 6, 7, 7, 5, 3, 1, 4, 3, 9, 5, 6, 4, 4, 4, 3, 3, 1, 4, 5, 1, 1, 0, 1, 4, 7, 3, 9, 9, 3, 2, 4, 6, 4, 2, 0, 7, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [0, 1, 2, 2, 2, 0, 2, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0, 2, 3, 2, 1, 2, 0], [48, 9, 45, 71, 34, 14, 69, 20, 87, 76, 68, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.7914285659790039, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.271014928817749, 1.8661065101623535, 1.4997962713241577, 1.179560661315918, 1.0396491289138794, 0.8801605105400085, 0.8214115500450134, 0.7579525709152222, 0.7618597745895386, 0.7009055018424988, 0.6816997528076172, 0.6535268425941467, 0.603664219379425, 0.6251376867294312, 0.5959065556526184, 0.5569779872894287, 0.5815725326538086, 0.565470814704895], "accuracy": [0.27327960729599, 0.3975696861743927, 0.5023114681243896, 0.6009774208068848, 0.6217144131660461, 0.6723021864891052, 0.698718786239624, 0.7104741930961609, 0.7108704447746277, 0.7313432693481445, 0.7490423917770386, 0.7534011602401733, 0.7808743715286255, 0.7650244235992432, 0.7730814814567566, 0.7921014428138733, 0.7816668748855591, 0.785101056098938], "val_loss": [1.802504539489746, 1.811747431755066, 1.4813803434371948, 0.8762314319610596, 0.8188896775245667, 0.7265968322753906, 0.6608843803405762, 0.6868230104446411, 0.6276693344116211, 0.620967447757721, 0.5853708386421204, 0.5631234645843506, 0.534252405166626, 0.5867772698402405, 0.5126994848251343, 0.5878117084503174, 0.5535646080970764, 0.5787801742553711], "val_accuracy": [0.4620000123977661, 0.38499999046325684, 0.5236666798591614, 0.6650000214576721, 0.7046666741371155, 0.7106666564941406, 0.7490000128746033, 0.7426666617393494, 0.7540000081062317, 0.7609999775886536, 0.765999972820282, 0.781000018119812, 0.8076666593551636, 0.7706666588783264, 0.8073333501815796, 0.7586666941642761, 0.7606666684150696, 0.7573333382606506]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [0, 3, 2, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [7, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [2, 3, 2, 0], [1, 0], [12], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 6, 7, 7, 5, 3, 1, 4, 3, 9, 5, 6, 4, 4, 4, 3, 3, 1, 4, 5, 1, 1, 0, 1, 4, 7, 3, 9, 9, 3, 2, 4, 6, 4, 2, 0, 7, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [0, 1, 2, 2, 2, 0, 2, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0, 2, 3, 2, 1, 2, 0], [48, 9, 45, 71, 34, 14, 69, 20, 87, 76, 68, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.7734285593032837, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.6553828716278076, 1.954712152481079, 1.5609915256500244, 1.259700894355774, 1.072105884552002, 0.9128920435905457, 0.8161143660545349, 0.783990204334259, 0.7817950248718262, 0.7447200417518616, 0.6785069704055786, 0.6984942555427551, 0.6641521453857422, 0.6339499950408936, 0.6354703307151794], "accuracy": [0.25082552433013916, 0.3407739996910095, 0.483819842338562, 0.5698058605194092, 0.6131290197372437, 0.6653017997741699, 0.6911900639533997, 0.7053229212760925, 0.7172104120254517, 0.7232862114906311, 0.7499669790267944, 0.7415136694908142, 0.7490423917770386, 0.7625148296356201, 0.7630431652069092], "val_loss": [2.011627197265625, 1.4639194011688232, 1.2713918685913086, 1.1405338048934937, 0.893383800983429, 0.7913152575492859, 0.6856949925422668, 0.7246178388595581, 0.7014389634132385, 0.5709130764007568, 0.6109970808029175, 0.5843795537948608, 0.5825780034065247, 0.6474217772483826, 0.5732241868972778], "val_accuracy": [0.3973333239555359, 0.512333333492279, 0.6053333282470703, 0.590666651725769, 0.6793333292007446, 0.6983333230018616, 0.718666672706604, 0.7329999804496765, 0.721666693687439, 0.7906666398048401, 0.7726666927337646, 0.7730000019073486, 0.7639999985694885, 0.7423333525657654, 0.7703333497047424]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [0, 3, 2, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [7, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [2, 3, 2, 0], [1, 0], [12], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 6, 7, 7, 5, 3, 1, 4, 3, 9, 5, 6, 4, 4, 4, 3, 3, 1, 4, 5, 1, 1, 0, 1, 4, 7, 3, 9, 9, 3, 2, 4, 6, 4, 2, 0, 7, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [0, 1, 2, 2, 2, 0, 2, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0, 2, 3, 2, 1, 2, 0], [49, 9, 45, 71, 34, 14, 69, 20, 87, 76, 68, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.5634285807609558, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.131711721420288, 2.242683172225952, 2.148979425430298, 2.1708908081054688, 2.1064794063568115, 1.9021592140197754, 2.0392115116119385], "accuracy": [0.27116629481315613, 0.22493726015090942, 0.27327960729599, 0.22255976498126984, 0.2731475234031677, 0.33060362935066223, 0.2767137885093689], "val_loss": [1.9577056169509888, 1.766168475151062, 1.861168622970581, 2.0642197132110596, 1.8781980276107788, 1.893858551979065, 1.5363421440124512], "val_accuracy": [0.5026666522026062, 0.5576666593551636, 0.4176666736602783, 0.35600000619888306, 0.29866665601730347, 0.38999998569488525, 0.4869999885559082]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [0, 3, 2, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [7, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [2, 3, 2, 0], [2, 0], [12], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 6, 7, 7, 5, 3, 1, 4, 3, 9, 5, 6, 4, 4, 4, 3, 3, 1, 4, 5, 1, 1, 0, 1, 4, 7, 3, 9, 9, 3, 2, 4, 6, 4, 2, 0, 7, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [2, 1, 2, 2, 2, 0, 2, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0, 2, 3, 2, 1, 2, 0, 0, 3, 2, 0, 0, 1, 3, 1, 3, 0, 1, 3, 1], [48, 9, 45, 71, 34, 14, 69, 20, 87, 76, 68, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.31942856311798096, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, alpha)", "other_info": {"loss": [2.301868200302124, 2.3018860816955566, 2.3011786937713623, 2.3015809059143066, 2.3001158237457275, 2.299650192260742, 2.2995996475219727, 2.2983505725860596, 2.2989306449890137, 2.298013687133789, 2.2964282035827637, 2.2974722385406494, 2.29620099067688, 2.297175168991089, 2.2958083152770996, 2.2952823638916016, 2.2946250438690186, 2.2966480255126953, 2.294959783554077, 2.2962372303009033, 2.2934787273406982, 2.294356346130371, 2.293390989303589, 2.292867422103882, 2.2925620079040527, 2.2933943271636963, 2.291646957397461, 2.2925212383270264, 2.2887110710144043, 2.292131185531616, 2.2896885871887207, 2.2880783081054688, 2.2915642261505127, 2.288379192352295, 2.287153720855713, 2.288483142852783, 2.287463903427124, 2.2890613079071045, 2.28631329536438, 2.285879135131836, 2.285515069961548, 2.2862188816070557, 2.285487651824951, 2.285109519958496, 2.283823013305664, 2.2839770317077637, 2.284287691116333, 2.2841241359710693, 2.283576250076294, 2.2842817306518555, 2.282366991043091, 2.282587766647339, 2.2814745903015137, 2.2810449600219727, 2.28067946434021, 2.2790002822875977, 2.2805705070495605, 2.279353141784668, 2.2799630165100098, 2.2799580097198486, 2.278489351272583, 2.277557134628296, 2.2782928943634033, 2.277578830718994, 2.276216506958008, 2.2757763862609863, 2.2764344215393066, 2.276646614074707, 2.2752084732055664, 2.2753491401672363, 2.2744569778442383, 2.2736692428588867, 2.27419376373291, 2.2738661766052246, 2.273198127746582, 2.2726848125457764, 2.2728450298309326, 2.2719695568084717, 2.2713193893432617, 2.2697465419769287, 2.2700254917144775, 2.270364999771118, 2.2728207111358643, 2.2697365283966064, 2.2696449756622314, 2.2689967155456543, 2.2681069374084473, 2.2684431076049805, 2.2673301696777344, 2.267113208770752, 2.267641067504883, 2.267263174057007, 2.264237880706787, 2.2664103507995605, 2.2670061588287354, 2.265514612197876, 2.2634403705596924, 2.264155626296997, 2.2630455493927, 2.2632851600646973], "accuracy": [0.0874389111995697, 0.09100515395402908, 0.08942015469074249, 0.09576013684272766, 0.09298639744520187, 0.10513802617788315, 0.09470347315073013, 0.1006472036242485, 0.09787346422672272, 0.1002509593963623, 0.1018359512090683, 0.09668471664190292, 0.10368511080741882, 0.10659094154834747, 0.10487385839223862, 0.11266675591468811, 0.10698718577623367, 0.10210011899471283, 0.10777968913316727, 0.10500594228506088, 0.1138555034995079, 0.109232597053051, 0.10553427785634995, 0.11940298229455948, 0.11398758739233017, 0.11042134463787079, 0.12178047746419907, 0.11161009222269058, 0.12059172987937927, 0.11676132678985596, 0.12098798155784607, 0.12732796370983124, 0.1154404953122139, 0.13049794733524323, 0.1286487877368927, 0.12296922504901886, 0.12917712330818176, 0.1258750557899475, 0.12996962666511536, 0.1364416927099228, 0.13155461847782135, 0.13815876841545105, 0.1344604343175888, 0.13049794733524323, 0.13657376170158386, 0.13934750854969025, 0.13829085230827332, 0.1394795924425125, 0.13670584559440613, 0.13908334076404572, 0.13974376022815704, 0.14119666814804077, 0.14317791163921356, 0.14000792801380157, 0.14489498734474182, 0.14991414546966553, 0.14370624721050262, 0.14595165848731995, 0.15374454855918884, 0.15110288560390472, 0.15493330359458923, 0.1530841439962387, 0.1488574892282486, 0.1558578759431839, 0.1550653874874115, 0.15612204372882843, 0.15810328722000122, 0.15493330359458923, 0.1612732857465744, 0.16272619366645813, 0.16166952252388, 0.16549994051456451, 0.1620657742023468, 0.15915995836257935, 0.16655659675598145, 0.16470743715763092, 0.1640470176935196, 0.16959451138973236, 0.17540615797042847, 0.177255317568779, 0.1690661758184433, 0.1806894689798355, 0.1666886806488037, 0.17461365461349487, 0.17382116615772247, 0.177255317568779, 0.1806894689798355, 0.18082155287265778, 0.1784440577030182, 0.17817988991737366, 0.1795007288455963, 0.18002906441688538, 0.18953903019428253, 0.18372738361358643, 0.18544445931911469, 0.18650111556053162, 0.19033153355121613, 0.19178444147109985, 0.19178444147109985, 0.18821820616722107], "val_loss": [2.2987143993377686, 2.2982800006866455, 2.2978415489196777, 2.2974026203155518, 2.296968698501587, 2.2965357303619385, 2.2961061000823975, 2.2956740856170654, 2.2952425479888916, 2.2948105335235596, 2.2943782806396484, 2.293944835662842, 2.2935173511505127, 2.2930870056152344, 2.2926549911499023, 2.292226791381836, 2.291797161102295, 2.2913663387298584, 2.2909369468688965, 2.290501356124878, 2.290072202682495, 2.2896435260772705, 2.2892165184020996, 2.288789749145508, 2.288360118865967, 2.2879347801208496, 2.287505865097046, 2.287076473236084, 2.286649465560913, 2.2862229347229004, 2.285795211791992, 2.2853662967681885, 2.284940719604492, 2.284512758255005, 2.2840867042541504, 2.283661127090454, 2.283233165740967, 2.2828030586242676, 2.282379150390625, 2.281954526901245, 2.281529664993286, 2.2811031341552734, 2.280673027038574, 2.2802484035491943, 2.2798218727111816, 2.2793920040130615, 2.2789666652679443, 2.278536081314087, 2.278108835220337, 2.277678966522217, 2.2772529125213623, 2.276822090148926, 2.2763893604278564, 2.275960922241211, 2.275527238845825, 2.2750959396362305, 2.274665117263794, 2.274233818054199, 2.273803949356079, 2.2733726501464844, 2.2729403972625732, 2.272509813308716, 2.2720766067504883, 2.271644115447998, 2.2712090015411377, 2.2707736492156982, 2.2703378200531006, 2.269902229309082, 2.269465684890747, 2.2690274715423584, 2.2685890197753906, 2.2681500911712646, 2.267709970474243, 2.2672722339630127, 2.266834259033203, 2.2663919925689697, 2.265953540802002, 2.2655112743377686, 2.265066385269165, 2.2646193504333496, 2.264174461364746, 2.2637321949005127, 2.263293743133545, 2.2628543376922607, 2.2624104022979736, 2.261964797973633, 2.2615184783935547, 2.26106595993042, 2.2606167793273926, 2.260166883468628, 2.2597193717956543, 2.2592647075653076, 2.25880765914917, 2.2583541870117188, 2.257904052734375, 2.257445812225342, 2.2569828033447266, 2.256518602371216, 2.256056070327759, 2.255589246749878], "val_accuracy": [0.03433333337306976, 0.035999998450279236, 0.03966666758060455, 0.044333335012197495, 0.046666666865348816, 0.049666665494441986, 0.054999999701976776, 0.05700000002980232, 0.05966666713356972, 0.06233333423733711, 0.06433333456516266, 0.06566666811704636, 0.06866666674613953, 0.07133333384990692, 0.07500000298023224, 0.07900000363588333, 0.08133333176374435, 0.08566666394472122, 0.08766666799783707, 0.08966666460037231, 0.09200000017881393, 0.0949999988079071, 0.0976666659116745, 0.10100000351667404, 0.10499999672174454, 0.10833333432674408, 0.11166666448116302, 0.11633333563804626, 0.12166666984558105, 0.12533333897590637, 0.12933333218097687, 0.13233333826065063, 0.13699999451637268, 0.14000000059604645, 0.14366666972637177, 0.14666666090488434, 0.1496666669845581, 0.15199999511241913, 0.15566666424274445, 0.15800000727176666, 0.1599999964237213, 0.16566666960716248, 0.17166666686534882, 0.17466667294502258, 0.17800000309944153, 0.18133333325386047, 0.1836666613817215, 0.1899999976158142, 0.19499999284744263, 0.19900000095367432, 0.20233333110809326, 0.20366667211055756, 0.2056666612625122, 0.20733332633972168, 0.21066667139530182, 0.2133333384990692, 0.2163333296775818, 0.2199999988079071, 0.22466666996479034, 0.2266666740179062, 0.2303333282470703, 0.23466666042804718, 0.2396666705608368, 0.24500000476837158, 0.24833333492279053, 0.25066667795181274, 0.2529999911785126, 0.25733333826065063, 0.25833332538604736, 0.2619999945163727, 0.2630000114440918, 0.26600000262260437, 0.26866665482521057, 0.27266666293144226, 0.2750000059604645, 0.2776666581630707, 0.2796666622161865, 0.281333327293396, 0.28299999237060547, 0.2866666615009308, 0.2893333435058594, 0.2933333218097687, 0.2953333258628845, 0.2983333468437195, 0.2996666729450226, 0.3023333251476288, 0.3059999942779541, 0.3089999854564667, 0.31066668033599854, 0.312333345413208, 0.31566667556762695, 0.3173333406448364, 0.31833332777023315, 0.32066667079925537, 0.3243333399295807, 0.32466667890548706, 0.32466667890548706, 0.32733333110809326, 0.32899999618530273, 0.3306666612625122]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [1, 3, 2, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [7, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [2, 3, 2, 0], [1, 0], [12], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 6, 7, 7, 5, 3, 1, 4, 3, 9, 5, 6, 4, 4, 4, 3, 3, 1, 4, 5, 1, 1, 0, 1, 4, 7, 3, 9, 9, 3, 2, 4, 6, 4, 2, 0, 7, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [2, 1, 2, 2, 2, 0, 2, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0, 2, 3, 2, 1, 2, 0], [48, 9, 45, 71, 34, 14, 69, 20, 87, 76, 68, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.26742857694625854, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3559060096740723, 2.2507920265197754, 2.159207820892334, 3.0221176147460938, 2.305845260620117, 2.303732395172119, 2.3033788204193115], "accuracy": [0.20274733006954193, 0.18518029153347015, 0.22599393129348755, 0.1146479994058609, 0.09972262382507324, 0.1002509593963623, 0.0956280529499054], "val_loss": [2.3014564514160156, 2.147932291030884, 2.3043296337127686, 2.307302713394165, 2.3034377098083496, 2.3027782440185547, 2.302569627761841], "val_accuracy": [0.10300000011920929, 0.19499999284744263, 0.09600000083446503, 0.09733333438634872, 0.09600000083446503, 0.1003333330154419, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 3, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [1, 3, 2, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [7, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [2, 3, 2, 0], [1, 0], [12], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [9, 0, 6, 7, 7, 5, 3, 1, 4, 3, 9, 5, 6, 4, 4, 4, 3, 3, 1, 4, 5, 1, 1, 0, 1, 4, 7, 3, 9, 9, 3, 2, 4, 6, 4, 2, 0, 7, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [3, 1, 2, 2, 2, 0, 2, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0, 2, 3, 2, 1, 2, 0], [48, 9, 45, 71, 34, 14, 69, 20, 87, 76, 68, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3023455142974854, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [2, 3, 2, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [7, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 0], [2, 3, 2, 0], [1, 0], [12], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [4, 4, 6, 7, 7, 5, 3, 1, 4, 3, 9, 5, 6, 4, 4, 4, 3, 3, 1, 4, 5, 1, 1, 0, 1, 4, 7, 3, 9, 9, 3, 2, 4, 6, 4, 2, 0, 7, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [0, 0, 2, 2, 2, 0, 2, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0, 2, 3, 2, 1, 2, 0], [16, 9, 45, 71, 34, 14, 69, 20, 87, 76, 68, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 8, 4, 4, 0, 0, 5, 2, 3, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.negative(sigma)), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3023455142974854, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [5, 3, 2, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [7, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [2, 3, 2, 0], [1, 0], [12], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 6, 7, 7, 5, 3, 1, 4, 3, 9, 5, 6, 4, 4, 4, 3, 3, 1, 4, 5, 1, 1, 0, 1, 4, 7, 3, 9, 9, 3, 2, 4, 6, 4, 2, 0, 7, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [0, 1, 2, 2, 2, 0, 2, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0, 2, 3, 2, 1, 2, 0], [24, 9, 45, 71, 34, 14, 69, 20, 87, 76, 68, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3023455142974854, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 3, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [5, 3, 2, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [7, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [2, 3, 2, 0], [1, 0], [12], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 7, 6, 7, 7, 5, 3, 1, 4, 3, 9, 5, 6, 4, 4, 4, 3, 3, 1, 4, 5, 1, 1, 0, 1, 4, 7, 3, 9, 9, 3, 2, 4, 6, 4, 2, 0, 7, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [0, 1, 2, 2, 2, 0, 2, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0, 2, 3, 2, 1, 2, 0], [48, 9, 45, 71, 34, 14, 69, 20, 87, 76, 68, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07938185334205627, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [1, 3, 2, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [7, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [2, 3, 2, 0], [1, 0], [12], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 6, 7, 7, 5, 3, 1, 4, 3, 9, 5, 6, 4, 4, 4, 3, 3, 1, 4, 5, 1, 1, 0, 1, 4, 7, 3, 9, 9, 3, 2, 4, 6, 4, 2, 0, 7, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [3, 1, 2, 2, 2, 0, 2, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0, 2, 3, 2, 1, 2, 0], [48, 9, 45, 71, 34, 14, 69, 20, 87, 76, 68, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, alpha)", "other_info": {"loss": [2.3025481700897217, 2.3045599460601807, 2.3058719635009766, 2.3094170093536377, 2.3109917640686035, 2.31396222114563, 2.3175644874572754, 2.3216049671173096, 2.329859733581543, 2.3405590057373047, 2.3675806522369385, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08611807972192764, 0.08611807972192764, 0.08308017253875732, 0.08228767663240433, 0.07792893797159195, 0.08189142495393753, 0.07475894689559937, 0.07779685407876968, 0.07568352669477463, 0.07872143387794495, 0.0870426595211029, 0.09391097724437714, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.300302028656006, 2.3018858432769775, 2.3035247325897217, 2.305978775024414, 2.3086345195770264, 2.3115031719207764, 2.3143603801727295, 2.3183467388153076, 2.3247222900390625, 2.3385367393493652, 2.3926637172698975, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.027000000700354576, 0.025333333760499954, 0.02433333359658718, 0.028333334252238274, 0.03500000014901161, 0.043666668236255646, 0.0560000017285347, 0.06566666811704636, 0.08299999684095383, 0.09933333098888397, 0.10066666454076767, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [0, 3, 2, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [7, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 0], [2, 3, 2, 0], [2, 0], [12], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 6, 7, 7, 5, 3, 1, 4, 3, 9, 5, 6, 4, 4, 4, 3, 3, 1, 4, 5, 1, 1, 0, 1, 4, 7, 3, 9, 9, 3, 2, 4, 6, 4, 2, 0, 7, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [0, 1, 2, 2, 2, 0, 2, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0, 2, 3, 2, 1, 2, 0], [48, 9, 45, 71, 34, 14, 69, 20, 87, 76, 68, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 8, 4, 4, 0, 0, 1, 0, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.negative(sigma)), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3023455142974854, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 4, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [5, 3, 2, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [7, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [2, 3, 2, 0], [1, 0], [12], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [3, 0, 6, 7, 7, 5, 3, 1, 4, 3, 9, 5, 6, 4, 4, 4, 3, 3, 1, 4, 5, 1, 1, 0, 1, 4, 7, 3, 9, 9, 3, 2, 4, 6, 4, 2, 0, 7, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [0, 1, 2, 2, 2, 0, 2, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0, 2, 3, 2, 1, 2, 0, 3, 0, 0, 3], [48, 9, 45, 71, 34, 14, 69, 20, 87, 76, 68, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 78, 47, 31, 14], "tree_depth": 49, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(tf.math.multiply(alpha, beta)), tf.math.subtract(tf.math.pow(tf.math.multiply(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.math.divide_no_nan(tf.math.pow(tf.math.pow(beta, beta), tf.math.pow(tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(tf.math.pow(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.subtract(tf.math.negative(tf.math.subtract(tf.math.pow(tf.math.add(tf.math.multiply(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), sigma), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(beta, sigma)), sigma), beta)), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), sigma), tf.math.pow(tf.math.add(tf.math.negative(tf.math.add(beta, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))), sigma), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))))), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.square(tf.math.negative(beta)), sigma)))), tf.math.subtract(tf.math.sqrt(tf.math.pow(beta, alpha)), tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), sigma))), tf.math.subtract(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [1, 3, 2, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [7, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [2, 3, 2, 0], [1, 0], [12], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1], [2, 0, 6, 7, 7, 5, 3, 1, 4, 3, 9, 5, 6, 4, 4, 4, 3, 3, 1, 4, 5, 1, 1, 0, 1, 4, 7, 3, 9, 9, 3, 2, 4, 6, 4, 2, 0, 7, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [0, 1, 2, 2, 2, 0, 2, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0, 2, 3, 2, 1, 2, 0, 0, 0, 2, 1, 1], [16, 9, 45, 71, 34, 14, 69, 20, 87, 76, 68, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 83, 51, 32, 15], "tree_depth": 45, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha)), tf.math.add(tf.math.add(tf.math.square(beta), beta), tf.math.multiply(tf.math.subtract(tf.math.pow(tf.math.multiply(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.math.divide_no_nan(tf.math.pow(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.pow(beta, tf.math.multiply(tf.math.multiply(tf.math.subtract(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, tf.math.square(tf.math.subtract(tf.math.subtract(tf.math.negative(tf.math.subtract(tf.math.pow(tf.math.add(tf.math.multiply(beta, beta), sigma), sigma), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(beta, tf.math.add(tf.math.pow(tf.math.divide_no_nan(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), sigma), beta), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))))))), tf.math.pow(tf.math.add(sigma, tf.math.negative(tf.math.add(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.square(beta), sigma)))), tf.math.negative(beta))))), alpha), tf.math.subtract(tf.math.sqrt(beta), tf.math.pow(tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), beta), tf.math.square(alpha))))), tf.math.add(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [1, 3, 2, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [7, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [2, 3, 2, 0], [1, 0], [12], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [3, 0, 6, 7, 7, 5, 3, 1, 4, 3, 9, 5, 6, 4, 4, 4, 3, 3, 1, 4, 5, 1, 1, 0, 1, 4, 7, 3, 9, 9, 3, 2, 4, 6, 4, 2, 0, 7, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9, 5, 3, 8, 9, 8, 9, 5, 5, 1, 0, 4, 9, 6, 9, 1, 4, 8, 8], [0, 1, 2, 2, 2, 0, 2, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0, 2, 3, 2, 1, 2, 0, 2, 1, 1, 0, 3, 2, 2], [48, 9, 45, 71, 34, 14, 69, 20, 87, 76, 68, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 103, 69, 34, 18], "tree_depth": 52, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.divide_no_nan(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.add(tf.math.add(tf.math.square(beta), beta), tf.math.multiply(tf.math.subtract(tf.math.pow(tf.math.multiply(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.math.divide_no_nan(tf.math.pow(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.pow(beta, tf.math.multiply(tf.math.multiply(tf.math.subtract(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, tf.math.square(tf.math.subtract(tf.math.subtract(tf.math.negative(tf.math.subtract(tf.math.pow(tf.math.add(tf.math.multiply(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(beta, sigma), sigma)), tf.math.pow(tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.square(tf.math.negative(sigma)), tf.math.subtract(beta, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))), sigma), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.pow(beta, tf.math.add(tf.math.subtract(sigma, tf.math.add(beta, tf.math.square(tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), alpha)))), tf.math.square(tf.math.multiply(tf.math.sqrt(beta), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))))))), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))))), tf.math.sqrt(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)))), beta)))), tf.math.square(tf.math.square(tf.math.subtract(alpha, tf.math.negative(tf.math.pow(alpha, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))))))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(sigma, tf.math.sqrt(tf.math.sqrt(beta))), beta)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [3, 3, 2, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [7, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [2, 3, 2, 0], [1, 0], [12], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 0, 6, 7, 7, 5, 3, 1, 4, 3, 9, 5, 6, 4, 4, 4, 3, 3, 1, 4, 5, 1, 1, 0, 1, 4, 7, 3, 9, 9, 3, 2, 4, 6, 4, 2, 0, 7, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [0, 1, 2, 2, 2, 0, 2, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0, 2, 3, 2, 1, 2, 0], [48, 9, 45, 71, 34, 14, 69, 20, 87, 76, 68, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 65, 38, 27, 11], "tree_depth": 45, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.divide_no_nan(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.add(tf.math.add(tf.math.square(beta), beta), tf.math.multiply(tf.math.subtract(tf.math.pow(tf.math.multiply(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.math.divide_no_nan(tf.math.pow(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.pow(beta, tf.math.multiply(tf.math.multiply(tf.math.subtract(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, tf.math.square(tf.math.subtract(tf.math.subtract(tf.math.negative(tf.math.subtract(tf.math.pow(tf.math.add(tf.math.multiply(beta, beta), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), sigma)), tf.math.multiply(sigma, beta)), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))), tf.math.add(sigma, beta))), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))))), tf.math.pow(sigma, tf.math.divide_no_nan(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), beta))), tf.math.pow(tf.math.add(sigma, beta), tf.math.negative(alpha))), tf.math.add(beta, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [2, 3, 2, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [7, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 0], [2, 3, 2, 0], [1, 0], [12], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 3, 6, 7, 7, 5, 3, 1, 4, 3, 9, 5, 6, 4, 4, 4, 3, 3, 1, 4, 5, 1, 1, 0, 1, 4, 7, 3, 9, 9, 3, 2, 4, 6, 4, 2, 0, 7, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [0, 1, 2, 2, 2, 0, 2, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0, 2, 3, 2, 1, 2, 0], [48, 9, 45, 71, 34, 14, 69, 20, 87, 76, 68, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 8, 4, 4, 0, 0, 5, 2, 3, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.negative(sigma)), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, beta))", "other_info": {"loss": [2.3020334243774414, 2.302446126937866, 2.302138090133667, 2.3029491901397705, 2.301863670349121, 2.30179500579834], "accuracy": [0.08730682730674744, 0.09034473448991776, 0.0878351628780365, 0.09192973375320435, 0.08809932321310043, 0.09959053993225098], "val_loss": [2.29915452003479, 2.29915452003479, 2.29915452003479, 2.29915452003479, 2.29915452003479, 2.29915452003479], "val_accuracy": [0.03333333507180214, 0.03333333507180214, 0.03333333507180214, 0.03333333507180214, 0.03333333507180214, 0.03333333507180214]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [4, 3, 2, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [7, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [2, 3, 2, 0], [1, 0], [12], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 9, 6, 7, 7, 5, 3, 1, 4, 3, 9, 5, 6, 4, 4, 4, 3, 3, 1, 4, 5, 1, 1, 0, 1, 4, 7, 3, 9, 9, 3, 2, 4, 6, 4, 2, 0, 7, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9, 6, 5, 0], [0, 1, 2, 2, 2, 0, 2, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0, 2, 3, 2, 1, 2, 0], [16, 9, 45, 71, 34, 14, 69, 20, 87, 76, 68, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.03685714304447174, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [2.3020334243774414, 2.302446126937866, 2.302138090133667, 2.3029491901397705, 2.301863670349121, 2.30179500579834], "accuracy": [0.08730682730674744, 0.09034473448991776, 0.0878351628780365, 0.09192973375320435, 0.08809932321310043, 0.09959053993225098], "val_loss": [2.29915452003479, 2.29915452003479, 2.29915452003479, 2.29915452003479, 2.29915452003479, 2.29915452003479], "val_accuracy": [0.03333333507180214, 0.03333333507180214, 0.03333333507180214, 0.03333333507180214, 0.03333333507180214, 0.03333333507180214]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [0, 3, 2, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [7, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [2, 3, 2, 0], [1, 0], [12], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 7, 6, 7, 7, 5, 3, 1, 4, 3, 9, 5, 6, 4, 4, 4, 3, 3, 1, 4, 5, 1, 1, 0, 1, 4, 7, 3, 9, 9, 3, 2, 4, 6, 4, 2, 0, 7, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [0, 1, 2, 2, 2, 0, 2, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0, 2, 3, 2, 1, 2, 0], [11, 9, 45, 71, 34, 14, 69, 20, 87, 76, 68, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.03314285725355148, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, beta))", "other_info": {"loss": [2.302410840988159, 2.3037288188934326, 2.3043408393859863, 2.306109666824341, 2.305915117263794, 2.306786298751831], "accuracy": [0.08598599582910538, 0.08809932321310043, 0.08374059200286865, 0.08440100401639938, 0.0804385170340538, 0.08889182657003403], "val_loss": [2.3001551628112793, 2.3011512756347656, 2.3021645545959473, 2.3031868934631348, 2.304206132888794, 2.3052289485931396], "val_accuracy": [0.029333332553505898, 0.026333333924412727, 0.023333333432674408, 0.020999999716877937, 0.01899999938905239, 0.017000000923871994]}}]