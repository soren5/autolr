[{"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [95, 38]], "fitness": -0.7922857403755188, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(grad), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.21360359622062, 1.6436461768586794, 1.1757699411779174, 1.0304978948700083, 0.922193722151148, 0.8309626974339624, 0.7887435900206107, 0.7705113754343631, 0.7444695477645631, 0.7136606510997747, 0.7192945449564199, 0.6737627210067232, 0.670361452043773, 0.6549393239510671, 0.6435356388837119, 0.6345971783217407, 0.6345508977674365, 0.6030800411682623, 0.6016900846829362, 0.6245631307989394, 0.5955025758158813, 0.5943319034330786, 0.5847640561153703], "accuracy": [0.2509576082229614, 0.4831594228744507, 0.5898824334144592, 0.633469820022583, 0.663848876953125, 0.6989829540252686, 0.7102100253105164, 0.7124554514884949, 0.7215691208839417, 0.739400327205658, 0.7294940948486328, 0.7440232634544373, 0.7478536367416382, 0.759609043598175, 0.7606657147407532, 0.7658169269561768, 0.7586844563484192, 0.7757231593132019, 0.7798177003860474, 0.759609043598175, 0.7788931727409363, 0.7758552432060242, 0.7823272943496704], "val_loss": [1.6602396965026855, 0.9407095568520683, 0.8174881764820644, 0.6808632612228394, 0.6404981102262225, 0.6034444911139352, 0.5878406933375767, 0.5411238500050136, 0.5388498135975429, 0.5663130283355713, 0.5316465241568429, 0.5042785576411656, 0.5342350687299456, 0.5184583153043475, 0.504563433783395, 0.5080490112304688, 0.47787066868373324, 0.4678347110748291, 0.49009941305433, 0.4882903780255999, 0.4634993246623448, 0.46361277784620014, 0.45427094187055317], "val_accuracy": [0.5443333387374878, 0.6520000100135803, 0.6539999842643738, 0.7086666822433472, 0.7283333539962769, 0.7353333234786987, 0.7393333315849304, 0.7770000100135803, 0.7630000114440918, 0.7523333430290222, 0.7739999890327454, 0.7900000214576721, 0.7606666684150696, 0.7666666507720947, 0.7730000019073486, 0.7799999713897705, 0.8013333082199097, 0.812666654586792, 0.7846666574478149, 0.800000011920929, 0.8083333373069763, 0.8019999861717224, 0.8043333292007446]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [6, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 5, 0, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 2, 3, 1], [95, 38]], "fitness": -0.7794285416603088, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.square(grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), beta)))", "other_info": {"loss": [2.2085718018047213, 1.64843651453549, 1.196288044930386, 1.067682779381666, 0.9303883640852114, 0.8669684965770164, 0.8227906293006794, 0.788578472534553, 0.76177496902065, 0.7424276916106237, 0.7566176694240301, 0.6963713724757103, 0.6924656150032736, 0.6862117986731983, 0.6845808425804313, 0.662736706493742, 0.6495152762726297, 0.6371305020981933, 0.6281471485553747, 0.6275063561505142, 0.6079745968067415, 0.6147694925133893, 0.5970466125753058, 0.598150224646935], "accuracy": [0.2607317268848419, 0.4803856909275055, 0.5815612077713013, 0.6176198720932007, 0.6679434776306152, 0.6888125538825989, 0.7010962963104248, 0.7078325152397156, 0.7231541275978088, 0.7248712182044983, 0.7234182953834534, 0.739928662776947, 0.7445515990257263, 0.7448157668113708, 0.7434949278831482, 0.7504953145980835, 0.7535332441329956, 0.7592127919197083, 0.7656848430633545, 0.7675340175628662, 0.7716285586357117, 0.7766477465629578, 0.7771760821342468, 0.7733456492424011], "val_loss": [1.6516543797084264, 0.9561244079044887, 0.7965056555611747, 0.765371458871024, 0.6256807191031319, 0.6130406856536865, 0.5728629657200405, 0.5953537396022252, 0.5622164351599557, 0.5732423748288836, 0.5249439477920532, 0.5066797052110944, 0.513216495513916, 0.5206706864493233, 0.4963590247290475, 0.4953266382217407, 0.4881906339100429, 0.4837972606931414, 0.4692072187151228, 0.470419066292899, 0.4728492498397827, 0.4674769469669887, 0.4608455300331116, 0.48042871270860943], "val_accuracy": [0.49000000953674316, 0.6676666736602783, 0.6480000019073486, 0.6729999780654907, 0.721666693687439, 0.7269999980926514, 0.7450000047683716, 0.7350000143051147, 0.7523333430290222, 0.7350000143051147, 0.7833333611488342, 0.7839999794960022, 0.7699999809265137, 0.7799999713897705, 0.7926666736602783, 0.7799999713897705, 0.7873333096504211, 0.7846666574478149, 0.8019999861717224, 0.7956666946411133, 0.7860000133514404, 0.7993333339691162, 0.7976666688919067, 0.7789999842643738]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 6, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 0, 0, 3, 0, 1, 2, 3, 3, 0], [16, 16, 53, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [69, 17, 50]], "fitness": -0.6188571453094482, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 9, 8, 3, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(alpha, tf.math.pow(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), tf.math.negative(tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.square(grad), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, alpha))))), tf.math.add(tf.math.add(beta, beta), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.3010397554152457, 2.2986469176215203, 2.295187744245931, 2.291408526347912, 2.289120054547309, 2.286832404851504, 2.2832448949840294, 2.280125927317333, 2.2773911952657504, 2.2762017738171982, 2.2727838674194354, 2.269156073440634, 2.266606233627285, 2.2630529383847175, 2.2602193523722396, 2.2577265493936856, 2.253460103274179, 2.2508301092192418, 2.247784467562866, 2.2439948236780114, 2.241104838051706, 2.237006135226839, 2.232393358613774, 2.2302690728811965, 2.2242327859735194, 2.2197900758742533, 2.217594637201289, 2.2135871443624398, 2.2084079934400953, 2.201420931406088, 2.1991828042502575, 2.192851073895274, 2.191174598528079, 2.1845574988633603, 2.1813779211378117, 2.1724361296358867, 2.1669094435936582, 2.1603409081969076, 2.154605107017087, 2.1474611373420687, 2.1403284651681087, 2.137421388699158, 2.1277377957507935, 2.1206762029541766, 2.109940862296642, 2.1043495292661056, 2.0958040399857483, 2.087039274483498, 2.0794723851412136, 2.069703646245303, 2.0609122172889616, 2.0529133061754266, 2.0388428160322656, 2.030919869751301, 2.0164061462433582, 2.008721965037285, 1.9934476359393445, 1.9809473171651073, 1.9769478807233942, 1.9654605392735192, 1.949890539567736, 1.9423698167349952, 1.9228054388182558, 1.9110438669866276, 1.8978637699532297, 1.8840418517581696, 1.8681574848113578, 1.862279638480737, 1.8485286320520193, 1.8303232317382727, 1.8122910886880916, 1.808642306773103, 1.789353732718862, 1.773901614294454, 1.7583205459329194, 1.742071711344726, 1.7271156431488341, 1.7145308440686722, 1.7029291845000951, 1.6882678264829036, 1.6706126491863809, 1.6544477901501569, 1.639396218906509, 1.6278176026148425, 1.6193874755382476, 1.5988011046360355, 1.5882226060551896, 1.5736714827937222, 1.5628247620360003, 1.5539645166004086, 1.540741878824306, 1.5258494913774852, 1.5117404433509787, 1.5010703937362733, 1.4905612733873945, 1.4769322111496064, 1.4641727237748023, 1.4558480832208622, 1.4332797329864482, 1.4263251914702166], "accuracy": [0.09417514503002167, 0.09536388516426086, 0.10447761416435242, 0.11636507511138916, 0.12468630075454712, 0.1344604343175888, 0.14053626358509064, 0.1460837423801422, 0.1624620258808136, 0.15836745500564575, 0.17316074669361115, 0.1744815707206726, 0.18650111556053162, 0.19297318160533905, 0.1974640041589737, 0.2110685557126999, 0.20803064107894897, 0.22097477316856384, 0.23101307451725006, 0.23722097277641296, 0.2405230551958084, 0.2533350884914398, 0.25822216272354126, 0.2620525658130646, 0.2727513015270233, 0.2759212851524353, 0.28780874609947205, 0.28886541724205017, 0.2900541424751282, 0.3069607615470886, 0.29982829093933105, 0.31541407108306885, 0.3140932619571686, 0.3283582031726837, 0.3249240517616272, 0.3329811096191406, 0.33826443552970886, 0.3457931578159332, 0.34605732560157776, 0.35081231594085693, 0.3455289900302887, 0.35662394762039185, 0.36824727058410645, 0.36441686749458313, 0.3765684962272644, 0.369700163602829, 0.3863426148891449, 0.3879276216030121, 0.3867388665676117, 0.39162594079971313, 0.3921542763710022, 0.3910976052284241, 0.3961167633533478, 0.39585259556770325, 0.41209879517555237, 0.40523049235343933, 0.4130233824253082, 0.42266544699668884, 0.4225333631038666, 0.421740859746933, 0.4348170757293701, 0.42570334672927856, 0.4361378848552704, 0.43243956565856934, 0.43825122714042664, 0.43891164660453796, 0.4443270266056061, 0.4472328722476959, 0.4447232782840729, 0.45106327533721924, 0.4554220139980316, 0.45264825224876404, 0.4563465714454651, 0.4605732262134552, 0.46453574299812317, 0.46849822998046875, 0.476951539516449, 0.4772156774997711, 0.4694227874279022, 0.47946110367774963, 0.49227315187454224, 0.4991414546966553, 0.4892352521419525, 0.49253731966018677, 0.4900277256965637, 0.4970281422138214, 0.49412229657173157, 0.5065380930900574, 0.5052172541618347, 0.5095760226249695, 0.5124818682670593, 0.5111610293388367, 0.5099722743034363, 0.5180293321609497, 0.5231805443763733, 0.5235767960548401, 0.5254259705543518, 0.5263505578041077, 0.5373134613037109, 0.5315017700195312], "val_loss": [1.9678450311933244, 1.965121132986886, 1.9624443735395158, 1.959766115461077, 1.9570839064461845, 1.9543835776192802, 1.9516726221357072, 1.9489506312779017, 1.946185793195452, 1.9434170041765486, 1.9406182425362724, 1.9378228868756975, 1.934962272644043, 1.9320590155465263, 1.9290977886744909, 1.9260734830583846, 1.922980785369873, 1.9198379516601562, 1.9166315623692103, 1.9133425440107072, 1.909975801195417, 1.9065043585641044, 1.9029246057782854, 1.8992501667567663, 1.8954552922930037, 1.8915298325674874, 1.8875177928379603, 1.8834084102085658, 1.8791418075561523, 1.8746674401419503, 1.8700599670410156, 1.8652584212166923, 1.8603734288896834, 1.8552831241062708, 1.8500512668064661, 1.84449679510934, 1.8387789045061385, 1.8328334944588798, 1.8266609055655343, 1.8203041212899345, 1.8137038094656808, 1.8069819041660853, 1.7999463081359863, 1.7927199772426061, 1.7851142883300781, 1.7773493358067103, 1.769263812473842, 1.7608778817313058, 1.752314908163888, 1.7434489386422294, 1.7343691417149134, 1.7250290598188127, 1.7152821336473738, 1.7052583013262068, 1.6948723452431815, 1.684316975729806, 1.6733283655984061, 1.6619505541665214, 1.6505630356924874, 1.6389432975224085, 1.6268415110451835, 1.6147004536220007, 1.602069514138358, 1.589270864214216, 1.5762170042310442, 1.5628918239048548, 1.5492217200142997, 1.5356390816824776, 1.5218865530831474, 1.5078582763671875, 1.4935827255249023, 1.4794630323137556, 1.4650305339268275, 1.4504879202161516, 1.4358566829136439, 1.4211164542606898, 1.406327554157802, 1.3915768010275704, 1.3770677702767509, 1.3624611582074846, 1.347815922328404, 1.3330954824175154, 1.318620000566755, 1.304161446435111, 1.2898269721439906, 1.2756242752075195, 1.261552095413208, 1.2478406088692802, 1.2342227867671423, 1.2209171908242362, 1.2077912943703788, 1.194950819015503, 1.1820781230926514, 1.1695305960518974, 1.1573091915675573, 1.14530576978411, 1.1334398814610072, 1.122023378099714, 1.110539742878505, 1.099501064845494], "val_accuracy": [0.055666666477918625, 0.07566666603088379, 0.10066666454076767, 0.12700000405311584, 0.1523333340883255, 0.18166667222976685, 0.20866666734218597, 0.22833333909511566, 0.25066667795181274, 0.27433332800865173, 0.29600000381469727, 0.3140000104904175, 0.3283333480358124, 0.3449999988079071, 0.35366666316986084, 0.3610000014305115, 0.36633333563804626, 0.3763333261013031, 0.382999986410141, 0.38866665959358215, 0.39500001072883606, 0.39933332800865173, 0.40566667914390564, 0.41066667437553406, 0.4153333306312561, 0.42366665601730347, 0.42899999022483826, 0.4350000023841858, 0.437666654586792, 0.44200000166893005, 0.44966667890548706, 0.45366665720939636, 0.4569999873638153, 0.460999995470047, 0.4650000035762787, 0.4703333377838135, 0.4723333418369293, 0.47566667199134827, 0.4790000021457672, 0.48266667127609253, 0.4860000014305115, 0.4906666576862335, 0.49266666173934937, 0.49533334374427795, 0.500333309173584, 0.5063333511352539, 0.5103333592414856, 0.5170000195503235, 0.5206666588783264, 0.5246666669845581, 0.5296666622161865, 0.5316666960716248, 0.5360000133514404, 0.5379999876022339, 0.5406666398048401, 0.5429999828338623, 0.5450000166893005, 0.5479999780654907, 0.5496666431427002, 0.5526666641235352, 0.5546666383743286, 0.5566666722297668, 0.5569999814033508, 0.5580000281333923, 0.5590000152587891, 0.5613333582878113, 0.5630000233650208, 0.565666675567627, 0.5713333487510681, 0.5743333101272583, 0.574999988079071, 0.5736666917800903, 0.5753333568572998, 0.5763333439826965, 0.5770000219345093, 0.5773333311080933, 0.5776666402816772, 0.5796666741371155, 0.581333339214325, 0.5833333134651184, 0.5873333215713501, 0.5886666774749756, 0.5899999737739563, 0.5899999737739563, 0.5910000205039978, 0.593999981880188, 0.596666693687439, 0.5996666550636292, 0.6016666889190674, 0.6043333411216736, 0.606333315372467, 0.6103333234786987, 0.6143333315849304, 0.6163333058357239, 0.6200000047683716, 0.6226666569709778, 0.6256666779518127, 0.6276666522026062, 0.6290000081062317, 0.6349999904632568]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 6, 9, 0], [3, 0, 0, 3, 1, 0], [4, 57, 19], [1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [4, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 0, 0, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 1, 1, 1], [3, 3, 0], [3, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 1, 2, 3, 9], [1, 3, 3, 1], [95, 7]], "fitness": -0.2782857120037079, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 6, 3, 3, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.square(beta), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(alpha, tf.math.add(sigma, sigma)))", "other_info": {"loss": [4.58616281349299, 2.441274641590222, 2.3655116056422862, 1248.1314804224276, NaN, NaN, NaN], "accuracy": [0.1706511676311493, 0.12217672914266586, 0.14529123902320862, 0.1220446452498436, 0.10130762308835983, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0236585480826244, 1.8466596603393555, 2.0209717069353377, 95255492315.42857, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.1863333284854889, 0.1106666699051857, 0.07866666465997696, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [82, 57], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0, 0, 0, 0], [0, 0, 1, 0, 0, 1, 1], [3, 3, 0, 7], [5, 3, 2], [], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0], [0, 3, 9, 4, 9], [0, 3, 3, 1], [95, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 8, 7, 4, 3, 0, 2, 1, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, sigma), tf.math.add(sigma, beta))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1244288473.3067627, 23679933488.014793, 111003721822.13605, 307230627904.6509, 656342812143.161, 1215005334302.263], "accuracy": [0.09721305221319199, 0.09576013684272766, 0.10038304328918457, 0.09985470771789551, 0.10315678268671036, 0.09893012791872025], "val_loss": [4726605092.571428, 37801659830.85714, 127567691776.0, 302366439131.4286, 590525160301.7142, 1020429561270.8572], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [6, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 1, 2, 3, 3, 0], [38, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0], [5, 4, 2, 4, 9, 9], [0, 3, 3, 1], [95, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 2, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.square(tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302439650020516, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 8, 9, 0], [0, 0, 0, 3, 1, 0], [4, 57, 19], [1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [6, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 0, 3, 0, 1, 2, 3, 3, 0], [71, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [6, 3], [], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 1, 9, 3, 9], [0, 2, 3, 1], [95, 7]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 4, 2, 3, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.square(grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09338264167308807, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 5, 0, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 6, 9, 3, 9], [0, 2, 3, 1], [95, 70]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09377889335155487, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [0, 0, 0, 3, 1, 0], [4, 57, 30], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 1, 2, 3, 3, 0], [38, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 1, 1, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 1, 9, 3, 9], [2, 3, 0, 1], [70, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 5, 1, 3, 9, 9, 5, 4, 2, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.multiply(grad, tf.math.add(beta, tf.math.pow(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))))), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [0, 3], [70], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 3, 3, 1], [84, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.302439650020516, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [3, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 1, 2, 3, 3, 0], [38, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0], [5, 4, 2, 4, 9, 9], [0, 3, 3, 1], [69, 38, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 2, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302439650020516, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [82, 57], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 1, 1, 0], [3, 3, 0], [4, 2, 4], [], [1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 1, 9, 3, 9], [2, 3, 0, 1], [70, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0734381154179573, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [0, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 1, 2, 3, 3, 0], [38, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0], [5, 4, 2, 4, 9, 9], [0, 3, 3, 1], [19, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302439650020516, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 71], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [6, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 0, 0, 3, 0, 1, 2, 3, 3, 0], [28, 16, 68, 84, 1, 78], [0, 0, 0, 0, 1, 1], [1, 1, 0, 1, 0, 0], [3, 0, 0, 3, 9], [3, 4, 7], [56], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [4, 4, 6, 1, 9, 8, 2, 2, 3, 0, 6, 6, 0, 3, 0], [0, 2, 3, 1], [70, 38, 32, 2]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 2, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(grad)), tf.math.multiply(tf.math.pow(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302439650020516, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 0, 0, 3, 0, 1, 2, 3, 3, 0], [16, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [69, 38, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 7, 7, 3, 1, 1, 0, 1, 0, 4, 3, 1, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.multiply(alpha, tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), tf.math.negative(grad))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)), alpha)), tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [842487.3094877745, 15943329.27644961, 74613006.80702682, 206357999.41038173, 440669477.4397041, 815547908.7676661], "accuracy": [0.09734513610601425, 0.09576013684272766, 0.10038304328918457, 0.09998679161071777, 0.10302469879388809, 0.09893012791872025], "val_loss": [3189308.3571428573, 25424006.285714287, 85706425.14285715, 203039122.2857143, 396423588.5714286, 684863122.2857143], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [0, 0, 0, 3, 1, 0], [5, 71, 6], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 0, 0, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 0, 0], [4, 3], [], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [4, 3, 0, 1, 4, 8, 2, 2, 3, 0, 7, 6, 0, 3, 0], [0, 3, 3, 1, 0, 2, 2, 2, 2], [95, 26, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 13, 7, 6, 2], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.multiply(sigma, tf.math.negative(tf.math.subtract(sigma, tf.math.pow(alpha, tf.math.sqrt(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), beta)))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [0, 0, 0, 3, 1, 0], [77, 57], [1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 2, 3, 1], [95, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [892171.6794459207, 16885661.65896183, 79025853.06775855, 218566287.22863558, 466743474.1619337, 863808701.9120327], "accuracy": [0.09734513610601425, 0.09576013684272766, 0.10038304328918457, 0.09985470771789551, 0.10302469879388809, 0.09893012791872025], "val_loss": [3377652.285714286, 26927348.0, 90776306.28571428, 215051785.14285713, 419880384.0, 725392877.7142857], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 2, 3, 1], [95, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 4, 2, 2, 0, 4, 3, 1, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [7308648.011557143, 138761225.2394664, 650000628.3597939, 1798473010.0774007, 3841449071.245542, 7110429758.892616], "accuracy": [0.09721305221319199, 0.09576013684272766, 0.10038304328918457, 0.09998679161071777, 0.10302469879388809, 0.09893012791872025], "val_loss": [27722970.285714287, 221410070.85714287, 746842148.5714285, 1769801142.857143, 3456062464.0, 5971457901.714286], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 3, 3, 9, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 1, 0, 1, 2, 3, 3, 0], [16, 16, 99, 84, 1, 78], [1, 0, 0, 1, 0, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 9, 9], [0, 3, 3, 1], [38, 2, 62]], "fitness": -0.09942857176065445, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 4, 0, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302751103317922, 2.3046774487878983, 2.3057198293330945, 2.3063897656695307, 2.3093178808539534, 2.313321713018159, 2.3152905686058154, 2.319936385889725, 2.3261939862999133, 2.335447729948631, 2.3395418160312196, 2.344148260270757, 2.3559302823292567, 2.363665093583296, 2.3813257630569526, 2.3985746997993984, 2.3998936450460944, 2.418113138256544, 2.4334309091657427, 2.455733056900413, 2.4780099784630387, 2.4952318373294538, 2.5135160693875425, 2.5414554288657807, 2.562615996732247, 2.596179012955613, 2.639356353137755, 2.6676424517371413, 2.70061052303745, 2.7179680973106386, 2.7777528369179523, 2.8012706530234284, 2.8461906325784043, 2.9020762021877604, 2.9471049233513296, 2.980980996710198, 3.037038190096219, 3.097349702501026, 3.1121890282571085], "accuracy": [0.09153348207473755, 0.08506141602993011, 0.08308017253875732, 0.09100515395402908, 0.08519349992275238, 0.08651433140039444, 0.09470347315073013, 0.09338264167308807, 0.09259014576673508, 0.08915598690509796, 0.09126931428909302, 0.09311848133802414, 0.09708096832036972, 0.09536388516426086, 0.09787346422672272, 0.09734513610601425, 0.09602430462837219, 0.09140139818191528, 0.1014397069811821, 0.09496764093637466, 0.09206181764602661, 0.10038304328918457, 0.0944393053650856, 0.09628847241401672, 0.09840179979801178, 0.10170386731624603, 0.09747721254825592, 0.10091137140989304, 0.09668471664190292, 0.10077928751707077, 0.10077928751707077, 0.09655263274908066, 0.09787346422672272, 0.0948355570435524, 0.10210011899471283, 0.10527011007070541, 0.10276053100824356, 0.09906221181154251, 0.09813763201236725], "val_loss": [1.9713247162955148, 1.9722448076520647, 1.973243168422154, 1.974274022238595, 1.9752966335841589, 1.9763447897774833, 1.9774699211120605, 1.9788282258169991, 1.980672836303711, 1.9830927848815918, 1.9861134120396204, 1.9897420065743583, 1.9939746856689453, 1.9987810679844447, 2.004169395991734, 2.010157448904855, 2.016770907810756, 2.024040767124721, 2.032001086643764, 2.0406783648899625, 2.050102710723877, 2.0603034836905345, 2.07131222316197, 2.083164760044643, 2.0958923612322127, 2.1095268385750905, 2.124099458966936, 2.1396428516932895, 2.1561917577471053, 2.1737685884748186, 2.192401545388358, 2.2121166501726424, 2.2329418318612233, 2.254905632564, 2.2780322347368513, 2.302352632795061, 2.3278819492885043, 2.354647840772356, 2.382669244493757], "val_accuracy": [0.02800000086426735, 0.024000000208616257, 0.02266666665673256, 0.029333332553505898, 0.0403333343565464, 0.052666667848825455, 0.06599999964237213, 0.07800000160932541, 0.08833333104848862, 0.09133332967758179, 0.09399999678134918, 0.0963333323597908, 0.09700000286102295, 0.09666666388511658, 0.09666666388511658, 0.09600000083446503, 0.09700000286102295, 0.0976666659116745, 0.09799999743700027, 0.09866666793823242, 0.09866666793823242, 0.0989999994635582, 0.0989999994635582, 0.09866666793823242, 0.09933333098888397, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.10000000149011612, 0.10000000149011612, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 1, 3, 2, 9, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 3, 2, 3, 3, 0], [28, 38, 99, 84, 1, 78], [0, 0, 0, 1, 0, 0], [0, 0, 1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [95, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 6, 5, 3, 2, 0, 6, 4, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, sigma))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.302225913920848, 2.302740907373052, 2.3020837675421357, 2.301155715428953, 2.301726400702621, 2.3023598139642836], "accuracy": [0.09153348207473755, 0.08572183549404144, 0.08625016361474991, 0.09100515395402908, 0.08730682730674744, 0.0948355570435524], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]