[{"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [2, 6, 9, 0, 0, 3, 4], [3, 0, 0, 3, 1, 0], [8, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.8122857213020325, "mapping_values": [1, 11, 11, 7, 4, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.351545650803764, 1.9332522915464903, 1.6860926596401327, 1.1836639045881732, 1.0325710427617794, 0.8666233436511162, 0.7693494550382866, 0.7382309228248758, 0.6943187650877172, 0.678457376373096, 0.708719254902026, 0.5858145631409876, 0.6137099290457794, 0.5629792253433548, 0.5491493035931047, 0.5581252106019235, 0.5332222094766972, 0.5092689599878737, 0.5104102636915645, 0.48115630594888276, 0.47401184501775173, 0.4663246014744551, 0.46582818165935186, 0.4506182773765745, 0.4428195101812358, 0.43966786798595076, 0.42339922525328166, 0.414232904908522, 0.41421051951463056, 0.41416717288107086, 0.380506784200133, 0.39618680788037514, 0.4000635224759476, 0.39085484418603234, 0.39591897939646864, 0.3646077693823448, 0.36126445189143974, 0.35981019988130536, 0.3472375528939317, 0.3416559489458906, 0.34266631455784224, 0.33140601367132305, 0.3303267314583319], "accuracy": [0.2715625464916229, 0.3695680797100067, 0.445779949426651, 0.572579562664032, 0.624620258808136, 0.6926429867744446, 0.7094175219535828, 0.7226257920265198, 0.7382115721702576, 0.7450799345970154, 0.7323999404907227, 0.7836481332778931, 0.7738739848136902, 0.7931581139564514, 0.7972526550292969, 0.7872143983840942, 0.8104609847068787, 0.8092722296714783, 0.8063663840293884, 0.8203672170639038, 0.8274996876716614, 0.8317263126373291, 0.8265751004219055, 0.8305375576019287, 0.8364813327789307, 0.8430854678153992, 0.8401796221733093, 0.8450667262077332, 0.8442742228507996, 0.8411042094230652, 0.8581429123878479, 0.8529917001724243, 0.8531237840652466, 0.8470479249954224, 0.8474441766738892, 0.8609166741371155, 0.8638224601745605, 0.8665962219238281, 0.8728041052818298, 0.8726720213890076, 0.8709549307823181, 0.8754457831382751, 0.8765024542808533], "val_loss": [1.5320593629564558, 1.7024739129202706, 1.0455515044076102, 0.7425022125244141, 0.7932561806270054, 0.7191382816859654, 0.6327034916196551, 0.5682439293180194, 0.5881313937050956, 0.6482919113976615, 0.4797896317073277, 0.4471511500222342, 0.4667677879333496, 0.4192092588969639, 0.42773417064121794, 0.5069988455091204, 0.4128867728369577, 0.40629453318459646, 0.3980371526309422, 0.38770448310034616, 0.41634464263916016, 0.4246841924531119, 0.43787844691957745, 0.4056560056550162, 0.36193569217409405, 0.3707228558404105, 0.3754349946975708, 0.3669154814311436, 0.35883206129074097, 0.34420416184834074, 0.38251725264957975, 0.35197359323501587, 0.3416680778775896, 0.3774045705795288, 0.3394413505281721, 0.35873994656971525, 0.38375738688877653, 0.3325984222548349, 0.35998086418424335, 0.33929626430783955, 0.333811845098223, 0.3313207370894296, 0.414098858833313], "val_accuracy": [0.3346666693687439, 0.3449999988079071, 0.5576666593551636, 0.6756666898727417, 0.6600000262260437, 0.6626666784286499, 0.7099999785423279, 0.7390000224113464, 0.7409999966621399, 0.718666672706604, 0.7933333516120911, 0.8050000071525574, 0.7856666445732117, 0.815666675567627, 0.8053333163261414, 0.796999990940094, 0.8220000267028809, 0.8230000138282776, 0.8220000267028809, 0.8306666612625122, 0.8136666417121887, 0.8106666803359985, 0.8080000281333923, 0.8266666531562805, 0.8376666903495789, 0.8356666564941406, 0.8326666951179504, 0.847000002861023, 0.8463333249092102, 0.856333315372467, 0.8320000171661377, 0.8476666808128357, 0.8573333621025085, 0.831333339214325, 0.8500000238418579, 0.8453333377838135, 0.8270000219345093, 0.8640000224113464, 0.8460000157356262, 0.8553333282470703, 0.859333336353302, 0.8613333106040955, 0.8253333568572998]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1], [4, 5, 9, 8, 2, 2, 2, 0], [1, 0, 0, 3, 1, 0], [8, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.8122857213020325, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.351545650803764, 1.9332522915464903, 1.6860926596401327, 1.1836639045881732, 1.0325710427617794, 0.8666233436511162, 0.7693494550382866, 0.7382309228248758, 0.6943187650877172, 0.678457376373096, 0.708719254902026, 0.5858145631409876, 0.6137099290457794, 0.5629792253433548, 0.5491493035931047, 0.5581252106019235, 0.5332222094766972, 0.5092689599878737, 0.5104102636915645, 0.48115630594888276, 0.47401184501775173, 0.4663246014744551, 0.46582818165935186, 0.4506182773765745, 0.4428195101812358, 0.43966786798595076, 0.42339922525328166, 0.414232904908522, 0.41421051951463056, 0.41416717288107086, 0.380506784200133, 0.39618680788037514, 0.4000635224759476, 0.39085484418603234, 0.39591897939646864, 0.3646077693823448, 0.36126445189143974, 0.35981019988130536, 0.3472375528939317, 0.3416559489458906, 0.34266631455784224, 0.33140601367132305, 0.3303267314583319], "accuracy": [0.2715625464916229, 0.3695680797100067, 0.445779949426651, 0.572579562664032, 0.624620258808136, 0.6926429867744446, 0.7094175219535828, 0.7226257920265198, 0.7382115721702576, 0.7450799345970154, 0.7323999404907227, 0.7836481332778931, 0.7738739848136902, 0.7931581139564514, 0.7972526550292969, 0.7872143983840942, 0.8104609847068787, 0.8092722296714783, 0.8063663840293884, 0.8203672170639038, 0.8274996876716614, 0.8317263126373291, 0.8265751004219055, 0.8305375576019287, 0.8364813327789307, 0.8430854678153992, 0.8401796221733093, 0.8450667262077332, 0.8442742228507996, 0.8411042094230652, 0.8581429123878479, 0.8529917001724243, 0.8531237840652466, 0.8470479249954224, 0.8474441766738892, 0.8609166741371155, 0.8638224601745605, 0.8665962219238281, 0.8728041052818298, 0.8726720213890076, 0.8709549307823181, 0.8754457831382751, 0.8765024542808533], "val_loss": [1.5320593629564558, 1.7024739129202706, 1.0455515044076102, 0.7425022125244141, 0.7932561806270054, 0.7191382816859654, 0.6327034916196551, 0.5682439293180194, 0.5881313937050956, 0.6482919113976615, 0.4797896317073277, 0.4471511500222342, 0.4667677879333496, 0.4192092588969639, 0.42773417064121794, 0.5069988455091204, 0.4128867728369577, 0.40629453318459646, 0.3980371526309422, 0.38770448310034616, 0.41634464263916016, 0.4246841924531119, 0.43787844691957745, 0.4056560056550162, 0.36193569217409405, 0.3707228558404105, 0.3754349946975708, 0.3669154814311436, 0.35883206129074097, 0.34420416184834074, 0.38251725264957975, 0.35197359323501587, 0.3416680778775896, 0.3774045705795288, 0.3394413505281721, 0.35873994656971525, 0.38375738688877653, 0.3325984222548349, 0.35998086418424335, 0.33929626430783955, 0.333811845098223, 0.3313207370894296, 0.414098858833313], "val_accuracy": [0.3346666693687439, 0.3449999988079071, 0.5576666593551636, 0.6756666898727417, 0.6600000262260437, 0.6626666784286499, 0.7099999785423279, 0.7390000224113464, 0.7409999966621399, 0.718666672706604, 0.7933333516120911, 0.8050000071525574, 0.7856666445732117, 0.815666675567627, 0.8053333163261414, 0.796999990940094, 0.8220000267028809, 0.8230000138282776, 0.8220000267028809, 0.8306666612625122, 0.8136666417121887, 0.8106666803359985, 0.8080000281333923, 0.8266666531562805, 0.8376666903495789, 0.8356666564941406, 0.8326666951179504, 0.847000002861023, 0.8463333249092102, 0.856333315372467, 0.8320000171661377, 0.8476666808128357, 0.8573333621025085, 0.831333339214325, 0.8500000238418579, 0.8453333377838135, 0.8270000219345093, 0.8640000224113464, 0.8460000157356262, 0.8553333282470703, 0.859333336353302, 0.8613333106040955, 0.8253333568572998]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [8, 1, 4, 0, 2, 1, 2, 9, 5, 0], [1, 0, 0, 3, 1, 0], [8, 57, 91], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [2, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.3017142713069916, "mapping_values": [1, 15, 15, 10, 5, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)))))))), tf.math.square(tf.math.negative(alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.68197083089015, 2.2975480369116417, 2.332113183075332, 2.2637669056350873, 2.3077418644824097, 2.2917903862168303, 2.56564605634415, 2.3073292270769232, 2.3042216238612117, 2.303579705439507, 2.3034574706178725], "accuracy": [0.16219785809516907, 0.14159291982650757, 0.1612732857465744, 0.17051908373832703, 0.1010434553027153, 0.11742173880338669, 0.1302337795495987, 0.09655263274908066, 0.09813763201236725, 0.09509972482919693, 0.09681680053472519], "val_loss": [1.9828495298113142, 1.9272704124450684, 1.97305543082101, 1.9833814076014928, 1.973489488874163, 1.8706671169825964, 1.9810889789036341, 1.975229263305664, 1.974118368966239, 1.9737450735909599, 1.9737194606236048], "val_accuracy": [0.10400000214576721, 0.18333333730697632, 0.10000000149011612, 0.09733333438634872, 0.10300000011920929, 0.2563333213329315, 0.0976666659116745, 0.0976666659116745, 0.10400000214576721, 0.10400000214576721, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1], [2, 4, 0, 6, 3, 3, 9, 9, 5, 1, 9, 5, 4, 2, 5, 9, 3, 5, 8, 2, 6, 8, 7], [1, 0, 0, 3, 1, 0], [8, 57, 18, 2], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.3017142713069916, "mapping_values": [1, 12, 12, 8, 4, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.negative(alpha)), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.68197083089015, 2.2975480369116417, 2.332113183075332, 2.2637669056350873, 2.3077418644824097, 2.2917903862168303, 2.56564605634415, 2.3073292270769232, 2.3042216238612117, 2.303579705439507, 2.3034574706178725], "accuracy": [0.16219785809516907, 0.14159291982650757, 0.1612732857465744, 0.17051908373832703, 0.1010434553027153, 0.11742173880338669, 0.1302337795495987, 0.09655263274908066, 0.09813763201236725, 0.09509972482919693, 0.09681680053472519], "val_loss": [1.9828495298113142, 1.9272704124450684, 1.97305543082101, 1.9833814076014928, 1.973489488874163, 1.8706671169825964, 1.9810889789036341, 1.975229263305664, 1.974118368966239, 1.9737450735909599, 1.9737194606236048], "val_accuracy": [0.10400000214576721, 0.18333333730697632, 0.10000000149011612, 0.09733333438634872, 0.10300000011920929, 0.2563333213329315, 0.0976666659116745, 0.0976666659116745, 0.10400000214576721, 0.10400000214576721, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1], [2, 5, 9, 8, 2, 2, 2, 0], [1, 0, 0, 3, 1, 0], [8, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [5, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.3017142713069916, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.68197083089015, 2.2975480369116417, 2.332113183075332, 2.2637669056350873, 2.3077418644824097, 2.2917903862168303, 2.56564605634415, 2.3073292270769232, 2.3042216238612117, 2.303579705439507, 2.3034574706178725], "accuracy": [0.16219785809516907, 0.14159291982650757, 0.1612732857465744, 0.17051908373832703, 0.1010434553027153, 0.11742173880338669, 0.1302337795495987, 0.09655263274908066, 0.09813763201236725, 0.09509972482919693, 0.09681680053472519], "val_loss": [1.9828495298113142, 1.9272704124450684, 1.97305543082101, 1.9833814076014928, 1.973489488874163, 1.8706671169825964, 1.9810889789036341, 1.975229263305664, 1.974118368966239, 1.9737450735909599, 1.9737194606236048], "val_accuracy": [0.10400000214576721, 0.18333333730697632, 0.10000000149011612, 0.09733333438634872, 0.10300000011920929, 0.2563333213329315, 0.0976666659116745, 0.0976666659116745, 0.10400000214576721, 0.10400000214576721, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1], [5, 4, 0, 0, 0, 4, 9, 9, 5], [3, 0, 2, 3, 1, 0], [82, 33, 37, 91], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 2, 9, 3, 6], [3, 1, 0, 1, 3, 2], [82, 71, 50, 41, 34]], "fitness": -0.3017142713069916, "mapping_values": [1, 9, 9, 8, 1, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.68197083089015, 2.2975480369116417, 2.332113183075332, 2.2637669056350873, 2.3077418644824097, 2.2917903862168303, 2.56564605634415, 2.3073292270769232, 2.3042216238612117, 2.303579705439507, 2.3034574706178725], "accuracy": [0.16219785809516907, 0.14159291982650757, 0.1612732857465744, 0.17051908373832703, 0.1010434553027153, 0.11742173880338669, 0.1302337795495987, 0.09655263274908066, 0.09813763201236725, 0.09509972482919693, 0.09681680053472519], "val_loss": [1.9828495298113142, 1.9272704124450684, 1.97305543082101, 1.9833814076014928, 1.973489488874163, 1.8706671169825964, 1.9810889789036341, 1.975229263305664, 1.974118368966239, 1.9737450735909599, 1.9737194606236048], "val_accuracy": [0.10400000214576721, 0.18333333730697632, 0.10000000149011612, 0.09733333438634872, 0.10300000011920929, 0.2563333213329315, 0.0976666659116745, 0.0976666659116745, 0.10400000214576721, 0.10400000214576721, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1], [3, 5, 9, 8, 2, 2, 2, 0], [1, 0, 0, 3, 1, 0], [8, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 2, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.3017142713069916, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.68197083089015, 2.2975480369116417, 2.332113183075332, 2.2637669056350873, 2.3077418644824097, 2.2917903862168303, 2.56564605634415, 2.3073292270769232, 2.3042216238612117, 2.303579705439507, 2.3034574706178725], "accuracy": [0.16219785809516907, 0.14159291982650757, 0.1612732857465744, 0.17051908373832703, 0.1010434553027153, 0.11742173880338669, 0.1302337795495987, 0.09655263274908066, 0.09813763201236725, 0.09509972482919693, 0.09681680053472519], "val_loss": [1.9828495298113142, 1.9272704124450684, 1.97305543082101, 1.9833814076014928, 1.973489488874163, 1.8706671169825964, 1.9810889789036341, 1.975229263305664, 1.974118368966239, 1.9737450735909599, 1.9737194606236048], "val_accuracy": [0.10400000214576721, 0.18333333730697632, 0.10000000149011612, 0.09733333438634872, 0.10300000011920929, 0.2563333213329315, 0.0976666659116745, 0.0976666659116745, 0.10400000214576721, 0.10400000214576721, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1], [2, 5, 9, 8, 2, 2, 2, 0], [1, 0, 0, 3, 1, 0], [8, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [7, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 5, 4, 2, 2, 0, 5, 2, 3, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3013449117350397, 383.8977575084206, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08968432247638702, 0.09774138033390045, 0.10315678268671036, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9702354158673967, 1.973642349243164, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.04699999839067459, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0], [2, 6, 9, 0, 0, 3, 4], [2, 0, 0, 2, 1, 0], [8, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [3, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [0, 1, 0, 1, 3, 2], [38, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [47692.21306129756, 913163.2836316207, 4183998.982168802, 11676104.173556995, 25184296.839783385, 45861939.87742703], "accuracy": [0.09906221181154251, 0.09655263274908066, 0.10236428678035736, 0.09774138033390045, 0.1010434553027153, 0.09972262382507324], "val_loss": [182324.57142857142, 1444260.607142857, 4859073.0, 11500011.42857143, 22440334.285714287, 38753393.14285714], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1], [2, 5, 9, 8, 2, 2, 2, 0], [1, 0, 0, 3, 1, 0], [8, 57, 18, 50, 46, 82, 88, 74], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [2, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07277770340442657, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1], [2, 1, 9, 8, 2, 2, 2, 0], [1, 0, 0, 3, 1, 0], [8, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [2, 3], [], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0], [0, 6, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 8, 5, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09298639744520187, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1], [2, 5, 8, 8, 2, 2, 2, 0], [3, 0, 0, 3, 1, 0], [26, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 4, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 8, 5, 2, 1, 1, 1, 0, 1, 6, 4, 3, 1, 0, 6, 3, 3, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.add(alpha, grad)))), tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))))))), lambda shape,  alpha, beta, grad: tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.pow(sigma, alpha), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 0, 9, 8, 2, 2, 2, 0], [2, 0, 0, 3, 2, 0, 2, 0, 2, 2, 2, 0], [8, 57, 18, 50, 46, 82, 88, 74], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [2, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07277770340442657, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [2, 6, 9, 2, 0, 3, 4, 0, 8, 0, 1, 6, 5, 6, 5, 9, 6, 7, 6, 9, 2, 3, 4, 3, 5, 8], [3, 0, 0, 3, 1, 0], [8, 57, 71, 50, 46, 82, 88, 74], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [1, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 8, 5, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.pow(tf.math.negative(tf.math.add(alpha, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)), alpha)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0], [8, 1, 4, 0, 2, 1, 2, 9, 5, 0], [3, 0, 0, 3, 0, 0], [8, 57, 91], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [3, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [1, 3, 5, 3, 6], [3, 1, 0, 1, 3, 2], [37, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1], [1, 1, 4, 5, 2, 1, 2, 9, 5, 0], [1, 0, 0, 3, 0, 0], [8, 57, 91], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0730418711900711, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [2, 5, 9, 8, 2, 2, 2, 0], [1, 0, 0, 3, 1, 0], [8, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [4, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.square(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3013357977274467, 2.3010226863958834, 2.3020869367362926, 2.3026541624055357, 2.302516059789833, 2.3016611562350233], "accuracy": [0.08928807079792023, 0.09192973375320435, 0.08691058307886124, 0.08889182657003403, 0.09074098616838455, 0.09259014576673508], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [2, 2, 9, 0, 2, 3, 5, 4, 3, 5, 4, 6, 6, 4, 6, 8, 8, 7, 9, 5, 6, 1, 2, 8, 9], [0, 2, 0, 3, 1, 0, 2, 1, 1, 0, 2, 3, 1, 2, 1, 1], [8, 57, 18, 17, 11, 80, 19, 64], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 10, 10, 6, 4, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.add(tf.math.add(alpha, grad), tf.math.multiply(tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.3013357977274467, 2.3010226863958834, 2.3020869367362926, 2.3026541624055357, 2.302516059789833, 2.3016611562350233], "accuracy": [0.08928807079792023, 0.09192973375320435, 0.08691058307886124, 0.08889182657003403, 0.09074098616838455, 0.09259014576673508], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1], [2, 6, 9, 0, 0, 3, 9, 0, 5, 0, 1, 6, 5, 6, 5, 9, 6, 7, 6, 9, 2, 3, 4, 3, 5, 8], [3, 0, 0, 3, 1, 0], [8, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [3, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 10, 10, 8, 2, 3, 1, 1, 0, 1, 0, 5, 4, 2, 2, 0, 5, 3, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(alpha, grad))))))))), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [2.3013357977274467, 2.3010226863958834, 2.3020869367362926, 2.3026541624055357, 2.302516059789833, 2.3016611562350233], "accuracy": [0.08928807079792023, 0.09192973375320435, 0.08691058307886124, 0.08889182657003403, 0.09074098616838455, 0.09259014576673508], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1], [2, 6, 9, 0, 0, 3, 4, 0, 5, 0, 1, 6, 5, 6, 5, 9, 6, 7, 6, 9, 2, 3, 4, 3, 5, 8], [0, 0, 0, 3, 1, 0], [8, 57, 18, 50, 46, 82, 88, 74], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 5, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 5, 5, 3, 2, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.square(sigma), alpha))", "other_info": {"loss": [2.3013353164185624, 2.30102184974223, 2.3020795600257764, 2.302680657414114, 2.3025443803333507, 2.3020481196975253], "accuracy": [0.08928807079792023, 0.09192973375320435, 0.08691058307886124, 0.08849557489156723, 0.09087307006120682, 0.09034473448991776], "val_loss": [1.9705895015171595, 1.9705875941685267, 1.9705916813441686, 1.970607076372419, 1.970909867967878, 1.9702670914786202], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03799999877810478, 0.03400000184774399]}}]