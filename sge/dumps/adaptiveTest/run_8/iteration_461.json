[{"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 1, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [84, 89, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.8205714225769043, "mapping_values": [1, 16, 16, 10, 6, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), grad))))), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.195622104396122, 1.7561824210898405, 1.3322648018216727, 0.9696097892304737, 0.8374910428696903, 0.788770953599, 0.7352511395773222, 0.6699183854790979, 0.6410934522387814, 0.6193622277869745, 0.60951939601121, 0.5941633755788197, 0.5720605420839548, 0.5553609723459696, 0.5459963632234571, 0.518106450974398, 0.501201318192397, 0.4866092959336475, 0.5028753307643206, 0.48051721041055484, 0.48319439556714866, 0.45456663865250146, 0.4628792810851021, 0.4241366517967347, 0.4512950312255191, 0.41908450058391145, 0.43844957377113575, 0.4075069176821645, 0.39496258698702014, 0.41083397820499423, 0.4057151493324249, 0.37526323421441365, 0.3967806903158023, 0.3962734420978791, 0.37613668066714306, 0.36944590871281485, 0.3662808659196042, 0.3602957614125388], "accuracy": [0.2743362784385681, 0.3955884277820587, 0.5165764093399048, 0.6413947939872742, 0.6781138777732849, 0.7020208835601807, 0.7213049530982971, 0.7453441023826599, 0.7573636174201965, 0.7677981853485107, 0.7709681391716003, 0.7740060687065125, 0.7814027070999146, 0.7954035401344299, 0.7918372750282288, 0.8038568496704102, 0.8109893202781677, 0.8216879963874817, 0.8108572363853455, 0.8208954930305481, 0.8181217908859253, 0.8345000743865967, 0.8257825970649719, 0.8444063067436218, 0.8322546482086182, 0.8428213000297546, 0.8403117060661316, 0.8481045961380005, 0.8549728989601135, 0.845859169960022, 0.846387505531311, 0.8601241707801819, 0.8525954484939575, 0.8539162874221802, 0.8589354157447815, 0.863029956817627, 0.8656716346740723, 0.8669924736022949], "val_loss": [1.6292267186301095, 1.4560016223362513, 0.829698017665318, 0.7360849380493164, 0.6989696536745343, 0.6440641539437431, 0.5686285325459072, 0.5153935296194894, 0.5544177804674421, 0.5422688722610474, 0.4806770086288452, 0.4595609988485064, 0.4903427703039987, 0.4481046880994524, 0.43715030806405203, 0.4447003858430045, 0.43202662467956543, 0.4309777702604021, 0.405668522630419, 0.4494087014879499, 0.3948865532875061, 0.3710802367755345, 0.3794986094747271, 0.4111292702811105, 0.36217176062720163, 0.39789667299815584, 0.3591238686016628, 0.41380819252559115, 0.3787790366581508, 0.35756505387169973, 0.3621910810470581, 0.3494923540524074, 0.335318386554718, 0.3506007875714983, 0.3411349058151245, 0.36026863540921894, 0.33591870750699726, 0.33641806670597624], "val_accuracy": [0.4313333332538605, 0.390666663646698, 0.6399999856948853, 0.6243333220481873, 0.6523333191871643, 0.7023333311080933, 0.737333357334137, 0.7696666717529297, 0.7453333139419556, 0.753333330154419, 0.7756666541099548, 0.7983333468437195, 0.7630000114440918, 0.796999990940094, 0.8043333292007446, 0.8026666641235352, 0.8100000023841858, 0.8149999976158142, 0.8309999704360962, 0.7983333468437195, 0.8376666903495789, 0.8433333039283752, 0.8463333249092102, 0.8013333082199097, 0.8416666388511658, 0.8273333311080933, 0.846666693687439, 0.8113333582878113, 0.8370000123977661, 0.8463333249092102, 0.840666651725769, 0.8500000238418579, 0.8653333187103271, 0.8510000109672546, 0.859333336353302, 0.8450000286102295, 0.8636666536331177, 0.8573333621025085]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 1, 4, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [84, 89, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 0, 1, 0, 1], [0, 0, 1, 1], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.8205714225769043, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 5, 4, 2, 2, 0, 5, 2, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.195622104396122, 1.7561824210898405, 1.3322648018216727, 0.9696097892304737, 0.8374910428696903, 0.788770953599, 0.7352511395773222, 0.6699183854790979, 0.6410934522387814, 0.6193622277869745, 0.60951939601121, 0.5941633755788197, 0.5720605420839548, 0.5553609723459696, 0.5459963632234571, 0.518106450974398, 0.501201318192397, 0.4866092959336475, 0.5028753307643206, 0.48051721041055484, 0.48319439556714866, 0.45456663865250146, 0.4628792810851021, 0.4241366517967347, 0.4512950312255191, 0.41908450058391145, 0.43844957377113575, 0.4075069176821645, 0.39496258698702014, 0.41083397820499423, 0.4057151493324249, 0.37526323421441365, 0.3967806903158023, 0.3962734420978791, 0.37613668066714306, 0.36944590871281485, 0.3662808659196042, 0.3602957614125388], "accuracy": [0.2743362784385681, 0.3955884277820587, 0.5165764093399048, 0.6413947939872742, 0.6781138777732849, 0.7020208835601807, 0.7213049530982971, 0.7453441023826599, 0.7573636174201965, 0.7677981853485107, 0.7709681391716003, 0.7740060687065125, 0.7814027070999146, 0.7954035401344299, 0.7918372750282288, 0.8038568496704102, 0.8109893202781677, 0.8216879963874817, 0.8108572363853455, 0.8208954930305481, 0.8181217908859253, 0.8345000743865967, 0.8257825970649719, 0.8444063067436218, 0.8322546482086182, 0.8428213000297546, 0.8403117060661316, 0.8481045961380005, 0.8549728989601135, 0.845859169960022, 0.846387505531311, 0.8601241707801819, 0.8525954484939575, 0.8539162874221802, 0.8589354157447815, 0.863029956817627, 0.8656716346740723, 0.8669924736022949], "val_loss": [1.6292267186301095, 1.4560016223362513, 0.829698017665318, 0.7360849380493164, 0.6989696536745343, 0.6440641539437431, 0.5686285325459072, 0.5153935296194894, 0.5544177804674421, 0.5422688722610474, 0.4806770086288452, 0.4595609988485064, 0.4903427703039987, 0.4481046880994524, 0.43715030806405203, 0.4447003858430045, 0.43202662467956543, 0.4309777702604021, 0.405668522630419, 0.4494087014879499, 0.3948865532875061, 0.3710802367755345, 0.3794986094747271, 0.4111292702811105, 0.36217176062720163, 0.39789667299815584, 0.3591238686016628, 0.41380819252559115, 0.3787790366581508, 0.35756505387169973, 0.3621910810470581, 0.3494923540524074, 0.335318386554718, 0.3506007875714983, 0.3411349058151245, 0.36026863540921894, 0.33591870750699726, 0.33641806670597624], "val_accuracy": [0.4313333332538605, 0.390666663646698, 0.6399999856948853, 0.6243333220481873, 0.6523333191871643, 0.7023333311080933, 0.737333357334137, 0.7696666717529297, 0.7453333139419556, 0.753333330154419, 0.7756666541099548, 0.7983333468437195, 0.7630000114440918, 0.796999990940094, 0.8043333292007446, 0.8026666641235352, 0.8100000023841858, 0.8149999976158142, 0.8309999704360962, 0.7983333468437195, 0.8376666903495789, 0.8433333039283752, 0.8463333249092102, 0.8013333082199097, 0.8416666388511658, 0.8273333311080933, 0.846666693687439, 0.8113333582878113, 0.8370000123977661, 0.8463333249092102, 0.840666651725769, 0.8500000238418579, 0.8653333187103271, 0.8510000109672546, 0.859333336353302, 0.8450000286102295, 0.8636666536331177, 0.8573333621025085]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [3, 9, 6, 2, 0, 9, 8, 1, 1, 6, 1, 8], [2, 3, 0, 2, 0, 0, 2, 2, 0, 0, 0, 3, 2, 2], [84, 23, 68, 73, 46], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [0, 3], [95], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [5, 25, 50, 71, 34]], "fitness": -0.7005714178085327, "mapping_values": [1, 15, 15, 10, 5, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, tf.math.negative(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.subtract(tf.math.add(alpha, grad), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3014387574571864, 2.300283894421103, 2.295993824046695, 2.2902919082215845, 2.2822473797390663, 2.2720084084558794, 2.260169808040473, 2.2466717820991975, 2.2315877280325354, 2.21377791959722, 2.1918418764548453, 2.168212372377139, 2.1393969305880143, 2.106950147103766, 2.0624858117169707, 2.0140791010973147, 1.9544428102785272, 1.892101355185362, 1.81020619339868, 1.7314553597914686, 1.6445489269851645, 1.5757728452144628, 1.5153456144581035, 1.4564747987815716, 1.4265205808807562, 1.3982147477038738, 1.3837247761312084, 1.3742288241312726, 1.359538695374815, 1.3635687312870735, 1.3646644855361212, 1.3722082671865952, 1.2940444159328253, 1.2837803942447703, 1.1926310258282646, 1.1574569871916573, 1.1090695965386117, 1.0413697237320358, 0.9841091955232425, 0.9446564829187339, 0.9265642925937493, 0.9170699118780595, 0.923938888805008, 0.9198860748017925, 0.9169315055628746], "accuracy": [0.09470347315073013, 0.09496764093637466, 0.10447761416435242, 0.12059172987937927, 0.1442345827817917, 0.17474573850631714, 0.20195482671260834, 0.24303261935710907, 0.2744683623313904, 0.3031303584575653, 0.3241315484046936, 0.34764233231544495, 0.3609826862812042, 0.37326639890670776, 0.39466384053230286, 0.4021925628185272, 0.4163254499435425, 0.41685378551483154, 0.43666622042655945, 0.4434024691581726, 0.46070531010627747, 0.4687623679637909, 0.4757627844810486, 0.4954431354999542, 0.49966979026794434, 0.5200105905532837, 0.5226522088050842, 0.529388427734375, 0.5466912984848022, 0.5478800535202026, 0.5587108731269836, 0.5548804402351379, 0.5785233378410339, 0.5869766473770142, 0.6103553175926208, 0.6267336010932922, 0.6349227428436279, 0.6474705934524536, 0.6474705934524536, 0.6655659675598145, 0.6552634835243225, 0.6600185036659241, 0.6494518518447876, 0.6515651941299438, 0.6561880707740784], "val_loss": [1.9694607598440987, 1.966341291155134, 1.9612887927464075, 1.9544172968183244, 1.945786612374442, 1.9355229650224959, 1.9236955642700195, 1.9102285930088587, 1.8948968478611536, 1.8773533276149206, 1.8567586626325334, 1.8321243013654436, 1.8023925508771623, 1.7662957055228097, 1.7224918093000139, 1.669560398374285, 1.6064427580152238, 1.5327940327780587, 1.449495792388916, 1.359069756099156, 1.2659799712044852, 1.1755588395254952, 1.0920438085283553, 1.0181896345955985, 0.9552210399082729, 0.9021995067596436, 0.8568765776497977, 0.8202480248042515, 0.7977119513920375, 0.7883784600666591, 0.7748437949589321, 0.7470186948776245, 0.7228200946535382, 0.7178538356508527, 0.7215952362333026, 0.7162764923913139, 0.6973805597850254, 0.6714557920183454, 0.6528505257197789, 0.6505648578916278, 0.6589519807270595, 0.6698593752724784, 0.6793634380613055, 0.6874262945992606, 0.6951753071376255], "val_accuracy": [0.04600000008940697, 0.06533333659172058, 0.11233333498239517, 0.18400000035762787, 0.2626666724681854, 0.3400000035762787, 0.3713333308696747, 0.3933333456516266, 0.41233333945274353, 0.4286666810512543, 0.4413333237171173, 0.45233333110809326, 0.4596666693687439, 0.4713333249092102, 0.48366665840148926, 0.49900001287460327, 0.5080000162124634, 0.5236666798591614, 0.5389999747276306, 0.5519999861717224, 0.5736666917800903, 0.5870000123977661, 0.5983333587646484, 0.6213333606719971, 0.6480000019073486, 0.6650000214576721, 0.6740000247955322, 0.6826666593551636, 0.6800000071525574, 0.67166668176651, 0.6733333468437195, 0.6970000267028809, 0.7049999833106995, 0.7053333520889282, 0.706333339214325, 0.7059999704360962, 0.7026666402816772, 0.7043333053588867, 0.7113333344459534, 0.718666672706604, 0.7173333168029785, 0.70333331823349, 0.6933333277702332, 0.6946666836738586, 0.7056666612625122]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [2, 9, 8, 6, 2, 3, 8, 4, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [84, 89, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [4, 25, 50, 71, 34]], "fitness": -0.3442857265472412, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(sigma, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.658188700723201, 2.3938248162224873, 2.303358235426583, 2.302803380378186, 2.301687967728441, 2.219464878978636], "accuracy": [0.22401267290115356, 0.12640337646007538, 0.09998679161071777, 0.1006472036242485, 0.11028926074504852, 0.1916523575782776], "val_loss": [1.8015544073922294, 1.9742399624415807, 1.9736089025224959, 1.9731152398245675, 1.97006014415196, 1.9732030459812708], "val_accuracy": [0.36033332347869873, 0.09966666996479034, 0.09966666996479034, 0.07999999821186066, 0.11766666918992996, 0.1743333339691162]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [2, 9, 6, 6, 0, 3, 6, 1, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [84, 89, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [5, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 6, 2, 9, 2, 9], [2, 3, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.3442857265472412, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.divide_no_nan(beta, sigma), beta)", "other_info": {"loss": [2.658188700723201, 2.3938248162224873, 2.303358235426583, 2.302803380378186, 2.301687967728441, 2.219464878978636], "accuracy": [0.22401267290115356, 0.12640337646007538, 0.09998679161071777, 0.1006472036242485, 0.11028926074504852, 0.1916523575782776], "val_loss": [1.8015544073922294, 1.9742399624415807, 1.9736089025224959, 1.9731152398245675, 1.97006014415196, 1.9732030459812708], "val_accuracy": [0.36033332347869873, 0.09966666996479034, 0.09966666996479034, 0.07999999821186066, 0.11766666918992996, 0.1743333339691162]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [3, 9, 6, 2, 0, 9, 8, 1, 1, 6, 1, 8], [0, 2, 0, 2, 1, 2, 2, 2, 0, 0, 0, 3, 2, 2], [84, 23, 82, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [3, 3], [], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [2, 24, 44, 71, 34]], "fitness": -0.33714285492897034, "mapping_values": [1, 15, 15, 10, 5, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 9, 6, 3, 3], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), alpha))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), beta)", "other_info": {"loss": [2.2301223957936966, 2.8499733560577503, 2.406181818742038, 2.2946180826196456, 2.3038576492591227, 2.3032484420806094, 2.3032515839090624], "accuracy": [0.2238806039094925, 0.149649977684021, 0.17302866280078888, 0.1546691358089447, 0.1010434553027153, 0.10460969805717468, 0.09628847241401672], "val_loss": [1.7227631296430315, 1.9201649938310896, 1.944880758013044, 1.9751101221357072, 1.9739838327680315, 1.9736791338239397, 1.9736711638314384], "val_accuracy": [0.21899999678134918, 0.3100000023841858, 0.11666666716337204, 0.0976666659116745, 0.0976666659116745, 0.10400000214576721, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [3, 4, 3, 2, 9, 3, 8, 1, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [84, 89, 94, 73, 46], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 1, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [75, 25, 31, 71, 34]], "fitness": -0.15714286267757416, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.math.add(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), alpha)), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [8.793132722369904, 6.106720241525973, 10.745816007439549, 8.548976771410477, 40.397421413991495, 54.926252832439175], "accuracy": [0.1010434553027153, 0.09879804402589798, 0.09972262382507324, 0.10130762308835983, 0.09998679161071777, 0.10011887550354004], "val_loss": [3.3765296254839217, 7.953114373343332, 9.581661769321986, 7.103930064610073, 53.79990822928293, 74.94575718470982], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09733333438634872, 0.09700000286102295, 0.09700000286102295, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [2, 9, 6, 6, 0, 3, 6, 1, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [84, 89, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 0, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 73, 47, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(beta), tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [163539278.42774883, 2.313967030298094, 2.30557513007115, 2.303551838713205, 2.3031242990285934, 2.303071037054912], "accuracy": [0.09932637959718704, 0.09879804402589798, 0.09602430462837219, 0.09747721254825592, 0.09140139818191528, 0.09655263274908066], "val_loss": [1.9908553532191686, 1.9784694399152483, 1.9749977929251534, 1.9740644182477678, 1.97384398324149, 1.9737039974757604], "val_accuracy": [0.10400000214576721, 0.09966666996479034, 0.09700000286102295, 0.10000000149011612, 0.09833333641290665, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [2, 9, 6, 2, 0, 3, 2, 1, 5, 6, 1, 8], [0, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [12, 89, 83, 73, 62], [1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [1, 3], [], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 1, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [75, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 20, 12, 8, 5, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 9, 6, 3, 2], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), grad))), tf.math.add(alpha, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.subtract(tf.math.sqrt(tf.math.add(alpha, grad)), grad)))))), lambda shape,  alpha, beta, grad: tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.math.add(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), alpha))), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [2, 9, 6, 6, 2, 3, 8, 4, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [12, 89, 83, 73, 46], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 4, 3, 0, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [1, 3], [], [1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1], [1, 3, 2, 9, 2, 9], [2, 1, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [37106118316.010185, 5381557460746.381, 93202788159222.36, 660749287147694.5, 2913755533128666.5, 9579730034993866.0], "accuracy": [0.09985470771789551, 0.09760929644107819, 0.10130762308835983, 0.10091137140989304, 0.10117553919553757, 0.10157178342342377], "val_loss": [306621579264.0, 16529532162633.143, 177420276746532.56, 967438219720411.4, 3622814807939949.5, 1.0688001880209116e+16], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], [2, 9, 6, 8, 0, 3, 6, 1, 5, 6, 1, 8], [1, 3, 1, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [36, 85, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [5, 3], [], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07436270266771317, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [2, 9, 6, 6, 0, 3, 6, 1, 5, 6, 1, 8], [1, 3, 2, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [84, 89, 94, 73, 46], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [5, 3], [], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 6, 2, 9, 2, 3], [2, 1, 3, 2, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [51, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07396645098924637, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 0, 6, 6, 0, 3, 8, 1, 5, 6, 1, 8], [0, 2, 0, 2, 2, 2, 2, 2, 0, 0, 0, 3, 2, 2], [84, 89, 68, 73, 46], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [2, 24, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 9, 5, 4, 3], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.math.add(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1987454.3441243968, 2.6848884371718587, 2.4743476353301315, 2.594367458079989, 2.6160131545665792, 2.4753728928803422], "accuracy": [0.10011887550354004, 0.1026284471154213, 0.10210011899471283, 0.09708096832036972, 0.09589222073554993, 0.09391097724437714], "val_loss": [2.3399459975106374, 2.295910222189767, 2.3124990463256836, 2.2072661263602122, 2.3121438026428223, 2.2972824232918874], "val_accuracy": [0.10400000214576721, 0.09966666996479034, 0.10400000214576721, 0.10233332961797714, 0.09966666996479034, 0.10400000214576721]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 1, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [84, 89, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 0, 1, 0, 1], [0, 0, 1, 1], [3, 3, 0], [2, 3], [], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 5, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3032261052104572, 2.302922836872313, 2.302895676426805, 2.3029847920074786, 2.3029811537544473, 2.3030450673166944], "accuracy": [0.09430722147226334, 0.09549596905708313, 0.09417514503002167, 0.09668471664190292, 0.09325055778026581, 0.09668471664190292], "val_loss": [1.9735824721200126, 1.9736663273402624, 1.9736855370657784, 1.9736653055463518, 1.9737225941249303, 1.9736614908490862], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.09700000286102295, 0.10000000149011612, 0.10000000149011612, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [5, 9, 6, 6, 0, 3, 8, 1, 5, 6, 1, 8], [3, 2, 0, 2, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [84, 89, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [2, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [8, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(beta, tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [2, 9, 6, 6, 0, 3, 8, 1, 5, 6, 1, 8], [0, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [84, 89, 68, 73, 46], [1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 4, 3, 0, 0, 2, 1, 3, 0, 0], [23, 17, 93, 84, 1, 78], [0, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 3, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [21, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 9, 5, 4, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.math.add(sigma, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.4856872728015484, 2.3026027123941613, 2.3026135764212072, 2.3026350799442645, 2.302649344057691, 2.3026847834316904], "accuracy": [0.10196803510189056, 0.09734513610601425, 0.09377889335155487, 0.09668471664190292, 0.09298639744520187, 0.09576013684272766], "val_loss": [1.9736339024135046, 1.9736368315560477, 1.9736390795026506, 1.9736383983067103, 1.9736465045383997, 1.9736388751438685], "val_accuracy": [0.10400000214576721, 0.09700000286102295, 0.09700000286102295, 0.09833333641290665, 0.09833333641290665, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [2, 9, 6, 6, 0, 3, 6, 1, 5, 6, 1, 8], [0, 3, 2, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [84, 89, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 7, 2, 9, 2, 9], [2, 3, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [51, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 9, 5, 4, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.add(beta, tf.math.add(sigma, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3029185655866207, 2.3025828397285037, 2.3025829342015904, 2.302583154544319, 2.302583676382157, 2.3025836089283738], "accuracy": [0.09840179979801178, 0.10236428678035736, 0.09998679161071777, 0.09906221181154251, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.9736424854823522, 1.9736424854823522, 1.9736431666782923, 1.9736431666782923, 1.9736431666782923], "val_accuracy": [0.10400000214576721, 0.0976666659116745, 0.0976666659116745, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 9, 6, 8, 0, 3, 8, 1, 5, 6, 1, 8], [2, 2, 2, 0, 1, 0, 2, 2, 0, 0, 0, 3, 2, 2], [35, 85, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [3, 3], [39], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 8, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 4, 2, 1, 8, 8, 4, 4, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.sqrt(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [3, 1, 6, 2, 0, 3, 1, 1, 5, 6, 1, 8, 6, 2, 5, 2, 7, 3, 5, 1, 2, 6, 1, 3, 3, 5, 6, 1, 6, 5, 6, 6, 6, 2, 1, 1, 5, 3, 6, 0, 9, 9, 4, 3, 2], [2, 3, 0, 0, 2, 2, 2, 2, 0, 0, 0, 3, 2, 2, 1, 3, 3, 3, 3, 2, 2, 2, 1, 1, 3, 2, 1, 0, 0, 3, 2, 2, 3], [84, 89, 68, 73, 46, 41, 43, 15, 16], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [5, 3], [], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 78, 78, 45, 33, 9, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 61, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), tf.math.add(alpha, grad)))), tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.add(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.subtract(tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.square(tf.math.divide_no_nan(grad, tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, alpha)), tf.math.add(alpha, grad))), tf.math.add(alpha, grad)))))))), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), grad)), tf.math.add(alpha, grad)))), tf.math.divide_no_nan(grad, grad)), tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, alpha)))), grad))), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.subtract(tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha))), tf.math.multiply(tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))))))))), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.math.add(grad, grad), grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07436270266771317, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 0, 5, 6, 1, 8], [2, 2, 0, 2, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [51, 89, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [2, 3], [], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [7, 3, 2, 3, 2, 9, 8, 9], [0, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 12, 8, 4, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))), beta), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3025394222598115, 2.3023596048008703, 2.3037708933327288, 2.31324334050749, 2.408676289894861, 5.067627202533948], "accuracy": [0.10474177449941635, 0.10289261490106583, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9737763404846191, 1.9745074680873327, 1.9782734598432268, 2.0030014174325124, 2.369333062853132, 8.641931533813477], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}]