[{"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.7940000295639038, "mapping_values": [1, 16, 16, 10, 6, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), grad))))), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.2807754690558006, 2.0263061747653626, 1.4657946483507258, 1.1830768838629133, 1.028849479481686, 0.8538644847112828, 0.8585495692297074, 0.7765416685994181, 0.7217154166150826, 0.7042581972555005, 0.6702036395552861, 0.704740522189966, 0.638003668017029, 0.618997091142304, 0.6059583185245301, 0.5849783734213391, 0.5685592126600684, 0.5521724246291752, 0.5426642276418523], "accuracy": [0.24541011452674866, 0.3707568347454071, 0.4954431354999542, 0.5736362338066101, 0.6353189945220947, 0.683529257774353, 0.6839255094528198, 0.7066437602043152, 0.733060359954834, 0.7275128960609436, 0.7539294958114624, 0.7345132827758789, 0.7601373791694641, 0.763967752456665, 0.7744023203849792, 0.7852331399917603, 0.7882710099220276, 0.7950072884559631, 0.7988376617431641], "val_loss": [1.7811105591910226, 1.2988686220986503, 0.8918185063770839, 0.7731936318533761, 0.6445280824388776, 0.6700901814869472, 0.5759660857064384, 0.5835255214146206, 0.5884461573192051, 0.5074391875948224, 0.5609491722924369, 0.4768228360584804, 0.4675370454788208, 0.45246789285114836, 0.45097040278570993, 0.46523662975856234, 0.4537344149180821, 0.4304958922522409, 0.45844437394823345], "val_accuracy": [0.4283333420753479, 0.49566665291786194, 0.6383333206176758, 0.6690000295639038, 0.7253333330154419, 0.7260000109672546, 0.7273333072662354, 0.7273333072662354, 0.7229999899864197, 0.7726666927337646, 0.7513333559036255, 0.7953333258628845, 0.7933333516120911, 0.8159999847412109, 0.8040000200271606, 0.7870000004768372, 0.8073333501815796, 0.8083333373069763, 0.7829999923706055]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [2, 5, 6, 1, 0, 3, 9, 2, 5, 6, 1, 8, 3, 6, 2, 3, 5, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [66, 98, 38, 73, 46, 77, 40, 36], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.7940000295639038, "mapping_values": [1, 16, 16, 10, 6, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), grad)))))))))))), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.2807754690558006, 2.0263061747653626, 1.4657946483507258, 1.1830768838629133, 1.028849479481686, 0.8538644847112828, 0.8585495692297074, 0.7765416685994181, 0.7217154166150826, 0.7042581972555005, 0.6702036395552861, 0.704740522189966, 0.638003668017029, 0.618997091142304, 0.6059583185245301, 0.5849783734213391, 0.5685592126600684, 0.5521724246291752, 0.5426642276418523], "accuracy": [0.24541011452674866, 0.3707568347454071, 0.4954431354999542, 0.5736362338066101, 0.6353189945220947, 0.683529257774353, 0.6839255094528198, 0.7066437602043152, 0.733060359954834, 0.7275128960609436, 0.7539294958114624, 0.7345132827758789, 0.7601373791694641, 0.763967752456665, 0.7744023203849792, 0.7852331399917603, 0.7882710099220276, 0.7950072884559631, 0.7988376617431641], "val_loss": [1.7811105591910226, 1.2988686220986503, 0.8918185063770839, 0.7731936318533761, 0.6445280824388776, 0.6700901814869472, 0.5759660857064384, 0.5835255214146206, 0.5884461573192051, 0.5074391875948224, 0.5609491722924369, 0.4768228360584804, 0.4675370454788208, 0.45246789285114836, 0.45097040278570993, 0.46523662975856234, 0.4537344149180821, 0.4304958922522409, 0.45844437394823345], "val_accuracy": [0.4283333420753479, 0.49566665291786194, 0.6383333206176758, 0.6690000295639038, 0.7253333330154419, 0.7260000109672546, 0.7273333072662354, 0.7273333072662354, 0.7229999899864197, 0.7726666927337646, 0.7513333559036255, 0.7953333258628845, 0.7933333516120911, 0.8159999847412109, 0.8040000200271606, 0.7870000004768372, 0.8073333501815796, 0.8083333373069763, 0.7829999923706055]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [2, 9, 6, 6, 8, 3, 8, 2, 4, 6, 1, 8], [2, 3, 0, 0, 1, 2, 2, 2, 0, 0, 0, 3, 2, 2], [26, 28, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.7940000295639038, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.2807754690558006, 2.0263061747653626, 1.4657946483507258, 1.1830768838629133, 1.028849479481686, 0.8538644847112828, 0.8585495692297074, 0.7765416685994181, 0.7217154166150826, 0.7042581972555005, 0.6702036395552861, 0.704740522189966, 0.638003668017029, 0.618997091142304, 0.6059583185245301, 0.5849783734213391, 0.5685592126600684, 0.5521724246291752, 0.5426642276418523], "accuracy": [0.24541011452674866, 0.3707568347454071, 0.4954431354999542, 0.5736362338066101, 0.6353189945220947, 0.683529257774353, 0.6839255094528198, 0.7066437602043152, 0.733060359954834, 0.7275128960609436, 0.7539294958114624, 0.7345132827758789, 0.7601373791694641, 0.763967752456665, 0.7744023203849792, 0.7852331399917603, 0.7882710099220276, 0.7950072884559631, 0.7988376617431641], "val_loss": [1.7811105591910226, 1.2988686220986503, 0.8918185063770839, 0.7731936318533761, 0.6445280824388776, 0.6700901814869472, 0.5759660857064384, 0.5835255214146206, 0.5884461573192051, 0.5074391875948224, 0.5609491722924369, 0.4768228360584804, 0.4675370454788208, 0.45246789285114836, 0.45097040278570993, 0.46523662975856234, 0.4537344149180821, 0.4304958922522409, 0.45844437394823345], "val_accuracy": [0.4283333420753479, 0.49566665291786194, 0.6383333206176758, 0.6690000295639038, 0.7253333330154419, 0.7260000109672546, 0.7273333072662354, 0.7273333072662354, 0.7229999899864197, 0.7726666927337646, 0.7513333559036255, 0.7953333258628845, 0.7933333516120911, 0.8159999847412109, 0.8040000200271606, 0.7870000004768372, 0.8073333501815796, 0.8083333373069763, 0.7829999923706055]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [2, 9, 9, 6, 9, 6, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.7940000295639038, "mapping_values": [1, 3, 3, 3, 0, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.2807754690558006, 2.0263061747653626, 1.4657946483507258, 1.1830768838629133, 1.028849479481686, 0.8538644847112828, 0.8585495692297074, 0.7765416685994181, 0.7217154166150826, 0.7042581972555005, 0.6702036395552861, 0.704740522189966, 0.638003668017029, 0.618997091142304, 0.6059583185245301, 0.5849783734213391, 0.5685592126600684, 0.5521724246291752, 0.5426642276418523], "accuracy": [0.24541011452674866, 0.3707568347454071, 0.4954431354999542, 0.5736362338066101, 0.6353189945220947, 0.683529257774353, 0.6839255094528198, 0.7066437602043152, 0.733060359954834, 0.7275128960609436, 0.7539294958114624, 0.7345132827758789, 0.7601373791694641, 0.763967752456665, 0.7744023203849792, 0.7852331399917603, 0.7882710099220276, 0.7950072884559631, 0.7988376617431641], "val_loss": [1.7811105591910226, 1.2988686220986503, 0.8918185063770839, 0.7731936318533761, 0.6445280824388776, 0.6700901814869472, 0.5759660857064384, 0.5835255214146206, 0.5884461573192051, 0.5074391875948224, 0.5609491722924369, 0.4768228360584804, 0.4675370454788208, 0.45246789285114836, 0.45097040278570993, 0.46523662975856234, 0.4537344149180821, 0.4304958922522409, 0.45844437394823345], "val_accuracy": [0.4283333420753479, 0.49566665291786194, 0.6383333206176758, 0.6690000295639038, 0.7253333330154419, 0.7260000109672546, 0.7273333072662354, 0.7273333072662354, 0.7229999899864197, 0.7726666927337646, 0.7513333559036255, 0.7953333258628845, 0.7933333516120911, 0.8159999847412109, 0.8040000200271606, 0.7870000004768372, 0.8073333501815796, 0.8083333373069763, 0.7829999923706055]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 1, 5, 6, 2, 3, 3, 8, 2, 6, 1, 8], [2, 2, 1, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [57, 98, 68, 82, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.7940000295639038, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.2807754690558006, 2.0263061747653626, 1.4657946483507258, 1.1830768838629133, 1.028849479481686, 0.8538644847112828, 0.8585495692297074, 0.7765416685994181, 0.7217154166150826, 0.7042581972555005, 0.6702036395552861, 0.704740522189966, 0.638003668017029, 0.618997091142304, 0.6059583185245301, 0.5849783734213391, 0.5685592126600684, 0.5521724246291752, 0.5426642276418523], "accuracy": [0.24541011452674866, 0.3707568347454071, 0.4954431354999542, 0.5736362338066101, 0.6353189945220947, 0.683529257774353, 0.6839255094528198, 0.7066437602043152, 0.733060359954834, 0.7275128960609436, 0.7539294958114624, 0.7345132827758789, 0.7601373791694641, 0.763967752456665, 0.7744023203849792, 0.7852331399917603, 0.7882710099220276, 0.7950072884559631, 0.7988376617431641], "val_loss": [1.7811105591910226, 1.2988686220986503, 0.8918185063770839, 0.7731936318533761, 0.6445280824388776, 0.6700901814869472, 0.5759660857064384, 0.5835255214146206, 0.5884461573192051, 0.5074391875948224, 0.5609491722924369, 0.4768228360584804, 0.4675370454788208, 0.45246789285114836, 0.45097040278570993, 0.46523662975856234, 0.4537344149180821, 0.4304958922522409, 0.45844437394823345], "val_accuracy": [0.4283333420753479, 0.49566665291786194, 0.6383333206176758, 0.6690000295639038, 0.7253333330154419, 0.7260000109672546, 0.7273333072662354, 0.7273333072662354, 0.7229999899864197, 0.7726666927337646, 0.7513333559036255, 0.7953333258628845, 0.7933333516120911, 0.8159999847412109, 0.8040000200271606, 0.7870000004768372, 0.8073333501815796, 0.8083333373069763, 0.7829999923706055]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [2, 9, 9, 6, 9, 6, 8, 2, 5, 6, 1, 8], [0, 2, 0, 0, 1, 0, 2, 1, 0, 0, 0, 3, 2, 2], [26, 98, 38, 73, 46, 77, 40, 36], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.7940000295639038, "mapping_values": [1, 3, 3, 2, 1, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.2807754690558006, 2.0263061747653626, 1.4657946483507258, 1.1830768838629133, 1.028849479481686, 0.8538644847112828, 0.8585495692297074, 0.7765416685994181, 0.7217154166150826, 0.7042581972555005, 0.6702036395552861, 0.704740522189966, 0.638003668017029, 0.618997091142304, 0.6059583185245301, 0.5849783734213391, 0.5685592126600684, 0.5521724246291752, 0.5426642276418523], "accuracy": [0.24541011452674866, 0.3707568347454071, 0.4954431354999542, 0.5736362338066101, 0.6353189945220947, 0.683529257774353, 0.6839255094528198, 0.7066437602043152, 0.733060359954834, 0.7275128960609436, 0.7539294958114624, 0.7345132827758789, 0.7601373791694641, 0.763967752456665, 0.7744023203849792, 0.7852331399917603, 0.7882710099220276, 0.7950072884559631, 0.7988376617431641], "val_loss": [1.7811105591910226, 1.2988686220986503, 0.8918185063770839, 0.7731936318533761, 0.6445280824388776, 0.6700901814869472, 0.5759660857064384, 0.5835255214146206, 0.5884461573192051, 0.5074391875948224, 0.5609491722924369, 0.4768228360584804, 0.4675370454788208, 0.45246789285114836, 0.45097040278570993, 0.46523662975856234, 0.4537344149180821, 0.4304958922522409, 0.45844437394823345], "val_accuracy": [0.4283333420753479, 0.49566665291786194, 0.6383333206176758, 0.6690000295639038, 0.7253333330154419, 0.7260000109672546, 0.7273333072662354, 0.7273333072662354, 0.7229999899864197, 0.7726666927337646, 0.7513333559036255, 0.7953333258628845, 0.7933333516120911, 0.8159999847412109, 0.8040000200271606, 0.7870000004768372, 0.8073333501815796, 0.8083333373069763, 0.7829999923706055]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 2, 2, 3, 3, 2, 5, 6, 1, 8, 3, 0, 2, 3, 5, 8], [2, 3, 0, 0, 1, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 82, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.4328571557998657, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, beta), beta)", "other_info": {"loss": [2.581552746116115, 2.626392119438767, 2.243672944519734, 2.283561316337631, 2.303739022994479, 2.3033482132492096, 2.3030207894969816, 2.3027446982630995], "accuracy": [0.2090873122215271, 0.1154404953122139, 0.15691454708576202, 0.1306300312280655, 0.09021265059709549, 0.09642054885625839, 0.10051512718200684, 0.10328886657953262], "val_loss": [3.373368263244629, 1.9736326762608118, 1.7803729602268763, 1.974092755998884, 1.973963737487793, 1.9739460263933455, 1.9736851964678084, 1.9731052943638392], "val_accuracy": [0.2750000059604645, 0.09833333641290665, 0.47699999809265137, 0.09799999743700027, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09700000286102295]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [2, 9, 6, 2, 2, 3, 3, 2, 5, 6, 1, 8, 3, 0, 2, 3, 5, 8], [2, 3, 0, 0, 1, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 38, 73, 46, 77, 40, 36], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.28457143902778625, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.8589090468971374, 2.6660842528007507, 2.4133041049857513, 2.38867958088624, 2.3673284092221545, 2.3684975548883895], "accuracy": [0.19072777032852173, 0.23180557787418365, 0.09945846349000931, 0.09655263274908066, 0.09866596013307571, 0.10249637067317963], "val_loss": [2.9960481779915944, 2.0503896985735213, 2.0316318103245328, 2.0235628400530135, 2.052379471915109, 2.046449525015695], "val_accuracy": [0.35499998927116394, 0.10400000214576721, 0.0976666659116745, 0.10400000214576721, 0.09966666996479034, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [2, 9, 9, 6, 9, 6, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [873845826.5580213, 17271106342.37802, 79239203689.46349, 221486514933.41644, 470600372393.3367, 872168642408.2462], "accuracy": [0.09734513610601425, 0.10077928751707077, 0.10315678268671036, 0.09721305221319199, 0.09496764093637466, 0.0952318087220192], "val_loss": [3366600192.0, 26923857042.285713, 90857649883.42857, 215356356315.42856, 420594122752.0, 726770871734.8572], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [2, 1, 5, 6, 2, 3, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 61, 68, 82, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 5, 2, 3, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.subtract(grad, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.068815216422081, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 9, 6, 9, 6, 8, 2, 5, 6, 1, 8], [2, 2, 1, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 82, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [4, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 8, 8, 4, 4, 0, 5, 3, 2, 1, 0, 9, 5, 4, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0], [2, 1, 5, 6, 2, 3, 8, 2, 2, 6, 1, 8, 9], [0, 3, 0, 0, 1, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 38, 73, 46, 77, 40, 36], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 22, 22, 13, 9, 6, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.subtract(tf.math.sqrt(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 2, 2, 3, 3, 2, 5, 6, 1, 8, 3, 0, 2, 3, 5, 8], [2, 1, 0, 0, 2, 1, 2, 1, 0, 0, 0, 3, 2, 2], [26, 98, 68, 82, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [1, 3, 2, 3, 5, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [69, 31, 85, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 8, 7, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 10, 6, 4, 3], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.add(alpha, tf.math.add(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.add(alpha, tf.math.add(alpha, grad))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.multiply(tf.math.square(beta), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1], [2, 9, 6, 2, 0, 3, 3, 2, 5, 6, 1, 8, 3, 6, 2, 3, 2, 2, 5, 3, 2, 6, 7, 6, 3, 7, 7, 9, 8, 9, 7, 9, 5], [0, 2, 0, 0, 1, 0, 2, 0, 0, 0, 0, 3, 2, 2, 2, 2, 2, 3, 1, 2], [26, 98, 38, 73, 46, 77, 97, 92, 64, 9, 93, 15], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 53, 53, 33, 20, 12, 8, 8, 4, 4, 0, 1, 0, 0, 0, 0, 9, 6, 3, 3], "tree_depth": 58, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.subtract(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, alpha))), tf.math.sqrt(tf.math.multiply(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.add(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), grad), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))), tf.math.add(alpha, grad))))))), tf.math.add(alpha, alpha)))))), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 82, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 9, 6, 3, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), beta)", "other_info": {"loss": [147004.09947346197, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0478140264749527, 0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [4.5786559037635487e+18, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 9, 6, 6, 0, 8, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 2, 2, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [6, 3, 2, 9, 2, 9], [2, 0, 0, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [8, 1, 5, 2, 2, 3, 8, 2, 2, 6, 1, 8], [0, 2, 0, 0, 1, 0, 2, 1, 0, 0, 0, 3, 2, 2], [42, 98, 38, 73, 46, 77, 40, 36], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 8, 6, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 9, 5, 4, 3], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, alpha))), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [2, 9, 6, 2, 0, 3, 3, 2, 5, 6, 1, 8, 3, 6, 2, 3, 5, 8], [0, 2, 0, 0, 1, 0, 2, 1, 0, 0, 0, 3, 2, 2], [26, 53, 38, 73, 15, 77, 40, 36], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [69, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 7, 5, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.068815216422081, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 82, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [2, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07013604789972305, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [2, 9, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 1, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 3, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, sigma)", "other_info": {"loss": [2.302634220176196, 2.303945533886971, 2.30071993813208, 2.3031115486889218, 2.3042896907122663, 2.3021825567574754], "accuracy": [0.08902391046285629, 0.08994849026203156, 0.09126931428909302, 0.08809932321310043, 0.08558975160121918, 0.09140139818191528], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]