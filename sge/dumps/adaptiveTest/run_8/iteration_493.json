[{"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.7988571524620056, "mapping_values": [1, 16, 16, 10, 6, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), grad))))), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.2102001139107097, 1.974705641500513, 1.6205214293499697, 1.198764682367194, 0.8930016638832384, 0.7852877364214055, 0.7219091838125099, 0.6916486588860893, 0.6763248708915434, 0.6461737730546855, 0.606494445661276, 0.576836784998219, 0.5681526290742146, 0.5706973033826176, 0.5464082529768102, 0.5401842195470303, 0.5184717379572401, 0.5167538769500855, 0.527513302777028, 0.4886973068745948], "accuracy": [0.25518426299095154, 0.3273015320301056, 0.47206446528434753, 0.5634658336639404, 0.6782459616661072, 0.6997754573822021, 0.718399167060852, 0.7285695672035217, 0.7428345084190369, 0.7520803213119507, 0.7617223858833313, 0.77677983045578, 0.7814027070999146, 0.7807422876358032, 0.7991018295288086, 0.796328067779541, 0.8070268034934998, 0.8057059645652771, 0.8033285140991211, 0.8177255392074585], "val_loss": [1.8592867170061385, 1.48331390108381, 0.9711034979139056, 0.7131460564477103, 0.6359169653483799, 0.6195758921759469, 0.5714374610355922, 0.5692391736166817, 0.48520054136003765, 0.5053099564143589, 0.4881752218518938, 0.4890285389763968, 0.4702843597957066, 0.45203618492398945, 0.4306073784828186, 0.4661755221230643, 0.4476295624460493, 0.5036211694989886, 0.43527999946049284, 0.414436263697488], "val_accuracy": [0.23199999332427979, 0.5066666603088379, 0.6276666522026062, 0.7009999752044678, 0.7036666870117188, 0.7049999833106995, 0.7139999866485596, 0.734666645526886, 0.7829999923706055, 0.7590000033378601, 0.7713333368301392, 0.7833333611488342, 0.7853333353996277, 0.8119999766349792, 0.8199999928474426, 0.7979999780654907, 0.7960000038146973, 0.7943333387374878, 0.7963333129882812, 0.8140000104904175]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 5, 8, 5, 0, 3, 3, 2, 5, 6, 1, 8, 3, 6, 2, 3, 5, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [61, 98, 38, 73, 46, 77, 40, 36], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [72, 25, 50, 71, 34]], "fitness": -0.772857129573822, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.293484817359268, 2.271681757052624, 2.2475244453192356, 2.2206585322231303, 2.183403063569921, 2.140501199570377, 2.0803775393400747, 2.0052835404550113, 1.911541368920081, 1.8057346157567251, 1.6954419595564456, 1.5934047831394385, 1.4986298662591777, 1.4148340087131566, 1.348592641409976, 1.276878240621479, 1.2444623137005348, 1.1926599071482784, 1.1527292993578535, 1.1235529391552401, 1.0985797189403408, 1.0602684262374829, 1.0467242396754863, 1.025388126123882, 1.0006865141272403, 0.9857751839920798, 0.9684101796468267, 0.9644037574399748, 0.9336998164614414, 0.9306585699607195, 0.9244363694111621, 0.9052886664198216, 0.8955241861423371, 0.8875731964861444, 0.8742278916740367, 0.860014165231911, 0.8691220487963806, 0.8482484641155121, 0.843591193686135, 0.8449139598574479, 0.8356747329195713, 0.8184467154077614, 0.818954134007896, 0.8202034608326757, 0.7987844033043509, 0.7921740755806856, 0.8082088898154393, 0.7957284977533373, 0.7907490875852925, 0.7912202443995922, 0.7860030105101072, 0.765520476929626, 0.7807196634493767, 0.7690837822176477, 0.7668808865320444, 0.763989941161527, 0.7624817975067176, 0.7601898308002465, 0.7542689733690416, 0.7486827943019895, 0.7478586467753753, 0.7430761288642379, 0.739571476042499, 0.7369842586453093, 0.7334041144035086, 0.7310306353497231, 0.72190695607415, 0.7198841891599259, 0.720151377454835, 0.7191184040121099, 0.7144279605393491, 0.710999449514017, 0.7151638453725685, 0.7174805606738877, 0.7069155210910802, 0.6998714167507113, 0.6976247579745014, 0.6995046053029101, 0.6954575021898962, 0.6908164546238102, 0.6956065048190188, 0.6871602873697635, 0.6889841886260144, 0.690148082053137, 0.6875553566309534, 0.6851724002418297, 0.6881908219661443, 0.6753046634788952, 0.6767051719860268, 0.6778999787626517, 0.6775090202301437, 0.6736876188315232, 0.6755971731353572], "accuracy": [0.11161009222269058, 0.17474573850631714, 0.2300885021686554, 0.28080835938453674, 0.3181878328323364, 0.3543785512447357, 0.38568219542503357, 0.41725003719329834, 0.43983620405197144, 0.4600449204444885, 0.4909523129463196, 0.497820645570755, 0.5188218355178833, 0.5374455451965332, 0.5473517179489136, 0.5679566860198975, 0.5715228915214539, 0.5856558084487915, 0.5971469879150391, 0.6107515692710876, 0.6144498586654663, 0.629111111164093, 0.6276581883430481, 0.6375643610954285, 0.6499801874160767, 0.6505085229873657, 0.658961832523346, 0.6518293619155884, 0.6659622192382812, 0.672698438167572, 0.6724342703819275, 0.6790384650230408, 0.6824725866317749, 0.684982180595398, 0.6946242451667786, 0.6927750706672668, 0.6845859289169312, 0.6995112895965576, 0.6966054439544678, 0.6964733600616455, 0.6970016956329346, 0.7059833407402039, 0.7088891863822937, 0.7069079279899597, 0.7117950320243835, 0.7128516435623169, 0.7084929347038269, 0.7074362635612488, 0.7156254053115845, 0.7177387475967407, 0.7129837274551392, 0.7215691208839417, 0.7140403985977173, 0.7220974564552307, 0.7205125093460083, 0.7220974564552307, 0.7257958054542542, 0.7214370369911194, 0.7276449799537659, 0.7281733155250549, 0.7310791015625, 0.733588695526123, 0.733588695526123, 0.7289658188819885, 0.7327961921691895, 0.733060359954834, 0.7302865982055664, 0.7342491149902344, 0.7403249144554138, 0.7403249144554138, 0.7425703406333923, 0.7407211661338806, 0.7407211661338806, 0.7366266250610352, 0.7441553473472595, 0.7421740889549255, 0.7428345084190369, 0.7456082701683044, 0.7404569983482361, 0.7471932172775269, 0.7442874312400818, 0.7486461400985718, 0.7506273984909058, 0.7475894689559937, 0.7448157668113708, 0.7524765729904175, 0.7478536367416382, 0.750231146812439, 0.7498348951339722, 0.7460044622421265, 0.7565711140632629, 0.7528728246688843, 0.7548540234565735], "val_loss": [1.9500539643423898, 1.9290574618748255, 1.9047113827296667, 1.8745124680655343, 1.8356169973100935, 1.7851759365626745, 1.7196287427629744, 1.6377428940364294, 1.539036580494472, 1.4301307882581438, 1.3169063840593611, 1.2117634160178048, 1.1193094934735979, 1.040336745125907, 0.975832496370588, 0.9234703949519566, 0.8793428284781319, 0.8429215465273175, 0.8107341187340873, 0.7837093557630267, 0.7629155261175973, 0.7426133837018695, 0.7245352097920009, 0.7097096783774239, 0.6955105917794364, 0.6828685998916626, 0.671986596924918, 0.6626368420464652, 0.6528936454227993, 0.6440330914088658, 0.6392098324639457, 0.6300506251198905, 0.6246709993907383, 0.619070189339774, 0.6120986086981637, 0.605214135987418, 0.6012794630868095, 0.5958885976246425, 0.5919900791985648, 0.5866715567452567, 0.5831904581614903, 0.5774854081017631, 0.574473670550755, 0.5709344489233834, 0.5688863141196114, 0.5640192031860352, 0.5626980917794364, 0.5583584649222237, 0.5552189861025129, 0.5522950376783099, 0.5509665523256574, 0.5483703102384295, 0.5455693176814488, 0.5426134892872402, 0.5409853969301496, 0.5395203658512661, 0.5367918525423322, 0.5347199269703456, 0.5326176370893206, 0.5289245332990374, 0.5280956881386893, 0.5251816170556205, 0.5264920166560582, 0.5202304295131138, 0.5193728038242885, 0.519838775907244, 0.5201765128544399, 0.51625508921487, 0.5138852596282959, 0.5120233978543963, 0.5098563602992466, 0.5087482077734811, 0.5075330223355975, 0.5075001035417829, 0.5048839705330985, 0.5022648572921753, 0.5024278674806867, 0.5010487181799752, 0.49880787304469515, 0.49774037088666645, 0.49679369585854666, 0.4957650218691145, 0.4953195537839617, 0.4939622027533395, 0.49172634737832205, 0.49160962445395334, 0.4910416603088379, 0.4891070468085153, 0.4876946040562221, 0.4850164311272757, 0.48476878234318327, 0.4843694141932896, 0.4829730646950858], "val_accuracy": [0.22200000286102295, 0.36399999260902405, 0.4059999883174896, 0.44200000166893005, 0.468666672706604, 0.49666666984558105, 0.5386666655540466, 0.5546666383743286, 0.5630000233650208, 0.5789999961853027, 0.593999981880188, 0.6079999804496765, 0.6336666941642761, 0.6536666750907898, 0.6690000295639038, 0.6696666479110718, 0.6926666498184204, 0.6973333358764648, 0.699999988079071, 0.706333339214325, 0.7066666483879089, 0.7116666436195374, 0.7133333086967468, 0.7089999914169312, 0.718999981880188, 0.7250000238418579, 0.7263333201408386, 0.7286666631698608, 0.7310000061988831, 0.7326666712760925, 0.7429999709129333, 0.7419999837875366, 0.7409999966621399, 0.7473333477973938, 0.7440000176429749, 0.7463333606719971, 0.7549999952316284, 0.7576666474342346, 0.750333309173584, 0.7590000033378601, 0.7590000033378601, 0.7620000243186951, 0.7596666812896729, 0.762666642665863, 0.7673333287239075, 0.7643333077430725, 0.7703333497047424, 0.7639999985694885, 0.7693333625793457, 0.7699999809265137, 0.7706666588783264, 0.7720000147819519, 0.7713333368301392, 0.7716666460037231, 0.7726666927337646, 0.7733333110809326, 0.7743333578109741, 0.7716666460037231, 0.7746666669845581, 0.7770000100135803, 0.7776666879653931, 0.7803333401679993, 0.7746666669845581, 0.7823333144187927, 0.7833333611488342, 0.7850000262260437, 0.7743333578109741, 0.7839999794960022, 0.7826666831970215, 0.781333327293396, 0.7853333353996277, 0.7853333353996277, 0.7873333096504211, 0.7846666574478149, 0.7870000004768372, 0.7896666526794434, 0.7856666445732117, 0.7893333435058594, 0.7866666913032532, 0.7906666398048401, 0.7933333516120911, 0.7903333306312561, 0.7923333048820496, 0.7923333048820496, 0.7956666946411133, 0.793666660785675, 0.7963333129882812, 0.7979999780654907, 0.7956666946411133, 0.7950000166893005, 0.796999990940094, 0.7946666479110718, 0.7963333129882812]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [2, 9, 6, 6, 8, 3, 8, 2, 4, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 38, 73, 46, 77, 40, 36], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.2928571403026581, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.4544292585551544, 2.924003451680778, 2.357961693019159, 2.360288129238924, 2.3756280740836924, 2.329519529982549], "accuracy": [0.25861841440200806, 0.15612204372882843, 0.09998679161071777, 0.09760929644107819, 0.09932637959718704, 0.09787346422672272], "val_loss": [1.9260368347167969, 2.0222460201808383, 1.9894554274422782, 2.034966673169817, 1.9999091965811593, 2.0305747985839844], "val_accuracy": [0.3583333194255829, 0.09966666996479034, 0.09966666996479034, 0.09733333438634872, 0.09966666996479034, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [2, 9, 9, 6, 9, 6, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 38, 73, 46, 77, 40, 36], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 1, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [6, 25, 50, 71, 34]], "fitness": -0.19285714626312256, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, alpha), beta)", "other_info": {"loss": [3.334188745604719, 2.488679190983216, 2.339485913723719, 60747564654.845276, NaN, NaN, NaN, NaN], "accuracy": [0.18121780455112457, 0.12495046854019165, 0.10962884873151779, 0.11187426000833511, 0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.041503429412842, 2.02869599206107, 3.653602736336844, 3.1174430031016094e+22, NaN, NaN, NaN, NaN], "val_accuracy": [0.10400000214576721, 0.09700000286102295, 0.265666663646698, 0.09866666793823242, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 5, 8, 9, 0, 3, 3, 2, 5, 6, 1, 8, 3, 6, 2, 3, 5, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [66, 98, 38, 73, 46, 77, 40, 36], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [1, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [11, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.sqrt(grad))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 5, 8, 9, 0, 3, 3, 2, 5, 6, 1, 8, 3, 6, 2, 3, 5, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [66, 98, 38, 73, 46, 77, 40, 36], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [0, 1, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [72, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302204286071209, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [8, 9, 6, 6, 0, 3, 8, 1, 5, 6, 1, 8], [0, 2, 0, 0, 1, 0, 2, 1, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [3, 9, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07264561951160431, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 5, 8, 9, 0, 3, 3, 2, 5, 6, 1, 8, 3, 6, 2, 3, 5, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [66, 98, 38, 73, 46, 77, 40, 36], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [66, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 6, 4, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, grad)), grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [6.889595349986618, 2.5962758627014706, 3.2540221269718645, 3.274172085497625, 2.4380671388169857, 2.326053611165607], "accuracy": [0.09919429570436478, 0.09906221181154251, 0.09919429570436478, 0.10249637067317963, 0.10051512718200684, 0.09549596905708313], "val_loss": [2.016338280269078, 2.4973889078412737, 2.9907074655805315, 2.2706529753548756, 1.9842773165021623, 2.0140158108302524], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.09833333641290665, 0.10000000149011612, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 5, 8, 9, 0, 3, 3, 2, 5, 6, 1, 8, 3, 6, 2, 3, 5, 8], [3, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [54, 98, 38, 73, 46, 77, 40, 36], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [72, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 9, 5, 4, 3], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.math.add(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [11497324.220527818, 18744349163803.797, 14415677.298565473, 2.3026052978706084, 2.3026055724408883, 2.3026058793839463], "accuracy": [0.09800554811954498, 0.09655263274908066, 0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [4417.221400669643, 61652125.71428572, 1.9737018857683455, 1.9737016132899694, 1.9737004552568709, 1.973701000213623], "val_accuracy": [0.10400000214576721, 0.09733333438634872, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 2, 6, 6, 5, 3, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 1, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [4, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07251353561878204, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 1, 2, 6, 5, 3, 3, 6, 2, 6, 1, 8, 3, 4, 6, 7, 3, 6, 9, 3, 7, 9], [2, 3, 0, 0, 2, 0, 2, 2, 0, 1, 0, 3, 0, 2, 1, 2, 3], [26, 98, 68, 73, 46, 16, 43, 62, 58], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 8, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 13, 57, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 20, 10, 10, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.multiply(tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), grad)), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)))), grad), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))), alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07251353561878204, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 1, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [2, 2, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [0, 45, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [9, 4, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 9, 7, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.square(grad)))))))), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302204286071209, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [2, 9, 6, 6, 8, 3, 8, 2, 4, 6, 1, 8], [2, 3, 0, 0, 1, 2, 2, 2, 0, 0, 0, 3, 2, 2], [26, 28, 68, 73, 46], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [5, 3, 2, 9, 2, 9], [2, 1, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 8, 5, 3, 1, 1, 0, 1, 0, 6, 4, 3, 1, 0, 4, 2, 2, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, alpha))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(beta, alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0], [2, 1, 5, 6, 0, 8, 8, 2, 2, 6, 1, 5, 9, 9], [2, 3, 0, 0, 2, 0, 1, 2, 0, 0, 0, 3, 2, 2], [58, 98, 38, 73, 46, 77, 40, 36], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [8, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 20, 13, 7, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, tf.math.square(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07251353561878204, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0], [1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [3, 5, 6, 4, 4, 3, 9, 2, 5, 6, 1, 8, 3, 6, 2, 3, 5, 8], [2, 1, 2, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [14, 95, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [9, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 13, 57, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302204286071209, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 9, 6, 6, 8, 3, 8, 2, 4, 6, 1, 8], [0, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 28, 68, 73, 46], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 9, 5, 4, 3], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1722457.1890651358, 2.508779943422351, 2.45187233959002, 2.468039853367209, 2.5172079682995725, 2.442156083674211], "accuracy": [0.09774138033390045, 0.1014397069811821, 0.1026284471154213, 0.09932637959718704, 0.10315678268671036, 0.0952318087220192], "val_loss": [2.2221755981445312, 2.1021409034729004, 2.0383787155151367, 2.1525823048182895, 2.022097178867885, 2.0953904560634067], "val_accuracy": [0.10400000214576721, 0.09966666996479034, 0.09966666996479034, 0.09733333438634872, 0.09966666996479034, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 9, 6, 6, 0, 0, 8, 2, 5, 6, 1, 8], [2, 2, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [66, 98, 38, 73, 46, 77, 40, 36], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [15, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 6, 3, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 9, 5, 4, 3], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [1882641.6827405635, 2.309703506420097, 2.3044786960252632, 2.303272587260109, 2.3030843420460743, 2.3029873870571986, 2.302923665810664, 2.30297591811898, 2.3029308837749043, 2.302925468357153], "accuracy": [0.09774138033390045, 0.09826971590518951, 0.09219389408826828, 0.09893012791872025, 0.09734513610601425, 0.09298639744520187, 0.09602430462837219, 0.09655263274908066, 0.09800554811954498, 0.09285431355237961], "val_loss": [1.9833921704973494, 1.975501605442592, 1.97404146194458, 1.9737048830304826, 1.97366087777274, 1.9737095832824707, 1.9736051559448242, 1.9736994334629603, 1.973663057599749, 1.9736711638314384], "val_accuracy": [0.09833333641290665, 0.09700000286102295, 0.10233332961797714, 0.10233332961797714, 0.10400000214576721, 0.09833333641290665, 0.10233332961797714, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 2, 6, 0, 3, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 2, 2, 2, 2, 0, 0, 0, 3, 2, 2], [26, 86, 16, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [0, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 9, 5, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 9, 5, 4, 4], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.math.square(grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [354423723.1461785, 6708493454.421345, 31541243789.84652, 86637898698.8456, 185507111964.80887, 340897124542.9772], "accuracy": [0.09919429570436478, 0.1002509593963623, 0.09787346422672272, 0.10474177449941635, 0.09457138925790787, 0.09906221181154251], "val_loss": [1334667776.0, 10672470893.714285, 36014015634.28571, 85360513609.14285, 166710111670.85715, 288073468196.5714], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 5, 8, 9, 0, 3, 3, 2, 5, 6, 1, 8, 3, 6, 2, 3, 5, 8], [2, 3, 0, 0, 2, 0, 1, 2, 0, 0, 0, 3, 2, 2], [26, 98, 38, 73, 46, 77, 40, 36], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [8, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.sqrt(grad)), tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [894583842.9094858, 16936037173.52635, 79632955965.20195, 218743543221.27277, 468377713846.1857, 860716966070.8619], "accuracy": [0.09919429570436478, 0.1002509593963623, 0.09787346422672272, 0.10474177449941635, 0.09470347315073013, 0.09906221181154251], "val_loss": [3369167652.571429, 26944255707.42857, 90927925540.57143, 215521656832.0, 420924639524.5714, 727340716617.1428], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0], [2, 9, 6, 6, 8, 3, 8, 1, 4, 6, 1, 8], [2, 3, 0, 0, 2, 0, 0, 2, 0, 2, 0, 3, 0, 2, 1, 2, 3], [26, 28, 68, 73, 46], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.022285714745521545, "mapping_values": [1, 20, 20, 12, 8, 5, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.pow(grad, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), grad)))), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(grad))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [3.278725630792062, 2.680608255956718, 1.852690718980466, 66.61786793900393, NaN, NaN, NaN], "accuracy": [0.22401267290115356, 0.1842557191848755, 0.3778893053531647, 0.12732796370983124, 0.12151630967855453, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.9767344338553294, 1.3997550351279122, 2.2639672415597096, 146.40726143973214, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.4233333468437195, 0.10400000214576721, 0.07666666805744171, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}]