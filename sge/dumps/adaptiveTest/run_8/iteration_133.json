[{"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [95, 38]], "fitness": -0.7771428823471069, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(grad), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.2081889037395652, 1.6453037794948553, 1.230864017599562, 1.0322062844345834, 0.9137996194495218, 0.8862895816702333, 0.8121263464570061, 0.8001560038972949, 0.7544244103238976, 0.7789336185272044, 0.72312584896885, 0.7105894873501555, 0.6937824335584488, 0.6937134105295412, 0.6730832358424407, 0.6526135200632877, 0.635903908379436, 0.6329185576360806, 0.6237419169529507, 0.6410874999619715, 0.6133110024484708], "accuracy": [0.25518426299095154, 0.4757627844810486, 0.5601637959480286, 0.6305639743804932, 0.6738871932029724, 0.6793025732040405, 0.7037379741668701, 0.7061154246330261, 0.7195879220962524, 0.7137762308120728, 0.7337207794189453, 0.7383436560630798, 0.7442874312400818, 0.7382115721702576, 0.7478536367416382, 0.7589486241340637, 0.7644960880279541, 0.7644960880279541, 0.7633073329925537, 0.7580240368843079, 0.7695152759552002], "val_loss": [1.6526431696755546, 0.9730995723179409, 0.7514346497399467, 0.6808929102761405, 0.6363227537700108, 0.5988345316478184, 0.5889779329299927, 0.5640610115868705, 0.5828095333916801, 0.5286901678357806, 0.5216784647532872, 0.523267218044826, 0.5249349900654384, 0.496785078729902, 0.5063462938581195, 0.48579187052590506, 0.4888509852545602, 0.4867899417877197, 0.48737476553235737, 0.4763862064906529, 0.4875659942626953], "val_accuracy": [0.5586666464805603, 0.606333315372467, 0.7099999785423279, 0.718999981880188, 0.7239999771118164, 0.7436666488647461, 0.7393333315849304, 0.7426666617393494, 0.746666669845581, 0.7710000276565552, 0.7683333158493042, 0.762666642665863, 0.7490000128746033, 0.7900000214576721, 0.7773333191871643, 0.7973333597183228, 0.7919999957084656, 0.7839999794960022, 0.7879999876022339, 0.7913333177566528, 0.7726666927337646]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1], [7, 6, 3, 4, 0, 9, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 0, 0, 1, 0, 1, 2, 3, 3, 0], [16, 16, 53, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [69, 17, 50]], "fitness": -0.618571400642395, "mapping_values": [1, 1, 1, 0, 1, 0, 19, 19, 12, 7, 5, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.negative(tf.math.add(beta, alpha)), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), alpha))), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.pow(alpha, tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.301079123452544, 2.2993262496213114, 2.294419247161569, 2.2935096651036204, 2.289006232396565, 2.2863859745489687, 2.2850699795707974, 2.2812455032385413, 2.2795066486464957, 2.2750987044540865, 2.271617557520344, 2.2698798900456114, 2.2661276569361415, 2.2631923055541736, 2.2606020314172905, 2.257431764329319, 2.254560452505204, 2.2507826774946342, 2.2466582135911066, 2.2448757656844633, 2.240192386846123, 2.2376899810562265, 2.233015639859735, 2.229282160949052, 2.224452362966229, 2.2225540243576325, 2.219019128063556, 2.211898190864026, 2.210974931590955, 2.2033504811827185, 2.19862161153784, 2.1940160734841476, 2.187533382474471, 2.183730085937496, 2.177236835922878, 2.1725311966746035, 2.165848213589313, 2.161210623903518, 2.156000059861171, 2.147483864417559, 2.1428015968031526, 2.135687040977191, 2.1279517281340445, 2.1174926302137314, 2.111201343188716, 2.1031152172300245, 2.0951043188989185, 2.085666657974219, 2.0784853083535335, 2.071472200813893, 2.0579656582183494, 2.049888813232686, 2.040593434444524, 2.031745498017581, 2.0187963396409216, 2.0122501234478563, 1.9968546230747968, 1.9829255929948664, 1.973355714434945, 1.962695218804742, 1.9499588561741399, 1.9361853640644133, 1.9309667529462744, 1.9143440834739975, 1.8971487977611485, 1.8853835279065163, 1.8709879271846483, 1.8538590351257658, 1.8464651135342736, 1.8266245455490584, 1.8195211143069154, 1.8023376637099677, 1.7896647859542376, 1.7688044953135262, 1.7594493739183914, 1.7413953812587468, 1.7250284054622265, 1.7176963429740078, 1.700151620980629, 1.68777187460087, 1.6735752913709707, 1.658388853923378, 1.6419989368808803, 1.6299429540353256, 1.6182107659000935, 1.6001150515006755, 1.5971178992580917, 1.5748829872947343, 1.5564614153021692, 1.5522665742240043, 1.5352052765247797, 1.520569618178743, 1.5118286410311446, 1.4980999984289, 1.4963123698701255, 1.4796841002694683, 1.4615847387522942, 1.4642984193345385, 1.4493292202456374, 1.4360758276694896], "accuracy": [0.09259014576673508, 0.09681680053472519, 0.10698718577623367, 0.11451591551303864, 0.1302337795495987, 0.12891295552253723, 0.13419628143310547, 0.1434420794248581, 0.1484612375497818, 0.16497160494327545, 0.1710474193096161, 0.16880200803279877, 0.17738740146160126, 0.1946902722120285, 0.2024831622838974, 0.20684190094470978, 0.21714437007904053, 0.22322018444538116, 0.23193766176700592, 0.23840972781181335, 0.2432967871427536, 0.24818386137485504, 0.26403382420539856, 0.26958128809928894, 0.2716946303844452, 0.27763834595680237, 0.28278958797454834, 0.2915070652961731, 0.29045039415359497, 0.301281213760376, 0.30986660718917847, 0.31184783577919006, 0.3197728097438812, 0.32333904504776, 0.33681151270866394, 0.3358869254589081, 0.3490952253341675, 0.3420948386192322, 0.3443402349948883, 0.3420948386192322, 0.352529376745224, 0.352529376745224, 0.36283186078071594, 0.37802138924598694, 0.36547350883483887, 0.37802138924598694, 0.38105931878089905, 0.3871351182460785, 0.3883238732814789, 0.3821159601211548, 0.40166425704956055, 0.39624884724617004, 0.39849424362182617, 0.40562674403190613, 0.4061550796031952, 0.40404173731803894, 0.4115704596042633, 0.4181746244430542, 0.42847707867622375, 0.4255712628364563, 0.42425042390823364, 0.4319112300872803, 0.4259675145149231, 0.43825122714042664, 0.442609965801239, 0.4411570429801941, 0.4365341365337372, 0.4485536813735962, 0.44525161385536194, 0.45925241708755493, 0.45344075560569763, 0.4575353264808655, 0.4585919976234436, 0.46889445185661316, 0.46730947494506836, 0.47351735830307007, 0.4773477613925934, 0.4764232039451599, 0.47708359360694885, 0.48408401012420654, 0.48672565817832947, 0.4827631711959839, 0.48831066489219666, 0.49108439683914185, 0.4963677227497101, 0.49451854825019836, 0.49887728691101074, 0.5032360553741455, 0.5028398036956787, 0.5044247508049011, 0.5205389261245728, 0.5185576677322388, 0.521067202091217, 0.5144630670547485, 0.5149914026260376, 0.5215955376625061, 0.5221238732337952, 0.5237088799476624, 0.5321621894836426, 0.5321621894836426], "val_loss": [1.9678383554731096, 1.9650956562587194, 1.9624062265668596, 1.9597270148141044, 1.9570420810154505, 1.9543522426060267, 1.9516848836626326, 1.9489594868251257, 1.9462599754333496, 1.943519047328404, 1.9407233510698592, 1.9379183224269323, 1.9350599561418806, 1.9321794509887695, 1.9292373657226562, 1.9262400354657854, 1.923177650996617, 1.9200424466814314, 1.9168542453220911, 1.9135785102844238, 1.910163402557373, 1.9066893713814872, 1.9031262397766113, 1.8994431495666504, 1.8956525666373116, 1.89176116670881, 1.8877780778067452, 1.8836216926574707, 1.8794024331229073, 1.8749453680855888, 1.8703354426792689, 1.8656233378819056, 1.8606666156223841, 1.8555248124258858, 1.850214958190918, 1.8447145053318568, 1.8389592170715332, 1.8330679621015276, 1.8269825662885393, 1.8205957412719727, 1.8140488352094377, 1.8072827884129115, 1.800239154270717, 1.7929096221923828, 1.7853594507489885, 1.777564866202218, 1.769514833177839, 1.761145796094622, 1.7525506019592285, 1.743720531463623, 1.7345499311174666, 1.7250407082693917, 1.7153421470097132, 1.7054155894688197, 1.6950828007289342, 1.6845760004861015, 1.673636027744838, 1.6624058314732142, 1.6509108202798026, 1.6391233376094274, 1.6270837102617537, 1.6147509983607702, 1.6024054459163122, 1.5895700114113944, 1.5765294347490584, 1.5633070468902588, 1.5497418812343053, 1.5358738899230957, 1.5220489161355155, 1.5078682218279158, 1.4937544550214494, 1.479405232838222, 1.4650703838893346, 1.4504026685442244, 1.4358784471239363, 1.421213013785226, 1.406353167125157, 1.3917294910975866, 1.3769444056919642, 1.3623275416237968, 1.3476909228733607, 1.3330258982522147, 1.3184092044830322, 1.30403470993042, 1.2897435597011022, 1.2754927022116525, 1.2616350991385323, 1.2477315493992396, 1.2339577334267753, 1.220698424748012, 1.2072920118059431, 1.1940816129956926, 1.1813388892582484, 1.1688605376652308, 1.1568870885031564, 1.1449916362762451, 1.1332200595310755, 1.1219864913395472, 1.110917057309832, 1.1000337260110038], "val_accuracy": [0.05700000002980232, 0.07500000298023224, 0.1003333330154419, 0.1276666671037674, 0.15399999916553497, 0.18033333122730255, 0.20766666531562805, 0.23000000417232513, 0.25033333897590637, 0.273333340883255, 0.29499998688697815, 0.31333333253860474, 0.3306666612625122, 0.34333333373069763, 0.3553333282470703, 0.36533331871032715, 0.3723333477973938, 0.3790000081062317, 0.3866666555404663, 0.39266666769981384, 0.398333340883255, 0.40566667914390564, 0.41100001335144043, 0.41600000858306885, 0.4230000078678131, 0.429666668176651, 0.43433332443237305, 0.43966665863990784, 0.4423333406448364, 0.4463333189487457, 0.45100000500679016, 0.45366665720939636, 0.45899999141693115, 0.46566668152809143, 0.4713333249092102, 0.47433334589004517, 0.47833332419395447, 0.48233333230018616, 0.48633334040641785, 0.48899999260902405, 0.49166667461395264, 0.4959999918937683, 0.49799999594688416, 0.5036666393280029, 0.5080000162124634, 0.5109999775886536, 0.5149999856948853, 0.5203333497047424, 0.5230000019073486, 0.527999997138977, 0.531000018119812, 0.5333333611488342, 0.5363333225250244, 0.5386666655540466, 0.5406666398048401, 0.5423333048820496, 0.5426666736602783, 0.5456666946411133, 0.5486666560173035, 0.5506666898727417, 0.5543333292007446, 0.5553333163261414, 0.5550000071525574, 0.5556666851043701, 0.5606666803359985, 0.5616666674613953, 0.5646666884422302, 0.5666666626930237, 0.5713333487510681, 0.574999988079071, 0.5756666660308838, 0.5746666789054871, 0.5766666531562805, 0.5759999752044678, 0.5770000219345093, 0.5789999961853027, 0.5789999961853027, 0.5809999704360962, 0.5856666564941406, 0.5889999866485596, 0.5883333086967468, 0.590666651725769, 0.5916666388511658, 0.5929999947547913, 0.5946666598320007, 0.5979999899864197, 0.5993333458900452, 0.6016666889190674, 0.6033333539962769, 0.6079999804496765, 0.6110000014305115, 0.6133333444595337, 0.6146666407585144, 0.6196666955947876, 0.621666669845581, 0.6236666440963745, 0.6263333559036255, 0.6293333172798157, 0.6320000290870667, 0.6366666555404663]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 6, 9, 0], [3, 0, 0, 3, 1, 0], [4, 57, 19], [1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 9, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 1, 1, 1], [3, 3, 0], [3, 3], [], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 1, 2, 3, 9], [1, 3, 3, 1], [95, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07792893797159195, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 2, 9, 3, 9], [0, 3, 3, 1], [69, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 6, 5, 1, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(alpha, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2062294063.7462227, 39287596887.47484, 180461012264.0687, 500367706152.30536, 1066057151670.9972, 1983101962758.5598], "accuracy": [0.1026284471154213, 0.09826971590518951, 0.09826971590518951, 0.1018359512090683, 0.09232597798109055, 0.09840179979801178], "val_loss": [7739760932.571428, 61903124187.42857, 208901533110.85715, 495151948946.2857, 967097375597.7142, 1671049436013.7144], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [0, 9, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [5, 5, 0, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 2, 3, 1], [95, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), beta)))", "other_info": {"loss": [9.541478992059577, 75.30680048051622, 249.12746286650437, 592.9497060396604, 1170.28400623189, 2082.159419474805], "accuracy": [0.10210011899471283, 0.09787346422672272, 0.09787346422672272, 0.10130762308835983, 0.09298639744520187, 0.09932637959718704], "val_loss": [21.21254566737584, 96.81477573939732, 261.9858834402902, 558.8050362723214, 1032.609584263393, 1726.0137416294642], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [6, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 0, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 2, 3, 1], [95, 35]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, grad)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07858935743570328, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 6, 4, 4, 0, 1, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 0, 0, 3, 0, 1, 2, 3, 3, 0], [16, 16, 53, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [0, 3], [95], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [52, 17, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 7, 7, 4, 1, 1, 0, 1, 1, 4, 3, 1, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))))), tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.math.multiply(grad, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), alpha)))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [6.331564554842535, 42.41657507799053, 131.78751370368647, 299.7180614620073, 572.3734305556487, 994.9314172835697], "accuracy": [0.1018359512090683, 0.09813763201236725, 0.09774138033390045, 0.1014397069811821, 0.09285431355237961, 0.09919429570436478], "val_loss": [12.60525757925851, 52.636814662388396, 135.0606209891183, 276.8877912248884, 497.7742222377232, 818.0519670758929], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [6, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 5, 0, 3, 0, 1, 2, 3, 3, 0], [16, 16, 53, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [95, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [903065.5076343736, 17108065.218861446, 78454053.83912297, 217371768.03275657, 462935132.09879804, 860934741.8348963], "accuracy": [0.1026284471154213, 0.09826971590518951, 0.09826971590518951, 0.1018359512090683, 0.09232597798109055, 0.09853387624025345], "val_loss": [3377652.285714286, 26927348.0, 90776306.28571428, 215051785.14285713, 419880384.0, 725392877.7142857], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 5, 0, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 6, 9, 3, 9], [0, 0, 3, 1], [95, 70]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 4, 3, 1, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1320514140.918591, 25154540838.44565, 115540766903.40298, 320357394192.0613, 682541365121.1327, 1269662062624.1902], "accuracy": [0.1026284471154213, 0.09826971590518951, 0.09826971590518951, 0.1018359512090683, 0.09232597798109055, 0.09853387624025345], "val_loss": [4955624594.285714, 39633381668.57143, 133750606116.57143, 317017601755.4286, 619164111433.1428, 1069873664585.1428], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [3, 0, 0, 3, 1, 0], [5, 57], [1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 0, 0, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 1, 1, 1], [3, 3, 0], [3, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 1, 1, 3, 9], [0, 1, 2, 1], [95, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 8, 5, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.square(beta), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.subtract(tf.math.multiply(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), alpha), beta), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3037057916454557, 1832275448.1045833, NaN, NaN, NaN, NaN], "accuracy": [0.09628847241401672, 0.11438383162021637, 0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9739446640014648, 5708.6953125, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [3, 0, 0, 3, 1, 0], [5, 57], [0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 6, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 5, 1, 4, 0, 1, 2, 3, 3, 0], [20, 16, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 3, 8, 3, 9], [0, 3, 3, 1], [69, 17, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, grad)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302591846162743, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.10302469879388809, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [0, 0, 0, 3, 1, 0], [5, 71], [1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], [6, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 5, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 0, 1, 1], [1, 0, 1], [3, 0, 0, 3, 9], [3, 4, 7], [], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 3, 9, 3, 9], [0, 2, 3, 1], [70, 38, 32, 2]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 20, 20, 12, 8, 3, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.square(grad), tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad))))), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.add(beta, alpha), beta))), tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302591846162743, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.10302469879388809, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0], [6, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 5, 0, 3, 0, 1, 2, 3, 3, 0], [38, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 2, 3, 1], [69, 17, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 20, 20, 12, 8, 3, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, tf.math.multiply(grad, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))))), tf.math.negative(tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.add(grad, tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.add(beta, alpha), beta))), tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10302469879388809, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [6, 0, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 5, 0, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0], [3, 3, 0, 4], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [1, 3, 9, 5, 9], [0, 2, 3, 1], [95, 6]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 2, 4, 4, 2, 2, 0, 8, 5, 4, 1, 0, 6, 4, 2, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.negative(tf.math.add(beta, grad)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.pow(sigma, sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), beta)", "other_info": {"loss": [52228647440.19002, 7792431479509.768, 131879857564072.42, 928029774548769.6, 4049998050178473.5, 1.3565293252437218e+16], "accuracy": [0.10302469879388809, 0.09840179979801178, 0.09840179979801178, 0.1018359512090683, 0.09206181764602661, 0.09800554811954498], "val_loss": [430394338742.8571, 23207607720813.715, 249133364861805.72, 1357825878299209.2, 5088258799772818.0, 1.5008505824617618e+16], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [3, 0, 0, 3, 1, 0], [4, 57, 19], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 5, 0, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [1, 1, 2, 3, 9], [1, 3, 1, 1], [95, 7]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 7, 3, 4, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.square(beta)), tf.math.multiply(tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.subtract(alpha, tf.math.add(sigma, alpha)), alpha)", "other_info": {"loss": [5.712270349905227e+20, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1430458277463913, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [6, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 5, 0, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [2, 2, 3, 1], [95, 49]], "fitness": -0.06285714358091354, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.square(grad), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [6.4074397831545085, 3.5690192669578877, NaN, NaN, NaN, NaN], "accuracy": [0.16761326789855957, 0.11055342853069305, 0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.1646759850638255, 8.496992656162806, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09566666930913925, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 6, 9, 0], [1, 0, 0, 3, 1, 0], [4, 57, 19], [1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 1, 1, 1], [3, 3, 0], [3, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [1, 3, 3, 1], [23, 7]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [2.3022860247839114, 2.3034487185996553, 2.3014036628469703, 2.3033438184557022, 2.3016062471860623, 2.30183265426801], "accuracy": [0.09060890227556229, 0.08836349099874496, 0.08994849026203156, 0.09074098616838455, 0.09536388516426086, 0.09047681838274002], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [82, 57], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 0, 0, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1, 0, 1, 1, 0], [3, 3, 0], [4, 2, 4], [], [1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 1, 9, 3, 9], [2, 3, 0, 1], [70, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3022860247839114, 2.3034487185996553, 2.3014036628469703, 2.3033438184557022, 2.3016062471860623, 2.30183265426801], "accuracy": [0.09060890227556229, 0.08836349099874496, 0.08994849026203156, 0.09074098616838455, 0.09536388516426086, 0.09047681838274002], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [8, 6, 3, 9, 0, 5, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 1, 2, 3, 3, 0], [16, 16, 53, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 3, 9, 3, 9], [2, 3, 3, 1], [69, 17, 50]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 6, 5, 1, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3022860247839114, 2.3034487185996553, 2.3014036628469703, 2.3033438184557022, 2.3016062471860623, 2.30183265426801], "accuracy": [0.09060890227556229, 0.08836349099874496, 0.08994849026203156, 0.09074098616838455, 0.09536388516426086, 0.09047681838274002], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [82, 57], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 6, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 0, 0, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0, 0, 0, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0], [0, 3, 9, 4, 9], [1, 3, 3, 1], [95, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.divide_no_nan(grad, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3022860247839114, 2.3034487185996553, 2.3014036628469703, 2.3033438184557022, 2.3016062471860623, 2.30183265426801], "accuracy": [0.09060890227556229, 0.08836349099874496, 0.08994849026203156, 0.09074098616838455, 0.09536388516426086, 0.09047681838274002], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]