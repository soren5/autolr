[{"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 5, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.7645714282989502, "mapping_values": [1, 7, 7, 5, 2, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.285921376662531, 2.2448797782713537, 2.188374294691145, 2.0983410206894124, 1.9554696403804976, 1.7745704428867153, 1.5844017086783577, 1.4250085155930203, 1.3001714283685328, 1.2157919220936344, 1.1464295290748063, 1.084116789343933, 1.052542193060963, 1.0004578891163882, 0.979077941414671, 0.9569091505582984, 0.9308188360963342, 0.9064925433449096, 0.9066391279275123, 0.8781466530991457, 0.8563649521102649, 0.8460031914405536, 0.834171198819213, 0.8230400132213397, 0.8089733394444689, 0.8045562640582377, 0.7906670995502424, 0.7809968274015366, 0.7717143585495804, 0.7703283207527698, 0.770347278737877, 0.7645022388163369, 0.7527054994333973, 0.7477791799199642, 0.741639253847855, 0.7382314416710664, 0.7292460077993936, 0.7377610158973823, 0.723585313014571, 0.7099472070492931, 0.7128763131934103, 0.7077124623684851, 0.7059460418839355, 0.6978025394360844, 0.6878255240795336, 0.689579832980567], "accuracy": [0.1336679458618164, 0.23352265357971191, 0.31884822249412537, 0.372209757566452, 0.4287412464618683, 0.4628186523914337, 0.4935939908027649, 0.5352001190185547, 0.5559371113777161, 0.5865803956985474, 0.6046757102012634, 0.6219785809516907, 0.6242240071296692, 0.6449610590934753, 0.6580372452735901, 0.6608110070228577, 0.6666226387023926, 0.6752080321311951, 0.6798309087753296, 0.6869634389877319, 0.6959450244903564, 0.6947563290596008, 0.6956809163093567, 0.7003037929534912, 0.7071720957756042, 0.7071720957756042, 0.7164179086685181, 0.7160216569900513, 0.7209087014198303, 0.7219653725624084, 0.7210407853126526, 0.7257958054542542, 0.7263241410255432, 0.7308149337768555, 0.7304186820983887, 0.7269845604896545, 0.7337207794189453, 0.7320036888122559, 0.7338528633117676, 0.7436270117759705, 0.7395324110984802, 0.7386078238487244, 0.7362303733825684, 0.7424382567405701, 0.744419515132904, 0.7456082701683044], "val_loss": [1.9332592827933175, 1.8876066889081682, 1.8179609434945243, 1.7060469899858748, 1.5412720952715193, 1.341087920325143, 1.1571791512625558, 1.0136379855019706, 0.914646829877581, 0.8413504873003278, 0.7880376577377319, 0.7505862712860107, 0.7183877910886493, 0.693092976297651, 0.6754954712731498, 0.656227571623666, 0.6434831278664725, 0.6301217930657523, 0.6183761869158063, 0.6052645444869995, 0.5996753999165126, 0.5870758465358189, 0.5816671677998134, 0.5759368624005999, 0.5684252977371216, 0.5634655100958688, 0.5628561122076852, 0.5538202694484166, 0.5485592569623675, 0.5444714171545846, 0.5386742523738316, 0.5340567146028791, 0.5327075549534389, 0.5272940226963588, 0.5255980321339199, 0.5221574306488037, 0.5186383553913662, 0.517041632107326, 0.5113028969083514, 0.5089571305683681, 0.5054645197732108, 0.508355975151062, 0.5040234327316284, 0.5000537463596889, 0.49838551453181673, 0.49810028076171875], "val_accuracy": [0.34166666865348816, 0.4350000023841858, 0.4790000021457672, 0.5346666574478149, 0.5743333101272583, 0.5926666855812073, 0.6226666569709778, 0.6629999876022339, 0.6869999766349792, 0.6883333325386047, 0.7009999752044678, 0.6943333148956299, 0.7123333215713501, 0.7143333554267883, 0.7179999947547913, 0.7323333621025085, 0.7273333072662354, 0.7289999723434448, 0.7443333268165588, 0.7540000081062317, 0.7563333511352539, 0.7576666474342346, 0.7580000162124634, 0.7609999775886536, 0.765333354473114, 0.7649999856948853, 0.7643333077430725, 0.768666684627533, 0.7680000066757202, 0.7703333497047424, 0.7756666541099548, 0.7773333191871643, 0.7753333449363708, 0.7730000019073486, 0.7796666622161865, 0.7806666493415833, 0.7786666750907898, 0.7823333144187927, 0.7820000052452087, 0.7863333225250244, 0.7906666398048401, 0.7906666398048401, 0.7886666655540466, 0.7906666398048401, 0.7886666655540466, 0.7833333611488342]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 5, 3, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.7645714282989502, "mapping_values": [1, 8, 8, 5, 3, 2, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.285921376662531, 2.2448797782713537, 2.188374294691145, 2.0983410206894124, 1.9554696403804976, 1.7745704428867153, 1.5844017086783577, 1.4250085155930203, 1.3001714283685328, 1.2157919220936344, 1.1464295290748063, 1.084116789343933, 1.052542193060963, 1.0004578891163882, 0.979077941414671, 0.9569091505582984, 0.9308188360963342, 0.9064925433449096, 0.9066391279275123, 0.8781466530991457, 0.8563649521102649, 0.8460031914405536, 0.834171198819213, 0.8230400132213397, 0.8089733394444689, 0.8045562640582377, 0.7906670995502424, 0.7809968274015366, 0.7717143585495804, 0.7703283207527698, 0.770347278737877, 0.7645022388163369, 0.7527054994333973, 0.7477791799199642, 0.741639253847855, 0.7382314416710664, 0.7292460077993936, 0.7377610158973823, 0.723585313014571, 0.7099472070492931, 0.7128763131934103, 0.7077124623684851, 0.7059460418839355, 0.6978025394360844, 0.6878255240795336, 0.689579832980567], "accuracy": [0.1336679458618164, 0.23352265357971191, 0.31884822249412537, 0.372209757566452, 0.4287412464618683, 0.4628186523914337, 0.4935939908027649, 0.5352001190185547, 0.5559371113777161, 0.5865803956985474, 0.6046757102012634, 0.6219785809516907, 0.6242240071296692, 0.6449610590934753, 0.6580372452735901, 0.6608110070228577, 0.6666226387023926, 0.6752080321311951, 0.6798309087753296, 0.6869634389877319, 0.6959450244903564, 0.6947563290596008, 0.6956809163093567, 0.7003037929534912, 0.7071720957756042, 0.7071720957756042, 0.7164179086685181, 0.7160216569900513, 0.7209087014198303, 0.7219653725624084, 0.7210407853126526, 0.7257958054542542, 0.7263241410255432, 0.7308149337768555, 0.7304186820983887, 0.7269845604896545, 0.7337207794189453, 0.7320036888122559, 0.7338528633117676, 0.7436270117759705, 0.7395324110984802, 0.7386078238487244, 0.7362303733825684, 0.7424382567405701, 0.744419515132904, 0.7456082701683044], "val_loss": [1.9332592827933175, 1.8876066889081682, 1.8179609434945243, 1.7060469899858748, 1.5412720952715193, 1.341087920325143, 1.1571791512625558, 1.0136379855019706, 0.914646829877581, 0.8413504873003278, 0.7880376577377319, 0.7505862712860107, 0.7183877910886493, 0.693092976297651, 0.6754954712731498, 0.656227571623666, 0.6434831278664725, 0.6301217930657523, 0.6183761869158063, 0.6052645444869995, 0.5996753999165126, 0.5870758465358189, 0.5816671677998134, 0.5759368624005999, 0.5684252977371216, 0.5634655100958688, 0.5628561122076852, 0.5538202694484166, 0.5485592569623675, 0.5444714171545846, 0.5386742523738316, 0.5340567146028791, 0.5327075549534389, 0.5272940226963588, 0.5255980321339199, 0.5221574306488037, 0.5186383553913662, 0.517041632107326, 0.5113028969083514, 0.5089571305683681, 0.5054645197732108, 0.508355975151062, 0.5040234327316284, 0.5000537463596889, 0.49838551453181673, 0.49810028076171875], "val_accuracy": [0.34166666865348816, 0.4350000023841858, 0.4790000021457672, 0.5346666574478149, 0.5743333101272583, 0.5926666855812073, 0.6226666569709778, 0.6629999876022339, 0.6869999766349792, 0.6883333325386047, 0.7009999752044678, 0.6943333148956299, 0.7123333215713501, 0.7143333554267883, 0.7179999947547913, 0.7323333621025085, 0.7273333072662354, 0.7289999723434448, 0.7443333268165588, 0.7540000081062317, 0.7563333511352539, 0.7576666474342346, 0.7580000162124634, 0.7609999775886536, 0.765333354473114, 0.7649999856948853, 0.7643333077430725, 0.768666684627533, 0.7680000066757202, 0.7703333497047424, 0.7756666541099548, 0.7773333191871643, 0.7753333449363708, 0.7730000019073486, 0.7796666622161865, 0.7806666493415833, 0.7786666750907898, 0.7823333144187927, 0.7820000052452087, 0.7863333225250244, 0.7906666398048401, 0.7906666398048401, 0.7886666655540466, 0.7906666398048401, 0.7886666655540466, 0.7833333611488342]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 5, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.7645714282989502, "mapping_values": [1, 7, 7, 4, 3, 1, 12, 12, 8, 4, 5, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, grad))))), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.285921376662531, 2.2448797782713537, 2.188374294691145, 2.0983410206894124, 1.9554696403804976, 1.7745704428867153, 1.5844017086783577, 1.4250085155930203, 1.3001714283685328, 1.2157919220936344, 1.1464295290748063, 1.084116789343933, 1.052542193060963, 1.0004578891163882, 0.979077941414671, 0.9569091505582984, 0.9308188360963342, 0.9064925433449096, 0.9066391279275123, 0.8781466530991457, 0.8563649521102649, 0.8460031914405536, 0.834171198819213, 0.8230400132213397, 0.8089733394444689, 0.8045562640582377, 0.7906670995502424, 0.7809968274015366, 0.7717143585495804, 0.7703283207527698, 0.770347278737877, 0.7645022388163369, 0.7527054994333973, 0.7477791799199642, 0.741639253847855, 0.7382314416710664, 0.7292460077993936, 0.7377610158973823, 0.723585313014571, 0.7099472070492931, 0.7128763131934103, 0.7077124623684851, 0.7059460418839355, 0.6978025394360844, 0.6878255240795336, 0.689579832980567], "accuracy": [0.1336679458618164, 0.23352265357971191, 0.31884822249412537, 0.372209757566452, 0.4287412464618683, 0.4628186523914337, 0.4935939908027649, 0.5352001190185547, 0.5559371113777161, 0.5865803956985474, 0.6046757102012634, 0.6219785809516907, 0.6242240071296692, 0.6449610590934753, 0.6580372452735901, 0.6608110070228577, 0.6666226387023926, 0.6752080321311951, 0.6798309087753296, 0.6869634389877319, 0.6959450244903564, 0.6947563290596008, 0.6956809163093567, 0.7003037929534912, 0.7071720957756042, 0.7071720957756042, 0.7164179086685181, 0.7160216569900513, 0.7209087014198303, 0.7219653725624084, 0.7210407853126526, 0.7257958054542542, 0.7263241410255432, 0.7308149337768555, 0.7304186820983887, 0.7269845604896545, 0.7337207794189453, 0.7320036888122559, 0.7338528633117676, 0.7436270117759705, 0.7395324110984802, 0.7386078238487244, 0.7362303733825684, 0.7424382567405701, 0.744419515132904, 0.7456082701683044], "val_loss": [1.9332592827933175, 1.8876066889081682, 1.8179609434945243, 1.7060469899858748, 1.5412720952715193, 1.341087920325143, 1.1571791512625558, 1.0136379855019706, 0.914646829877581, 0.8413504873003278, 0.7880376577377319, 0.7505862712860107, 0.7183877910886493, 0.693092976297651, 0.6754954712731498, 0.656227571623666, 0.6434831278664725, 0.6301217930657523, 0.6183761869158063, 0.6052645444869995, 0.5996753999165126, 0.5870758465358189, 0.5816671677998134, 0.5759368624005999, 0.5684252977371216, 0.5634655100958688, 0.5628561122076852, 0.5538202694484166, 0.5485592569623675, 0.5444714171545846, 0.5386742523738316, 0.5340567146028791, 0.5327075549534389, 0.5272940226963588, 0.5255980321339199, 0.5221574306488037, 0.5186383553913662, 0.517041632107326, 0.5113028969083514, 0.5089571305683681, 0.5054645197732108, 0.508355975151062, 0.5040234327316284, 0.5000537463596889, 0.49838551453181673, 0.49810028076171875], "val_accuracy": [0.34166666865348816, 0.4350000023841858, 0.4790000021457672, 0.5346666574478149, 0.5743333101272583, 0.5926666855812073, 0.6226666569709778, 0.6629999876022339, 0.6869999766349792, 0.6883333325386047, 0.7009999752044678, 0.6943333148956299, 0.7123333215713501, 0.7143333554267883, 0.7179999947547913, 0.7323333621025085, 0.7273333072662354, 0.7289999723434448, 0.7443333268165588, 0.7540000081062317, 0.7563333511352539, 0.7576666474342346, 0.7580000162124634, 0.7609999775886536, 0.765333354473114, 0.7649999856948853, 0.7643333077430725, 0.768666684627533, 0.7680000066757202, 0.7703333497047424, 0.7756666541099548, 0.7773333191871643, 0.7753333449363708, 0.7730000019073486, 0.7796666622161865, 0.7806666493415833, 0.7786666750907898, 0.7823333144187927, 0.7820000052452087, 0.7863333225250244, 0.7906666398048401, 0.7906666398048401, 0.7886666655540466, 0.7906666398048401, 0.7886666655540466, 0.7833333611488342]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 6, 5, 0, 9, 9, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 2, 2, 1, 2, 0, 0, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 65, 59, 9, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [7, 3], [], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [79, 25, 50, 71, 34]], "fitness": -0.3328571319580078, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 4, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.square(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [3.522662111765295, 2.2823626791024805, 2.36891365249663, 2.30544846317063, 2.264947167854929, 2.5672153835488096, 2.303435219938666, 2.302375027784157, 2.2993441423200234, 2.2692650119941216], "accuracy": [0.15982036292552948, 0.16219785809516907, 0.16933034360408783, 0.1006472036242485, 0.160084530711174, 0.1216483935713768, 0.10117553919553757, 0.10487385839223862, 0.11966715008020401, 0.17461365461349487], "val_loss": [1.9776546614510673, 1.9752117565699987, 1.977428913116455, 1.971207959311349, 2.7958855628967285, 1.9741428920200892, 1.9733847209385462, 1.9719231469290597, 1.964517048427037, 1.9761199269975935], "val_accuracy": [0.09700000286102295, 0.09833333641290665, 0.10233332961797714, 0.10766666382551193, 0.3023333251476288, 0.09733333438634872, 0.10233332961797714, 0.14000000059604645, 0.2163333296775818, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 7, 5, 0, 9, 9, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 0, 2, 2, 2, 1, 2, 0, 0, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [0, 65, 54, 52, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [4, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [79, 25, 50, 71, 34]], "fitness": -0.3328571319580078, "mapping_values": [1, 6, 6, 4, 2, 0, 17, 17, 10, 7, 5, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))), grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), grad)), tf.math.add(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.square(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [3.522662111765295, 2.2823626791024805, 2.36891365249663, 2.30544846317063, 2.264947167854929, 2.5672153835488096, 2.303435219938666, 2.302375027784157, 2.2993441423200234, 2.2692650119941216], "accuracy": [0.15982036292552948, 0.16219785809516907, 0.16933034360408783, 0.1006472036242485, 0.160084530711174, 0.1216483935713768, 0.10117553919553757, 0.10487385839223862, 0.11966715008020401, 0.17461365461349487], "val_loss": [1.9776546614510673, 1.9752117565699987, 1.977428913116455, 1.971207959311349, 2.7958855628967285, 1.9741428920200892, 1.9733847209385462, 1.9719231469290597, 1.964517048427037, 1.9761199269975935], "val_accuracy": [0.09700000286102295, 0.09833333641290665, 0.10233332961797714, 0.10766666382551193, 0.3023333251476288, 0.09733333438634872, 0.10233332961797714, 0.14000000059604645, 0.2163333296775818, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 6, 5, 0, 9, 9, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 2, 2, 1, 2, 0, 0, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 65, 59, 9, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [4, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [79, 25, 50, 71, 34]], "fitness": -0.25, "mapping_values": [1, 2, 2, 1, 1, 0, 13, 13, 8, 5, 5, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.pow(grad, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))))), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [3.546075375387776, 2.3045034879360218, 2.314549518409359, 2.2175279826913856, 2.482215662359042, 2.304757375569785, 2.302893786209292, 2.3110692327237636], "accuracy": [0.15902787446975708, 0.10474177449941635, 0.1472724825143814, 0.18016114830970764, 0.10170386731624603, 0.10381719470024109, 0.10011887550354004, 0.13829085230827332], "val_loss": [1.978076457977295, 1.9723169463021415, 1.8655493600027901, 2.724722453526088, 1.9753688403538294, 1.9742956161499023, 1.9717348643711634, 1.9832674435206823], "val_accuracy": [0.10000000149011612, 0.15466666221618652, 0.2029999941587448, 0.09966666996479034, 0.10400000214576721, 0.10400000214576721, 0.15666666626930237, 0.10400000214576721]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 1, 6, 5, 9, 3, 5, 2, 8, 2, 0, 5, 3, 6, 6, 9, 3, 0, 0, 2, 5, 2, 0, 2, 1, 8], [2, 2, 0, 2, 1, 1, 1, 2, 0, 0, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [0, 18, 76, 52, 8, 55, 86, 52, 44], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 2, 2, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [49, 44, 50, 71, 34]], "fitness": -0.13914285600185394, "mapping_values": [1, 7, 7, 5, 2, 1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.5528987490064856, 2.3046774784524473, 2.4724867222662126, 2.4222165513520446, 2.3384733488216156, 2.3044922162261163, 2.3032794681128856, 2.302745523768929, 2.3016521331105393, 2.580451856152634, 2.3094601497012768, 2.3043930028266186, 2.3031625949223247, 2.3030243550372274], "accuracy": [0.16021661460399628, 0.10355303436517715, 0.15638621151447296, 0.10857218503952026, 0.11861048638820648, 0.09972262382507324, 0.09721305221319199, 0.10513802617788315, 0.10711926966905594, 0.17514199018478394, 0.10117553919553757, 0.09615638852119446, 0.10249637067317963, 0.10236428678035736], "val_loss": [1.9781418527875627, 1.9731321334838867, 2.588589668273926, 1.9597804205758231, 1.9747392790658134, 1.9737122399466378, 1.9734278406415666, 1.9730700084141322, 1.9699761526925224, 1.9856136185782296, 1.9755513327462333, 1.9741050856454032, 1.9735076086861747, 1.9734827450343542], "val_accuracy": [0.09866666793823242, 0.13233333826065063, 0.09966666996479034, 0.15466666221618652, 0.10400000214576721, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.20233333110809326, 0.10400000214576721, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 1, 0, 3, 1, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 5, 9, 6, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 0, 2, 2, 1, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 90, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [9, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.13914285600185394, "mapping_values": [1, 34, 34, 24, 10, 4, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.math.add(tf.math.square(tf.math.add(grad, tf.math.sqrt(tf.math.add(tf.math.negative(tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.square(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.math.square(grad))))))))), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.negative(tf.math.add(alpha, alpha)), tf.math.add(tf.math.add(alpha, grad), grad))))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.5528987490064856, 2.3046774784524473, 2.4724867222662126, 2.4222165513520446, 2.3384733488216156, 2.3044922162261163, 2.3032794681128856, 2.302745523768929, 2.3016521331105393, 2.580451856152634, 2.3094601497012768, 2.3043930028266186, 2.3031625949223247, 2.3030243550372274], "accuracy": [0.16021661460399628, 0.10355303436517715, 0.15638621151447296, 0.10857218503952026, 0.11861048638820648, 0.09972262382507324, 0.09721305221319199, 0.10513802617788315, 0.10711926966905594, 0.17514199018478394, 0.10117553919553757, 0.09615638852119446, 0.10249637067317963, 0.10236428678035736], "val_loss": [1.9781418527875627, 1.9731321334838867, 2.588589668273926, 1.9597804205758231, 1.9747392790658134, 1.9737122399466378, 1.9734278406415666, 1.9730700084141322, 1.9699761526925224, 1.9856136185782296, 1.9755513327462333, 1.9741050856454032, 1.9735076086861747, 1.9734827450343542], "val_accuracy": [0.09866666793823242, 0.13233333826065063, 0.09966666996479034, 0.15466666221618652, 0.10400000214576721, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.20233333110809326, 0.10400000214576721, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 1, 0, 5, 9, 2, 2, 0, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [97, 52, 60, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [4, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.13914285600185394, "mapping_values": [1, 7, 7, 5, 2, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.5528987490064856, 2.3046774784524473, 2.4724867222662126, 2.4222165513520446, 2.3384733488216156, 2.3044922162261163, 2.3032794681128856, 2.302745523768929, 2.3016521331105393, 2.580451856152634, 2.3094601497012768, 2.3043930028266186, 2.3031625949223247, 2.3030243550372274], "accuracy": [0.16021661460399628, 0.10355303436517715, 0.15638621151447296, 0.10857218503952026, 0.11861048638820648, 0.09972262382507324, 0.09721305221319199, 0.10513802617788315, 0.10711926966905594, 0.17514199018478394, 0.10117553919553757, 0.09615638852119446, 0.10249637067317963, 0.10236428678035736], "val_loss": [1.9781418527875627, 1.9731321334838867, 2.588589668273926, 1.9597804205758231, 1.9747392790658134, 1.9737122399466378, 1.9734278406415666, 1.9730700084141322, 1.9699761526925224, 1.9856136185782296, 1.9755513327462333, 1.9741050856454032, 1.9735076086861747, 1.9734827450343542], "val_accuracy": [0.09866666793823242, 0.13233333826065063, 0.09966666996479034, 0.15466666221618652, 0.10400000214576721, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.20233333110809326, 0.10400000214576721, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 6, 5, 8, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 29, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [2, 3, 5, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 25, 25, 18, 7, 4, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 5, 2, 3, 0], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.add(tf.math.square(tf.math.add(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.add(tf.math.negative(tf.math.square(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))))), tf.math.square(tf.math.add(alpha, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))))))))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(grad), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(sigma, beta), beta)", "other_info": {"loss": [2.3026555354773737, 2.302572776486829, 2.3025749007456686, 2.302574374341631, 2.3025753050904783, 2.3025720641597576], "accuracy": [0.10368511080741882, 0.10276053100824356, 0.10276053100824356, 0.10527011007070541, 0.10117553919553757, 0.1002509593963623], "val_loss": [1.9736440522330148, 1.973644801548549, 1.9736453465053014, 1.9736462320600237, 1.9736460958208357, 1.9736475944519043], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 1, 6, 5, 9, 3, 2, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 2, 2, 1, 2, 0, 0, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 90, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [4, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [5, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [5, 3], [], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 9, 9, 9, 2, 9], [2, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [79, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 31, 31, 23, 8, 4, 3, 3, 1, 2, 0, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.square(grad)))), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.add(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))))))), tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.negative(grad))), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(tf.math.add(alpha, alpha), tf.math.negative(tf.math.add(alpha, grad))))))))), lambda shape,  alpha, beta, grad: tf.math.pow(grad, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 5, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [3, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 6, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 5, 2, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.square(sigma), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09285431355237961, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [9, 1, 5, 2, 9, 4, 5, 4, 2, 4, 9, 5, 3, 8, 1, 3, 3, 8, 0, 8, 5, 2, 0, 2, 8, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [9, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302664653421346, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 9, 2, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 3, 0, 2, 2, 2, 1, 2, 0, 0, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 65, 59, 9, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [5, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [4, 3, 9, 9, 2, 9], [0, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), beta)", "other_info": {"loss": [2.302674105894517, 2.3025850639083774, 2.302584505887347, 2.3025840672802977, 2.3025921220871375, 2.302572574125478], "accuracy": [0.09985470771789551, 0.09972262382507324, 0.09998679161071777, 0.1006472036242485, 0.09721305221319199, 0.09998679161071777], "val_loss": [1.9736443247113908, 1.9736475263323103, 1.9736550194876534, 1.9736693927219935, 1.9736793381827218, 1.973677362714495], "val_accuracy": [0.10400000214576721, 0.09833333641290665, 0.09833333641290665, 0.09700000286102295, 0.09833333641290665, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [3, 1, 3, 5, 9, 5, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 0, 2, 2, 2, 1, 2, 0, 0, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [1, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1], [0, 2, 2, 9, 2, 9], [1, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 7, 3, 2, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.subtract(tf.math.add(alpha, grad), tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), tf.math.square(tf.math.square(grad)))), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07568352669477463, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 6, 5, 0, 9, 9, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 65, 59, 9, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [1, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [5, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [7, 3], [], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [4, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 6, 6, 4, 2, 0, 3, 3, 1, 2, 0, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.302052713734772, 2.3027475011536094, 2.302931564768402, 2.3019628378032078, 2.301259545224328, 2.3018466480624453], "accuracy": [0.09391097724437714, 0.08836349099874496, 0.08796724677085876, 0.09298639744520187, 0.09074098616838455, 0.0936468094587326], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 5, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [5, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 7, 7, 5, 2, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(sigma, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3020526147899596, 2.3027469928254227, 2.302930746096126, 2.301961488255168, 2.301258128222505, 2.301844677731755], "accuracy": [0.09391097724437714, 0.08836349099874496, 0.08796724677085876, 0.09298639744520187, 0.09087307006120682, 0.0936468094587326], "val_loss": [1.9705897058759416, 1.9705895696367537, 1.9705890246800013, 1.9705888884408134, 1.9705887522016252, 1.9705884116036552], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 5, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [0, 65, 54, 52, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [4, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [6, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 7, 7, 5, 2, 1, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.square(tf.math.square(tf.math.add(alpha, grad)))), tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302052713734772, 2.3027475011536094, 2.302931564768402, 2.3019628378032078, 2.301259545224328, 2.3018466480624453], "accuracy": [0.09391097724437714, 0.08836349099874496, 0.08796724677085876, 0.09298639744520187, 0.09074098616838455, 0.0936468094587326], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [9, 1, 5, 2, 9, 4, 5, 4, 2, 4, 9, 5, 3, 8, 1, 3, 3, 8, 0, 8, 5, 2, 0, 2, 8, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [0, 65, 76, 52, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 1, 0, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302052713734772, 2.3027475011536094, 2.302931564768402, 2.3019628378032078, 2.301259545224328, 2.3018466480624453], "accuracy": [0.09391097724437714, 0.08836349099874496, 0.08796724677085876, 0.09298639744520187, 0.09074098616838455, 0.0936468094587326], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 5, 5, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [83, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [8, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 5, 5, 3, 2, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.square(tf.math.add(alpha, alpha)), tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(sigma)", "other_info": {"loss": [2.302052713734772, 2.3027475011536094, 2.302931564768402, 2.3019628378032078, 2.301259545224328, 2.3018466480624453], "accuracy": [0.09391097724437714, 0.08836349099874496, 0.08796724677085876, 0.09298639744520187, 0.09074098616838455, 0.0936468094587326], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]