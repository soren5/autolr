[{"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 6, 1, 8, 4, 1, 2, 8, 0, 4, 9, 2, 9, 3, 9, 6, 9, 5, 0, 8, 8, 2, 0, 2, 8, 8], [1, 2, 2, 2, 2, 2, 2, 2, 0, 0, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 65, 73, 52, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 36, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [35, 25, 50, 71, 34]], "fitness": -0.7897142767906189, "mapping_values": [1, 30, 30, 23, 7, 4, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(alpha, tf.math.sqrt(tf.math.pow(tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))))), tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.negative(grad))))))))), tf.math.sqrt(tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.pow(grad, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.259183716292174, 2.062384189033332, 1.6135381030337277, 1.2492345618597032, 1.0819568583175192, 0.9832636387498387, 0.9195525180772312, 0.86202086702928, 0.8452687345601627, 0.8018070155949782, 0.7863779492413505, 0.7553041658349844, 0.7277783783057489, 0.7354566839392852, 0.71364701399635, 0.7113499740221559, 0.6873943420638026, 0.690920266233116, 0.6688830093338568, 0.6732777461651656, 0.6519639386854876, 0.6519458516398914, 0.6448301863849848, 0.627374638529848, 0.632549351059356, 0.6141506266190848, 0.6157500158132831, 0.6127767757716952, 0.6015140935965596, 0.5967161303041413, 0.5906076764292044, 0.5952848415207224, 0.5850663558445776, 0.596578876552738], "accuracy": [0.19191652536392212, 0.38924846053123474, 0.49451854825019836, 0.5709945559501648, 0.6196011304855347, 0.648659348487854, 0.6701889038085938, 0.6935675740242004, 0.6952846646308899, 0.717870831489563, 0.7174745798110962, 0.7271166443824768, 0.7310791015625, 0.7318716049194336, 0.7404569983482361, 0.7390040755271912, 0.750759482383728, 0.7445515990257263, 0.7524765729904175, 0.7477215528488159, 0.7582882046699524, 0.7611940503120422, 0.759609043598175, 0.7662131786346436, 0.7692511081695557, 0.7721568942070007, 0.776251494884491, 0.7749306559562683, 0.7753269076347351, 0.7812706232070923, 0.7839123010635376, 0.7808743715286255, 0.7833839654922485, 0.7728173136711121], "val_loss": [1.8524581364222936, 1.5140157086508614, 1.0322951589311873, 0.8135684388024467, 0.7236956187656948, 0.6732803242547172, 0.6464081832340786, 0.6092785596847534, 0.6096155984061105, 0.5874288422720773, 0.5701736382075718, 0.5431893382753644, 0.539426292691912, 0.5333519663129535, 0.542437093598502, 0.5276960986001151, 0.5206950902938843, 0.5071009227207729, 0.5077682222638812, 0.4977306468146188, 0.5056660175323486, 0.5143131187983921, 0.48111655030931744, 0.4796814577920096, 0.4775123085294451, 0.47461141858782085, 0.48038060324532644, 0.46459788935525076, 0.4640870434897287, 0.46582302025386263, 0.463043144771031, 0.47688337734767366, 0.46282635416303364, 0.4552087358066014], "val_accuracy": [0.5116666555404663, 0.5556666851043701, 0.6420000195503235, 0.6769999861717224, 0.7166666388511658, 0.722000002861023, 0.7273333072662354, 0.7433333396911621, 0.7329999804496765, 0.7543333172798157, 0.7583333253860474, 0.7739999890327454, 0.7646666765213013, 0.7833333611488342, 0.7739999890327454, 0.7693333625793457, 0.7799999713897705, 0.7823333144187927, 0.7846666574478149, 0.7900000214576721, 0.7816666960716248, 0.7699999809265137, 0.7979999780654907, 0.8016666769981384, 0.796999990940094, 0.8026666641235352, 0.7979999780654907, 0.7996666431427002, 0.809333324432373, 0.8066666722297668, 0.8069999814033508, 0.7923333048820496, 0.8023333549499512, 0.7986666560173035]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [3, 9, 2, 2, 4, 2, 0, 5, 8, 9, 2, 4, 6, 3, 2, 6, 9, 5, 0, 2, 0, 2, 1, 2, 8, 4, 3, 4, 6, 8, 1, 2, 1, 5, 1, 0, 5, 9, 3, 4, 8, 9, 0, 0, 9, 7, 4, 0, 3, 1, 5, 3, 1, 7], [0, 0, 0, 2, 0, 2, 1, 1, 0, 2, 0, 0, 2, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 2, 2, 0, 0, 0, 0, 2, 3], [94, 41, 73, 44, 8, 57, 9, 53, 44, 40, 82, 21, 5, 73, 66], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 4, 9, 8, 4, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 1, 3, 1, 0, 2, 1, 3, 0, 0], [6, 33, 83, 36, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 2, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [35, 25, 50, 71, 34]], "fitness": -0.7897142767906189, "mapping_values": [1, 30, 30, 20, 10, 8, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.square(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.sqrt(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(grad, tf.math.pow(tf.math.divide_no_nan(tf.math.multiply(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), alpha)), tf.math.square(alpha)))), tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.add(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.259183716292174, 2.062384189033332, 1.6135381030337277, 1.2492345618597032, 1.0819568583175192, 0.9832636387498387, 0.9195525180772312, 0.86202086702928, 0.8452687345601627, 0.8018070155949782, 0.7863779492413505, 0.7553041658349844, 0.7277783783057489, 0.7354566839392852, 0.71364701399635, 0.7113499740221559, 0.6873943420638026, 0.690920266233116, 0.6688830093338568, 0.6732777461651656, 0.6519639386854876, 0.6519458516398914, 0.6448301863849848, 0.627374638529848, 0.632549351059356, 0.6141506266190848, 0.6157500158132831, 0.6127767757716952, 0.6015140935965596, 0.5967161303041413, 0.5906076764292044, 0.5952848415207224, 0.5850663558445776, 0.596578876552738], "accuracy": [0.19191652536392212, 0.38924846053123474, 0.49451854825019836, 0.5709945559501648, 0.6196011304855347, 0.648659348487854, 0.6701889038085938, 0.6935675740242004, 0.6952846646308899, 0.717870831489563, 0.7174745798110962, 0.7271166443824768, 0.7310791015625, 0.7318716049194336, 0.7404569983482361, 0.7390040755271912, 0.750759482383728, 0.7445515990257263, 0.7524765729904175, 0.7477215528488159, 0.7582882046699524, 0.7611940503120422, 0.759609043598175, 0.7662131786346436, 0.7692511081695557, 0.7721568942070007, 0.776251494884491, 0.7749306559562683, 0.7753269076347351, 0.7812706232070923, 0.7839123010635376, 0.7808743715286255, 0.7833839654922485, 0.7728173136711121], "val_loss": [1.8524581364222936, 1.5140157086508614, 1.0322951589311873, 0.8135684388024467, 0.7236956187656948, 0.6732803242547172, 0.6464081832340786, 0.6092785596847534, 0.6096155984061105, 0.5874288422720773, 0.5701736382075718, 0.5431893382753644, 0.539426292691912, 0.5333519663129535, 0.542437093598502, 0.5276960986001151, 0.5206950902938843, 0.5071009227207729, 0.5077682222638812, 0.4977306468146188, 0.5056660175323486, 0.5143131187983921, 0.48111655030931744, 0.4796814577920096, 0.4775123085294451, 0.47461141858782085, 0.48038060324532644, 0.46459788935525076, 0.4640870434897287, 0.46582302025386263, 0.463043144771031, 0.47688337734767366, 0.46282635416303364, 0.4552087358066014], "val_accuracy": [0.5116666555404663, 0.5556666851043701, 0.6420000195503235, 0.6769999861717224, 0.7166666388511658, 0.722000002861023, 0.7273333072662354, 0.7433333396911621, 0.7329999804496765, 0.7543333172798157, 0.7583333253860474, 0.7739999890327454, 0.7646666765213013, 0.7833333611488342, 0.7739999890327454, 0.7693333625793457, 0.7799999713897705, 0.7823333144187927, 0.7846666574478149, 0.7900000214576721, 0.7816666960716248, 0.7699999809265137, 0.7979999780654907, 0.8016666769981384, 0.796999990940094, 0.8026666641235352, 0.7979999780654907, 0.7996666431427002, 0.809333324432373, 0.8066666722297668, 0.8069999814033508, 0.7923333048820496, 0.8023333549499512, 0.7986666560173035]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 6, 1, 8, 4, 1, 2, 8, 0, 4, 9, 2, 9, 3, 9, 2, 9, 8, 0, 8, 8, 2, 0, 2, 8, 8], [1, 2, 2, 1, 2, 2, 2, 2, 0, 0, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 65, 73, 52, 8, 79, 86, 52, 44], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 36, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [35, 25, 50, 71, 34]], "fitness": -0.7897142767906189, "mapping_values": [1, 2, 2, 1, 1, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.259183716292174, 2.062384189033332, 1.6135381030337277, 1.2492345618597032, 1.0819568583175192, 0.9832636387498387, 0.9195525180772312, 0.86202086702928, 0.8452687345601627, 0.8018070155949782, 0.7863779492413505, 0.7553041658349844, 0.7277783783057489, 0.7354566839392852, 0.71364701399635, 0.7113499740221559, 0.6873943420638026, 0.690920266233116, 0.6688830093338568, 0.6732777461651656, 0.6519639386854876, 0.6519458516398914, 0.6448301863849848, 0.627374638529848, 0.632549351059356, 0.6141506266190848, 0.6157500158132831, 0.6127767757716952, 0.6015140935965596, 0.5967161303041413, 0.5906076764292044, 0.5952848415207224, 0.5850663558445776, 0.596578876552738], "accuracy": [0.19191652536392212, 0.38924846053123474, 0.49451854825019836, 0.5709945559501648, 0.6196011304855347, 0.648659348487854, 0.6701889038085938, 0.6935675740242004, 0.6952846646308899, 0.717870831489563, 0.7174745798110962, 0.7271166443824768, 0.7310791015625, 0.7318716049194336, 0.7404569983482361, 0.7390040755271912, 0.750759482383728, 0.7445515990257263, 0.7524765729904175, 0.7477215528488159, 0.7582882046699524, 0.7611940503120422, 0.759609043598175, 0.7662131786346436, 0.7692511081695557, 0.7721568942070007, 0.776251494884491, 0.7749306559562683, 0.7753269076347351, 0.7812706232070923, 0.7839123010635376, 0.7808743715286255, 0.7833839654922485, 0.7728173136711121], "val_loss": [1.8524581364222936, 1.5140157086508614, 1.0322951589311873, 0.8135684388024467, 0.7236956187656948, 0.6732803242547172, 0.6464081832340786, 0.6092785596847534, 0.6096155984061105, 0.5874288422720773, 0.5701736382075718, 0.5431893382753644, 0.539426292691912, 0.5333519663129535, 0.542437093598502, 0.5276960986001151, 0.5206950902938843, 0.5071009227207729, 0.5077682222638812, 0.4977306468146188, 0.5056660175323486, 0.5143131187983921, 0.48111655030931744, 0.4796814577920096, 0.4775123085294451, 0.47461141858782085, 0.48038060324532644, 0.46459788935525076, 0.4640870434897287, 0.46582302025386263, 0.463043144771031, 0.47688337734767366, 0.46282635416303364, 0.4552087358066014], "val_accuracy": [0.5116666555404663, 0.5556666851043701, 0.6420000195503235, 0.6769999861717224, 0.7166666388511658, 0.722000002861023, 0.7273333072662354, 0.7433333396911621, 0.7329999804496765, 0.7543333172798157, 0.7583333253860474, 0.7739999890327454, 0.7646666765213013, 0.7833333611488342, 0.7739999890327454, 0.7693333625793457, 0.7799999713897705, 0.7823333144187927, 0.7846666574478149, 0.7900000214576721, 0.7816666960716248, 0.7699999809265137, 0.7979999780654907, 0.8016666769981384, 0.796999990940094, 0.8026666641235352, 0.7979999780654907, 0.7996666431427002, 0.809333324432373, 0.8066666722297668, 0.8069999814033508, 0.7923333048820496, 0.8023333549499512, 0.7986666560173035]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [5, 3, 1, 0, 4, 1, 1, 8, 0, 4, 6, 2, 9, 3, 2, 9, 4, 5, 0, 2, 8, 2, 0, 2, 8, 0], [0, 2, 0, 2, 0, 2, 1, 1, 0, 2, 0, 0, 2, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 2, 2, 0, 0, 0, 0, 2, 3], [90, 41, 73, 59, 38, 45, 53, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 4, 9, 8, 4, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 1, 3, 1, 0, 2, 1, 3, 0, 0], [77, 33, 93, 84, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [50, 25, 50, 71, 34]], "fitness": -0.7737143039703369, "mapping_values": [1, 11, 11, 6, 5, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(grad, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))))), tf.math.subtract(grad, tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2616851385542587, 2.226662606469329, 2.318216172916038, 1.9583197391390597, 2.0884359955173584, 1.62830203651138, 1.29128581563385, 1.123347720733298, 0.9586089994881871, 0.947399146891289, 0.8530978225934239, 0.8286933079371757, 0.8088424756479395, 0.8522425569390198, 0.7800376482958398, 0.7232339551042273, 0.7163819242477921, 0.6650820758443199, 0.7040356030522116, 0.6479320966210175, 0.6324812464663034, 0.6343610108788333], "accuracy": [0.24356095492839813, 0.22044643759727478, 0.13380002975463867, 0.3152819871902466, 0.2867520749568939, 0.4099854826927185, 0.5223880410194397, 0.5712587237358093, 0.6343944072723389, 0.6469422578811646, 0.6700568199157715, 0.677189290523529, 0.6881521344184875, 0.6847180128097534, 0.7013604640960693, 0.7186633348464966, 0.7228899598121643, 0.741909921169281, 0.7290979027748108, 0.7514199018478394, 0.7564390301704407, 0.7528728246688843], "val_loss": [1.9743330138070243, 1.9876126561846053, 1.8574580465044295, 1.9195352281842912, 1.038212878363473, 1.2448106493268694, 0.9154704298291888, 0.8010778427124023, 0.7273493664605277, 0.6712714433670044, 0.6511407749993461, 0.6649611677442279, 0.6550549609320504, 0.6121255159378052, 0.5739358152662005, 0.5422882522855487, 0.5061335904257638, 0.5413310357502529, 0.5367554426193237, 0.5066071408135551, 0.48498920031956266, 0.511646202632359], "val_accuracy": [0.1120000034570694, 0.21933333575725555, 0.2750000059604645, 0.15466666221618652, 0.528333306312561, 0.47099998593330383, 0.5823333263397217, 0.637666642665863, 0.668666660785675, 0.6859999895095825, 0.6923333406448364, 0.6976666450500488, 0.675000011920929, 0.7103333473205566, 0.7266666889190674, 0.746999979019165, 0.7756666541099548, 0.7509999871253967, 0.750333309173584, 0.7746666669845581, 0.7746666669845581, 0.746666669845581]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [6, 8, 6, 0, 5, 1, 1, 8, 0, 8, 8, 2, 6, 3, 3, 9, 0, 5, 2, 2, 2, 2, 0, 2, 8, 4, 1, 2, 5, 1, 6, 0, 1, 0, 3, 0, 4, 6, 3, 1, 6, 0, 8, 9, 3, 6, 6, 0], [1, 2, 2, 2, 2, 2, 2, 2, 0, 0, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [54, 41, 41, 44, 70, 79, 53, 52, 44, 33, 73, 78, 72], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 5, 8, 8, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 0, 0, 2, 1, 3, 0, 0], [77, 33, 93, 84, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [50, 25, 50, 71, 34]], "fitness": -0.7737143039703369, "mapping_values": [1, 37, 37, 24, 13, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(alpha, tf.math.negative(tf.math.square(tf.math.subtract(tf.math.subtract(tf.math.add(alpha, grad), grad), tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, grad)))))))))))), tf.math.add(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(grad, grad))))))), tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(grad, grad)))), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2616851385542587, 2.226662606469329, 2.318216172916038, 1.9583197391390597, 2.0884359955173584, 1.62830203651138, 1.29128581563385, 1.123347720733298, 0.9586089994881871, 0.947399146891289, 0.8530978225934239, 0.8286933079371757, 0.8088424756479395, 0.8522425569390198, 0.7800376482958398, 0.7232339551042273, 0.7163819242477921, 0.6650820758443199, 0.7040356030522116, 0.6479320966210175, 0.6324812464663034, 0.6343610108788333], "accuracy": [0.24356095492839813, 0.22044643759727478, 0.13380002975463867, 0.3152819871902466, 0.2867520749568939, 0.4099854826927185, 0.5223880410194397, 0.5712587237358093, 0.6343944072723389, 0.6469422578811646, 0.6700568199157715, 0.677189290523529, 0.6881521344184875, 0.6847180128097534, 0.7013604640960693, 0.7186633348464966, 0.7228899598121643, 0.741909921169281, 0.7290979027748108, 0.7514199018478394, 0.7564390301704407, 0.7528728246688843], "val_loss": [1.9743330138070243, 1.9876126561846053, 1.8574580465044295, 1.9195352281842912, 1.038212878363473, 1.2448106493268694, 0.9154704298291888, 0.8010778427124023, 0.7273493664605277, 0.6712714433670044, 0.6511407749993461, 0.6649611677442279, 0.6550549609320504, 0.6121255159378052, 0.5739358152662005, 0.5422882522855487, 0.5061335904257638, 0.5413310357502529, 0.5367554426193237, 0.5066071408135551, 0.48498920031956266, 0.511646202632359], "val_accuracy": [0.1120000034570694, 0.21933333575725555, 0.2750000059604645, 0.15466666221618652, 0.528333306312561, 0.47099998593330383, 0.5823333263397217, 0.637666642665863, 0.668666660785675, 0.6859999895095825, 0.6923333406448364, 0.6976666450500488, 0.675000011920929, 0.7103333473205566, 0.7266666889190674, 0.746999979019165, 0.7756666541099548, 0.7509999871253967, 0.750333309173584, 0.7746666669845581, 0.7746666669845581, 0.746666669845581]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 6, 1, 8, 4, 1, 2, 8, 0, 5, 9, 2, 9, 3, 9, 6, 0, 5, 0, 8, 8, 2, 0, 2, 8, 8], [2, 2, 1, 2, 2, 2, 2, 0, 2, 2, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 65, 73, 52, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 0, 0, 2, 1, 3, 0, 0], [77, 33, 93, 84, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [35, 25, 50, 71, 34]], "fitness": -0.7285714149475098, "mapping_values": [1, 16, 16, 11, 5, 1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.subtract(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(alpha))))), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), grad))))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.pow(grad, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.172094981463484, 2.2598070252793514, 2.3044179560344262, 2.2545196925644326, 2.4584010965111487, 2.0096657225138097, 2.074840558723074, 1.7463366177261246, 1.3690972103182635, 1.1057906349053896, 1.0284314769023855, 1.0010412734150966, 0.8710218356852644, 0.8384000233545154, 0.7776256411256036, 0.7263976342610994, 0.6917277129098582, 0.6951166214629282, 0.6809253514860095, 0.6281779079137462, 0.6111666552693915, 0.5757813926512114, 0.5639700303932994, 0.5924335372934504, 0.5198041570106313, 0.5681063259250972, 0.495679464354066, 0.4965303763973557, 0.4829056770605355, 0.469055276135286, 0.4554522383828693, 0.4573129476171679, 0.45392584337014813, 0.45069663330721677, 0.4224428674367283, 0.40428157135196696, 0.4133147901398174, 0.395162318423912, 0.3990118063444065, 0.3986900132314294, 0.376061609475179, 0.39306285272358177], "accuracy": [0.18319904804229736, 0.15770703554153442, 0.09325055778026581, 0.1592920422554016, 0.25003302097320557, 0.32399946451187134, 0.29520538449287415, 0.4675736427307129, 0.5297846794128418, 0.6007132530212402, 0.6411306262016296, 0.6448289752006531, 0.6831330060958862, 0.6933034062385559, 0.7083608508110046, 0.7252674698829651, 0.7331924438476562, 0.7376832365989685, 0.7450799345970154, 0.7560427784919739, 0.7684586048126221, 0.7707040309906006, 0.7829877138137817, 0.7705719470977783, 0.7957997918128967, 0.7803460359573364, 0.8054417967796326, 0.8061022162437439, 0.8101968169212341, 0.81548011302948, 0.8170651197433472, 0.8204993009567261, 0.8208954930305481, 0.8220842480659485, 0.835160493850708, 0.8388587832450867, 0.8352925777435303, 0.8477083444595337, 0.8453308939933777, 0.8441421389579773, 0.8549728989601135, 0.8441421389579773], "val_loss": [1.8993834086826868, 1.9742116246904646, 1.9731856073651994, 3.3297548975263322, 1.5133064474378313, 1.5918818201337541, 1.4365803514208113, 1.1553775242396764, 1.1251248632158553, 0.7237390109470913, 0.7579813855034965, 0.6601842812129429, 0.6848270382199969, 0.5720697130475726, 0.5767257383891514, 0.5651087760925293, 0.5244045768465314, 0.5286717074257987, 0.49659102303641184, 0.4657839025769915, 0.4542128699166434, 0.4815422637122018, 0.47112105573926655, 0.4579698528562273, 0.5434942926679339, 0.4382045098713466, 0.4139812844140189, 0.3976200989314488, 0.4180788993835449, 0.43764122894832064, 0.3911931259291513, 0.37586227485111784, 0.453532338142395, 0.3892496568816049, 0.39904797077178955, 0.4095448681286403, 0.37052546228681293, 0.395159227507455, 0.37858850615365164, 0.41631370782852173, 0.3765368291309902, 0.3957846931048802], "val_accuracy": [0.33533334732055664, 0.10233332961797714, 0.09833333641290665, 0.1926666647195816, 0.36899998784065247, 0.3733333349227905, 0.5199999809265137, 0.5446666479110718, 0.5189999938011169, 0.7070000171661377, 0.6993333101272583, 0.6996666789054871, 0.7176666855812073, 0.7523333430290222, 0.7683333158493042, 0.7419999837875366, 0.7666666507720947, 0.7616666555404663, 0.7919999957084656, 0.793666660785675, 0.796999990940094, 0.7889999747276306, 0.7990000247955322, 0.796999990940094, 0.7443333268165588, 0.8196666836738586, 0.8206666707992554, 0.8346666693687439, 0.8243333101272583, 0.8106666803359985, 0.8346666693687439, 0.8410000205039978, 0.8006666898727417, 0.8429999947547913, 0.8253333568572998, 0.8230000138282776, 0.8526666760444641, 0.8330000042915344, 0.8376666903495789, 0.8063333630561829, 0.8463333249092102, 0.8373333215713501]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 3, 8, 8, 2, 8, 2, 9, 0, 4, 4, 2, 9, 3, 8, 6, 9, 5, 8, 8, 8, 2, 0, 2, 8, 8], [1, 2, 2, 2, 2, 2, 2, 2, 0, 0, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 41, 73, 44, 8, 79, 53, 52, 44, 16, 82, 21, 5, 73], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 4, 9, 8, 4, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 36, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [19, 25, 50, 71, 34]], "fitness": -0.7285714149475098, "mapping_values": [1, 4, 4, 2, 2, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), grad)))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.172094981463484, 2.2598070252793514, 2.3044179560344262, 2.2545196925644326, 2.4584010965111487, 2.0096657225138097, 2.074840558723074, 1.7463366177261246, 1.3690972103182635, 1.1057906349053896, 1.0284314769023855, 1.0010412734150966, 0.8710218356852644, 0.8384000233545154, 0.7776256411256036, 0.7263976342610994, 0.6917277129098582, 0.6951166214629282, 0.6809253514860095, 0.6281779079137462, 0.6111666552693915, 0.5757813926512114, 0.5639700303932994, 0.5924335372934504, 0.5198041570106313, 0.5681063259250972, 0.495679464354066, 0.4965303763973557, 0.4829056770605355, 0.469055276135286, 0.4554522383828693, 0.4573129476171679, 0.45392584337014813, 0.45069663330721677, 0.4224428674367283, 0.40428157135196696, 0.4133147901398174, 0.395162318423912, 0.3990118063444065, 0.3986900132314294, 0.376061609475179, 0.39306285272358177], "accuracy": [0.18319904804229736, 0.15770703554153442, 0.09325055778026581, 0.1592920422554016, 0.25003302097320557, 0.32399946451187134, 0.29520538449287415, 0.4675736427307129, 0.5297846794128418, 0.6007132530212402, 0.6411306262016296, 0.6448289752006531, 0.6831330060958862, 0.6933034062385559, 0.7083608508110046, 0.7252674698829651, 0.7331924438476562, 0.7376832365989685, 0.7450799345970154, 0.7560427784919739, 0.7684586048126221, 0.7707040309906006, 0.7829877138137817, 0.7705719470977783, 0.7957997918128967, 0.7803460359573364, 0.8054417967796326, 0.8061022162437439, 0.8101968169212341, 0.81548011302948, 0.8170651197433472, 0.8204993009567261, 0.8208954930305481, 0.8220842480659485, 0.835160493850708, 0.8388587832450867, 0.8352925777435303, 0.8477083444595337, 0.8453308939933777, 0.8441421389579773, 0.8549728989601135, 0.8441421389579773], "val_loss": [1.8993834086826868, 1.9742116246904646, 1.9731856073651994, 3.3297548975263322, 1.5133064474378313, 1.5918818201337541, 1.4365803514208113, 1.1553775242396764, 1.1251248632158553, 0.7237390109470913, 0.7579813855034965, 0.6601842812129429, 0.6848270382199969, 0.5720697130475726, 0.5767257383891514, 0.5651087760925293, 0.5244045768465314, 0.5286717074257987, 0.49659102303641184, 0.4657839025769915, 0.4542128699166434, 0.4815422637122018, 0.47112105573926655, 0.4579698528562273, 0.5434942926679339, 0.4382045098713466, 0.4139812844140189, 0.3976200989314488, 0.4180788993835449, 0.43764122894832064, 0.3911931259291513, 0.37586227485111784, 0.453532338142395, 0.3892496568816049, 0.39904797077178955, 0.4095448681286403, 0.37052546228681293, 0.395159227507455, 0.37858850615365164, 0.41631370782852173, 0.3765368291309902, 0.3957846931048802], "val_accuracy": [0.33533334732055664, 0.10233332961797714, 0.09833333641290665, 0.1926666647195816, 0.36899998784065247, 0.3733333349227905, 0.5199999809265137, 0.5446666479110718, 0.5189999938011169, 0.7070000171661377, 0.6993333101272583, 0.6996666789054871, 0.7176666855812073, 0.7523333430290222, 0.7683333158493042, 0.7419999837875366, 0.7666666507720947, 0.7616666555404663, 0.7919999957084656, 0.793666660785675, 0.796999990940094, 0.7889999747276306, 0.7990000247955322, 0.796999990940094, 0.7443333268165588, 0.8196666836738586, 0.8206666707992554, 0.8346666693687439, 0.8243333101272583, 0.8106666803359985, 0.8346666693687439, 0.8410000205039978, 0.8006666898727417, 0.8429999947547913, 0.8253333568572998, 0.8230000138282776, 0.8526666760444641, 0.8330000042915344, 0.8376666903495789, 0.8063333630561829, 0.8463333249092102, 0.8373333215713501]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [6, 8, 0, 0, 5, 1, 1, 8, 0, 8, 5, 2, 6, 3, 3, 0, 0, 5, 0, 2, 2, 2, 0, 2, 8, 4, 1, 2, 5, 1, 6, 0, 1, 0, 3, 0, 4, 6, 3, 1, 6, 0, 8, 9, 3, 6, 6, 0], [0, 2, 1, 2, 2, 2, 0, 0, 2, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 65, 73, 52, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 5, 8, 8, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 1, 0, 2, 1, 3, 0, 0], [32, 33, 83, 36, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [35, 25, 50, 71, 34]], "fitness": -0.7285714149475098, "mapping_values": [1, 15, 15, 11, 4, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.math.negative(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.subtract(tf.math.subtract(tf.math.add(alpha, grad), alpha), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.square(grad)))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.172094981463484, 2.2598070252793514, 2.3044179560344262, 2.2545196925644326, 2.4584010965111487, 2.0096657225138097, 2.074840558723074, 1.7463366177261246, 1.3690972103182635, 1.1057906349053896, 1.0284314769023855, 1.0010412734150966, 0.8710218356852644, 0.8384000233545154, 0.7776256411256036, 0.7263976342610994, 0.6917277129098582, 0.6951166214629282, 0.6809253514860095, 0.6281779079137462, 0.6111666552693915, 0.5757813926512114, 0.5639700303932994, 0.5924335372934504, 0.5198041570106313, 0.5681063259250972, 0.495679464354066, 0.4965303763973557, 0.4829056770605355, 0.469055276135286, 0.4554522383828693, 0.4573129476171679, 0.45392584337014813, 0.45069663330721677, 0.4224428674367283, 0.40428157135196696, 0.4133147901398174, 0.395162318423912, 0.3990118063444065, 0.3986900132314294, 0.376061609475179, 0.39306285272358177], "accuracy": [0.18319904804229736, 0.15770703554153442, 0.09325055778026581, 0.1592920422554016, 0.25003302097320557, 0.32399946451187134, 0.29520538449287415, 0.4675736427307129, 0.5297846794128418, 0.6007132530212402, 0.6411306262016296, 0.6448289752006531, 0.6831330060958862, 0.6933034062385559, 0.7083608508110046, 0.7252674698829651, 0.7331924438476562, 0.7376832365989685, 0.7450799345970154, 0.7560427784919739, 0.7684586048126221, 0.7707040309906006, 0.7829877138137817, 0.7705719470977783, 0.7957997918128967, 0.7803460359573364, 0.8054417967796326, 0.8061022162437439, 0.8101968169212341, 0.81548011302948, 0.8170651197433472, 0.8204993009567261, 0.8208954930305481, 0.8220842480659485, 0.835160493850708, 0.8388587832450867, 0.8352925777435303, 0.8477083444595337, 0.8453308939933777, 0.8441421389579773, 0.8549728989601135, 0.8441421389579773], "val_loss": [1.8993834086826868, 1.9742116246904646, 1.9731856073651994, 3.3297548975263322, 1.5133064474378313, 1.5918818201337541, 1.4365803514208113, 1.1553775242396764, 1.1251248632158553, 0.7237390109470913, 0.7579813855034965, 0.6601842812129429, 0.6848270382199969, 0.5720697130475726, 0.5767257383891514, 0.5651087760925293, 0.5244045768465314, 0.5286717074257987, 0.49659102303641184, 0.4657839025769915, 0.4542128699166434, 0.4815422637122018, 0.47112105573926655, 0.4579698528562273, 0.5434942926679339, 0.4382045098713466, 0.4139812844140189, 0.3976200989314488, 0.4180788993835449, 0.43764122894832064, 0.3911931259291513, 0.37586227485111784, 0.453532338142395, 0.3892496568816049, 0.39904797077178955, 0.4095448681286403, 0.37052546228681293, 0.395159227507455, 0.37858850615365164, 0.41631370782852173, 0.3765368291309902, 0.3957846931048802], "val_accuracy": [0.33533334732055664, 0.10233332961797714, 0.09833333641290665, 0.1926666647195816, 0.36899998784065247, 0.3733333349227905, 0.5199999809265137, 0.5446666479110718, 0.5189999938011169, 0.7070000171661377, 0.6993333101272583, 0.6996666789054871, 0.7176666855812073, 0.7523333430290222, 0.7683333158493042, 0.7419999837875366, 0.7666666507720947, 0.7616666555404663, 0.7919999957084656, 0.793666660785675, 0.796999990940094, 0.7889999747276306, 0.7990000247955322, 0.796999990940094, 0.7443333268165588, 0.8196666836738586, 0.8206666707992554, 0.8346666693687439, 0.8243333101272583, 0.8106666803359985, 0.8346666693687439, 0.8410000205039978, 0.8006666898727417, 0.8429999947547913, 0.8253333568572998, 0.8230000138282776, 0.8526666760444641, 0.8330000042915344, 0.8376666903495789, 0.8063333630561829, 0.8463333249092102, 0.8373333215713501]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [3, 9, 2, 2, 4, 2, 9, 5, 0, 9, 2, 4, 6, 3, 2, 6, 9, 5, 0, 2, 0, 2, 1, 2, 8, 4, 3, 4, 6, 8, 1, 2, 1, 5, 1, 0, 5, 9, 3, 4, 8, 9, 0, 0, 9, 7, 4, 0, 3, 1, 5, 3, 1, 7], [0, 0, 0, 0, 0, 2, 1, 1, 0, 2, 0, 0, 2, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 2, 2, 0, 0, 0, 0, 2, 3], [94, 41, 87, 44, 8, 57, 9, 53, 44, 40, 82, 21, 5, 73, 66], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 4, 9, 8, 4, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [6, 33, 83, 36, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [19, 25, 50, 71, 34]], "fitness": -0.6882857084274292, "mapping_values": [1, 11, 11, 7, 4, 6, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.300537836061981, 2.2965904749647468, 2.292341076293248, 2.2873257383017287, 2.2820253770238987, 2.2778914260385594, 2.2727705411088466, 2.26991768753083, 2.2657463478768083, 2.260605996011853, 2.254668515009761, 2.2504452818876968, 2.2444598309163326, 2.239475071186151, 2.236199793452206, 2.229052234335252, 2.222129602284873, 2.2169457909107018, 2.210017238420943, 2.2037835353873487, 2.1955256688832576, 2.1892805928016275, 2.1800119235074407, 2.1708142301425672, 2.159816106454398, 2.1549608052099667, 2.143054520181614, 2.1311538209689687, 2.1213035432339153, 2.108586851159548, 2.0960633051535553, 2.0811460880382326, 2.0687090634764336, 2.0530465592356753, 2.03972817931618, 2.0258479695892637, 2.00587946048203, 1.9884498969926936, 1.9697674443425441, 1.955249669230326, 1.9319606707505799, 1.9150972849247934, 1.8925990080868076, 1.875752670874197, 1.8502699187749476, 1.8299004325241917, 1.8094048026278506, 1.786517160396377, 1.7652443846407946, 1.7414248193244042, 1.7193728267807986, 1.7022911847432873, 1.674238269339463, 1.658577692633087, 1.6369160724086154, 1.609165036777511, 1.5965053110767617, 1.5753447884786493, 1.5554041141343233, 1.5332986191200495, 1.5228327469755834, 1.488605176484533, 1.4783151637703247, 1.4547238435255239, 1.4446999535600287, 1.4359806079150286, 1.4109377079100704, 1.3958398773685627, 1.3868508572906566, 1.3669628536602005, 1.3548681227254862, 1.3448235709134062, 1.3377572442908658, 1.3170915848826845, 1.3069931608322762, 1.3030294492779753, 1.2877750367441858, 1.2750520286401343, 1.269302051191112, 1.2507440159743126, 1.2473927714396085, 1.230254929646084, 1.2248481645591665, 1.2259087355822431, 1.2114809431561768, 1.1956843842510314, 1.1865864132279182, 1.186198387557269, 1.19021569652769, 1.1687385864450537, 1.162029912033731, 1.1455425853978658, 1.146344361178013, 1.1484204912859577, 1.1334873391589657, 1.1289670848418158, 1.1098353383783903, 1.121148698318274, 1.1123904156694322, 1.099439535977393], "accuracy": [0.09536388516426086, 0.10381719470024109, 0.11359133571386337, 0.1274600476026535, 0.14212125539779663, 0.16021661460399628, 0.16193369030952454, 0.1795007288455963, 0.18795403838157654, 0.19957733154296875, 0.21291771531105042, 0.21820102632045746, 0.24105137586593628, 0.2530709207057953, 0.2541275918483734, 0.25901466608047485, 0.27882710099220276, 0.2907145619392395, 0.2925637364387512, 0.30405494570732117, 0.31884822249412537, 0.3206973969936371, 0.32043322920799255, 0.34064191579818726, 0.3486989736557007, 0.33601900935173035, 0.352529376745224, 0.36547350883483887, 0.363360196352005, 0.37022849917411804, 0.37762513756752014, 0.3929467797279358, 0.39122968912124634, 0.4017963409423828, 0.40589091181755066, 0.3995509147644043, 0.41064587235450745, 0.41962751746177673, 0.4251750111579895, 0.42543917894363403, 0.43085458874702454, 0.4371945559978485, 0.44010037183761597, 0.43930789828300476, 0.45145952701568604, 0.4527803361415863, 0.4579315781593323, 0.46730947494506836, 0.46387532353401184, 0.47166821360588074, 0.4773477613925934, 0.4785365164279938, 0.49148064851760864, 0.48487651348114014, 0.48725399374961853, 0.4917448163032532, 0.49887728691101074, 0.49491479992866516, 0.5040285587310791, 0.5138026475906372, 0.5115572810173035, 0.5254259705543518, 0.5197464227676392, 0.5303130149841309, 0.5322942733764648, 0.5252938866615295, 0.5367851257324219, 0.5474838018417358, 0.5375775694847107, 0.5456346869468689, 0.5456346869468689, 0.5585787892341614, 0.5480121374130249, 0.5539559125900269, 0.5606921315193176, 0.5568616986274719, 0.5587108731269836, 0.5650508403778076, 0.5601637959480286, 0.5717870593070984, 0.5715228915214539, 0.5797120332717896, 0.5797120332717896, 0.5764099955558777, 0.583938717842102, 0.5898824334144592, 0.5939770340919495, 0.5865803956985474, 0.585391640663147, 0.5952978730201721, 0.5934486985206604, 0.6021661758422852, 0.598599910736084, 0.6038832664489746, 0.6046757102012634, 0.6058644652366638, 0.6089023947715759, 0.6090344786643982, 0.6118082404136658, 0.6185444593429565], "val_loss": [1.9664274624415807, 1.962280205317906, 1.9581796101161413, 1.9540525845118932, 1.9499474934169225, 1.9458227157592773, 1.9415644918169295, 1.937249047415597, 1.932908194405692, 1.9284082821437292, 1.923753261566162, 1.9189282826014928, 1.9139926092965263, 1.9087341853550501, 1.9033735139029366, 1.8977279663085938, 1.8918625286647253, 1.8856945037841797, 1.8792240279061454, 1.8723877498081751, 1.8651591028485979, 1.8575961930411202, 1.8495427540370397, 1.8410798481532507, 1.8320764132908411, 1.8226642608642578, 1.812706538609096, 1.802154881613595, 1.7911081314086914, 1.7794201033455985, 1.7671760831560408, 1.7542359488351005, 1.7406400271824427, 1.7264385904584612, 1.7116978168487549, 1.6962754045213972, 1.6800411088126046, 1.6630226884569441, 1.6453473227364677, 1.6272061892918177, 1.608107669012887, 1.5885683127811976, 1.5682841028485979, 1.5478268350873674, 1.526487077985491, 1.5050644874572754, 1.4832870960235596, 1.461184365408761, 1.4390970638820104, 1.4165663037981306, 1.3942880971091134, 1.3718773978097099, 1.3494836262294225, 1.3272477558680944, 1.305091721670968, 1.2829884460994176, 1.261727741786412, 1.2408856664385115, 1.2204324858529227, 1.2001869678497314, 1.1809159006391252, 1.1617232731410436, 1.1432867390768868, 1.1252450602395194, 1.1079964297158378, 1.091648817062378, 1.075737612588065, 1.0601565497262138, 1.0455055577414376, 1.0315115792410714, 1.0178791454860143, 1.0045318603515625, 0.9920756135668073, 0.9798851694379535, 0.9681368214743478, 0.9571709973471505, 0.9464565004621234, 0.9360864162445068, 0.926145212990897, 0.9164553710392543, 0.9071003709520612, 0.8981913839067731, 0.8896551813398089, 0.8815477234976632, 0.8735450335911342, 0.865843653678894, 0.857919420514788, 0.8506801468985421, 0.8439494371414185, 0.8370156628744942, 0.8305769647870745, 0.8238172020230975, 0.8175997393471854, 0.8118722949709211, 0.8058948857443673, 0.8006116662706647, 0.794783353805542, 0.7897039140973773, 0.7847283738000053, 0.7796354293823242], "val_accuracy": [0.06499999761581421, 0.10400000214576721, 0.14366666972637177, 0.1850000023841858, 0.2240000069141388, 0.2553333342075348, 0.2903333306312561, 0.3176666796207428, 0.3440000116825104, 0.35866665840148926, 0.36899998784065247, 0.3790000081062317, 0.3856666684150696, 0.3970000147819519, 0.4026666581630707, 0.41200000047683716, 0.421999990940094, 0.4323333203792572, 0.43700000643730164, 0.44433334469795227, 0.45100000500679016, 0.4586666524410248, 0.46533334255218506, 0.468666672706604, 0.4740000069141388, 0.4790000021457672, 0.4846666753292084, 0.48766666650772095, 0.49799999594688416, 0.5023333430290222, 0.5096666812896729, 0.5173333287239075, 0.5243333578109741, 0.528333306312561, 0.5336666703224182, 0.5366666913032532, 0.5400000214576721, 0.5426666736602783, 0.5479999780654907, 0.5526666641235352, 0.5556666851043701, 0.5569999814033508, 0.5606666803359985, 0.5633333325386047, 0.5690000057220459, 0.5736666917800903, 0.5759999752044678, 0.5770000219345093, 0.5766666531562805, 0.578000009059906, 0.581333339214325, 0.5846666693687439, 0.5863333344459534, 0.5920000076293945, 0.5920000076293945, 0.5943333506584167, 0.597000002861023, 0.6006666421890259, 0.6039999723434448, 0.6069999933242798, 0.6129999756813049, 0.6179999709129333, 0.621666669845581, 0.625333309173584, 0.6323333382606506, 0.6393333077430725, 0.643666684627533, 0.6476666927337646, 0.653333306312561, 0.6570000052452087, 0.6596666574478149, 0.6626666784286499, 0.6660000085830688, 0.6679999828338623, 0.6713333129882812, 0.6753333210945129, 0.6753333210945129, 0.6793333292007446, 0.6803333163261414, 0.6830000281333923, 0.684333324432373, 0.6859999895095825, 0.6886666417121887, 0.690666675567627, 0.6909999847412109, 0.690666675567627, 0.6923333406448364, 0.6923333406448364, 0.6936666369438171, 0.6946666836738586, 0.6970000267028809, 0.6980000138282776, 0.6990000009536743, 0.6986666917800903, 0.7013333439826965, 0.7009999752044678, 0.703000009059906, 0.7036666870117188, 0.7036666870117188, 0.7043333053588867]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [3, 6, 2, 2, 4, 2, 0, 5, 0, 9, 2, 4, 6, 3, 5, 2, 9, 5, 0, 2, 6, 2, 9, 5, 8, 4, 3, 4, 6, 8, 5, 2, 1, 5, 1, 8, 3, 9, 2, 4, 8, 8, 0, 0, 1, 0, 9, 8, 3, 1, 5, 3, 1, 7], [1, 1, 1, 0, 2, 0, 2, 0, 0, 0, 2, 0, 0, 0, 1, 1, 2, 2, 1, 0, 0, 0, 0, 2, 0, 2, 0, 2, 0, 0, 2, 3, 3, 0, 3], [90, 81, 73, 22, 38, 23, 53, 52, 44, 74, 12, 6, 48, 19, 72, 11, 32], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 4, 9, 8, 4, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [77, 33, 93, 84, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 2, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [35, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 37, 37, 25, 12, 9, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 55, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.square(alpha))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.multiply(tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.sqrt(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))))))))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))), grad)), tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.add(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [117513149627.33864, 2.3074740724257508, 2.3056765044165357, 2.3071183096762615, 2.3060178560209845, 2.307244022020716, 2.3068823809353525], "accuracy": [0.1014397069811821, 0.10038304328918457, 0.09853387624025345, 0.1006472036242485, 0.10051512718200684, 0.09087307006120682, 0.09932637959718704], "val_loss": [1.976191588810512, 1.9761206763131278, 1.9749327387128557, 1.9772027560642786, 1.974529606955392, 1.9759319169180733, 1.9760414532252721], "val_accuracy": [0.10233332961797714, 0.10400000214576721, 0.10400000214576721, 0.10233332961797714, 0.10400000214576721, 0.09966666996479034, 0.10400000214576721]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [3, 9, 2, 9, 4, 2, 0, 5, 0, 9, 2, 4, 6, 3, 2, 6, 9, 5, 0, 2, 0, 2, 1, 2, 8, 4, 3, 4, 6, 8, 1, 2, 1, 5, 1, 0, 5, 9, 3, 4, 8, 9, 0, 0, 9, 7, 4, 0, 3, 1, 5, 3, 1, 7], [0, 0, 2, 2, 0, 2, 1, 1, 0, 2, 0, 0, 2, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 2, 2, 0, 0, 0, 0, 2, 3], [94, 41, 73, 44, 8, 57, 9, 53, 44, 40, 82, 21, 5, 73, 66], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 4, 9, 8, 4, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 1, 3, 1, 0, 2, 1, 3, 0, 0], [6, 33, 83, 36, 91, 78], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [0, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [35, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.7835535119474524, 7.826422876512464, 19.73579671136959, 39.28932508177147, 66.30477015160614, 106.06375088211158], "accuracy": [0.0956280529499054, 0.09919429570436478, 0.10342095047235489, 0.09391097724437714, 0.10487385839223862, 0.09708096832036972], "val_loss": [3.215962682451521, 8.67691775730678, 18.570594787597656, 33.63251059395926, 54.746892656598774, 82.93691580636161], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 2, 1, 4, 5, 2, 1, 8, 9, 8, 0, 2, 9, 3, 0, 6, 9, 5, 8, 2, 8, 2, 0, 2, 8, 1, 1, 2, 5, 1, 6, 0, 1, 0, 3, 0, 4, 6, 3, 1, 6, 0, 8, 9, 3, 6, 2, 0, 5, 3, 7, 1, 4, 5, 4, 6, 6, 3, 4, 5, 8, 4, 5, 4, 3, 5, 9, 2, 2, 8, 6, 8, 7, 8, 6, 7, 0, 9], [0, 0, 2, 2, 0, 2, 1, 2, 2, 0, 0, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 65, 73, 58, 8, 44, 86, 52, 44], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 5, 8, 8, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 36, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [17, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 10, 5, 4, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(alpha, tf.math.sqrt(grad)))), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.square(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(sigma, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 6, 2, 8, 4, 1, 2, 2, 0, 4, 9, 2, 6, 3, 9, 6, 9, 5, 0, 8, 8, 2, 0, 2, 8, 8], [0, 0, 0, 2, 0, 0, 0, 1, 0, 2, 0, 0, 2, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 2, 2, 0, 0, 0, 0, 2, 3], [94, 41, 73, 44, 8, 57, 9, 53, 44, 40, 82, 21, 5, 73, 66], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 36, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1], [0, 8, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [35, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 0, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [14007326.469770027, 270004065.64416856, 1261489200.2683926, 3530527776.257826, 7439500957.366795, 13952100672.008453], "accuracy": [0.10011887550354004, 0.09919429570436478, 0.10196803510189056, 0.0944393053650856, 0.10421344637870789, 0.09708096832036972], "val_loss": [54126298.28571428, 432429412.5714286, 1458803382.857143, 3457138614.857143, 6751296365.714286, 11665264347.428572], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [6, 8, 0, 0, 5, 1, 1, 8, 0, 8, 8, 2, 6, 3, 3, 0, 0, 5, 0, 2, 2, 2, 0, 2, 8, 4, 1, 2, 5, 1, 6, 0, 1, 0, 3, 0, 4, 6, 3, 1, 6, 0, 8, 9, 3, 6, 6, 0], [2, 0, 0, 2, 2, 2, 0, 0, 2, 0, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [74, 41, 84, 44, 70, 79, 53, 52, 44, 83, 73, 39, 72], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 5, 8, 8, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 1, 0, 0, 0, 2, 1, 3, 0, 0], [77, 33, 93, 84, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [3, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [9, 4, 8, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [50, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3018128840741605, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 6, 1, 8, 4, 8, 1, 8, 2, 4, 3, 2, 9, 3, 9, 6, 9, 2, 0, 8, 8, 2, 0, 2, 8, 8], [1, 2, 2, 2, 2, 2, 2, 2, 0, 0, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 41, 73, 44, 8, 79, 53, 52, 44, 16, 82, 21, 5, 73], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 36, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 9, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [19, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 33, 33, 23, 10, 5, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 55, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(alpha, grad)), tf.math.sqrt(tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.pow(tf.math.multiply(tf.math.add(grad, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.negative(grad), tf.math.sqrt(tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, grad))))))))), grad), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))))), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07409853488206863, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 6, 2, 8, 4, 1, 2, 8, 2, 4, 2, 2, 9, 9, 9, 2, 9, 5, 0, 8, 8, 2, 0, 2, 8, 8], [1, 2, 2, 2, 2, 2, 2, 2, 0, 0, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 31, 73, 52, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 36, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [1, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [35, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 31, 31, 23, 8, 4, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.sqrt(tf.math.pow(tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.add(alpha, tf.math.add(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), grad)), grad), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))), tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), tf.math.negative(grad)), tf.math.sqrt(tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, grad)))))))), grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.pow(grad, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [3, 9, 2, 2, 4, 4, 0, 2, 0, 9, 2, 4, 6, 3, 2, 6, 9, 5, 0, 2, 0, 2, 1, 2, 8, 4, 3, 4, 6, 8, 1, 2, 1, 5, 1, 0, 5, 9, 3, 4, 8, 9, 0, 0, 9, 7, 4, 0, 3, 1, 5, 3, 1, 7], [0, 0, 0, 2, 0, 2, 1, 1, 0, 2, 0, 0, 2, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 2, 2, 0, 0, 0, 0, 2, 3], [94, 41, 73, 44, 8, 57, 9, 53, 44, 40, 82, 21, 5, 73, 66], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 4, 9, 8, 4, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 1, 3, 1, 0, 2, 1, 3, 0, 0], [6, 33, 83, 36, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [4, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [64, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 10, 5, 6, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.pow(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.pow(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.negative(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.3018128840741605, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [3, 9, 6, 2, 4, 2, 0, 5, 0, 9, 2, 4, 6, 3, 2, 6, 9, 5, 0, 2, 0, 2, 1, 2, 8, 4, 3, 4, 6, 8, 1, 2, 1, 5, 1, 0, 5, 9, 3, 4, 8, 9, 0, 0, 9, 7, 4, 0, 3, 1, 5, 3, 1, 7], [1, 2, 2, 2, 2, 2, 2, 2, 0, 0, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 65, 73, 52, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 4, 9, 8, 4, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 1, 3, 1, 0, 2, 1, 3, 0, 0], [32, 33, 83, 36, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [35, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 30, 30, 20, 10, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(grad)))), tf.math.square(tf.math.negative(tf.math.add(alpha, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))))), tf.math.add(grad, tf.math.pow(tf.math.divide_no_nan(tf.math.multiply(grad, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), grad)), tf.math.square(grad)))), tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(sigma, beta), beta)", "other_info": {"loss": [2.3023458456145995, 2.302804310497213, 2.3029481548721984, 2.3023064679410465, 2.3011953483687857, 2.301405030880244], "accuracy": [0.09100515395402908, 0.09021265059709549, 0.08677849918603897, 0.09153348207473755, 0.09549596905708313, 0.0948355570435524], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 6, 1, 8, 4, 8, 2, 8, 0, 4, 3, 2, 9, 3, 9, 6, 9, 5, 3, 8, 8, 2, 0, 2, 8, 8], [1, 2, 2, 2, 1, 2, 2, 2, 0, 0, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 41, 73, 44, 8, 79, 53, 52, 44, 16, 82, 21, 5, 73], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 4, 9, 8, 4, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 36, 91, 78], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [97, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 4, 4, 2, 2, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3023458456145995, 2.302804310497213, 2.3029481548721984, 2.3023064679410465, 2.3011953483687857, 2.301405030880244], "accuracy": [0.09100515395402908, 0.09021265059709549, 0.08677849918603897, 0.09153348207473755, 0.09549596905708313, 0.0948355570435524], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 9, 2, 9, 4, 8, 0, 5, 0, 2, 2, 4, 6, 3, 2, 6, 9, 5, 0, 2, 0, 2, 1, 2, 8, 4, 3, 4, 6, 8, 1, 2, 1, 5, 1, 0, 5, 9, 3, 4, 8, 9, 0, 0, 9, 7, 4, 0, 3, 1, 5, 3, 1, 7], [0, 0, 0, 2, 0, 2, 1, 1, 0, 2, 0, 0, 2, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 2, 2, 0, 0, 0, 0, 2, 3], [94, 41, 73, 44, 8, 57, 9, 53, 44, 40, 82, 21, 5, 73, 66], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 4, 9, 8, 4, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 1, 3, 1, 0, 2, 1, 3, 0, 0], [6, 33, 83, 36, 91, 78], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [35, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 5, 5, 4, 1, 3, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3023458456145995, 2.302804310497213, 2.3029481548721984, 2.3023064679410465, 2.3011953483687857, 2.301405030880244], "accuracy": [0.09100515395402908, 0.09021265059709549, 0.08677849918603897, 0.09153348207473755, 0.09549596905708313, 0.0948355570435524], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]