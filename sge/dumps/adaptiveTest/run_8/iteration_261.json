[{"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [2, 6, 9, 0, 0, 3, 4], [3, 0, 0, 1, 1, 0], [8, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.8040000200271606, "mapping_values": [1, 11, 11, 7, 4, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha))))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.0715177997606244, 1.9122242445108708, 1.753775647083026, 1.2521722420426156, 0.9310036367192922, 0.8765146796650749, 0.723450700793646, 0.6681557323922885, 0.659544816279786, 0.6265517989752425, 0.5808300529850818, 0.574968830107257, 0.5877132608732764, 0.5026884758870804, 0.5278124752660013, 0.5209211165233295, 0.4971515255723222, 0.4895876835539136, 0.4803901720890957, 0.4485268032372887, 0.4715845475516787, 0.44708851981613346, 0.44051220477328024, 0.4295859823310695, 0.4163624592555465, 0.40568816368968147, 0.4077264883058135, 0.3977269216606315, 0.3945616538285926, 0.37068619840747535, 0.40270613066004785, 0.38238870093394517, 0.37523761419588, 0.3562312975157805, 0.37719209268029813], "accuracy": [0.30101704597473145, 0.3891163766384125, 0.37868180871009827, 0.5712587237358093, 0.6544709801673889, 0.6839255094528198, 0.7329282760620117, 0.7520803213119507, 0.7514199018478394, 0.7600052952766418, 0.783119797706604, 0.7783648371696472, 0.785101056098938, 0.8157442808151245, 0.7971205711364746, 0.8047813773155212, 0.8075551390647888, 0.8162726163864136, 0.8227446675300598, 0.8343679904937744, 0.8206313848495483, 0.832650899887085, 0.8309338092803955, 0.8364813327789307, 0.8473120927810669, 0.8477083444595337, 0.8502179384231567, 0.8507462739944458, 0.848368763923645, 0.8642187118530273, 0.846387505531311, 0.8577466607093811, 0.8580108284950256, 0.8689737319946289, 0.8570862412452698], "val_loss": [1.2226767539978027, 1.8928932462419783, 0.8935253620147705, 0.7869975737162999, 0.634966390473502, 0.5751529250826154, 0.5482631240572248, 0.4875413179397583, 0.5162903411047799, 0.4673819031034197, 0.46116881711142405, 0.5488791465759277, 0.4218250683375767, 0.4097451227051871, 0.47749716894967215, 0.404873856476375, 0.4188563483101981, 0.4484611749649048, 0.37838304894311087, 0.4304508226258414, 0.41681448902402607, 0.3759835021836417, 0.3572364960397993, 0.3658807362828936, 0.35420650243759155, 0.3670786704335894, 0.39309447152273996, 0.3457550661904471, 0.3423314690589905, 0.34143902574266705, 0.3556099534034729, 0.364338287285396, 0.3481952037130083, 0.3492093171392168, 0.347827638898577], "val_accuracy": [0.4283333420753479, 0.1393333375453949, 0.6273333430290222, 0.6039999723434448, 0.7253333330154419, 0.7506666779518127, 0.7509999871253967, 0.7933333516120911, 0.7806666493415833, 0.8009999990463257, 0.7846666574478149, 0.7523333430290222, 0.8216666579246521, 0.8259999752044678, 0.7590000033378601, 0.824999988079071, 0.8173333406448364, 0.7776666879653931, 0.8356666564941406, 0.8019999861717224, 0.8146666884422302, 0.8389999866485596, 0.843666672706604, 0.8476666808128357, 0.8553333282470703, 0.8423333168029785, 0.8296666741371155, 0.8573333621025085, 0.8546666502952576, 0.8663333058357239, 0.8519999980926514, 0.8383333086967468, 0.8576666712760925, 0.859333336353302, 0.8526666760444641]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [2, 6, 9, 0, 0, 3, 4], [0, 0, 0, 1, 1, 0], [8, 95, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.8040000200271606, "mapping_values": [1, 7, 7, 5, 2, 3, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.0715177997606244, 1.9122242445108708, 1.753775647083026, 1.2521722420426156, 0.9310036367192922, 0.8765146796650749, 0.723450700793646, 0.6681557323922885, 0.659544816279786, 0.6265517989752425, 0.5808300529850818, 0.574968830107257, 0.5877132608732764, 0.5026884758870804, 0.5278124752660013, 0.5209211165233295, 0.4971515255723222, 0.4895876835539136, 0.4803901720890957, 0.4485268032372887, 0.4715845475516787, 0.44708851981613346, 0.44051220477328024, 0.4295859823310695, 0.4163624592555465, 0.40568816368968147, 0.4077264883058135, 0.3977269216606315, 0.3945616538285926, 0.37068619840747535, 0.40270613066004785, 0.38238870093394517, 0.37523761419588, 0.3562312975157805, 0.37719209268029813], "accuracy": [0.30101704597473145, 0.3891163766384125, 0.37868180871009827, 0.5712587237358093, 0.6544709801673889, 0.6839255094528198, 0.7329282760620117, 0.7520803213119507, 0.7514199018478394, 0.7600052952766418, 0.783119797706604, 0.7783648371696472, 0.785101056098938, 0.8157442808151245, 0.7971205711364746, 0.8047813773155212, 0.8075551390647888, 0.8162726163864136, 0.8227446675300598, 0.8343679904937744, 0.8206313848495483, 0.832650899887085, 0.8309338092803955, 0.8364813327789307, 0.8473120927810669, 0.8477083444595337, 0.8502179384231567, 0.8507462739944458, 0.848368763923645, 0.8642187118530273, 0.846387505531311, 0.8577466607093811, 0.8580108284950256, 0.8689737319946289, 0.8570862412452698], "val_loss": [1.2226767539978027, 1.8928932462419783, 0.8935253620147705, 0.7869975737162999, 0.634966390473502, 0.5751529250826154, 0.5482631240572248, 0.4875413179397583, 0.5162903411047799, 0.4673819031034197, 0.46116881711142405, 0.5488791465759277, 0.4218250683375767, 0.4097451227051871, 0.47749716894967215, 0.404873856476375, 0.4188563483101981, 0.4484611749649048, 0.37838304894311087, 0.4304508226258414, 0.41681448902402607, 0.3759835021836417, 0.3572364960397993, 0.3658807362828936, 0.35420650243759155, 0.3670786704335894, 0.39309447152273996, 0.3457550661904471, 0.3423314690589905, 0.34143902574266705, 0.3556099534034729, 0.364338287285396, 0.3481952037130083, 0.3492093171392168, 0.347827638898577], "val_accuracy": [0.4283333420753479, 0.1393333375453949, 0.6273333430290222, 0.6039999723434448, 0.7253333330154419, 0.7506666779518127, 0.7509999871253967, 0.7933333516120911, 0.7806666493415833, 0.8009999990463257, 0.7846666574478149, 0.7523333430290222, 0.8216666579246521, 0.8259999752044678, 0.7590000033378601, 0.824999988079071, 0.8173333406448364, 0.7776666879653931, 0.8356666564941406, 0.8019999861717224, 0.8146666884422302, 0.8389999866485596, 0.843666672706604, 0.8476666808128357, 0.8553333282470703, 0.8423333168029785, 0.8296666741371155, 0.8573333621025085, 0.8546666502952576, 0.8663333058357239, 0.8519999980926514, 0.8383333086967468, 0.8576666712760925, 0.859333336353302, 0.8526666760444641]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0], [2, 6, 9, 0, 0, 3, 4], [3, 0, 0, 1, 1, 0], [8, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [1, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [0, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.7917143106460571, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [2.010518900171294, 1.4135201967403386, 1.0826501157762132, 0.9058566060143062, 0.8239216137445676, 0.757892925702129, 0.738615717138077, 0.7377580647707269, 0.6946384894802208, 0.6733070064246017, 0.6458891631432371, 0.6524651192434712, 0.6159589996805217, 0.6164452894142417, 0.60703679766905, 0.5903114280948203, 0.5764942007876658, 0.5673465254347416, 0.5700136255106323, 0.5522816805020142, 0.554130740019907, 0.5326693350604937], "accuracy": [0.33403778076171875, 0.5038964748382568, 0.6013736724853516, 0.661471426486969, 0.6885483860969543, 0.7150970697402954, 0.7214370369911194, 0.7084929347038269, 0.7301545143127441, 0.7416457533836365, 0.7531369924545288, 0.7471932172775269, 0.7640998363494873, 0.7666094303131104, 0.7691190242767334, 0.776251494884491, 0.7751948237419128, 0.7895918488502502, 0.7878747582435608, 0.7866860628128052, 0.7918372750282288, 0.7989697456359863], "val_loss": [1.0701046330588204, 0.892228364944458, 0.731338654245649, 0.6726979698453631, 0.6433643613542829, 0.5529976231711251, 0.5560826063156128, 0.5385833127158028, 0.5111035449164254, 0.5053750617163522, 0.5065675803593227, 0.49862349033355713, 0.5429406336375645, 0.5281664133071899, 0.4650707926068987, 0.49160800661359516, 0.4453193630490984, 0.4741907630647932, 0.4637850267546518, 0.47403858389173237, 0.4861840009689331, 0.44007301330566406], "val_accuracy": [0.574999988079071, 0.6053333282470703, 0.6743333339691162, 0.6923333406448364, 0.6916666626930237, 0.7630000114440918, 0.737333357334137, 0.7726666927337646, 0.7749999761581421, 0.7593333125114441, 0.7833333611488342, 0.7770000100135803, 0.7369999885559082, 0.7419999837875366, 0.7960000038146973, 0.7710000276565552, 0.812333345413208, 0.793666660785675, 0.7900000214576721, 0.7716666460037231, 0.7760000228881836, 0.8069999814033508]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [9, 6, 1, 0, 0, 3, 4], [3, 0, 0, 1, 1, 0], [34, 57, 18], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [22, 47, 50, 41, 34]], "fitness": -0.7357142567634583, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.3006631690340114, 2.2910627622205064, 2.283049116863976, 2.276468447281023, 2.267384546244889, 2.257441956747194, 2.2489865626074526, 2.2404864982229102, 2.229176320640434, 2.2181136577262572, 2.207893148027218, 2.1930022786999137, 2.1785268716808357, 2.159216335310739, 2.145323964063407, 2.123102478016763, 2.1030945346465972, 2.0799469187621504, 2.051698427725588, 2.025588655641853, 1.9951482493375758, 1.9654086852637358, 1.9253641837277133, 1.8949260195689415, 1.8547230077347248, 1.81267346600185, 1.7781547859061144, 1.7338726414256107, 1.6950899319263921, 1.653414851560128, 1.6157438061917857, 1.5753385361395713, 1.5414996826417253, 1.5070949313411024, 1.479989331474929, 1.4455622307707243, 1.4157704890695435, 1.3816561265911929, 1.3640966623875883, 1.3380497894613357, 1.3188295226134266, 1.3005291907511147, 1.2821200030465025, 1.2465594421524524, 1.2460065780141334, 1.2273942204104942, 1.1988344506785351, 1.1819112670734937, 1.1811967647118167, 1.1668556801410888, 1.1510790804074567, 1.13104700267496, 1.1155842241121714, 1.1321403528043954, 1.106878136206045, 1.0991527757089152, 1.0762504770645234, 1.067973842710284, 1.0567271284313249, 1.0552210459824425, 1.0450002221603907, 1.0347261573061919, 1.0294587652618072, 1.018132056762923, 1.0245211296046273, 1.0030019738025133, 0.9975020411527545, 0.9945266544464604, 0.9900858436341236, 0.9913554308735982, 0.9806152837875733, 0.9824492211717231, 0.9651175494742604, 0.9613666225890474, 0.9390136170554171, 0.9494710362283483, 0.9363733666085801, 0.9435212922338734, 0.9358999623110454, 0.9309849759622604, 0.9214770924287654, 0.930435214823956, 0.9094561755287176, 0.9091400175896996, 0.9060015967414679, 0.9072645872087369, 0.901460223879088, 0.9010829758241019, 0.8989592948846058, 0.8999109584122224, 0.8904446365102375, 0.8880776050241632, 0.8789712558285813, 0.8776443643797311, 0.868306201171283, 0.8677678524841643, 0.8769974129830747, 0.8706427298800159, 0.8679799160638018, 0.8688507877037337], "accuracy": [0.09866596013307571, 0.11596883088350296, 0.13617752492427826, 0.1592920422554016, 0.17751948535442352, 0.20380398631095886, 0.2238806039094925, 0.2374851405620575, 0.2743362784385681, 0.2864879071712494, 0.2965262234210968, 0.3171311616897583, 0.32901862263679504, 0.3505481481552124, 0.3521331250667572, 0.3693039119243622, 0.37987056374549866, 0.381719708442688, 0.4003434181213379, 0.3991546630859375, 0.41487252712249756, 0.42187294363975525, 0.4353454113006592, 0.44128912687301636, 0.4441949427127838, 0.4601770043373108, 0.4559503495693207, 0.4682340621948242, 0.4757627844810486, 0.49332982301712036, 0.49425438046455383, 0.5044247508049011, 0.50785893201828, 0.5151234865188599, 0.5204068422317505, 0.5295205116271973, 0.5363888740539551, 0.5414080023765564, 0.5466912984848022, 0.5519746541976929, 0.5543521046638489, 0.5633337497711182, 0.5633337497711182, 0.5764099955558777, 0.5696737766265869, 0.5812970399856567, 0.588297426700592, 0.594241201877594, 0.5886936783790588, 0.5943732857704163, 0.6019020080566406, 0.607449471950531, 0.6132611036300659, 0.6038832664489746, 0.6111478209495544, 0.613789439201355, 0.6247523427009583, 0.6293752193450928, 0.6276581883430481, 0.6262052655220032, 0.6357152462005615, 0.6330735683441162, 0.6376964449882507, 0.6436402201652527, 0.6337339878082275, 0.6460176706314087, 0.646149754524231, 0.6479989290237427, 0.6551313996315002, 0.6590939164161682, 0.6516972780227661, 0.6527539491653442, 0.6585655808448792, 0.6590939164161682, 0.665830135345459, 0.6612072587013245, 0.6649055480957031, 0.6627922058105469, 0.6744155287742615, 0.6675472259521484, 0.672698438167572, 0.6699247360229492, 0.6811517477035522, 0.674679696559906, 0.6769251227378845, 0.6795667409896851, 0.6767930388450623, 0.6775855422019958, 0.6806234121322632, 0.6791704893112183, 0.6894729733467102, 0.6806234121322632, 0.6831330060958862, 0.6843217611312866, 0.6970016956329346, 0.6907938122749329, 0.687491774559021, 0.6870955228805542, 0.6893408894538879, 0.6905296444892883], "val_loss": [1.9630227770124162, 1.95552887235369, 1.9480658258710588, 1.9404094559805733, 1.9325201851981026, 1.9241487639290946, 1.9153364045279366, 1.9059614453996931, 1.8957042694091797, 1.8845092909676688, 1.872504438672747, 1.8591367857796806, 1.8444084439958846, 1.8278096743992396, 1.8097993986947196, 1.789801938193185, 1.767982346670968, 1.7440839494977678, 1.717592988695417, 1.6892875603267126, 1.6586341857910156, 1.6259254387446813, 1.5908331530434745, 1.5540095056806291, 1.5157395430973597, 1.475729295185634, 1.435640777860369, 1.3946476663861955, 1.3536718913487025, 1.3127302442278181, 1.272869007928031, 1.2342076301574707, 1.197251524244036, 1.1623493262699671, 1.1293295792170934, 1.0982071672167097, 1.0689304215567452, 1.041621378489903, 1.0162251676831926, 0.9925805159977504, 0.9706320422036308, 0.9506589003971645, 0.932189771107265, 0.9138777937207904, 0.897991452898298, 0.8823207446507045, 0.8673352173396519, 0.8533466713769096, 0.8405428954533168, 0.8286499125616891, 0.8174713339124408, 0.8068051849092756, 0.7966009037835258, 0.7873470272336688, 0.7785646745136806, 0.7700188841138568, 0.7618528604507446, 0.7535355942589896, 0.7464722394943237, 0.739598137991769, 0.7328341347830636, 0.7269562653132847, 0.720595291682652, 0.7151046480451312, 0.7098026275634766, 0.7047220468521118, 0.6995229721069336, 0.6947652101516724, 0.6900956119809832, 0.686165281704494, 0.6816985436848232, 0.6780400276184082, 0.6738751445497785, 0.6701808997562954, 0.6659295048032489, 0.6623066323144096, 0.6582678897040231, 0.6551244258880615, 0.6522429159709385, 0.6493282829012189, 0.6460834060396466, 0.6434016908918109, 0.6401475838252476, 0.6376159531729562, 0.6345506055014474, 0.6320297547749111, 0.6297316380909511, 0.6273350885936192, 0.6248798881258283, 0.6230538061686924, 0.6203854935509818, 0.6179900680269513, 0.6156759943280902, 0.6135684932981219, 0.6111229147229876, 0.6086456945964268, 0.6063620533261981, 0.6044743571962629, 0.6027156795774188, 0.600853511265346], "val_accuracy": [0.09300000220537186, 0.16866666078567505, 0.23600000143051147, 0.2980000078678131, 0.3463333249092102, 0.3700000047683716, 0.3853333294391632, 0.4036666750907898, 0.4166666567325592, 0.43566668033599854, 0.4476666748523712, 0.46166667342185974, 0.4729999899864197, 0.48500001430511475, 0.49000000953674316, 0.5063333511352539, 0.5193333625793457, 0.5296666622161865, 0.5400000214576721, 0.5443333387374878, 0.5479999780654907, 0.5540000200271606, 0.5580000281333923, 0.562666654586792, 0.5726666450500488, 0.5753333568572998, 0.5766666531562805, 0.5793333053588867, 0.5886666774749756, 0.5920000076293945, 0.6000000238418579, 0.6046666502952576, 0.6100000143051147, 0.621666669845581, 0.628000020980835, 0.640666663646698, 0.6489999890327454, 0.6583333611488342, 0.6606666445732117, 0.6653333306312561, 0.6696666479110718, 0.6753333210945129, 0.6796666383743286, 0.6836666464805603, 0.6863333582878113, 0.6896666884422302, 0.6913333535194397, 0.6919999718666077, 0.6943333148956299, 0.6940000057220459, 0.6970000267028809, 0.6970000267028809, 0.699999988079071, 0.7016666531562805, 0.7013333439826965, 0.703000009059906, 0.7023333311080933, 0.7066666483879089, 0.7046666741371155, 0.7066666483879089, 0.7083333134651184, 0.7096666693687439, 0.7123333215713501, 0.7166666388511658, 0.7203333377838135, 0.7196666598320007, 0.7210000157356262, 0.7173333168029785, 0.721666693687439, 0.7229999899864197, 0.7250000238418579, 0.7239999771118164, 0.7243333458900452, 0.7273333072662354, 0.7279999852180481, 0.7323333621025085, 0.7333333492279053, 0.734000027179718, 0.7356666922569275, 0.7319999933242798, 0.734666645526886, 0.7369999885559082, 0.7366666793823242, 0.7386666536331177, 0.7393333315849304, 0.7396666407585144, 0.7433333396911621, 0.7436666488647461, 0.7433333396911621, 0.7426666617393494, 0.746666669845581, 0.746666669845581, 0.7476666569709778, 0.7486666440963745, 0.750333309173584, 0.7506666779518127, 0.7516666650772095, 0.7526666522026062, 0.7540000081062317, 0.7536666393280029]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1], [2, 3, 3, 0, 9, 2, 4, 8, 3, 5, 7, 4, 2, 7, 3, 0, 5, 2, 4, 5, 3, 1, 4, 6, 1], [3, 0, 1, 1, 2, 0, 0, 2, 2, 2, 0, 0, 2, 1, 0, 2, 0, 3, 0], [23, 56, 25, 49], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [22, 47, 50, 41, 34]], "fitness": -0.328000009059906, "mapping_values": [1, 8, 8, 5, 3, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(alpha)))))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.54765434738132, 2.2814897476264813, 2.2846428987419665, 2.277734859256445, 2.303508193375428, 2.303037352770421, 2.2968712375463514, 2.2499152418959647, 2.306471648800091, 2.304081776453567, 2.302994804517106, 2.303066806266683], "accuracy": [0.21674811840057373, 0.15110288560390472, 0.13512085378170013, 0.1258750557899475, 0.09985470771789551, 0.09760929644107819, 0.1262712925672531, 0.20657773315906525, 0.09536388516426086, 0.10130762308835983, 0.09681680053472519, 0.09866596013307571], "val_loss": [1.977196489061628, 2.0143981661115373, 1.9136746270315987, 1.9736526353018624, 1.9734867640904017, 1.9734152385166712, 1.8120459829057967, 1.9779010500226701, 1.9744056974138533, 1.9739524296351842, 1.9736567224775041, 1.9735659190586634], "val_accuracy": [0.09833333641290665, 0.09700000286102295, 0.3136666715145111, 0.10400000214576721, 0.10400000214576721, 0.0976666659116745, 0.3149999976158142, 0.10266666859388351, 0.09733333438634872, 0.09733333438634872, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0], [2, 6, 9, 0, 0, 3, 4], [2, 2, 0, 1, 1, 0], [68, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [89, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [26, 47, 50, 41, 34]], "fitness": -0.328000009059906, "mapping_values": [1, 5, 5, 3, 2, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), grad), lambda shape,  alpha, beta, grad: tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.54765434738132, 2.2814897476264813, 2.2846428987419665, 2.277734859256445, 2.303508193375428, 2.303037352770421, 2.2968712375463514, 2.2499152418959647, 2.306471648800091, 2.304081776453567, 2.302994804517106, 2.303066806266683], "accuracy": [0.21674811840057373, 0.15110288560390472, 0.13512085378170013, 0.1258750557899475, 0.09985470771789551, 0.09760929644107819, 0.1262712925672531, 0.20657773315906525, 0.09536388516426086, 0.10130762308835983, 0.09681680053472519, 0.09866596013307571], "val_loss": [1.977196489061628, 2.0143981661115373, 1.9136746270315987, 1.9736526353018624, 1.9734867640904017, 1.9734152385166712, 1.8120459829057967, 1.9779010500226701, 1.9744056974138533, 1.9739524296351842, 1.9736567224775041, 1.9735659190586634], "val_accuracy": [0.09833333641290665, 0.09700000286102295, 0.3136666715145111, 0.10400000214576721, 0.10400000214576721, 0.0976666659116745, 0.3149999976158142, 0.10266666859388351, 0.09733333438634872, 0.09733333438634872, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [2, 6, 2, 2, 9, 3, 4, 8, 6], [3, 0, 0, 1, 1, 0], [8, 57, 18], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [0, 6, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [2, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 6, 5, 3, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), tf.math.multiply(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, alpha))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(grad, tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [5114409061.994211, 782096633841.3927, 13804500899913.307, 95966142563035.45, 424670290726020.94, 1393511725233259.2, 3725429011448024.5, 8989478278959704.0], "accuracy": [0.09509972482919693, 0.10051512718200684, 0.09787346422672272, 0.09879804402589798, 0.10091137140989304, 0.10038304328918457, 0.09813763201236725, 0.09681680053472519], "val_loss": [41833215707.42857, 2355846484553.143, 25727282521234.285, 141087964397568.0, 529143537223972.56, 1555035207275081.2, 3871732475325879.0, 8538244660592640.0], "val_accuracy": [0.0976666659116745, 0.0989999994635582, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1], [2, 6, 9, 0, 0, 9, 4, 2], [3, 0, 0, 1, 1, 0], [8, 57, 18, 88], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 8, 3, 4, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07607977837324142, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0], [2, 6, 9, 0, 0, 3, 4], [3, 0, 0, 1, 1, 0], [8, 57, 18], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [6, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 2, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), grad)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.multiply(sigma, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09549596905708313, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0], [2, 6, 2, 5, 9, 3, 4, 8, 6], [2, 0, 0, 1, 1, 0], [80, 57, 18], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [0, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [89, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 9, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 6, 4, 3, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 2, 2, 0, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), tf.math.multiply(tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.square(tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [133196709.12682208, 2533169630.592524, 11896477576.436401, 32772439324.43693, 70458556253.69647, 129105954626.9164], "accuracy": [0.09906221181154251, 0.10249637067317963, 0.1010434553027153, 0.09879804402589798, 0.09932637959718704, 0.10011887550354004], "val_loss": [506310692.5714286, 4047932562.285714, 13658874733.714285, 32373108150.857143, 63224643584.0, 109248359862.85715], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1], [7, 6, 9, 0, 1, 3, 4, 2, 1, 3, 3, 3, 1], [3, 2, 0, 1, 1, 0, 0, 2, 3, 1, 1], [8, 95, 18, 23], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [70, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 1, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 24, 24, 13, 11, 4, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(grad)))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha))), tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(alpha, tf.math.multiply(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), grad), tf.math.add(alpha, grad)))))), alpha)), tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.subtract(sigma, alpha), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 6, 9, 2, 1, 1, 4, 1, 7, 0], [3, 0, 2, 1, 1, 0, 0, 2], [8, 57, 18, 74], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [1, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 18, 10, 8, 4, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(grad, alpha)), alpha)), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [2, 6, 9, 0, 5, 3, 1], [2, 0, 0, 1, 1, 0], [8, 93, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [0, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 6, 3, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [7123405.818334108, 135227168.5832783, 634714764.9166557, 1748093162.122837, 3757759363.973055, 6885006503.375512], "accuracy": [0.09919429570436478, 0.10249637067317963, 0.1010434553027153, 0.09893012791872025, 0.09932637959718704, 0.10011887550354004], "val_loss": [27047552.57142857, 216012982.85714287, 728634752.0, 1726645211.4285715, 3371789970.285714, 5825829595.428572], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0], [1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [2, 6, 2, 2, 9, 3, 4, 8, 6], [2, 0, 0, 1, 1, 0], [19, 57, 25], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [0, 8, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [2, 3], [], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [22, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3025282657755803, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [2, 6, 5, 6, 3, 2, 2, 8, 3, 5, 7, 4, 6, 7, 2, 0, 3, 2, 1, 5, 3, 1, 4, 4, 1], [3, 2, 2, 0, 1, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 57, 18, 63, 35], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 31, 31, 17, 14, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.sqrt(grad), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)))))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(tf.math.add(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.negative(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))))))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07607977837324142, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0], [2, 6, 7, 0, 0, 3, 4, 9], [3, 0, 0, 1, 1, 0], [68, 57, 18], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [2, 1, 0, 1, 3, 2], [38, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 8, 5, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha)))))), tf.math.add(alpha, alpha))))), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1022322028875351, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [2, 0, 1, 0, 8, 3, 4, 8, 8], [3, 0, 0, 1, 1, 0], [8, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [89, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [1, 3], [], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [0, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.09371428936719894, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [2.678335586669281, 2.266852406431356, 1.9748850630699857, 1.7627397368943387, 1.9581813202432086, 1.9958661809620715, 2.3514586302740006, 2.474781937965108, 2.4070205277833545, 2.4376036457303116], "accuracy": [0.26760005950927734, 0.18874652683734894, 0.33126401901245117, 0.37339848279953003, 0.38621053099632263, 0.3354906737804413, 0.19482234120368958, 0.1372341811656952, 0.10342095047235489, 0.09998679161071777], "val_loss": [1.9943550654820033, 1.7135844911847795, 1.3668859686170305, 1.2595883437565394, 1.3103441170283727, 1.5182945387704032, 1.8514426776341029, 2.0369138036455428, 2.0172942025320872, 2.064366136278425], "val_accuracy": [0.09833333641290665, 0.3513333201408386, 0.3933333456516266, 0.4663333296775818, 0.4833333194255829, 0.3630000054836273, 0.1823333352804184, 0.0976666659116745, 0.09733333438634872, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0], [1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [2, 0, 5, 0, 8, 3, 4, 8, 8], [2, 2, 0, 1, 1, 0], [8, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [89, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [3, 3], [], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [38, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3039535623988012, 2.3023526758612927, 2.3021392033730264, 2.303487830299979, 2.3026724735570387, 2.3014605528390986], "accuracy": [0.09192973375320435, 0.08928807079792023, 0.09074098616838455, 0.08532558381557465, 0.0886276587843895, 0.09074098616838455], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1], [5, 6, 9, 0, 0, 9, 4], [0, 1, 2, 1, 1, 0], [53, 68, 18], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [0, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 5, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 4, 3, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.square(tf.math.multiply(sigma, alpha)), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3039535623988012, 2.3023526758612927, 2.3021392033730264, 2.303487830299979, 2.3026724735570387, 2.3014605528390986], "accuracy": [0.09192973375320435, 0.08928807079792023, 0.09074098616838455, 0.08532558381557465, 0.0886276587843895, 0.09074098616838455], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [2, 6, 9, 0, 0, 3, 4], [3, 0, 0, 2, 1, 0], [8, 96, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 11, 11, 7, 4, 3, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.3039535623988012, 2.3023526758612927, 2.3021392033730264, 2.303487830299979, 2.3026724735570387, 2.3014605528390986], "accuracy": [0.09192973375320435, 0.08928807079792023, 0.09074098616838455, 0.08532558381557465, 0.0886276587843895, 0.09074098616838455], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]