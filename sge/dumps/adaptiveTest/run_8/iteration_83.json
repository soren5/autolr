[{"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.7991428375244141, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 6, 6, 2, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(grad, tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta))), tf.math.add(beta, tf.math.pow(tf.math.negative(grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.2346554811462798, 1.849399745298997, 1.312514141140959, 1.118651346744028, 0.9639667009932569, 0.908365777580887, 0.8530987033345176, 0.8196932294144843, 0.8018240997064162, 0.781386306950004, 0.746359468954996, 0.7358054646080857, 0.7204215399908147, 0.7147867167945456, 0.6940804618208903, 0.6748466659074037, 0.6859702708037491, 0.6616933158108146, 0.6475717321583434, 0.6545518848559387, 0.6416223828015688, 0.6312805850193123, 0.6183812565586869, 0.6292828362001609, 0.624994522426831, 0.6091243023444727, 0.610098793679508, 0.6086254083422181, 0.5960853489996845, 0.5894137509605116, 0.5882405110354028, 0.5914383864500393, 0.5837218341826133, 0.5739390406988364, 0.5766844832429544, 0.5633821181019047, 0.5666322431796105, 0.5628851540745872, 0.5615618118851208, 0.5545377234158625], "accuracy": [0.2355038970708847, 0.44327038526535034, 0.5542200207710266, 0.6071853041648865, 0.6601505875587463, 0.6724342703819275, 0.689869225025177, 0.6983225345611572, 0.7083608508110046, 0.7148329019546509, 0.7246070504188538, 0.7301545143127441, 0.7384757399559021, 0.7316074371337891, 0.7437590956687927, 0.7454761862754822, 0.7454761862754822, 0.7565711140632629, 0.7573636174201965, 0.7589486241340637, 0.7617223858833313, 0.7646281719207764, 0.7683265209197998, 0.7617223858833313, 0.7663452625274658, 0.7718927264213562, 0.7733456492424011, 0.7651565074920654, 0.7774402499198914, 0.7794214487075806, 0.7796856164932251, 0.7784969210624695, 0.7832518815994263, 0.7865539789199829, 0.7887993454933167, 0.7880068421363831, 0.7832518815994263, 0.7905164361000061, 0.7878747582435608, 0.7921014428138733], "val_loss": [1.765627656664167, 1.1523093155452184, 0.8183654546737671, 0.713511449950082, 0.6391243423734393, 0.6617616925920758, 0.6007099151611328, 0.5748318604060582, 0.592834608895438, 0.5438008649008614, 0.5420123679297311, 0.5272330215999058, 0.5196812323161534, 0.5082990101405552, 0.5003441572189331, 0.5005929470062256, 0.4965088537761143, 0.49946813923971994, 0.4936505896704538, 0.48276599815913607, 0.4778731550489153, 0.4795845236097063, 0.47489423411233084, 0.47026751722608295, 0.4654372249330793, 0.4617525850023542, 0.47103663853236605, 0.4623790127890451, 0.4569127219063895, 0.44967364413397654, 0.4789220946175711, 0.4690042563847133, 0.43753195660454886, 0.43735947779246737, 0.431500324181148, 0.4507067714418684, 0.430982095854623, 0.4350830742291042, 0.43182376452854704, 0.4271025402205331], "val_accuracy": [0.48533332347869873, 0.5630000233650208, 0.6610000133514404, 0.706333339214325, 0.7310000061988831, 0.7016666531562805, 0.7260000109672546, 0.7553333044052124, 0.7436666488647461, 0.7666666507720947, 0.7583333253860474, 0.7763333320617676, 0.7826666831970215, 0.7739999890327454, 0.7910000085830688, 0.7806666493415833, 0.7946666479110718, 0.778333306312561, 0.7889999747276306, 0.79666668176651, 0.7870000004768372, 0.7906666398048401, 0.7903333306312561, 0.7990000247955322, 0.7929999828338623, 0.8053333163261414, 0.8103333115577698, 0.8036666512489319, 0.812666654586792, 0.8029999732971191, 0.7806666493415833, 0.7870000004768372, 0.8220000267028809, 0.8206666707992554, 0.8289999961853027, 0.8066666722297668, 0.8243333101272583, 0.8090000152587891, 0.8233333230018616, 0.8276666402816772]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [7, 4, 2, 4, 0, 2, 3, 1, 2, 1, 4, 9, 8, 1, 2, 9, 9, 0, 3, 1, 7, 0, 0, 7, 1], [3, 3, 2, 3, 0, 1, 2, 3, 3, 0, 4, 2, 0, 0, 0], [28, 16, 99, 84, 1, 78, 58], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.7991428375244141, "mapping_values": [1, 1, 1, 0, 1, 0, 27, 27, 17, 10, 5, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.multiply(grad, tf.math.add(beta, beta)), tf.math.add(beta, grad)))), tf.math.subtract(tf.math.add(tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.sqrt(alpha)))), tf.math.add(beta, beta)))), tf.math.subtract(tf.math.add(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), grad), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, grad)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.2346554811462798, 1.849399745298997, 1.312514141140959, 1.118651346744028, 0.9639667009932569, 0.908365777580887, 0.8530987033345176, 0.8196932294144843, 0.8018240997064162, 0.781386306950004, 0.746359468954996, 0.7358054646080857, 0.7204215399908147, 0.7147867167945456, 0.6940804618208903, 0.6748466659074037, 0.6859702708037491, 0.6616933158108146, 0.6475717321583434, 0.6545518848559387, 0.6416223828015688, 0.6312805850193123, 0.6183812565586869, 0.6292828362001609, 0.624994522426831, 0.6091243023444727, 0.610098793679508, 0.6086254083422181, 0.5960853489996845, 0.5894137509605116, 0.5882405110354028, 0.5914383864500393, 0.5837218341826133, 0.5739390406988364, 0.5766844832429544, 0.5633821181019047, 0.5666322431796105, 0.5628851540745872, 0.5615618118851208, 0.5545377234158625], "accuracy": [0.2355038970708847, 0.44327038526535034, 0.5542200207710266, 0.6071853041648865, 0.6601505875587463, 0.6724342703819275, 0.689869225025177, 0.6983225345611572, 0.7083608508110046, 0.7148329019546509, 0.7246070504188538, 0.7301545143127441, 0.7384757399559021, 0.7316074371337891, 0.7437590956687927, 0.7454761862754822, 0.7454761862754822, 0.7565711140632629, 0.7573636174201965, 0.7589486241340637, 0.7617223858833313, 0.7646281719207764, 0.7683265209197998, 0.7617223858833313, 0.7663452625274658, 0.7718927264213562, 0.7733456492424011, 0.7651565074920654, 0.7774402499198914, 0.7794214487075806, 0.7796856164932251, 0.7784969210624695, 0.7832518815994263, 0.7865539789199829, 0.7887993454933167, 0.7880068421363831, 0.7832518815994263, 0.7905164361000061, 0.7878747582435608, 0.7921014428138733], "val_loss": [1.765627656664167, 1.1523093155452184, 0.8183654546737671, 0.713511449950082, 0.6391243423734393, 0.6617616925920758, 0.6007099151611328, 0.5748318604060582, 0.592834608895438, 0.5438008649008614, 0.5420123679297311, 0.5272330215999058, 0.5196812323161534, 0.5082990101405552, 0.5003441572189331, 0.5005929470062256, 0.4965088537761143, 0.49946813923971994, 0.4936505896704538, 0.48276599815913607, 0.4778731550489153, 0.4795845236097063, 0.47489423411233084, 0.47026751722608295, 0.4654372249330793, 0.4617525850023542, 0.47103663853236605, 0.4623790127890451, 0.4569127219063895, 0.44967364413397654, 0.4789220946175711, 0.4690042563847133, 0.43753195660454886, 0.43735947779246737, 0.431500324181148, 0.4507067714418684, 0.430982095854623, 0.4350830742291042, 0.43182376452854704, 0.4271025402205331], "val_accuracy": [0.48533332347869873, 0.5630000233650208, 0.6610000133514404, 0.706333339214325, 0.7310000061988831, 0.7016666531562805, 0.7260000109672546, 0.7553333044052124, 0.7436666488647461, 0.7666666507720947, 0.7583333253860474, 0.7763333320617676, 0.7826666831970215, 0.7739999890327454, 0.7910000085830688, 0.7806666493415833, 0.7946666479110718, 0.778333306312561, 0.7889999747276306, 0.79666668176651, 0.7870000004768372, 0.7906666398048401, 0.7903333306312561, 0.7990000247955322, 0.7929999828338623, 0.8053333163261414, 0.8103333115577698, 0.8036666512489319, 0.812666654586792, 0.8029999732971191, 0.7806666493415833, 0.7870000004768372, 0.8220000267028809, 0.8206666707992554, 0.8289999961853027, 0.8066666722297668, 0.8243333101272583, 0.8090000152587891, 0.8233333230018616, 0.8276666402816772]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 9, 2, 2, 9, 2, 4, 9, 2, 1, 4, 4, 8, 1, 1, 8, 9, 0, 2, 7, 3, 9, 6, 4, 6], [2, 0, 2, 3, 0, 1, 2, 3, 3, 0], [85, 16, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.7991428375244141, "mapping_values": [1, 5, 5, 4, 1, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.2346554811462798, 1.849399745298997, 1.312514141140959, 1.118651346744028, 0.9639667009932569, 0.908365777580887, 0.8530987033345176, 0.8196932294144843, 0.8018240997064162, 0.781386306950004, 0.746359468954996, 0.7358054646080857, 0.7204215399908147, 0.7147867167945456, 0.6940804618208903, 0.6748466659074037, 0.6859702708037491, 0.6616933158108146, 0.6475717321583434, 0.6545518848559387, 0.6416223828015688, 0.6312805850193123, 0.6183812565586869, 0.6292828362001609, 0.624994522426831, 0.6091243023444727, 0.610098793679508, 0.6086254083422181, 0.5960853489996845, 0.5894137509605116, 0.5882405110354028, 0.5914383864500393, 0.5837218341826133, 0.5739390406988364, 0.5766844832429544, 0.5633821181019047, 0.5666322431796105, 0.5628851540745872, 0.5615618118851208, 0.5545377234158625], "accuracy": [0.2355038970708847, 0.44327038526535034, 0.5542200207710266, 0.6071853041648865, 0.6601505875587463, 0.6724342703819275, 0.689869225025177, 0.6983225345611572, 0.7083608508110046, 0.7148329019546509, 0.7246070504188538, 0.7301545143127441, 0.7384757399559021, 0.7316074371337891, 0.7437590956687927, 0.7454761862754822, 0.7454761862754822, 0.7565711140632629, 0.7573636174201965, 0.7589486241340637, 0.7617223858833313, 0.7646281719207764, 0.7683265209197998, 0.7617223858833313, 0.7663452625274658, 0.7718927264213562, 0.7733456492424011, 0.7651565074920654, 0.7774402499198914, 0.7794214487075806, 0.7796856164932251, 0.7784969210624695, 0.7832518815994263, 0.7865539789199829, 0.7887993454933167, 0.7880068421363831, 0.7832518815994263, 0.7905164361000061, 0.7878747582435608, 0.7921014428138733], "val_loss": [1.765627656664167, 1.1523093155452184, 0.8183654546737671, 0.713511449950082, 0.6391243423734393, 0.6617616925920758, 0.6007099151611328, 0.5748318604060582, 0.592834608895438, 0.5438008649008614, 0.5420123679297311, 0.5272330215999058, 0.5196812323161534, 0.5082990101405552, 0.5003441572189331, 0.5005929470062256, 0.4965088537761143, 0.49946813923971994, 0.4936505896704538, 0.48276599815913607, 0.4778731550489153, 0.4795845236097063, 0.47489423411233084, 0.47026751722608295, 0.4654372249330793, 0.4617525850023542, 0.47103663853236605, 0.4623790127890451, 0.4569127219063895, 0.44967364413397654, 0.4789220946175711, 0.4690042563847133, 0.43753195660454886, 0.43735947779246737, 0.431500324181148, 0.4507067714418684, 0.430982095854623, 0.4350830742291042, 0.43182376452854704, 0.4271025402205331], "val_accuracy": [0.48533332347869873, 0.5630000233650208, 0.6610000133514404, 0.706333339214325, 0.7310000061988831, 0.7016666531562805, 0.7260000109672546, 0.7553333044052124, 0.7436666488647461, 0.7666666507720947, 0.7583333253860474, 0.7763333320617676, 0.7826666831970215, 0.7739999890327454, 0.7910000085830688, 0.7806666493415833, 0.7946666479110718, 0.778333306312561, 0.7889999747276306, 0.79666668176651, 0.7870000004768372, 0.7906666398048401, 0.7903333306312561, 0.7990000247955322, 0.7929999828338623, 0.8053333163261414, 0.8103333115577698, 0.8036666512489319, 0.812666654586792, 0.8029999732971191, 0.7806666493415833, 0.7870000004768372, 0.8220000267028809, 0.8206666707992554, 0.8289999961853027, 0.8066666722297668, 0.8243333101272583, 0.8090000152587891, 0.8233333230018616, 0.8276666402816772]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 2, 5, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 5], [0, 3, 3, 1], [43, 38, 57]], "fitness": -0.6628571152687073, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 7, 5, 2, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.square(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), sigma)))", "other_info": {"loss": [2.300346232802089, 2.2984380759520224, 2.29384973480276, 2.290337037889004, 2.288232570657515, 2.283243563921224, 2.279641227353093, 2.276267243666089, 2.2738746595326007, 2.268427153840403, 2.26448858771515, 2.262754656336075, 2.259350750093935, 2.25478276033695, 2.2507142728078224, 2.2458176956106217, 2.241307298316144, 2.2385128516216226, 2.233027733800402, 2.2277322284392143, 2.2229957261877193, 2.216196317147459, 2.212640889962241, 2.208927309791788, 2.2033141128233695, 2.1948727867339093, 2.191367688133039, 2.183881155173257, 2.17659380413585, 2.170272606900182, 2.1640032646190286, 2.154685414588494, 2.144461789670921, 2.1398182870091196, 2.1318133042677756, 2.1216144376600328, 2.1107868479070033, 2.101845165710439, 2.092955869218189, 2.0822488765013674, 2.0660355237843167, 2.0575155047314784, 2.0502134891722132, 2.0355483995940724, 2.0205224386657847, 2.0078248466246826, 1.9946059309622206, 1.979823412644534, 1.9673666294933294, 1.9500714912075707, 1.9377403308875714, 1.9179678915545546, 1.9046423081881838, 1.8842612999998078, 1.877589641261677, 1.8561749014919302, 1.8343101592662863, 1.8224177005158408, 1.800283896593984, 1.7904426786862093, 1.7621632923523765, 1.752670447540762, 1.726947570001413, 1.7120244955232413, 1.7023325991936018, 1.6794101260577872, 1.6580851426324226, 1.6468381423519398, 1.6228585264796453, 1.6057563128173469, 1.6002655818619511, 1.5727739828358143, 1.5628542340017502, 1.542850232080241, 1.5324626655280078, 1.515033674718776, 1.4993182625579733, 1.4878050747044949, 1.46242072781898, 1.4669508551719905, 1.4494233022607186, 1.4353006530384331, 1.4153477080572772, 1.4099544003938467, 1.3991081191564139, 1.3762966925678095, 1.3797354973727654, 1.3624474739496184, 1.3530693715825735, 1.339175631672148, 1.3377222130563453, 1.3199463554613342, 1.3104133269632843, 1.2999623060352405, 1.2955083146213053, 1.2912843876574034, 1.2770459759488886, 1.2665049160287334, 1.2543702111378354, 1.2454974377837085], "accuracy": [0.10236428678035736, 0.09906221181154251, 0.11478008329868317, 0.11570466309785843, 0.12455421686172485, 0.13776251673698425, 0.1492537260055542, 0.16523577272891998, 0.16140536963939667, 0.1740853190422058, 0.187689870595932, 0.20063400268554688, 0.19838859140872955, 0.2211068570613861, 0.2156914472579956, 0.23497556149959564, 0.24924051761627197, 0.24263638257980347, 0.25703340768814087, 0.2666754722595215, 0.2724871337413788, 0.28160083293914795, 0.2863558232784271, 0.29045039415359497, 0.2949412167072296, 0.3090741038322449, 0.3125082552433014, 0.31964072585105896, 0.32901862263679504, 0.3291507065296173, 0.34143441915512085, 0.35186898708343506, 0.35464271903038025, 0.35662394762039185, 0.35279354453086853, 0.3691718280315399, 0.3693039119243622, 0.3809272348880768, 0.37405890226364136, 0.3879276216030121, 0.3999471664428711, 0.39585259556770325, 0.39202219247817993, 0.39889049530029297, 0.4076079726219177, 0.4119667112827301, 0.42108044028282166, 0.41791045665740967, 0.41223087906837463, 0.42649585008621216, 0.42306166887283325, 0.44010037183761597, 0.43283581733703613, 0.44630828499794006, 0.4348170757293701, 0.44987452030181885, 0.4515916109085083, 0.45727115869522095, 0.4574032425880432, 0.4558182656764984, 0.4703473746776581, 0.4679698944091797, 0.4752344489097595, 0.4768194556236267, 0.478140264749527, 0.4865935742855072, 0.4900277256965637, 0.4877823293209076, 0.499009370803833, 0.49848103523254395, 0.49266940355300903, 0.5036323070526123, 0.507330596446991, 0.509311854839325, 0.5119535326957703, 0.5153876543045044, 0.5172368288040161, 0.525029718875885, 0.5357284545898438, 0.5237088799476624, 0.5285959839820862, 0.5373134613037109, 0.5385021567344666, 0.5367851257324219, 0.5366530418395996, 0.5495971441268921, 0.5386342406272888, 0.5429930090904236, 0.5482763051986694, 0.5543521046638489, 0.5425967574119568, 0.5591071248054504, 0.5621450543403625, 0.5645225048065186, 0.5629374980926514, 0.5641262531280518, 0.5711266398429871, 0.568220853805542, 0.5774666666984558, 0.5741645693778992], "val_loss": [1.967257363455636, 1.9639216831752233, 1.9606178147452218, 1.9572903769356864, 1.9540341922215052, 1.9507239205496651, 1.9474028178623743, 1.9440832819257463, 1.94072539465768, 1.9372841290065221, 1.9337145941598075, 1.9301928111485072, 1.926572595323835, 1.9228442737034388, 1.9189887046813965, 1.9150140626089913, 1.9109226635524206, 1.9066970007760184, 1.9023049218314034, 1.897728783743722, 1.8929815973554338, 1.8880793707711356, 1.882979052407401, 1.877715996333531, 1.8722583225795202, 1.8664728573390417, 1.860546316419329, 1.8542724336896623, 1.847717217036656, 1.8408417701721191, 1.8336727278573173, 1.8262103625706263, 1.8183655057634627, 1.8102703775678362, 1.8018901688711983, 1.7931197711399622, 1.7839341163635254, 1.774299485342843, 1.7643671035766602, 1.7540620395115443, 1.7431255749293737, 1.731879711151123, 1.720357894897461, 1.7083491938454765, 1.695723397391183, 1.6827301979064941, 1.6693475587027413, 1.6555125713348389, 1.6413191727229528, 1.6265393325260706, 1.6115782942090715, 1.5960370472499303, 1.5801476410457067, 1.5637786047799247, 1.547487395150321, 1.530547789164952, 1.513406549181257, 1.496135677610125, 1.4786268302372523, 1.461113589150565, 1.443068027496338, 1.4250731468200684, 1.4070368153708321, 1.3890066146850586, 1.3711470195225306, 1.3531652859279089, 1.335078511919294, 1.3173481396266393, 1.2993975366864885, 1.2817954676491874, 1.2646588938576835, 1.2474122388022286, 1.2307327474866594, 1.2143693310873849, 1.1983553682054793, 1.1827569689069475, 1.1674462045942033, 1.1526915686471122, 1.137779610497611, 1.1237194197518485, 1.1101106575557165, 1.0968363285064697, 1.0836538587297713, 1.0709230559212821, 1.058837584086827, 1.046724728175572, 1.0354832921709334, 1.0245749269212996, 1.0136585916791643, 1.0031580924987793, 0.9931146417345319, 0.983182464327131, 0.9736010347093854, 0.9643449102129255, 0.9555870124271938, 0.9470290115901402, 0.9385740075792585, 0.930365800857544, 0.9224170276096889, 0.9145429815564837], "val_accuracy": [0.060333333909511566, 0.08299999684095383, 0.11666666716337204, 0.14866666495800018, 0.18700000643730164, 0.21899999678134918, 0.2409999966621399, 0.273333340883255, 0.30000001192092896, 0.3179999887943268, 0.3386666774749756, 0.35733333230018616, 0.367333322763443, 0.3776666522026062, 0.38499999046325684, 0.3903333246707916, 0.39933332800865173, 0.406333327293396, 0.4116666615009308, 0.4183333218097687, 0.4259999990463257, 0.4309999942779541, 0.43666666746139526, 0.4413333237171173, 0.4463333189487457, 0.45366665720939636, 0.4586666524410248, 0.46133333444595337, 0.46833333373069763, 0.4736666679382324, 0.47866666316986084, 0.48633334040641785, 0.4896666705608368, 0.492000013589859, 0.49799999594688416, 0.49799999594688416, 0.5043333172798157, 0.5083333253860474, 0.5166666507720947, 0.5210000276565552, 0.5266666412353516, 0.5316666960716248, 0.5356666445732117, 0.5389999747276306, 0.5429999828338623, 0.5453333258628845, 0.5486666560173035, 0.5503333210945129, 0.5529999732971191, 0.5543333292007446, 0.5573333501815796, 0.5583333373069763, 0.5603333115577698, 0.562333345413208, 0.5646666884422302, 0.5659999847412109, 0.5709999799728394, 0.5743333101272583, 0.5730000138282776, 0.5743333101272583, 0.5746666789054871, 0.5773333311080933, 0.5786666870117188, 0.5809999704360962, 0.5856666564941406, 0.5863333344459534, 0.5886666774749756, 0.5910000205039978, 0.5923333168029785, 0.5953333377838135, 0.5996666550636292, 0.6029999852180481, 0.6060000061988831, 0.609333336353302, 0.6129999756813049, 0.6146666407585144, 0.6193333268165588, 0.621999979019165, 0.624666690826416, 0.6299999952316284, 0.6356666684150696, 0.6393333077430725, 0.6420000195503235, 0.643666684627533, 0.6480000019073486, 0.6506666541099548, 0.6553333401679993, 0.6600000262260437, 0.6613333225250244, 0.6636666655540466, 0.6643333435058594, 0.6656666398048401, 0.6673333048820496, 0.6693333387374878, 0.6723333597183228, 0.6756666898727417, 0.6769999861717224, 0.6773333549499512, 0.6790000200271606, 0.6813333630561829]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1], [2, 9, 2, 2, 0, 2, 3, 5, 2, 1, 2, 9, 8, 1, 1, 8, 9, 0], [2, 3, 2, 3, 3, 3, 0, 2, 3, 0], [28, 16, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [0, 3], [34], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 0, 9, 3, 9], [0, 3, 3, 1], [72, 65]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 3, 3, 0, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3025596623313014, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 7, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 2, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [1, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 5, 9, 3, 9], [0, 3, 3, 1], [56, 64]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 6, 6, 2, 1, 1, 0, 1, 0, 3, 3, 0, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(tf.math.add(grad, tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), beta), tf.math.add(tf.math.negative(beta), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [293997360.5920496, 5680017932.510897, 26545523290.9576, 73802571633.1729, 158276599857.77307, 289838950419.74695], "accuracy": [0.10593052208423615, 0.09747721254825592, 0.10487385839223862, 0.10130762308835983, 0.09721305221319199, 0.09602430462837219], "val_loss": [1132711131.4285715, 9057408438.857143, 30563763346.285713, 72440950198.85715, 141479112118.85715, 244467321124.57144], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [4, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 3, 4, 5, 1, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 1], [7, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [4, 4, 9, 3, 9], [0, 3, 3, 1], [32, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 4, 5, 1, 6, 4, 3, 1, 0, 5, 3, 2, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, grad))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.negative(sigma)), tf.math.add(sigma, grad))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.pow(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.3025596623313014, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 8, 2, 2, 9, 2, 4, 9, 2, 1, 4, 4, 8, 1, 1, 8, 9, 0, 2, 7, 3, 9, 6, 4, 6], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78, 2, 15], [0, 0, 1, 1, 1], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 2, 8, 8, 5, 3, 2, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(grad, tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3025596623313014, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 8, 4, 2, 2, 3, 8, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 1, 1, 1], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(tf.math.sqrt(tf.math.add(beta, alpha)), tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3025596623313014, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [0, 0, 0, 3, 1, 0], [84, 57, 94], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [2, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0], [0, 9, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 12, 12, 6, 6, 2, 1, 1, 0, 1, 0, 2, 2, 0, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.pow(grad, tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [600578023.6241459, 11605158733.330868, 54239538478.83133, 150801893764.71695, 323410784833.2595, 592240038230.4604], "accuracy": [0.10593052208423615, 0.09760929644107819, 0.10487385839223862, 0.10130762308835983, 0.09721305221319199, 0.09602430462837219], "val_loss": [2314153472.0, 18506183241.142857, 62450293613.71429, 148022624256.0, 289093170907.4286, 499543591204.5714], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 1, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [2, 3], [], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0], [0, 3, 9, 1, 9], [3, 3, 3, 1], [85, 61]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 9, 8, 1, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.pow(grad, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.square(alpha))))))), tf.math.add(beta, alpha)), tf.math.add(tf.math.add(beta, beta), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [3, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 9, 7, 7, 1, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0], [0, 6, 9, 3, 9], [1, 3, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 2, 3, 3, 2, 1, 1, 5, 4, 2, 2, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [90, 57], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1], [7, 4, 2, 4, 2, 2, 6, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0, 8, 1, 8], [1, 0, 2, 3, 0, 1, 2, 3, 3, 0, 4, 0], [28, 4, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 2, 33, 33, 21, 12, 6, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), grad))))), tf.math.add(beta, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)))))), tf.math.subtract(tf.math.add(beta, alpha), beta))), tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, grad)))), tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.sqrt(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3025596623313014, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 1, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 0, 0, 3, 0, 1, 3, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [2, 3, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 9, 8, 3, 5, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.pow(tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, alpha))), tf.math.add(tf.math.add(beta, grad), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 0, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [5, 0, 2, 2, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [1, 0, 0, 1, 0], [0, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 1, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 6, 5, 2, 1, 0, 0, 0, 0, 4, 3, 1, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, grad), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), tf.math.negative(beta))), tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [431823.04385895905, 8284732.877823273, 38640520.30537578, 107333004.49821688, 230073118.4445912, 421178955.25135386], "accuracy": [0.10593052208423615, 0.09747721254825592, 0.10487385839223862, 0.10130762308835983, 0.09721305221319199, 0.09602430462837219], "val_loss": [1656600.0, 13193702.857142856, 44464147.428571425, 105320571.42857143, 205615593.14285713, 355202157.71428573], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1], [7, 8, 2, 2, 9, 2, 4, 9, 2, 1, 4, 4, 8, 1, 1, 8, 9, 0, 2, 7, 3, 2, 6, 4, 1, 4, 9], [3, 0, 3, 3, 5, 1, 2, 3, 3, 0, 2, 0, 3, 2, 3, 3], [28, 16, 4, 84, 1, 78, 2, 15], [0, 0, 0, 1, 1, 1], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 9, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 43, 43, 27, 16, 7, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 49, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.add(tf.math.add(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(alpha, beta))), tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, tf.math.subtract(grad, grad)), tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.add(beta, beta), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))))), grad)))), tf.math.add(beta, beta))), grad)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3025596623313014, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 6, 0, 8], [0, 0, 0, 3, 1, 0], [5, 57, 42, 86], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 4, 9, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 8, 9, 3, 9], [0, 3, 3, 1], [43, 38, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 6, 3, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [11724457.986267699, 226147644.1875578, 1056389047.5720513, 2936354142.846123, 6296553573.71021, 11529437107.311584], "accuracy": [0.10593052208423615, 0.09760929644107819, 0.10487385839223862, 0.10130762308835983, 0.09721305221319199, 0.09602430462837219], "val_loss": [45127242.28571428, 360503131.4285714, 1216122185.142857, 2881973248.0, 5628098706.285714, 9724430628.571428], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 4, 4, 9, 8, 1, 1, 8, 9, 0, 6, 2, 4, 8, 1, 7, 8], [2, 1, 3, 1, 3, 3, 2, 3, 1, 0, 2, 4, 0, 0, 2, 2], [28, 70, 99, 84, 1, 78, 2, 15], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0], [2, 3, 3, 3, 9], [0, 1, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 35, 35, 22, 13, 4, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.square(beta), tf.math.add(beta, alpha)), tf.math.add(beta, grad))))), tf.math.add(tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.subtract(tf.math.subtract(tf.math.add(beta, grad), tf.math.sqrt(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.negative(grad))))))), tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(tf.math.add(beta, grad), alpha)))), tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)), beta), tf.math.add(beta, tf.math.pow(tf.math.sqrt(grad), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [2.3025596623313014, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 3, 2, 2, 9, 2, 4, 9, 2, 1, 4, 4, 8, 1, 1, 8, 9, 0, 2, 7, 3, 9, 6, 4, 6], [3, 1, 3, 1, 3, 0, 2, 3, 3, 0, 2, 4, 0, 0], [28, 16, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [5, 3, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, grad)), tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.301789101608331, 2.303445562379802, 2.3023499054380334, 2.3023495485187127, 2.303543418106575, 2.3022393663530067], "accuracy": [0.09813763201236725, 0.08625016361474991, 0.09496764093637466, 0.0870426595211029, 0.08426892012357712, 0.08889182657003403], "val_loss": [1.9705860274178642, 1.9705819402422224, 1.970578874860491, 1.970574242728097, 1.9705699511936732, 1.9705660002572196], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.039000000804662704]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [4, 8, 2, 2, 9, 2, 4, 9, 2, 1, 4, 4, 8, 1, 1, 8, 9, 0, 2, 7, 3, 9, 6, 4, 6], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78, 2, 15], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [3, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [9, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 7, 5, 3, 1, 0, 0, 0, 0, 6, 4, 2, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.sqrt(tf.math.add(grad, tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.3017907389528824, 2.3034524357062227, 2.3023601082479477, 2.302365517430475, 2.303565298482774, 2.302265835098067], "accuracy": [0.09800554811954498, 0.08638224750757217, 0.09496764093637466, 0.08691058307886124, 0.08426892012357712, 0.08875974267721176], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]