[{"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [2, 6, 9, 0, 0, 3, 4], [3, 0, 0, 1, 1, 0], [8, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.819428563117981, "mapping_values": [1, 11, 11, 7, 4, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha))))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.395062574353342, 2.2995759524752386, 2.071600644091857, 1.717847648502703, 1.3192521144433376, 1.1447311038622026, 1.0581661406099963, 0.9184833396821053, 0.8631485431359004, 0.8305691045666761, 0.742017711945623, 0.7347736498856384, 0.697877152846899, 0.6925747534381935, 0.6507193048978762, 0.6337568224806905, 0.6108416607981078, 0.5971164315320938, 0.5858192461482632, 0.5718460588911191, 0.5647611520577258, 0.5491267016314717, 0.5408847937022123, 0.5264949893293254, 0.5034316389662415, 0.5253292613411467, 0.4856096058040798, 0.48753074509450994, 0.479819152018555, 0.46495558405124027], "accuracy": [0.23220182955265045, 0.12442214041948318, 0.28978997468948364, 0.421740859746933, 0.5374455451965332, 0.5925241112709045, 0.6112799048423767, 0.6514331102371216, 0.6822084188461304, 0.683000922203064, 0.7209087014198303, 0.7206445932388306, 0.737022876739502, 0.7427024245262146, 0.7557786107063293, 0.7629110813140869, 0.7631752490997314, 0.77677983045578, 0.7798177003860474, 0.7825914621353149, 0.7885351777076721, 0.7976489067077637, 0.7940827012062073, 0.7965922355651855, 0.8153480291366577, 0.8047813773155212, 0.8133667707443237, 0.8177255392074585, 0.81548011302948, 0.8252542614936829], "val_loss": [1.976945127759661, 1.9436467715672083, 1.6224111829485213, 1.0626004082815987, 0.8677083083561489, 0.7334095069340297, 0.6483414173126221, 0.8424363476889474, 0.6288571017129081, 0.6009023189544678, 0.5290144511631557, 0.53594628402165, 0.5420974493026733, 0.5048259326389858, 0.46221485308238436, 0.4868354456765311, 0.4671216436794826, 0.4411344017301287, 0.45285327093941824, 0.47608223983219694, 0.48358876364571707, 0.4222456898008074, 0.4333726337977818, 0.41026034525462557, 0.3832379068647112, 0.4007984399795532, 0.4200394834790911, 0.41916533027376446, 0.38209675891058786, 0.4038432836532593], "val_accuracy": [0.10233332961797714, 0.11299999803304672, 0.4596666693687439, 0.5926666855812073, 0.6520000100135803, 0.6930000185966492, 0.7206666469573975, 0.637333333492279, 0.6893333196640015, 0.7416666746139526, 0.7746666669845581, 0.762666642665863, 0.7286666631698608, 0.7863333225250244, 0.800000011920929, 0.7836666703224182, 0.7889999747276306, 0.8050000071525574, 0.8033333420753479, 0.7599999904632568, 0.7929999828338623, 0.8130000233650208, 0.8169999718666077, 0.8146666884422302, 0.8399999737739563, 0.8273333311080933, 0.8270000219345093, 0.809333324432373, 0.8320000171661377, 0.8213333487510681]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [2, 6, 1, 0, 0, 3, 4, 2, 0, 6, 6, 8], [3, 0, 1, 1, 2, 0, 0, 2, 2, 2, 0, 0, 2, 1, 0, 2, 0, 3, 0], [23, 56, 25, 49], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [22, 47, 50, 41, 34]], "fitness": -0.7348571419715881, "mapping_values": [1, 21, 21, 12, 9, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.pow(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)), tf.math.add(alpha, alpha)))))))), tf.math.add(alpha, grad))), tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(alpha, grad)))))), grad)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.2991967305468215, 2.291398087418264, 2.283695052974118, 2.276029055601318, 2.267204239163432, 2.257471632727574, 2.2504169308608626, 2.240273121813773, 2.2302554030034836, 2.2202654233178474, 2.207300733408325, 2.190360878562852, 2.1768129699187053, 2.1600002675654157, 2.1434260293587464, 2.122185865303214, 2.1020850694694415, 2.0761482886917886, 2.0502774522068665, 2.0243441624616856, 1.9949497565806202, 1.9595154699569428, 1.9277213106160433, 1.8899393003567289, 1.852734874756329, 1.813113417843975, 1.7694781459538282, 1.7361896938226478, 1.6907168667723615, 1.6540640938818936, 1.6097795458328708, 1.5684102855700512, 1.541701068196078, 1.497304475979798, 1.461864662318418, 1.4438535333734699, 1.4085586084083181, 1.3923121385759507, 1.355600029596201, 1.3436494209448013, 1.3116080403217723, 1.294691637034398, 1.2767679227609299, 1.254949225946078, 1.2463368282751432, 1.2122969644700436, 1.2072006700344688, 1.193129081783388, 1.1900201955129441, 1.1600082970692134, 1.1495559032110412, 1.1378714552865352, 1.1183203757950784, 1.112881059974743, 1.1063026018650335, 1.0856997424018475, 1.0791748498393372, 1.071664376533452, 1.0646440326545563, 1.0506937209058667, 1.0433027531413859, 1.02860794045654, 1.0347243267011963, 1.0246117350731103, 1.0097476531643326, 1.0027443458218033, 1.0095077631747829, 0.9917747122091057, 0.9934917420617279, 0.972808659714384, 0.9830312881062233, 0.9827376887656915, 0.966418899226702, 0.9570619384327018, 0.9546446116246788, 0.945565950231246, 0.9479419503072155, 0.9432123938193804, 0.9354234511479725, 0.9382778789231554, 0.9155931436327455, 0.9241329728100577, 0.92415713567177, 0.9061009564404128, 0.9166660465269576, 0.8946236579519898, 0.8979825693319313, 0.8918763337323001, 0.8778272256512982, 0.8887417372254616, 0.8853983527570747, 0.8824290078802037, 0.8816258995099358, 0.8776908014916851, 0.8782928702286789, 0.875245048172832, 0.874863419416574, 0.8539236366489009, 0.8665315409645727, 0.8561725371769784], "accuracy": [0.1006472036242485, 0.12349755316972733, 0.1336679458618164, 0.15295206010341644, 0.17593449354171753, 0.20353981852531433, 0.2277110069990158, 0.24382512271404266, 0.2572975754737854, 0.2743362784385681, 0.29824328422546387, 0.3179236650466919, 0.3337736129760742, 0.34301942586898804, 0.3475102484226227, 0.36560559272766113, 0.36943599581718445, 0.38885220885276794, 0.3971734344959259, 0.40509840846061707, 0.4111742079257965, 0.4231937527656555, 0.43072250485420227, 0.4447232782840729, 0.45344075560569763, 0.45449742674827576, 0.4674415588378906, 0.4644036591053009, 0.48051777482032776, 0.48368775844573975, 0.4904239773750305, 0.5000660419464111, 0.5097081065177917, 0.5278034806251526, 0.5281997323036194, 0.5321621894836426, 0.5357284545898438, 0.5406154990196228, 0.5480121374130249, 0.5464271306991577, 0.5600317120552063, 0.5605600476264954, 0.5676925182342529, 0.566239595413208, 0.5766741633415222, 0.585919976234436, 0.5840708017349243, 0.5892220139503479, 0.5890899300575256, 0.5972790718078613, 0.6038832664489746, 0.6058644652366638, 0.611411988735199, 0.6083740592002869, 0.6123365759849548, 0.625148594379425, 0.6243560910224915, 0.6170915365219116, 0.6268656849861145, 0.6339981555938721, 0.6320168972015381, 0.6392814517021179, 0.6308281421661377, 0.6395456194877625, 0.6433760523796082, 0.6468101739883423, 0.6424514651298523, 0.6495839357376099, 0.6522256135940552, 0.6598864197731018, 0.6510368585586548, 0.658961832523346, 0.6573768258094788, 0.6637167930603027, 0.6641130447387695, 0.6647734642028809, 0.6662263870239258, 0.6654338836669922, 0.665830135345459, 0.6750759482383728, 0.6769251227378845, 0.6700568199157715, 0.6720380187034607, 0.6802271604537964, 0.6740192770957947, 0.6865671873092651, 0.6837934255599976, 0.6787742972373962, 0.6845859289169312, 0.6847180128097534, 0.6787742972373962, 0.6889446377754211, 0.6828688383102417, 0.6901333928108215, 0.6866992712020874, 0.6893408894538879, 0.6892088055610657, 0.6913221478462219, 0.6922467350959778, 0.6922467350959778], "val_loss": [1.9630089487348283, 1.9555168151855469, 1.9479976381574358, 1.9404092516217912, 1.9324712072099959, 1.9241587775094169, 1.9154201235089983, 1.9059382166181291, 1.8956725937979562, 1.8845698492867606, 1.8722882952008928, 1.8585829053606306, 1.8435368537902832, 1.8270657403128487, 1.8089798518589564, 1.7889466966901506, 1.766941751752581, 1.7427260535103934, 1.7163712297167097, 1.6881160736083984, 1.6575471333095007, 1.6246899196079798, 1.5897383349282401, 1.5524983406066895, 1.5138804912567139, 1.4738856383732386, 1.4332842145647322, 1.3925905568259103, 1.3515172685895647, 1.3109868253980363, 1.270799194063459, 1.2319525650569372, 1.1952650547027588, 1.1595794813973563, 1.12636433328901, 1.0952439648764474, 1.0661792073931013, 1.0394714900425501, 1.0144640036991663, 0.9914491857801165, 0.9694746562412807, 0.9491209302629743, 0.9301868166242327, 0.912930999483381, 0.8965555940355573, 0.8806293691907611, 0.8662445715495518, 0.8530287572315761, 0.8406986168452671, 0.8286084447588239, 0.8170051234109061, 0.8063598190035138, 0.7960235391344342, 0.7865443570273263, 0.7777780635016305, 0.7687030519757952, 0.760582515171596, 0.7529843194144112, 0.7456840106419155, 0.7386547497340611, 0.7320856026240757, 0.7248665775571551, 0.7198109115873065, 0.714255724634443, 0.7085202251161847, 0.703015957559858, 0.6990716968263898, 0.6940799951553345, 0.6894448825291225, 0.6846975428717477, 0.6806780781064715, 0.6768062795911517, 0.6731813464845929, 0.6692359106881278, 0.6655516283852714, 0.6622973680496216, 0.6593336718423026, 0.655663115637643, 0.6517268930162702, 0.6491737195423671, 0.645280293055943, 0.6426372698375157, 0.6400781188692365, 0.6368322031838554, 0.6338297128677368, 0.6308290958404541, 0.6282973459788731, 0.6262258972440448, 0.6230946779251099, 0.6206826141902378, 0.6184476784297398, 0.6158588443483625, 0.6141500813620431, 0.6117462771279472, 0.610466548374721, 0.6084832293646676, 0.6063112361090524, 0.6039776120867048, 0.6022939171109881, 0.5999041966029576], "val_accuracy": [0.09233333170413971, 0.16899999976158142, 0.23800000548362732, 0.3009999990463257, 0.3453333377838135, 0.3696666657924652, 0.3853333294391632, 0.4023333191871643, 0.41733333468437195, 0.4346666634082794, 0.4466666579246521, 0.4593333303928375, 0.47333332896232605, 0.4806666672229767, 0.4886666536331177, 0.4970000088214874, 0.503333330154419, 0.5196666717529297, 0.5289999842643738, 0.5393333435058594, 0.5446666479110718, 0.5529999732971191, 0.5569999814033508, 0.5596666932106018, 0.5713333487510681, 0.5753333568572998, 0.5763333439826965, 0.57833331823349, 0.5860000252723694, 0.5910000205039978, 0.5956666469573975, 0.6033333539962769, 0.6110000014305115, 0.6196666955947876, 0.6293333172798157, 0.6396666765213013, 0.6463333368301392, 0.6576666831970215, 0.6610000133514404, 0.6660000085830688, 0.67166668176651, 0.6763333082199097, 0.6793333292007446, 0.6816666722297668, 0.6850000023841858, 0.6896666884422302, 0.6923333406448364, 0.6930000185966492, 0.6949999928474426, 0.6953333616256714, 0.6973333358764648, 0.7013333439826965, 0.703000009059906, 0.7023333311080933, 0.7023333311080933, 0.7070000171661377, 0.7059999704360962, 0.7083333134651184, 0.7070000171661377, 0.7070000171661377, 0.7089999914169312, 0.7133333086967468, 0.715666651725769, 0.7133333086967468, 0.7160000205039978, 0.7203333377838135, 0.7203333377838135, 0.722000002861023, 0.7226666808128357, 0.7253333330154419, 0.7253333330154419, 0.7276666760444641, 0.7269999980926514, 0.7296666502952576, 0.7289999723434448, 0.731333315372467, 0.7323333621025085, 0.7333333492279053, 0.7329999804496765, 0.7336666584014893, 0.7353333234786987, 0.734666645526886, 0.7390000224113464, 0.737666666507721, 0.7396666407585144, 0.7406666874885559, 0.7433333396911621, 0.7400000095367432, 0.7419999837875366, 0.7416666746139526, 0.7443333268165588, 0.7490000128746033, 0.7480000257492065, 0.749666690826416, 0.7536666393280029, 0.7543333172798157, 0.7536666393280029, 0.7546666860580444, 0.7553333044052124, 0.7570000290870667]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1], [2, 6, 9, 4, 0, 3, 4], [3, 0, 0, 1, 1, 0], [8, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.49314284324645996, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.1664104554253547, 2.157457605817173, 2.1834094463290947, 2.1523322061761148, 2.2899593981643473, 2.30448880707032, 2.3051863157864116, 2.3044323016151447], "accuracy": [0.24157971143722534, 0.25122177600860596, 0.2755250334739685, 0.25359925627708435, 0.1282525360584259, 0.09919429570436478, 0.09496764093637466, 0.0956280529499054], "val_loss": [2.00683525630406, 1.9532622609819685, 1.5417932782854353, 1.7952933311462402, 1.974167823791504, 1.9738310405186243, 1.9739097186497279, 1.9733680316380091], "val_accuracy": [0.22566667199134827, 0.14300000667572021, 0.48533332347869873, 0.36500000953674316, 0.10400000214576721, 0.09966666996479034, 0.09833333641290665, 0.09866666793823242]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0], [2, 1, 7, 0, 5, 2, 1], [2, 2, 0, 1, 1, 0], [68, 57, 18], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [26, 47, 50, 41, 34]], "fitness": -0.49314284324645996, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.1664104554253547, 2.157457605817173, 2.1834094463290947, 2.1523322061761148, 2.2899593981643473, 2.30448880707032, 2.3051863157864116, 2.3044323016151447], "accuracy": [0.24157971143722534, 0.25122177600860596, 0.2755250334739685, 0.25359925627708435, 0.1282525360584259, 0.09919429570436478, 0.09496764093637466, 0.0956280529499054], "val_loss": [2.00683525630406, 1.9532622609819685, 1.5417932782854353, 1.7952933311462402, 1.974167823791504, 1.9738310405186243, 1.9739097186497279, 1.9733680316380091], "val_accuracy": [0.22566667199134827, 0.14300000667572021, 0.48533332347869873, 0.36500000953674316, 0.10400000214576721, 0.09966666996479034, 0.09833333641290665, 0.09866666793823242]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1], [1, 8, 5, 0, 0, 3, 4], [2, 2, 0, 1, 1, 0], [23, 56, 25, 49], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [22, 47, 50, 41, 34]], "fitness": -0.49314284324645996, "mapping_values": [1, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.1664104554253547, 2.157457605817173, 2.1834094463290947, 2.1523322061761148, 2.2899593981643473, 2.30448880707032, 2.3051863157864116, 2.3044323016151447], "accuracy": [0.24157971143722534, 0.25122177600860596, 0.2755250334739685, 0.25359925627708435, 0.1282525360584259, 0.09919429570436478, 0.09496764093637466, 0.0956280529499054], "val_loss": [2.00683525630406, 1.9532622609819685, 1.5417932782854353, 1.7952933311462402, 1.974167823791504, 1.9738310405186243, 1.9739097186497279, 1.9733680316380091], "val_accuracy": [0.22566667199134827, 0.14300000667572021, 0.48533332347869873, 0.36500000953674316, 0.10400000214576721, 0.09966666996479034, 0.09833333641290665, 0.09866666793823242]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0], [6, 1, 8, 2, 9, 3, 4, 9], [3, 0, 0, 1, 1, 0], [8, 0, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [38, 47, 50, 41, 34]], "fitness": -0.49314284324645996, "mapping_values": [1, 10, 10, 6, 4, 3, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))))))), lambda shape,  alpha, beta, grad: tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.1664104554253547, 2.157457605817173, 2.1834094463290947, 2.1523322061761148, 2.2899593981643473, 2.30448880707032, 2.3051863157864116, 2.3044323016151447], "accuracy": [0.24157971143722534, 0.25122177600860596, 0.2755250334739685, 0.25359925627708435, 0.1282525360584259, 0.09919429570436478, 0.09496764093637466, 0.0956280529499054], "val_loss": [2.00683525630406, 1.9532622609819685, 1.5417932782854353, 1.7952933311462402, 1.974167823791504, 1.9738310405186243, 1.9739097186497279, 1.9733680316380091], "val_accuracy": [0.22566667199134827, 0.14300000667572021, 0.48533332347869873, 0.36500000953674316, 0.10400000214576721, 0.09966666996479034, 0.09833333641290665, 0.09866666793823242]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [8, 6, 9, 0, 2, 3, 4], [2, 3, 2, 0, 1, 0, 2, 2, 0, 0, 0, 3, 2, 2], [34, 57, 18], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 6, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07607977837324142, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [3, 6, 9, 0, 0, 3, 4, 3, 4], [3, 1, 0, 1, 1, 0], [8, 57, 18], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [2, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 9, 6, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), alpha)), tf.math.pow(alpha, tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07370228320360184, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0], [2, 6, 9, 0, 4, 3, 4, 0, 9], [3, 0, 0, 1, 1, 0], [8, 57, 18, 16], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [0, 1, 0, 1, 3, 2], [26, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 9, 4, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha))))))), tf.math.negative(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3022157173146662, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0], [2, 6, 9, 0, 0, 3, 4], [3, 0, 0, 1, 1, 0], [68, 57, 18], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [7, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 1, 9, 3, 6], [3, 2, 0, 1, 3, 2], [26, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 2, 1, 1, 0, 1, 0, 6, 4, 3, 1, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [927.005971790415, 15904.048068906022, 72198.09066359299, 200629.17394498744, 431543.1968448686, 776191.4281551314], "accuracy": [0.09496764093637466, 0.09457138925790787, 0.09932637959718704, 0.09998679161071777, 0.10447761416435242, 0.09853387624025345], "val_loss": [3288.9812360491073, 25010.19308035714, 83203.66071428571, 195893.82589285713, 381106.8125, 656869.0892857143], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0], [8, 1, 7, 0, 5, 3, 1], [3, 0, 0, 1, 1, 0], [80, 95, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [59, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [0, 1, 0, 1, 3, 2], [26, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 2, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 2, 1, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.negative(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [927.005971790415, 15904.048068906022, 72198.09066359299, 200629.17394498744, 431543.1968448686, 776191.4281551314], "accuracy": [0.09496764093637466, 0.09457138925790787, 0.09932637959718704, 0.09998679161071777, 0.10447761416435242, 0.09853387624025345], "val_loss": [3288.9812360491073, 25010.19308035714, 83203.66071428571, 195893.82589285713, 381106.8125, 656869.0892857143], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [2, 2, 1, 0, 0, 3, 4], [3, 0, 0, 1, 1, 0], [32, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 8, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 6, 5, 2, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 3, 3, 0, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, alpha))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [405749176.97210455, 7747119902.262845, 36006062596.93673, 101012765157.55804, 218402235312.60654, 394055679891.79767], "accuracy": [0.09602430462837219, 0.0944393053650856, 0.09919429570436478, 0.09998679161071777, 0.10460969805717468, 0.09853387624025345], "val_loss": [1547120164.5714285, 12371604626.285715, 41747830491.42857, 98950351140.57143, 193255449746.2857, 333935139693.7143], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0], [5, 6, 9, 8, 0, 5, 4, 6, 1, 1, 2, 9, 1, 3, 4, 0, 0], [0, 2, 0, 1, 1, 0], [68, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [65, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [0, 1, 0, 1, 3, 2], [33, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 2, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [52133.983047982154, 979027.917250033, 4529299.220116233, 12681261.94980848, 27387792.05494651, 49380591.008321226], "accuracy": [0.09576013684272766, 0.0944393053650856, 0.09906221181154251, 0.09985470771789551, 0.10460969805717468, 0.09853387624025345], "val_loss": [196731.05357142858, 1558804.3214285714, 5244872.285714285, 12413604.57142857, 24223694.85714286, 41833782.85714286], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [2, 6, 9, 8, 2, 5, 4, 6, 1, 1, 2, 9, 1, 3, 4, 0, 0], [3, 0, 0, 1, 1, 0, 2, 1, 3], [8, 57, 84], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [0, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 4, 3, 1, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [7102957.95507413, 135324396.96314886, 628534175.7168142, 1762802266.0108309, 3810788223.9830933, 6874965557.4925375], "accuracy": [0.09589222073554993, 0.0944393053650856, 0.09906221181154251, 0.09985470771789551, 0.10460969805717468, 0.09853387624025345], "val_loss": [27047552.57142857, 216012982.85714287, 728634752.0, 1726645211.4285715, 3371789970.285714, 5825829595.428572], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1], [2, 6, 9, 0, 0, 3, 4], [3, 0, 0, 0, 1, 0], [8, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [0, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 4, 2, 2, 0, 4, 3, 1, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [7102957.95507413, 135324396.96314886, 628534175.7168142, 1762802266.0108309, 3810788223.9830933, 6874965557.4925375], "accuracy": [0.09589222073554993, 0.0944393053650856, 0.09906221181154251, 0.09985470771789551, 0.10460969805717468, 0.09853387624025345], "val_loss": [27047552.57142857, 216012982.85714287, 728634752.0, 1726645211.4285715, 3371789970.285714, 5825829595.428572], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0], [3, 8, 5, 0, 0, 3, 4], [3, 0, 1, 1, 2, 0, 0, 2, 2, 2, 0, 0, 2, 1, 0, 2, 0, 3, 0], [68, 57, 18], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [3, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [22, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 11, 11, 7, 4, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.square(grad))), tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), tf.math.add(alpha, alpha))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.3024936468058637, 2.3027389592120455, 2.3029897930662724, 2.3031578874543923, 2.302725604496549, 2.301438484618913], "accuracy": [0.09021265059709549, 0.09694888442754745, 0.08387266844511032, 0.0886276587843895, 0.08651433140039444, 0.09219389408826828], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1], [2, 6, 9, 0, 0, 3, 4], [3, 0, 1, 1, 2, 0, 0, 2, 2, 2, 0, 0, 2, 1, 0, 2, 0, 3, 0], [23, 56, 25, 49], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [22, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.multiply(sigma, alpha)))", "other_info": {"loss": [2.3025058999651726, 2.3027777892880987, 2.303056414699542, 2.3032506941300435, 2.302844929767559, 2.3015824352131387], "accuracy": [0.09021265059709549, 0.09694888442754745, 0.08387266844511032, 0.08849557489156723, 0.08638224750757217, 0.09192973375320435], "val_loss": [1.9706138202122279, 1.9706390244620187, 1.9706640243530273, 1.9706882749285017, 1.970712525503976, 1.9707367760794503], "val_accuracy": [0.03933333232998848, 0.039000000804662704, 0.038333334028720856, 0.038333334028720856, 0.03799999877810478, 0.03799999877810478]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0], [2, 6, 9, 0, 0, 3, 4], [3, 0, 0, 1, 1, 0], [8, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 5, 4, 2, 2, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.3024936468058637, 2.3027389592120455, 2.3029897930662724, 2.3031578874543923, 2.302725604496549, 2.301438484618913], "accuracy": [0.09021265059709549, 0.09694888442754745, 0.08387266844511032, 0.0886276587843895, 0.08651433140039444, 0.09219389408826828], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [2, 6, 8, 0, 0, 3, 4, 4], [3, 0, 0, 1, 1, 0], [8, 94, 18], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [65, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [3, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 1, 9, 3, 6], [3, 1, 0, 1, 3, 2], [59, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 12, 12, 7, 5, 2, 1, 1, 0, 1, 0, 6, 4, 3, 1, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.sqrt(grad), tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))))))))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, sigma), sigma)), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3024936468058637, 2.3027389592120455, 2.3029897930662724, 2.3031578874543923, 2.302725604496549, 2.301438484618913], "accuracy": [0.09021265059709549, 0.09694888442754745, 0.08387266844511032, 0.0886276587843895, 0.08651433140039444, 0.09219389408826828], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [9, 6, 2, 0, 0, 3, 4], [3, 0, 0, 1, 1, 0], [8, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.03342857211828232, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, alpha))", "other_info": {"loss": [2.3030612197896634, 2.307137406623406, 2.3154279782299385, 2.328613997293013, 2.348441021931469, 2.379121108345462], "accuracy": [0.08902391046285629, 0.08611807972192764, 0.05996565893292427, 0.047549862414598465, 0.033284902572631836, 0.02285034954547882], "val_loss": [1.9726364953177316, 1.9784329959324427, 1.9884399005344935, 2.0037880625043596, 2.027315480368478, 2.065103190285819], "val_accuracy": [0.030666666105389595, 0.015666667371988297, 0.008999999612569809, 0.0063333334401249886, 0.0063333334401249886, 0.005333333276212215]}}]