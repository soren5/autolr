[{"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 8, 2, 4, 5, 3, 2, 1, 2, 1, 5, 2, 9, 3, 2, 6, 9, 5, 0, 2, 8, 2, 0, 9, 2], [0, 0, 2, 2, 2, 2, 1, 2, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 10, 35, 27, 57, 79, 53, 52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.8134285807609558, "mapping_values": [1, 24, 24, 14, 10, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(tf.math.subtract(tf.math.add(alpha, grad), grad), grad))))), tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), alpha)))), tf.math.multiply(tf.math.add(alpha, grad), grad)))))), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.974936725472604, 1.463770595256285, 1.0677368977932393, 0.8397389092560001, 0.7886946300678659, 0.7337003931660993, 0.6710842690920046, 0.6623067027935814, 0.6183508692117116, 0.5950136776959907, 0.5938066339070818, 0.6016298671991219, 0.5334973722290858, 0.5611922988770676, 0.522188714502069, 0.4828473909057725, 0.5089621399104273, 0.47769888999707444, 0.47976984565662056, 0.4812267725501692, 0.458321360997898, 0.4454442762175981, 0.4349023825291551, 0.41334467770054734, 0.4468842236995067, 0.4307369783790341, 0.4264683855672664, 0.4156683686465761, 0.40846172762411526, 0.3952786183950845, 0.3658342584406679, 0.4021399093302501, 0.38182464350625556, 0.348084755242855, 0.35569592603382544, 0.34537043963614206, 0.36178642821160795, 0.3600383480746811, 0.34401781228964495], "accuracy": [0.32439571619033813, 0.5192180871963501, 0.5976753234863281, 0.6903975605964661, 0.7022850513458252, 0.7195879220962524, 0.7400607466697693, 0.7420420050621033, 0.7629110813140869, 0.7779685854911804, 0.7738739848136902, 0.7717606425285339, 0.8026680946350098, 0.7841764688491821, 0.8031964302062988, 0.8201030492782593, 0.8108572363853455, 0.822348415851593, 0.819970965385437, 0.8208954930305481, 0.8302733898162842, 0.835160493850708, 0.8372738361358643, 0.8454629778862, 0.8322546482086182, 0.8422929644584656, 0.837537944316864, 0.8424250483512878, 0.8473120927810669, 0.8524633646011353, 0.86553955078125, 0.8533879518508911, 0.8581429123878479, 0.8720116019248962, 0.8676528930664062, 0.8716153502464294, 0.8631620407104492, 0.8672566413879395, 0.8732003569602966], "val_loss": [0.9360242571149554, 0.9879289013998849, 0.7043968779700143, 0.628603424344744, 0.6547128132411412, 0.5889607327325004, 0.5572444881711688, 0.4938246863228934, 0.5114386251994542, 0.4551956483295986, 0.5003451960427421, 0.4803358316421509, 0.47133149419512066, 0.4238255534853254, 0.43151819705963135, 0.46819392272404264, 0.4085076025554112, 0.40352167401994976, 0.4234833632196699, 0.38571871178490774, 0.4141025117465428, 0.3748748983655657, 0.38956864391054424, 0.36913606098720003, 0.39485148021153044, 0.3560051662581308, 0.36161788020815167, 0.38451020206723896, 0.35118006808417185, 0.3523496219090053, 0.41196663890566143, 0.3513175759996687, 0.3447393349238804, 0.33983085836683, 0.3482406905719212, 0.3974050113133022, 0.3352233512060983, 0.3370652369090489, 0.34366884401866366], "val_accuracy": [0.6023333072662354, 0.6016666889190674, 0.6986666917800903, 0.7089999914169312, 0.6919999718666077, 0.7113333344459534, 0.7490000128746033, 0.7823333144187927, 0.7689999938011169, 0.8036666512489319, 0.7636666893959045, 0.7803333401679993, 0.7733333110809326, 0.8253333568572998, 0.8050000071525574, 0.7666666507720947, 0.8206666707992554, 0.82833331823349, 0.8080000281333923, 0.8416666388511658, 0.8116666674613953, 0.8420000076293945, 0.8336666822433472, 0.8396666646003723, 0.8299999833106995, 0.8523333072662354, 0.8433333039283752, 0.8386666774749756, 0.8476666808128357, 0.8583333492279053, 0.8159999847412109, 0.8556666374206543, 0.859000027179718, 0.8633333444595337, 0.8543333411216736, 0.8243333101272583, 0.8619999885559082, 0.8536666631698608, 0.8586666584014893]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 8, 1, 4, 5, 3, 2, 6, 0, 1, 4, 2, 9, 3, 2, 6, 9, 5, 0, 2, 8, 2, 0, 9, 2], [2, 0, 2, 2, 2, 1, 2, 2, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [63, 9, 35, 27, 57, 79, 53, 52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 8, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.8134285807609558, "mapping_values": [1, 22, 22, 13, 9, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(grad, tf.math.pow(tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.negative(tf.math.subtract(tf.math.add(alpha, grad), grad)))))), tf.math.pow(tf.math.add(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), alpha), grad))), grad)))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.974936725472604, 1.463770595256285, 1.0677368977932393, 0.8397389092560001, 0.7886946300678659, 0.7337003931660993, 0.6710842690920046, 0.6623067027935814, 0.6183508692117116, 0.5950136776959907, 0.5938066339070818, 0.6016298671991219, 0.5334973722290858, 0.5611922988770676, 0.522188714502069, 0.4828473909057725, 0.5089621399104273, 0.47769888999707444, 0.47976984565662056, 0.4812267725501692, 0.458321360997898, 0.4454442762175981, 0.4349023825291551, 0.41334467770054734, 0.4468842236995067, 0.4307369783790341, 0.4264683855672664, 0.4156683686465761, 0.40846172762411526, 0.3952786183950845, 0.3658342584406679, 0.4021399093302501, 0.38182464350625556, 0.348084755242855, 0.35569592603382544, 0.34537043963614206, 0.36178642821160795, 0.3600383480746811, 0.34401781228964495], "accuracy": [0.32439571619033813, 0.5192180871963501, 0.5976753234863281, 0.6903975605964661, 0.7022850513458252, 0.7195879220962524, 0.7400607466697693, 0.7420420050621033, 0.7629110813140869, 0.7779685854911804, 0.7738739848136902, 0.7717606425285339, 0.8026680946350098, 0.7841764688491821, 0.8031964302062988, 0.8201030492782593, 0.8108572363853455, 0.822348415851593, 0.819970965385437, 0.8208954930305481, 0.8302733898162842, 0.835160493850708, 0.8372738361358643, 0.8454629778862, 0.8322546482086182, 0.8422929644584656, 0.837537944316864, 0.8424250483512878, 0.8473120927810669, 0.8524633646011353, 0.86553955078125, 0.8533879518508911, 0.8581429123878479, 0.8720116019248962, 0.8676528930664062, 0.8716153502464294, 0.8631620407104492, 0.8672566413879395, 0.8732003569602966], "val_loss": [0.9360242571149554, 0.9879289013998849, 0.7043968779700143, 0.628603424344744, 0.6547128132411412, 0.5889607327325004, 0.5572444881711688, 0.4938246863228934, 0.5114386251994542, 0.4551956483295986, 0.5003451960427421, 0.4803358316421509, 0.47133149419512066, 0.4238255534853254, 0.43151819705963135, 0.46819392272404264, 0.4085076025554112, 0.40352167401994976, 0.4234833632196699, 0.38571871178490774, 0.4141025117465428, 0.3748748983655657, 0.38956864391054424, 0.36913606098720003, 0.39485148021153044, 0.3560051662581308, 0.36161788020815167, 0.38451020206723896, 0.35118006808417185, 0.3523496219090053, 0.41196663890566143, 0.3513175759996687, 0.3447393349238804, 0.33983085836683, 0.3482406905719212, 0.3974050113133022, 0.3352233512060983, 0.3370652369090489, 0.34366884401866366], "val_accuracy": [0.6023333072662354, 0.6016666889190674, 0.6986666917800903, 0.7089999914169312, 0.6919999718666077, 0.7113333344459534, 0.7490000128746033, 0.7823333144187927, 0.7689999938011169, 0.8036666512489319, 0.7636666893959045, 0.7803333401679993, 0.7733333110809326, 0.8253333568572998, 0.8050000071525574, 0.7666666507720947, 0.8206666707992554, 0.82833331823349, 0.8080000281333923, 0.8416666388511658, 0.8116666674613953, 0.8420000076293945, 0.8336666822433472, 0.8396666646003723, 0.8299999833106995, 0.8523333072662354, 0.8433333039283752, 0.8386666774749756, 0.8476666808128357, 0.8583333492279053, 0.8159999847412109, 0.8556666374206543, 0.859000027179718, 0.8633333444595337, 0.8543333411216736, 0.8243333101272583, 0.8619999885559082, 0.8536666631698608, 0.8586666584014893]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 6, 6, 4, 3, 3, 0, 1, 2, 1, 5, 1, 9, 3, 2, 6, 9, 5, 0, 2, 8, 2, 0, 9, 2], [0, 0, 2, 2, 1, 2, 2, 2, 1, 0, 1, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 38, 35, 27, 57, 79, 53, 52], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 8, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.8134285807609558, "mapping_values": [1, 37, 37, 24, 13, 7, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.multiply(tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.subtract(grad, alpha))), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), grad))))))), tf.math.add(alpha, grad)), alpha))), tf.math.add(tf.math.divide_no_nan(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, alpha))), tf.math.add(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.math.negative(alpha), tf.math.add(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.974936725472604, 1.463770595256285, 1.0677368977932393, 0.8397389092560001, 0.7886946300678659, 0.7337003931660993, 0.6710842690920046, 0.6623067027935814, 0.6183508692117116, 0.5950136776959907, 0.5938066339070818, 0.6016298671991219, 0.5334973722290858, 0.5611922988770676, 0.522188714502069, 0.4828473909057725, 0.5089621399104273, 0.47769888999707444, 0.47976984565662056, 0.4812267725501692, 0.458321360997898, 0.4454442762175981, 0.4349023825291551, 0.41334467770054734, 0.4468842236995067, 0.4307369783790341, 0.4264683855672664, 0.4156683686465761, 0.40846172762411526, 0.3952786183950845, 0.3658342584406679, 0.4021399093302501, 0.38182464350625556, 0.348084755242855, 0.35569592603382544, 0.34537043963614206, 0.36178642821160795, 0.3600383480746811, 0.34401781228964495], "accuracy": [0.32439571619033813, 0.5192180871963501, 0.5976753234863281, 0.6903975605964661, 0.7022850513458252, 0.7195879220962524, 0.7400607466697693, 0.7420420050621033, 0.7629110813140869, 0.7779685854911804, 0.7738739848136902, 0.7717606425285339, 0.8026680946350098, 0.7841764688491821, 0.8031964302062988, 0.8201030492782593, 0.8108572363853455, 0.822348415851593, 0.819970965385437, 0.8208954930305481, 0.8302733898162842, 0.835160493850708, 0.8372738361358643, 0.8454629778862, 0.8322546482086182, 0.8422929644584656, 0.837537944316864, 0.8424250483512878, 0.8473120927810669, 0.8524633646011353, 0.86553955078125, 0.8533879518508911, 0.8581429123878479, 0.8720116019248962, 0.8676528930664062, 0.8716153502464294, 0.8631620407104492, 0.8672566413879395, 0.8732003569602966], "val_loss": [0.9360242571149554, 0.9879289013998849, 0.7043968779700143, 0.628603424344744, 0.6547128132411412, 0.5889607327325004, 0.5572444881711688, 0.4938246863228934, 0.5114386251994542, 0.4551956483295986, 0.5003451960427421, 0.4803358316421509, 0.47133149419512066, 0.4238255534853254, 0.43151819705963135, 0.46819392272404264, 0.4085076025554112, 0.40352167401994976, 0.4234833632196699, 0.38571871178490774, 0.4141025117465428, 0.3748748983655657, 0.38956864391054424, 0.36913606098720003, 0.39485148021153044, 0.3560051662581308, 0.36161788020815167, 0.38451020206723896, 0.35118006808417185, 0.3523496219090053, 0.41196663890566143, 0.3513175759996687, 0.3447393349238804, 0.33983085836683, 0.3482406905719212, 0.3974050113133022, 0.3352233512060983, 0.3370652369090489, 0.34366884401866366], "val_accuracy": [0.6023333072662354, 0.6016666889190674, 0.6986666917800903, 0.7089999914169312, 0.6919999718666077, 0.7113333344459534, 0.7490000128746033, 0.7823333144187927, 0.7689999938011169, 0.8036666512489319, 0.7636666893959045, 0.7803333401679993, 0.7733333110809326, 0.8253333568572998, 0.8050000071525574, 0.7666666507720947, 0.8206666707992554, 0.82833331823349, 0.8080000281333923, 0.8416666388511658, 0.8116666674613953, 0.8420000076293945, 0.8336666822433472, 0.8396666646003723, 0.8299999833106995, 0.8523333072662354, 0.8433333039283752, 0.8386666774749756, 0.8476666808128357, 0.8583333492279053, 0.8159999847412109, 0.8556666374206543, 0.859000027179718, 0.8633333444595337, 0.8543333411216736, 0.8243333101272583, 0.8619999885559082, 0.8536666631698608, 0.8586666584014893]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 8, 8, 4, 5, 3, 2, 1, 0, 1, 4, 2, 9, 3, 2, 6, 9, 5, 0, 2, 8, 2, 0, 9, 2], [0, 0, 2, 2, 2, 1, 1, 2, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 89, 35, 27, 57, 79, 53, 52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 8, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.8134285807609558, "mapping_values": [1, 21, 21, 13, 8, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(grad, tf.math.negative(tf.math.subtract(tf.math.add(alpha, grad), grad)))))), alpha)), tf.math.pow(tf.math.add(tf.math.add(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.974936725472604, 1.463770595256285, 1.0677368977932393, 0.8397389092560001, 0.7886946300678659, 0.7337003931660993, 0.6710842690920046, 0.6623067027935814, 0.6183508692117116, 0.5950136776959907, 0.5938066339070818, 0.6016298671991219, 0.5334973722290858, 0.5611922988770676, 0.522188714502069, 0.4828473909057725, 0.5089621399104273, 0.47769888999707444, 0.47976984565662056, 0.4812267725501692, 0.458321360997898, 0.4454442762175981, 0.4349023825291551, 0.41334467770054734, 0.4468842236995067, 0.4307369783790341, 0.4264683855672664, 0.4156683686465761, 0.40846172762411526, 0.3952786183950845, 0.3658342584406679, 0.4021399093302501, 0.38182464350625556, 0.348084755242855, 0.35569592603382544, 0.34537043963614206, 0.36178642821160795, 0.3600383480746811, 0.34401781228964495], "accuracy": [0.32439571619033813, 0.5192180871963501, 0.5976753234863281, 0.6903975605964661, 0.7022850513458252, 0.7195879220962524, 0.7400607466697693, 0.7420420050621033, 0.7629110813140869, 0.7779685854911804, 0.7738739848136902, 0.7717606425285339, 0.8026680946350098, 0.7841764688491821, 0.8031964302062988, 0.8201030492782593, 0.8108572363853455, 0.822348415851593, 0.819970965385437, 0.8208954930305481, 0.8302733898162842, 0.835160493850708, 0.8372738361358643, 0.8454629778862, 0.8322546482086182, 0.8422929644584656, 0.837537944316864, 0.8424250483512878, 0.8473120927810669, 0.8524633646011353, 0.86553955078125, 0.8533879518508911, 0.8581429123878479, 0.8720116019248962, 0.8676528930664062, 0.8716153502464294, 0.8631620407104492, 0.8672566413879395, 0.8732003569602966], "val_loss": [0.9360242571149554, 0.9879289013998849, 0.7043968779700143, 0.628603424344744, 0.6547128132411412, 0.5889607327325004, 0.5572444881711688, 0.4938246863228934, 0.5114386251994542, 0.4551956483295986, 0.5003451960427421, 0.4803358316421509, 0.47133149419512066, 0.4238255534853254, 0.43151819705963135, 0.46819392272404264, 0.4085076025554112, 0.40352167401994976, 0.4234833632196699, 0.38571871178490774, 0.4141025117465428, 0.3748748983655657, 0.38956864391054424, 0.36913606098720003, 0.39485148021153044, 0.3560051662581308, 0.36161788020815167, 0.38451020206723896, 0.35118006808417185, 0.3523496219090053, 0.41196663890566143, 0.3513175759996687, 0.3447393349238804, 0.33983085836683, 0.3482406905719212, 0.3974050113133022, 0.3352233512060983, 0.3370652369090489, 0.34366884401866366], "val_accuracy": [0.6023333072662354, 0.6016666889190674, 0.6986666917800903, 0.7089999914169312, 0.6919999718666077, 0.7113333344459534, 0.7490000128746033, 0.7823333144187927, 0.7689999938011169, 0.8036666512489319, 0.7636666893959045, 0.7803333401679993, 0.7733333110809326, 0.8253333568572998, 0.8050000071525574, 0.7666666507720947, 0.8206666707992554, 0.82833331823349, 0.8080000281333923, 0.8416666388511658, 0.8116666674613953, 0.8420000076293945, 0.8336666822433472, 0.8396666646003723, 0.8299999833106995, 0.8523333072662354, 0.8433333039283752, 0.8386666774749756, 0.8476666808128357, 0.8583333492279053, 0.8159999847412109, 0.8556666374206543, 0.859000027179718, 0.8633333444595337, 0.8543333411216736, 0.8243333101272583, 0.8619999885559082, 0.8536666631698608, 0.8586666584014893]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 6, 2, 4, 3, 3, 2, 1, 3, 1, 8, 1, 9, 3, 2, 6, 9, 5, 0, 2, 8, 2, 0, 9, 2], [0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 1, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 42, 35, 44, 57, 79, 53, 52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 8, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.8134285807609558, "mapping_values": [1, 24, 24, 13, 11, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.add(grad, tf.math.subtract(tf.math.multiply(tf.math.add(alpha, tf.math.subtract(alpha, grad)), tf.math.add(alpha, tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, grad))))), alpha), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.974936725472604, 1.463770595256285, 1.0677368977932393, 0.8397389092560001, 0.7886946300678659, 0.7337003931660993, 0.6710842690920046, 0.6623067027935814, 0.6183508692117116, 0.5950136776959907, 0.5938066339070818, 0.6016298671991219, 0.5334973722290858, 0.5611922988770676, 0.522188714502069, 0.4828473909057725, 0.5089621399104273, 0.47769888999707444, 0.47976984565662056, 0.4812267725501692, 0.458321360997898, 0.4454442762175981, 0.4349023825291551, 0.41334467770054734, 0.4468842236995067, 0.4307369783790341, 0.4264683855672664, 0.4156683686465761, 0.40846172762411526, 0.3952786183950845, 0.3658342584406679, 0.4021399093302501, 0.38182464350625556, 0.348084755242855, 0.35569592603382544, 0.34537043963614206, 0.36178642821160795, 0.3600383480746811, 0.34401781228964495], "accuracy": [0.32439571619033813, 0.5192180871963501, 0.5976753234863281, 0.6903975605964661, 0.7022850513458252, 0.7195879220962524, 0.7400607466697693, 0.7420420050621033, 0.7629110813140869, 0.7779685854911804, 0.7738739848136902, 0.7717606425285339, 0.8026680946350098, 0.7841764688491821, 0.8031964302062988, 0.8201030492782593, 0.8108572363853455, 0.822348415851593, 0.819970965385437, 0.8208954930305481, 0.8302733898162842, 0.835160493850708, 0.8372738361358643, 0.8454629778862, 0.8322546482086182, 0.8422929644584656, 0.837537944316864, 0.8424250483512878, 0.8473120927810669, 0.8524633646011353, 0.86553955078125, 0.8533879518508911, 0.8581429123878479, 0.8720116019248962, 0.8676528930664062, 0.8716153502464294, 0.8631620407104492, 0.8672566413879395, 0.8732003569602966], "val_loss": [0.9360242571149554, 0.9879289013998849, 0.7043968779700143, 0.628603424344744, 0.6547128132411412, 0.5889607327325004, 0.5572444881711688, 0.4938246863228934, 0.5114386251994542, 0.4551956483295986, 0.5003451960427421, 0.4803358316421509, 0.47133149419512066, 0.4238255534853254, 0.43151819705963135, 0.46819392272404264, 0.4085076025554112, 0.40352167401994976, 0.4234833632196699, 0.38571871178490774, 0.4141025117465428, 0.3748748983655657, 0.38956864391054424, 0.36913606098720003, 0.39485148021153044, 0.3560051662581308, 0.36161788020815167, 0.38451020206723896, 0.35118006808417185, 0.3523496219090053, 0.41196663890566143, 0.3513175759996687, 0.3447393349238804, 0.33983085836683, 0.3482406905719212, 0.3974050113133022, 0.3352233512060983, 0.3370652369090489, 0.34366884401866366], "val_accuracy": [0.6023333072662354, 0.6016666889190674, 0.6986666917800903, 0.7089999914169312, 0.6919999718666077, 0.7113333344459534, 0.7490000128746033, 0.7823333144187927, 0.7689999938011169, 0.8036666512489319, 0.7636666893959045, 0.7803333401679993, 0.7733333110809326, 0.8253333568572998, 0.8050000071525574, 0.7666666507720947, 0.8206666707992554, 0.82833331823349, 0.8080000281333923, 0.8416666388511658, 0.8116666674613953, 0.8420000076293945, 0.8336666822433472, 0.8396666646003723, 0.8299999833106995, 0.8523333072662354, 0.8433333039283752, 0.8386666774749756, 0.8476666808128357, 0.8583333492279053, 0.8159999847412109, 0.8556666374206543, 0.859000027179718, 0.8633333444595337, 0.8543333411216736, 0.8243333101272583, 0.8619999885559082, 0.8536666631698608, 0.8586666584014893]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [2, 8, 2, 4, 5, 3, 2, 1, 2, 1, 5, 2, 9, 5, 2, 6, 9, 5, 0, 2, 8, 2, 0, 9, 2], [0, 1, 0, 1, 1, 2, 2, 2, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 42, 35, 27, 57, 79, 53, 52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 8, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [28, 25, 50, 71, 34]], "fitness": -0.7697142958641052, "mapping_values": [1, 22, 22, 13, 9, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(tf.math.add(alpha, alpha), alpha), grad))))), tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), grad)))), grad))))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2908056516688906, 2.2637884582841497, 2.2327938333651676, 2.192159543499073, 2.138320934692189, 2.0634434831896638, 1.9660689120499875, 1.8478778260274729, 1.7172320122417126, 1.5877563010715712, 1.4678047810878105, 1.373390458751553, 1.2999455177583998, 1.2426354817867973, 1.1935828422054622, 1.1408235570616363, 1.1033515249182284, 1.0649150733729835, 1.0411118430515653, 1.016694155398802, 0.9902442623721516, 0.9841284886280055, 0.9584507832217289, 0.942987349007848, 0.9226688936150006, 0.9100968754916632, 0.8995228163664761, 0.8835943117275246, 0.8653513859480663, 0.8692566914061483, 0.8570947951849158, 0.847690470332656, 0.8379797922653246, 0.8287660970963098, 0.8221406449479293, 0.8159491727616982, 0.8054673353663021, 0.8046052336944738, 0.8037425326538943, 0.7951714690917865, 0.79295101300868, 0.779612141868867, 0.7706429551794324, 0.7723560790029326, 0.7667683854535775, 0.7595246399886509, 0.7594873747175648, 0.7446290709402079, 0.747279720378196, 0.7500202998335902, 0.7471671628992965, 0.7479283237312416, 0.7389507259769589, 0.726830778270271, 0.7285612440143893, 0.7224467713457168, 0.7131287184421019, 0.7130215723973381, 0.7074968090320009, 0.7080941762449939, 0.7083205068824692, 0.7111423732881391, 0.6958505562535524, 0.69190228442002, 0.7037478663650218, 0.6910557058808228, 0.6903431657723873, 0.6861130088122923, 0.6954573423493068, 0.686589438917457, 0.6745320832205014], "accuracy": [0.11610091477632523, 0.19376568496227264, 0.26020342111587524, 0.31422534584999084, 0.35781270265579224, 0.3901730179786682, 0.414608359336853, 0.45132744312286377, 0.47932901978492737, 0.4950468838214874, 0.5291243195533752, 0.549068808555603, 0.5601637959480286, 0.5765420794487, 0.5851274728775024, 0.6020340919494629, 0.609430730342865, 0.6252806782722473, 0.6363756656646729, 0.6444327235221863, 0.6507726907730103, 0.6505085229873657, 0.6560559868812561, 0.6664905548095703, 0.6748117804527283, 0.67666095495224, 0.6794346570968628, 0.6868313550949097, 0.6910579800605774, 0.6911900639533997, 0.691850483417511, 0.6926429867744446, 0.703209638595581, 0.7036058902740479, 0.7020208835601807, 0.7061154246330261, 0.707568347454071, 0.7059833407402039, 0.7170783281326294, 0.7078325152397156, 0.7132478952407837, 0.7124554514884949, 0.7223616242408752, 0.7161537408828735, 0.719852089881897, 0.7271166443824768, 0.7284374833106995, 0.7321357727050781, 0.7231541275978088, 0.7285695672035217, 0.7257958054542542, 0.7285695672035217, 0.7353057861328125, 0.7374191284179688, 0.7407211661338806, 0.7334566116333008, 0.7449478507041931, 0.7401928305625916, 0.739928662776947, 0.7407211661338806, 0.7360982894897461, 0.7386078238487244, 0.744419515132904, 0.7391361594200134, 0.7477215528488159, 0.744419515132904, 0.7495707273483276, 0.7547219395637512, 0.7452120184898376, 0.7473253011703491, 0.7506273984909058], "val_loss": [1.9452956063406808, 1.9182737214224679, 1.8846238000052316, 1.8397565569196428, 1.7769953863961356, 1.6921695641108923, 1.5837160859789168, 1.4553094591413225, 1.3193984712873186, 1.1920862538473946, 1.082829168864659, 0.9976113183157784, 0.9302426406315395, 0.8754700251988002, 0.8336907795497349, 0.7981930119650704, 0.7690982307706561, 0.7415048224585397, 0.7212842702865601, 0.7045221499034336, 0.6875198057719639, 0.675249593598502, 0.6636924743652344, 0.6519098622458321, 0.6424551691327777, 0.6333022117614746, 0.6228339672088623, 0.6160997322627476, 0.6086044822420392, 0.6028190340314593, 0.5981547832489014, 0.5924918481281826, 0.5872610296521869, 0.5816116843904767, 0.5758572816848755, 0.5730445214680263, 0.5676207031522479, 0.5644458702632359, 0.5625307730266026, 0.5570268971579415, 0.5534893955503192, 0.5504899876458305, 0.5446944407054356, 0.5436193602425712, 0.5397131272724697, 0.5385471412113735, 0.5341555050441197, 0.5309934616088867, 0.5308962719781058, 0.5278805494308472, 0.5250774621963501, 0.525280203138079, 0.5218237808772496, 0.5192234005246844, 0.5163113900593349, 0.5142274754387992, 0.5132600239345005, 0.5126734120505196, 0.5086985315595355, 0.5074552467891148, 0.5073790720530919, 0.5051334926060268, 0.5018924645015171, 0.5003599609647479, 0.5000659057072231, 0.49940712111336844, 0.4974966049194336, 0.49589851924351286, 0.4950410468237741, 0.4957291739327567, 0.49145873955317904], "val_accuracy": [0.26466667652130127, 0.38199999928474426, 0.4403333365917206, 0.46566668152809143, 0.5096666812896729, 0.5479999780654907, 0.5619999766349792, 0.581333339214325, 0.5929999947547913, 0.6083333492279053, 0.6316666603088379, 0.6610000133514404, 0.6683333516120911, 0.6793333292007446, 0.6983333230018616, 0.7020000219345093, 0.7026666402816772, 0.7083333134651184, 0.7146666646003723, 0.7123333215713501, 0.7253333330154419, 0.7263333201408386, 0.7310000061988831, 0.7289999723434448, 0.7310000061988831, 0.731333315372467, 0.7433333396911621, 0.7436666488647461, 0.746666669845581, 0.7526666522026062, 0.7543333172798157, 0.7540000081062317, 0.7566666603088379, 0.7599999904632568, 0.7603333592414856, 0.7613333463668823, 0.7663333415985107, 0.7636666893959045, 0.7646666765213013, 0.7649999856948853, 0.7706666588783264, 0.7693333625793457, 0.7716666460037231, 0.7723333239555359, 0.7720000147819519, 0.7723333239555359, 0.7770000100135803, 0.7770000100135803, 0.7749999761581421, 0.7760000228881836, 0.778333306312561, 0.777999997138977, 0.7816666960716248, 0.7816666960716248, 0.7816666960716248, 0.7829999923706055, 0.7846666574478149, 0.7803333401679993, 0.7876666784286499, 0.7846666574478149, 0.7806666493415833, 0.7846666574478149, 0.7870000004768372, 0.7893333435058594, 0.7879999876022339, 0.7923333048820496, 0.7896666526794434, 0.7916666865348816, 0.7900000214576721, 0.7883333563804626, 0.7900000214576721]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 8, 1, 4, 5, 3, 2, 1, 0, 1, 4, 2, 9, 3, 2, 6, 9, 5, 0, 2, 8, 2, 0, 9, 2], [0, 0, 2, 2, 2, 1, 1, 2, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [78, 89, 35, 27, 57, 79, 53, 52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 8, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [37, 25, 50, 71, 34]], "fitness": -0.7542856931686401, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2284978818521837, 1.8006830938173213, 1.259584360402321, 1.0933464292553454, 0.983301585888299, 0.9223302582613686, 0.8454843168450132, 0.8194275350697273, 0.8063217420162951, 0.7794387097434912, 0.7386690156413517, 0.7435110433856494, 0.701928878709105, 0.7022255220275907, 0.7027054503451816], "accuracy": [0.23537181317806244, 0.45872408151626587, 0.5762779116630554, 0.6151102781295776, 0.6425835490226746, 0.6692643165588379, 0.6905296444892883, 0.7025492191314697, 0.7030775547027588, 0.7117950320243835, 0.7284374833106995, 0.7256637215614319, 0.7446836829185486, 0.7396644949913025, 0.7404569983482361], "val_loss": [1.7450669833592005, 1.0927660465240479, 0.8014433213642665, 0.7672747884477887, 0.6571180820465088, 0.6348681960787091, 0.5831188304083688, 0.5900940384183612, 0.6090466465268817, 0.5402787583214896, 0.5554408856800624, 0.5299830266407558, 0.528366242136274, 0.5307177645819527, 0.5403072834014893], "val_accuracy": [0.5213333368301392, 0.6586666703224182, 0.6936666369438171, 0.6570000052452087, 0.70333331823349, 0.7026666402816772, 0.749666690826416, 0.746999979019165, 0.7236666679382324, 0.7720000147819519, 0.7536666393280029, 0.7546666860580444, 0.7590000033378601, 0.753000020980835, 0.7463333606719971]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 6, 2, 4, 9, 2, 2, 1, 2, 1, 5, 1, 0, 3, 2, 6, 9, 5, 0, 2, 8, 2, 0, 9, 2], [0, 0, 2, 2, 1, 2, 2, 2, 2, 0, 1, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 89, 35, 27, 57, 79, 53, 52], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 8, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [23, 25, 50, 71, 34]], "fitness": -0.7454285621643066, "mapping_values": [1, 37, 37, 24, 13, 7, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.pow(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.square(tf.math.add(alpha, grad)), grad))))), alpha), tf.math.subtract(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, grad)))), grad)), tf.math.add(alpha, grad)), tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, alpha)), tf.math.add(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.math.negative(alpha), tf.math.add(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2977626835114258, 2.288114765049082, 2.2787477678831274, 2.267131010775301, 2.2576038272168892, 2.246833544019317, 2.2341020052474896, 2.2225983578373714, 2.2082223325688304, 2.1909735353001514, 2.17180682982688, 2.150602173260442, 2.12894606376132, 2.1025385250111204, 2.0755689553517898, 2.0385417220866784, 2.001463873747585, 1.9609556348332324, 1.9206201082459373, 1.8750229991894702, 1.8246755478105305, 1.7819728705514897, 1.7295748761080951, 1.6816483321773723, 1.6299372661571934, 1.5820613597378108, 1.5442552592193508, 1.4935861292170054, 1.4571411346857024, 1.422632348945254, 1.3930591889785628, 1.367209674691354, 1.3244056000040034, 1.2968392098001942, 1.280585400668653, 1.2481238312331393, 1.2330396148932057, 1.2134309929312497, 1.203486597139633, 1.18532303061074, 1.1697024898506378, 1.141307504185596, 1.1202706262152413, 1.1195172459111473, 1.1050388447250499, 1.0923831950026324, 1.0772809809099146, 1.0655427245164135, 1.0537326298117748, 1.0553102536901209, 1.0399034358113275, 1.0291498808135855, 1.0240331548883017, 1.0058416095880265, 1.0052471520358766, 1.0010854749789153, 0.9831149985903306, 0.9759582399125302, 0.9662345573178152, 0.958676593895082, 0.959235585400331, 0.9566391955718168, 0.9361489079710578, 0.9306867402920302, 0.9396296013237667, 0.9240032022167206, 0.9188136014530861, 0.9062153043181369, 0.9182750789197429, 0.9086483156345682, 0.896127934335261, 0.8998367291762136, 0.8878619259831266, 0.8865057403590024, 0.8870489092834275, 0.8856408389693852, 0.8848177060207372, 0.8708953183986224, 0.8767782032387431, 0.8681698414895512, 0.8554955579742952, 0.8552571678709565, 0.862955139526019, 0.8550733961701283, 0.8549034980309874, 0.8361861538641394, 0.8464250617086486, 0.843028055914578, 0.8477842308243331, 0.8395508337707378, 0.8359285593583929, 0.8247189499982013, 0.8238911631636064, 0.8179338026859222, 0.8183530982396291, 0.8184627127244315, 0.8151682457352641, 0.818996014446709, 0.8048121772737016, 0.8072514729870781], "accuracy": [0.09747721254825592, 0.12389380484819412, 0.15493330359458923, 0.18372738361358643, 0.2071060687303543, 0.2254655957221985, 0.25201427936553955, 0.27261921763420105, 0.30062079429626465, 0.3127724230289459, 0.3389248549938202, 0.3531897962093353, 0.36203935742378235, 0.38145554065704346, 0.38224804401397705, 0.4035134017467499, 0.41143837571144104, 0.4233258366584778, 0.4364020526409149, 0.43851539492607117, 0.4539690911769867, 0.4570069909095764, 0.4741777777671814, 0.48408401012420654, 0.49649980664253235, 0.5027077198028564, 0.5024435520172119, 0.5266147255897522, 0.523048460483551, 0.5381059050559998, 0.5403513312339783, 0.547087550163269, 0.5588429570198059, 0.5620129704475403, 0.564258337020874, 0.5807687044143677, 0.577070415019989, 0.5778629183769226, 0.583938717842102, 0.59225994348526, 0.5952978730201721, 0.6036190986633301, 0.6103553175926208, 0.6061286330223083, 0.6111478209495544, 0.6136573553085327, 0.631488561630249, 0.6317527294158936, 0.6263373494148254, 0.6236956715583801, 0.6379606127738953, 0.6339981555938721, 0.6456214785575867, 0.6453573107719421, 0.646149754524231, 0.6468101739883423, 0.6538106203079224, 0.652621865272522, 0.6621318459510803, 0.6601505875587463, 0.6601505875587463, 0.6585655808448792, 0.6708492636680603, 0.6660943031311035, 0.6682076454162598, 0.6748117804527283, 0.6741513609886169, 0.6818121671676636, 0.6773213744163513, 0.6758684515953064, 0.6814159154891968, 0.6844538450241089, 0.6822084188461304, 0.6828688383102417, 0.6832650899887085, 0.6863030195236206, 0.6877558827400208, 0.6903975605964661, 0.6861709356307983, 0.6888125538825989, 0.6909258961677551, 0.6926429867744446, 0.6929071545600891, 0.6900013089179993, 0.6944921612739563, 0.7014925479888916, 0.7012283802032471, 0.6963412761688232, 0.6976621150970459, 0.7003037929534912, 0.6960771083831787, 0.7065116763114929, 0.7040021419525146, 0.7020208835601807, 0.7054550051689148, 0.7029454708099365, 0.7104741930961609, 0.7022850513458252, 0.7103421092033386, 0.7104741930961609], "val_loss": [1.961226190839495, 1.952035631452288, 1.9426792008536202, 1.9330687522888184, 1.9228739057268416, 1.9118269511631556, 1.899771077292306, 1.8864778109959193, 1.8717005593436105, 1.8550118718828474, 1.836141586303711, 1.814589500427246, 1.7907524108886719, 1.7639942169189453, 1.734257766178676, 1.7008350917271204, 1.6638020787920271, 1.6230371338980538, 1.5796704292297363, 1.5337621825081962, 1.4853147097996302, 1.4358669689723425, 1.3857406548091344, 1.335604122706822, 1.286095210484096, 1.2384652750832694, 1.1931845460619246, 1.1503914083753313, 1.1111548628125871, 1.0748005253928048, 1.0419089794158936, 1.0109844207763672, 0.9826243264334542, 0.9564089093889508, 0.9334143570491246, 0.9108015128544399, 0.8906290190560477, 0.8725413935525077, 0.8563136373247419, 0.8408359629767281, 0.8266259091241019, 0.8128636053630284, 0.799166100365775, 0.787591712815421, 0.7772454193660191, 0.766682471547808, 0.7571461030415126, 0.7480145863124302, 0.7396840027400425, 0.732715232031686, 0.725286602973938, 0.7182987247194562, 0.7114619016647339, 0.7051529543740409, 0.6992860862186977, 0.6936850718089512, 0.6879089900425502, 0.6823749031339373, 0.6770688806261335, 0.6722634008952549, 0.6677340269088745, 0.6636965615408761, 0.6592326504843575, 0.6548544679369245, 0.6514496292386737, 0.6477258546011788, 0.6437151602336338, 0.6392685345241002, 0.6365001201629639, 0.6340231043951852, 0.6302195276532855, 0.6264024291719709, 0.6228448833738055, 0.6202892405646188, 0.6172190734318325, 0.6151294878550938, 0.6131048032215664, 0.609756418636867, 0.6082276446478707, 0.606086117880685, 0.6034767798015049, 0.6009289026260376, 0.5985277209963117, 0.5963635444641113, 0.5947040149143764, 0.5926259585789272, 0.5905692407063076, 0.5886151450020927, 0.5869038956505912, 0.5846408775874546, 0.5822824239730835, 0.5806242568152291, 0.5784038305282593, 0.5771010092326573, 0.5750820466450283, 0.573305777141026, 0.5722509792872837, 0.5702139479773385, 0.5681124585015433, 0.5674450738089425], "val_accuracy": [0.11233333498239517, 0.20333333313465118, 0.28166666626930237, 0.3356666564941406, 0.3720000088214874, 0.3919999897480011, 0.41366666555404663, 0.43299999833106995, 0.45100000500679016, 0.46966665983200073, 0.4803333282470703, 0.492333322763443, 0.5053333044052124, 0.5176666378974915, 0.5316666960716248, 0.5386666655540466, 0.5450000166893005, 0.5523333549499512, 0.5583333373069763, 0.5673333406448364, 0.5740000009536743, 0.5763333439826965, 0.5789999961853027, 0.5886666774749756, 0.5929999947547913, 0.6026666760444641, 0.6116666793823242, 0.6209999918937683, 0.6296666860580444, 0.6413333415985107, 0.6566666960716248, 0.6613333225250244, 0.6660000085830688, 0.6726666688919067, 0.6773333549499512, 0.6813333630561829, 0.687666654586792, 0.6919999718666077, 0.6933333277702332, 0.6926666498184204, 0.6996666789054871, 0.6976666450500488, 0.7023333311080933, 0.7039999961853027, 0.7036666870117188, 0.7046666741371155, 0.7046666741371155, 0.7066666483879089, 0.7073333263397217, 0.7106666564941406, 0.7099999785423279, 0.7099999785423279, 0.7143333554267883, 0.7133333086967468, 0.718999981880188, 0.7176666855812073, 0.721666693687439, 0.7206666469573975, 0.7226666808128357, 0.7250000238418579, 0.7253333330154419, 0.7273333072662354, 0.7296666502952576, 0.7316666841506958, 0.7329999804496765, 0.7336666584014893, 0.734666645526886, 0.7356666922569275, 0.7366666793823242, 0.7366666793823242, 0.7393333315849304, 0.7423333525657654, 0.7440000176429749, 0.7459999918937683, 0.7480000257492065, 0.746999979019165, 0.750333309173584, 0.7523333430290222, 0.7540000081062317, 0.7546666860580444, 0.7559999823570251, 0.7543333172798157, 0.7540000081062317, 0.7563333511352539, 0.7570000290870667, 0.7583333253860474, 0.7570000290870667, 0.7580000162124634, 0.7576666474342346, 0.7603333592414856, 0.7620000243186951, 0.7609999775886536, 0.7613333463668823, 0.7613333463668823, 0.762666642665863, 0.7633333206176758, 0.7639999985694885, 0.7663333415985107, 0.765999972820282, 0.7643333077430725]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [5, 4, 2, 2, 5, 2, 0, 8, 0, 0, 4, 6, 8, 3, 2, 8, 9, 5, 0, 1, 4, 2, 3, 9, 2], [2, 0, 2, 2, 1, 2, 2, 2, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 42, 35, 27, 57, 79, 53, 52], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 8, 8, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 0, 3, 3, 3, 2, 1, 3, 0, 0], [95, 17, 71, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.10342857241630554, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.sqrt(tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.8807799363290596, 2.3272626522179087, 2.3046406706357914, 2.3027519915538806, 2.244959992881244, 2.3056846010434615, 2.3012182225388718, 2.246629853589329, 2.6116920768970573, 2.3056395729346093, 2.3036309739995735, 2.303092069062795, 2.3033207396254203], "accuracy": [0.19614318013191223, 0.09893012791872025, 0.09787346422672272, 0.10619468986988068, 0.18491612374782562, 0.10117553919553757, 0.11081759631633759, 0.17461365461349487, 0.13010171055793762, 0.09681680053472519, 0.10011887550354004, 0.10011887550354004, 0.09338264167308807], "val_loss": [2.064777306147984, 1.9755678858075822, 1.973736081804548, 1.9710258756365096, 1.9767634528023856, 1.9735890797206335, 1.9666133608136858, 1.9317643301827567, 1.9775808198111398, 1.974325180053711, 1.9739037922450475, 1.9738235473632812, 1.9736814498901367], "val_accuracy": [0.09966666996479034, 0.10400000214576721, 0.10000000149011612, 0.12966667115688324, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.20466665923595428, 0.10400000214576721, 0.10400000214576721, 0.09966666996479034, 0.09833333641290665, 0.10400000214576721]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [8, 8, 1, 4, 5, 3, 2, 8, 0, 1, 4, 2, 9, 3, 2, 6, 9, 5, 0, 2, 8, 2, 0, 9, 2], [0, 0, 2, 2, 2, 1, 1, 0, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 89, 35, 27, 57, 79, 53, 52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 8, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.10342857241630554, "mapping_values": [1, 20, 20, 13, 7, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.pow(tf.math.square(tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.negative(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.pow(tf.math.add(alpha, grad), grad), grad))), tf.math.add(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))), tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.8807799363290596, 2.3272626522179087, 2.3046406706357914, 2.3027519915538806, 2.244959992881244, 2.3056846010434615, 2.3012182225388718, 2.246629853589329, 2.6116920768970573, 2.3056395729346093, 2.3036309739995735, 2.303092069062795, 2.3033207396254203], "accuracy": [0.19614318013191223, 0.09893012791872025, 0.09787346422672272, 0.10619468986988068, 0.18491612374782562, 0.10117553919553757, 0.11081759631633759, 0.17461365461349487, 0.13010171055793762, 0.09681680053472519, 0.10011887550354004, 0.10011887550354004, 0.09338264167308807], "val_loss": [2.064777306147984, 1.9755678858075822, 1.973736081804548, 1.9710258756365096, 1.9767634528023856, 1.9735890797206335, 1.9666133608136858, 1.9317643301827567, 1.9775808198111398, 1.974325180053711, 1.9739037922450475, 1.9738235473632812, 1.9736814498901367], "val_accuracy": [0.09966666996479034, 0.10400000214576721, 0.10000000149011612, 0.12966667115688324, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.20466665923595428, 0.10400000214576721, 0.10400000214576721, 0.09966666996479034, 0.09833333641290665, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [5, 4, 2, 2, 5, 2, 0, 8, 0, 0, 4, 6, 8, 3, 2, 8, 9, 5, 0, 1, 4, 2, 3, 9, 2], [2, 0, 2, 2, 1, 2, 2, 2, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 42, 35, 27, 57, 79, 53, 52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 8, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.10342857241630554, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, beta), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.8807799363290596, 2.3272626522179087, 2.3046406706357914, 2.3027519915538806, 2.244959992881244, 2.3056846010434615, 2.3012182225388718, 2.246629853589329, 2.6116920768970573, 2.3056395729346093, 2.3036309739995735, 2.303092069062795, 2.3033207396254203], "accuracy": [0.19614318013191223, 0.09893012791872025, 0.09787346422672272, 0.10619468986988068, 0.18491612374782562, 0.10117553919553757, 0.11081759631633759, 0.17461365461349487, 0.13010171055793762, 0.09681680053472519, 0.10011887550354004, 0.10011887550354004, 0.09338264167308807], "val_loss": [2.064777306147984, 1.9755678858075822, 1.973736081804548, 1.9710258756365096, 1.9767634528023856, 1.9735890797206335, 1.9666133608136858, 1.9317643301827567, 1.9775808198111398, 1.974325180053711, 1.9739037922450475, 1.9738235473632812, 1.9736814498901367], "val_accuracy": [0.09966666996479034, 0.10400000214576721, 0.10000000149011612, 0.12966667115688324, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.20466665923595428, 0.10400000214576721, 0.10400000214576721, 0.09966666996479034, 0.09833333641290665, 0.10400000214576721]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [5, 4, 2, 2, 5, 2, 0, 8, 0, 0, 4, 6, 8, 3, 2, 8, 9, 5, 0, 1, 4, 2, 3, 9, 2], [0, 0, 2, 2, 2, 2, 1, 2, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 22, 35, 27, 57, 79, 53, 52], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 8, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [4, 3], [], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [0, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [44, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 13, 13, 8, 5, 3, 3, 1, 1, 0, 0, 1, 0, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.30213374616668, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 8, 2, 9, 5, 3, 1, 1, 2, 1, 5, 2, 9, 3, 2, 6, 9, 5, 0, 2, 8, 2, 0, 9, 2], [0, 0, 2, 2, 2, 2, 1, 2, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 42, 35, 27, 57, 79, 53, 52], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [3, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [1, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.30213374616668, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 8, 2, 4, 5, 3, 1, 1, 2, 1, 5, 1, 9, 3, 2, 6, 9, 5, 0, 2, 8, 2, 0, 9, 2], [0, 0, 2, 2, 2, 2, 1, 2, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [25, 83, 35, 27, 57, 79, 53, 52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 8, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 2, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [66973835.050545916, 1271766919.7601373, 5844837192.1912565, 16263108895.277243, 34819758594.231674, 63391980282.55607], "accuracy": [0.09496764093637466, 0.10394927859306335, 0.09853387624025345, 0.10276053100824356, 0.10130762308835983, 0.10434553027153015], "val_loss": [252293065.14285713, 2016736256.0, 6804672073.142858, 16127298998.857143, 31496456484.57143, 54422684818.28571], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [0, 3, 2, 4, 5, 3, 2, 1, 2, 4, 3, 2, 9, 3, 2, 6, 9, 5, 0, 2, 8, 2, 0, 9, 2], [0, 0, 2, 2, 2, 2, 1, 0, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 10, 35, 27, 57, 79, 53, 52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 8, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [2, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 23, 13, 10, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.subtract(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), tf.math.add(alpha, alpha))))))))))), tf.math.pow(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 6, 2, 3, 5, 3, 2, 1, 2, 1, 5, 1, 9, 3, 2, 6, 9, 5, 0, 2, 8, 2, 0, 9, 2], [0, 0, 0, 2, 1, 2, 2, 2, 2, 2, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [16, 10, 69, 84, 57, 79, 98, 52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 8, 3, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 1, 3, 1, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1], [3, 3, 3, 9, 2, 9], [2, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 23, 13, 10, 4, 20, 20, 12, 8, 3, 1, 1, 0, 1, 0, 9, 6, 3, 2], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.subtract(tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.math.square(grad)), alpha), tf.math.subtract(tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), grad), grad))))), tf.math.add(alpha, grad)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.pow(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, beta))))), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, alpha)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(beta, tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 8, 1, 4, 5, 3, 2, 1, 0, 1, 4, 2, 9, 3, 2, 6, 9, 5, 0, 2, 8, 2, 0, 9, 2], [0, 0, 2, 2, 2, 1, 1, 2, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 89, 35, 27, 57, 79, 53, 52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 8, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [5, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 34, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [9, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 13, 13, 8, 5, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.subtract(tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.30213374616668, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 2, 2, 4, 5, 3, 2, 1, 2, 1, 5, 2, 9, 3, 2, 6, 9, 5, 0, 2, 8, 2, 0, 9, 2], [0, 0, 2, 2, 2, 2, 1, 2, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [46, 15, 56, 29, 57, 79, 53, 52], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 8, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 6, 9, 2, 9], [0, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 23, 13, 10, 4, 13, 13, 8, 5, 3, 1, 0, 0, 0, 0, 6, 4, 2, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), grad))), tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, grad), grad), alpha))))), tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.math.add(grad, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)))), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(beta, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.378033729387454, 3.291095432903253, 40.42135501610148, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0516465732029507, 6.641006061008999, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.10400000214576721, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 8, 2, 4, 5, 3, 2, 1, 3, 1, 5, 8, 9, 3, 2, 6, 9, 5, 0, 2, 8, 2, 0, 9, 2], [2, 0, 2, 2, 1, 2, 2, 2, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 10, 35, 27, 57, 79, 53, 52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 8, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, grad)), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.301863003400622, 2.3020863231335964, 2.3025757657097565, 2.3005014707572613, 2.3014366279708365, 2.3016351231683467], "accuracy": [0.08836349099874496, 0.0866464152932167, 0.08994849026203156, 0.1018359512090683, 0.08928807079792023, 0.09021265059709549], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 8, 1, 4, 5, 3, 2, 1, 0, 1, 4, 2, 9, 3, 2, 6, 9, 5, 0, 2, 8, 2, 0, 9, 2], [0, 0, 2, 2, 2, 1, 1, 2, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 42, 35, 27, 57, 79, 53, 52], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 8, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [2, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.016285713762044907, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1583573147132964, 2.2517741589010227, 2.6837202665466027, 1.6649966176789686, 1.6379868911478135, 2.873364030661411, 5.019215031763535, NaN, NaN], "accuracy": [0.28239333629608154, 0.22837141156196594, 0.3144895136356354, 0.4694227874279022, 0.462950736284256, 0.2133139669895172, 0.14040417969226837, 0.1150442510843277, 0.09998679161071777], "val_loss": [1.889613424028669, 1.4608079024723597, 1.1162940093449183, 0.9703260830470494, 1.0781761237553187, 1.9829380852835519, 3224.3662109375, NaN, NaN], "val_accuracy": [0.2070000022649765, 0.4490000009536743, 0.5756666660308838, 0.621999979019165, 0.5946666598320007, 0.16333332657814026, 0.17000000178813934, 0.09966666996479034, 0.09966666996479034]}}]