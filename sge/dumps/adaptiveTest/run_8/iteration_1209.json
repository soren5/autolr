[{"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 5, 5, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 2, 0, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 3, 3, 3, 8, 8, 3, 1, 6, 8, 4, 1, 5, 6, 6, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [1, 1, 2, 1, 2, 3, 2, 3, 3, 0, 5, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [77, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [38], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 9, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [46, 9, 43, 71, 34]], "fitness": -0.8420000076293945, "mapping_values": [1, 1, 1, 0, 1, 0, 27, 27, 15, 12, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, alpha)), tf.math.sqrt(tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(tf.math.sqrt(alpha), tf.math.pow(beta, alpha)), tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))), tf.math.add(beta, tf.math.divide_no_nan(grad, beta)))), grad)))), grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), grad))), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.050971508026123, 1.6645921468734741, 1.2305721044540405, 1.0059242248535156, 0.8513644337654114, 0.7987743616104126, 0.747350811958313, 0.6984893083572388, 0.6993715763092041, 0.6554902791976929, 0.6475473046302795, 0.6322888731956482, 0.6050439476966858, 0.5836495757102966, 0.5469757318496704, 0.5684676766395569, 0.5377933382987976, 0.5446888208389282, 0.5268006324768066, 0.526586651802063, 0.5038647651672363, 0.47045063972473145, 0.4837533235549927, 0.47506824135780334, 0.46242156624794006, 0.4345310926437378, 0.4509222209453583, 0.43448132276535034, 0.43901219964027405, 0.4178197383880615, 0.41749268770217896, 0.4004720449447632, 0.42464202642440796, 0.3947082757949829, 0.3985707461833954, 0.37254881858825684, 0.4107637107372284, 0.3830482065677643, 0.3685504198074341, 0.35625725984573364, 0.34270554780960083, 0.3522796332836151, 0.3419123589992523, 0.39412519335746765, 0.3377050757408142, 0.3681267201900482, 0.3369510769844055, 0.31919533014297485, 0.330536812543869, 0.3233194649219513, 0.32204777002334595, 0.3276800513267517, 0.3130648136138916, 0.2960379123687744, 0.3175985813140869, 0.3062855303287506, 0.287933886051178, 0.2878188192844391], "accuracy": [0.31924447417259216, 0.471800297498703, 0.568220853805542, 0.6229031682014465, 0.683000922203064, 0.6909258961677551, 0.7073041796684265, 0.7251353859901428, 0.7275128960609436, 0.746268630027771, 0.7506273984909058, 0.7561748623847961, 0.7586844563484192, 0.7713643908500671, 0.7965922355651855, 0.778232753276825, 0.7972526550292969, 0.7923656105995178, 0.8038568496704102, 0.8014793395996094, 0.81112140417099, 0.8276317715644836, 0.8137630224227905, 0.8240655064582825, 0.826310932636261, 0.8409721255302429, 0.8321225643157959, 0.8408400416374207, 0.8317263126373291, 0.846387505531311, 0.8459912538528442, 0.8514066934585571, 0.8449346423149109, 0.8539162874221802, 0.8469158411026001, 0.8625016212463379, 0.8471800088882446, 0.8562937378883362, 0.8656716346740723, 0.8681812286376953, 0.873860776424408, 0.867520809173584, 0.8735966086387634, 0.8540483713150024, 0.8765024542808533, 0.859199583530426, 0.8730682730674744, 0.8809932470321655, 0.8782195448875427, 0.8811253309249878, 0.8762382864952087, 0.8726720213890076, 0.882710337638855, 0.887201189994812, 0.8784837126731873, 0.8853520154953003, 0.8903711438179016, 0.8952582478523254], "val_loss": [1.467754602432251, 1.1302887201309204, 1.1416655778884888, 0.7750353813171387, 0.7591984868049622, 0.689098060131073, 0.6920918226242065, 0.6272401809692383, 0.6249272227287292, 0.5844550728797913, 0.6766000986099243, 0.6154000759124756, 0.6003298163414001, 0.5347080230712891, 0.5752962231636047, 0.5167403817176819, 0.5728139877319336, 0.5415143966674805, 0.519038736820221, 0.49549996852874756, 0.4846508800983429, 0.47007086873054504, 0.48904749751091003, 0.4803316295146942, 0.4488416314125061, 0.4842183291912079, 0.45634302496910095, 0.46296992897987366, 0.43741101026535034, 0.4494595527648926, 0.4369731843471527, 0.44711896777153015, 0.4317845106124878, 0.44062474370002747, 0.42037126421928406, 0.46149125695228577, 0.41578638553619385, 0.4091425836086273, 0.4413416385650635, 0.41591715812683105, 0.39881566166877747, 0.41169530153274536, 0.4030730128288269, 0.3938289284706116, 0.4812049865722656, 0.45113691687583923, 0.40692782402038574, 0.4025903344154358, 0.39746272563934326, 0.45919451117515564, 0.43132472038269043, 0.3880322277545929, 0.3956950604915619, 0.40611767768859863, 0.39336714148521423, 0.4490686357021332, 0.40120700001716614, 0.39596232771873474], "val_accuracy": [0.5519999861717224, 0.643666684627533, 0.5666666626930237, 0.7260000109672546, 0.6966666579246521, 0.7210000157356262, 0.7416666746139526, 0.7573333382606506, 0.7683333158493042, 0.7803333401679993, 0.7306666374206543, 0.7493333220481873, 0.7646666765213013, 0.7983333468437195, 0.7763333320617676, 0.8069999814033508, 0.7646666765213013, 0.8013333082199097, 0.8006666898727417, 0.8149999976158142, 0.8246666789054871, 0.8190000057220459, 0.8073333501815796, 0.8136666417121887, 0.8373333215713501, 0.8103333115577698, 0.8353333473205566, 0.8326666951179504, 0.8403333425521851, 0.8356666564941406, 0.8420000076293945, 0.831333339214325, 0.843999981880188, 0.8376666903495789, 0.8486666679382324, 0.8373333215713501, 0.8523333072662354, 0.8573333621025085, 0.8453333377838135, 0.8569999933242798, 0.8560000061988831, 0.8506666421890259, 0.859000027179718, 0.8576666712760925, 0.8339999914169312, 0.8299999833106995, 0.8539999723434448, 0.859666645526886, 0.8606666922569275, 0.8379999995231628, 0.8523333072662354, 0.859000027179718, 0.8646666407585144, 0.862666666507721, 0.8586666584014893, 0.8486666679382324, 0.8619999885559082, 0.862666666507721]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 5, 5, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 2, 0, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 2, 3, 3, 5, 2, 3, 6, 6, 8, 4, 1, 5, 6, 0, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [1, 1, 3, 1, 0, 3, 3, 3, 1, 0, 0, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [77, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [38], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 9, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [46, 9, 43, 71, 34]], "fitness": -0.8362857103347778, "mapping_values": [1, 1, 1, 0, 1, 0, 27, 27, 15, 12, 3, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.math.add(beta, alpha), tf.math.multiply(tf.math.add(beta, alpha), tf.math.square(tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.sqrt(alpha)), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.math.divide_no_nan(grad, tf.math.add(beta, grad)))))), tf.math.add(beta, alpha))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))))))))), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.0509631633758545, 1.6718577146530151, 1.2185219526290894, 1.0162360668182373, 0.8364123702049255, 0.7973353266716003, 0.7429834604263306, 0.7097421884536743, 0.690559983253479, 0.636756420135498, 0.6787864565849304, 0.623760461807251, 0.5912895202636719, 0.5737094283103943, 0.5747092962265015, 0.5600003004074097, 0.5494056940078735, 0.5337457060813904, 0.5236833691596985, 0.5295590162277222, 0.49483776092529297, 0.46700534224510193, 0.4846099615097046, 0.4815775156021118, 0.45575541257858276, 0.4298768937587738, 0.45777103304862976, 0.4263685345649719, 0.44188594818115234, 0.42069265246391296], "accuracy": [0.31924447417259216, 0.46968695521354675, 0.5695416927337646, 0.6203936338424683, 0.6852463483810425, 0.6896050572395325, 0.711530864238739, 0.726192057132721, 0.7313432693481445, 0.7481178045272827, 0.7342491149902344, 0.7675340175628662, 0.7713643908500671, 0.7804781198501587, 0.780610203742981, 0.7819310426712036, 0.7921014428138733, 0.7935543656349182, 0.8057059645652771, 0.7998943328857422, 0.81548011302948, 0.8259146809577942, 0.8121780753135681, 0.8198388814926147, 0.8301413059234619, 0.8436138033866882, 0.8252542614936829, 0.8449346423149109, 0.8290846943855286, 0.8430854678153992], "val_loss": [1.4676094055175781, 1.1586729288101196, 1.178402304649353, 0.7822884321212769, 0.7916762828826904, 0.6766181588172913, 0.7165202498435974, 0.6273329854011536, 0.6281295418739319, 0.6341763734817505, 0.6533442139625549, 0.5607398152351379, 0.5957263708114624, 0.5976908206939697, 0.5433244109153748, 0.5127707719802856, 0.5465083122253418, 0.5416246056556702, 0.5709801316261292, 0.4877234697341919, 0.4839467704296112, 0.48497533798217773, 0.4789322018623352, 0.45406922698020935, 0.4466376006603241, 0.4963863492012024, 0.4484357237815857, 0.4682859182357788, 0.4477878510951996, 0.45328471064567566], "val_accuracy": [0.5519999861717224, 0.6326666474342346, 0.5606666803359985, 0.7153333425521851, 0.6833333373069763, 0.7286666631698608, 0.7269999980926514, 0.746666669845581, 0.7630000114440918, 0.7390000224113464, 0.7476666569709778, 0.7923333048820496, 0.749666690826416, 0.7630000114440918, 0.7976666688919067, 0.8133333325386047, 0.7730000019073486, 0.8013333082199097, 0.777999997138977, 0.8220000267028809, 0.8213333487510681, 0.8176666498184204, 0.8096666932106018, 0.8353333473205566, 0.8386666774749756, 0.8056666851043701, 0.8349999785423279, 0.831333339214325, 0.8240000009536743, 0.8326666951179504]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 5, 5, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 2, 0, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 3, 3, 3, 8, 8, 3, 1, 6, 8, 4, 1, 5, 6, 6, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [1, 1, 2, 1, 2, 3, 2, 3, 3, 0, 5, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [77, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [38], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 9, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [46, 9, 43, 71, 34]], "fitness": -0.8325714468955994, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.050980567932129, 1.6723766326904297, 1.2276527881622314, 0.966441810131073, 0.885250449180603, 0.7810320258140564, 0.7553899884223938, 0.6969048380851746, 0.6945357918739319, 0.6370512843132019, 0.67060387134552, 0.6186916828155518, 0.6103503108024597, 0.5834442377090454, 0.558805525302887, 0.5504158735275269, 0.5498488545417786, 0.5333710312843323, 0.5204454064369202, 0.523193895816803, 0.5005731582641602, 0.4660007059574127, 0.48376476764678955, 0.476343035697937, 0.46287861466407776, 0.4310437738895416, 0.4539675712585449, 0.43236491084098816, 0.43190768361091614, 0.41696247458457947, 0.40987202525138855, 0.4003109037876129, 0.44221436977386475, 0.3988507091999054, 0.39569351077079773, 0.3727319538593292, 0.3685143291950226, 0.38407111167907715, 0.36787375807762146, 0.3499497175216675, 0.37092459201812744, 0.3595399856567383, 0.32924965023994446], "accuracy": [0.31924447417259216, 0.4691586196422577, 0.5698058605194092, 0.6386210322380066, 0.6580372452735901, 0.6968696117401123, 0.7047945857048035, 0.7359662055969238, 0.7301545143127441, 0.7518161535263062, 0.7364945411682129, 0.7619865536689758, 0.7573636174201965, 0.7761194109916687, 0.7872143983840942, 0.7917051911354065, 0.7911768555641174, 0.7902522683143616, 0.8074230551719666, 0.7968564033508301, 0.8127063512802124, 0.828292191028595, 0.8119139075279236, 0.8222163319587708, 0.8239334225654602, 0.843481719493866, 0.8318583965301514, 0.841500461101532, 0.8345000743865967, 0.8457271456718445, 0.8479725122451782, 0.8519350290298462, 0.8335754871368408, 0.8495575189590454, 0.8491612672805786, 0.8650112152099609, 0.8598600029945374, 0.852331280708313, 0.8656716346740723, 0.8735966086387634, 0.8581429123878479, 0.8654074668884277, 0.8780874609947205], "val_loss": [1.4675813913345337, 1.1579477787017822, 1.048518180847168, 0.7731938362121582, 0.7530635595321655, 0.7123333215713501, 0.7027665972709656, 0.611906111240387, 0.6509987711906433, 0.6444218158721924, 0.6554183959960938, 0.6334793567657471, 0.6007837057113647, 0.5425117015838623, 0.5440610647201538, 0.5084225535392761, 0.5300589799880981, 0.5371353626251221, 0.5143234133720398, 0.48926520347595215, 0.48200544714927673, 0.46793055534362793, 0.4722071886062622, 0.46199682354927063, 0.4574781060218811, 0.5046423077583313, 0.455161988735199, 0.4701281785964966, 0.4476200342178345, 0.44502660632133484, 0.4289824962615967, 0.45999592542648315, 0.43281710147857666, 0.4300982654094696, 0.4225412905216217, 0.42562031745910645, 0.4237159788608551, 0.41483843326568604, 0.4500451683998108, 0.41796430945396423, 0.41457071900367737, 0.4138806164264679, 0.42246007919311523], "val_accuracy": [0.5519999861717224, 0.6349999904632568, 0.5993333458900452, 0.6880000233650208, 0.7046666741371155, 0.7086666822433472, 0.737666666507721, 0.7620000243186951, 0.734000027179718, 0.7356666922569275, 0.7360000014305115, 0.7436666488647461, 0.7646666765213013, 0.7903333306312561, 0.7979999780654907, 0.8106666803359985, 0.7916666865348816, 0.8040000200271606, 0.8033333420753479, 0.8193333148956299, 0.8256666660308838, 0.8270000219345093, 0.8190000057220459, 0.8243333101272583, 0.8349999785423279, 0.8046666383743286, 0.8309999704360962, 0.8326666951179504, 0.8306666612625122, 0.8379999995231628, 0.8456666469573975, 0.8216666579246521, 0.8420000076293945, 0.8450000286102295, 0.8493333458900452, 0.8483333587646484, 0.847000002861023, 0.8513333201408386, 0.8423333168029785, 0.8486666679382324, 0.8503333330154419, 0.8486666679382324, 0.8489999771118164]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 5, 5, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 2, 0, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 3, 3, 3, 8, 1, 3, 1, 1, 8, 4, 1, 5, 0, 6, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [1, 1, 2, 1, 2, 3, 2, 3, 3, 0, 5, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [77, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [38], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 9, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [46, 9, 43, 71, 34]], "fitness": -0.7911428809165955, "mapping_values": [1, 1, 1, 0, 1, 1, 27, 27, 15, 12, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, alpha)), tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.subtract(tf.math.add(beta, tf.math.sqrt(alpha)), tf.math.pow(beta, alpha)), tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))), tf.math.add(beta, tf.math.negative(grad)))), beta), grad))), grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), grad))), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.050933361053467, 1.6742331981658936, 1.2188431024551392, 1.0020573139190674, 0.8298949599266052, 0.7971416711807251, 0.7545803785324097, 0.6985418200492859, 0.6875143647193909, 0.641787588596344, 0.6799196004867554, 0.610345721244812, 0.5954774022102356, 0.5706444382667542, 0.5753395557403564, 0.5600144863128662, 0.5338847041130066], "accuracy": [0.31937655806541443, 0.4678378105163574, 0.5674283504486084, 0.6225069165229797, 0.687491774559021, 0.6934354901313782, 0.7069079279899597, 0.7300224304199219, 0.7314753532409668, 0.7467969655990601, 0.7342491149902344, 0.7705719470977783, 0.7676661014556885, 0.78113853931427, 0.7799497842788696, 0.7833839654922485, 0.7979130744934082], "val_loss": [1.4679204225540161, 1.1654555797576904, 1.1008909940719604, 0.7997602820396423, 0.8013826608657837, 0.695917010307312, 0.6780135631561279, 0.6098977327346802, 0.6395845413208008, 0.6196765899658203, 0.6409327983856201, 0.5581967830657959, 0.5957491993904114, 0.5883678197860718, 0.5468943119049072, 0.5285081267356873, 0.6121240258216858], "val_accuracy": [0.5519999861717224, 0.625, 0.5773333311080933, 0.6926666498184204, 0.6786666512489319, 0.7129999995231628, 0.746999979019165, 0.7663333415985107, 0.7519999742507935, 0.7480000257492065, 0.7573333382606506, 0.7973333597183228, 0.7493333220481873, 0.7603333592414856, 0.7943333387374878, 0.7973333597183228, 0.7583333253860474]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 5, 5, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 2, 0, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 3, 3, 3, 8, 1, 3, 1, 6, 8, 4, 1, 5, 0, 6, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [1, 1, 3, 1, 3, 3, 2, 3, 3, 0, 5, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [77, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [38], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 9, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [46, 9, 43, 71, 34]], "fitness": -0.7882857322692871, "mapping_values": [1, 1, 1, 0, 1, 0, 27, 27, 15, 12, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, alpha)), tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(tf.math.sqrt(alpha), tf.math.pow(grad, alpha)), tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.math.add(beta, grad))), tf.math.negative(beta)), grad))), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), grad))), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.0665600299835205, 1.6729260683059692, 1.2299896478652954, 0.876297652721405, 0.8012287616729736, 0.793691873550415, 0.7371889352798462, 0.704438328742981, 0.6752694845199585, 0.6661832928657532, 0.6578792333602905, 0.6208646893501282, 0.609826385974884, 0.5936148166656494, 0.5748857855796814, 0.5910429358482361, 0.5299757122993469], "accuracy": [0.32003697752952576, 0.4558182656764984, 0.5547483563423157, 0.6700568199157715, 0.6964733600616455, 0.7045304179191589, 0.7193237543106079, 0.7331924438476562, 0.744419515132904, 0.7498348951339722, 0.744419515132904, 0.7709681391716003, 0.7712323069572449, 0.7865539789199829, 0.7862898111343384, 0.7740060687065125, 0.8041210174560547], "val_loss": [2.0244030952453613, 1.4598677158355713, 0.7930909991264343, 0.7246227264404297, 0.7495983242988586, 0.7122094631195068, 0.6684289574623108, 0.6520025134086609, 0.592779815196991, 0.7416790127754211, 0.5521280169487, 0.5567206740379333, 0.57321697473526, 0.5358214378356934, 0.5735852718353271, 0.5435773730278015, 0.5338733196258545], "val_accuracy": [0.32733333110809326, 0.4790000021457672, 0.690666675567627, 0.7126666903495789, 0.7306666374206543, 0.7066666483879089, 0.7243333458900452, 0.7316666841506958, 0.7829999923706055, 0.6916666626930237, 0.7926666736602783, 0.7996666431427002, 0.7879999876022339, 0.7950000166893005, 0.7639999985694885, 0.7940000295639038, 0.7950000166893005]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 5, 5, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 2, 0, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 3, 3, 3, 8, 8, 3, 1, 6, 8, 4, 1, 5, 6, 6, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [1, 1, 2, 1, 3, 3, 2, 3, 0, 0, 5, 3, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [23, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [38], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 9, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [1, 9, 43, 71, 34]], "fitness": -0.11171428859233856, "mapping_values": [1, 1, 1, 0, 1, 0, 33, 33, 21, 12, 4, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(tf.math.sqrt(tf.math.pow(alpha, tf.math.subtract(alpha, beta))), tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.divide_no_nan(grad, grad)))))), beta), tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), grad), tf.math.add(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.negative(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(sigma), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302147150039673, 2.3010315895080566, 2.3024632930755615, 2.303105592727661, 2.300884962081909, 2.3033463954925537, 2.300588369369507, 2.301194667816162, 2.302448034286499, 2.301992416381836, 2.301097869873047, 2.301340341567993, 2.3029494285583496, 2.300795793533325, 2.3008668422698975, 2.3015451431274414, 2.301786422729492, 2.300935745239258, 2.3006227016448975, 2.299867868423462, 2.3002467155456543, 2.2991833686828613, 2.2999889850616455, 2.3005967140197754, 2.3001158237457275, 2.3006420135498047, 2.3000504970550537, 2.2996585369110107, 2.299074649810791, 2.2992985248565674, 2.300745725631714, 2.2991299629211426, 2.300057888031006, 2.299830675125122, 2.3002405166625977, 2.2975099086761475, 2.29746413230896, 2.299074411392212, 2.295635223388672, 2.297886371612549, 2.299675464630127, 2.2987191677093506, 2.297844409942627, 2.2988533973693848, 2.2975807189941406, 2.2970187664031982, 2.297149896621704, 2.296635627746582, 2.295924663543701, 2.297366142272949, 2.295677900314331, 2.296729326248169, 2.296809434890747, 2.297344207763672, 2.2968146800994873, 2.2973439693450928, 2.2953402996063232, 2.2972755432128906, 2.295417547225952, 2.2957265377044678, 2.2961761951446533, 2.294546365737915, 2.2952775955200195, 2.2954909801483154, 2.29398512840271, 2.2951691150665283, 2.295254707336426, 2.2952373027801514, 2.293773889541626, 2.2947654724121094, 2.2939088344573975, 2.2950022220611572, 2.293764352798462, 2.2927401065826416, 2.294282913208008, 2.2922589778900146, 2.2925586700439453, 2.293745994567871, 2.2940289974212646, 2.2938156127929688, 2.293782949447632, 2.2926602363586426, 2.2924420833587646, 2.293243169784546, 2.2922935485839844, 2.2935752868652344, 2.292970895767212, 2.2924134731292725, 2.2905962467193604, 2.292112112045288, 2.2935431003570557, 2.2926700115203857, 2.292485475540161, 2.291208028793335, 2.2906506061553955, 2.2916829586029053, 2.2904725074768066, 2.291393518447876, 2.2921576499938965, 2.289511203765869], "accuracy": [0.09074098616838455, 0.09536388516426086, 0.09219389408826828, 0.08994849026203156, 0.09826971590518951, 0.08849557489156723, 0.0944393053650856, 0.08889182657003403, 0.09192973375320435, 0.09113723784685135, 0.0936468094587326, 0.09232597798109055, 0.08796724677085876, 0.09470347315073013, 0.09377889335155487, 0.09298639744520187, 0.09259014576673508, 0.09457138925790787, 0.09219389408826828, 0.09602430462837219, 0.09536388516426086, 0.09694888442754745, 0.09536388516426086, 0.09536388516426086, 0.09945846349000931, 0.09668471664190292, 0.09787346422672272, 0.09906221181154251, 0.09998679161071777, 0.09760929644107819, 0.09668471664190292, 0.09642054885625839, 0.09642054885625839, 0.09734513610601425, 0.09708096832036972, 0.10130762308835983, 0.09800554811954498, 0.1022322028875351, 0.10606260597705841, 0.09919429570436478, 0.09747721254825592, 0.09945846349000931, 0.10355303436517715, 0.10408136248588562, 0.09906221181154251, 0.10342095047235489, 0.10460969805717468, 0.10276053100824356, 0.10553427785634995, 0.09774138033390045, 0.10210011899471283, 0.1088363528251648, 0.10566636174917221, 0.11015717685222626, 0.10962884873151779, 0.10962884873151779, 0.10606260597705841, 0.10659094154834747, 0.11055342853069305, 0.10711926966905594, 0.10593052208423615, 0.11345925182104111, 0.11147800832986832, 0.10619468986988068, 0.10791176557540894, 0.107647605240345, 0.10487385839223862, 0.10460969805717468, 0.10777968913316727, 0.11015717685222626, 0.11174217611551285, 0.1072513535618782, 0.11002509295940399, 0.11478008329868317, 0.10962884873151779, 0.11808215826749802, 0.11636507511138916, 0.11411966383457184, 0.11319508403539658, 0.10540219396352768, 0.11662924289703369, 0.11478008329868317, 0.11953506618738174, 0.10791176557540894, 0.1138555034995079, 0.11081759631633759, 0.11319508403539658, 0.1208558976650238, 0.11861048638820648, 0.12178047746419907, 0.11213842034339905, 0.11200633645057678, 0.11649715900421143, 0.11768590658903122, 0.11900673806667328, 0.11451591551303864, 0.12310130894184113, 0.11161009222269058, 0.11662924289703369, 0.12019548565149307], "val_loss": [2.2986741065979004, 2.29854416847229, 2.298414945602417, 2.298287868499756, 2.298156976699829, 2.298027753829956, 2.297898054122925, 2.2977705001831055, 2.2976388931274414, 2.2975101470947266, 2.29738187789917, 2.297253370285034, 2.2971229553222656, 2.296995162963867, 2.2968666553497314, 2.296738386154175, 2.296609401702881, 2.296480417251587, 2.2963526248931885, 2.29622483253479, 2.2960944175720215, 2.295966148376465, 2.295837163925171, 2.295710325241089, 2.2955803871154785, 2.2954514026641846, 2.2953245639801025, 2.2951955795288086, 2.295067310333252, 2.2949395179748535, 2.2948102951049805, 2.2946829795837402, 2.2945549488067627, 2.294426202774048, 2.2942984104156494, 2.2941718101501465, 2.2940430641174316, 2.293914556503296, 2.29378604888916, 2.2936582565307617, 2.2935309410095215, 2.2934043407440186, 2.293276786804199, 2.2931480407714844, 2.2930216789245605, 2.292893648147583, 2.29276704788208, 2.29263973236084, 2.292511463165283, 2.292384386062622, 2.2922568321228027, 2.2921295166015625, 2.2920022010803223, 2.2918760776519775, 2.2917497158050537, 2.2916221618652344, 2.2914938926696777, 2.291367769241333, 2.2912416458129883, 2.291114330291748, 2.290987730026245, 2.290860652923584, 2.29073166847229, 2.2906041145324707, 2.290475845336914, 2.290348768234253, 2.2902214527130127, 2.290095090866089, 2.2899677753448486, 2.2898402214050293, 2.289712429046631, 2.2895870208740234, 2.289461374282837, 2.2893357276916504, 2.28920841217041, 2.289081335067749, 2.288954019546509, 2.2888283729553223, 2.288701057434082, 2.288574457168579, 2.2884480953216553, 2.2883214950561523, 2.2881948947906494, 2.2880680561065674, 2.2879416942596436, 2.2878153324127197, 2.287687063217163, 2.2875609397888184, 2.2874362468719482, 2.2873082160949707, 2.287182331085205, 2.287055253982544, 2.2869303226470947, 2.286803960800171, 2.2866766452789307, 2.286550760269165, 2.2864248752593994, 2.2862987518310547, 2.2861721515655518, 2.286045789718628], "val_accuracy": [0.041999999433755875, 0.041999999433755875, 0.041999999433755875, 0.041999999433755875, 0.0430000014603138, 0.043666668236255646, 0.044333335012197495, 0.044333335012197495, 0.044333335012197495, 0.04466666653752327, 0.04500000178813934, 0.045666664838790894, 0.04600000008940697, 0.04633333161473274, 0.046666666865348816, 0.047333333641290665, 0.047333333641290665, 0.04800000041723251, 0.04833333194255829, 0.04833333194255829, 0.05000000074505806, 0.050999999046325684, 0.05166666582226753, 0.05233333259820938, 0.0533333346247673, 0.05400000140070915, 0.054666668176651, 0.055666666477918625, 0.05700000002980232, 0.058666665107011795, 0.058666665107011795, 0.05966666713356972, 0.06133333221077919, 0.06233333423733711, 0.06366666406393051, 0.06400000303983688, 0.06499999761581421, 0.06599999964237213, 0.06666667014360428, 0.0676666647195816, 0.06800000369548798, 0.06933332979679108, 0.07100000232458115, 0.0716666653752327, 0.0716666653752327, 0.07233333587646484, 0.07333333045244217, 0.07366666942834854, 0.07433333247900009, 0.07533333450555801, 0.07633333653211594, 0.07699999958276749, 0.07733333110809326, 0.07900000363588333, 0.07900000363588333, 0.08033332973718643, 0.0806666687130928, 0.0820000022649765, 0.08266666531562805, 0.08299999684095383, 0.08399999886751175, 0.08566666394472122, 0.08666666597127914, 0.08799999952316284, 0.08799999952316284, 0.08833333104848862, 0.09000000357627869, 0.09033333510160446, 0.09099999815225601, 0.09133332967758179, 0.09300000220537186, 0.09333333373069763, 0.09366666525602341, 0.09533333033323288, 0.09566666930913925, 0.09666666388511658, 0.09700000286102295, 0.09833333641290665, 0.09866666793823242, 0.09966666996479034, 0.10100000351667404, 0.10133333504199982, 0.10166666656732559, 0.10166666656732559, 0.10199999809265137, 0.10333333164453506, 0.10433333367109299, 0.10533333569765091, 0.10533333569765091, 0.10599999874830246, 0.10833333432674408, 0.1106666699051857, 0.11133333295583725, 0.1133333370089531, 0.11366666853427887, 0.11566666513681412, 0.11599999666213989, 0.11766666918992996, 0.11900000274181366, 0.11933333426713943]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 5, 5, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 2, 0, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 74, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 2, 3, 3, 8, 8, 3, 1, 6, 8, 4, 1, 5, 6, 6, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [1, 1, 2, 3, 2, 3, 2, 3, 3, 0, 5, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [77, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [38], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 9, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [1, 9, 43, 71, 34]], "fitness": -0.11171428859233856, "mapping_values": [1, 1, 1, 0, 1, 0, 22, 22, 12, 10, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(alpha, tf.math.add(beta, tf.math.multiply(tf.math.multiply(tf.math.add(beta, alpha), beta), tf.math.sqrt(tf.math.sqrt(tf.math.multiply(tf.math.subtract(grad, tf.math.divide_no_nan(tf.math.add(beta, beta), grad)), tf.math.sqrt(tf.math.add(beta, tf.math.pow(beta, tf.math.add(beta, tf.math.subtract(grad, grad))))))))))), tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302147150039673, 2.3010315895080566, 2.3024632930755615, 2.303105592727661, 2.300884962081909, 2.3033463954925537, 2.300588369369507, 2.301194667816162, 2.302448034286499, 2.301992416381836, 2.301097869873047, 2.301340341567993, 2.3029494285583496, 2.300795793533325, 2.3008668422698975, 2.3015451431274414, 2.301786422729492, 2.300935745239258, 2.3006227016448975, 2.299867868423462, 2.3002467155456543, 2.2991833686828613, 2.2999889850616455, 2.3005967140197754, 2.3001158237457275, 2.3006420135498047, 2.3000504970550537, 2.2996585369110107, 2.299074649810791, 2.2992985248565674, 2.300745725631714, 2.2991299629211426, 2.300057888031006, 2.299830675125122, 2.3002405166625977, 2.2975099086761475, 2.29746413230896, 2.299074411392212, 2.295635223388672, 2.297886371612549, 2.299675464630127, 2.2987191677093506, 2.297844409942627, 2.2988533973693848, 2.2975807189941406, 2.2970187664031982, 2.297149896621704, 2.296635627746582, 2.295924663543701, 2.297366142272949, 2.295677900314331, 2.296729326248169, 2.296809434890747, 2.297344207763672, 2.2968146800994873, 2.2973439693450928, 2.2953402996063232, 2.2972755432128906, 2.295417547225952, 2.2957265377044678, 2.2961761951446533, 2.294546365737915, 2.2952775955200195, 2.2954909801483154, 2.29398512840271, 2.29516863822937, 2.295254707336426, 2.2952373027801514, 2.293774127960205, 2.2947654724121094, 2.2939085960388184, 2.2950022220611572, 2.293764352798462, 2.2927401065826416, 2.294282913208008, 2.2922589778900146, 2.2925586700439453, 2.293745994567871, 2.2940289974212646, 2.2938156127929688, 2.293782949447632, 2.2926602363586426, 2.2924420833587646, 2.293243169784546, 2.2922935485839844, 2.2935752868652344, 2.292970895767212, 2.2924132347106934, 2.2905962467193604, 2.292112112045288, 2.2935431003570557, 2.2926700115203857, 2.292485475540161, 2.291208267211914, 2.2906506061553955, 2.2916829586029053, 2.2904725074768066, 2.291393518447876, 2.2921576499938965, 2.289511203765869], "accuracy": [0.09074098616838455, 0.09536388516426086, 0.09219389408826828, 0.08994849026203156, 0.09826971590518951, 0.08849557489156723, 0.0944393053650856, 0.08889182657003403, 0.09192973375320435, 0.09113723784685135, 0.0936468094587326, 0.09232597798109055, 0.08796724677085876, 0.09470347315073013, 0.09377889335155487, 0.09298639744520187, 0.09259014576673508, 0.09457138925790787, 0.09219389408826828, 0.09602430462837219, 0.09536388516426086, 0.09694888442754745, 0.09536388516426086, 0.09536388516426086, 0.09945846349000931, 0.09668471664190292, 0.09787346422672272, 0.09906221181154251, 0.09998679161071777, 0.09760929644107819, 0.09668471664190292, 0.09642054885625839, 0.09642054885625839, 0.09734513610601425, 0.09708096832036972, 0.10130762308835983, 0.09800554811954498, 0.1022322028875351, 0.10606260597705841, 0.09919429570436478, 0.09747721254825592, 0.09945846349000931, 0.10355303436517715, 0.10408136248588562, 0.09906221181154251, 0.10342095047235489, 0.10460969805717468, 0.10276053100824356, 0.10553427785634995, 0.09774138033390045, 0.10210011899471283, 0.1088363528251648, 0.10566636174917221, 0.11015717685222626, 0.10962884873151779, 0.10962884873151779, 0.10606260597705841, 0.10659094154834747, 0.11055342853069305, 0.10711926966905594, 0.10593052208423615, 0.11345925182104111, 0.11147800832986832, 0.10619468986988068, 0.10791176557540894, 0.107647605240345, 0.10487385839223862, 0.10460969805717468, 0.10777968913316727, 0.11015717685222626, 0.11174217611551285, 0.1072513535618782, 0.11002509295940399, 0.11478008329868317, 0.10962884873151779, 0.11808215826749802, 0.11636507511138916, 0.11411966383457184, 0.11319508403539658, 0.10540219396352768, 0.11662924289703369, 0.11478008329868317, 0.11953506618738174, 0.10791176557540894, 0.1138555034995079, 0.11081759631633759, 0.11319508403539658, 0.1208558976650238, 0.11861048638820648, 0.12178047746419907, 0.11213842034339905, 0.11200633645057678, 0.11649715900421143, 0.11768590658903122, 0.11900673806667328, 0.11451591551303864, 0.12310130894184113, 0.11161009222269058, 0.11662924289703369, 0.12019548565149307], "val_loss": [2.2986741065979004, 2.29854416847229, 2.298414945602417, 2.298287868499756, 2.298156976699829, 2.298027753829956, 2.297898054122925, 2.2977705001831055, 2.2976388931274414, 2.2975101470947266, 2.29738187789917, 2.297253370285034, 2.2971229553222656, 2.296995162963867, 2.2968666553497314, 2.296738386154175, 2.296609401702881, 2.296480417251587, 2.2963526248931885, 2.29622483253479, 2.2960944175720215, 2.295966148376465, 2.295837163925171, 2.295710325241089, 2.2955803871154785, 2.2954514026641846, 2.2953243255615234, 2.2951955795288086, 2.295067310333252, 2.2949395179748535, 2.2948102951049805, 2.2946829795837402, 2.2945547103881836, 2.294426202774048, 2.2942984104156494, 2.2941718101501465, 2.2940430641174316, 2.293914556503296, 2.29378604888916, 2.2936582565307617, 2.2935309410095215, 2.2934043407440186, 2.293276786804199, 2.2931480407714844, 2.2930216789245605, 2.292893648147583, 2.29276704788208, 2.29263973236084, 2.292511463165283, 2.292384147644043, 2.2922568321228027, 2.2921295166015625, 2.2920022010803223, 2.2918760776519775, 2.2917497158050537, 2.2916221618652344, 2.2914938926696777, 2.291367769241333, 2.2912416458129883, 2.291114330291748, 2.290987730026245, 2.290860414505005, 2.29073166847229, 2.2906041145324707, 2.290475845336914, 2.290348768234253, 2.2902214527130127, 2.290095090866089, 2.2899677753448486, 2.2898402214050293, 2.289712429046631, 2.2895870208740234, 2.289461374282837, 2.2893357276916504, 2.28920841217041, 2.289081335067749, 2.288954019546509, 2.2888283729553223, 2.288701295852661, 2.288574457168579, 2.2884480953216553, 2.2883214950561523, 2.2881948947906494, 2.2880680561065674, 2.2879416942596436, 2.287815570831299, 2.287687063217163, 2.2875609397888184, 2.2874362468719482, 2.2873082160949707, 2.287182331085205, 2.287055730819702, 2.2869300842285156, 2.286803960800171, 2.2866766452789307, 2.286550760269165, 2.2864248752593994, 2.2862987518310547, 2.2861719131469727, 2.286045789718628], "val_accuracy": [0.041999999433755875, 0.041999999433755875, 0.041999999433755875, 0.041999999433755875, 0.0430000014603138, 0.043666668236255646, 0.044333335012197495, 0.044333335012197495, 0.044333335012197495, 0.04466666653752327, 0.04500000178813934, 0.045666664838790894, 0.04600000008940697, 0.04633333161473274, 0.046666666865348816, 0.047333333641290665, 0.047333333641290665, 0.04800000041723251, 0.04833333194255829, 0.04833333194255829, 0.05000000074505806, 0.050999999046325684, 0.05166666582226753, 0.05233333259820938, 0.0533333346247673, 0.05400000140070915, 0.054666668176651, 0.055666666477918625, 0.05700000002980232, 0.058666665107011795, 0.058666665107011795, 0.05966666713356972, 0.06133333221077919, 0.06233333423733711, 0.06366666406393051, 0.06400000303983688, 0.06499999761581421, 0.06599999964237213, 0.06666667014360428, 0.0676666647195816, 0.06800000369548798, 0.06933332979679108, 0.07100000232458115, 0.0716666653752327, 0.0716666653752327, 0.07233333587646484, 0.07333333045244217, 0.07366666942834854, 0.07433333247900009, 0.07533333450555801, 0.07633333653211594, 0.07699999958276749, 0.07733333110809326, 0.07900000363588333, 0.07900000363588333, 0.08033332973718643, 0.0806666687130928, 0.0820000022649765, 0.08266666531562805, 0.08299999684095383, 0.08399999886751175, 0.08566666394472122, 0.08666666597127914, 0.08799999952316284, 0.08799999952316284, 0.08833333104848862, 0.09000000357627869, 0.09033333510160446, 0.09099999815225601, 0.09133332967758179, 0.09300000220537186, 0.09333333373069763, 0.09366666525602341, 0.09533333033323288, 0.09566666930913925, 0.09666666388511658, 0.09700000286102295, 0.09833333641290665, 0.09866666793823242, 0.09966666996479034, 0.10100000351667404, 0.10133333504199982, 0.10166666656732559, 0.10166666656732559, 0.10199999809265137, 0.10333333164453506, 0.10400000214576721, 0.10533333569765091, 0.10533333569765091, 0.10599999874830246, 0.10833333432674408, 0.1106666699051857, 0.11133333295583725, 0.1133333370089531, 0.11366666853427887, 0.11566666513681412, 0.11599999666213989, 0.11766666918992996, 0.11900000274181366, 0.11933333426713943]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 9, 5, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 2, 0, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 74, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 3, 3, 3, 8, 8, 3, 1, 6, 8, 4, 1, 5, 6, 6, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [1, 1, 2, 1, 2, 3, 2, 3, 3, 0, 5, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [77, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [5, 3], [38], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 7, 9, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [46, 9, 43, 71, 34]], "fitness": -0.10885713994503021, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), sigma), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.301398754119873, 2.302584409713745, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09536388516426086, 0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025455474853516, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10899999737739563, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 5, 5, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 2, 0, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 74, 59, 56, 8, 79, 86, 52, 44], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 3, 3, 3, 8, 8, 3, 1, 4, 8, 4, 1, 5, 3, 6, 5, 2, 9, 2, 9, 3, 2, 2, 0, 9], [1, 1, 2, 1, 2, 3, 2, 3, 3, 0, 5, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [77, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [38], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1], [3, 1, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6, 5, 8, 4, 1, 0, 6, 9, 9, 3, 9, 1, 0, 9], [2, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [46, 85, 43, 71, 34, 47, 10, 53]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 27, 27, 15, 12, 1, 1, 1, 0, 1, 0, 42, 29, 13, 8], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, alpha)), tf.math.sqrt(tf.math.multiply(tf.math.subtract(tf.math.pow(tf.math.sqrt(alpha), tf.math.pow(tf.math.add(beta, beta), alpha)), tf.math.subtract(tf.math.square(beta), tf.math.multiply(grad, tf.math.add(beta, beta)))), grad)))), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), grad)))), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.math.multiply(beta, tf.math.add(tf.math.square(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), sigma)), tf.math.multiply(beta, tf.math.subtract(tf.math.pow(beta, tf.math.multiply(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), alpha))), tf.math.add(tf.math.sqrt(alpha), tf.math.divide_no_nan(tf.math.square(tf.math.sqrt(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))), sigma))))), tf.math.pow(beta, tf.math.subtract(tf.math.negative(tf.math.divide_no_nan(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.subtract(beta, tf.math.negative(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))))))), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09259014576673508, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 5, 5, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 2, 0, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 3, 3, 3, 8, 1, 3, 1, 6, 8, 4, 1, 5, 0, 6, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [1, 1, 3, 1, 3, 3, 2, 3, 3, 0, 5, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [77, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [5, 3], [38], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 2, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [46, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 11, 6, 5, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.add(sigma, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.add(sigma, beta), tf.math.square(beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09259014576673508, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 5, 5, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 2, 0, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 3, 3, 3, 8, 8, 3, 1, 6, 8, 4, 1, 5, 6, 6, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [1, 1, 2, 1, 2, 3, 2, 3, 3, 0, 5, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [77, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [0, 3], [38], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 9, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [46, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 27, 27, 15, 12, 1, 1, 1, 0, 1, 1, 4, 2, 2, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, alpha)), tf.math.sqrt(tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(tf.math.sqrt(alpha), tf.math.pow(beta, alpha)), tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))), tf.math.add(beta, tf.math.divide_no_nan(grad, beta)))), grad)))), grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), grad))), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(sigma), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302510976791382, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09259014576673508, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 5, 5, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 2, 0, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 3, 3, 3, 8, 8, 3, 1, 6, 8, 4, 1, 5, 6, 6, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [1, 1, 3, 1, 3, 3, 2, 3, 3, 0, 5, 3, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [77, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [38], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [9, 1, 8, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [10, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 22, 22, 12, 10, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(alpha, tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.multiply(tf.math.add(beta, alpha), tf.math.sqrt(grad)), tf.math.sqrt(tf.math.multiply(tf.math.subtract(alpha, tf.math.divide_no_nan(grad, grad)), tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), tf.math.add(beta, grad)))))))), tf.math.subtract(grad, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3023927211761475, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09496764093637466, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 5, 5, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 2, 0, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 3, 3, 3, 8, 8, 3, 1, 6, 8, 4, 1, 5, 6, 6, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [1, 1, 2, 1, 2, 3, 2, 3, 3, 0, 5, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [77, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [38], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 9, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [1, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [66, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 27, 27, 15, 12, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, alpha)), tf.math.sqrt(tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(tf.math.sqrt(alpha), tf.math.pow(beta, alpha)), tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))), tf.math.add(beta, tf.math.divide_no_nan(grad, beta)))), grad)))), grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), grad))), alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09126931428909302, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 5, 5, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 2, 0, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 3, 3, 3, 8, 8, 3, 1, 4, 9, 6, 1, 5, 4, 6, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [3, 1, 2, 1, 2, 3, 0, 3, 3, 0, 5, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [39, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [38], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 6, 9, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [46, 9, 43, 71, 34]], "fitness": -0.09485714137554169, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 8, 7, 1, 1, 1, 0, 1, 0, 5, 3, 2, 2], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.multiply(tf.math.add(beta, alpha), tf.math.sqrt(tf.math.sqrt(beta))), tf.math.multiply(tf.math.subtract(alpha, beta), tf.math.add(beta, grad))))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.divide_no_nan(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), sigma), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [129423072.0, 149635312.0, 149039408.0, 149269184.0, 149509584.0, 148667552.0], "accuracy": [0.08189142495393753, 0.08228767663240433, 0.08268392831087112, 0.08321225643157959, 0.08585391938686371, 0.08466517180204391], "val_loss": [107433384.0, 107434512.0, 107436344.0, 107439792.0, 107440512.0, 107441192.0], "val_accuracy": [0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 5, 5, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 2, 0, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 3, 3, 3, 8, 1, 3, 1, 0, 8, 4, 1, 5, 0, 9, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [1, 1, 3, 1, 3, 3, 2, 3, 3, 2, 5, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [77, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [38], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [5, 0, 0, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [46, 9, 43, 71, 34]], "fitness": -0.07085714489221573, "mapping_values": [1, 1, 1, 0, 1, 0, 24, 24, 15, 9, 1, 1, 1, 0, 1, 0, 4, 3, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, alpha)), tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.negative(tf.math.sqrt(alpha)), tf.math.pow(grad, alpha)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.math.add(beta, grad)))), beta))), tf.math.negative(grad)), tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.negative(tf.math.negative(sigma)))", "other_info": {"loss": [2.3018369674682617, 2.300121307373047, 2.301290988922119, 2.3015682697296143, 2.2996931076049805, 2.3014144897460938, 2.299644708633423, 2.3000965118408203, 2.3003458976745605, 2.3000478744506836, 2.299970865249634, 2.300124168395996, 2.3006911277770996, 2.299917459487915], "accuracy": [0.08981640636920929, 0.09589222073554993, 0.09589222073554993, 0.09259014576673508, 0.09853387624025345, 0.09906221181154251, 0.09496764093637466, 0.09840179979801178, 0.10196803510189056, 0.10077928751707077, 0.09787346422672272, 0.09642054885625839, 0.09470347315073013, 0.10091137140989304], "val_loss": [2.2981579303741455, 2.2977471351623535, 2.297619342803955, 2.297562837600708, 2.2977395057678223, 2.297640800476074, 2.297584295272827, 2.297487258911133, 2.29740309715271, 2.2974722385406494, 2.297700881958008, 2.2979493141174316, 2.298189878463745, 2.298454523086548], "val_accuracy": [0.04933333396911621, 0.05366666615009308, 0.05833333358168602, 0.060333333909511566, 0.06266666948795319, 0.06599999964237213, 0.06933332979679108, 0.07100000232458115, 0.0729999989271164, 0.0716666653752327, 0.07133333384990692, 0.0689999982714653, 0.0689999982714653, 0.0689999982714653]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 9, 5, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 0, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 3, 3, 3, 8, 1, 3, 1, 6, 8, 4, 1, 5, 0, 6, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [1, 1, 2, 1, 2, 3, 2, 3, 3, 0, 5, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [77, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [38], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 3, 9, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [34, 9, 43, 71, 34]], "fitness": -0.03342857211828232, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), sigma), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302206039428711, 2.3012351989746094, 2.302809715270996, 2.303591012954712, 2.301525831222534, 2.3041253089904785], "accuracy": [0.09074098616838455, 0.09457138925790787, 0.09140139818191528, 0.0878351628780365, 0.09774138033390045, 0.08717474341392517], "val_loss": [2.298830509185791, 2.2988576889038086, 2.2988851070404053, 2.2989118099212646, 2.2989394664764404, 2.298966646194458], "val_accuracy": [0.04066666588187218, 0.04066666588187218, 0.04066666588187218, 0.0403333343565464, 0.0403333343565464, 0.0403333343565464]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 5, 5, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 2, 0, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 3, 3, 3, 8, 8, 3, 1, 6, 8, 4, 1, 5, 6, 6, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [1, 1, 2, 1, 2, 3, 2, 3, 3, 0, 5, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [77, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [38], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [5, 0, 5, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [92, 9, 43, 71, 34]], "fitness": -0.03342857211828232, "mapping_values": [1, 1, 1, 0, 1, 0, 27, 27, 15, 12, 1, 1, 1, 0, 1, 0, 9, 6, 3, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, alpha)), tf.math.sqrt(tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(tf.math.sqrt(alpha), tf.math.pow(beta, alpha)), tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))), tf.math.add(beta, tf.math.divide_no_nan(grad, beta)))), grad)))), grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), grad))), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.negative(tf.math.square(tf.math.multiply(sigma, tf.math.add(tf.math.square(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), sigma)))))", "other_info": {"loss": [2.3021957874298096, 2.3011999130249023, 2.3027493953704834, 2.303506851196289, 2.3014142513275146, 2.3039891719818115], "accuracy": [0.09074098616838455, 0.0948355570435524, 0.09153348207473755, 0.0882314071059227, 0.09800554811954498, 0.08717474341392517], "val_loss": [2.2988033294677734, 2.2988033294677734, 2.2988038063049316, 2.2988038063049316, 2.2988038063049316, 2.2988033294677734], "val_accuracy": [0.041333332657814026, 0.041333332657814026, 0.041333332657814026, 0.041333332657814026, 0.041333332657814026, 0.041333332657814026]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 9, 5, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 3, 0, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 3, 3, 3, 8, 8, 3, 1, 6, 8, 4, 1, 5, 6, 6, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [1, 1, 2, 1, 2, 3, 2, 3, 3, 0, 5, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [77, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [5, 3], [38], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 8, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [0, 9, 43, 71, 34]], "fitness": -0.03342857211828232, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 5, 3, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(sigma)), tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3021960258483887, 2.3011996746063232, 2.3027493953704834, 2.303506851196289, 2.3014142513275146, 2.303989887237549], "accuracy": [0.09074098616838455, 0.0948355570435524, 0.09153348207473755, 0.0882314071059227, 0.09800554811954498, 0.08717474341392517], "val_loss": [2.2988033294677734, 2.2988033294677734, 2.2988033294677734, 2.2988033294677734, 2.2988033294677734, 2.2988033294677734], "val_accuracy": [0.041333332657814026, 0.041333332657814026, 0.041333332657814026, 0.041333332657814026, 0.041333332657814026, 0.041333332657814026]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 9, 5, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 2, 0, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 74, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 3, 3, 3, 8, 8, 3, 1, 6, 8, 4, 1, 5, 6, 6, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [5, 1, 2, 1, 2, 3, 2, 3, 3, 0, 5, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [77, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [5, 3], [38], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 9, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [46, 9, 43, 71, 34]], "fitness": -0.03342857211828232, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.3021960258483887, 2.3011996746063232, 2.3027493953704834, 2.303506851196289, 2.3014142513275146, 2.303989887237549], "accuracy": [0.09074098616838455, 0.0948355570435524, 0.09153348207473755, 0.0882314071059227, 0.09800554811954498, 0.08717474341392517], "val_loss": [2.2988033294677734, 2.2988033294677734, 2.2988033294677734, 2.2988033294677734, 2.2988033294677734, 2.2988033294677734], "val_accuracy": [0.041333332657814026, 0.041333332657814026, 0.041333332657814026, 0.041333332657814026, 0.041333332657814026, 0.041333332657814026]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 5, 5, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 2, 0, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 3, 3, 3, 8, 8, 3, 1, 6, 8, 4, 1, 5, 6, 6, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [1, 1, 2, 1, 2, 3, 2, 3, 3, 0, 5, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [77, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [38], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 5, 9, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [31, 9, 43, 71, 34]], "fitness": -0.028857143595814705, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.302670478820801, 2.302845001220703, 2.3055529594421387, 2.3074445724487305, 2.306628704071045, 2.310347557067871], "accuracy": [0.08968432247638702, 0.09192973375320435, 0.08585391938686371, 0.07991018146276474, 0.0866464152932167, 0.07568352669477463], "val_loss": [2.3000638484954834, 2.3013389110565186, 2.3026065826416016, 2.3038671016693115, 2.3051652908325195, 2.306452512741089], "val_accuracy": [0.03566666692495346, 0.03099999949336052, 0.0273333340883255, 0.023333333432674408, 0.01966666616499424, 0.016333334147930145]}}]