[{"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [3, 5, 2, 4, 5, 1, 2, 3, 2, 1, 5, 2, 9, 3, 2, 6, 0, 5, 0, 2], [1, 2, 1, 1, 2, 0, 1, 2, 0, 0, 0, 3, 2, 2, 2, 3, 0, 3, 1, 2, 0, 0, 0, 0], [28, 55, 35, 17, 95], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [45, 25, 50, 71, 34]], "fitness": -0.7648571133613586, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(alpha, tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0406368480083286, 1.4908501098279106, 1.080942111165847, 0.8992733774388613, 0.8210650109233889, 0.7898335650517971, 0.7159873540957905, 0.7183793636912037, 0.6828103959127393, 0.6576930120353135, 0.635618192306237, 0.6130914295574678, 0.5955441901869919, 0.5957928137410161, 0.5623978060612258], "accuracy": [0.32241448760032654, 0.4776119291782379, 0.59661865234375, 0.6568484902381897, 0.6806234121322632, 0.6934354901313782, 0.7244749665260315, 0.7160216569900513, 0.7386078238487244, 0.7434949278831482, 0.7526086568832397, 0.7613261342048645, 0.7709681391716003, 0.7777044177055359, 0.7841764688491821], "val_loss": [1.6188455649784632, 1.0118496077401298, 0.794063925743103, 0.827632222856794, 0.6536853313446045, 0.5420555898121425, 0.6271052360534668, 0.5208303758076259, 0.513879656791687, 0.5012729678835187, 0.5289053746632167, 0.4864422764096941, 0.48925648416791645, 0.4838373490742275, 0.49553801332201275], "val_accuracy": [0.46000000834465027, 0.5596666932106018, 0.6536666750907898, 0.6326666474342346, 0.6800000071525574, 0.7736666798591614, 0.7269999980926514, 0.7739999890327454, 0.7616666555404663, 0.7806666493415833, 0.7433333396911621, 0.762666642665863, 0.7739999890327454, 0.7706666588783264, 0.7693333625793457]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [5, 2, 4, 6, 0, 1, 9, 3, 0, 1, 2, 0, 2, 4, 2, 4, 0, 5, 6, 0, 4, 5, 6, 2, 0, 5, 2, 4, 6, 6, 6, 6, 5, 6, 0, 3, 4, 6, 1, 1, 2, 2, 2, 2, 0, 8, 3, 8, 9], [0, 1, 2, 2, 2, 0, 1, 2, 2, 0, 0, 0, 2, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [28, 55, 35, 17, 95], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [45, 25, 50, 71, 34]], "fitness": -0.7648571133613586, "mapping_values": [1, 11, 11, 7, 4, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)))), tf.math.add(alpha, grad)))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0406368480083286, 1.4908501098279106, 1.080942111165847, 0.8992733774388613, 0.8210650109233889, 0.7898335650517971, 0.7159873540957905, 0.7183793636912037, 0.6828103959127393, 0.6576930120353135, 0.635618192306237, 0.6130914295574678, 0.5955441901869919, 0.5957928137410161, 0.5623978060612258], "accuracy": [0.32241448760032654, 0.4776119291782379, 0.59661865234375, 0.6568484902381897, 0.6806234121322632, 0.6934354901313782, 0.7244749665260315, 0.7160216569900513, 0.7386078238487244, 0.7434949278831482, 0.7526086568832397, 0.7613261342048645, 0.7709681391716003, 0.7777044177055359, 0.7841764688491821], "val_loss": [1.6188455649784632, 1.0118496077401298, 0.794063925743103, 0.827632222856794, 0.6536853313446045, 0.5420555898121425, 0.6271052360534668, 0.5208303758076259, 0.513879656791687, 0.5012729678835187, 0.5289053746632167, 0.4864422764096941, 0.48925648416791645, 0.4838373490742275, 0.49553801332201275], "val_accuracy": [0.46000000834465027, 0.5596666932106018, 0.6536666750907898, 0.6326666474342346, 0.6800000071525574, 0.7736666798591614, 0.7269999980926514, 0.7739999890327454, 0.7616666555404663, 0.7806666493415833, 0.7433333396911621, 0.762666642665863, 0.7739999890327454, 0.7706666588783264, 0.7693333625793457]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [3, 7, 2, 4, 5, 1, 2, 3, 2, 1, 5, 2, 9, 3, 2, 6, 0, 5, 0, 2], [0, 1, 2, 2, 2, 0, 1, 2, 2, 0, 0, 0, 2, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [28, 55, 35, 17, 95], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [7, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [45, 25, 50, 71, 34]], "fitness": -0.7648571133613586, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0406368480083286, 1.4908501098279106, 1.080942111165847, 0.8992733774388613, 0.8210650109233889, 0.7898335650517971, 0.7159873540957905, 0.7183793636912037, 0.6828103959127393, 0.6576930120353135, 0.635618192306237, 0.6130914295574678, 0.5955441901869919, 0.5957928137410161, 0.5623978060612258], "accuracy": [0.32241448760032654, 0.4776119291782379, 0.59661865234375, 0.6568484902381897, 0.6806234121322632, 0.6934354901313782, 0.7244749665260315, 0.7160216569900513, 0.7386078238487244, 0.7434949278831482, 0.7526086568832397, 0.7613261342048645, 0.7709681391716003, 0.7777044177055359, 0.7841764688491821], "val_loss": [1.6188455649784632, 1.0118496077401298, 0.794063925743103, 0.827632222856794, 0.6536853313446045, 0.5420555898121425, 0.6271052360534668, 0.5208303758076259, 0.513879656791687, 0.5012729678835187, 0.5289053746632167, 0.4864422764096941, 0.48925648416791645, 0.4838373490742275, 0.49553801332201275], "val_accuracy": [0.46000000834465027, 0.5596666932106018, 0.6536666750907898, 0.6326666474342346, 0.6800000071525574, 0.7736666798591614, 0.7269999980926514, 0.7739999890327454, 0.7616666555404663, 0.7806666493415833, 0.7433333396911621, 0.762666642665863, 0.7739999890327454, 0.7706666588783264, 0.7693333625793457]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], [3, 5, 8, 4, 5, 1, 2, 3, 2, 1, 5, 2, 9, 3, 2, 6, 0, 5, 0, 2, 6, 7, 7, 5, 3, 2, 8, 4, 7, 1, 3, 0, 4, 7, 8, 9, 4, 3, 3, 5], [0, 1, 2, 2, 2, 0, 1, 2, 2, 0, 0, 0, 2, 0, 2, 2, 1, 2, 2, 1, 0, 2, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [63, 57, 7, 77, 7, 1, 49, 51, 8, 77, 64, 19, 79, 59], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [32, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [45, 25, 50, 71, 34]], "fitness": -0.7648571133613586, "mapping_values": [1, 65, 65, 40, 25, 10, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.square(tf.math.add(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.pow(tf.math.square(tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(grad, tf.math.add(alpha, grad))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))), tf.math.square(tf.math.add(alpha, alpha)))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))))), tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(grad)), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))))), tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), grad), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.pow(grad, tf.math.add(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, alpha)))), tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), alpha)))), tf.math.add(alpha, tf.math.multiply(tf.math.square(grad), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0406368480083286, 1.4908501098279106, 1.080942111165847, 0.8992733774388613, 0.8210650109233889, 0.7898335650517971, 0.7159873540957905, 0.7183793636912037, 0.6828103959127393, 0.6576930120353135, 0.635618192306237, 0.6130914295574678, 0.5955441901869919, 0.5957928137410161, 0.5623978060612258], "accuracy": [0.32241448760032654, 0.4776119291782379, 0.59661865234375, 0.6568484902381897, 0.6806234121322632, 0.6934354901313782, 0.7244749665260315, 0.7160216569900513, 0.7386078238487244, 0.7434949278831482, 0.7526086568832397, 0.7613261342048645, 0.7709681391716003, 0.7777044177055359, 0.7841764688491821], "val_loss": [1.6188455649784632, 1.0118496077401298, 0.794063925743103, 0.827632222856794, 0.6536853313446045, 0.5420555898121425, 0.6271052360534668, 0.5208303758076259, 0.513879656791687, 0.5012729678835187, 0.5289053746632167, 0.4864422764096941, 0.48925648416791645, 0.4838373490742275, 0.49553801332201275], "val_accuracy": [0.46000000834465027, 0.5596666932106018, 0.6536666750907898, 0.6326666474342346, 0.6800000071525574, 0.7736666798591614, 0.7269999980926514, 0.7739999890327454, 0.7616666555404663, 0.7806666493415833, 0.7433333396911621, 0.762666642665863, 0.7739999890327454, 0.7706666588783264, 0.7693333625793457]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [3, 2, 4, 6, 8, 5, 9, 2, 2, 1, 5, 0, 2, 3, 2, 4, 0, 5, 6, 2, 4, 5, 6, 2, 0, 5, 2, 4, 6, 9, 6, 6, 5, 6, 0, 3, 6, 7, 1, 1, 2, 2], [0, 2, 2, 2, 2, 0, 1, 2, 2, 0, 0, 0, 2, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [31, 62, 7, 94, 7, 1, 49, 51, 8, 77, 64, 19, 79, 59], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [32, 17, 93, 84, 1, 78], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [1, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [44, 25, 50, 71, 34]], "fitness": -0.6757143139839172, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.247273386587572, 1.701218619858033, 1.2271271307927238, 0.9509369164819431, 0.880444028145759, 0.8074738680096099, 0.8074620032763956, 0.7916050003960841, 0.7155539103392613, 0.6850669686631472, 0.6477690419626746, 0.6169908431385329, 0.6004489865112204, 0.5695036545547402, 0.5552104588166488, 0.5505126078666367, 0.5441555652667535, 0.5333669292865381, 0.5195159833775441, 0.5128577425219774, 0.48877818114674715, 0.4894400866252714, 0.4849125852658528, 0.4729193268379972, 0.45293499187487246, 0.4480820889399587, 0.4402480540951371, 0.45419865993067193, 0.4420562448904357, 0.4238192980685616, 0.42058019346533326, 0.4020147163791427, 0.3978018855508513], "accuracy": [0.20618148148059845, 0.44749704003334045, 0.5898824334144592, 0.6476026773452759, 0.6737551093101501, 0.6966054439544678, 0.6980583667755127, 0.7117950320243835, 0.7296261787414551, 0.7506273984909058, 0.7518161535263062, 0.7667415142059326, 0.7687227725982666, 0.78113853931427, 0.7864218950271606, 0.789459764957428, 0.7882710099220276, 0.7973847389221191, 0.7968564033508301, 0.802800178527832, 0.8113855719566345, 0.8074230551719666, 0.8156121969223022, 0.8146876096725464, 0.8235371708869934, 0.83119797706604, 0.828820526599884, 0.8252542614936829, 0.8337075710296631, 0.8364813327789307, 0.841500461101532, 0.8471800088882446, 0.8488970994949341], "val_loss": [1.7537951469421387, 0.8200136423110962, 0.7051920209612165, 0.6274121659142631, 0.5918564626148769, 0.6271886144365583, 0.5863627876554217, 0.5284163951873779, 0.5210955994469779, 0.5036799226488385, 0.46679212365831646, 0.4591719252722604, 0.4488636681011745, 0.43944367340632845, 0.4309183784893581, 0.4272964426449367, 0.4219333955219814, 0.4094564659254892, 0.4113027879170009, 0.40996905735560824, 0.4097804767744882, 0.4061698913574219, 0.39672327041625977, 0.3912273475102016, 0.3996333394731794, 0.39176171166556223, 0.3832944205829075, 0.38053796121052336, 0.3810943535396031, 0.37153216770717074, 0.37425561462129864, 0.375711875302451, 0.3930360674858093], "val_accuracy": [0.43933331966400146, 0.6779999732971191, 0.6683333516120911, 0.7226666808128357, 0.7273333072662354, 0.7459999918937683, 0.746666669845581, 0.7699999809265137, 0.7713333368301392, 0.7826666831970215, 0.7960000038146973, 0.7906666398048401, 0.7976666688919067, 0.7979999780654907, 0.8090000152587891, 0.8116666674613953, 0.8136666417121887, 0.8256666660308838, 0.8273333311080933, 0.8190000057220459, 0.82833331823349, 0.8233333230018616, 0.831333339214325, 0.8346666693687439, 0.8383333086967468, 0.8399999737739563, 0.8450000286102295, 0.856333315372467, 0.8503333330154419, 0.8489999771118164, 0.8546666502952576, 0.8536666631698608, 0.8529999852180481]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [3, 5, 2, 4, 5, 1, 2, 3, 2, 1, 5, 2, 9, 3, 2, 6, 0, 5, 0, 2], [2, 3, 1, 1, 2, 0, 1, 2, 0, 0, 0, 3, 2, 2, 2, 3, 0, 3, 1, 2, 0, 0, 0, 0], [28, 55, 35, 17, 95], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 7, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [45, 25, 50, 71, 34]], "fitness": -0.42971429228782654, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.0084650345828634, 2.164500015129298, NaN, NaN, NaN, NaN], "accuracy": [0.340509831905365, 0.38660678267478943, 0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.2761360577174596, 12142.183035714286, NaN, NaN, NaN, NaN], "val_accuracy": [0.43033334612846375, 0.0976666659116745, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [6, 2, 2, 4, 8, 1, 1, 3, 2, 1, 5, 2, 9, 3, 2, 6, 0, 5, 0, 2], [1, 2, 2, 1, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2, 2, 3, 0, 3, 1, 2, 0, 0, 0, 0], [40, 55, 35, 17, 95], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [99, 25, 50, 71, 34]], "fitness": -0.22285714745521545, "mapping_values": [1, 10, 10, 5, 5, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(grad, tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.452137758104856, 2.3856159734089832, 2.2817473787877853, 2.276304376942528, 2.304282523448583, 2.2983416611917455, 2.2359864033444716, 2.304081140460749], "accuracy": [0.2067098170518875, 0.1592920422554016, 0.13261127471923828, 0.15361246466636658, 0.09813763201236725, 0.12310130894184113, 0.16602826118469238, 0.09826971590518951], "val_loss": [2.352626051221575, 1.9773528916495187, 1.5307280676705497, 1.9747983387538366, 1.9725265502929688, 1.9440196582249232, 1.9754852567400252, 1.9738075392586845], "val_accuracy": [0.29600000381469727, 0.10233332961797714, 0.35866665840148926, 0.10400000214576721, 0.10233332961797714, 0.1809999942779541, 0.09700000286102295, 0.09733333438634872]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [3, 4, 2, 4, 5, 1, 2, 3, 2, 1, 5, 2, 9, 3, 2, 6, 0, 5, 0, 2], [0, 1, 0, 2, 1, 0, 1, 2, 2, 0, 0, 2, 2, 2, 3, 1, 2, 2, 2, 1, 0, 0, 1, 3, 3, 2, 0, 2, 0, 0], [28, 55, 35, 17, 95], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [1, 3], [], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [2, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [45, 25, 50, 71, 34]], "fitness": -0.22285714745521545, "mapping_values": [1, 14, 14, 7, 7, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), tf.math.add(alpha, alpha)), tf.math.add(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.452137758104856, 2.3856159734089832, 2.2817473787877853, 2.276304376942528, 2.304282523448583, 2.2983416611917455, 2.2359864033444716, 2.304081140460749], "accuracy": [0.2067098170518875, 0.1592920422554016, 0.13261127471923828, 0.15361246466636658, 0.09813763201236725, 0.12310130894184113, 0.16602826118469238, 0.09826971590518951], "val_loss": [2.352626051221575, 1.9773528916495187, 1.5307280676705497, 1.9747983387538366, 1.9725265502929688, 1.9440196582249232, 1.9754852567400252, 1.9738075392586845], "val_accuracy": [0.29600000381469727, 0.10233332961797714, 0.35866665840148926, 0.10400000214576721, 0.10233332961797714, 0.1809999942779541, 0.09700000286102295, 0.09733333438634872]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [3, 5, 2, 4, 5, 1, 2, 3, 2, 1, 5, 2, 9, 3, 2, 6, 0, 5, 0, 2], [1, 2, 1, 1, 2, 0, 1, 2, 0, 0, 0, 3, 2, 2, 2, 3, 0, 3, 1, 2, 0, 0, 0, 0], [28, 55, 35, 17, 95], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [71, 25, 50, 71, 34]], "fitness": -0.21314285695552826, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.440811814759244, 2.5183121051770696, 2.2989264740967212, 2.3391355421438886, 2.3048670540364853, 2.302963101175782, 2.2986769436561767, 2.297677390280338], "accuracy": [0.20420023798942566, 0.15889579057693481, 0.10487385839223862, 0.15678246319293976, 0.09602430462837219, 0.10342095047235489, 0.11887465417385101, 0.12600713968276978], "val_loss": [2.829716750553676, 1.977597645350865, 1.8517445836748396, 1.975681986127581, 1.9738038608006068, 1.972951820918492, 1.952831404549735, 1.974142619541713], "val_accuracy": [0.19966666400432587, 0.09833333641290665, 0.20233333110809326, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.14900000393390656, 0.09700000286102295]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], [5, 2, 4, 6, 0, 1, 9, 3, 0, 1, 2, 0, 5, 4, 2, 4, 0, 5, 6, 0, 4, 5, 6, 2, 0, 5, 2, 4, 6, 6, 6, 6, 5, 6, 0, 3, 4, 6, 1, 1, 2, 2, 2, 2, 0, 8, 3, 8, 9], [0, 1, 2, 2, 2, 0, 1, 2, 2, 0, 0, 0, 2, 0, 2, 1, 2, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [31, 62, 7, 77, 7, 1, 86, 51, 48, 92, 64, 19, 79, 59], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [2, 3, 9, 9, 2, 9], [2, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [45, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 28, 28, 18, 10, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)))), tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(grad, tf.math.add(alpha, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))))), tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))))))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07885351777076721, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1], [1, 2, 4, 6, 8, 1, 9, 3, 2, 1, 5, 0, 2, 3, 2, 4, 0, 5, 6, 2, 4, 0, 6, 2, 0, 5, 2, 4, 6, 9, 6, 6, 5, 6, 0, 2, 6, 3, 1, 1, 2, 2], [0, 0, 2, 2, 2, 0, 1, 2, 2, 0, 0, 3, 2, 2, 2, 0, 2, 2, 2, 1, 0, 0, 2, 3, 3, 2, 0, 2, 0, 0], [28, 55, 35, 17, 95, 38, 56, 93, 36], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 2, 2, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [44, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 26, 26, 15, 11, 6, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(grad, grad)))), tf.math.subtract(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), grad)), tf.math.add(alpha, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))))))))))))), tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(sigma, tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [182437.68055367365, 2.3192369522844967, 2.3042539875379187, 2.3034548007769593, 2.303545100798208, 2.30330523970955, 2.303223611719305, 2.30336468778093], "accuracy": [0.09272222965955734, 0.09430722147226334, 0.10051512718200684, 0.09642054885625839, 0.09602430462837219, 0.09589222073554993, 0.09655263274908066, 0.09734513610601425], "val_loss": [2.0079266003199985, 1.9764974457877023, 1.9738739558628626, 1.97383451461792, 1.9736909866333008, 1.9738948004586356, 1.9738803591047014, 1.9738212994166784], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.10400000214576721, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.09700000286102295, 0.0976666659116745]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [3, 2, 2, 4, 5, 1, 1, 3, 2, 1, 5, 2, 9, 3, 2, 6, 0, 5, 8, 2, 2, 3, 2, 2, 1, 3, 0, 4, 8], [1, 2, 2, 1, 2, 0, 1, 2, 0, 0, 0, 3, 2, 2, 2, 0, 0, 3, 1, 2, 0, 0, 0, 0], [40, 92, 61, 17, 95, 81], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [6, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [45, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 25, 25, 14, 11, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)), tf.math.add(tf.math.pow(tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.subtract(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(alpha)))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.302785327043736, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [3, 2, 2, 4, 5, 1, 1, 3, 2, 1, 5, 2, 9, 3, 2, 6, 0, 5, 0, 2], [1, 2, 2, 1, 2, 0, 1, 2, 0, 0, 0, 3, 2, 2, 2, 3, 0, 3, 1, 2, 0, 0, 0, 0], [40, 55, 35, 17, 95], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [2, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [45, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 23, 13, 10, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(tf.math.pow(tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, alpha))), tf.math.multiply(grad, tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08334434032440186, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [3, 5, 2, 4, 5, 1, 2, 3, 2, 1, 5, 2, 9, 3, 2, 6, 0, 5, 0, 2], [1, 3, 1, 1, 2, 0, 1, 2, 0, 0, 0, 3, 2, 2, 2, 3, 0, 3, 1, 2, 0, 0, 0, 0], [28, 55, 35, 17, 95], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [9, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [74, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(alpha, tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302785327043736, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 0, 4, 6, 8, 6, 9, 3, 2, 1, 5, 0, 2, 8, 2, 4, 4, 5, 6, 2, 4, 5, 6, 2, 0, 6, 2, 4, 6, 9, 6, 6, 5, 6, 0, 3, 6, 7, 1, 1, 2, 2], [3, 2, 0, 2, 1, 0, 1, 2, 2, 0, 0, 2, 2, 2, 3, 1, 2, 2, 2, 1, 0, 0, 1, 3, 3, 2, 0, 2, 0, 0], [79, 62, 7, 77, 7, 1, 49, 51, 79, 77, 64, 19, 79, 59], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1], [5, 8, 9, 9, 2, 9], [2, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [0, 25, 50, 71, 34]], "fitness": -0.07028571516275406, "mapping_values": [1, 4, 4, 2, 2, 0, 13, 13, 8, 5, 3, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(beta)", "other_info": {"loss": [2.3022503643113987, 2.3011419135723385, 2.3006736034919335, 2.300613542668115, 2.3010531829380008, 2.3017893820044515, 2.301084406450519, 2.300646873717736, 2.3007409462067807, 2.3015848414111586, 2.301069401951514, 2.3003622948643145, 2.3009800413706363, 2.300778501557479, 2.3018694886945856, 2.3011372034591595, 2.3017710037770573, 2.3015523523686663], "accuracy": [0.09628847241401672, 0.09245806187391281, 0.09192973375320435, 0.10011887550354004, 0.0886276587843895, 0.09245806187391281, 0.08836349099874496, 0.09536388516426086, 0.08942015469074249, 0.08809932321310043, 0.09206181764602661, 0.09985470771789551, 0.09047681838274002, 0.08558975160121918, 0.08532558381557465, 0.09113723784685135, 0.08691058307886124, 0.09298639744520187], "val_loss": [1.9701952253069197, 1.9699675015040807, 1.9701718602861678, 1.9702331679207938, 1.9702886853899275, 1.9704841205051966, 1.970541068485805, 1.9705990382603236, 1.9705050332205636, 1.9704204968043737, 1.9703696795872279, 1.9704835755484444, 1.9705680438450404, 1.9707725388663155, 1.97095673424857, 1.97111599785941, 1.971247945513044, 1.971318244934082], "val_accuracy": [0.044333335012197495, 0.04833333194255829, 0.04699999839067459, 0.04699999839067459, 0.047333333641290665, 0.04833333194255829, 0.049666665494441986, 0.052000001072883606, 0.05299999937415123, 0.054666668176651, 0.05700000002980232, 0.05766666680574417, 0.059333331882953644, 0.0560000017285347, 0.054666668176651, 0.052000001072883606, 0.05066666752099991, 0.04899999871850014]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [2, 2, 4, 6, 8, 8, 9, 3, 2, 1, 5, 0, 2, 3, 2, 4, 4, 5, 6, 2, 4, 5, 6, 2, 0, 6, 2, 4, 6, 9, 6, 6, 5, 6, 0, 3, 6, 7, 1, 1, 2, 2], [2, 2, 2, 1, 2, 0, 1, 1, 0, 2, 0, 2, 2, 2, 0, 1, 1, 2, 2, 3, 2, 1, 2, 1], [40, 55, 35, 17, 95], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 0, 1, 3, 0, 2, 1, 3, 0, 0], [67, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [6, 3, 9, 9, 2, 9], [1, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [0, 25, 50, 71, 34]], "fitness": -0.04028571397066116, "mapping_values": [1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(grad, grad))), lambda shape,  alpha, beta, grad: tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.3024220608008488, 2.3018097523543277, 2.3011846775392013, 2.301436531230396, 2.30168529858033, 2.3024812985751386], "accuracy": [0.09734513610601425, 0.09153348207473755, 0.09153348207473755, 0.09721305221319199, 0.08928807079792023, 0.08519349992275238], "val_loss": [1.970531736101423, 1.970519747052874, 1.970512526375907, 1.9705074174063546, 1.970503466469901, 1.9705004692077637], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [3, 5, 2, 4, 5, 1, 2, 3, 2, 1, 5, 2, 9, 3, 2, 6, 0, 5, 0, 2], [1, 2, 1, 1, 2, 0, 1, 2, 0, 0, 0, 3, 2, 2, 2, 3, 0, 3, 1, 2, 0, 0, 0, 0], [79, 62, 7, 77, 7, 1, 49, 51, 79, 77, 64, 19, 79, 59], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [6, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [0, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.square(alpha)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(sigma, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.302463859410224, 2.3018789069684993, 2.301262923550407, 2.301521043389496, 2.301775150893623, 2.3025751860228985], "accuracy": [0.09721305221319199, 0.09140139818191528, 0.09113723784685135, 0.09721305221319199, 0.08889182657003403, 0.08519349992275238], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], [3, 2, 4, 6, 0, 1, 9, 3, 8, 1, 5, 3, 2, 3, 2, 4, 0, 5, 6, 2, 4, 5, 6, 2, 0, 5, 2, 4, 6, 9, 6, 6, 5, 6, 0, 3, 6, 7, 1, 1, 2, 2], [0, 1, 2, 2, 2, 0, 1, 2, 0, 0, 0, 3, 2, 2, 3, 1, 2, 2, 2, 1, 0, 0, 1, 3, 3, 2, 0, 2, 0, 0], [31, 62, 7, 77, 95, 1, 49, 51, 8, 77, 64, 19, 79, 59], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 0, 1, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [6, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [44, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 26, 26, 15, 11, 6, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))), tf.math.square(tf.math.add(alpha, grad)))))))), tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(grad, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))))))))), tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(sigma, beta)", "other_info": {"loss": [2.302463859410224, 2.3018789069684993, 2.301262923550407, 2.301521043389496, 2.301775150893623, 2.3025751860228985], "accuracy": [0.09721305221319199, 0.09140139818191528, 0.09113723784685135, 0.09721305221319199, 0.08889182657003403, 0.08519349992275238], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1], [5, 2, 4, 2, 0, 1, 9, 3, 0, 4, 2, 0, 0, 4, 0, 4, 5, 5, 6, 0, 4, 5, 6, 2, 0, 5, 2, 4, 6, 6, 2, 6, 5, 6, 0, 3, 5, 6, 1, 1, 2, 2, 2, 2, 0, 8, 3, 8, 9], [1, 2, 2, 1, 2, 0, 1, 2, 0, 0, 0, 3, 2, 2, 2, 3, 0, 3, 1, 2, 0, 0, 1, 0, 3, 0, 1, 2], [31, 62, 54, 77, 7, 1, 49, 51, 27, 77, 64, 19, 79, 59], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [6, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [45, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 26, 26, 17, 9, 3, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 5, 3, 2, 1], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, alpha), tf.math.pow(grad, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(grad, tf.math.add(alpha, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))))), tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)))))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.302463859410224, 2.3018789069684993, 2.301262923550407, 2.301521043389496, 2.301775150893623, 2.3025751860228985], "accuracy": [0.09721305221319199, 0.09140139818191528, 0.09113723784685135, 0.09721305221319199, 0.08889182657003403, 0.08519349992275238], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [2, 2, 4, 8, 6, 1, 2, 3, 2, 1, 5, 8, 9, 3, 2, 6, 0, 5, 0, 2, 4, 3, 9, 4, 7, 6, 5, 9, 2, 6, 5, 4, 0, 6, 4, 2, 3, 2, 7, 9], [2, 1, 0, 2, 0, 0, 1, 2, 2, 0, 2, 2, 2, 2, 3, 1, 2, 2, 2, 1, 0, 0, 1, 3, 3, 2, 0, 2, 0, 0], [31, 62, 21, 77, 7, 1, 40, 51, 8, 77, 64, 19, 79, 59], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 0, 1, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [6, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [44, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 10, 10, 5, 5, 2, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.302463859410224, 2.3018789069684993, 2.301262923550407, 2.301521043389496, 2.301775150893623, 2.3025751860228985], "accuracy": [0.09721305221319199, 0.09140139818191528, 0.09113723784685135, 0.09721305221319199, 0.08889182657003403, 0.08519349992275238], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]