[{"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [6, 74, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [7, 3, 8, 2, 9, 4, 0, 9, 2, 8, 9, 2, 1, 6, 6, 8, 9, 4, 2], [5, 3, 3, 1, 1, 3, 2, 0, 3, 0, 5, 1, 4, 1, 4], [16, 20, 50, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [48, 9, 43, 71, 34]], "fitness": -0.8271428346633911, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.multiply(grad, tf.math.add(beta, grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1049556732177734, 1.6497174501419067, 1.3231511116027832, 0.9801627397537231, 0.8655325770378113, 0.801362931728363, 0.760749876499176, 0.7345766425132751, 0.6787088513374329, 0.6551820635795593, 0.6123055815696716, 0.5759944915771484, 0.5792955160140991, 0.5612355470657349, 0.5793477296829224, 0.5522793531417847, 0.49488601088523865, 0.5132753252983093, 0.5103012919425964, 0.47110405564308167, 0.4754389524459839, 0.47942522168159485, 0.45340612530708313, 0.4536961615085602, 0.4479309022426605, 0.43553411960601807, 0.4357259273529053, 0.4109586179256439, 0.4087347686290741, 0.39600953459739685, 0.4024435579776764], "accuracy": [0.302469938993454, 0.44089287519454956, 0.5469554662704468, 0.6454893946647644, 0.6733588576316833, 0.6902654767036438, 0.702681303024292, 0.7079645991325378, 0.7392682433128357, 0.7452120184898376, 0.7640998363494873, 0.7823272943496704, 0.7766477465629578, 0.7823272943496704, 0.7784969210624695, 0.7824593782424927, 0.8145555257797241, 0.8050455451011658, 0.8095363974571228, 0.8198388814926147, 0.8189142942428589, 0.8170651197433472, 0.8297450542449951, 0.8302733898162842, 0.8304054737091064, 0.8362171649932861, 0.8334434032440186, 0.8429533839225769, 0.846387505531311, 0.8496896028518677, 0.8457271456718445], "val_loss": [1.9237086772918701, 1.162961721420288, 0.9269388318061829, 0.843286395072937, 0.8357070088386536, 0.6670215725898743, 0.6990521550178528, 0.569096028804779, 0.6542010307312012, 0.5390661358833313, 0.525667130947113, 0.49415522813796997, 0.5035552382469177, 0.5617210865020752, 0.5542336106300354, 0.4619964063167572, 0.5263530015945435, 0.45178335905075073, 0.4534394145011902, 0.4633252024650574, 0.44868704676628113, 0.41858354210853577, 0.4971849322319031, 0.4241120219230652, 0.44450831413269043, 0.39763280749320984, 0.4382290542125702, 0.4267694354057312, 0.41661518812179565, 0.40298542380332947, 0.41325414180755615], "val_accuracy": [0.3959999978542328, 0.6290000081062317, 0.6809999942779541, 0.7026666402816772, 0.6600000262260437, 0.7279999852180481, 0.7083333134651184, 0.7870000004768372, 0.749666690826416, 0.7960000038146973, 0.8033333420753479, 0.8106666803359985, 0.79666668176651, 0.7786666750907898, 0.7446666955947876, 0.8246666789054871, 0.796999990940094, 0.8386666774749756, 0.8299999833106995, 0.8186666369438171, 0.8356666564941406, 0.8503333330154419, 0.7996666431427002, 0.8546666502952576, 0.828000009059906, 0.8566666841506958, 0.8273333311080933, 0.8399999737739563, 0.8476666808128357, 0.8529999852180481, 0.8456666469573975]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [6, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [8, 3, 0, 5, 9, 4, 1, 9, 2, 8, 9, 2, 1, 6, 6, 8, 9, 4, 2], [0, 3, 3, 1, 1, 3, 2, 0, 3, 0, 5, 1, 4, 1, 4], [56, 94, 50, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [48, 9, 43, 71, 34]], "fitness": -0.8257142901420593, "mapping_values": [1, 1, 1, 0, 1, 1, 6, 6, 5, 1, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.multiply(tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1047797203063965, 1.6931169033050537, 1.2362077236175537, 1.1027969121932983, 0.8764058351516724, 0.7938336730003357, 0.732729971408844, 0.7239406108856201, 0.6593735814094543, 0.6649590134620667, 0.589187741279602, 0.5980462431907654, 0.579375684261322, 0.5794649124145508, 0.5345130562782288, 0.5370458364486694, 0.497329443693161, 0.5093498229980469, 0.49136242270469666, 0.4697677791118622, 0.4713016450405121, 0.4784652292728424, 0.45714902877807617, 0.45541104674339294, 0.42932671308517456, 0.41101911664009094, 0.45242249965667725, 0.41495800018310547, 0.39692530035972595, 0.4039604067802429, 0.3918369710445404, 0.4058249294757843, 0.37594401836395264, 0.38287633657455444, 0.38024893403053284, 0.36269769072532654, 0.36714741587638855, 0.34384721517562866, 0.3432229459285736, 0.34605422616004944, 0.3357445299625397, 0.33799347281455994, 0.32653456926345825, 0.306766539812088, 0.33142170310020447, 0.30004599690437317, 0.31271111965179443, 0.3036377429962158, 0.30500656366348267, 0.29304295778274536, 0.3074074983596802, 0.28814244270324707], "accuracy": [0.30260202288627625, 0.43904373049736023, 0.563730001449585, 0.6091665625572205, 0.6787742972373962, 0.6964733600616455, 0.7199841737747192, 0.7143045663833618, 0.7424382567405701, 0.7471932172775269, 0.7730814814567566, 0.7726852297782898, 0.7792893648147583, 0.7794214487075806, 0.7985734939575195, 0.7858935594558716, 0.8101968169212341, 0.8047813773155212, 0.8108572363853455, 0.8191784620285034, 0.8193105459213257, 0.8189142942428589, 0.821820080280304, 0.8293488025665283, 0.8360850811004639, 0.8466516733169556, 0.8251221776008606, 0.8417646288871765, 0.8508783578872681, 0.8453308939933777, 0.8495575189590454, 0.848368763923645, 0.8549728989601135, 0.8581429123878479, 0.8524633646011353, 0.8634262084960938, 0.863558292388916, 0.8705587387084961, 0.8745211958885193, 0.867520809173584, 0.8733324408531189, 0.8702945709228516, 0.8733324408531189, 0.886672854423523, 0.8751816153526306, 0.8942015767097473, 0.8817857503890991, 0.8831065893173218, 0.8825782537460327, 0.889050304889679, 0.8775591254234314, 0.8901069760322571], "val_loss": [1.9329160451889038, 1.2603439092636108, 1.0817439556121826, 0.8904426097869873, 0.7491933703422546, 0.6702812910079956, 0.7424536347389221, 0.5681565999984741, 0.5450990200042725, 0.5528904795646667, 0.5589697957038879, 0.5995632410049438, 0.48037344217300415, 0.4931550621986389, 0.5095988512039185, 0.4803239703178406, 0.5106622576713562, 0.4451555609703064, 0.4863772690296173, 0.4893312156200409, 0.4346141815185547, 0.4422896206378937, 0.5026558637619019, 0.42092984914779663, 0.40643659234046936, 0.42476123571395874, 0.454263836145401, 0.4182131886482239, 0.39599356055259705, 0.40029287338256836, 0.4828561246395111, 0.39380308985710144, 0.3794689178466797, 0.3889065384864807, 0.3773018717765808, 0.4522688686847687, 0.37835440039634705, 0.3908309042453766, 0.38139933347702026, 0.3750842213630676, 0.3922387659549713, 0.36143168807029724, 0.37427717447280884, 0.3736516833305359, 0.37080806493759155, 0.3637731075286865, 0.36425748467445374, 0.3686463236808777, 0.36986199021339417, 0.3723400831222534, 0.3686428368091583, 0.3908156752586365], "val_accuracy": [0.39233332872390747, 0.5910000205039978, 0.6309999823570251, 0.706333339214325, 0.6990000009536743, 0.7413333058357239, 0.6850000023841858, 0.7799999713897705, 0.7973333597183228, 0.7703333497047424, 0.7956666946411133, 0.7633333206176758, 0.8206666707992554, 0.8209999799728394, 0.7883333563804626, 0.8199999928474426, 0.8026666641235352, 0.8460000157356262, 0.8146666884422302, 0.8106666803359985, 0.8489999771118164, 0.831333339214325, 0.7946666479110718, 0.8446666598320007, 0.8523333072662354, 0.8556666374206543, 0.8253333568572998, 0.8483333587646484, 0.8576666712760925, 0.8613333106040955, 0.8026666641235352, 0.8613333106040955, 0.8686666488647461, 0.8586666584014893, 0.8640000224113464, 0.8240000009536743, 0.8696666955947876, 0.8643333315849304, 0.8700000047683716, 0.8703333139419556, 0.8569999933242798, 0.8726666569709778, 0.8679999709129333, 0.8730000257492065, 0.8650000095367432, 0.8773333430290222, 0.8776666522026062, 0.8663333058357239, 0.8740000128746033, 0.8676666617393494, 0.8709999918937683, 0.8603333234786987]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [6, 74, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [7, 3, 0, 2, 9, 4, 0, 9, 2, 8, 9, 2, 1, 6, 6, 8, 9, 4, 2], [0, 3, 3, 1, 1, 3, 2, 0, 3, 0, 5, 1, 4, 1, 4], [56, 20, 50, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [48, 9, 43, 71, 34]], "fitness": -0.8151428699493408, "mapping_values": [1, 1, 1, 0, 1, 1, 11, 11, 7, 4, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.104769706726074, 1.6956965923309326, 1.2717846632003784, 0.986944854259491, 0.9056226015090942, 0.8892779350280762, 0.7600134015083313, 0.6863653063774109, 0.6895838975906372, 0.638247013092041, 0.6057034134864807, 0.6039040684700012, 0.5732827186584473, 0.5677726864814758, 0.544194221496582, 0.5288516283035278, 0.5250632166862488, 0.5028407573699951, 0.5034964680671692, 0.48256826400756836, 0.4695979058742523, 0.46534183621406555, 0.44914132356643677, 0.477373868227005, 0.43558427691459656, 0.41351354122161865, 0.4450293481349945, 0.41468584537506104, 0.40062353014945984, 0.3927159607410431, 0.41524073481559753, 0.3999755084514618, 0.37362924218177795, 0.38106271624565125, 0.37713372707366943, 0.34760555624961853, 0.36246541142463684, 0.36646002531051636, 0.3509156405925751, 0.34572523832321167, 0.3355444669723511], "accuracy": [0.30260202288627625, 0.43891164660453796, 0.5502575635910034, 0.6292431354522705, 0.6602826714515686, 0.6664905548095703, 0.7083608508110046, 0.7318716049194336, 0.735569953918457, 0.7531369924545288, 0.7643640041351318, 0.7663452625274658, 0.7783648371696472, 0.7836481332778931, 0.7932901978492737, 0.7935543656349182, 0.7967243194580078, 0.8094043135643005, 0.806630551815033, 0.8127063512802124, 0.8191784620285034, 0.8235371708869934, 0.8308017253875732, 0.8212917447090149, 0.8341038227081299, 0.8492933511734009, 0.8251221776008606, 0.8442742228507996, 0.8479725122451782, 0.8494254350662231, 0.8418967127799988, 0.8511425256729126, 0.8593316674232483, 0.8621054291725159, 0.8556333184242249, 0.8679170608520508, 0.8626337051391602, 0.8618412613868713, 0.872407853603363, 0.8677849769592285, 0.876370370388031], "val_loss": [1.9313991069793701, 1.3309394121170044, 0.9145157933235168, 0.8241174221038818, 0.8444505333900452, 0.6678386926651001, 0.6486033797264099, 0.69888836145401, 0.6305665373802185, 0.5516919493675232, 0.5309675931930542, 0.4914810359477997, 0.5623270273208618, 0.5056045651435852, 0.5121294856071472, 0.46654975414276123, 0.4361802637577057, 0.46015095710754395, 0.4406004548072815, 0.4579058289527893, 0.45078808069229126, 0.4551120102405548, 0.5449076890945435, 0.44125041365623474, 0.4035855829715729, 0.40503790974617004, 0.4263165593147278, 0.4184609353542328, 0.4307764172554016, 0.38902848958969116, 0.46919599175453186, 0.386532723903656, 0.3840585947036743, 0.3767266571521759, 0.3775741755962372, 0.38220396637916565, 0.37584188580513, 0.4369165897369385, 0.382633775472641, 0.3959798216819763, 0.3895205855369568], "val_accuracy": [0.39533331990242004, 0.5766666531562805, 0.6690000295639038, 0.6576666831970215, 0.6370000243186951, 0.7403333187103271, 0.7353333234786987, 0.7239999771118164, 0.749666690826416, 0.7743333578109741, 0.7926666736602783, 0.8133333325386047, 0.7776666879653931, 0.8046666383743286, 0.7883333563804626, 0.8199999928474426, 0.8379999995231628, 0.8316666483879089, 0.8386666774749756, 0.8386666774749756, 0.8403333425521851, 0.8266666531562805, 0.7883333563804626, 0.8389999866485596, 0.8526666760444641, 0.8560000061988831, 0.8393333554267883, 0.8463333249092102, 0.8366666436195374, 0.8663333058357239, 0.812666654586792, 0.8640000224113464, 0.8676666617393494, 0.8676666617393494, 0.8636666536331177, 0.8686666488647461, 0.8686666488647461, 0.8473333120346069, 0.8636666536331177, 0.8669999837875366, 0.8613333106040955]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [6, 74, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [7, 2, 0, 2, 9, 4, 0, 9, 2, 8, 9, 2, 1, 6, 6, 8, 9, 4, 2], [0, 3, 3, 1, 1, 3, 2, 0, 3, 0, 5, 1, 4, 1, 4], [56, 20, 50, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [48, 9, 43, 71, 34]], "fitness": -0.8054285645484924, "mapping_values": [1, 1, 1, 0, 1, 1, 11, 11, 8, 3, 3, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1049585342407227, 1.6595687866210938, 1.4713867902755737, 1.050353765487671, 0.8852820992469788, 0.8039571046829224, 0.708954930305481, 0.7056600451469421, 0.6857635378837585, 0.6236969232559204, 0.6099112033843994, 0.5841289758682251, 0.5688357949256897, 0.5719932913780212, 0.5666688084602356, 0.5239567160606384, 0.5016466975212097, 0.5032749772071838, 0.5049418210983276, 0.4717828631401062, 0.4735281765460968, 0.4577302634716034, 0.45056888461112976, 0.4957354664802551, 0.4331280589103699, 0.43043360114097595, 0.42756396532058716, 0.40405574440956116, 0.40467962622642517, 0.3889884650707245, 0.3811502456665039, 0.39811307191848755, 0.37541940808296204, 0.39029085636138916, 0.38867589831352234], "accuracy": [0.302469938993454, 0.43851539492607117, 0.5126138925552368, 0.6112799048423767, 0.6701889038085938, 0.6900013089179993, 0.7277770638465881, 0.7190595865249634, 0.7371549606323242, 0.7623828053474426, 0.7617223858833313, 0.776251494884491, 0.7771760821342468, 0.7814027070999146, 0.7849689722061157, 0.7926297783851624, 0.8090080618858337, 0.8094043135643005, 0.8049134612083435, 0.8198388814926147, 0.8158763647079468, 0.8297450542449951, 0.8330471515655518, 0.8153480291366577, 0.8363492488861084, 0.8364813327789307, 0.8401796221733093, 0.8457271456718445, 0.8481045961380005, 0.8549728989601135, 0.8560295701026917, 0.8459912538528442, 0.8573504090309143, 0.8520671129226685, 0.8560295701026917], "val_loss": [1.9237496852874756, 1.201542615890503, 0.9800225496292114, 0.7059295773506165, 0.6771705150604248, 0.6278306841850281, 0.5841567516326904, 0.7034443616867065, 0.6158401966094971, 0.5173086524009705, 0.5293710231781006, 0.48926061391830444, 0.5933936238288879, 0.4765406847000122, 0.5111204385757446, 0.46577319502830505, 0.5021670460700989, 0.4676784574985504, 0.43879419565200806, 0.46540367603302, 0.44997769594192505, 0.4639195203781128, 0.5749256610870361, 0.4237765669822693, 0.41357406973838806, 0.39818519353866577, 0.41984009742736816, 0.40995246171951294, 0.4169099032878876, 0.38765135407447815, 0.4591582119464874, 0.3894096314907074, 0.3986119031906128, 0.4098244607448578, 0.37791502475738525], "val_accuracy": [0.39533331990242004, 0.6076666712760925, 0.624666690826416, 0.7210000157356262, 0.7526666522026062, 0.7716666460037231, 0.7670000195503235, 0.7276666760444641, 0.7620000243186951, 0.8046666383743286, 0.8033333420753479, 0.8109999895095825, 0.7680000066757202, 0.8220000267028809, 0.7873333096504211, 0.828000009059906, 0.8046666383743286, 0.8309999704360962, 0.8389999866485596, 0.8143333196640015, 0.8330000042915344, 0.8226666450500488, 0.7823333144187927, 0.8483333587646484, 0.8460000157356262, 0.8633333444595337, 0.843999981880188, 0.8510000109672546, 0.8479999899864197, 0.8673333525657654, 0.8299999833106995, 0.8643333315849304, 0.8569999933242798, 0.843999981880188, 0.8659999966621399]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [6, 74, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [7, 3, 4, 8, 4, 4, 3, 9, 2, 8, 9, 2, 1, 6, 6, 8, 9, 4, 2], [1, 0, 3, 1, 1, 2, 2, 0, 3, 0, 5, 1, 4, 1, 4], [56, 20, 50, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [30, 9, 43, 71, 34]], "fitness": -0.7871428728103638, "mapping_values": [1, 1, 1, 0, 1, 1, 14, 14, 8, 6, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, alpha))), tf.math.add(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, alpha))), tf.math.add(beta, alpha))), tf.math.add(beta, beta))), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2871694564819336, 2.244767427444458, 2.1900479793548584, 2.0984907150268555, 1.9687198400497437, 1.7882004976272583, 1.594853401184082, 1.4414242506027222, 1.322385549545288, 1.2315928936004639, 1.171467661857605, 1.1124248504638672, 1.0648884773254395, 1.0304131507873535, 0.9954227805137634, 0.9830268025398254, 0.9471356272697449, 0.9304445385932922, 0.908291220664978, 0.8977013230323792, 0.867735743522644, 0.8632073998451233, 0.847761869430542, 0.8360331654548645, 0.8304239511489868, 0.8232390880584717, 0.8132872581481934, 0.8109979629516602, 0.8024372458457947, 0.7915958166122437, 0.7880986928939819, 0.7714916467666626, 0.7703799605369568, 0.7701568007469177, 0.7509269714355469, 0.74848473072052, 0.7450367212295532, 0.7409475445747375, 0.7396891713142395, 0.7283034920692444, 0.724738597869873, 0.7124541401863098, 0.7217493057250977, 0.7124602794647217, 0.7116523385047913, 0.6955971717834473, 0.7002788186073303, 0.6949010491371155, 0.6940805315971375, 0.6922466158866882, 0.6827117800712585, 0.677412748336792, 0.6744078397750854, 0.6748891472816467, 0.6683187484741211, 0.6704016923904419], "accuracy": [0.13049794733524323, 0.22374852001667023, 0.3089420199394226, 0.3693039119243622, 0.41949543356895447, 0.45449742674827576, 0.48989564180374146, 0.5241051316261292, 0.5567296147346497, 0.5768062472343445, 0.5933166146278381, 0.6149781942367554, 0.62660151720047, 0.637432336807251, 0.644300639629364, 0.6501122713088989, 0.6695284843444824, 0.6659622192382812, 0.6728305220603943, 0.6793025732040405, 0.6934354901313782, 0.6946242451667786, 0.6970016956329346, 0.7021529674530029, 0.7100779414176941, 0.7043983340263367, 0.707040011882782, 0.7061154246330261, 0.7120591998100281, 0.717870831489563, 0.7124554514884949, 0.7215691208839417, 0.7220974564552307, 0.7205125093460083, 0.7322678565979004, 0.7257958054542542, 0.7283053994178772, 0.7309470176696777, 0.7284374833106995, 0.7343811988830566, 0.7353057861328125, 0.7396644949913025, 0.7374191284179688, 0.7424382567405701, 0.7397965788841248, 0.7467969655990601, 0.7427024245262146, 0.7409853339195251, 0.7470611333847046, 0.7446836829185486, 0.7460044622421265, 0.748778223991394, 0.7549861073493958, 0.7523444890975952, 0.752740740776062, 0.7578919529914856], "val_loss": [2.2561371326446533, 2.2025532722473145, 2.1219582557678223, 1.9929777383804321, 1.8058044910430908, 1.576917290687561, 1.3578466176986694, 1.189281702041626, 1.0705255270004272, 0.984066903591156, 0.9223619699478149, 0.8685716390609741, 0.8285537958145142, 0.7979613542556763, 0.7747083902359009, 0.7495103478431702, 0.7296606302261353, 0.7105532288551331, 0.6995918154716492, 0.6894294619560242, 0.6748453974723816, 0.662854790687561, 0.652247965335846, 0.6448218822479248, 0.6362104415893555, 0.628251314163208, 0.6269571781158447, 0.6220062375068665, 0.6110053658485413, 0.6075155138969421, 0.5998591184616089, 0.5960400104522705, 0.5931335687637329, 0.5862307548522949, 0.5814474821090698, 0.5778548717498779, 0.5739977359771729, 0.5719577074050903, 0.5688111782073975, 0.564785897731781, 0.5591450333595276, 0.5564795732498169, 0.5571765899658203, 0.5524138808250427, 0.5502265095710754, 0.5455849170684814, 0.539151668548584, 0.5405593514442444, 0.5368509292602539, 0.5368509292602539, 0.5336448550224304, 0.5319347977638245, 0.5248070359230042, 0.5257394909858704, 0.5239935517311096, 0.5194886326789856], "val_accuracy": [0.3226666748523712, 0.40833333134651184, 0.4816666543483734, 0.5400000214576721, 0.5556666851043701, 0.5873333215713501, 0.6346666812896729, 0.6603333353996277, 0.6743333339691162, 0.7076666951179504, 0.7036666870117188, 0.721666693687439, 0.7243333458900452, 0.7323333621025085, 0.7409999966621399, 0.7426666617393494, 0.7490000128746033, 0.7556666731834412, 0.7516666650772095, 0.7593333125114441, 0.7643333077430725, 0.765999972820282, 0.7693333625793457, 0.7706666588783264, 0.7716666460037231, 0.7726666927337646, 0.778333306312561, 0.7776666879653931, 0.7796666622161865, 0.7803333401679993, 0.7820000052452087, 0.7879999876022339, 0.7836666703224182, 0.7886666655540466, 0.7926666736602783, 0.7900000214576721, 0.793666660785675, 0.7913333177566528, 0.796999990940094, 0.7986666560173035, 0.7996666431427002, 0.7963333129882812, 0.7993333339691162, 0.7993333339691162, 0.7963333129882812, 0.8029999732971191, 0.8043333292007446, 0.800000011920929, 0.8013333082199097, 0.8009999990463257, 0.8076666593551636, 0.8056666851043701, 0.8059999942779541, 0.8026666641235352, 0.8053333163261414, 0.8076666593551636]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 1, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [40, 74, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [7, 2, 4, 2, 8, 4, 3, 9, 2, 8, 9, 2, 1, 6, 6, 8, 9, 4, 2], [0, 3, 3, 1, 3, 3, 2, 0, 3, 0, 5, 1, 4, 1, 4], [44, 20, 50, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [30, 9, 43, 71, 34]], "fitness": -0.7871428728103638, "mapping_values": [1, 6, 6, 3, 3, 1, 17, 17, 10, 7, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(grad))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, alpha))), tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.add(grad, tf.math.sqrt(grad)))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2871694564819336, 2.244767189025879, 2.1900482177734375, 2.0984880924224854, 1.9687155485153198, 1.7881860733032227, 1.5948119163513184, 1.4413747787475586, 1.3223341703414917, 1.2315477132797241, 1.171420931816101, 1.1123216152191162, 1.0648432970046997, 1.0303341150283813, 0.9952626824378967, 0.9829736948013306, 0.947056770324707, 0.9303682446479797, 0.9081306457519531, 0.8975605964660645, 0.8676754236221313, 0.8630902171134949, 0.8476399183273315, 0.8361996412277222, 0.8303784728050232, 0.8232333064079285, 0.8132197260856628, 0.8110891580581665, 0.8024059534072876, 0.791571319103241, 0.7881430983543396, 0.7714705467224121, 0.7701011300086975, 0.7702881097793579, 0.7509647011756897, 0.7483912706375122, 0.7450690269470215, 0.740855872631073, 0.739912211894989, 0.7280114889144897, 0.7248710989952087, 0.7126823663711548, 0.7217475175857544, 0.7124567031860352, 0.7118445634841919, 0.6955403089523315, 0.7003406286239624, 0.6950555443763733, 0.6940887570381165, 0.6923309564590454, 0.6829073429107666, 0.6773686408996582, 0.6744140982627869, 0.6749044060707092, 0.6684742569923401, 0.6703372001647949], "accuracy": [0.13049794733524323, 0.22374852001667023, 0.3089420199394226, 0.3693039119243622, 0.41962751746177673, 0.454629510641098, 0.48989564180374146, 0.524501383304596, 0.5563333630561829, 0.5769383311271667, 0.5934486985206604, 0.6149781942367554, 0.6268656849861145, 0.6375643610954285, 0.6441685557365417, 0.6498481035232544, 0.6700568199157715, 0.665830135345459, 0.6733588576316833, 0.6785101294517517, 0.693831741809845, 0.6951525807380676, 0.6977941989898682, 0.7025492191314697, 0.709021270275116, 0.7043983340263367, 0.7067758440971375, 0.7055870890617371, 0.7124554514884949, 0.7185312509536743, 0.7121912837028503, 0.7213049530982971, 0.7214370369911194, 0.7209087014198303, 0.7320036888122559, 0.7256637215614319, 0.7284374833106995, 0.7308149337768555, 0.7279091477394104, 0.7346453666687012, 0.735569953918457, 0.739400327205658, 0.7372870445251465, 0.7429665923118591, 0.7386078238487244, 0.7471932172775269, 0.7434949278831482, 0.7411174178123474, 0.7464007139205933, 0.7453441023826599, 0.7458723783493042, 0.7490423917770386, 0.7549861073493958, 0.7531369924545288, 0.752740740776062, 0.7578919529914856], "val_loss": [2.2561371326446533, 2.2025532722473145, 2.1219563484191895, 1.9929813146591187, 1.8057960271835327, 1.5768834352493286, 1.35776948928833, 1.1892446279525757, 1.070504069328308, 0.9840181469917297, 0.9222084879875183, 0.8685182929039001, 0.8286124467849731, 0.7977600693702698, 0.7746669054031372, 0.7494894862174988, 0.7295903563499451, 0.710420548915863, 0.699455738067627, 0.6893002986907959, 0.6745682954788208, 0.6625913381576538, 0.6516976952552795, 0.6445877552032471, 0.6359447240829468, 0.6282459497451782, 0.6267642974853516, 0.6219784617424011, 0.6108580827713013, 0.6075018644332886, 0.5996171236038208, 0.5958864688873291, 0.5931380987167358, 0.5863236784934998, 0.5815284848213196, 0.577848494052887, 0.5738910436630249, 0.571998119354248, 0.5687410235404968, 0.5647863149642944, 0.5592117309570312, 0.5562708973884583, 0.556883692741394, 0.5525124669075012, 0.5502665042877197, 0.5456297397613525, 0.5393000841140747, 0.5404718518257141, 0.536929190158844, 0.5363367795944214, 0.5331373810768127, 0.5318384766578674, 0.5248011350631714, 0.5258631706237793, 0.5240812301635742, 0.5196911096572876], "val_accuracy": [0.3226666748523712, 0.40833333134651184, 0.4816666543483734, 0.5400000214576721, 0.5556666851043701, 0.5876666903495789, 0.6346666812896729, 0.6600000262260437, 0.6743333339691162, 0.7073333263397217, 0.7039999961853027, 0.721666693687439, 0.7246666550636292, 0.7323333621025085, 0.7409999966621399, 0.7419999837875366, 0.7490000128746033, 0.7556666731834412, 0.7516666650772095, 0.7586666941642761, 0.7639999985694885, 0.7663333415985107, 0.7693333625793457, 0.7696666717529297, 0.7716666460037231, 0.7733333110809326, 0.7773333191871643, 0.7770000100135803, 0.7796666622161865, 0.7803333401679993, 0.7816666960716248, 0.7870000004768372, 0.7833333611488342, 0.7883333563804626, 0.793666660785675, 0.7910000085830688, 0.7940000295639038, 0.7916666865348816, 0.7960000038146973, 0.7996666431427002, 0.800000011920929, 0.7963333129882812, 0.8009999990463257, 0.7979999780654907, 0.796999990940094, 0.8033333420753479, 0.8040000200271606, 0.800000011920929, 0.8003333210945129, 0.8009999990463257, 0.8073333501815796, 0.8063333630561829, 0.8056666851043701, 0.8023333549499512, 0.8056666851043701, 0.8069999814033508]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [6, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [7, 3, 0, 2, 9, 4, 1, 1, 2, 8, 9, 2, 1, 6, 6, 8, 9, 4, 2], [0, 3, 3, 1, 1, 3, 2, 0, 3, 0, 5, 1, 4, 1, 4], [32, 33, 78, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [28, 9, 43, 71, 34]], "fitness": -0.7799999713897705, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 10, 7, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), grad)), tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), alpha))), tf.math.sqrt(grad))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2922892570495605, 2.265049934387207, 2.236388921737671, 2.195237159729004, 2.1463265419006348, 2.073256015777588, 1.9771535396575928, 1.8639366626739502, 1.7336702346801758, 1.6028597354888916, 1.497541904449463, 1.4009000062942505, 1.321392297744751, 1.262178897857666, 1.2065064907073975, 1.1756659746170044, 1.1253421306610107, 1.0979632139205933, 1.0649266242980957, 1.045240044593811, 1.010572910308838, 0.9939192533493042, 0.9714673757553101, 0.9565542936325073, 0.9425598978996277, 0.9330007433891296, 0.9186636209487915, 0.9126666784286499, 0.901623010635376, 0.8872194886207581, 0.8794268369674683, 0.8614295125007629, 0.8614746332168579, 0.8561061024665833, 0.8361468315124512, 0.8301913738250732, 0.8280354142189026, 0.8207864761352539, 0.8193889260292053, 0.806074321269989, 0.8016003966331482, 0.7899632453918457, 0.7962803244590759, 0.7894983887672424, 0.783910870552063, 0.7690163254737854, 0.7735167741775513, 0.7653701901435852, 0.7645393013954163, 0.7627047300338745, 0.7526918053627014, 0.7473753690719604, 0.7397698760032654, 0.7442464828491211, 0.7346776723861694, 0.7375823259353638, 0.7391649484634399, 0.7323883175849915, 0.7282141447067261, 0.7188191413879395, 0.7161734104156494, 0.709123432636261, 0.7128140330314636, 0.7167349457740784, 0.7125498652458191, 0.7080000042915344, 0.7087293863296509, 0.7077939510345459, 0.7015523314476013, 0.6946471929550171, 0.6999792456626892, 0.6932273507118225], "accuracy": [0.11636507511138916, 0.1768590658903122, 0.2456742823123932, 0.30458328127861023, 0.34922730922698975, 0.37643641233444214, 0.41408005356788635, 0.4431383013725281, 0.4674415588378906, 0.48949941992759705, 0.5176330804824829, 0.538237988948822, 0.5534275770187378, 0.5651829242706299, 0.585919976234436, 0.5864483118057251, 0.6095628142356873, 0.6112799048423767, 0.6247523427009583, 0.6312243938446045, 0.6482630968093872, 0.6502443552017212, 0.6552634835243225, 0.6605468392372131, 0.6695284843444824, 0.6701889038085938, 0.6707172393798828, 0.6724342703819275, 0.6785101294517517, 0.6841896772384644, 0.6814159154891968, 0.6954167485237122, 0.6935675740242004, 0.6911900639533997, 0.700700044631958, 0.7049266695976257, 0.700700044631958, 0.7057191729545593, 0.6997754573822021, 0.7116629481315613, 0.7102100253105164, 0.7117950320243835, 0.715889573097229, 0.7180029153823853, 0.7177387475967407, 0.7228899598121643, 0.7224937081336975, 0.7201162576675415, 0.7255316376686096, 0.7234182953834534, 0.7246070504188538, 0.7259278893470764, 0.7316074371337891, 0.7296261787414551, 0.7313432693481445, 0.7360982894897461, 0.7314753532409668, 0.7341170310974121, 0.7347774505615234, 0.7390040755271912, 0.7349095344543457, 0.7420420050621033, 0.7391361594200134, 0.7368907928466797, 0.7401928305625916, 0.7401928305625916, 0.7376832365989685, 0.7396644949913025, 0.7465327978134155, 0.7450799345970154, 0.7503632307052612, 0.7448157668113708], "val_loss": [2.270395040512085, 2.2390315532684326, 2.2009530067443848, 2.149596929550171, 2.0795230865478516, 1.9842978715896606, 1.860041618347168, 1.712507963180542, 1.5555130243301392, 1.4065027236938477, 1.2798266410827637, 1.175826072692871, 1.0924853086471558, 1.0277729034423828, 0.9753745198249817, 0.9306439757347107, 0.8931889533996582, 0.8615069389343262, 0.8357203602790833, 0.8152207136154175, 0.7930722832679749, 0.7730797529220581, 0.7561854124069214, 0.7418491840362549, 0.7294560670852661, 0.7173345685005188, 0.7098729014396667, 0.7017661333084106, 0.6891946792602539, 0.6823453903198242, 0.6725571751594543, 0.6664730906486511, 0.6608744859695435, 0.6533583402633667, 0.6466989517211914, 0.6401920318603516, 0.6357236504554749, 0.6319356560707092, 0.6277810335159302, 0.6231222152709961, 0.6174731254577637, 0.6133279204368591, 0.6115244030952454, 0.6078608632087708, 0.6039538383483887, 0.5994726419448853, 0.5934450030326843, 0.591225802898407, 0.5882675051689148, 0.5865609645843506, 0.5826870203018188, 0.5806276798248291, 0.5759430527687073, 0.5739209055900574, 0.5723358392715454, 0.5684030055999756, 0.5668473243713379, 0.5658410787582397, 0.561845064163208, 0.5593554377555847, 0.5570379495620728, 0.5546950697898865, 0.5520113706588745, 0.5499016046524048, 0.5507116913795471, 0.5474072098731995, 0.5447835922241211, 0.5440174341201782, 0.542715847492218, 0.5385123491287231, 0.5401747822761536, 0.5360352396965027], "val_accuracy": [0.2540000081062317, 0.36766666173934937, 0.43066665530204773, 0.46666666865348816, 0.4973333477973938, 0.5353333353996277, 0.5536666512489319, 0.5733333230018616, 0.5873333215713501, 0.625, 0.6359999775886536, 0.6690000295639038, 0.6850000023841858, 0.6913333535194397, 0.7046666741371155, 0.7086666822433472, 0.7163333296775818, 0.7229999899864197, 0.7326666712760925, 0.7336666584014893, 0.7366666793823242, 0.7403333187103271, 0.7400000095367432, 0.7490000128746033, 0.7459999918937683, 0.7490000128746033, 0.7516666650772095, 0.7586666941642761, 0.7590000033378601, 0.7596666812896729, 0.7636666893959045, 0.7666666507720947, 0.7666666507720947, 0.7673333287239075, 0.768666684627533, 0.7739999890327454, 0.7756666541099548, 0.7753333449363708, 0.7773333191871643, 0.7770000100135803, 0.777999997138977, 0.7793333530426025, 0.784333348274231, 0.7829999923706055, 0.7823333144187927, 0.7863333225250244, 0.7886666655540466, 0.7863333225250244, 0.7883333563804626, 0.7883333563804626, 0.7953333258628845, 0.7950000166893005, 0.7940000295639038, 0.7889999747276306, 0.7943333387374878, 0.7973333597183228, 0.7946666479110718, 0.7986666560173035, 0.7950000166893005, 0.7963333129882812, 0.8016666769981384, 0.7990000247955322, 0.7996666431427002, 0.7960000038146973, 0.8016666769981384, 0.8026666641235352, 0.8056666851043701, 0.8009999990463257, 0.8023333549499512, 0.8026666641235352, 0.8029999732971191, 0.8033333420753479]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [6, 74, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [7, 8, 0, 2, 9, 4, 0, 9, 2, 8, 9, 2, 1, 6, 6, 8, 9, 4, 2], [0, 3, 3, 1, 1, 3, 2, 0, 3, 0, 5, 1, 4, 1, 4], [16, 20, 50, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [2, 3], [], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [48, 9, 43, 71, 34]], "fitness": -0.4560000002384186, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.2576982975006104, 2.10105562210083, 2.0238497257232666, 2.0078821182250977, 1.966177225112915, 1.9304636716842651, 1.881497859954834, 1.9059176445007324, 1.8900341987609863, 1.8619357347488403, 1.8620222806930542, 1.863970160484314, 1.854828953742981, 1.8562650680541992, 1.8419793844223022, 1.8433743715286255, 1.8470381498336792], "accuracy": [0.17210407555103302, 0.23140932619571686, 0.24025888741016388, 0.23206974565982819, 0.24224013090133667, 0.24620261788368225, 0.25782591104507446, 0.24646678566932678, 0.2542596757411957, 0.25359925627708435, 0.2591467499732971, 0.25782591104507446, 0.2619204819202423, 0.2607317268848419, 0.26059964299201965, 0.2673358917236328, 0.26297715306282043], "val_loss": [2.1183829307556152, 1.9900035858154297, 1.8432122468948364, 1.875913143157959, 1.7029774188995361, 1.6233668327331543, 1.5237903594970703, 1.5774223804473877, 1.5557541847229004, 1.5326141119003296, 1.5180387496948242, 1.5002719163894653, 1.5574883222579956, 1.536947250366211, 1.5001611709594727, 1.5343598127365112, 1.4551761150360107], "val_accuracy": [0.2906666696071625, 0.17033334076404572, 0.35466668009757996, 0.3409999907016754, 0.367000013589859, 0.46933332085609436, 0.4320000112056732, 0.40666666626930237, 0.46666666865348816, 0.4440000057220459, 0.5230000019073486, 0.528333306312561, 0.44600000977516174, 0.4183333218097687, 0.45500001311302185, 0.4476666748523712, 0.48633334040641785]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 1, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 74, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [7, 6, 1, 5, 9, 3, 0, 1, 2, 8, 9, 2, 1, 6, 6, 8, 9, 4, 2], [1, 0, 3, 1, 1, 3, 2, 0, 3, 0, 5, 1, 4, 1, 4], [56, 67, 50, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [30, 9, 43, 71, 34]], "fitness": -0.157428577542305, "mapping_values": [1, 4, 4, 2, 2, 1, 11, 11, 7, 4, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.subtract(tf.math.add(beta, tf.math.square(alpha)), tf.math.add(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.6542980670928955, 2.308734655380249, 2.3042049407958984, 2.303237199783325, 2.303025007247925, 2.302957057952881, 2.3030354976654053], "accuracy": [0.13498876988887787, 0.09998679161071777, 0.09906221181154251, 0.09576013684272766, 0.09945846349000931, 0.09998679161071777, 0.09417514503002167], "val_loss": [2.310652732849121, 2.3039658069610596, 2.3028743267059326, 2.3027031421661377, 2.3026561737060547, 2.302673816680908, 2.3027162551879883], "val_accuracy": [0.0949999988079071, 0.10233332961797714, 0.10066666454076767, 0.10233332961797714, 0.10233332961797714, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [60, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [7, 6, 0, 2, 9, 4, 4, 9, 2, 8, 9, 2, 1, 6, 6, 8, 9, 4, 2], [0, 1, 3, 1, 1, 3, 2, 0, 3, 0, 5, 1, 4, 1, 4], [44, 20, 50, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [8, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [83, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 14, 14, 9, 5, 3, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))), tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha))), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [40, 74, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [7, 3, 4, 2, 7, 1, 3, 9, 2, 8, 9, 2, 1, 6, 6, 8, 9, 4, 2], [1, 0, 3, 0, 1, 3, 2, 0, 3, 0, 5, 1, 4, 1, 4], [56, 20, 50, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [2, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [30, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.multiply(alpha, tf.math.add(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.negative(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [6.232141494750977, 6546.1796875, 2845680.0, 4431.396484375, 1347707.125, 204046434304.0, NaN], "accuracy": [0.10011887550354004, 0.10342095047235489, 0.10381719470024109, 0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09945846349000931], "val_loss": [7.00691556930542, 92584.171875, 696.7335815429688, 1593.8489990234375, 45367704.0, 9873043488768.0, NaN], "val_accuracy": [0.0989999994635582, 0.10300000011920929, 0.10066666454076767, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 1, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [65, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [7, 6, 0, 2, 2, 4, 0, 9, 2, 8, 9, 2, 1, 6, 6, 8, 9, 4, 2], [4, 0, 3, 1, 1, 3, 2, 0, 3, 0, 5, 1, 4, 1, 4], [44, 45, 50, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 2, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [48, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 13, 13, 8, 5, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.add(beta, alpha))), tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08321225643157959, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [60, 74, 59, 56, 8, 79, 86, 52, 44], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [7, 3, 1, 5, 9, 3, 0, 9, 2, 8, 9, 2, 1, 6, 6, 8, 9, 4, 2], [0, 3, 3, 1, 1, 3, 2, 0, 3, 0, 5, 1, 4, 1, 4], [42, 20, 50, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [2, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [30, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 11, 11, 7, 4, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad))), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.negative(grad)), tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [6.9642236684200615e+31, 7.026877403259277, 14.172591209411621, 21.38028907775879, 28.578121185302734, 35.77418899536133], "accuracy": [0.09549596905708313, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [4.250604629516602, 11.242262840270996, 18.477266311645508, 25.701799392700195, 32.92414474487305, 40.150184631347656], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 2, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [60, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [7, 3, 0, 2, 9, 4, 3, 5, 2, 8, 9, 2, 1, 6, 6, 8, 9, 4, 2], [0, 3, 3, 1, 1, 3, 2, 0, 3, 0, 5, 1, 4, 1, 4], [44, 20, 50, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 8, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [48, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(alpha, grad)), lambda shape,  alpha, beta, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.sqrt(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07819310575723648, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [6, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [7, 3, 0, 2, 9, 4, 6, 9, 2, 8, 9, 2, 1, 6, 6, 8, 9, 4, 2], [0, 3, 3, 1, 1, 3, 2, 0, 3, 0, 5, 1, 4, 1, 4], [56, 94, 50, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [2, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 2, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [48, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 12, 12, 8, 4, 3, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))))), tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, alpha))))), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [2, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [9, 3, 0, 2, 9, 4, 3, 9, 2, 8, 9, 2, 1, 6, 6, 8, 9, 4, 2], [1, 0, 3, 1, 1, 3, 2, 0, 3, 0, 5, 1, 4, 1, 4], [18, 20, 50, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0], [3, 2, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6, 6, 7, 1, 9], [1, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [48, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 34, 20, 14, 5], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(sigma, beta), tf.math.square(beta))), tf.math.multiply(tf.math.subtract(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)), tf.math.negative(tf.math.add(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(sigma, beta), tf.math.subtract(beta, sigma)), sigma)))))), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [6, 74, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [7, 3, 0, 2, 9, 4, 0, 9, 2, 8, 9, 2, 1, 6, 6, 8, 9, 4, 2], [0, 5, 2, 1, 1, 3, 2, 0, 3, 0, 5, 1, 4, 1, 4], [16, 20, 50, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 4, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [48, 9, 43, 71, 34]], "fitness": -0.03857142850756645, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 1, 3, 2, 1, 1, 0, 5, 2, 3, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(grad))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.pow(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.3029727935791016, 2.3026223182678223, 2.303567409515381, 2.3019957542419434, 2.3036670684814453, 2.302703619003296], "accuracy": [0.0882314071059227, 0.08691058307886124, 0.09285431355237961, 0.09219389408826828, 0.08519349992275238, 0.09060890227556229], "val_loss": [2.299161195755005, 2.299161195755005, 2.299161195755005, 2.299161195755005, 2.299161195755005, 2.299161195755005], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [6, 74, 59, 56, 8, 79, 86, 52, 44], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [7, 3, 5, 2, 9, 4, 0, 9, 2, 8, 9, 2, 1, 6, 6, 8, 9, 4, 2], [1, 0, 3, 1, 1, 3, 2, 0, 3, 0, 5, 1, 4, 1, 4], [56, 20, 50, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [30, 9, 43, 71, 34]], "fitness": -0.03857142850756645, "mapping_values": [1, 1, 1, 0, 1, 1, 6, 6, 3, 3, 1, 3, 2, 1, 1, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3029727935791016, 2.3026223182678223, 2.303567409515381, 2.3019957542419434, 2.3036670684814453, 2.302703619003296], "accuracy": [0.0882314071059227, 0.08691058307886124, 0.09285431355237961, 0.09219389408826828, 0.08519349992275238, 0.09060890227556229], "val_loss": [2.299161195755005, 2.299161195755005, 2.299161195755005, 2.299161195755005, 2.299161195755005, 2.299161195755005], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [2, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [6, 5, 2, 5, 3, 8, 0, 1, 2, 4, 1, 4, 1, 6, 6, 4, 9, 4, 2], [1, 0, 3, 1, 1, 3, 2, 0, 3, 0, 5, 1, 4, 1, 4], [56, 20, 50, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [6, 9, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [48, 9, 43, 71, 34]], "fitness": -0.03857142850756645, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 3, 2, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(sigma, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3029727935791016, 2.3026223182678223, 2.303567409515381, 2.3019957542419434, 2.3036670684814453, 2.302703619003296], "accuracy": [0.0882314071059227, 0.08691058307886124, 0.09285431355237961, 0.09219389408826828, 0.08519349992275238, 0.09060890227556229], "val_loss": [2.299161195755005, 2.299161195755005, 2.299161195755005, 2.299161195755005, 2.299161195755005, 2.299161195755005], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 1, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [60, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [7, 3, 1, 5, 9, 3, 0, 9, 2, 8, 9, 2, 1, 6, 6, 8, 9, 4, 2], [1, 2, 3, 1, 1, 3, 2, 0, 3, 0, 5, 1, 4, 1, 4], [56, 20, 50, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [7, 3], [], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [2, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [30, 9, 43, 71, 34]], "fitness": -0.03857142850756645, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 8, 3, 2, 1, 1, 0, 1, 0, 11, 6, 5, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))), alpha), tf.math.multiply(tf.math.negative(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.multiply(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.add(sigma, beta), tf.math.square(beta)))", "other_info": {"loss": [2.3029730319976807, 2.302664279937744, 2.3042850494384766, 2.3058595657348633, 2.317824602127075, 2.3590643405914307, NaN, NaN, NaN, NaN], "accuracy": [0.0882314071059227, 0.08677849918603897, 0.09126931428909302, 0.0866464152932167, 0.08572183549404144, 0.09496764093637466, 0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.2991647720336914, 2.2993650436401367, 2.3010103702545166, 2.3048434257507324, 2.3133466243743896, 2.3655693531036377, NaN, NaN, NaN, NaN], "val_accuracy": [0.03766666725277901, 0.035999998450279236, 0.02433333359658718, 0.05766666680574417, 0.1223333328962326, 0.10300000011920929, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}]