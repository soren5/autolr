[{"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 8, 2, 4, 5, 3, 2, 1, 2, 1, 5, 2, 9, 3, 2, 6, 9, 5, 0, 2, 8, 2, 0, 9, 2], [0, 0, 2, 2, 2, 2, 1, 2, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 10, 35, 27, 57, 79, 53, 52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.8077142834663391, "mapping_values": [1, 24, 24, 14, 10, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(tf.math.subtract(tf.math.add(alpha, grad), grad), grad))))), tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), alpha)))), tf.math.multiply(tf.math.add(alpha, grad), grad)))))), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2656204725347884, 1.834861358993514, 1.6080702291015527, 1.1023605761747193, 0.963929839988253, 0.8836846737703549, 0.7983969375127027, 0.7538237268615157, 0.7241221618942061, 0.7107982596527899, 0.6744163412428047, 0.6688552110296876, 0.6242241542400102, 0.6309241489050269, 0.5656944493796485, 0.6030914838823266, 0.6116298425388123, 0.547782277064222, 0.5457326994281104, 0.5089848913009283, 0.5334900979982501, 0.5048153854246231, 0.5132718868401104, 0.5072849183042587, 0.4948422326002107, 0.48855605329410384, 0.465206133167521, 0.47566343698094093, 0.4439346106210484, 0.4387959990999277, 0.45306398214413396], "accuracy": [0.27816668152809143, 0.42570334672927856, 0.4753665328025818, 0.6057323813438416, 0.6411306262016296, 0.6674151420593262, 0.6977941989898682, 0.7135120630264282, 0.7240787148475647, 0.7359662055969238, 0.7388719916343689, 0.7483819723129272, 0.7651565074920654, 0.7623828053474426, 0.7902522683143616, 0.7709681391716003, 0.7655527591705322, 0.793950617313385, 0.7931581139564514, 0.809140145778656, 0.7979130744934082, 0.8103289008140564, 0.804649293422699, 0.8113855719566345, 0.8103289008140564, 0.8195747137069702, 0.826310932636261, 0.8256505131721497, 0.8355567455291748, 0.8378021121025085, 0.8286884427070618], "val_loss": [1.6992920126233781, 1.0926332133156913, 0.8791384186063494, 0.6920988219124931, 0.7124736819948468, 0.659570574760437, 0.6519300426755633, 0.5713083744049072, 0.5969052995954242, 0.5316627025604248, 0.49129511628832134, 0.4959421157836914, 0.5510351998465401, 0.4537507891654968, 0.4679431063788278, 0.5465364115578788, 0.43619742563792635, 0.42575193302971975, 0.4259102429662432, 0.41085908242634367, 0.4476439952850342, 0.4363984039851597, 0.4017732654299055, 0.39545364890779766, 0.4021886501993452, 0.38919531447546823, 0.4036196896008083, 0.3854656049183437, 0.3847189460481916, 0.39484878948756624, 0.3938796009336199], "val_accuracy": [0.5066666603088379, 0.5253333449363708, 0.5913333296775818, 0.687666654586792, 0.7066666483879089, 0.6983333230018616, 0.7126666903495789, 0.7509999871253967, 0.7336666584014893, 0.7423333525657654, 0.7893333435058594, 0.7823333144187927, 0.7536666393280029, 0.7973333597183228, 0.8036666512489319, 0.7459999918937683, 0.8043333292007446, 0.8153333067893982, 0.8209999799728394, 0.8256666660308838, 0.7913333177566528, 0.8119999766349792, 0.8216666579246521, 0.8216666579246521, 0.8366666436195374, 0.8379999995231628, 0.8220000267028809, 0.8330000042915344, 0.8299999833106995, 0.82833331823349, 0.8303333520889282]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 4, 2, 2, 3, 2, 2, 1, 6, 1, 5, 2, 6, 3, 8, 6, 9, 5, 0, 2, 8, 2, 0, 9, 2], [0, 0, 2, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [77, 10, 35, 27, 57, 79, 53, 52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.8077142834663391, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2656204725347884, 1.834861358993514, 1.6080702291015527, 1.1023605761747193, 0.963929839988253, 0.8836846737703549, 0.7983969375127027, 0.7538237268615157, 0.7241221618942061, 0.7107982596527899, 0.6744163412428047, 0.6688552110296876, 0.6242241542400102, 0.6309241489050269, 0.5656944493796485, 0.6030914838823266, 0.6116298425388123, 0.547782277064222, 0.5457326994281104, 0.5089848913009283, 0.5334900979982501, 0.5048153854246231, 0.5132718868401104, 0.5072849183042587, 0.4948422326002107, 0.48855605329410384, 0.465206133167521, 0.47566343698094093, 0.4439346106210484, 0.4387959990999277, 0.45306398214413396], "accuracy": [0.27816668152809143, 0.42570334672927856, 0.4753665328025818, 0.6057323813438416, 0.6411306262016296, 0.6674151420593262, 0.6977941989898682, 0.7135120630264282, 0.7240787148475647, 0.7359662055969238, 0.7388719916343689, 0.7483819723129272, 0.7651565074920654, 0.7623828053474426, 0.7902522683143616, 0.7709681391716003, 0.7655527591705322, 0.793950617313385, 0.7931581139564514, 0.809140145778656, 0.7979130744934082, 0.8103289008140564, 0.804649293422699, 0.8113855719566345, 0.8103289008140564, 0.8195747137069702, 0.826310932636261, 0.8256505131721497, 0.8355567455291748, 0.8378021121025085, 0.8286884427070618], "val_loss": [1.6992920126233781, 1.0926332133156913, 0.8791384186063494, 0.6920988219124931, 0.7124736819948468, 0.659570574760437, 0.6519300426755633, 0.5713083744049072, 0.5969052995954242, 0.5316627025604248, 0.49129511628832134, 0.4959421157836914, 0.5510351998465401, 0.4537507891654968, 0.4679431063788278, 0.5465364115578788, 0.43619742563792635, 0.42575193302971975, 0.4259102429662432, 0.41085908242634367, 0.4476439952850342, 0.4363984039851597, 0.4017732654299055, 0.39545364890779766, 0.4021886501993452, 0.38919531447546823, 0.4036196896008083, 0.3854656049183437, 0.3847189460481916, 0.39484878948756624, 0.3938796009336199], "val_accuracy": [0.5066666603088379, 0.5253333449363708, 0.5913333296775818, 0.687666654586792, 0.7066666483879089, 0.6983333230018616, 0.7126666903495789, 0.7509999871253967, 0.7336666584014893, 0.7423333525657654, 0.7893333435058594, 0.7823333144187927, 0.7536666393280029, 0.7973333597183228, 0.8036666512489319, 0.7459999918937683, 0.8043333292007446, 0.8153333067893982, 0.8209999799728394, 0.8256666660308838, 0.7913333177566528, 0.8119999766349792, 0.8216666579246521, 0.8216666579246521, 0.8366666436195374, 0.8379999995231628, 0.8220000267028809, 0.8330000042915344, 0.8299999833106995, 0.82833331823349, 0.8303333520889282]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 3, 2, 4, 3, 3, 2, 1, 2, 1, 5, 2, 6, 2, 2, 5, 9, 5, 0, 2, 8, 2, 0, 9, 2], [3, 0, 2, 2, 2, 2, 1, 1, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [55, 18, 35, 27, 57, 79, 12, 74], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [6, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [2, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.8077142834663391, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2656204725347884, 1.834861358993514, 1.6080702291015527, 1.1023605761747193, 0.963929839988253, 0.8836846737703549, 0.7983969375127027, 0.7538237268615157, 0.7241221618942061, 0.7107982596527899, 0.6744163412428047, 0.6688552110296876, 0.6242241542400102, 0.6309241489050269, 0.5656944493796485, 0.6030914838823266, 0.6116298425388123, 0.547782277064222, 0.5457326994281104, 0.5089848913009283, 0.5334900979982501, 0.5048153854246231, 0.5132718868401104, 0.5072849183042587, 0.4948422326002107, 0.48855605329410384, 0.465206133167521, 0.47566343698094093, 0.4439346106210484, 0.4387959990999277, 0.45306398214413396], "accuracy": [0.27816668152809143, 0.42570334672927856, 0.4753665328025818, 0.6057323813438416, 0.6411306262016296, 0.6674151420593262, 0.6977941989898682, 0.7135120630264282, 0.7240787148475647, 0.7359662055969238, 0.7388719916343689, 0.7483819723129272, 0.7651565074920654, 0.7623828053474426, 0.7902522683143616, 0.7709681391716003, 0.7655527591705322, 0.793950617313385, 0.7931581139564514, 0.809140145778656, 0.7979130744934082, 0.8103289008140564, 0.804649293422699, 0.8113855719566345, 0.8103289008140564, 0.8195747137069702, 0.826310932636261, 0.8256505131721497, 0.8355567455291748, 0.8378021121025085, 0.8286884427070618], "val_loss": [1.6992920126233781, 1.0926332133156913, 0.8791384186063494, 0.6920988219124931, 0.7124736819948468, 0.659570574760437, 0.6519300426755633, 0.5713083744049072, 0.5969052995954242, 0.5316627025604248, 0.49129511628832134, 0.4959421157836914, 0.5510351998465401, 0.4537507891654968, 0.4679431063788278, 0.5465364115578788, 0.43619742563792635, 0.42575193302971975, 0.4259102429662432, 0.41085908242634367, 0.4476439952850342, 0.4363984039851597, 0.4017732654299055, 0.39545364890779766, 0.4021886501993452, 0.38919531447546823, 0.4036196896008083, 0.3854656049183437, 0.3847189460481916, 0.39484878948756624, 0.3938796009336199], "val_accuracy": [0.5066666603088379, 0.5253333449363708, 0.5913333296775818, 0.687666654586792, 0.7066666483879089, 0.6983333230018616, 0.7126666903495789, 0.7509999871253967, 0.7336666584014893, 0.7423333525657654, 0.7893333435058594, 0.7823333144187927, 0.7536666393280029, 0.7973333597183228, 0.8036666512489319, 0.7459999918937683, 0.8043333292007446, 0.8153333067893982, 0.8209999799728394, 0.8256666660308838, 0.7913333177566528, 0.8119999766349792, 0.8216666579246521, 0.8216666579246521, 0.8366666436195374, 0.8379999995231628, 0.8220000267028809, 0.8330000042915344, 0.8299999833106995, 0.82833331823349, 0.8303333520889282]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 3, 2, 4, 3, 3, 2, 1, 2, 1, 5, 2, 6, 2, 2, 5, 9, 5, 0, 2, 8, 2, 0, 9, 2], [3, 0, 2, 2, 2, 2, 1, 1, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [77, 10, 35, 27, 57, 79, 53, 52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.8077142834663391, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2656204725347884, 1.834861358993514, 1.6080702291015527, 1.1023605761747193, 0.963929839988253, 0.8836846737703549, 0.7983969375127027, 0.7538237268615157, 0.7241221618942061, 0.7107982596527899, 0.6744163412428047, 0.6688552110296876, 0.6242241542400102, 0.6309241489050269, 0.5656944493796485, 0.6030914838823266, 0.6116298425388123, 0.547782277064222, 0.5457326994281104, 0.5089848913009283, 0.5334900979982501, 0.5048153854246231, 0.5132718868401104, 0.5072849183042587, 0.4948422326002107, 0.48855605329410384, 0.465206133167521, 0.47566343698094093, 0.4439346106210484, 0.4387959990999277, 0.45306398214413396], "accuracy": [0.27816668152809143, 0.42570334672927856, 0.4753665328025818, 0.6057323813438416, 0.6411306262016296, 0.6674151420593262, 0.6977941989898682, 0.7135120630264282, 0.7240787148475647, 0.7359662055969238, 0.7388719916343689, 0.7483819723129272, 0.7651565074920654, 0.7623828053474426, 0.7902522683143616, 0.7709681391716003, 0.7655527591705322, 0.793950617313385, 0.7931581139564514, 0.809140145778656, 0.7979130744934082, 0.8103289008140564, 0.804649293422699, 0.8113855719566345, 0.8103289008140564, 0.8195747137069702, 0.826310932636261, 0.8256505131721497, 0.8355567455291748, 0.8378021121025085, 0.8286884427070618], "val_loss": [1.6992920126233781, 1.0926332133156913, 0.8791384186063494, 0.6920988219124931, 0.7124736819948468, 0.659570574760437, 0.6519300426755633, 0.5713083744049072, 0.5969052995954242, 0.5316627025604248, 0.49129511628832134, 0.4959421157836914, 0.5510351998465401, 0.4537507891654968, 0.4679431063788278, 0.5465364115578788, 0.43619742563792635, 0.42575193302971975, 0.4259102429662432, 0.41085908242634367, 0.4476439952850342, 0.4363984039851597, 0.4017732654299055, 0.39545364890779766, 0.4021886501993452, 0.38919531447546823, 0.4036196896008083, 0.3854656049183437, 0.3847189460481916, 0.39484878948756624, 0.3938796009336199], "val_accuracy": [0.5066666603088379, 0.5253333449363708, 0.5913333296775818, 0.687666654586792, 0.7066666483879089, 0.6983333230018616, 0.7126666903495789, 0.7509999871253967, 0.7336666584014893, 0.7423333525657654, 0.7893333435058594, 0.7823333144187927, 0.7536666393280029, 0.7973333597183228, 0.8036666512489319, 0.7459999918937683, 0.8043333292007446, 0.8153333067893982, 0.8209999799728394, 0.8256666660308838, 0.7913333177566528, 0.8119999766349792, 0.8216666579246521, 0.8216666579246521, 0.8366666436195374, 0.8379999995231628, 0.8220000267028809, 0.8330000042915344, 0.8299999833106995, 0.82833331823349, 0.8303333520889282]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 8, 2, 4, 6, 3, 2, 1, 2, 1, 5, 8, 9, 3, 2, 6, 9, 5, 0, 2, 8, 2, 0, 9, 2], [0, 0, 2, 2, 2, 1, 1, 1, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 10, 50, 27, 57, 79, 53, 52], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.8077142834663391, "mapping_values": [1, 30, 30, 19, 11, 6, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), grad)), grad), tf.math.subtract(tf.math.add(tf.math.add(alpha, grad), alpha), alpha)), tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), tf.math.multiply(alpha, grad))))))), tf.math.add(tf.math.divide_no_nan(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2656204725347884, 1.834861358993514, 1.6080702291015527, 1.1023605761747193, 0.963929839988253, 0.8836846737703549, 0.7983969375127027, 0.7538237268615157, 0.7241221618942061, 0.7107982596527899, 0.6744163412428047, 0.6688552110296876, 0.6242241542400102, 0.6309241489050269, 0.5656944493796485, 0.6030914838823266, 0.6116298425388123, 0.547782277064222, 0.5457326994281104, 0.5089848913009283, 0.5334900979982501, 0.5048153854246231, 0.5132718868401104, 0.5072849183042587, 0.4948422326002107, 0.48855605329410384, 0.465206133167521, 0.47566343698094093, 0.4439346106210484, 0.4387959990999277, 0.45306398214413396], "accuracy": [0.27816668152809143, 0.42570334672927856, 0.4753665328025818, 0.6057323813438416, 0.6411306262016296, 0.6674151420593262, 0.6977941989898682, 0.7135120630264282, 0.7240787148475647, 0.7359662055969238, 0.7388719916343689, 0.7483819723129272, 0.7651565074920654, 0.7623828053474426, 0.7902522683143616, 0.7709681391716003, 0.7655527591705322, 0.793950617313385, 0.7931581139564514, 0.809140145778656, 0.7979130744934082, 0.8103289008140564, 0.804649293422699, 0.8113855719566345, 0.8103289008140564, 0.8195747137069702, 0.826310932636261, 0.8256505131721497, 0.8355567455291748, 0.8378021121025085, 0.8286884427070618], "val_loss": [1.6992920126233781, 1.0926332133156913, 0.8791384186063494, 0.6920988219124931, 0.7124736819948468, 0.659570574760437, 0.6519300426755633, 0.5713083744049072, 0.5969052995954242, 0.5316627025604248, 0.49129511628832134, 0.4959421157836914, 0.5510351998465401, 0.4537507891654968, 0.4679431063788278, 0.5465364115578788, 0.43619742563792635, 0.42575193302971975, 0.4259102429662432, 0.41085908242634367, 0.4476439952850342, 0.4363984039851597, 0.4017732654299055, 0.39545364890779766, 0.4021886501993452, 0.38919531447546823, 0.4036196896008083, 0.3854656049183437, 0.3847189460481916, 0.39484878948756624, 0.3938796009336199], "val_accuracy": [0.5066666603088379, 0.5253333449363708, 0.5913333296775818, 0.687666654586792, 0.7066666483879089, 0.6983333230018616, 0.7126666903495789, 0.7509999871253967, 0.7336666584014893, 0.7423333525657654, 0.7893333435058594, 0.7823333144187927, 0.7536666393280029, 0.7973333597183228, 0.8036666512489319, 0.7459999918937683, 0.8043333292007446, 0.8153333067893982, 0.8209999799728394, 0.8256666660308838, 0.7913333177566528, 0.8119999766349792, 0.8216666579246521, 0.8216666579246521, 0.8366666436195374, 0.8379999995231628, 0.8220000267028809, 0.8330000042915344, 0.8299999833106995, 0.82833331823349, 0.8303333520889282]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [5, 9, 2, 4, 5, 3, 2, 2, 2, 5, 5, 2, 9, 3, 2, 6, 9, 5, 0, 2, 8, 2, 0, 9, 2], [2, 0, 2, 2, 2, 2, 1, 2, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 10, 35, 27, 57, 79, 53, 52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [64, 25, 50, 71, 34]], "fitness": -0.6328571438789368, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.170657615903472, 2.6207640758988533, 2.2297669872238086, 2.602724478717462, 2.203666787499592, 2.207611453248179, 1.9892140992360738, 1.998328080739107, 1.9727749008748825, 1.9035806737130643, 2.22420152722254, 1.8572672021355943, 1.6598996007447198, 1.440643520403091, 1.2188820354123835, 1.3173290409384906, 1.1795973161019198, 1.0204890727398497, 0.9444230169337329, 0.8857951827289217, 0.8721077479643514, 0.855837289061387, 0.8471924380430409, 0.7889021751729803, 0.8031368427083886, 0.7669424565004367, 0.7420745372787962, 0.7365517309234442, 0.7211112493001837], "accuracy": [0.2487121969461441, 0.1282525360584259, 0.1604807823896408, 0.19574692845344543, 0.1768590658903122, 0.19231277704238892, 0.3401135802268982, 0.3069607615470886, 0.3350944519042969, 0.38053098320961, 0.2211068570613861, 0.35860520601272583, 0.4559503495693207, 0.5070664286613464, 0.579051673412323, 0.5560691952705383, 0.5806366205215454, 0.6073173880577087, 0.6375643610954285, 0.6546030640602112, 0.6666226387023926, 0.6621318459510803, 0.672698438167572, 0.6843217611312866, 0.6828688383102417, 0.6995112895965576, 0.7083608508110046, 0.7121912837028503, 0.7141724824905396], "val_loss": [3.4898670060294017, 1.9721871784755163, 1.9343300546918596, 1.9153825214930944, 1.8583954402378626, 1.5570335728781564, 1.994093894958496, 1.2655051776341029, 1.1668331963675362, 1.7330710206712996, 1.5638679776872908, 1.316903897694179, 1.121002299445016, 0.9614474092211042, 1.3899686677115304, 1.1406159741537911, 0.8577125583376203, 0.7179193667003086, 0.6419823680605207, 0.7157588005065918, 0.6221103327614921, 0.6539018324443272, 0.6309046064104352, 0.5731896502631051, 0.5769682271139962, 0.5616872821535382, 0.5718216555459159, 0.5657837050301688, 0.5724525962557111], "val_accuracy": [0.28166666626930237, 0.09833333641290665, 0.10533333569765091, 0.09733333438634872, 0.2253333330154419, 0.4346666634082794, 0.09833333641290665, 0.5086666941642761, 0.5196666717529297, 0.2606666684150696, 0.41333332657814026, 0.5413333177566528, 0.5396666526794434, 0.6213333606719971, 0.5736666917800903, 0.5233333110809326, 0.6230000257492065, 0.6543333530426025, 0.6953333616256714, 0.6673333048820496, 0.7099999785423279, 0.6930000185966492, 0.7070000171661377, 0.7333333492279053, 0.7213333249092102, 0.7286666631698608, 0.7306666374206543, 0.7300000190734863, 0.7276666760444641]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 8, 2, 4, 5, 1, 2, 1, 2, 1, 5, 2, 9, 0, 2, 6, 9, 5, 0, 2, 8, 2, 0, 9, 2], [0, 0, 2, 2, 2, 2, 0, 0, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [82, 10, 35, 27, 57, 79, 53, 52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [77, 25, 50, 71, 34]], "fitness": -0.26571428775787354, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2193293168387, 2.512706505671279, 2.307607211551457, 2.3039265924425267, 2.303265402613378, 2.302999831178106], "accuracy": [0.2347113937139511, 0.15757495164871216, 0.10038304328918457, 0.09470347315073013, 0.09906221181154251, 0.09642054885625839], "val_loss": [1.9727225303649902, 1.979896068572998, 1.9743546077183314, 1.9735754558018275, 1.9736683028084892, 1.973670278276716], "val_accuracy": [0.12866666913032532, 0.09833333641290665, 0.09833333641290665, 0.10233332961797714, 0.09833333641290665, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 0, 1, 4, 9, 3, 8, 1, 2, 1, 5, 2, 9, 3, 2, 2, 9, 5, 0, 2, 8, 2, 0, 9, 2], [1, 0, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [28, 16, 35, 27, 57, 79, 53, 52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 5, 9, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 2, 3, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 6, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.1388571411371231, "mapping_values": [1, 30, 30, 20, 10, 5, 6, 6, 4, 2, 2, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))))), tf.math.subtract(grad, tf.math.square(tf.math.add(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(tf.math.add(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), grad), grad)))))))), tf.math.add(alpha, tf.math.square(tf.math.negative(tf.math.add(grad, tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.square(grad)), tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [13007281736136.406, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.13961167633533478, 0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [4, 8, 2, 4, 5, 8, 5, 1, 2, 1, 3, 2, 9, 3, 2, 2, 9, 5, 0, 2, 8, 2, 0, 9, 2], [0, 0, 2, 0, 2, 1, 0, 1, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [77, 10, 35, 27, 57, 79, 53, 52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 2, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [41, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 9, 6, 3, 13, 13, 8, 5, 3, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))))), tf.math.subtract(grad, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))))))), tf.math.add(tf.math.add(alpha, grad), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(sigma, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [17064.93917576682, 2.3119507717371395, 2.3049692894095806, 2.303445107586364, 2.3031494325225412, 2.302960623871019, 2.3030306877571562], "accuracy": [0.09655263274908066, 0.09206181764602661, 0.09206181764602661, 0.09655263274908066, 0.09166556596755981, 0.09338264167308807, 0.0952318087220192], "val_loss": [1.9851111003330775, 1.9759386607578822, 1.9738358088902064, 1.9737015451703752, 1.9736945288521903, 1.9737268856593542, 1.9735683713640486], "val_accuracy": [0.09966666996479034, 0.10400000214576721, 0.09966666996479034, 0.09733333438634872, 0.10000000149011612, 0.10233332961797714, 0.10400000214576721]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [2, 4, 2, 2, 3, 2, 2, 1, 2, 1, 5, 2, 6, 3, 8, 6, 9, 5, 0, 2, 8, 2, 0, 9, 2], [1, 1, 2, 2, 2, 2, 1, 2, 0, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [55, 18, 35, 27, 57, 79, 12, 74], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [2, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 4, 0, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [48.219619603598545, 565.9780470626764, 2364.1184532519233, 6132.765075707779, 12924.115668288123, 23793.53730853132], "accuracy": [0.10011887550354004, 0.1022322028875351, 0.09774138033390045, 0.1018359512090683, 0.09866596013307571, 0.09655263274908066], "val_loss": [137.32084001813615, 833.6907610212054, 2619.855538504464, 6024.727818080357, 11577.424386160714, 19803.276227678572], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 4, 2, 1, 3, 2, 2, 1, 6, 1, 5, 2, 6, 3, 8, 6, 9, 5, 0, 2, 8, 2, 0, 9, 2], [0, 0, 2, 2, 2, 1, 1, 1, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 10, 35, 27, 19, 79, 53, 52], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 4, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 24, 24, 12, 12, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(tf.math.subtract(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))))), grad), alpha), alpha)), tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.pow(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 8, 0, 4, 5, 3, 2, 1, 3, 1, 5, 2, 8, 2, 2, 6, 9, 5, 0, 2, 8, 2, 0, 9, 2], [0, 0, 2, 2, 2, 2, 0, 2, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 10, 35, 27, 57, 79, 53, 52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [5, 3, 9, 9, 2, 9], [0, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 24, 24, 14, 10, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.multiply(tf.math.subtract(tf.math.add(alpha, grad), grad), grad))))), tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.add(alpha, grad), grad))))), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302722691387438, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0], [3, 3, 2, 4, 2, 8, 2, 1, 2, 1, 5, 2, 0, 2, 2, 5, 9, 5, 0, 2, 8, 2, 0, 9, 2], [0, 0, 2, 2, 2, 2, 2, 0, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 10, 35, 27, 74, 79, 53, 52], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [1, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [2, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 30, 30, 18, 12, 7, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.sqrt(tf.math.add(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), grad)), grad))))), tf.math.square(tf.math.add(tf.math.negative(grad), tf.math.add(tf.math.add(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), grad)))), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.square(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, beta))", "other_info": {"loss": [2.3102319926759587, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08506141602993011, 0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0225646836417064, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.07599999755620956, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1], [3, 0, 2, 4, 5, 3, 1, 4, 2, 1, 5, 2, 9, 3, 2, 6, 9, 5, 0, 2, 8, 2, 0, 9, 2, 8, 5, 1, 2, 1], [0, 0, 2, 2, 2, 2, 2, 1, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [28, 16, 43, 27, 57, 79, 53, 52, 40], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [2, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 46, 46, 30, 16, 9, 19, 19, 12, 7, 4, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.multiply(tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(grad, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), grad)))), tf.math.add(alpha, grad)))), tf.math.square(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))), tf.math.add(alpha, grad)))))), tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))))), tf.math.add(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.square(tf.math.subtract(tf.math.add(alpha, tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, alpha)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.multiply(grad, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, tf.math.pow(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta))))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 3, 2, 4, 2, 8, 0, 1, 2, 1, 3, 2, 9, 3, 2, 6, 9, 5, 0, 2, 8, 2, 0, 9, 2], [0, 0, 0, 2, 2, 2, 1, 2, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 10, 35, 27, 57, 79, 53, 52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [2, 3, 2, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.09942857176065445, "mapping_values": [1, 23, 23, 13, 10, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 9, 5, 4, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)))), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), tf.math.subtract(tf.math.add(tf.math.add(alpha, grad), grad), alpha))), tf.math.subtract(tf.math.multiply(tf.math.add(grad, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(sigma, tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3023203785361837, 2.3022656846339316, 2.3044676196227187, 2.3211741089710642, 2.4533107557537344, 3.5625463577545613], "accuracy": [0.10421344637870789, 0.10513802617788315, 0.10711926966905594, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.9737018176487513, 1.9742165293012346, 1.9791128294808524, 2.0193108149937222, 2.3574604988098145, 4.6273698806762695], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 4, 2, 2, 3, 2, 2, 1, 2, 1, 5, 2, 6, 3, 8, 6, 9, 5, 0, 2, 8, 2, 0, 9, 2], [0, 0, 2, 2, 2, 2, 1, 1, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [55, 18, 35, 27, 57, 79, 12, 74], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [1, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [6, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.08514285832643509, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [8.494514002577196e+22, 1.0649033152288839e+23, 1.0457705510355268e+23, 1.0208618775504447e+23, 1.0616597814828537e+23, 1.0936932143336673e+23], "accuracy": [0.10738343745470047, 0.1080438494682312, 0.10421344637870789, 0.1080438494682312, 0.10711926966905594, 0.10738343745470047], "val_loss": [8.85625120531049e+22, 8.85625146265904e+22, 8.85625146265904e+22, 8.85625146265904e+22, 8.85625146265904e+22, 8.85625120531049e+22], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [3, 3, 2, 4, 3, 3, 2, 1, 2, 1, 5, 2, 6, 2, 2, 1, 9, 5, 0, 2, 8, 2, 0, 9, 2, 6, 9, 4, 5, 8, 0, 7, 6, 1, 4], [0, 0, 2, 2, 2, 2, 1, 2, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 10, 35, 27, 57, 79, 53, 52, 53, 61, 2], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 3, 9, 9, 2, 9], [2, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.0722857117652893, "mapping_values": [1, 57, 57, 35, 22, 11, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 44, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.multiply(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.subtract(tf.math.square(tf.math.add(alpha, grad)), grad), grad), tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.subtract(grad, alpha), grad), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))))))), tf.math.sqrt(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(tf.math.negative(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))))), grad))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))))))), tf.math.divide_no_nan(grad, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.pow(tf.math.add(alpha, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.30244750539467, 2.302571115870407, 2.30209673283957, 2.3023406950049097, 2.3007782075887246, 2.3003878433155487, 2.3019186084643017, 2.3007024307575965, 2.300362670709743, 2.3007987953841553, 2.300669365397786, 2.299982221292514, 2.300721938662667, 2.29948576418416, 2.2997236930777634, 2.3002504803296393, 2.300344704699916, 2.29981061590661, 2.3000342702317655, 2.3012701733520773, 2.2996246554611885, 2.2998582229102844, 2.299716769365697, 2.2994420451573756, 2.299044826483887, 2.3000036267839987, 2.2993877198261243, 2.2992919454359186, 2.3004057229769748], "accuracy": [0.09166556596755981, 0.08889182657003403, 0.09060890227556229, 0.09311848133802414, 0.08994849026203156, 0.09179764986038208, 0.09470347315073013, 0.09272222965955734, 0.09681680053472519, 0.09589222073554993, 0.09325055778026581, 0.09338264167308807, 0.09219389408826828, 0.10011887550354004, 0.10051512718200684, 0.0956280529499054, 0.09615638852119446, 0.09536388516426086, 0.09417514503002167, 0.09272222965955734, 0.10038304328918457, 0.09774138033390045, 0.10011887550354004, 0.09708096832036972, 0.1006472036242485, 0.09549596905708313, 0.1026284471154213, 0.09747721254825592, 0.10077928751707077], "val_loss": [1.970294679914202, 1.9699766976492745, 1.969778060913086, 1.9695871216910226, 1.9694476808820451, 1.9693628719874792, 1.969224180494036, 1.9691690036228724, 1.9691546303885323, 1.9691132817949568, 1.9690979548863001, 1.969114099230085, 1.96914884022304, 1.9691876002720423, 1.9691754068647112, 1.9691905975341797, 1.9691582407270158, 1.9691179820469447, 1.9691148485456194, 1.9690873963492257, 1.9690557207380022, 1.96905483518328, 1.969074044908796, 1.9691127368382044, 1.9691358975001745, 1.9691764286586217, 1.9692296981811523, 1.9693034717014857, 1.9693640981401717], "val_accuracy": [0.0430000014603138, 0.045666664838790894, 0.04833333194255829, 0.05066666752099991, 0.050999999046325684, 0.052666667848825455, 0.05700000002980232, 0.05766666680574417, 0.05666666850447655, 0.05999999865889549, 0.05999999865889549, 0.061000000685453415, 0.061000000685453415, 0.06300000101327896, 0.06499999761581421, 0.06800000369548798, 0.07266666740179062, 0.0729999989271164, 0.07366666942834854, 0.07433333247900009, 0.07566666603088379, 0.07633333653211594, 0.07533333450555801, 0.07766667008399963, 0.07599999755620956, 0.07733333110809326, 0.07599999755620956, 0.07433333247900009, 0.07433333247900009]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 0, 2, 4, 5, 3, 2, 1, 0, 1, 5, 2, 9, 3, 2, 6, 9, 5, 0, 2, 8, 2, 0, 9, 2], [0, 0, 2, 2, 2, 1, 1, 2, 0, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 10, 35, 27, 57, 79, 53, 52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.0722857117652893, "mapping_values": [1, 15, 15, 8, 7, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), grad)), grad))), grad)), tf.math.subtract(tf.math.add(alpha, alpha), alpha))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.30244750539467, 2.302571115870407, 2.30209673283957, 2.3023406950049097, 2.3007782075887246, 2.3003878433155487, 2.3019186084643017, 2.3007024307575965, 2.300362670709743, 2.3007987953841553, 2.300669365397786, 2.299982221292514, 2.300721938662667, 2.29948576418416, 2.2997236930777634, 2.3002504803296393, 2.300344704699916, 2.29981061590661, 2.3000342702317655, 2.3012701733520773, 2.2996246554611885, 2.2998582229102844, 2.299716769365697, 2.2994420451573756, 2.299044826483887, 2.3000036267839987, 2.2993877198261243, 2.2992919454359186, 2.3004057229769748], "accuracy": [0.09166556596755981, 0.08889182657003403, 0.09060890227556229, 0.09311848133802414, 0.08994849026203156, 0.09179764986038208, 0.09470347315073013, 0.09272222965955734, 0.09681680053472519, 0.09589222073554993, 0.09325055778026581, 0.09338264167308807, 0.09219389408826828, 0.10011887550354004, 0.10051512718200684, 0.0956280529499054, 0.09615638852119446, 0.09536388516426086, 0.09417514503002167, 0.09272222965955734, 0.10038304328918457, 0.09774138033390045, 0.10011887550354004, 0.09708096832036972, 0.1006472036242485, 0.09549596905708313, 0.1026284471154213, 0.09747721254825592, 0.10077928751707077], "val_loss": [1.970294679914202, 1.9699766976492745, 1.969778060913086, 1.9695871216910226, 1.9694476808820451, 1.9693628719874792, 1.969224180494036, 1.9691690036228724, 1.9691546303885323, 1.9691132817949568, 1.9690979548863001, 1.969114099230085, 1.96914884022304, 1.9691876002720423, 1.9691754068647112, 1.9691905975341797, 1.9691582407270158, 1.9691179820469447, 1.9691148485456194, 1.9690873963492257, 1.9690557207380022, 1.96905483518328, 1.969074044908796, 1.9691127368382044, 1.9691358975001745, 1.9691764286586217, 1.9692296981811523, 1.9693034717014857, 1.9693640981401717], "val_accuracy": [0.0430000014603138, 0.045666664838790894, 0.04833333194255829, 0.05066666752099991, 0.050999999046325684, 0.052666667848825455, 0.05700000002980232, 0.05766666680574417, 0.05666666850447655, 0.05999999865889549, 0.05999999865889549, 0.061000000685453415, 0.061000000685453415, 0.06300000101327896, 0.06499999761581421, 0.06800000369548798, 0.07266666740179062, 0.0729999989271164, 0.07366666942834854, 0.07433333247900009, 0.07566666603088379, 0.07633333653211594, 0.07533333450555801, 0.07766667008399963, 0.07599999755620956, 0.07733333110809326, 0.07599999755620956, 0.07433333247900009, 0.07433333247900009]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [3, 3, 2, 4, 3, 3, 2, 1, 2, 1, 5, 2, 6, 2, 2, 5, 8, 5, 0, 6, 8, 2, 3, 9, 2, 5, 1, 6, 9, 6, 7, 0, 2, 8], [3, 0, 2, 2, 2, 2, 1, 1, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [55, 18, 35, 27, 57, 79, 12, 74, 25], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 56, 56, 34, 22, 9, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 3, 1, 1], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.subtract(tf.math.square(tf.math.add(alpha, grad)), grad), grad), tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(grad, alpha)), tf.math.add(alpha, alpha)), grad)))))), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.math.multiply(alpha, tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))))))))), tf.math.add(alpha, tf.math.add(tf.math.square(grad), tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))))))))))), tf.math.negative(tf.math.add(alpha, tf.math.add(alpha, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))))), tf.math.sqrt(tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3026085167261177, 2.303122836333287, 2.302910015016515, 2.3034660945620757, 2.302056944711947, 2.301746591238723], "accuracy": [0.09153348207473755, 0.08730682730674744, 0.09047681838274002, 0.08928807079792023, 0.08836349099874496, 0.08757099509239197], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 8, 2, 5, 5, 4, 2, 1, 2, 1, 5, 2, 9, 0, 2, 6, 9, 5, 0, 2, 8, 2, 0, 9, 2], [0, 0, 2, 2, 2, 1, 1, 1, 2, 2, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [77, 10, 35, 27, 57, 79, 53, 52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 3, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [77, 25, 50, 71, 34]], "fitness": -0.03685714304447174, "mapping_values": [1, 16, 16, 9, 7, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.pow(tf.math.add(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))), alpha))))))), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.multiply(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3031226935214715, 2.305133419014192, 2.306621223692062, 2.309262891282432, 2.3103598651475346, 2.3132807138085507], "accuracy": [0.09008057415485382, 0.08519349992275238, 0.08453308790922165, 0.07951393723487854, 0.07845727354288101, 0.07700435817241669], "val_loss": [1.971635205405099, 1.9731057030814034, 1.9747342382158553, 1.976431233542306, 1.9787611961364746, 1.9813835961478097], "val_accuracy": [0.032999999821186066, 0.027000000700354576, 0.023666666820645332, 0.02666666731238365, 0.024666666984558105, 0.025333333760499954]}}]