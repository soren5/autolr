[{"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [88, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1], [2, 2, 9, 6, 4, 8, 9, 4, 3, 2, 4, 8, 8, 1, 1, 8, 9, 2], [2, 2, 3, 3, 3, 3, 2, 0, 0, 0], [85, 32, 50, 14, 35, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [42, 9, 43, 71, 34]], "fitness": -0.8008571267127991, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.028677225112915, 1.5091544389724731, 1.1376941204071045, 0.9056792855262756, 0.8505746126174927, 0.7987151145935059, 0.7703439593315125, 0.6909900903701782, 0.7084850668907166, 0.6961884498596191, 0.6700172424316406, 0.6462751030921936, 0.6558412909507751, 0.6339370012283325, 0.6158179044723511, 0.592800498008728, 0.6008026003837585, 0.5700501799583435, 0.5687332153320312, 0.5529582500457764, 0.5691556334495544, 0.5447975993156433, 0.5324845314025879, 0.5351207256317139, 0.525276780128479, 0.5082848072052002, 0.5231003165245056, 0.5224518179893494, 0.5014908909797668, 0.49619320034980774, 0.49060213565826416, 0.49484094977378845, 0.4742032587528229, 0.4727519452571869, 0.472072571516037, 0.4718558192253113, 0.45290160179138184, 0.4604152739048004, 0.4570923447608948, 0.445354163646698, 0.44915974140167236, 0.4283537268638611, 0.429756224155426, 0.4257621467113495, 0.42297935485839844, 0.42510223388671875, 0.4056040048599243, 0.4169425964355469, 0.41177570819854736, 0.40298572182655334, 0.39690878987312317, 0.4117767810821533, 0.3918752670288086, 0.40184497833251953, 0.3828113377094269], "accuracy": [0.3261128067970276, 0.4703473746776581, 0.5919957756996155, 0.668339729309082, 0.6857746839523315, 0.7045304179191589, 0.7038700580596924, 0.7417778372764587, 0.7359662055969238, 0.7337207794189453, 0.7479857206344604, 0.7560427784919739, 0.7497028112411499, 0.7573636174201965, 0.7667415142059326, 0.7790252566337585, 0.7708360552787781, 0.7891955971717834, 0.783119797706604, 0.7975168228149414, 0.7869502305984497, 0.7940827012062073, 0.7998943328857422, 0.7994980812072754, 0.8009510040283203, 0.8108572363853455, 0.8049134612083435, 0.8039889335632324, 0.8148196935653687, 0.8136309385299683, 0.8226125836372375, 0.813498854637146, 0.8265751004219055, 0.822348415851593, 0.8212917447090149, 0.8257825970649719, 0.8310658931732178, 0.8302733898162842, 0.8334434032440186, 0.8338396549224854, 0.8339717388153076, 0.8388587832450867, 0.839519202709198, 0.8433496356010437, 0.8448025584220886, 0.8388587832450867, 0.8462554216384888, 0.8485008478164673, 0.8481045961380005, 0.8498216867446899, 0.8540483713150024, 0.8451988101005554, 0.8565579056739807, 0.8512746095657349, 0.8560295701026917], "val_loss": [1.6760950088500977, 1.1189932823181152, 0.7991846799850464, 0.8067816495895386, 0.7575625777244568, 0.6654496788978577, 0.6401721239089966, 0.615630030632019, 0.6758081316947937, 0.6144148111343384, 0.5936986207962036, 0.5937485098838806, 0.6519777774810791, 0.5647297501564026, 0.5585456490516663, 0.5651736855506897, 0.5483720898628235, 0.5712072849273682, 0.5116603374481201, 0.5641794204711914, 0.5177130699157715, 0.5278493762016296, 0.48103979229927063, 0.5052615404129028, 0.4842773973941803, 0.4735550880432129, 0.49268457293510437, 0.517249345779419, 0.46312621235847473, 0.45811939239501953, 0.4905967116355896, 0.4608845114707947, 0.44368305802345276, 0.46916016936302185, 0.45956021547317505, 0.4499647617340088, 0.4377610683441162, 0.4284721612930298, 0.43464991450309753, 0.4501460790634155, 0.4249523878097534, 0.4175380766391754, 0.41442573070526123, 0.41405314207077026, 0.40788713097572327, 0.4117831885814667, 0.4383834898471832, 0.40710437297821045, 0.4110170006752014, 0.39276236295700073, 0.4278521239757538, 0.39647167921066284, 0.4555101990699768, 0.397277295589447, 0.3935825526714325], "val_accuracy": [0.37833333015441895, 0.5630000233650208, 0.7080000042915344, 0.7146666646003723, 0.7200000286102295, 0.746999979019165, 0.7606666684150696, 0.7643333077430725, 0.7286666631698608, 0.7620000243186951, 0.7706666588783264, 0.7639999985694885, 0.7226666808128357, 0.778333306312561, 0.7923333048820496, 0.7826666831970215, 0.7906666398048401, 0.7796666622161865, 0.8086666464805603, 0.7713333368301392, 0.7823333144187927, 0.7963333129882812, 0.8226666450500488, 0.8023333549499512, 0.8149999976158142, 0.8246666789054871, 0.8106666803359985, 0.7996666431427002, 0.8193333148956299, 0.8343333601951599, 0.8109999895095825, 0.8196666836738586, 0.8379999995231628, 0.8183333277702332, 0.8220000267028809, 0.8299999833106995, 0.8346666693687439, 0.8396666646003723, 0.8386666774749756, 0.8266666531562805, 0.843999981880188, 0.8433333039283752, 0.8463333249092102, 0.8416666388511658, 0.8486666679382324, 0.8503333330154419, 0.8349999785423279, 0.8443333506584167, 0.846666693687439, 0.8560000061988831, 0.8393333554267883, 0.8560000061988831, 0.8259999752044678, 0.8496666550636292, 0.8513333201408386]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [88, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0], [5, 4, 6, 8, 3, 1, 9, 4, 3, 4, 4, 8, 8, 2, 1, 8, 9, 0], [2, 2, 3, 1, 0, 3, 2, 0, 0, 0], [64, 32, 50, 14, 35, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [7, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [42, 9, 43, 71, 34]], "fitness": -0.7968571186065674, "mapping_values": [1, 1, 1, 0, 1, 1, 26, 26, 17, 9, 5, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta)))), tf.math.add(beta, grad))), tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad))))), beta)), tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(sigma), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.0323498249053955, 1.3691182136535645, 1.0895863771438599, 0.9292666912078857, 0.8099318742752075, 0.7785153985023499, 0.7451995611190796, 0.7722869515419006, 0.7030010223388672, 0.7054744362831116, 0.680495023727417, 0.6873597502708435, 0.635312020778656, 0.6141974925994873, 0.5958446860313416, 0.6185311675071716, 0.5939069390296936, 0.5746621489524841, 0.566881000995636, 0.5750703811645508, 0.5557696223258972, 0.5408831834793091, 0.5427001118659973, 0.5318250060081482, 0.5366389155387878, 0.507543683052063, 0.5300991535186768], "accuracy": [0.3288865387439728, 0.5110289454460144, 0.6108836531639099, 0.6606789231300354, 0.6927750706672668, 0.7067758440971375, 0.7160216569900513, 0.7013604640960693, 0.7384757399559021, 0.7273808121681213, 0.7464007139205933, 0.7396644949913025, 0.7580240368843079, 0.7733456492424011, 0.7816668748855591, 0.7685906887054443, 0.7815347909927368, 0.7845727205276489, 0.7887993454933167, 0.7895918488502502, 0.7926297783851624, 0.8014793395996094, 0.7961959838867188, 0.8082155585289001, 0.798309326171875, 0.8152159452438354, 0.8010830879211426], "val_loss": [1.5296502113342285, 1.1714814901351929, 0.8985546827316284, 0.7134904265403748, 0.69830322265625, 0.674351692199707, 0.8303312063217163, 0.6673939228057861, 0.654008150100708, 0.6432377696037292, 0.6901791095733643, 0.5816704630851746, 0.5925836563110352, 0.5567401647567749, 0.5446456670761108, 0.5702871084213257, 0.5632556080818176, 0.5351584553718567, 0.498995840549469, 0.549787700176239, 0.5342888832092285, 0.48000118136405945, 0.494383841753006, 0.48101815581321716, 0.4795002341270447, 0.4705030024051666, 0.4713417887687683], "val_accuracy": [0.4516666531562805, 0.574999988079071, 0.6539999842643738, 0.7360000014305115, 0.7196666598320007, 0.7403333187103271, 0.659333348274231, 0.7463333606719971, 0.7563333511352539, 0.737333357334137, 0.7316666841506958, 0.7766666412353516, 0.7680000066757202, 0.7906666398048401, 0.8040000200271606, 0.7823333144187927, 0.7739999890327454, 0.8013333082199097, 0.8143333196640015, 0.7876666784286499, 0.7889999747276306, 0.82833331823349, 0.8233333230018616, 0.8256666660308838, 0.8193333148956299, 0.815666675567627, 0.8199999928474426]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [88, 74, 59, 56, 8, 79, 86, 52, 44], [1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], [5, 5, 9, 8, 4, 1, 9, 4, 3, 0, 4, 8, 8, 1, 1, 8, 9, 0], [2, 2, 3, 1, 0, 3, 2, 0, 0, 0], [41, 32, 50, 14, 35, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [7, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [42, 9, 43, 71, 34]], "fitness": -0.7954285740852356, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 3, 0, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.square(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.032339334487915, 1.3703484535217285, 1.0917409658432007, 0.9261212348937988, 0.8126999735832214, 0.8161295056343079, 0.7459113597869873, 0.7462344765663147, 0.6948182582855225, 0.7064340114593506, 0.6719790101051331, 0.6827247142791748, 0.6371109485626221, 0.6165567636489868, 0.5962086915969849, 0.6359143257141113, 0.5844115018844604, 0.5753345489501953, 0.5647826790809631, 0.571196973323822, 0.5576469302177429, 0.5375348329544067, 0.5429544448852539, 0.5324980616569519, 0.507879912853241, 0.5280165076255798, 0.5238124132156372, 0.49998947978019714, 0.5082510113716125], "accuracy": [0.3288865387439728, 0.5112931132316589, 0.6127327680587769, 0.6625280380249023, 0.6931713223457336, 0.6915863156318665, 0.7197200059890747, 0.7112666964530945, 0.7417778372764587, 0.7338528633117676, 0.7470611333847046, 0.741909921169281, 0.7586844563484192, 0.7730814814567566, 0.7810064554214478, 0.7589486241340637, 0.7841764688491821, 0.7820631265640259, 0.7921014428138733, 0.7926297783851624, 0.789988100528717, 0.8054417967796326, 0.793950617313385, 0.807158887386322, 0.8195747137069702, 0.8094043135643005, 0.8034605979919434, 0.8166688680648804, 0.8144234418869019], "val_loss": [1.529990553855896, 1.1769360303878784, 0.8801565766334534, 0.7153803110122681, 0.7250134348869324, 0.7080183029174805, 0.7123032808303833, 0.6633683443069458, 0.6691195368766785, 0.6001700162887573, 0.6815176606178284, 0.5769533514976501, 0.5914412140846252, 0.5523374080657959, 0.5489774346351624, 0.5627442598342896, 0.5332072377204895, 0.531599223613739, 0.4954656958580017, 0.5466334819793701, 0.5267286896705627, 0.4825255572795868, 0.5085720419883728, 0.4779503047466278, 0.5053015947341919, 0.4644334614276886, 0.4681035876274109, 0.47070035338401794, 0.4662654995918274], "val_accuracy": [0.4519999921321869, 0.5730000138282776, 0.6783333420753479, 0.7356666922569275, 0.7073333263397217, 0.7163333296775818, 0.703000009059906, 0.753333330154419, 0.7523333430290222, 0.7620000243186951, 0.7300000190734863, 0.7789999842643738, 0.7683333158493042, 0.7929999828338623, 0.7910000085830688, 0.7979999780654907, 0.7953333258628845, 0.8016666769981384, 0.8196666836738586, 0.7856666445732117, 0.7953333258628845, 0.8270000219345093, 0.8063333630561829, 0.8309999704360962, 0.7983333468437195, 0.8209999799728394, 0.8199999928474426, 0.8140000104904175, 0.8253333568572998]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [0, 74, 59, 56, 8, 79, 86, 52, 44], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1], [2, 2, 9, 6, 4, 8, 9, 4, 3, 2, 4, 8, 8, 1, 1, 8, 9, 2], [3, 2, 0, 3, 3, 3, 2, 0, 0, 0], [41, 20, 50, 14, 35, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [7, 3], [58], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [42, 9, 43, 71, 34]], "fitness": -0.7945713996887207, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.032365560531616, 1.3702776432037354, 1.0983513593673706, 0.9126958250999451, 0.8308936953544617, 0.7810408473014832, 0.7247381210327148, 0.7833795547485352, 0.7042585611343384, 0.7007195353507996, 0.6806769371032715, 0.68156498670578, 0.6358477473258972, 0.6131221652030945, 0.5957173705101013, 0.6199756860733032, 0.5971201658248901, 0.5780615210533142, 0.5712353587150574, 0.576678454875946, 0.5572062730789185, 0.5386348366737366, 0.5404305458068848, 0.537148118019104, 0.5080334544181824, 0.5225370526313782, 0.5314877033233643, 0.500432550907135, 0.5053074955940247], "accuracy": [0.32901862263679504, 0.5114251971244812, 0.6107515692710876, 0.6684718132019043, 0.6832650899887085, 0.7057191729545593, 0.7251353859901428, 0.7047945857048035, 0.7392682433128357, 0.7306828498840332, 0.7386078238487244, 0.7420420050621033, 0.7614582180976868, 0.7734777331352234, 0.7820631265640259, 0.7643640041351318, 0.7774402499198914, 0.7837802171707153, 0.7882710099220276, 0.7873464822769165, 0.7923656105995178, 0.8037247657775879, 0.7980451583862305, 0.8053097128868103, 0.8175934553146362, 0.8100647330284119, 0.7996301651000977, 0.8157442808151245, 0.8153480291366577], "val_loss": [1.5302472114562988, 1.1669015884399414, 0.8721075057983398, 0.7234863042831421, 0.7243215441703796, 0.6623532176017761, 0.8292759656906128, 0.6546108722686768, 0.6653337478637695, 0.6246649622917175, 0.6653389930725098, 0.5730832815170288, 0.5860134959220886, 0.5607033371925354, 0.5531026124954224, 0.5879296064376831, 0.5623186230659485, 0.5590506792068481, 0.5090907216072083, 0.5521278381347656, 0.5183348655700684, 0.48134109377861023, 0.5109674334526062, 0.475362628698349, 0.49972954392433167, 0.4632873833179474, 0.4670810401439667, 0.46677714586257935, 0.47244393825531006], "val_accuracy": [0.45100000500679016, 0.5773333311080933, 0.6930000185966492, 0.7196666598320007, 0.7120000123977661, 0.7506666779518127, 0.6506666541099548, 0.7570000290870667, 0.7486666440963745, 0.7446666955947876, 0.7450000047683716, 0.7836666703224182, 0.7739999890327454, 0.7846666574478149, 0.7870000004768372, 0.7693333625793457, 0.7739999890327454, 0.7896666526794434, 0.8033333420753479, 0.7870000004768372, 0.8016666769981384, 0.8253333568572998, 0.8050000071525574, 0.8316666483879089, 0.7943333387374878, 0.8253333568572998, 0.8220000267028809, 0.8166666626930237, 0.8230000138282776]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [88, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], [5, 4, 9, 0, 0, 1, 9, 4, 3, 0, 4, 8, 8, 1, 1, 8, 9, 0], [2, 2, 3, 1, 0, 3, 2, 0, 0, 0], [48, 32, 50, 14, 35, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [7, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [42, 9, 43, 71, 34]], "fitness": -0.7925714254379272, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.pow(beta, tf.math.add(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.032341480255127, 1.370125412940979, 1.0956017971038818, 0.9073514938354492, 0.8313404321670532, 0.790203869342804, 0.7519477009773254, 0.7349013090133667, 0.6985769867897034, 0.6997723579406738, 0.679075300693512, 0.6854234933853149, 0.633012056350708, 0.6154557466506958, 0.5950409173965454, 0.6147490739822388, 0.5896338820457458, 0.576777994632721, 0.5650581121444702, 0.5746338367462158, 0.5545432567596436, 0.534883439540863, 0.5512088537216187, 0.5335119366645813, 0.5114145278930664, 0.5145067572593689, 0.5305563807487488, 0.49996426701545715, 0.5028287172317505], "accuracy": [0.32901862263679504, 0.5112931132316589, 0.6106194853782654, 0.6723021864891052, 0.6833971738815308, 0.7055870890617371, 0.7141724824905396, 0.7160216569900513, 0.7416457533836365, 0.7301545143127441, 0.7416457533836365, 0.7420420050621033, 0.7605336308479309, 0.7708360552787781, 0.7821952104568481, 0.7693831920623779, 0.7816668748855591, 0.7829877138137817, 0.7911768555641174, 0.787082314491272, 0.7927618622779846, 0.8080834746360779, 0.7891955971717834, 0.8064984679222107, 0.8158763647079468, 0.811649739742279, 0.7997622489929199, 0.8156121969223022, 0.8166688680648804], "val_loss": [1.5306482315063477, 1.182240605354309, 0.8758424520492554, 0.7169249653816223, 0.7313849925994873, 0.6764315962791443, 0.7136111855506897, 0.6546672582626343, 0.6683233976364136, 0.6260213851928711, 0.6814256310462952, 0.5798439979553223, 0.5971240401268005, 0.552644670009613, 0.5439243912696838, 0.5610968470573425, 0.5598532557487488, 0.5421111583709717, 0.5032956004142761, 0.5506744980812073, 0.5139780044555664, 0.4836185574531555, 0.49163714051246643, 0.4798212945461273, 0.4898732602596283, 0.47150278091430664, 0.46868225932121277, 0.47216516733169556, 0.46308663487434387], "val_accuracy": [0.4516666531562805, 0.5723333358764648, 0.6893333196640015, 0.7283333539962769, 0.7083333134651184, 0.7513333559036255, 0.7070000171661377, 0.7523333430290222, 0.746999979019165, 0.7436666488647461, 0.734000027179718, 0.7799999713897705, 0.7609999775886536, 0.7916666865348816, 0.7946666479110718, 0.7896666526794434, 0.7713333368301392, 0.8013333082199097, 0.8090000152587891, 0.7870000004768372, 0.8040000200271606, 0.8246666789054871, 0.8270000219345093, 0.8289999961853027, 0.8066666722297668, 0.8119999766349792, 0.8163333535194397, 0.812666654586792, 0.8270000219345093]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [88, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], [3, 2, 9, 6, 4, 8, 9, 4, 3, 2, 4, 8, 8, 1, 1, 8, 9, 2], [2, 1, 3, 3, 3, 3, 2, 0, 0, 0], [85, 32, 50, 14, 35, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [2, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [1, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [42, 9, 43, 71, 34]], "fitness": -0.772857129573822, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 7, 3, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))), alpha), grad))), tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0323493480682373, 1.3696798086166382, 1.0951826572418213, 0.9205912947654724, 0.8154222965240479, 0.777769148349762, 0.7701195478439331, 0.7274624705314636, 0.7052593231201172, 0.6998053789138794, 0.6763883829116821, 0.6886751651763916, 0.6358364820480347, 0.616737425327301, 0.5921568274497986, 0.6191102862358093, 0.5885515809059143, 0.5801728367805481, 0.5736327171325684, 0.5718653202056885], "accuracy": [0.3288865387439728, 0.5110289454460144, 0.6096948981285095, 0.6623960137367249, 0.6922467350959778, 0.7098137736320496, 0.7111346125602722, 0.7205125093460083, 0.7375511527061462, 0.7312111854553223, 0.746268630027771, 0.741909921169281, 0.759080708026886, 0.7705719470977783, 0.7817989587783813, 0.7691190242767334, 0.7857614755630493, 0.780610203742981, 0.7881389260292053, 0.7893276810646057], "val_loss": [1.5297253131866455, 1.1663997173309326, 0.874925434589386, 0.719793438911438, 0.6955097913742065, 0.6919649839401245, 0.6802079677581787, 0.6722309589385986, 0.6694046258926392, 0.6201468110084534, 0.6869518160820007, 0.5814328789710999, 0.6010539531707764, 0.5466955900192261, 0.5413675308227539, 0.560436487197876, 0.5547372102737427, 0.5512508749961853, 0.5106600522994995, 0.5471120476722717], "val_accuracy": [0.45133334398269653, 0.5770000219345093, 0.6806666851043701, 0.734000027179718, 0.7286666631698608, 0.7450000047683716, 0.7286666631698608, 0.7459999918937683, 0.7429999709129333, 0.7453333139419556, 0.7310000061988831, 0.7789999842643738, 0.7603333592414856, 0.7976666688919067, 0.8063333630561829, 0.7886666655540466, 0.7803333401679993, 0.79666668176651, 0.8046666383743286, 0.7900000214576721]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [88, 74, 59, 56, 8, 79, 86, 52, 44], [1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], [5, 4, 9, 5, 0, 1, 2, 4, 3, 0, 4, 8, 8, 1, 1, 8, 9, 0], [2, 2, 3, 1, 0, 3, 2, 0, 0, 0], [45, 32, 50, 14, 35, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [7, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [1, 9, 43, 71, 34]], "fitness": -0.10828571766614914, "mapping_values": [1, 1, 1, 0, 1, 0, 24, 24, 17, 7, 3, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 44, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.pow(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.square(tf.math.negative(tf.math.subtract(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.subtract(alpha, tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))))))), grad), tf.math.subtract(beta, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))))))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3016233444213867, 2.301908016204834, 2.3025856018066406, 2.301612377166748, 2.30076265335083, 2.302544355392456, 2.3025741577148438, 2.301603078842163, 2.3019042015075684, 2.2995245456695557, 2.3008487224578857, 2.2994720935821533, 2.29941725730896, 2.299407720565796, 2.299949884414673, 2.2985785007476807, 2.300685167312622, 2.299898386001587, 2.300834894180298, 2.301532506942749, 2.299182891845703, 2.3001067638397217, 2.299159049987793, 2.2987616062164307, 2.3001575469970703, 2.2994418144226074, 2.3005502223968506, 2.298980951309204, 2.2999424934387207, 2.2984135150909424, 2.298022508621216, 2.2991435527801514, 2.300203561782837, 2.2981820106506348, 2.2984089851379395, 2.2971444129943848, 2.296772003173828, 2.298743724822998, 2.297621250152588, 2.297830820083618, 2.2984070777893066, 2.296976327896118, 2.2978572845458984, 2.2971463203430176, 2.297226905822754, 2.297837734222412, 2.297212839126587, 2.2976574897766113, 2.296721935272217, 2.2972521781921387, 2.2971527576446533, 2.294943332672119, 2.2973690032958984, 2.2962405681610107, 2.2954797744750977, 2.2956056594848633, 2.2963433265686035, 2.296172618865967, 2.295137643814087, 2.2949750423431396, 2.295473337173462, 2.296164035797119, 2.2953474521636963, 2.2949888706207275, 2.292821168899536, 2.2943403720855713, 2.2945659160614014, 2.294334650039673, 2.295241594314575, 2.295616388320923, 2.2943177223205566, 2.2933969497680664, 2.2934868335723877, 2.293834924697876, 2.2958810329437256, 2.2935609817504883, 2.2919015884399414, 2.292875289916992, 2.294386625289917, 2.2933614253997803, 2.292816638946533, 2.292024612426758, 2.291959524154663, 2.2921459674835205, 2.2919676303863525, 2.2915918827056885, 2.293430805206299, 2.293461799621582, 2.2915120124816895, 2.290955066680908, 2.29125714302063, 2.2929141521453857, 2.2919583320617676, 2.291208505630493, 2.2925643920898438, 2.2916674613952637, 2.2932465076446533, 2.2908289432525635, 2.2907352447509766, 2.290968179702759], "accuracy": [0.09774138033390045, 0.09008057415485382, 0.08638224750757217, 0.09021265059709549, 0.0940430611371994, 0.09536388516426086, 0.08558975160121918, 0.09034473448991776, 0.08625016361474991, 0.09602430462837219, 0.09509972482919693, 0.09430722147226334, 0.0952318087220192, 0.09417514503002167, 0.09509972482919693, 0.1010434553027153, 0.09642054885625839, 0.09470347315073013, 0.09628847241401672, 0.09589222073554993, 0.09655263274908066, 0.09325055778026581, 0.0948355570435524, 0.10117553919553757, 0.09628847241401672, 0.09708096832036972, 0.09760929644107819, 0.09536388516426086, 0.09655263274908066, 0.09668471664190292, 0.09734513610601425, 0.09945846349000931, 0.09206181764602661, 0.09747721254825592, 0.10447761416435242, 0.10342095047235489, 0.09787346422672272, 0.10117553919553757, 0.09893012791872025, 0.10593052208423615, 0.09853387624025345, 0.10513802617788315, 0.09787346422672272, 0.10711926966905594, 0.10011887550354004, 0.1026284471154213, 0.10408136248588562, 0.09906221181154251, 0.109232597053051, 0.10606260597705841, 0.10434553027153015, 0.10817593336105347, 0.10381719470024109, 0.10513802617788315, 0.10777968913316727, 0.10962884873151779, 0.1080438494682312, 0.09879804402589798, 0.10460969805717468, 0.10394927859306335, 0.10487385839223862, 0.10619468986988068, 0.11253467202186584, 0.1088363528251648, 0.11293092370033264, 0.11081759631633759, 0.10579843819141388, 0.11213842034339905, 0.10857218503952026, 0.10579843819141388, 0.11108175665140152, 0.11161009222269058, 0.11213842034339905, 0.11319508403539658, 0.10513802617788315, 0.10962884873151779, 0.10870426893234253, 0.1142517477273941, 0.10791176557540894, 0.11174217611551285, 0.11847840249538422, 0.1162329912185669, 0.1146479994058609, 0.11795007437467575, 0.1150442510843277, 0.11834631860256195, 0.11398758739233017, 0.11596883088350296, 0.11728965491056442, 0.11517632752656937, 0.120459645986557, 0.11042134463787079, 0.11332716792821884, 0.11636507511138916, 0.12138422578573227, 0.11200633645057678, 0.11134592443704605, 0.12257297337055206, 0.11728965491056442, 0.11927089840173721], "val_loss": [2.2999320030212402, 2.299804449081421, 2.2996764183044434, 2.299549102783203, 2.299421548843384, 2.2992959022521973, 2.2991697788238525, 2.299043655395508, 2.298917531967163, 2.2987916469573975, 2.2986631393432617, 2.2985360622406006, 2.2984094619750977, 2.2982826232910156, 2.2981560230255127, 2.2980308532714844, 2.297905206680298, 2.297778367996216, 2.297652006149292, 2.2975268363952637, 2.297401189804077, 2.297274351119995, 2.297149181365967, 2.297023057937622, 2.2968971729278564, 2.2967724800109863, 2.296647071838379, 2.296522378921509, 2.2963955402374268, 2.2962701320648193, 2.296144962310791, 2.2960188388824463, 2.2958929538726807, 2.2957675457000732, 2.2956411838531494, 2.295515298843384, 2.295389413833618, 2.2952630519866943, 2.2951385974884033, 2.2950127124786377, 2.294886827468872, 2.29475998878479, 2.294635534286499, 2.2945103645324707, 2.294384479522705, 2.294259786605835, 2.2941348552703857, 2.2940096855163574, 2.2938857078552246, 2.293760061264038, 2.293635368347168, 2.2935104370117188, 2.2933855056762695, 2.293259859085083, 2.2931363582611084, 2.293013095855713, 2.292889356613159, 2.2927656173706055, 2.29264235496521, 2.292517900466919, 2.2923946380615234, 2.292269468307495, 2.292144298553467, 2.2920196056365967, 2.2918941974639893, 2.291768789291382, 2.2916438579559326, 2.2915198802948, 2.2913951873779297, 2.291271448135376, 2.2911481857299805, 2.2910234928131104, 2.290898561477661, 2.2907731533050537, 2.2906486988067627, 2.2905240058898926, 2.2903993129730225, 2.290276288986206, 2.2901523113250732, 2.2900285720825195, 2.289904832839966, 2.289780378341675, 2.2896552085876465, 2.2895314693450928, 2.2894058227539062, 2.289280891418457, 2.2891578674316406, 2.2890331745147705, 2.2889084815979004, 2.288783311843872, 2.2886598110198975, 2.2885348796844482, 2.288409948348999, 2.288285732269287, 2.288161516189575, 2.2880377769470215, 2.287914276123047, 2.2877910137176514, 2.2876672744750977, 2.287543296813965], "val_accuracy": [0.03733333200216293, 0.038333334028720856, 0.039000000804662704, 0.03933333232998848, 0.03966666758060455, 0.0403333343565464, 0.0416666679084301, 0.04233333468437195, 0.0430000014603138, 0.043666668236255646, 0.04399999976158142, 0.04600000008940697, 0.04633333161473274, 0.047333333641290665, 0.04833333194255829, 0.04866666719317436, 0.049666665494441986, 0.049666665494441986, 0.049666665494441986, 0.049666665494441986, 0.050333332270383835, 0.050333332270383835, 0.05166666582226753, 0.05233333259820938, 0.0533333346247673, 0.0533333346247673, 0.05400000140070915, 0.054666668176651, 0.0560000017285347, 0.05700000002980232, 0.0573333315551281, 0.057999998331069946, 0.05833333358168602, 0.058666665107011795, 0.05900000035762787, 0.05999999865889549, 0.06066666543483734, 0.061000000685453415, 0.06133333221077919, 0.06199999898672104, 0.06300000101327896, 0.06333333253860474, 0.06533333659172058, 0.0663333311676979, 0.06666667014360428, 0.06733333319425583, 0.0689999982714653, 0.07000000029802322, 0.07000000029802322, 0.07066666334867477, 0.0716666653752327, 0.0729999989271164, 0.07400000095367432, 0.07566666603088379, 0.07666666805744171, 0.07766667008399963, 0.07866666465997696, 0.0793333351612091, 0.08033332973718643, 0.08166666328907013, 0.08233333379030228, 0.08266666531562805, 0.08366666734218597, 0.0846666693687439, 0.08533333241939545, 0.08566666394472122, 0.08666666597127914, 0.08699999749660492, 0.08733333647251129, 0.08866667002439499, 0.08900000154972076, 0.09066666662693024, 0.09133332967758179, 0.09266666322946548, 0.09399999678134918, 0.09600000083446503, 0.0963333323597908, 0.0963333323597908, 0.0976666659116745, 0.09866666793823242, 0.0989999994635582, 0.10000000149011612, 0.10133333504199982, 0.10199999809265137, 0.10233332961797714, 0.10366666316986084, 0.10433333367109299, 0.10633333027362823, 0.10833333432674408, 0.109333336353302, 0.10999999940395355, 0.11033333092927933, 0.11100000143051147, 0.1120000034570694, 0.11299999803304672, 0.11366666853427887, 0.11666666716337204, 0.11699999868869781, 0.11833333224058151, 0.11966666579246521]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [88, 74, 59, 56, 8, 79, 86, 52, 44], [1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], [5, 4, 9, 0, 4, 1, 9, 4, 3, 0, 4, 8, 8, 1, 1, 8, 9, 0], [2, 2, 3, 1, 0, 3, 2, 0, 0, 0], [4, 32, 50, 14, 35, 78], [1, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [7, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [37, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 5, 5, 4, 1, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.pow(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(beta))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.negative(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302682638168335, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10170386731624603, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [88, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [2, 2, 9, 6, 4, 2, 9, 4, 3, 2, 4, 8, 8, 1, 1, 8, 9, 2], [3, 2, 3, 1, 0, 3, 2, 0, 0, 0], [85, 40, 50, 14, 35, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 6, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [42, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 26, 26, 16, 10, 6, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), beta)), grad), tf.math.add(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))), tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad))))), beta)), tf.math.subtract(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.divide_no_nan(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.302682638168335, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10117553919553757, 0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10233332961797714, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [88, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1], [5, 9, 9, 0, 0, 1, 9, 4, 3, 0, 4, 8, 8, 1, 1, 8, 9, 0], [2, 2, 3, 3, 3, 3, 2, 0, 0, 0], [48, 32, 50, 14, 35, 78], [1, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [7, 3], [], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [42, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302682638168335, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10170386731624603, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [88, 74, 59, 56, 8, 79, 86, 52, 44], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1], [5, 9, 9, 0, 0, 1, 9, 4, 3, 0, 4, 8, 8, 1, 1, 8, 9, 0], [0, 2, 3, 1, 0, 3, 2, 0, 0, 0], [41, 32, 50, 14, 35, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [7, 3], [], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [9, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 2, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [84, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302682638168335, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10170386731624603, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [88, 74, 59, 56, 8, 79, 86, 52, 44], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [2, 2, 9, 6, 4, 8, 9, 2, 3, 2, 4, 8, 8, 1, 1, 8, 9, 2], [3, 0, 3, 3, 3, 3, 2, 0, 0, 0], [41, 32, 18, 14, 35, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [7, 3], [], [1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 3, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [42, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 27, 27, 18, 9, 6, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.divide_no_nan(tf.math.pow(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.sqrt(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, grad))), tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.sqrt(tf.math.subtract(tf.math.add(beta, grad), tf.math.subtract(tf.math.sqrt(grad), tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))))), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07819310575723648, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [88, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], [5, 4, 9, 0, 0, 1, 9, 4, 3, 0, 4, 8, 8, 1, 1, 8, 9, 0], [2, 2, 3, 1, 0, 3, 2, 0, 0, 0], [48, 32, 50, 14, 35, 78], [1, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [7, 3], [], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [3, 4, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6, 7, 1], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [58, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 3, 1, 1, 1, 0, 0, 0, 0, 32, 18, 14, 4], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.pow(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.pow(tf.math.multiply(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(sigma, beta), tf.math.square(beta))), tf.math.multiply(tf.math.subtract(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)), tf.math.negative(tf.math.add(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(sigma, beta), beta)))))), tf.math.subtract(sigma, sigma))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10170386731624603, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [88, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], [5, 8, 9, 0, 0, 1, 9, 4, 3, 0, 4, 8, 8, 1, 1, 8, 9, 0], [2, 2, 3, 1, 0, 3, 2, 0, 0, 0], [13, 32, 50, 14, 35, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [7, 3], [], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [2, 1, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [42, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 3, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.sqrt(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [29.436893463134766, 2177.007080078125, 34715.94140625, 233972.328125, 1039114.125, 3379635.5], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09642054885625839, 0.10091137140989304, 0.09972262382507324, 0.10130762308835983], "val_loss": [186.35162353515625, 7126.314453125, 73389.9609375, 395019.53125, 1471321.25, 4327004.0], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [88, 74, 59, 56, 8, 79, 86, 52, 44], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], [5, 9, 9, 0, 0, 1, 9, 4, 3, 0, 4, 8, 8, 1, 1, 8, 9, 0], [3, 2, 3, 1, 0, 3, 2, 0, 0, 0], [48, 32, 50, 14, 35, 78], [0, 0, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [7, 3], [], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [42, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 2, 0, 1, 3, 2, 1, 1, 0, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [7429776.0, 140378272.0, 658934912.0, 1791375360.0, 3903624960.0, 7108658688.0], "accuracy": [0.10011887550354004, 0.09972262382507324, 0.09642054885625839, 0.10091137140989304, 0.09972262382507324, 0.10130762308835983], "val_loss": [32199000.0, 257158368.0, 867427968.0, 2055556096.0, 4014089472.0, 6935589376.0], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [88, 74, 59, 56, 8, 79, 86, 52, 44], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], [1, 2, 9, 0, 7, 8, 9, 4, 3, 2, 4, 8, 8, 1, 1, 8, 9, 2], [2, 2, 3, 1, 0, 3, 2, 0, 0, 0], [41, 41, 16, 14, 35, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [6, 3], [], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 7, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 1, 3, 3, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [42, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 7, 2, 2, 1, 1, 0, 1, 0, 11, 6, 5, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, tf.math.sqrt(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))))))))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.add(sigma, alpha)), tf.math.multiply(tf.math.add(sigma, sigma), tf.math.square(beta)))", "other_info": {"loss": [9440908288.0, 27030038.0, 1826588721152.0, 1.2026614521423462e+17, 8.001628774542267e+21, 5.1293518322795584e+26], "accuracy": [0.09232597798109055, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [13006.576171875, 905829760.0, 61200482172928.0, 4.035217019786756e+18, 2.6148991109062774e+23, 1.694779057477462e+28], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [88, 74, 59, 56, 8, 79, 86, 52, 44], [1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], [5, 4, 9, 8, 4, 1, 9, 4, 3, 0, 4, 8, 8, 1, 1, 8, 9, 0], [3, 2, 3, 1, 0, 3, 2, 0, 0, 0], [64, 32, 50, 14, 35, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [7, 3], [], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [37, 9, 43, 71, 34]], "fitness": -0.043142858892679214, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 11, 6, 5, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.multiply(sigma, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.add(sigma, beta), tf.math.square(beta)))", "other_info": {"loss": [2.3016719818115234, 2.302090883255005, 2.303065061569214, 2.3027515411376953, 2.303727149963379, 2.3082568645477295, 2.3124897480010986, 2.3178131580352783, 2.3290719985961914, 2.3483617305755615, 2.9162447452545166, 21277276.0, 641.2327270507812, 3291.843017578125], "accuracy": [0.09774138033390045, 0.08968432247638702, 0.08519349992275238, 0.08942015469074249, 0.08796724677085876, 0.08625016361474991, 0.07357019931077957, 0.07858935743570328, 0.07938185334205627, 0.09417514503002167, 0.09576013684272766, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.300062417984009, 2.3001279830932617, 2.300528049468994, 2.301633834838867, 2.3041038513183594, 2.3071699142456055, 2.311225175857544, 2.317826747894287, 2.3293864727020264, 2.3555526733398438, 163611568.0, 211.47666931152344, 1688.8038330078125, 6562.84326171875], "val_accuracy": [0.03733333200216293, 0.03700000047683716, 0.03400000184774399, 0.028333334252238274, 0.024666666984558105, 0.039000000804662704, 0.06933332979679108, 0.10066666454076767, 0.10199999809265137, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [88, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1], [5, 4, 6, 8, 4, 1, 9, 4, 3, 0, 4, 8, 8, 1, 1, 8, 9, 0], [2, 2, 3, 1, 0, 3, 2, 0, 0, 0], [85, 32, 50, 14, 35, 78], [0, 0, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [42, 9, 43, 71, 34]], "fitness": -0.04114285856485367, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 3, 2, 1, 1, 0, 11, 6, 5, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(sigma), tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(sigma, beta), tf.math.square(beta))))", "other_info": {"loss": [2.3016715049743652, 2.302074670791626, 2.3028719425201416, 2.3020174503326416, 2.3012852668762207, 2.3031818866729736], "accuracy": [0.09774138033390045, 0.08955223858356476, 0.08558975160121918, 0.08968432247638702, 0.09325055778026581, 0.09351472556591034], "val_loss": [2.300058603286743, 2.300058603286743, 2.300058603286743, 2.300058603286743, 2.300058603286743, 2.300058603286743], "val_accuracy": [0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [88, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1], [2, 2, 9, 6, 4, 8, 9, 4, 3, 2, 4, 8, 8, 1, 1, 8, 9, 2], [2, 2, 3, 1, 0, 3, 2, 0, 0, 0], [48, 32, 50, 14, 35, 78], [0, 0, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [7, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [42, 9, 43, 71, 34]], "fitness": -0.04114285856485367, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 3, 2, 1, 1, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3016715049743652, 2.302074670791626, 2.3028719425201416, 2.3020174503326416, 2.3012852668762207, 2.3031818866729736], "accuracy": [0.09774138033390045, 0.08955223858356476, 0.08558975160121918, 0.08968432247638702, 0.09325055778026581, 0.09351472556591034], "val_loss": [2.300058603286743, 2.300058603286743, 2.300058603286743, 2.300058603286743, 2.300058603286743, 2.300058603286743], "val_accuracy": [0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [88, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], [5, 9, 9, 0, 0, 1, 9, 4, 3, 0, 4, 8, 8, 1, 1, 8, 9, 0], [3, 2, 3, 1, 0, 3, 2, 0, 0, 0], [48, 32, 50, 14, 35, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 3, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [42, 9, 43, 71, 34]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(sigma))", "other_info": {"loss": [2.302180051803589, 2.304111957550049, 2.3073208332061768, 2.3082170486450195, 2.3105151653289795, 2.315800428390503], "accuracy": [0.09615638852119446, 0.08558975160121918, 0.0796460211277008, 0.08070268481969833, 0.07594769448041916, 0.07528728246688843], "val_loss": [2.30123233795166, 2.3030126094818115, 2.305246353149414, 2.3074095249176025, 2.3100521564483643, 2.3128156661987305], "val_accuracy": [0.03266666829586029, 0.029333332553505898, 0.02500000037252903, 0.023333333432674408, 0.023666666820645332, 0.028999999165534973]}}]