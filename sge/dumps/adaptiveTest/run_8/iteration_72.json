[{"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 1, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [41, 38]], "fitness": -0.772857129573822, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 7, 7, 3, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.add(tf.math.multiply(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), alpha)), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.2916494296006773, 2.2617385062748148, 2.229387746369283, 2.1878092470989094, 2.126802297993233, 2.04065533236049, 1.93214062209363, 1.7917886672160408, 1.6518480937399995, 1.5274969115941879, 1.4123131359698924, 1.334573110553488, 1.2533839002907032, 1.2110435612181851, 1.1413631658071635, 1.1034804472377224, 1.0855752843450703, 1.042277187860842, 1.0108557995189813, 0.9946307955385278, 0.9693251853416845, 0.946219936857575, 0.9327870769397442, 0.9308006815654633, 0.9007390045911849, 0.8969334085399228, 0.8774526264720731, 0.8668138885132751, 0.8568975507402149, 0.8558234039346193, 0.8494671141435253, 0.8304971827964395, 0.8252354687183855, 0.8141977202386872, 0.8110703882555746, 0.8042056021862309, 0.8030781104202205, 0.791366129763264, 0.7939162369748116, 0.7724202794169611, 0.776730292729257, 0.7742396882496427, 0.7702137659711136, 0.755777615235545, 0.749933622579659, 0.747568552055694, 0.7415822825222723, 0.7434039813195867, 0.7323631455538973, 0.73384130066412, 0.7344410610063563, 0.7276689602068749, 0.7194043347045431, 0.7225475889612041, 0.7174534075579166, 0.7078733668036354, 0.7027600229203724, 0.6963505367199192, 0.7064174622545278, 0.6970672038064074, 0.7042239802057843, 0.6911356461881064, 0.6928401278892071, 0.6895184674834248, 0.6876967418872448, 0.6775522201194456, 0.6875155107645295, 0.6850767696868978, 0.6811336138937782, 0.6825683958116949, 0.6741403673366234, 0.6720265344999659, 0.6711887353131989], "accuracy": [0.11676132678985596, 0.1966715157032013, 0.2620525658130646, 0.3209615647792816, 0.3641526997089386, 0.4084004759788513, 0.4271562397480011, 0.4613657295703888, 0.49531105160713196, 0.5046889185905457, 0.5386342406272888, 0.5534275770187378, 0.5675604343414307, 0.5737683176994324, 0.6067890524864197, 0.6144498586654663, 0.615770697593689, 0.6396777033805847, 0.6440364718437195, 0.6518293619155884, 0.6547351479530334, 0.6676793098449707, 0.6705851554870605, 0.670320987701416, 0.6807554960250854, 0.6845859289169312, 0.6859067678451538, 0.693831741809845, 0.6955488324165344, 0.687491774559021, 0.7012283802032471, 0.7005679607391357, 0.7065116763114929, 0.7054550051689148, 0.7091533541679382, 0.7128516435623169, 0.7099458575248718, 0.7140403985977173, 0.7113987803459167, 0.7182670831680298, 0.7162858247756958, 0.7210407853126526, 0.7209087014198303, 0.7234182953834534, 0.7276449799537659, 0.7257958054542542, 0.7298903465270996, 0.7297582626342773, 0.7327961921691895, 0.7326641082763672, 0.7345132827758789, 0.7347774505615234, 0.735569953918457, 0.7374191284179688, 0.7371549606323242, 0.7464007139205933, 0.7445515990257263, 0.7449478507041931, 0.7416457533836365, 0.7404569983482361, 0.7392682433128357, 0.7471932172775269, 0.7460044622421265, 0.7450799345970154, 0.7469290494918823, 0.7519482374191284, 0.7508915662765503, 0.7461365461349487, 0.7515519857406616, 0.7514199018478394, 0.7543256878852844, 0.7548540234565735, 0.7510236501693726], "val_loss": [1.944164412362235, 1.9156839506966727, 1.8791636739458357, 1.8296237673078264, 1.759887422834124, 1.663877214704241, 1.5413799285888672, 1.3990819454193115, 1.2548338345118932, 1.1288477352687292, 1.0275632313319616, 0.9498376505715507, 0.8871565546308245, 0.8417285680770874, 0.8013633149010795, 0.7695020437240601, 0.74386009148189, 0.7205039603369576, 0.7017802000045776, 0.6869685479572841, 0.6722817420959473, 0.6586184671946934, 0.6469169855117798, 0.6381873062678746, 0.6272427695138114, 0.6213671479906354, 0.6140140465327671, 0.6047799076352801, 0.6005525929587228, 0.5922802516392299, 0.5885521003178188, 0.581027626991272, 0.5765235934938703, 0.5736711365836007, 0.5680128676550729, 0.5648255688803536, 0.5603064298629761, 0.5573795693261283, 0.5544976677213397, 0.5480860131127494, 0.5460149560655866, 0.5441129888807025, 0.540378246988569, 0.537038769040789, 0.5353988238743373, 0.5305176803043911, 0.5282261031014579, 0.5255733898707798, 0.5215192522321429, 0.5224643605096, 0.5187558787209647, 0.5163695982524327, 0.5145116192953927, 0.5144200665610177, 0.5120572532926287, 0.5096243109021869, 0.5065573964800153, 0.5062241554260254, 0.5024585723876953, 0.5004834106990269, 0.49936039107186453, 0.49751213618687223, 0.4964005436216082, 0.4951385089329311, 0.4936896392277309, 0.4915674754551479, 0.4902962957109724, 0.48890187059129986, 0.48882598536355154, 0.4860419545854841, 0.48565830503191265, 0.4861006225858416, 0.4827331304550171], "val_accuracy": [0.2786666750907898, 0.3803333342075348, 0.4403333365917206, 0.476666659116745, 0.5210000276565552, 0.5396666526794434, 0.5633333325386047, 0.5833333134651184, 0.5979999899864197, 0.6256666779518127, 0.6470000147819519, 0.6703333258628845, 0.6869999766349792, 0.6959999799728394, 0.6933333277702332, 0.6990000009536743, 0.7099999785423279, 0.7146666646003723, 0.7123333215713501, 0.7210000157356262, 0.722000002861023, 0.7273333072662354, 0.7356666922569275, 0.7363333106040955, 0.7400000095367432, 0.7426666617393494, 0.7490000128746033, 0.7543333172798157, 0.753333330154419, 0.7576666474342346, 0.7583333253860474, 0.7599999904632568, 0.7603333592414856, 0.7593333125114441, 0.7599999904632568, 0.765666663646698, 0.7670000195503235, 0.7703333497047424, 0.7710000276565552, 0.7710000276565552, 0.768666684627533, 0.7706666588783264, 0.7766666412353516, 0.7753333449363708, 0.7726666927337646, 0.7793333530426025, 0.7746666669845581, 0.7789999842643738, 0.7820000052452087, 0.7799999713897705, 0.7803333401679993, 0.7799999713897705, 0.7863333225250244, 0.7826666831970215, 0.7836666703224182, 0.784333348274231, 0.7846666574478149, 0.7879999876022339, 0.7876666784286499, 0.7866666913032532, 0.7883333563804626, 0.7883333563804626, 0.7943333387374878, 0.7889999747276306, 0.7929999828338623, 0.7940000295639038, 0.793666660785675, 0.7979999780654907, 0.7946666479110718, 0.7960000038146973, 0.7956666946411133, 0.7940000295639038, 0.7953333258628845]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 1, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [41, 38]], "fitness": -0.772857129573822, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 6, 6, 3, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.add(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), grad), tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.2916494296006773, 2.2617385062748148, 2.229387746369283, 2.1878092470989094, 2.126802297993233, 2.04065533236049, 1.93214062209363, 1.7917886672160408, 1.6518480937399995, 1.5274969115941879, 1.4123131359698924, 1.334573110553488, 1.2533839002907032, 1.2110435612181851, 1.1413631658071635, 1.1034804472377224, 1.0855752843450703, 1.042277187860842, 1.0108557995189813, 0.9946307955385278, 0.9693251853416845, 0.946219936857575, 0.9327870769397442, 0.9308006815654633, 0.9007390045911849, 0.8969334085399228, 0.8774526264720731, 0.8668138885132751, 0.8568975507402149, 0.8558234039346193, 0.8494671141435253, 0.8304971827964395, 0.8252354687183855, 0.8141977202386872, 0.8110703882555746, 0.8042056021862309, 0.8030781104202205, 0.791366129763264, 0.7939162369748116, 0.7724202794169611, 0.776730292729257, 0.7742396882496427, 0.7702137659711136, 0.755777615235545, 0.749933622579659, 0.747568552055694, 0.7415822825222723, 0.7434039813195867, 0.7323631455538973, 0.73384130066412, 0.7344410610063563, 0.7276689602068749, 0.7194043347045431, 0.7225475889612041, 0.7174534075579166, 0.7078733668036354, 0.7027600229203724, 0.6963505367199192, 0.7064174622545278, 0.6970672038064074, 0.7042239802057843, 0.6911356461881064, 0.6928401278892071, 0.6895184674834248, 0.6876967418872448, 0.6775522201194456, 0.6875155107645295, 0.6850767696868978, 0.6811336138937782, 0.6825683958116949, 0.6741403673366234, 0.6720265344999659, 0.6711887353131989], "accuracy": [0.11676132678985596, 0.1966715157032013, 0.2620525658130646, 0.3209615647792816, 0.3641526997089386, 0.4084004759788513, 0.4271562397480011, 0.4613657295703888, 0.49531105160713196, 0.5046889185905457, 0.5386342406272888, 0.5534275770187378, 0.5675604343414307, 0.5737683176994324, 0.6067890524864197, 0.6144498586654663, 0.615770697593689, 0.6396777033805847, 0.6440364718437195, 0.6518293619155884, 0.6547351479530334, 0.6676793098449707, 0.6705851554870605, 0.670320987701416, 0.6807554960250854, 0.6845859289169312, 0.6859067678451538, 0.693831741809845, 0.6955488324165344, 0.687491774559021, 0.7012283802032471, 0.7005679607391357, 0.7065116763114929, 0.7054550051689148, 0.7091533541679382, 0.7128516435623169, 0.7099458575248718, 0.7140403985977173, 0.7113987803459167, 0.7182670831680298, 0.7162858247756958, 0.7210407853126526, 0.7209087014198303, 0.7234182953834534, 0.7276449799537659, 0.7257958054542542, 0.7298903465270996, 0.7297582626342773, 0.7327961921691895, 0.7326641082763672, 0.7345132827758789, 0.7347774505615234, 0.735569953918457, 0.7374191284179688, 0.7371549606323242, 0.7464007139205933, 0.7445515990257263, 0.7449478507041931, 0.7416457533836365, 0.7404569983482361, 0.7392682433128357, 0.7471932172775269, 0.7460044622421265, 0.7450799345970154, 0.7469290494918823, 0.7519482374191284, 0.7508915662765503, 0.7461365461349487, 0.7515519857406616, 0.7514199018478394, 0.7543256878852844, 0.7548540234565735, 0.7510236501693726], "val_loss": [1.944164412362235, 1.9156839506966727, 1.8791636739458357, 1.8296237673078264, 1.759887422834124, 1.663877214704241, 1.5413799285888672, 1.3990819454193115, 1.2548338345118932, 1.1288477352687292, 1.0275632313319616, 0.9498376505715507, 0.8871565546308245, 0.8417285680770874, 0.8013633149010795, 0.7695020437240601, 0.74386009148189, 0.7205039603369576, 0.7017802000045776, 0.6869685479572841, 0.6722817420959473, 0.6586184671946934, 0.6469169855117798, 0.6381873062678746, 0.6272427695138114, 0.6213671479906354, 0.6140140465327671, 0.6047799076352801, 0.6005525929587228, 0.5922802516392299, 0.5885521003178188, 0.581027626991272, 0.5765235934938703, 0.5736711365836007, 0.5680128676550729, 0.5648255688803536, 0.5603064298629761, 0.5573795693261283, 0.5544976677213397, 0.5480860131127494, 0.5460149560655866, 0.5441129888807025, 0.540378246988569, 0.537038769040789, 0.5353988238743373, 0.5305176803043911, 0.5282261031014579, 0.5255733898707798, 0.5215192522321429, 0.5224643605096, 0.5187558787209647, 0.5163695982524327, 0.5145116192953927, 0.5144200665610177, 0.5120572532926287, 0.5096243109021869, 0.5065573964800153, 0.5062241554260254, 0.5024585723876953, 0.5004834106990269, 0.49936039107186453, 0.49751213618687223, 0.4964005436216082, 0.4951385089329311, 0.4936896392277309, 0.4915674754551479, 0.4902962957109724, 0.48890187059129986, 0.48882598536355154, 0.4860419545854841, 0.48565830503191265, 0.4861006225858416, 0.4827331304550171], "val_accuracy": [0.2786666750907898, 0.3803333342075348, 0.4403333365917206, 0.476666659116745, 0.5210000276565552, 0.5396666526794434, 0.5633333325386047, 0.5833333134651184, 0.5979999899864197, 0.6256666779518127, 0.6470000147819519, 0.6703333258628845, 0.6869999766349792, 0.6959999799728394, 0.6933333277702332, 0.6990000009536743, 0.7099999785423279, 0.7146666646003723, 0.7123333215713501, 0.7210000157356262, 0.722000002861023, 0.7273333072662354, 0.7356666922569275, 0.7363333106040955, 0.7400000095367432, 0.7426666617393494, 0.7490000128746033, 0.7543333172798157, 0.753333330154419, 0.7576666474342346, 0.7583333253860474, 0.7599999904632568, 0.7603333592414856, 0.7593333125114441, 0.7599999904632568, 0.765666663646698, 0.7670000195503235, 0.7703333497047424, 0.7710000276565552, 0.7710000276565552, 0.768666684627533, 0.7706666588783264, 0.7766666412353516, 0.7753333449363708, 0.7726666927337646, 0.7793333530426025, 0.7746666669845581, 0.7789999842643738, 0.7820000052452087, 0.7799999713897705, 0.7803333401679993, 0.7799999713897705, 0.7863333225250244, 0.7826666831970215, 0.7836666703224182, 0.784333348274231, 0.7846666574478149, 0.7879999876022339, 0.7876666784286499, 0.7866666913032532, 0.7883333563804626, 0.7883333563804626, 0.7943333387374878, 0.7889999747276306, 0.7929999828338623, 0.7940000295639038, 0.793666660785675, 0.7979999780654907, 0.7946666479110718, 0.7960000038146973, 0.7956666946411133, 0.7940000295639038, 0.7953333258628845]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [50, 57], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 3, 2, 6, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [76, 20, 43, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 3, 4, 9, 5], [2, 3, 3, 1], [41, 38, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 9, 8, 2, 1, 0, 0, 0, 0, 7, 5, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(grad)), tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(grad)), tf.math.add(beta, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)))), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.math.add(tf.math.add(beta, beta), grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.pow(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), beta), tf.math.square(sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09338264167308807, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [7, 0, 2, 9, 0, 2, 3, 5, 2, 4, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 1, 2, 3, 3, 0], [15, 16, 74, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [2, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [2, 3, 4, 3, 9, 6, 0, 9], [0, 3, 1, 0, 1], [14, 33]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 7, 3, 4, 2], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.pow(sigma, alpha), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [50, 57], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [2, 5, 2, 2, 2, 2, 8, 5, 2, 1, 4, 8, 8, 1, 1, 8, 9, 0], [3, 0, 0, 1, 0, 1, 2, 3, 3, 0], [53, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 0, 0, 0, 1, 0, 1, 0], [2, 2, 4, 3, 9, 6, 0, 9], [2, 3, 3, 1], [41, 38, 15]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 22, 22, 13, 9, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, alpha), tf.math.pow(tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), alpha)), tf.math.add(beta, tf.math.sqrt(beta)))))), tf.math.add(beta, grad))))), tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [50, 57], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [2, 5, 2, 2, 2, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 1, 0, 1, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [1, 0, 0, 1, 0], [0, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 3, 4, 9, 5], [2, 3, 3, 1], [41, 38, 15]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 2, 17, 17, 9, 8, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.add(beta, grad)), grad)), tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))), tf.math.add(beta, alpha))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, alpha)))), tf.math.add(tf.math.add(beta, beta), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 5, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 1, 2, 3, 3, 0], [15, 0, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0], [2, 3, 9, 3, 9], [0, 2, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 6, 5, 3, 1, 1, 0, 1, 0, 7, 4, 3, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))))), tf.math.negative(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(beta, sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 0, 0, 3, 0, 1, 2, 3, 3, 0], [15, 16, 43, 39, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 0, 0], [2, 2, 4, 3, 9, 6, 0, 9], [0, 3, 3, 3], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 21, 21, 12, 9, 4, 1, 1, 0, 1, 0, 7, 3, 4, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, grad))), tf.math.add(tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(beta, tf.math.pow(alpha, tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), beta))), tf.math.add(beta, grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.pow(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), sigma), sigma), sigma)", "other_info": {"loss": [2.302856298879216, 2.302554530112373, 2.3025481019746263, 2.30254992149478, 2.3025315746639414, 2.302549065694581, 2.302542157224172], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.10249637067317963, 0.1014397069811821, 0.10910051316022873, 0.10011887550354004, 0.10355303436517715], "val_loss": [1.9736565862383162, 1.973656245640346, 1.973661014011928, 1.9736664635794503, 1.9736595153808594, 1.973668098449707, 1.973675319126674], "val_accuracy": [0.0976666659116745, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 9, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 2, 0, 0, 2, 3, 3, 0], [15, 16, 30, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [1, 3, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 7, 5, 4, 1, 1, 0, 1, 0, 5, 3, 2, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))), tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta)))), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.302928223255335, 2.3026103728073557, 2.302614374151949, 2.3026111856852824, 2.3026265488356144, 2.302614743415753], "accuracy": [0.09179764986038208, 0.09681680053472519, 0.09153348207473755, 0.0940430611371994, 0.09351472556591034, 0.09602430462837219], "val_loss": [1.9736391476222448, 1.97364228112357, 1.973641804286412, 1.973637512751988, 1.9736403737749373, 1.9736407824925013], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10233332961797714, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 4, 9, 9, 0], [0, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 5, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 0, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0], [2, 3, 4, 3, 9, 6, 0, 9], [0, 3, 3, 1], [75, 38, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 10, 10, 5, 5, 3, 5, 4, 2, 2, 0, 9, 5, 4, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.pow(grad, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.negative(tf.math.add(beta, grad)), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), sigma), tf.math.multiply(sigma, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), alpha)", "other_info": {"loss": [3.0343062853406937, 37.68872284350724, 357.9145539091909, 2066.6173668890233, 8653.415353404438, 27495.237512485965], "accuracy": [0.09311848133802414, 0.10579843819141388, 0.0952318087220192, 0.09628847241401672, 0.09430722147226334, 0.09879804402589798], "val_loss": [5.816826139177595, 80.91060747419085, 591.7293352399554, 2895.2789481026784, 10421.785714285714, 30164.37723214286], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1], [7, 1, 2, 6, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 1, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [2, 3, 4, 3, 1, 6, 0, 9, 7, 1], [0, 1, 1, 1, 0, 3, 1, 2], [84, 38, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 9, 8, 3, 1, 1, 0, 1, 0, 18, 10, 8, 3], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.add(tf.math.multiply(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)), tf.math.add(beta, tf.math.square(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), alpha)), tf.math.add(tf.math.add(beta, beta), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.pow(tf.math.multiply(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), alpha), tf.math.subtract(tf.math.divide_no_nan(alpha, tf.math.negative(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), alpha)), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.math.subtract(alpha, beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 2, 6, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 0, 0, 0, 2, 3, 3, 0], [15, 16, 43, 60, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 0, 9, 9], [0, 3, 3, 1], [84, 38, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 7, 7, 5, 1, 0, 0, 0, 0, 2, 1, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1247342669.0837324, 23454868857.220448, 110528889217.20036, 305002518196.6303, 663033795499.7374, 1207566347270.357], "accuracy": [0.09747721254825592, 0.10659094154834747, 0.09589222073554993, 0.09655263274908066, 0.09391097724437714, 0.09853387624025345], "val_loss": [4714743661.714286, 37706357613.71429, 127247515648.0, 301611473773.7143, 589064287963.4286, 1017879012498.2858], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [1, 6, 8, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [4, 4, 0, 9, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 2, 0, 0, 2, 3, 3, 0], [15, 16, 14, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [3, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 0, 9, 9], [0, 3, 3, 1], [41, 33]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [4436141.002786138, 83172029.15968828, 391597740.8701625, 1080186794.723022, 2347675042.7430987, 4275155252.038568], "accuracy": [0.09747721254825592, 0.10659094154834747, 0.09589222073554993, 0.09655263274908066, 0.09391097724437714, 0.09866596013307571], "val_loss": [16737837.142857144, 133634724.57142857, 450719030.85714287, 1068019126.8571428, 2085576118.857143, 3603403190.857143], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [50, 57], [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [2, 5, 2, 2, 2, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 1, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 3, 4, 9, 5], [2, 3, 3, 1], [41, 38, 15]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 7, 7, 2, 5, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.square(tf.math.add(tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.math.add(tf.math.multiply(tf.math.add(beta, grad), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), grad))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), alpha)), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303464414799108, 2.438530352326306, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08955223858356476, 0.09985470771789551, 0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9714977400643485, 3.2974983624049594, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.036666665226221085, 0.10000000149011612, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [50, 57], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [2, 5, 2, 2, 2, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 2, 3, 0, 1, 2, 3, 3, 0], [47, 16, 43, 84, 1, 78], [1, 0, 0, 1, 0], [0, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 3, 4, 9, 5], [2, 3, 3, 1], [41, 38, 15]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 6, 6, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.square(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, beta), grad), tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], [7, 4, 0, 3, 9, 0, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 3, 2, 0, 0, 2, 3, 3, 0], [8, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 3, 7, 9, 9, 6, 3, 4, 0, 5, 0, 1, 7], [0, 3, 3, 1, 0, 0], [41, 38, 34, 42, 29]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 8, 4, 2, 1, 1, 0, 1, 0, 19, 13, 6, 5], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.pow(grad, tf.math.negative(tf.math.multiply(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad))))))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.multiply(sigma, tf.math.pow(tf.math.negative(tf.math.square(tf.math.negative(sigma))), tf.math.subtract(tf.math.add(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 5, 8, 2, 2, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [52, 16, 43, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 3, 9, 3, 9, 9], [2, 3, 3, 1], [41, 38, 15]], "fitness": -0.09885714203119278, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 2, 1, 0, 0, 0, 0, 6, 6, 0, 3], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.square(tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.multiply(tf.math.add(beta, grad), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.304631213344493, 2.306087750485387, 2.3119395014443307, 2.322348097863057, 2.333235009313968, 2.345467488684785, 2.369818940374908, 2.3849913269978127, 2.4200663826075433, 2.462224974277674, 2.5042751044834044, 2.5671822554588695, 2.6160485446571187, 2.700574351717468, 2.753318767474548, 2.844109776847949, 2.9532456957605837, 3.047130615515023, 3.159975449863505], "accuracy": [0.0874389111995697, 0.09021265059709549, 0.08677849918603897, 0.09034473448991776, 0.08836349099874496, 0.09496764093637466, 0.09800554811954498, 0.10540219396352768, 0.1010434553027153, 0.09589222073554993, 0.10196803510189056, 0.09496764093637466, 0.09879804402589798, 0.09602430462837219, 0.09800554811954498, 0.09800554811954498, 0.09272222965955734, 0.1010434553027153, 0.09972262382507324], "val_loss": [1.9723448753356934, 1.9744812420436315, 1.976673194340297, 1.9795140538896834, 1.9845647811889648, 1.9922762598310197, 2.0025834356035506, 2.0155278614589145, 2.0313521793910434, 2.05033963067191, 2.072765622820173, 2.0989348547799245, 2.1291444642203197, 2.1636949266706194, 2.202845028468541, 2.2468481745038713, 2.2959559304373607, 2.3503971099853516, 2.4103708267211914], "val_accuracy": [0.024000000208616257, 0.03133333474397659, 0.0573333315551281, 0.08233333379030228, 0.09300000220537186, 0.09666666388511658, 0.0963333323597908, 0.0963333323597908, 0.09799999743700027, 0.09866666793823242, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 3, 0, 2, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 0, 0, 3, 0, 1, 2, 3, 3, 0], [15, 16, 17, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [0, 3], [54], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 5, 9], [0, 3, 3, 1], [13, 38]], "fitness": -0.09485714137554169, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 6, 6, 3, 1, 1, 0, 1, 1, 5, 4, 1, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.pow(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad))), tf.math.add(beta, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.303716971559012, 2.30281722660566, 2.3048911877847416, 2.3082363670055877, 2.308747332629243, 2.310287153306749, 2.314734758214078, 2.312128792034558, 2.3171056807710353, 2.3227915450204333, 2.3254399093985163, 2.33488323102459, 2.335179597946316, 2.347251157750543, 2.3468071901724246, 2.3552212190193473, 2.369347274641965, 2.3755271548151637, 2.386322131041664, 2.4012724578246747, 2.411362700442817], "accuracy": [0.08796724677085876, 0.09232597798109055, 0.08902391046285629, 0.08796724677085876, 0.08308017253875732, 0.0878351628780365, 0.09179764986038208, 0.09668471664190292, 0.09576013684272766, 0.08691058307886124, 0.09417514503002167, 0.08757099509239197, 0.09285431355237961, 0.09166556596755981, 0.09800554811954498, 0.09417514503002167, 0.09021265059709549, 0.09853387624025345, 0.0940430611371994, 0.09589222073554993, 0.0944393053650856], "val_loss": [1.9711764880589075, 1.971907615661621, 1.9726982797895158, 1.9735417366027832, 1.9743899617876326, 1.9752326692853654, 1.9760867527553014, 1.9769809586661202, 1.9779821123395647, 1.9791981833321708, 1.9807830538068498, 1.9827547073364258, 1.9851350103105818, 1.9879228046962194, 1.99113096509661, 1.9947310856410436, 1.99872282573155, 2.0031082970755443, 2.007896900177002, 2.013101713997977, 2.0187391553606306], "val_accuracy": [0.030666666105389595, 0.023666666820645332, 0.02266666665673256, 0.02433333359658718, 0.03033333271741867, 0.03933333232998848, 0.05000000074505806, 0.060333333909511566, 0.07066666334867477, 0.0806666687130928, 0.08933333307504654, 0.09166666865348816, 0.09399999678134918, 0.09666666388511658, 0.0963333323597908, 0.09700000286102295, 0.09666666388511658, 0.09666666388511658, 0.09600000083446503, 0.0963333323597908, 0.09700000286102295]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], [5, 2, 2, 2, 2, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 3, 2, 3, 0, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [1, 0, 0, 1, 0], [0, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 4, 9, 5], [0, 3, 3, 1], [68, 38, 15]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 9, 8, 2, 1, 0, 0, 0, 0, 7, 5, 2, 2], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, beta))), tf.math.add(beta, grad)), tf.math.square(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), tf.math.add(tf.math.add(beta, beta), grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.pow(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), sigma))", "other_info": {"loss": [2.303222214493848, 2.3013824843428217, 2.3024766602929967, 2.3035947099700027, 2.3022559611804576, 2.3023665752456237], "accuracy": [0.08942015469074249, 0.09179764986038208, 0.09021265059709549, 0.08836349099874496, 0.08717474341392517, 0.08981640636920929], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [50, 57], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [7, 5, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 1, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 4, 9, 5], [0, 3, 3, 1], [41, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 5, 5, 4, 1, 2, 20, 20, 11, 9, 3, 1, 0, 0, 0, 0, 6, 4, 2, 2], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.square(tf.math.add(beta, grad)), tf.math.add(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), grad)))), tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.add(beta, alpha), beta)))), tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.pow(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), sigma))", "other_info": {"loss": [2.303222214493848, 2.3013824843428217, 2.3024766602929967, 2.3035947099700027, 2.3022559611804576, 2.3023665752456237], "accuracy": [0.08942015469074249, 0.09179764986038208, 0.09021265059709549, 0.08836349099874496, 0.08717474341392517, 0.08981640636920929], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]