[{"genotype": [[0], [1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [3, 2, 2, 3], [44, 57], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [4, 6, 6, 6, 5, 2, 2, 4, 5, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 1, 0, 1, 1, 0, 0, 0], [42, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 3, 3, 6, 9], [3, 1, 3, 1], [45, 38]], "fitness": -0.7845714092254639, "mapping_values": [1, 3, 3, 1, 2, 0, 14, 14, 7, 7, 1, 1, 1, 0, 1, 0, 8, 5, 3, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(grad, grad)), grad)), tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha)), alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(sigma, tf.math.divide_no_nan(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), alpha)), sigma))", "other_info": {"loss": [2.1092265603438722, 1.379707934031035, 1.0949029869422968, 0.945311124818263, 0.8457674683518083, 0.8077133640700076, 0.7768204971594881, 0.7472756744580514, 0.7253497614285509, 0.7095242150235154, 0.6839837121563564, 0.6720268818302682, 0.649998591899116, 0.6670785811614713, 0.6195384976083198, 0.6257136411686395, 0.6002837415494782, 0.6027558679200277, 0.6057082467138366, 0.5788994204524076], "accuracy": [0.31118741631507874, 0.5322942733764648, 0.601109504699707, 0.6495839357376099, 0.6876237988471985, 0.6989829540252686, 0.707040011882782, 0.7214370369911194, 0.7317395210266113, 0.7317395210266113, 0.737022876739502, 0.750759482383728, 0.7582882046699524, 0.7404569983482361, 0.7707040309906006, 0.7602694630622864, 0.776251494884491, 0.7745344042778015, 0.7716285586357117, 0.7839123010635376], "val_loss": [1.2123896394457137, 0.8669165543147496, 0.829151817730495, 0.6290584802627563, 0.6115953751972744, 0.6016090767724174, 0.574039169720241, 0.5474185773304531, 0.5515350103378296, 0.5073833465576172, 0.526738166809082, 0.5012083053588867, 0.4876347269330706, 0.4898148945399693, 0.47078003202165875, 0.47748581000736784, 0.47113965238843647, 0.5270017044884818, 0.4621478659766061, 0.4846888780593872], "val_accuracy": [0.5793333053588867, 0.6413333415985107, 0.6110000014305115, 0.7170000076293945, 0.7226666808128357, 0.7226666808128357, 0.7419999837875366, 0.7639999985694885, 0.7526666522026062, 0.7836666703224182, 0.7720000147819519, 0.7886666655540466, 0.7853333353996277, 0.7953333258628845, 0.8006666898727417, 0.7866666913032532, 0.796999990940094, 0.7473333477973938, 0.7923333048820496, 0.7979999780654907]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [3, 2, 2, 3], [44, 57], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [4, 6, 6, 6, 5, 2, 2, 4, 5, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 1, 0, 1, 1, 0, 0, 0], [42, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 3, 3, 6, 9], [3, 1, 3, 1], [45, 38]], "fitness": -0.7845714092254639, "mapping_values": [1, 3, 3, 1, 2, 0, 17, 17, 9, 8, 2, 1, 1, 0, 1, 0, 8, 5, 3, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(grad, grad)), grad)), tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(alpha, tf.math.square(tf.math.add(beta, alpha))))), tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(sigma, tf.math.divide_no_nan(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), alpha)), sigma))", "other_info": {"loss": [2.1092265603438722, 1.379707934031035, 1.0949029869422968, 0.945311124818263, 0.8457674683518083, 0.8077133640700076, 0.7768204971594881, 0.7472756744580514, 0.7253497614285509, 0.7095242150235154, 0.6839837121563564, 0.6720268818302682, 0.649998591899116, 0.6670785811614713, 0.6195384976083198, 0.6257136411686395, 0.6002837415494782, 0.6027558679200277, 0.6057082467138366, 0.5788994204524076], "accuracy": [0.31118741631507874, 0.5322942733764648, 0.601109504699707, 0.6495839357376099, 0.6876237988471985, 0.6989829540252686, 0.707040011882782, 0.7214370369911194, 0.7317395210266113, 0.7317395210266113, 0.737022876739502, 0.750759482383728, 0.7582882046699524, 0.7404569983482361, 0.7707040309906006, 0.7602694630622864, 0.776251494884491, 0.7745344042778015, 0.7716285586357117, 0.7839123010635376], "val_loss": [1.2123896394457137, 0.8669165543147496, 0.829151817730495, 0.6290584802627563, 0.6115953751972744, 0.6016090767724174, 0.574039169720241, 0.5474185773304531, 0.5515350103378296, 0.5073833465576172, 0.526738166809082, 0.5012083053588867, 0.4876347269330706, 0.4898148945399693, 0.47078003202165875, 0.47748581000736784, 0.47113965238843647, 0.5270017044884818, 0.4621478659766061, 0.4846888780593872], "val_accuracy": [0.5793333053588867, 0.6413333415985107, 0.6110000014305115, 0.7170000076293945, 0.7226666808128357, 0.7226666808128357, 0.7419999837875366, 0.7639999985694885, 0.7526666522026062, 0.7836666703224182, 0.7720000147819519, 0.7886666655540466, 0.7853333353996277, 0.7953333258628845, 0.8006666898727417, 0.7866666913032532, 0.796999990940094, 0.7473333477973938, 0.7923333048820496, 0.7979999780654907]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 0], [7, 6, 4, 9], [3, 2, 2, 3], [44, 57, 55], [1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 6, 6, 1, 1, 8, 4], [0, 3, 3, 2, 3, 1, 2, 0, 0, 2], [48, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 1, 1], [0, 3], [3, 0], [17]], "fitness": -0.6245714426040649, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 7, 7, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.subtract(tf.math.add(beta, grad), tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))), tf.math.pow(grad, alpha))))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.30188603833241, 2.29923454547807, 2.2963070335043043, 2.2917163840311394, 2.2892351413462784, 2.2860342115380305, 2.284008066903929, 2.280087398704899, 2.2774605715137826, 2.2754545277608242, 2.271445843679337, 2.268947119001762, 2.266448529861575, 2.2609108978526438, 2.260529019057617, 2.256657153356187, 2.2499676847879866, 2.249699179176106, 2.246951086866605, 2.242335244223993, 2.2386558079810865, 2.2370985515711883, 2.2310879553912133, 2.2270725604455235, 2.222247251823767, 2.2184376077345886, 2.2152526186851227, 2.210701317504381, 2.20694819363967, 2.2017747817998705, 2.195504333553785, 2.190495432045135, 2.185765610048563, 2.1804894481462935, 2.176817652949599, 2.1714701080964685, 2.1631785968921093, 2.1539787391488265, 2.1519170943945314, 2.1405950384589705, 2.136108562568742, 2.129885435261825, 2.120229290775918, 2.111619384832638, 2.104968696175282, 2.0956728989343287, 2.0841958070270548, 2.0798249554246753, 2.0695220167925643, 2.0610609451352393, 2.0488356318629384, 2.0398060812249144, 2.0330428450476963, 2.018852373738378, 2.007265439280398, 1.99622368995209, 1.9844844557621444, 1.9722263087150584, 1.9579436871763296, 1.9490919363985224, 1.9317968256674138, 1.9258865044180271, 1.9097715818713512, 1.893698701375448, 1.8819906388952778, 1.8594510316880246, 1.8535704212323503, 1.8392128210656002, 1.825887970322269, 1.8092867310934253, 1.7960936920344632, 1.7834252928383771, 1.7685090623054962, 1.7517867412832924, 1.7359847484594166, 1.7226379495397015, 1.7021877103556637, 1.6968603091799839, 1.6731888650981837, 1.6648167508578398, 1.641747967505011, 1.6343169848617545, 1.6154077243433338, 1.6076268730162315, 1.5924529531896074, 1.5803662424216007, 1.5677095913946857, 1.5580610837981748, 1.5386151933651149, 1.5257236988726168, 1.5183519955560627, 1.5126395081138535, 1.492450725589808, 1.4799322247772861, 1.4717952662833127, 1.4581843773135577, 1.4462298807482505, 1.439985975251143, 1.4323362777765638, 1.407414528231154], "accuracy": [0.09179764986038208, 0.09826971590518951, 0.10236428678035736, 0.11134592443704605, 0.1258750557899475, 0.1302337795495987, 0.14212125539779663, 0.14476291835308075, 0.1566503793001175, 0.1604807823896408, 0.1706511676311493, 0.17712323367595673, 0.18399155139923096, 0.19931316375732422, 0.2005019187927246, 0.20921939611434937, 0.22335226833820343, 0.22203142940998077, 0.22665433585643768, 0.23999471962451935, 0.2526746690273285, 0.2530709207057953, 0.26376965641975403, 0.270109623670578, 0.2759212851524353, 0.28886541724205017, 0.2907145619392395, 0.2977149784564972, 0.30062079429626465, 0.3065645098686218, 0.31541407108306885, 0.31884822249412537, 0.31937655806541443, 0.32043322920799255, 0.31845200061798096, 0.3303394615650177, 0.34183067083358765, 0.35305771231651306, 0.34301942586898804, 0.36481308937072754, 0.35702019929885864, 0.3553031384944916, 0.3691718280315399, 0.37128517031669617, 0.36983224749565125, 0.37881389260292053, 0.38845595717430115, 0.38687095046043396, 0.3929467797279358, 0.38383305072784424, 0.40007925033569336, 0.39704135060310364, 0.4039096534252167, 0.4135517179965973, 0.4143442213535309, 0.4157971143722534, 0.4123629629611969, 0.42609959840774536, 0.42742040753364563, 0.4341566562652588, 0.4357416331768036, 0.42649585008621216, 0.4301941692829132, 0.43851539492607117, 0.4449874460697174, 0.4485536813735962, 0.45066702365875244, 0.45489367842674255, 0.45687490701675415, 0.4550257623195648, 0.45925241708755493, 0.4600449204444885, 0.4682340621948242, 0.4683661460876465, 0.4695548713207245, 0.4760269522666931, 0.4830273389816284, 0.48064985871315, 0.48791441321372986, 0.48474442958831787, 0.4896314740180969, 0.4950468838214874, 0.49927353858947754, 0.4931977391242981, 0.4951789677143097, 0.4975564777851105, 0.5052172541618347, 0.5004622936248779, 0.5211992859840393, 0.50785893201828, 0.518689751625061, 0.5148593187332153, 0.5173689126968384, 0.523048460483551, 0.5258222222328186, 0.5304450988769531, 0.5303130149841309, 0.5291243195533752, 0.5316338539123535, 0.535860538482666], "val_loss": [1.967787265777588, 1.9650400706699915, 1.9623139926365443, 1.9595943178449358, 1.9568513461521693, 1.9541044235229492, 1.951364176613944, 1.9486101014273507, 1.9458626338413783, 1.9430177552359444, 1.9401861599513464, 1.937272412436349, 1.9343626839773995, 1.9313640594482422, 1.9283778326851981, 1.9253112248011999, 1.9221373285566057, 1.9189254896981376, 1.9156638554164342, 1.91227354322161, 1.9087918826511927, 1.9052340643746513, 1.9015229088919503, 1.8977255140032088, 1.8937904494149345, 1.8897502081734794, 1.8855594907488142, 1.8812379837036133, 1.8768248558044434, 1.8722451073782784, 1.8674840927124023, 1.8625249862670898, 1.8574021203177316, 1.852039200919015, 1.8465167454310827, 1.840829713003976, 1.8348518099103654, 1.828624861580985, 1.8222101075308663, 1.8155054364885603, 1.8086301939828056, 1.80151401247297, 1.7941173825945174, 1.786470685686384, 1.7785634313310896, 1.770369529724121, 1.7618043082101005, 1.7530766214643205, 1.74403258732387, 1.7347348758152552, 1.7250313758850098, 1.715122938156128, 1.7049235275813512, 1.6943522521427699, 1.6834911618913924, 1.672330107007708, 1.660928521837507, 1.6491875648498535, 1.637021507535662, 1.624645744051252, 1.6118796552930559, 1.5990114893232072, 1.5859367166246687, 1.572474649974278, 1.5588356767381941, 1.5447726249694824, 1.530799048287528, 1.5165768691471644, 1.502227476664952, 1.4876365321023124, 1.4730638435908727, 1.458392551967076, 1.443544660295759, 1.4286201000213623, 1.4137307575770788, 1.39872145652771, 1.383647816521781, 1.3688522747584753, 1.3537189279283797, 1.338813645499093, 1.3238486903054374, 1.3091318607330322, 1.294445548738752, 1.2800397872924805, 1.2656809943062919, 1.2515851770128523, 1.2376152447291784, 1.2239696638924735, 1.2105507510049003, 1.197115455354963, 1.1841249125344413, 1.1716642379760742, 1.1591454233442033, 1.1467900276184082, 1.134922708783831, 1.123305286679949, 1.1118714128221785, 1.1008260250091553, 1.090229136603219, 1.0795362336294991], "val_accuracy": [0.0573333315551281, 0.07533333450555801, 0.10266666859388351, 0.12800000607967377, 0.15566666424274445, 0.18433333933353424, 0.21299999952316284, 0.23133333027362823, 0.2540000081062317, 0.2783333361148834, 0.30000001192092896, 0.3173333406448364, 0.3356666564941406, 0.3499999940395355, 0.36000001430511475, 0.3683333396911621, 0.37566667795181274, 0.3840000033378601, 0.38866665959358215, 0.3970000147819519, 0.4026666581630707, 0.4086666703224182, 0.4126666784286499, 0.4193333387374878, 0.42633333802223206, 0.42933332920074463, 0.4359999895095825, 0.4403333365917206, 0.4440000057220459, 0.44866666197776794, 0.4533333480358124, 0.4573333263397217, 0.460999995470047, 0.4673333466053009, 0.47066667675971985, 0.4740000069141388, 0.47866666316986084, 0.48366665840148926, 0.48766666650772095, 0.4909999966621399, 0.4933333396911621, 0.49666666984558105, 0.49900001287460327, 0.5043333172798157, 0.5106666684150696, 0.5136666893959045, 0.5196666717529297, 0.5233333110809326, 0.5260000228881836, 0.5299999713897705, 0.5320000052452087, 0.5370000004768372, 0.5393333435058594, 0.5413333177566528, 0.543666660785675, 0.5440000295639038, 0.5486666560173035, 0.5503333210945129, 0.5546666383743286, 0.5556666851043701, 0.5580000281333923, 0.5590000152587891, 0.5600000023841858, 0.5619999766349792, 0.5640000104904175, 0.5676666498184204, 0.5696666836738586, 0.5736666917800903, 0.5763333439826965, 0.5766666531562805, 0.5763333439826965, 0.5759999752044678, 0.5766666531562805, 0.5759999752044678, 0.5806666612625122, 0.5806666612625122, 0.5853333473205566, 0.5873333215713501, 0.5883333086967468, 0.5886666774749756, 0.590666651725769, 0.5923333168029785, 0.5926666855812073, 0.5946666598320007, 0.5986666679382324, 0.6003333330154419, 0.6043333411216736, 0.6043333411216736, 0.6083333492279053, 0.612666666507721, 0.6146666407585144, 0.6186666488647461, 0.6206666827201843, 0.6240000128746033, 0.6266666650772095, 0.6309999823570251, 0.6349999904632568, 0.6380000114440918, 0.6383333206176758, 0.640333354473114]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [9, 0, 4, 9, 6, 4, 5, 9, 6, 1, 7, 1, 6, 7, 4, 2, 0, 4, 9, 3, 1, 0, 6, 3, 7, 7, 9, 0, 4, 7, 1, 4, 4, 7, 1, 2, 1, 1, 5, 5, 1, 3, 6, 9, 0, 4, 6, 7, 5, 5, 0, 1, 1, 1, 8, 0, 2, 0, 5, 0, 9, 4, 6, 7, 5, 1, 6, 5], [2, 1, 2, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 2, 3, 0, 1, 3, 2, 0, 1, 1, 3, 3, 0, 2, 2, 1, 2, 2, 0, 3, 1, 1, 3, 0, 3, 2], [44, 57, 42, 27, 0, 44, 42, 35, 73, 42, 46, 86, 85, 6, 20, 59, 93, 8], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6], [3, 1, 3, 1, 0, 1], [1, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [7], [], [0, 1, 0, 1, 0, 1], [0, 3], [3, 0, 0], [45, 11]], "fitness": -0.12428571283817291, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.471779667454121, 2.3077821384221333, 2.295520546571406, 2.3886610809460196, 2.308975673921671, 2.3039488894765277, 2.2986839712571476, 2.337087345003625, 2.304911273991065, 2.3031477793380017, 2.3033178353023063, 2.3030177953929445], "accuracy": [0.1526878923177719, 0.1010434553027153, 0.12891295552253723, 0.13842293620109558, 0.1006472036242485, 0.10157178342342377, 0.11887465417385101, 0.16536785662174225, 0.09602430462837219, 0.10038304328918457, 0.0944393053650856, 0.0944393053650856], "val_loss": [1.9817774636404855, 1.9748903002057756, 1.845778260912214, 1.9822170393807548, 1.9749031066894531, 1.9732287270682198, 1.9276783806937081, 1.9767591612679618, 1.9742159843444824, 1.9737911224365234, 1.973623411996024, 1.9735958235604423], "val_accuracy": [0.09566666930913925, 0.09833333641290665, 0.12433333694934845, 0.10199999809265137, 0.10233332961797714, 0.09966666996479034, 0.1420000046491623, 0.10400000214576721, 0.10400000214576721, 0.09833333641290665, 0.10000000149011612, 0.10400000214576721]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 0], [7, 6, 4, 9], [2, 1, 3, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 2, 3, 0, 1, 3, 2, 0, 1, 1, 3, 3, 0, 2, 2, 1, 2, 2, 0, 3, 1, 1, 3, 0, 3, 2], [44, 57], [1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 6, 6, 6, 5, 2, 2, 4, 5, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 1, 0, 1, 1, 0, 0, 0], [69, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 1, 0, 1, 0, 0, 1, 1, 1, 0], [0, 4], [3, 1, 3, 1], [45, 38]], "fitness": -0.12428571283817291, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 7, 7, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(tf.math.add(beta, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha)))))), tf.math.add(beta, alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.471779667454121, 2.3077821384221333, 2.295520546571406, 2.3886610809460196, 2.308975673921671, 2.3039488894765277, 2.2986839712571476, 2.337087345003625, 2.304911273991065, 2.3031477793380017, 2.3033178353023063, 2.3030177953929445], "accuracy": [0.1526878923177719, 0.1010434553027153, 0.12891295552253723, 0.13842293620109558, 0.1006472036242485, 0.10157178342342377, 0.11887465417385101, 0.16536785662174225, 0.09602430462837219, 0.10038304328918457, 0.0944393053650856, 0.0944393053650856], "val_loss": [1.9817774636404855, 1.9748903002057756, 1.845778260912214, 1.9822170393807548, 1.9749031066894531, 1.9732287270682198, 1.9276783806937081, 1.9767591612679618, 1.9742159843444824, 1.9737911224365234, 1.973623411996024, 1.9735958235604423], "val_accuracy": [0.09566666930913925, 0.09833333641290665, 0.12433333694934845, 0.10199999809265137, 0.10233332961797714, 0.09966666996479034, 0.1420000046491623, 0.10400000214576721, 0.10400000214576721, 0.09833333641290665, 0.10000000149011612, 0.10400000214576721]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 0], [8, 6, 4, 6], [2, 1, 3, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 2, 3, 0, 1, 3, 2, 0, 1, 1, 3, 3, 0, 2, 2, 1, 2, 2, 0, 3, 1, 1, 3, 0, 3, 2], [44, 57], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [4, 0, 0, 1, 1, 2, 4, 4, 4, 9, 9, 5, 5, 2, 5, 2, 4, 4, 2, 5, 1, 7, 8], [3, 2, 2, 1, 2, 2, 2, 1, 4, 0, 0, 2, 1, 3, 5], [99, 70], [0, 0, 0, 1, 0], [1, 0, 1, 1], [3, 3], [5, 2], [], [0, 1, 0, 1, 0, 1], [0, 3, 3], [3, 0, 0], [45, 38]], "fitness": -0.12428571283817291, "mapping_values": [1, 1, 1, 0, 1, 0, 19, 19, 13, 6, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.subtract(grad, tf.math.subtract(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), beta)), tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))))))))), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.471779667454121, 2.3077821384221333, 2.295520546571406, 2.3886610809460196, 2.308975673921671, 2.3039488894765277, 2.2986839712571476, 2.337087345003625, 2.304911273991065, 2.3031477793380017, 2.3033178353023063, 2.3030177953929445], "accuracy": [0.1526878923177719, 0.1010434553027153, 0.12891295552253723, 0.13842293620109558, 0.1006472036242485, 0.10157178342342377, 0.11887465417385101, 0.16536785662174225, 0.09602430462837219, 0.10038304328918457, 0.0944393053650856, 0.0944393053650856], "val_loss": [1.9817774636404855, 1.9748903002057756, 1.845778260912214, 1.9822170393807548, 1.9749031066894531, 1.9732287270682198, 1.9276783806937081, 1.9767591612679618, 1.9742159843444824, 1.9737911224365234, 1.973623411996024, 1.9735958235604423], "val_accuracy": [0.09566666930913925, 0.09833333641290665, 0.12433333694934845, 0.10199999809265137, 0.10233332961797714, 0.09966666996479034, 0.1420000046491623, 0.10400000214576721, 0.10400000214576721, 0.09833333641290665, 0.10000000149011612, 0.10400000214576721]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 1, 0], [7, 6, 5, 9], [3, 2, 2, 3], [44, 57], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [4, 6, 6, 6, 5, 2, 2, 4, 5, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 1, 0, 1, 1, 0, 0, 0], [42, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 1, 0, 1, 0, 1], [0, 3, 3, 6, 9], [3, 1, 3, 1], [45, 11]], "fitness": -0.12428571283817291, "mapping_values": [1, 6, 6, 3, 3, 0, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.471779667454121, 2.3077821384221333, 2.295520546571406, 2.3886610809460196, 2.308975673921671, 2.3039488894765277, 2.2986839712571476, 2.337087345003625, 2.304911273991065, 2.3031477793380017, 2.3033178353023063, 2.3030177953929445], "accuracy": [0.1526878923177719, 0.1010434553027153, 0.12891295552253723, 0.13842293620109558, 0.1006472036242485, 0.10157178342342377, 0.11887465417385101, 0.16536785662174225, 0.09602430462837219, 0.10038304328918457, 0.0944393053650856, 0.0944393053650856], "val_loss": [1.9817774636404855, 1.9748903002057756, 1.845778260912214, 1.9822170393807548, 1.9749031066894531, 1.9732287270682198, 1.9276783806937081, 1.9767591612679618, 1.9742159843444824, 1.9737911224365234, 1.973623411996024, 1.9735958235604423], "val_accuracy": [0.09566666930913925, 0.09833333641290665, 0.12433333694934845, 0.10199999809265137, 0.10233332961797714, 0.09966666996479034, 0.1420000046491623, 0.10400000214576721, 0.10400000214576721, 0.09833333641290665, 0.10000000149011612, 0.10400000214576721]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [7, 6, 4, 9, 8, 8], [2, 1, 3, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 2, 3, 0, 1, 3, 2, 0, 1, 1, 3, 3, 0, 2, 2, 1, 2, 2, 0, 3, 1, 1, 3, 0, 3, 2], [44, 57, 55], [0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 0, 6, 1, 1, 8, 4, 4, 4, 3, 9, 5, 5, 2, 5, 2, 4, 4, 2, 5, 1, 7, 8], [3, 1, 2, 3, 2, 0, 2, 1, 4, 1, 3, 2, 1, 3, 5], [48, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 1, 0, 1, 0, 1], [0, 3, 3], [1, 0, 0], [87]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 6, 3, 1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, grad), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.negative(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 0], [8, 6, 4, 6], [3, 2, 2, 3], [44, 57], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [1, 6, 2, 3, 5, 2, 2, 4, 5, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 4, 1, 0, 1, 1, 0, 0, 0], [1, 70], [0, 1, 0, 1, 1], [0, 0, 1, 1], [3, 3], [7, 7], [], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [0, 3, 2, 6, 9, 7, 4, 2], [3, 1, 0, 1, 2, 2], [36, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 17, 17, 9, 8, 2, 5, 2, 2, 0, 0, 14, 8, 6, 2], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(grad, tf.math.multiply(tf.math.square(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), alpha)))), tf.math.square(tf.math.add(beta, alpha)))), tf.math.add(beta, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.multiply(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.add(sigma, alpha)), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(alpha, beta), beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 1, 0], [8, 6, 4, 6], [3, 2, 2, 3], [44, 57], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [4, 8, 6, 6, 5, 2, 2, 4, 5, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 3, 0, 1, 1, 0, 0, 0], [27, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [7], [], [1, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 3, 3, 5, 9], [3, 1, 3, 1], [45, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0758156105875969, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 1, 0], [8, 6, 4, 6], [3, 2, 2, 3], [44, 57], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [4, 6, 6, 6, 5, 2, 2, 4, 5, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 3, 1, 0, 1, 1, 0, 0, 0], [27, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 7, 3, 6, 9], [0, 1, 3, 1], [45, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 8, 5, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), alpha)), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 0], [5, 6, 4, 9], [3, 2, 2, 3], [44, 57], [1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [4, 6, 6, 6, 5, 2, 2, 4, 5, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 1, 0, 1, 1, 0, 0, 0], [1, 70], [0, 0, 0, 1, 1], [0, 1, 1, 1], [8, 3], [4, 4], [12], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 3, 3, 0, 9], [3, 1, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 14, 14, 7, 7, 1, 2, 2, 1, 1, 0, 7, 5, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), grad)), tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, alpha)))), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(sigma, tf.math.negative(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0], [1, 0, 0, 1, 0, 1, 0], [7, 6, 4, 9], [0, 2, 2, 3], [44, 57, 55], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 6, 6, 1, 1, 8, 4], [5, 3, 3, 2, 3, 1, 2, 0, 0, 2], [29, 71, 49, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0], [0, 3, 7, 4, 9, 2, 9], [3, 1, 3, 1], [87, 5]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 2, 3, 0, 1, 0, 0, 0, 0, 10, 7, 3, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(grad, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.math.pow(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, alpha)), sigma), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.338280485070314, 2.7457238862606133, 3.939712158362344, 5.90151236045, 8.717768437858302, 12.555555077591718, 16.955644186068017], "accuracy": [0.09245806187391281, 0.0944393053650856, 0.09576013684272766, 0.09721305221319199, 0.09787346422672272, 0.10249637067317963, 0.09681680053472519], "val_loss": [2.0458498682294572, 2.4468908991132463, 3.383014747074672, 4.887551035199847, 6.9177703857421875, 9.471203667776924, 12.575484139578682], "val_accuracy": [0.09866666793823242, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [7, 6, 4, 9, 7, 9], [3, 2, 2, 3], [44, 57], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [8, 6, 0, 1, 1, 8, 4, 5], [3, 3, 3, 1, 0, 1, 1, 0, 0, 0], [1, 41], [0, 0, 0, 1, 0], [0, 0, 1, 0], [3, 3, 9], [4], [62], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0], [0, 3, 3, 6, 9], [1, 1, 3, 1], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 6, 3, 2, 4, 4, 2, 2, 0, 5, 4, 3, 1, 1, 4, 2, 2, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), grad)), tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1], [7, 6, 4, 9, 7], [3, 2, 2, 3], [44, 57, 55], [0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 7, 6, 1, 1, 8, 4], [4, 3, 3, 2, 3, 1, 2, 0, 0, 2], [48, 71, 49, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 1, 0, 1], [0, 3, 5], [3, 0], [87]], "fitness": -0.03999999910593033, "mapping_values": [1, 9, 9, 5, 4, 1, 14, 14, 7, 7, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), tf.math.add(grad, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, grad)), tf.math.subtract(tf.math.add(beta, grad), tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))), tf.math.pow(grad, alpha))))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.square(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.303107133961593, 2.303388304131583, 2.3033384565412094, 2.3015628000528205, 2.302058677222388, 2.3017449995876538], "accuracy": [0.08889182657003403, 0.08849557489156723, 0.08611807972192764, 0.08889182657003403, 0.0940430611371994, 0.09457138925790787], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 0], [5, 6, 4, 9], [3, 2, 2, 3], [44, 57], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [4, 6, 2, 3, 5, 2, 2, 4, 5, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 1, 0, 1, 1, 0, 0, 0], [1, 70], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3], [4, 6], [], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0], [0, 4, 0, 8, 0], [3, 2, 3, 1], [45, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 5, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303107133961593, 2.303388304131583, 2.3033384565412094, 2.3015628000528205, 2.302058677222388, 2.3017449995876538], "accuracy": [0.08889182657003403, 0.08849557489156723, 0.08611807972192764, 0.08889182657003403, 0.0940430611371994, 0.09457138925790787], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0], [2, 0, 4, 9, 6, 4, 5, 9, 6, 1, 7, 1, 6, 7, 4, 2, 0, 4, 9, 3, 1, 0, 6, 3, 7, 7, 9, 0, 4, 7, 1, 4, 4, 7, 1, 2, 1, 1, 5, 5, 1, 3, 6, 9, 0, 4, 6, 7, 5, 5, 0, 1, 1, 1, 8, 0, 2, 0, 5, 0, 9, 4, 6, 7, 5, 1, 6, 5], [0, 2, 2, 3], [44, 57, 55], [0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0], [1, 0, 0, 1, 1], [4, 6, 6, 1, 1, 8, 4], [0, 3, 3, 2, 3, 1, 2, 0, 0, 2], [1, 70], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3], [7, 7], [], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [1, 3, 2, 0, 6, 8, 7], [3, 2, 0, 3, 3, 3], [45, 11]], "fitness": -0.03999999910593033, "mapping_values": [1, 6, 6, 4, 2, 2, 1, 1, 0, 1, 1, 5, 4, 2, 2, 0, 13, 7, 6, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(sigma, beta), tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(sigma, sigma)))), sigma))", "other_info": {"loss": [2.303107133961593, 2.303388304131583, 2.3033384565412094, 2.3015628000528205, 2.302058677222388, 2.3017449995876538], "accuracy": [0.08889182657003403, 0.08849557489156723, 0.08611807972192764, 0.08889182657003403, 0.0940430611371994, 0.09457138925790787], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0], [8, 6, 4, 6], [2, 1, 3, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 2, 3, 0, 1, 3, 2, 0, 1, 1, 3, 3, 0, 2, 2, 1, 2, 2, 0, 3, 1, 1, 3, 0, 3, 2], [44, 57, 55], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 6, 6, 6, 5, 2, 2, 4, 5, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 4, 1, 0, 1, 1, 0, 0, 0], [48, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0, 1, 0], [0, 0, 1, 0, 0], [3, 3, 4, 9], [7], [17], [0, 1, 0, 1, 0, 1], [0, 3, 3, 6, 9], [3, 0], [45, 11]], "fitness": -0.03999999910593033, "mapping_values": [1, 2, 2, 1, 1, 0, 2, 2, 1, 1, 0, 7, 5, 4, 1, 1, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.303107133961593, 2.303388304131583, 2.3033384565412094, 2.3015628000528205, 2.302058677222388, 2.3017449995876538], "accuracy": [0.08889182657003403, 0.08849557489156723, 0.08611807972192764, 0.08889182657003403, 0.0940430611371994, 0.09457138925790787], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 1], [7, 6, 4, 9], [0, 2, 2, 3], [44, 57], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6, 2, 5, 2, 2, 4, 5, 8, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 1, 0, 1, 1, 0, 0, 0], [42, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0, 0, 1], [0, 0, 1, 0, 1], [3, 3, 1], [4, 0], [17], [1, 0, 1, 1, 0, 0, 1, 0, 1, 0], [0, 3, 3, 6, 9], [3, 1, 3, 1], [3]], "fitness": -0.03999999910593033, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 7, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), sigma)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303107133961593, 2.303388304131583, 2.3033384565412094, 2.3015628000528205, 2.302058677222388, 2.3017449995876538], "accuracy": [0.08889182657003403, 0.08849557489156723, 0.08611807972192764, 0.08889182657003403, 0.0940430611371994, 0.09457138925790787], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0], [7, 6, 4, 9, 9], [3, 2, 2, 3], [44, 57, 55], [1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 6, 6, 1, 1, 8, 4], [3, 1, 3, 1, 0, 1], [1, 70], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 1, 0, 1, 0, 1], [0, 3], [3, 0, 0], [45, 11]], "fitness": -0.03999999910593033, "mapping_values": [1, 7, 7, 5, 2, 2, 5, 5, 2, 3, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(grad, tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.pow(grad, tf.math.add(beta, tf.math.divide_no_nan(alpha, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.303107133961593, 2.303388304131583, 2.3033384565412094, 2.3015628000528205, 2.302058677222388, 2.3017449995876538], "accuracy": [0.08889182657003403, 0.08849557489156723, 0.08611807972192764, 0.08889182657003403, 0.0940430611371994, 0.09457138925790787], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]