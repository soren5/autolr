[{"genotype": [[0], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [7, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 2, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [0, 0, 5, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [47, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [4, 3, 2, 0], [7, 0], [12], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 0, 6, 7, 7, 5, 3, 1, 1, 1, 9, 5, 6, 4, 4, 6, 9, 3, 1, 4, 5, 8, 1, 0, 2, 4, 3, 1, 9, 9, 9, 2, 4, 6, 4, 2, 3, 8, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [3, 0, 2, 2, 2, 0, 3, 0, 0, 3, 2, 2, 3, 3, 1, 0, 3, 2, 0, 0, 3, 2, 3, 2, 1, 0, 0, 2, 0], [50, 9, 45, 4, 34, 14, 69, 20, 87, 76, 30, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.8145714402198792, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.070828676223755, 2.002180814743042, 1.8044339418411255, 1.2594776153564453, 0.9374470114707947, 0.8052101135253906, 0.6961215138435364, 0.6480795741081238, 0.6600207090377808, 0.5931772589683533, 0.6068587303161621, 0.551886796951294, 0.5701732039451599, 0.5375588536262512, 0.5228748917579651, 0.4862309992313385, 0.5073229670524597, 0.5010535717010498, 0.5036214590072632, 0.4797273874282837], "accuracy": [0.31382909417152405, 0.32822611927986145, 0.4080042243003845, 0.5548804402351379, 0.6647734642028809, 0.6931713223457336, 0.7317395210266113, 0.7588165402412415, 0.7534011602401733, 0.7711002230644226, 0.7714964747428894, 0.7931581139564514, 0.7853652238845825, 0.7993659973144531, 0.8031964302062988, 0.8177255392074585, 0.8100647330284119, 0.8094043135643005, 0.8157442808151245, 0.8169330358505249], "val_loss": [2.208688259124756, 2.2071149349212646, 1.4130797386169434, 1.0001945495605469, 0.7844200730323792, 0.6478789448738098, 0.5912423729896545, 0.5726123452186584, 0.5816141963005066, 0.5406442880630493, 0.5739142894744873, 0.5302233695983887, 0.510036051273346, 0.4833734929561615, 0.4640521705150604, 0.5192822217941284, 0.5146238207817078, 0.5201047658920288, 0.4659390151500702, 0.47262606024742126], "val_accuracy": [0.37433332204818726, 0.21766667068004608, 0.4116666615009308, 0.6613333225250244, 0.6933333277702332, 0.7310000061988831, 0.7789999842643738, 0.7770000100135803, 0.765999972820282, 0.793666660785675, 0.7960000038146973, 0.7983333468437195, 0.8133333325386047, 0.8096666932106018, 0.8320000171661377, 0.8056666851043701, 0.7950000166893005, 0.8220000267028809, 0.8270000219345093, 0.8266666531562805]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [0, 0, 5, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [47, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [4, 3, 2, 0], [7, 0], [12], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 0, 6, 7, 7, 5, 3, 1, 1, 1, 9, 5, 6, 4, 4, 6, 9, 3, 1, 4, 5, 8, 1, 0, 2, 4, 3, 1, 9, 9, 9, 2, 4, 6, 4, 2, 3, 8, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [3, 0, 2, 2, 2, 0, 3, 0, 0, 3, 2, 2, 3, 3, 1, 0, 3, 2, 0, 0, 3, 2, 3, 2, 1, 0, 0, 2, 0], [50, 9, 45, 4, 34, 14, 69, 20, 87, 76, 30, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.8031428456306458, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0707995891571045, 1.9948630332946777, 1.7995147705078125, 1.65371835231781, 1.2510067224502563, 0.9202732443809509, 0.7473532557487488, 0.6805121302604675, 0.650766134262085, 0.6079764366149902, 0.6182090640068054, 0.5527613759040833, 0.5453088283538818, 0.537444531917572, 0.5248634219169617, 0.4910091757774353, 0.49101871252059937, 0.4995763599872589, 0.46735960245132446, 0.47800368070602417, 0.4634626507759094, 0.44851723313331604, 0.4295017719268799, 0.42946577072143555, 0.4068046510219574, 0.42588821053504944, 0.40810373425483704, 0.4060090482234955, 0.3871906101703644, 0.38052448630332947, 0.40396949648857117, 0.3800354599952698], "accuracy": [0.31382909417152405, 0.3288865387439728, 0.39400342106819153, 0.45568618178367615, 0.5588429570198059, 0.6654338836669922, 0.7165499925613403, 0.743891179561615, 0.7470611333847046, 0.7622507214546204, 0.7623828053474426, 0.7910447716712952, 0.7946110367774963, 0.7965922355651855, 0.7987055778503418, 0.8096684813499451, 0.8171972036361694, 0.8076872229576111, 0.8265751004219055, 0.8244617581367493, 0.8314621448516846, 0.8358209133148193, 0.8389908671379089, 0.8387266993522644, 0.8433496356010437, 0.8389908671379089, 0.8479725122451782, 0.843481719493866, 0.8631620407104492, 0.857218325138092, 0.8504821062088013, 0.8541803956031799], "val_loss": [2.208707332611084, 2.118077278137207, 1.1944104433059692, 1.3007158041000366, 1.077175259590149, 0.6518034934997559, 0.6223936080932617, 0.6111635565757751, 0.5620048642158508, 0.6012337803840637, 0.6112375259399414, 0.5140040516853333, 0.5370072722434998, 0.4903319478034973, 0.481498658657074, 0.5138723254203796, 0.48024019598960876, 0.5735262036323547, 0.44477319717407227, 0.5159063935279846, 0.4556312561035156, 0.4255954325199127, 0.4461599886417389, 0.43776053190231323, 0.4230731725692749, 0.41553980112075806, 0.4171324372291565, 0.4415223300457001, 0.43544837832450867, 0.46880167722702026, 0.4034648537635803, 0.41307926177978516], "val_accuracy": [0.375, 0.3230000138282776, 0.5820000171661377, 0.5389999747276306, 0.6230000257492065, 0.7513333559036255, 0.7596666812896729, 0.7493333220481873, 0.7743333578109741, 0.7723333239555359, 0.7526666522026062, 0.7916666865348816, 0.8003333210945129, 0.8143333196640015, 0.8220000267028809, 0.8050000071525574, 0.8166666626930237, 0.7799999713897705, 0.8333333134651184, 0.7900000214576721, 0.831333339214325, 0.8553333282470703, 0.8299999833106995, 0.8363333344459534, 0.8453333377838135, 0.8486666679382324, 0.8556666374206543, 0.8323333263397217, 0.8353333473205566, 0.8270000219345093, 0.8479999899864197, 0.8410000205039978]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [0, 0, 5, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [47, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [4, 3, 2, 0], [7, 0], [12], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 0, 6, 7, 7, 5, 3, 1, 1, 1, 9, 5, 6, 4, 4, 6, 9, 3, 1, 4, 5, 8, 1, 0, 2, 4, 3, 1, 9, 9, 9, 2, 4, 6, 4, 2, 3, 8, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [3, 0, 2, 2, 2, 0, 3, 0, 0, 3, 2, 2, 3, 3, 1, 0, 3, 2, 0, 0, 3, 2, 3, 2, 1, 0, 0, 2, 0], [2, 9, 45, 4, 34, 14, 69, 20, 87, 76, 30, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.1397142857313156, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.subtract(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3012685775756836, 2.301642417907715, 2.304388999938965, 2.30173659324646, 2.299785614013672, 2.3009397983551025, 2.301360845565796, 2.3012192249298096, 2.299544095993042, 2.3013949394226074, 2.300844669342041, 2.3003294467926025, 2.300743341445923, 2.3001134395599365, 2.300842046737671, 2.300410509109497, 2.301732301712036, 2.300546646118164, 2.2991998195648193, 2.299873113632202, 2.298046350479126, 2.2989754676818848, 2.299618721008301, 2.2986106872558594, 2.2990338802337646, 2.3005211353302, 2.298192262649536, 2.298982858657837, 2.297858238220215, 2.299759864807129, 2.298837184906006, 2.297900676727295, 2.2977421283721924, 2.2975380420684814, 2.2962889671325684, 2.2979469299316406, 2.2964258193969727, 2.297062397003174, 2.2967536449432373, 2.2970759868621826, 2.2954866886138916, 2.294341802597046, 2.296520709991455, 2.2952077388763428, 2.2950046062469482, 2.2949419021606445, 2.2944066524505615, 2.2947187423706055, 2.2938027381896973, 2.2958602905273438, 2.2940056324005127, 2.2957603931427, 2.2931807041168213, 2.295063018798828, 2.2938544750213623, 2.2945749759674072, 2.2926061153411865, 2.2952208518981934, 2.2932257652282715, 2.294818162918091, 2.2931835651397705, 2.2945518493652344, 2.2947487831115723, 2.292452335357666, 2.2930052280426025, 2.2929158210754395, 2.2926106452941895, 2.2916576862335205, 2.2927663326263428, 2.292466640472412, 2.2927663326263428, 2.291188955307007, 2.2914657592773438, 2.2922723293304443, 2.291471481323242, 2.2917239665985107, 2.2926042079925537, 2.2920994758605957, 2.291358232498169, 2.29111385345459, 2.2906439304351807, 2.289188861846924, 2.290886878967285, 2.29019832611084, 2.288360357284546, 2.2888283729553223, 2.2909064292907715, 2.2893004417419434, 2.2894442081451416, 2.2897415161132812, 2.2898449897766113, 2.2895267009735107, 2.287970781326294, 2.288771390914917, 2.2887539863586426, 2.28802490234375, 2.287505865097046, 2.287144660949707, 2.2881062030792236, 2.2888271808624268], "accuracy": [0.09219389408826828, 0.09060890227556229, 0.09047681838274002, 0.08968432247638702, 0.0944393053650856, 0.09496764093637466, 0.09549596905708313, 0.09391097724437714, 0.09668471664190292, 0.09417514503002167, 0.09259014576673508, 0.08942015469074249, 0.09153348207473755, 0.09153348207473755, 0.09549596905708313, 0.09272222965955734, 0.08836349099874496, 0.09628847241401672, 0.09219389408826828, 0.09774138033390045, 0.09760929644107819, 0.09813763201236725, 0.09272222965955734, 0.10077928751707077, 0.09826971590518951, 0.09338264167308807, 0.1006472036242485, 0.09298639744520187, 0.10157178342342377, 0.09893012791872025, 0.09668471664190292, 0.09549596905708313, 0.09787346422672272, 0.09879804402589798, 0.10579843819141388, 0.10408136248588562, 0.10619468986988068, 0.10527011007070541, 0.11055342853069305, 0.10593052208423615, 0.10249637067317963, 0.10632677376270294, 0.10645885765552521, 0.10962884873151779, 0.10989301651716232, 0.10738343745470047, 0.11187426000833511, 0.1080438494682312, 0.11081759631633759, 0.10606260597705841, 0.11121384054422379, 0.10487385839223862, 0.11055342853069305, 0.10527011007070541, 0.11345925182104111, 0.10896842926740646, 0.11161009222269058, 0.1088363528251648, 0.10619468986988068, 0.10896842926740646, 0.11213842034339905, 0.10540219396352768, 0.10751552134752274, 0.11227050423622131, 0.10936468094587326, 0.10989301651716232, 0.11306300014257431, 0.11689341068267822, 0.11266675591468811, 0.11174217611551285, 0.11596883088350296, 0.12270505726337433, 0.11662924289703369, 0.12151630967855453, 0.11028926074504852, 0.11808215826749802, 0.11900673806667328, 0.11676132678985596, 0.12151630967855453, 0.11966715008020401, 0.11570466309785843, 0.11861048638820648, 0.12362963706254959, 0.11913882195949554, 0.11861048638820648, 0.11596883088350296, 0.1142517477273941, 0.12178047746419907, 0.12059172987937927, 0.11874257028102875, 0.11821424216032028, 0.12296922504901886, 0.12495046854019165, 0.12759213149547577, 0.12534672021865845, 0.12230881303548813, 0.1258750557899475, 0.13129045069217682, 0.1320829540491104, 0.12389380484819412], "val_loss": [2.298996686935425, 2.2988367080688477, 2.298677444458008, 2.298518180847168, 2.298360586166382, 2.2982027530670166, 2.2980430126190186, 2.297883987426758, 2.29772686958313, 2.297569751739502, 2.297412157058716, 2.2972536087036133, 2.2970967292785645, 2.296937942504883, 2.2967796325683594, 2.296621322631836, 2.2964658737182617, 2.296306610107422, 2.2961490154266357, 2.295989990234375, 2.295832633972168, 2.2956769466400146, 2.2955198287963867, 2.2953622341156006, 2.29520583152771, 2.295048475265503, 2.294891834259033, 2.294733762741089, 2.2945756912231445, 2.2944178581237793, 2.2942593097686768, 2.2941012382507324, 2.293943166732788, 2.2937846183776855, 2.293628454208374, 2.2934720516204834, 2.2933144569396973, 2.2931578159332275, 2.293002128601074, 2.292846202850342, 2.292689561843872, 2.2925314903259277, 2.2923755645751953, 2.2922203540802, 2.2920632362365723, 2.291905164718628, 2.291748285293579, 2.2915918827056885, 2.291435956954956, 2.291278600692749, 2.291121006011963, 2.290966749191284, 2.29080867767334, 2.2906534671783447, 2.2904961109161377, 2.2903404235839844, 2.290182590484619, 2.290024757385254, 2.2898690700531006, 2.289713144302368, 2.2895572185516357, 2.289402723312378, 2.28924560546875, 2.2890894412994385, 2.2889323234558105, 2.2887771129608154, 2.288621664047241, 2.288466453552246, 2.2883102893829346, 2.2881553173065186, 2.2880001068115234, 2.28784441947937, 2.287689685821533, 2.2875330448150635, 2.2873759269714355, 2.2872202396392822, 2.2870655059814453, 2.2869112491607666, 2.286757230758667, 2.2866039276123047, 2.2864489555358887, 2.28629207611084, 2.2861366271972656, 2.285982847213745, 2.285825729370117, 2.2856698036193848, 2.285515308380127, 2.2853596210479736, 2.285203456878662, 2.285048723220825, 2.2848925590515137, 2.284738063812256, 2.2845816612243652, 2.284426212310791, 2.2842700481414795, 2.284115791320801, 2.2839598655700684, 2.2838051319122314, 2.2836501598358154, 2.283494710922241], "val_accuracy": [0.03333333507180214, 0.033666666597127914, 0.03433333337306976, 0.03433333337306976, 0.03566666692495346, 0.035999998450279236, 0.03766666725277901, 0.039000000804662704, 0.04066666588187218, 0.0430000014603138, 0.04466666653752327, 0.04500000178813934, 0.045666664838790894, 0.046666666865348816, 0.04766666516661644, 0.04866666719317436, 0.050333332270383835, 0.052666667848825455, 0.05400000140070915, 0.054999999701976776, 0.055666666477918625, 0.05700000002980232, 0.0573333315551281, 0.05833333358168602, 0.059333331882953644, 0.05999999865889549, 0.061666667461395264, 0.06233333423733711, 0.06333333253860474, 0.06366666406393051, 0.06433333456516266, 0.06466666609048843, 0.06533333659172058, 0.0663333311676979, 0.06833333522081375, 0.06833333522081375, 0.070333331823349, 0.07066666334867477, 0.07233333587646484, 0.0729999989271164, 0.07466666400432587, 0.07633333653211594, 0.07766667008399963, 0.07900000363588333, 0.0793333351612091, 0.0806666687130928, 0.08233333379030228, 0.0833333358168602, 0.0846666693687439, 0.08633333444595337, 0.08666666597127914, 0.08799999952316284, 0.08799999952316284, 0.08866667002439499, 0.08966666460037231, 0.09066666662693024, 0.09166666865348816, 0.09266666322946548, 0.09366666525602341, 0.09399999678134918, 0.09566666930913925, 0.0963333323597908, 0.0976666659116745, 0.09833333641290665, 0.0989999994635582, 0.10133333504199982, 0.10266666859388351, 0.10433333367109299, 0.10499999672174454, 0.10566666722297668, 0.1080000028014183, 0.10999999940395355, 0.11033333092927933, 0.11133333295583725, 0.11299999803304672, 0.1133333370089531, 0.1146666631102562, 0.11699999868869781, 0.11966666579246521, 0.12166666984558105, 0.12333333492279053, 0.12399999797344208, 0.1263333261013031, 0.12700000405311584, 0.12933333218097687, 0.13066667318344116, 0.1313333362340927, 0.1326666623353958, 0.13366666436195374, 0.13633333146572113, 0.13766667246818542, 0.13833333551883698, 0.1393333375453949, 0.14100000262260437, 0.14300000667572021, 0.14399999380111694, 0.14433333277702332, 0.14533333480358124, 0.14733333885669708, 0.14800000190734863]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [7, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 2, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [3, 0, 5, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [47, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0], [4, 3, 2, 0], [7, 0], [12], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 0, 6, 7, 7, 5, 3, 1, 1, 1, 9, 5, 6, 4, 4, 6, 9, 3, 1, 4, 5, 8, 1, 0, 2, 4, 3, 1, 9, 9, 9, 2, 4, 6, 4, 2, 3, 8, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [3, 0, 2, 2, 2, 0, 3, 0, 0, 3, 2, 2, 3, 3, 1, 0, 3, 2, 0, 0, 3, 2, 3, 2, 1, 0, 0, 2, 0], [50, 9, 45, 4, 3, 14, 69, 20, 87, 76, 30, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [7, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 1, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [3, 0, 5, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [47, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [4, 3, 2, 0], [7, 0], [12], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 1, 6, 7, 7, 5, 3, 1, 1, 1, 9, 5, 6, 4, 4, 6, 9, 3, 1, 4, 5, 8, 1, 0, 2, 4, 3, 1, 9, 9, 9, 2, 4, 6, 4, 2, 3, 8, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [3, 0, 2, 2, 2, 0, 3, 0, 0, 3, 2, 2, 3, 3, 1, 0, 3, 2, 0, 0, 3, 2, 3, 2, 1, 0, 0, 2, 0], [50, 9, 45, 4, 34, 14, 69, 20, 87, 76, 30, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 48, 29, 19, 9], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(tf.math.add(sigma, tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.multiply(beta, tf.math.subtract(tf.math.subtract(tf.math.subtract(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), beta), tf.math.square(tf.math.divide_no_nan(tf.math.pow(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.divide_no_nan(sigma, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.subtract(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, tf.math.square(tf.math.sqrt(beta)))))))), tf.math.subtract(beta, tf.math.negative(sigma))))))), tf.math.add(sigma, tf.math.pow(tf.math.multiply(alpha, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, beta)))), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [7, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 2, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [3, 0, 5, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [47, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [4, 3, 2, 0], [7, 0], [12], [0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 9, 2, 0, 7, 9, 3, 0, 1, 3, 9, 5, 6, 5, 4, 6, 9, 2, 1, 4, 5, 8, 1, 0, 2, 4, 3, 1, 9, 9, 9, 2, 4, 6, 4, 2, 3, 8, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [1, 0, 2, 2, 2, 0, 3, 0, 0, 3, 2, 2, 3, 3, 1, 0, 3, 2, 0, 0, 3, 2, 3, 2, 1, 0, 0, 2, 0], [50, 9, 45, 4, 34, 14, 69, 20, 87, 76, 30, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07092854380607605, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [0, 0, 5, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [47, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 0], [4, 2, 6, 0], [7, 0], [12], [0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [0, 8, 6, 7, 7, 5, 3, 1, 1, 1, 9, 5, 6, 4, 4, 6, 9, 3, 1, 4, 5, 8, 1, 0, 2, 4, 3, 1, 9, 9, 9, 2, 4, 6, 4, 2, 3, 8, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [3, 0, 2, 2, 2, 0, 3, 0, 0, 3, 2, 2, 3, 3, 1, 0, 3, 2, 0, 0, 3, 2, 3, 2, 1, 0, 0, 2, 0], [70, 9, 45, 4, 34, 14, 69, 20, 87, 76, 30, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 2, 2, 1, 1, 1, 8, 4, 4, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.square(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(sigma, sigma)), tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.negative(sigma)), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3025991916656494, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [9, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [0, 0, 5, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [47, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [4, 3, 2, 0], [4, 0], [12], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [4, 0, 6, 0, 7, 9, 3, 0, 1, 3, 9, 5, 6, 5, 4, 6, 9, 2, 1, 4, 5, 8, 1, 0, 2, 4, 3, 1, 9, 9, 9, 2, 4, 6, 4, 2, 3, 8, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [3, 0, 2, 2, 2, 0, 3, 0, 0, 3, 2, 2, 3, 3, 1, 0, 3, 2, 0, 0, 3, 2, 3, 2, 1, 0, 0, 2, 0], [50, 9, 45, 4, 34, 14, 69, 20, 87, 76, 30, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(sigma, tf.math.negative(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [7, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 2, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [92, 60, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [3, 0, 5, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [47, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [4, 3, 2, 0], [2, 0], [12], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 0, 6, 7, 7, 5, 3, 1, 1, 1, 9, 5, 6, 4, 4, 6, 9, 3, 1, 4, 5, 8, 1, 0, 2, 4, 3, 1, 9, 9, 9, 2, 4, 6, 4, 2, 3, 8, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [3, 1, 2, 2, 2, 0, 3, 0, 0, 3, 2, 2, 3, 3, 1, 0, 3, 2, 0, 0, 3, 2, 3, 2, 1, 0, 0, 2, 0], [73, 71, 45, 4, 34, 14, 69, 20, 87, 76, 30, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 20, 15, 5, 6, 21, 21, 13, 8, 4, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.add(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, grad))), tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.multiply(tf.math.sqrt(beta), tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha))))))))), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [7, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 2, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [13, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [3, 0, 5, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [47, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [4, 3, 2, 0], [7, 0], [12], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 0, 6, 7, 7, 5, 3, 1, 1, 1, 9, 5, 6, 4, 4, 6, 9, 3, 1, 4, 5, 8, 1, 0, 2, 4, 3, 1, 9, 9, 9, 2, 4, 6, 4, 2, 3, 8, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [3, 1, 2, 2, 2, 0, 3, 0, 0, 3, 2, 2, 3, 3, 1, 0, 3, 2, 0, 0, 3, 2, 3, 2, 1, 0, 0, 2, 0], [50, 9, 45, 4, 34, 14, 69, 20, 87, 76, 30, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 39, 24, 15, 5], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.divide_no_nan(sigma, alpha)), tf.math.add(beta, tf.math.add(tf.math.square(beta), tf.math.multiply(tf.math.subtract(tf.math.subtract(tf.math.subtract(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.divide_no_nan(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), sigma))), tf.math.pow(tf.math.pow(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(beta, tf.math.pow(tf.math.square(beta), tf.math.sqrt(sigma))))), tf.math.subtract(sigma, tf.math.negative(alpha))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [7, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [3, 0, 5, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [47, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [4, 3, 2, 0], [6, 0], [12], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [2, 0, 6, 7, 7, 5, 3, 1, 1, 1, 9, 5, 6, 4, 4, 6, 9, 3, 1, 4, 5, 8, 1, 0, 2, 4, 3, 1, 9, 9, 9, 2, 4, 6, 4, 2, 3, 8, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [3, 0, 2, 2, 2, 0, 3, 0, 0, 3, 2, 2, 3, 3, 1, 0, 3, 2, 0, 0, 3, 2, 3, 2, 1, 0, 0, 2, 0], [50, 9, 45, 4, 34, 14, 69, 20, 87, 76, 30, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [7, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 3, 2, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [3, 0, 5, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [47, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [4, 3, 2, 0], [7, 0], [12], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 0, 6, 7, 7, 5, 3, 1, 1, 1, 9, 5, 6, 4, 4, 6, 9, 3, 1, 4, 5, 8, 1, 0, 2, 4, 3, 1, 9, 9, 9, 2, 4, 6, 4, 2, 3, 8, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [0, 0, 2, 2, 2, 0, 3, 0, 0, 3, 2, 2, 3, 3, 1, 0, 3, 2, 0, 0, 3, 2, 3, 2, 1, 0, 0, 2, 0], [50, 9, 45, 4, 34, 14, 69, 20, 87, 76, 30, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 7, 3, 2, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(tf.math.add(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, grad))), grad)))), lambda shape,  alpha, beta, grad: tf.math.square(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.350696325302124, 2.9613444805145264, 4.713413238525391, 7.481058120727539, 11.349235534667969, 16.672142028808594, 23.151391983032227], "accuracy": [0.09589222073554993, 0.09708096832036972, 0.09998679161071777, 0.10077928751707077, 0.10566636174917221, 0.10302469879388809, 0.09800554811954498], "val_loss": [2.4307944774627686, 3.1706888675689697, 4.827515602111816, 7.365894317626953, 10.747715950012207, 15.016007423400879, 20.23309898376465], "val_accuracy": [0.0963333323597908, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [0, 0, 5, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [47, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [4, 3, 2, 0], [4, 0], [12], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 0, 6, 0, 7, 9, 3, 0, 1, 3, 9, 5, 6, 5, 4, 6, 9, 2, 1, 4, 5, 8, 1, 0, 2, 4, 3, 1, 9, 9, 9, 2, 4, 6, 4, 2, 3, 8, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [3, 0, 2, 2, 2, 0, 3, 0, 0, 3, 2, 2, 3, 3, 1, 0, 3, 2, 0, 0, 3, 2, 3, 2, 1, 0, 0, 2, 0], [35, 9, 24, 4, 34, 14, 69, 20, 87, 76, 30, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07290978729724884, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 2, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [0, 0, 5, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [47, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [4, 3, 2, 0], [7, 0], [12], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [7, 7, 6, 7, 7, 5, 3, 1, 1, 0, 9, 5, 6, 4, 4, 6, 9, 3, 1, 4, 5, 8, 1, 2, 0, 4, 3, 1, 9, 9, 9, 2, 4, 6, 4, 2, 3, 8, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [3, 3, 2, 2, 2, 0, 3, 0, 0, 3, 2, 2, 3, 3, 1, 0, 1, 2, 0, 0, 3, 2, 3, 2, 1, 0, 0, 2, 0], [42, 9, 45, 7, 34, 14, 69, 66, 87, 76, 30, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 47, 30, 17, 8], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.divide_no_nan(sigma, sigma), tf.math.add(beta, tf.math.add(tf.math.square(beta), tf.math.multiply(tf.math.subtract(tf.math.subtract(tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.divide_no_nan(tf.math.pow(beta, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.divide_no_nan(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.subtract(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.square(tf.math.sqrt(tf.math.subtract(sigma, tf.math.add(beta, tf.math.negative(beta))))), tf.math.pow(sigma, tf.math.multiply(tf.math.subtract(sigma, alpha), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))))))))), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), alpha)))), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [7, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 1, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [3, 0, 5, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [47, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1], [4, 3, 2, 0, 7], [7, 0], [12], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 0, 6, 7, 7, 5, 3, 1, 1, 1, 9, 5, 6, 4, 4, 6, 9, 3, 1, 4, 5, 8, 1, 0, 2, 4, 3, 1, 9, 9, 9, 2, 4, 6, 4, 2, 3, 8, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [3, 0, 2, 2, 2, 0, 3, 0, 0, 3, 2, 2, 3, 3, 1, 0, 3, 2, 0, 0, 3, 2, 3, 2, 1, 0, 0, 2, 0], [50, 9, 45, 4, 34, 14, 69, 20, 87, 76, 30, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 10, 7, 5, 2, 1, 4, 2, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.negative(sigma)), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [9, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [0, 0, 5, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [47, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 0], [4, 3, 2, 0], [4, 0], [12], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 4, 6, 7, 7, 5, 3, 1, 1, 1, 9, 5, 6, 4, 4, 6, 9, 3, 1, 4, 5, 8, 1, 0, 2, 4, 3, 1, 9, 9, 9, 2, 4, 6, 4, 2, 3, 8, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [3, 0, 1, 2, 2, 0, 3, 0, 0, 3, 2, 2, 3, 3, 1, 0, 3, 2, 0, 0, 3, 2, 3, 2, 1, 0, 0, 2, 0], [50, 9, 45, 4, 34, 14, 69, 20, 87, 76, 30, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 8, 4, 4, 0, 0, 5, 2, 3, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.negative(sigma)), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.pow(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [0, 0, 5, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [32, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [4, 3, 2, 0], [7, 0], [12], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 0, 6, 7, 7, 5, 3, 1, 1, 1, 9, 5, 6, 4, 4, 6, 9, 3, 1, 4, 5, 8, 1, 0, 2, 4, 3, 1, 9, 9, 9, 2, 4, 6, 4, 2, 3, 8, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [3, 3, 2, 2, 2, 0, 3, 0, 0, 3, 2, 2, 3, 3, 1, 0, 3, 2, 0, 0, 3, 2, 3, 2, 1, 0, 0, 2, 0], [50, 9, 45, 4, 34, 14, 69, 20, 87, 76, 30, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(sigma), sigma)", "other_info": {"loss": [2.301701068878174, 2.3033487796783447, 2.308903217315674, 2.3086040019989014, 2.3089041709899902, 2.3135132789611816, 2.3192102909088135, 2.3248291015625, 2.3275601863861084, 2.3450255393981934, 2.3788559436798096, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09087307006120682, 0.08942015469074249, 0.08149518072605133, 0.07991018146276474, 0.0812310129404068, 0.08175934851169586, 0.08057060092687607, 0.07290978729724884, 0.07858935743570328, 0.07621186226606369, 0.0812310129404068, 0.09470347315073013, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.299943685531616, 2.301323890686035, 2.303713798522949, 2.3060977458953857, 2.308596611022949, 2.3114662170410156, 2.3151938915252686, 2.3197576999664307, 2.3254714012145996, 2.3407764434814453, 2.40903377532959, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.028999999165534973, 0.028333334252238274, 0.02566666714847088, 0.027000000700354576, 0.029666665941476822, 0.039000000804662704, 0.050999999046325684, 0.06533333659172058, 0.08100000023841858, 0.09700000286102295, 0.10066666454076767, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [7, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 1, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [57, 37, 51, 41, 8, 79, 86, 52, 44], [1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [3, 0, 5, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [47, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [4, 3, 2, 0], [7, 0], [12], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 0, 6, 7, 7, 5, 3, 1, 1, 1, 9, 5, 6, 4, 4, 6, 9, 3, 1, 4, 5, 8, 1, 0, 2, 4, 3, 1, 9, 9, 9, 2, 4, 6, 4, 2, 3, 8, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [3, 2, 2, 2, 2, 0, 3, 0, 0, 3, 2, 2, 3, 3, 1, 0, 3, 2, 0, 0, 3, 2, 3, 2, 1, 0, 0, 2, 0], [50, 9, 45, 4, 34, 14, 69, 20, 87, 76, 30, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 39, 24, 15, 5], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.divide_no_nan(sigma, beta)), tf.math.add(beta, tf.math.add(tf.math.square(beta), tf.math.multiply(tf.math.subtract(tf.math.subtract(tf.math.subtract(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.divide_no_nan(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), sigma))), tf.math.pow(tf.math.pow(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(beta, tf.math.pow(tf.math.square(beta), tf.math.sqrt(sigma))))), tf.math.subtract(sigma, tf.math.negative(alpha))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [7, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 1, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [57, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [3, 0, 5, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [47, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [4, 3, 2, 0], [0, 0], [12], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [5, 0, 6, 7, 7, 5, 3, 1, 1, 1, 9, 5, 6, 4, 4, 6, 9, 3, 1, 4, 5, 8, 1, 0, 2, 4, 3, 1, 9, 9, 9, 2, 4, 6, 4, 2, 3, 8, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [3, 0, 2, 2, 2, 0, 3, 0, 0, 3, 2, 2, 3, 3, 1, 0, 3, 2, 0, 0, 3, 2, 3, 2, 1, 0, 0, 2, 0], [50, 9, 45, 4, 34, 14, 69, 20, 87, 76, 30, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.09342857450246811, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(sigma)", "other_info": {"loss": [2.301312208175659, 2.3017961978912354, 2.3045973777770996, 2.3020808696746826, 2.3002769947052, 2.3014864921569824, 2.302037477493286, 2.301997661590576, 2.3004720211029053, 2.3023204803466797, 2.30184006690979, 2.301560878753662, 2.3020200729370117, 2.30157208442688, 2.30218768119812, 2.3020310401916504, 2.3031582832336426, 2.302225112915039, 2.3011422157287598, 2.302062749862671, 2.3003578186035156, 2.301206588745117, 2.301872730255127, 2.301100254058838, 2.3015687465667725, 2.3031022548675537, 2.3011374473571777, 2.301828622817993, 2.3010990619659424, 2.3026726245880127, 2.3020060062408447, 2.301546812057495, 2.301206588745117, 2.301168203353882, 2.3002755641937256, 2.3016092777252197, 2.300759792327881, 2.301466464996338, 2.3011245727539062, 2.3013086318969727, 2.3000829219818115, 2.299379348754883, 2.30098557472229, 2.3002278804779053, 2.300281047821045, 2.300481081008911, 2.2999842166900635, 2.3002963066101074, 2.299808979034424, 2.3011863231658936, 2.2999329566955566, 2.3011252880096436, 2.2995173931121826, 2.3014228343963623, 2.30031681060791, 2.300760269165039, 2.299747943878174, 2.301622152328491, 2.299950122833252, 2.3016021251678467, 2.3007028102874756, 2.3011176586151123, 2.301553964614868, 2.300410032272339, 2.3004775047302246, 2.300506591796875, 2.3006975650787354, 2.2998931407928467, 2.3006200790405273, 2.3006930351257324, 2.3009040355682373, 2.3001976013183594, 2.300590753555298, 2.300882339477539, 2.3002495765686035, 2.3006746768951416, 2.3014094829559326, 2.3011474609375, 2.30051589012146, 2.300788402557373, 2.3004887104034424, 2.3000926971435547, 2.300737142562866, 2.300504207611084, 2.2996134757995605, 2.299856185913086, 2.3010997772216797, 2.300091505050659, 2.3003430366516113, 2.3006598949432373, 2.3005294799804688, 2.300236463546753, 2.299807548522949, 2.300504207611084, 2.3002912998199463, 2.299647569656372, 2.3000495433807373, 2.299778461456299, 2.3003509044647217, 2.3008885383605957], "accuracy": [0.09245806187391281, 0.08994849026203156, 0.09021265059709549, 0.08928807079792023, 0.09311848133802414, 0.09377889335155487, 0.09509972482919693, 0.09140139818191528, 0.09417514503002167, 0.08902391046285629, 0.08955223858356476, 0.08598599582910538, 0.08875974267721176, 0.08981640636920929, 0.09245806187391281, 0.09047681838274002, 0.08572183549404144, 0.09192973375320435, 0.09100515395402908, 0.0936468094587326, 0.09126931428909302, 0.09311848133802414, 0.08730682730674744, 0.09879804402589798, 0.09100515395402908, 0.08849557489156723, 0.09338264167308807, 0.0870426595211029, 0.09496764093637466, 0.09245806187391281, 0.08717474341392517, 0.08796724677085876, 0.08915598690509796, 0.09179764986038208, 0.09655263274908066, 0.09377889335155487, 0.09351472556591034, 0.09549596905708313, 0.10038304328918457, 0.09496764093637466, 0.09325055778026581, 0.09787346422672272, 0.09536388516426086, 0.09391097724437714, 0.09787346422672272, 0.09694888442754745, 0.09826971590518951, 0.09642054885625839, 0.09826971590518951, 0.09430722147226334, 0.10117553919553757, 0.09166556596755981, 0.09668471664190292, 0.09021265059709549, 0.09747721254825592, 0.09298639744520187, 0.0952318087220192, 0.09602430462837219, 0.09602430462837219, 0.0956280529499054, 0.0936468094587326, 0.08809932321310043, 0.09192973375320435, 0.09655263274908066, 0.09259014576673508, 0.09219389408826828, 0.09708096832036972, 0.10249637067317963, 0.0936468094587326, 0.0936468094587326, 0.09694888442754745, 0.10381719470024109, 0.09906221181154251, 0.09721305221319199, 0.09179764986038208, 0.09074098616838455, 0.09430722147226334, 0.09668471664190292, 0.09972262382507324, 0.09747721254825592, 0.0952318087220192, 0.09906221181154251, 0.09879804402589798, 0.10196803510189056, 0.09879804402589798, 0.09245806187391281, 0.09140139818191528, 0.09985470771789551, 0.09932637959718704, 0.09615638852119446, 0.09576013684272766, 0.09668471664190292, 0.10157178342342377, 0.09787346422672272, 0.09932637959718704, 0.10527011007070541, 0.09615638852119446, 0.10157178342342377, 0.10210011899471283, 0.09959053993225098], "val_loss": [2.2991223335266113, 2.2990915775299072, 2.2990612983703613, 2.2990314960479736, 2.299003839492798, 2.2989768981933594, 2.298949956893921, 2.298922300338745, 2.2988953590393066, 2.2988698482513428, 2.2988452911376953, 2.2988224029541016, 2.2988009452819824, 2.2987797260284424, 2.2987594604492188, 2.2987403869628906, 2.298722267150879, 2.2987053394317627, 2.2986881732940674, 2.298671007156372, 2.2986533641815186, 2.298635959625244, 2.298619270324707, 2.298603057861328, 2.298586845397949, 2.298570156097412, 2.2985546588897705, 2.298539400100708, 2.2985241413116455, 2.2985095977783203, 2.2984955310821533, 2.29848313331604, 2.298473358154297, 2.298463821411133, 2.2984554767608643, 2.2984485626220703, 2.2984437942504883, 2.2984395027160645, 2.2984366416931152, 2.2984344959259033, 2.298431873321533, 2.2984304428100586, 2.298429250717163, 2.2984299659729004, 2.2984328269958496, 2.2984371185302734, 2.29844331741333, 2.298449754714966, 2.298456907272339, 2.298464775085449, 2.2984726428985596, 2.298480749130249, 2.2984893321990967, 2.2984981536865234, 2.298506498336792, 2.2985150814056396, 2.298524856567383, 2.298534631729126, 2.2985453605651855, 2.298555850982666, 2.298567056655884, 2.2985785007476807, 2.2985894680023193, 2.298600912094116, 2.2986128330230713, 2.298624277114868, 2.2986369132995605, 2.298650026321411, 2.2986631393432617, 2.2986772060394287, 2.298691987991333, 2.298706531524658, 2.2987208366394043, 2.2987351417541504, 2.298750400543213, 2.298766851425171, 2.2987842559814453, 2.2988016605377197, 2.2988202571868896, 2.298839807510376, 2.2988603115081787, 2.298882246017456, 2.2989048957824707, 2.2989277839660645, 2.298950433731079, 2.2989742755889893, 2.2989988327026367, 2.2990243434906006, 2.2990498542785645, 2.2990756034851074, 2.299100875854492, 2.299126386642456, 2.299152135848999, 2.2991790771484375, 2.299206256866455, 2.299233913421631, 2.299262762069702, 2.2992916107177734, 2.299321174621582, 2.299349069595337], "val_accuracy": [0.03333333507180214, 0.03400000184774399, 0.03500000014901161, 0.03566666692495346, 0.03633333370089531, 0.03733333200216293, 0.03933333232998848, 0.038333334028720856, 0.03966666758060455, 0.04066666588187218, 0.0416666679084301, 0.04333333298563957, 0.04466666653752327, 0.04533333331346512, 0.04600000008940697, 0.046666666865348816, 0.047333333641290665, 0.04766666516661644, 0.04766666516661644, 0.04766666516661644, 0.04833333194255829, 0.04866666719317436, 0.04833333194255829, 0.04833333194255829, 0.04933333396911621, 0.05000000074505806, 0.05133333429694176, 0.05233333259820938, 0.0533333346247673, 0.05533333495259285, 0.05666666850447655, 0.05766666680574417, 0.057999998331069946, 0.057999998331069946, 0.05900000035762787, 0.060333333909511566, 0.060333333909511566, 0.05999999865889549, 0.06066666543483734, 0.06133333221077919, 0.06199999898672104, 0.06300000101327896, 0.06366666406393051, 0.06499999761581421, 0.06566666811704636, 0.06599999964237213, 0.06700000166893005, 0.0676666647195816, 0.06800000369548798, 0.06833333522081375, 0.07133333384990692, 0.07233333587646484, 0.07266666740179062, 0.07366666942834854, 0.07366666942834854, 0.07433333247900009, 0.07500000298023224, 0.07500000298023224, 0.07500000298023224, 0.07533333450555801, 0.07699999958276749, 0.07766667008399963, 0.0793333351612091, 0.0793333351612091, 0.08166666328907013, 0.08133333176374435, 0.08266666531562805, 0.08299999684095383, 0.0833333358168602, 0.08366666734218597, 0.08299999684095383, 0.0846666693687439, 0.0846666693687439, 0.08500000089406967, 0.08666666597127914, 0.08733333647251129, 0.08900000154972076, 0.08966666460037231, 0.09033333510160446, 0.09133332967758179, 0.09166666865348816, 0.09200000017881393, 0.09233333170413971, 0.09266666322946548, 0.09366666525602341, 0.09399999678134918, 0.09399999678134918, 0.09533333033323288, 0.09566666930913925, 0.0963333323597908, 0.09733333438634872, 0.0963333323597908, 0.0976666659116745, 0.09733333438634872, 0.09666666388511658, 0.0963333323597908, 0.0976666659116745, 0.09866666793823242, 0.09933333098888397, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [7, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [3, 0, 5, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [47, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [4, 3, 2, 0], [4, 0], [12], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 5, 6, 7, 7, 5, 3, 1, 1, 1, 9, 5, 6, 4, 4, 6, 9, 3, 1, 4, 5, 8, 1, 0, 2, 4, 3, 1, 9, 9, 9, 2, 4, 6, 4, 2, 3, 8, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [3, 0, 2, 2, 2, 0, 3, 0, 0, 3, 2, 2, 3, 3, 1, 0, 3, 2, 0, 0, 3, 2, 3, 2, 1, 0, 0, 2, 0], [50, 9, 45, 4, 34, 14, 69, 20, 87, 76, 30, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.06371428817510605, "mapping_values": [1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.subtract(grad, tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(sigma), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.301175832748413, 2.3013863563537598, 2.303581476211548, 2.300801992416382, 2.2990663051605225, 2.3003182411193848, 2.300635814666748, 2.3004889488220215, 2.2995755672454834, 2.3010852336883545, 2.3002500534057617, 2.3002865314483643, 2.3003220558166504, 2.299964189529419, 2.300309181213379, 2.3000643253326416, 2.3010082244873047, 2.3003859519958496, 2.2990822792053223, 2.3002305030822754, 2.2988386154174805, 2.2993626594543457, 2.300006628036499, 2.2995989322662354, 2.2996890544891357, 2.3011057376861572], "accuracy": [0.09192973375320435, 0.09245806187391281, 0.09219389408826828, 0.09179764986038208, 0.09826971590518951, 0.09589222073554993, 0.09589222073554993, 0.09536388516426086, 0.1006472036242485, 0.09272222965955734, 0.09826971590518951, 0.09192973375320435, 0.0882314071059227, 0.09826971590518951, 0.09708096832036972, 0.09272222965955734, 0.09179764986038208, 0.09642054885625839, 0.09906221181154251, 0.10157178342342377, 0.09774138033390045, 0.09906221181154251, 0.09192973375320435, 0.1006472036242485, 0.09721305221319199, 0.09206181764602661], "val_loss": [2.298921823501587, 2.2986247539520264, 2.2981696128845215, 2.297950267791748, 2.2978739738464355, 2.2979183197021484, 2.297926425933838, 2.2979485988616943, 2.298088788986206, 2.2981395721435547, 2.298112630844116, 2.2981441020965576, 2.2980916500091553, 2.298027992248535, 2.297900915145874, 2.2978148460388184, 2.2977471351623535, 2.297736883163452, 2.297725200653076, 2.2977471351623535, 2.2978522777557373, 2.297982692718506, 2.2981226444244385, 2.2982900142669678, 2.2984964847564697, 2.298658609390259], "val_accuracy": [0.03866666555404663, 0.041333332657814026, 0.047333333641290665, 0.050999999046325684, 0.05166666582226753, 0.05400000140070915, 0.05533333495259285, 0.05833333358168602, 0.05966666713356972, 0.061666667461395264, 0.06199999898672104, 0.06499999761581421, 0.06666667014360428, 0.06933332979679108, 0.0716666653752327, 0.07599999755620956, 0.07633333653211594, 0.07699999958276749, 0.07466666400432587, 0.07699999958276749, 0.07733333110809326, 0.07533333450555801, 0.07599999755620956, 0.0729999989271164, 0.07233333587646484, 0.06966666877269745]}}]