[{"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [0, 3, 2, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [7, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 0], [2, 3, 2, 0], [1, 0], [12], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 6, 7, 7, 5, 3, 1, 4, 3, 9, 5, 6, 4, 4, 4, 3, 3, 1, 4, 5, 1, 1, 0, 1, 4, 7, 3, 9, 9, 3, 2, 4, 6, 4, 2, 0, 7, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [0, 1, 2, 2, 2, 0, 2, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0, 2, 3, 2, 1, 2, 0], [48, 9, 45, 71, 34, 14, 69, 20, 87, 76, 68, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.8354285955429077, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.0078489780426025, 1.7127965688705444, 1.184697151184082, 0.9735516309738159, 0.7844980955123901, 0.7434736490249634, 0.7147350907325745, 0.6261715888977051, 0.5990435481071472, 0.6122691631317139, 0.5728944540023804, 0.5498998761177063, 0.5212007164955139, 0.5155206322669983, 0.5007845759391785, 0.48939353227615356, 0.4895899295806885, 0.49473559856414795, 0.46115562319755554, 0.4677693247795105, 0.43539074063301086, 0.4425164759159088, 0.43416741490364075, 0.4238186478614807, 0.4136959910392761, 0.4018923044204712, 0.3933757543563843, 0.38175952434539795], "accuracy": [0.3140932619571686, 0.44089287519454956, 0.5822216272354126, 0.6478668451309204, 0.7000396251678467, 0.7206445932388306, 0.7304186820983887, 0.7664773464202881, 0.7763835787773132, 0.7640998363494873, 0.7861577272415161, 0.7876105904579163, 0.8058380484580994, 0.8076872229576111, 0.8100647330284119, 0.8207634687423706, 0.8164047002792358, 0.8164047002792358, 0.8293488025665283, 0.8248580098152161, 0.837141752243042, 0.8363492488861084, 0.8391229510307312, 0.8448025584220886, 0.8455950617790222, 0.8504821062088013, 0.8555012345314026, 0.8570862412452698], "val_loss": [2.1010544300079346, 1.1333781480789185, 0.788064181804657, 0.7995371222496033, 0.665086030960083, 0.6690465807914734, 0.6491910219192505, 0.6356056332588196, 0.6413578391075134, 0.5286818146705627, 0.5240799784660339, 0.524286687374115, 0.5188060402870178, 0.5020575523376465, 0.4910428822040558, 0.506787896156311, 0.45252442359924316, 0.43747252225875854, 0.44181308150291443, 0.44684407114982605, 0.42869848012924194, 0.42166563868522644, 0.4081348478794098, 0.4849191904067993, 0.4709359109401703, 0.40928104519844055, 0.4273778200149536, 0.49261295795440674], "val_accuracy": [0.34299999475479126, 0.5973333120346069, 0.6893333196640015, 0.6800000071525574, 0.7570000290870667, 0.7326666712760925, 0.7766666412353516, 0.7456666827201843, 0.7540000081062317, 0.800000011920929, 0.8116666674613953, 0.7860000133514404, 0.8116666674613953, 0.8019999861717224, 0.812333345413208, 0.8086666464805603, 0.8336666822433472, 0.8496666550636292, 0.8526666760444641, 0.8403333425521851, 0.8516666889190674, 0.8533333539962769, 0.8616666793823242, 0.8203333616256714, 0.8259999752044678, 0.8500000238418579, 0.8349999785423279, 0.8216666579246521]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [2, 3, 2, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [7, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [2, 3, 2, 0], [1, 0], [12], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 6, 7, 7, 5, 3, 1, 4, 3, 9, 5, 6, 4, 4, 4, 3, 3, 1, 4, 5, 1, 1, 0, 1, 4, 7, 3, 9, 9, 3, 2, 4, 6, 4, 2, 0, 7, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [0, 1, 2, 2, 2, 0, 2, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0, 2, 3, 2, 1, 2, 0], [48, 9, 45, 71, 34, 14, 69, 20, 87, 76, 68, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.8328571319580078, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.0080509185791016, 1.7124015092849731, 1.089992642402649, 0.9215266704559326, 0.7854983806610107, 0.7233153581619263, 0.70673668384552, 0.6384806632995605, 0.6072188019752502, 0.5861180424690247, 0.5700061321258545, 0.5623608827590942, 0.5181081295013428, 0.5342351794242859, 0.49416810274124146, 0.4805455207824707, 0.5168848633766174, 0.4569532871246338, 0.46816539764404297, 0.46391379833221436, 0.45350298285484314, 0.4264557361602783, 0.434370219707489, 0.4272399842739105, 0.412835955619812, 0.3992529809474945, 0.39160868525505066], "accuracy": [0.31382909417152405, 0.4422137141227722, 0.5996565818786621, 0.6579051613807678, 0.7040021419525146, 0.7316074371337891, 0.7298903465270996, 0.7605336308479309, 0.7687227725982666, 0.7755910754203796, 0.7796856164932251, 0.785101056098938, 0.8001585006713867, 0.8038568496704102, 0.819970965385437, 0.8235371708869934, 0.8057059645652771, 0.8310658931732178, 0.8271034359931946, 0.828292191028595, 0.8281601071357727, 0.8413683772087097, 0.8384625315666199, 0.8418967127799988, 0.8429533839225769, 0.8491612672805786, 0.8580108284950256], "val_loss": [2.1020686626434326, 1.1074658632278442, 0.8141778707504272, 0.764596700668335, 0.6997830271720886, 0.631264865398407, 0.6587300896644592, 0.618380069732666, 0.6209897398948669, 0.5285091400146484, 0.4952639937400818, 0.4965095520019531, 0.5927391648292542, 0.4840908348560333, 0.458177775144577, 0.5569680333137512, 0.44226139783859253, 0.46379557251930237, 0.433550626039505, 0.43955501914024353, 0.42869916558265686, 0.420338898897171, 0.4289402663707733, 0.44348689913749695, 0.4620019495487213, 0.4043935239315033, 0.4171375036239624], "val_accuracy": [0.34166666865348816, 0.5910000205039978, 0.668666660785675, 0.6669999957084656, 0.7236666679382324, 0.731333315372467, 0.7839999794960022, 0.7416666746139526, 0.7493333220481873, 0.8069999814033508, 0.8103333115577698, 0.8066666722297668, 0.8019999861717224, 0.8153333067893982, 0.8266666531562805, 0.7839999794960022, 0.8339999914169312, 0.8266666531562805, 0.8493333458900452, 0.8410000205039978, 0.8536666631698608, 0.8566666841506958, 0.8473333120346069, 0.8336666822433472, 0.8336666822433472, 0.8546666502952576, 0.843666672706604]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [2, 3, 2, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [7, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [2, 3, 2, 0], [1, 0], [12], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 6, 7, 7, 5, 3, 1, 4, 3, 9, 5, 6, 4, 4, 4, 3, 3, 1, 4, 5, 1, 1, 0, 1, 4, 7, 3, 9, 9, 3, 2, 4, 6, 4, 2, 0, 7, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [0, 1, 2, 2, 2, 0, 2, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0, 2, 3, 2, 1, 2, 0], [48, 9, 45, 71, 34, 14, 69, 20, 87, 76, 68, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.8231428861618042, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.0081706047058105, 1.7088520526885986, 1.205672025680542, 0.8638303279876709, 0.8098385334014893, 0.7366663813591003, 0.6805115342140198, 0.6406997442245483, 0.6074832677841187, 0.6239545345306396, 0.5645453929901123, 0.5550156235694885, 0.5205771327018738, 0.5029427409172058, 0.5177398920059204, 0.4937252104282379, 0.5029744505882263, 0.4551387131214142, 0.45665138959884644, 0.47105246782302856, 0.44405022263526917, 0.4391825199127197, 0.4395392835140228, 0.4262855052947998, 0.41096654534339905, 0.40452250838279724, 0.3953176736831665, 0.37611621618270874], "accuracy": [0.31382909417152405, 0.4407607913017273, 0.5875049233436584, 0.6769251227378845, 0.6877558827400208, 0.717870831489563, 0.7390040755271912, 0.7549861073493958, 0.7705719470977783, 0.7635715007781982, 0.7907806038856506, 0.7865539789199829, 0.8025360107421875, 0.8187822103500366, 0.8095363974571228, 0.8168009519577026, 0.8086118102073669, 0.8319904804229736, 0.8338396549224854, 0.8215559124946594, 0.8352925777435303, 0.8374059200286865, 0.8333113193511963, 0.844010055065155, 0.8454629778862, 0.8490291833877563, 0.8504821062088013, 0.8599920868873596], "val_loss": [2.1039130687713623, 1.1146279573440552, 0.8083224296569824, 0.838543713092804, 0.6440130472183228, 0.6139909029006958, 0.6254260540008545, 0.6284807920455933, 0.6816115975379944, 0.5169574618339539, 0.5161690711975098, 0.5436208248138428, 0.46657946705818176, 0.5273676514625549, 0.4633246958255768, 0.5426952838897705, 0.4467608332633972, 0.43704932928085327, 0.43725064396858215, 0.44733044505119324, 0.4283452033996582, 0.43651920557022095, 0.4137173593044281, 0.466656893491745, 0.4675581455230713, 0.4055691659450531, 0.40756046772003174, 0.4766635298728943], "val_accuracy": [0.34033334255218506, 0.6033333539962769, 0.7006666660308838, 0.6980000138282776, 0.7620000243186951, 0.750333309173584, 0.7673333287239075, 0.7400000095367432, 0.749666690826416, 0.8080000281333923, 0.812666654586792, 0.7713333368301392, 0.8273333311080933, 0.7803333401679993, 0.8276666402816772, 0.7816666960716248, 0.8343333601951599, 0.8420000076293945, 0.8446666598320007, 0.8413333296775818, 0.8523333072662354, 0.8443333506584167, 0.8556666374206543, 0.8246666789054871, 0.8256666660308838, 0.8529999852180481, 0.8516666889190674, 0.8293333053588867]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [1, 3, 2, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [7, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [2, 3, 2, 0], [1, 0], [12], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 6, 7, 7, 5, 3, 1, 4, 3, 9, 5, 6, 4, 4, 4, 3, 3, 1, 4, 5, 1, 1, 0, 1, 4, 7, 3, 9, 9, 3, 2, 4, 6, 4, 2, 0, 7, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [0, 1, 2, 2, 2, 0, 2, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0, 2, 3, 2, 1, 2, 0], [48, 9, 45, 71, 34, 14, 69, 20, 87, 76, 68, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.8022857308387756, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.0080552101135254, 1.71004319190979, 1.1915324926376343, 0.9210405349731445, 0.7994038462638855, 0.6995251178741455, 0.7108155488967896, 0.6303259134292603, 0.5993607640266418, 0.6035224199295044, 0.5723686814308167, 0.5608587265014648, 0.5289692282676697, 0.5352044105529785, 0.4922933876514435, 0.5064556002616882, 0.49655207991600037, 0.46858763694763184, 0.4617663323879242, 0.46723026037216187, 0.45732104778289795, 0.43366697430610657, 0.43592286109924316, 0.4255315661430359, 0.40055736899375916, 0.4050695598125458, 0.3940637409687042, 0.37713396549224854, 0.3957241475582123, 0.3728201389312744, 0.3785304129123688, 0.3506075441837311, 0.36045658588409424, 0.343835711479187, 0.37564757466316223, 0.3444695770740509, 0.34883132576942444, 0.33262914419174194, 0.3247051239013672, 0.32965728640556335, 0.30376431345939636, 0.31022384762763977], "accuracy": [0.31382909417152405, 0.4422137141227722, 0.5855237245559692, 0.6577730774879456, 0.6903975605964661, 0.741909921169281, 0.7272487282752991, 0.7555144429206848, 0.778232753276825, 0.7718927264213562, 0.7777044177055359, 0.7821952104568481, 0.7993659973144531, 0.8025360107421875, 0.8206313848495483, 0.8125742673873901, 0.8124422430992126, 0.8252542614936829, 0.8345000743865967, 0.8231409192085266, 0.8289526104927063, 0.8368775844573975, 0.8364813327789307, 0.8416325449943542, 0.8508783578872681, 0.8462554216384888, 0.8527275323867798, 0.8589354157447815, 0.8508783578872681, 0.8626337051391602, 0.8636903762817383, 0.8721436858177185, 0.8639545440673828, 0.8747853636741638, 0.8593316674232483, 0.8737286925315857, 0.8681812286376953, 0.8728041052818298, 0.8776912093162537, 0.8804649114608765, 0.8881257176399231, 0.8848236799240112], "val_loss": [2.1021032333374023, 1.1229208707809448, 0.955208420753479, 0.7647390961647034, 0.6828112006187439, 0.6142919063568115, 0.6203740239143372, 0.6229015588760376, 0.6643921732902527, 0.5313252210617065, 0.49772754311561584, 0.517490565776825, 0.5092840194702148, 0.47874024510383606, 0.45594608783721924, 0.5342824459075928, 0.4515727460384369, 0.4457317590713501, 0.4275384247303009, 0.44462403655052185, 0.4326167106628418, 0.42454564571380615, 0.42154985666275024, 0.4414413273334503, 0.4679308235645294, 0.40500009059906006, 0.41823893785476685, 0.5030854344367981, 0.41733092069625854, 0.400947630405426, 0.403373122215271, 0.4182112216949463, 0.3981991708278656, 0.39605215191841125, 0.4024710953235626, 0.4292911887168884, 0.38339412212371826, 0.3772028684616089, 0.45731812715530396, 0.382605642080307, 0.39728087186813354, 0.3890673816204071], "val_accuracy": [0.34200000762939453, 0.6086666584014893, 0.6240000128746033, 0.6819999814033508, 0.7483333349227905, 0.7546666860580444, 0.7736666798591614, 0.7379999756813049, 0.7609999775886536, 0.8053333163261414, 0.8080000281333923, 0.7993333339691162, 0.8076666593551636, 0.8166666626930237, 0.8289999961853027, 0.7906666398048401, 0.8309999704360962, 0.8373333215713501, 0.8526666760444641, 0.8420000076293945, 0.8510000109672546, 0.8536666631698608, 0.8489999771118164, 0.8299999833106995, 0.8296666741371155, 0.8566666841506958, 0.8443333506584167, 0.8223333358764648, 0.8483333587646484, 0.8606666922569275, 0.856333315372467, 0.8500000238418579, 0.8583333492279053, 0.8643333315849304, 0.8633333444595337, 0.8410000205039978, 0.874666690826416, 0.8690000176429749, 0.8373333215713501, 0.8713333606719971, 0.8633333444595337, 0.8600000143051147]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [2, 3, 2, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [7, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [2, 3, 2, 0], [1, 0], [12], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 9, 6, 7, 7, 5, 3, 1, 4, 3, 9, 5, 6, 4, 4, 4, 3, 3, 1, 4, 5, 1, 1, 0, 1, 4, 7, 3, 9, 9, 3, 2, 4, 6, 4, 2, 0, 7, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [0, 1, 2, 2, 2, 0, 2, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0, 2, 3, 2, 1, 2, 0], [16, 9, 45, 71, 34, 14, 69, 20, 87, 76, 68, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.19914285838603973, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [7.939686898281815e+33, 1.2812832911168557e+34, NaN, NaN, NaN, NaN], "accuracy": [0.11174217611551285, 0.11557257920503616, 0.11094967275857925, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.2179109122137664e+34, 1.2179109122137664e+34, NaN, NaN, NaN, NaN], "val_accuracy": [0.2016666680574417, 0.2016666680574417, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 5, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [2, 3, 2, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [7, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [2, 3, 2, 0], [1, 0], [12], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 6, 7, 7, 5, 3, 1, 4, 3, 9, 5, 6, 4, 4, 4, 3, 3, 1, 4, 5, 1, 1, 0, 1, 4, 7, 3, 9, 9, 3, 2, 4, 6, 4, 2, 0, 7, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [0, 1, 2, 2, 2, 0, 2, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0, 2, 3, 2, 1, 2, 0], [48, 9, 45, 71, 34, 14, 69, 20, 87, 76, 68, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 23, 23, 14, 9, 4, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(beta, tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.pow(grad, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.sqrt(tf.math.negative(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.subtract(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), alpha)))))), tf.math.add(beta, beta)))))), tf.math.add(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07449477910995483, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [2, 3, 2, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [7, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [2, 3, 2, 0], [7, 0], [12], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [4, 0, 6, 7, 7, 5, 3, 1, 4, 3, 9, 5, 6, 4, 4, 4, 3, 3, 1, 4, 5, 1, 1, 0, 1, 4, 7, 3, 9, 9, 3, 2, 4, 6, 4, 2, 0, 7, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [0, 1, 2, 2, 2, 0, 2, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0, 2, 3, 2, 1, 2, 0], [48, 9, 45, 71, 34, 14, 69, 20, 87, 76, 68, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(beta, tf.math.add(beta, grad))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [2, 3, 2, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [7, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 0], [2, 3, 2, 0], [1, 0], [12], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1], [1, 0, 6, 7, 7, 5, 3, 1, 4, 3, 9, 5, 6, 4, 4, 4, 3, 3, 1, 4, 5, 1, 1, 0, 1, 4, 7, 3, 9, 9, 3, 2, 4, 6, 4, 2, 0, 7, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9, 9, 3, 0, 7, 0, 8], [0, 1, 2, 2, 2, 0, 2, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0, 2, 3, 2, 1, 2, 0, 0, 1, 3, 3, 3, 1], [48, 9, 45, 71, 34, 14, 69, 20, 87, 76, 68, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 6, 6, 3, 3, 0, 8, 4, 4, 0, 0, 90, 57, 33, 15], "tree_depth": 48, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(beta, tf.math.add(beta, grad))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.negative(sigma)), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(tf.math.divide_no_nan(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.add(tf.math.add(tf.math.square(beta), beta), tf.math.multiply(tf.math.subtract(tf.math.pow(tf.math.multiply(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.math.divide_no_nan(tf.math.pow(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.pow(beta, tf.math.multiply(tf.math.multiply(tf.math.subtract(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, tf.math.square(tf.math.subtract(tf.math.subtract(tf.math.negative(tf.math.subtract(tf.math.pow(tf.math.add(beta, tf.math.multiply(beta, sigma)), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.add(tf.math.pow(sigma, tf.math.divide_no_nan(beta, tf.math.pow(tf.math.add(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), sigma), beta))), tf.math.negative(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.math.square(tf.math.negative(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))))), beta)))), tf.math.subtract(tf.math.sqrt(tf.math.pow(sigma, tf.math.add(beta, alpha))), tf.math.subtract(tf.math.add(tf.math.square(beta), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))))), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), sigma), tf.math.multiply(tf.math.negative(tf.math.add(sigma, tf.math.negative(tf.math.sqrt(sigma)))), alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [4, 2, 2, 0, 3, 3, 3, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [7, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [2, 3, 2, 0], [2, 0], [12], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 0, 7, 7, 5, 0, 1, 5, 3, 9, 5, 0, 4, 2, 4, 6, 5, 1, 4, 5, 1, 1, 0, 7, 4, 7, 5, 4, 9, 3, 4, 4, 0, 4, 5, 0, 7, 9, 2, 5, 4, 4, 8, 4, 6, 6, 2, 5, 0, 8, 7, 4, 1, 6, 4, 7, 9], [3, 3, 2, 0, 3, 0, 2, 0, 1, 1, 2, 0, 1, 3, 0, 3, 0, 3, 0, 1, 0, 2, 1, 2, 1, 2, 0, 2, 1, 3, 1, 3, 2, 2], [92, 9, 45, 71, 34, 38, 69, 20, 87, 76, 63, 45, 7, 66, 54, 91, 82, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(sigma))", "other_info": {"loss": [2.3026957511901855, 2.3018059730529785, 2.3055419921875, 2.3083839416503906, 2.3121449947357178, 2.3126838207244873, 2.315967082977295, 2.3204634189605713, 2.330144166946411, 2.3367438316345215, 2.3587236404418945, 144858.46875, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09272222965955734, 0.08717474341392517, 0.08096684515476227, 0.08281600475311279, 0.07660810649394989, 0.07858935743570328, 0.08030643314123154, 0.07489103078842163, 0.08241976052522659, 0.07779685407876968, 0.0820235088467598, 0.09140139818191528, 0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.300248861312866, 2.3012845516204834, 2.3031983375549316, 2.3051581382751465, 2.308077096939087, 2.3106701374053955, 2.313074827194214, 2.316742420196533, 2.3229310512542725, 2.333653211593628, 2.3651013374328613, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.027666667476296425, 0.028999999165534973, 0.027000000700354576, 0.02500000037252903, 0.03333333507180214, 0.0430000014603138, 0.052666667848825455, 0.06566666811704636, 0.08299999684095383, 0.0949999988079071, 0.10066666454076767, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [3, 3, 2, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [7, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 0], [2, 3, 2, 0], [1, 0], [12], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 6, 7, 7, 5, 3, 1, 4, 3, 9, 5, 6, 4, 4, 4, 3, 3, 1, 4, 5, 1, 1, 0, 1, 4, 7, 3, 9, 9, 3, 2, 4, 6, 4, 2, 0, 7, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [0, 1, 2, 2, 2, 0, 2, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0, 2, 3, 2, 1, 2, 0], [48, 9, 45, 71, 34, 14, 69, 20, 87, 76, 68, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3024282455444336, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [2, 3, 2, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [7, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [2, 3, 2, 0], [1, 0], [12], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 8, 6, 7, 7, 5, 3, 1, 4, 3, 9, 5, 6, 4, 4, 4, 3, 3, 1, 4, 5, 1, 1, 0, 1, 4, 7, 3, 9, 9, 3, 2, 4, 6, 4, 2, 0, 7, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [0, 1, 2, 2, 2, 0, 2, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0, 2, 3, 2, 1, 2, 0], [37, 9, 45, 71, 34, 14, 69, 20, 87, 76, 68, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [2.4173078536987305, 1.9312467186815146e+29, 2.31072998046875, 2.3119895458221436, 2.3135058879852295, 2.3153076171875, 2.3174333572387695], "accuracy": [0.033284902572631836, 0.08241976052522659, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.1090540885925293, 2.309978723526001, 2.3111467361450195, 2.3125364780426025, 2.31418514251709, 2.316127061843872, 2.318434000015259], "val_accuracy": [0.00566666666418314, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [6, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [1, 3, 2, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [7, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 0], [2, 3, 2, 0], [7, 0], [12], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 2, 6, 7, 7, 5, 3, 1, 4, 3, 9, 5, 6, 4, 4, 4, 3, 3, 1, 4, 5, 1, 1, 0, 1, 4, 7, 3, 9, 9, 3, 2, 4, 6, 4, 2, 0, 7, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [0, 1, 2, 2, 2, 0, 2, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0, 2, 3, 2, 1, 2, 0], [48, 9, 45, 71, 34, 14, 69, 20, 87, 76, 68, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 22, 22, 12, 10, 4, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(beta, grad))), beta), tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta)))))), tf.math.add(beta, tf.math.pow(tf.math.multiply(alpha, tf.math.add(beta, tf.math.sqrt(tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), alpha), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [4, 3, 2, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [7, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 0], [2, 3, 2, 0], [7, 0], [12], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [3, 0, 6, 7, 7, 5, 3, 1, 4, 3, 9, 5, 6, 4, 4, 4, 3, 3, 1, 4, 5, 1, 1, 0, 1, 4, 7, 3, 9, 9, 3, 2, 4, 6, 4, 2, 0, 7, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [0, 1, 2, 2, 2, 0, 2, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0, 2, 3, 2, 1, 2, 0, 3], [48, 9, 45, 71, 34, 14, 69, 20, 87, 76, 68, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 8, 4, 4, 0, 0, 72, 44, 28, 12], "tree_depth": 52, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, grad))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.negative(sigma)), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(alpha, tf.math.add(tf.math.add(tf.math.square(beta), beta), tf.math.multiply(tf.math.subtract(tf.math.pow(tf.math.multiply(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.math.divide_no_nan(tf.math.pow(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.pow(beta, tf.math.multiply(tf.math.multiply(tf.math.subtract(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, tf.math.square(tf.math.subtract(tf.math.subtract(tf.math.negative(tf.math.subtract(tf.math.pow(tf.math.add(tf.math.multiply(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.math.add(sigma, sigma), tf.math.pow(tf.math.divide_no_nan(tf.math.pow(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), sigma), beta)))), tf.math.add(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), sigma)), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))))), beta)), tf.math.negative(tf.math.add(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(tf.math.negative(sigma)), beta))))))), alpha), tf.math.subtract(beta, tf.math.sqrt(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [2, 3, 2, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [7, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [2, 3, 2, 0], [7, 0], [12], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 6, 7, 7, 5, 3, 1, 4, 3, 9, 5, 6, 4, 4, 4, 3, 3, 1, 4, 5, 1, 1, 0, 1, 4, 7, 3, 9, 9, 3, 2, 4, 6, 4, 2, 0, 7, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [0, 1, 2, 2, 2, 0, 2, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0, 2, 3, 2, 1, 2, 0], [48, 9, 45, 71, 34, 14, 69, 20, 87, 76, 68, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.09942857176065445, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(beta, tf.math.add(beta, grad))), beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.1705574989318848, 2.2808680534362793, 2.4363138675689697, 2.352531909942627, 2.325320243835449, 2.190293550491333, 2.130988121032715, 2.2293930053710938, 2.4335007667541504, 2.346686601638794, 2.3808159828186035], "accuracy": [0.2995641231536865, 0.25716549158096313, 0.12032756209373474, 0.10355303436517715, 0.10249637067317963, 0.19112402200698853, 0.21040813624858856, 0.23352265357971191, 0.12759213149547577, 0.12521463632583618, 0.09985470771789551], "val_loss": [2.2822766304016113, 2.192584276199341, 2.317190170288086, 2.3158109188079834, 2.313100576400757, 1.737258791923523, 1.9602880477905273, 2.1294965744018555, 2.1198806762695312, 2.3801913261413574, 2.3432013988494873], "val_accuracy": [0.1733333319425583, 0.33633333444595337, 0.10100000351667404, 0.1003333330154419, 0.11833333224058151, 0.3490000069141388, 0.22766666114330292, 0.1966666728258133, 0.23633334040641785, 0.09733333438634872, 0.0976666659116745]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [2, 3, 2, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [7, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [2, 3, 2, 0], [1, 0], [12], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 6, 7, 7, 5, 3, 1, 4, 3, 9, 5, 6, 4, 4, 4, 3, 3, 1, 4, 5, 1, 1, 0, 1, 4, 7, 3, 9, 9, 3, 2, 4, 6, 4, 2, 0, 7, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [0, 1, 2, 2, 2, 0, 2, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0, 2, 3, 2, 1, 2, 0], [28, 9, 45, 71, 34, 14, 69, 20, 87, 76, 68, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.3022310733795166, 2.300280809402466, 2.3020131587982178, 2.302917003631592, 2.3031935691833496, 2.3010361194610596], "accuracy": [0.09417514503002167, 0.09311848133802414, 0.08532558381557465, 0.08942015469074249, 0.08360850811004639, 0.08928807079792023], "val_loss": [2.29915452003479, 2.29915452003479, 2.29915452003479, 2.29915452003479, 2.29915452003479, 2.29915452003479], "val_accuracy": [0.03333333507180214, 0.03333333507180214, 0.03333333507180214, 0.03333333507180214, 0.03333333507180214, 0.03333333507180214]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [2, 3, 2, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [7, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [2, 3, 2, 0], [1, 0], [12], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [3, 6, 6, 7, 7, 5, 3, 1, 4, 3, 9, 5, 6, 4, 4, 4, 3, 3, 1, 4, 5, 1, 1, 0, 1, 4, 7, 3, 9, 9, 3, 2, 4, 6, 4, 2, 0, 7, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [0, 1, 2, 2, 2, 0, 2, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0, 2, 3, 2, 1, 2, 0, 1], [48, 9, 45, 71, 34, 14, 69, 20, 87, 76, 68, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.03685714304447174, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 70, 42, 28, 12], "tree_depth": 50, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.divide_no_nan(alpha, tf.math.add(tf.math.add(tf.math.square(beta), beta), tf.math.multiply(tf.math.subtract(tf.math.pow(tf.math.multiply(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.math.divide_no_nan(tf.math.pow(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.pow(beta, tf.math.multiply(tf.math.multiply(tf.math.subtract(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, tf.math.square(tf.math.subtract(tf.math.subtract(tf.math.negative(tf.math.subtract(tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), beta)), sigma), sigma)), beta), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))))), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), sigma)))), tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), sigma)), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.pow(tf.math.add(tf.math.negative(tf.math.add(beta, sigma)), beta), alpha), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.square(tf.math.negative(beta)), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), alpha))", "other_info": {"loss": [2.3022310733795166, 2.300280809402466, 2.3020131587982178, 2.302917003631592, 2.3031935691833496, 2.3010361194610596], "accuracy": [0.09417514503002167, 0.09311848133802414, 0.08532558381557465, 0.08942015469074249, 0.08360850811004639, 0.08928807079792023], "val_loss": [2.29915452003479, 2.29915452003479, 2.29915452003479, 2.29915452003479, 2.29915452003479, 2.29915452003479], "val_accuracy": [0.03333333507180214, 0.03333333507180214, 0.03333333507180214, 0.03333333507180214, 0.03333333507180214, 0.03333333507180214]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [2, 3, 2, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [7, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [2, 3, 7, 0], [7, 0], [12], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 6, 7, 7, 5, 3, 1, 4, 3, 9, 5, 6, 4, 4, 4, 3, 3, 1, 4, 5, 1, 1, 0, 1, 4, 7, 3, 9, 9, 3, 2, 4, 6, 4, 2, 0, 7, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [2, 1, 2, 2, 2, 0, 2, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0, 2, 3, 2, 1, 2, 0], [48, 9, 45, 71, 34, 14, 69, 20, 87, 76, 68, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.negative(alpha))", "other_info": {"loss": [2.3022310733795166, 2.300280809402466, 2.3020131587982178, 2.302917003631592, 2.3031935691833496, 2.3010361194610596], "accuracy": [0.09417514503002167, 0.09311848133802414, 0.08532558381557465, 0.08942015469074249, 0.08360850811004639, 0.08928807079792023], "val_loss": [2.29915452003479, 2.29915452003479, 2.29915452003479, 2.29915452003479, 2.29915452003479, 2.29915452003479], "val_accuracy": [0.03333333507180214, 0.03333333507180214, 0.03333333507180214, 0.03333333507180214, 0.03333333507180214, 0.03333333507180214]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [2, 3, 2, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [7, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [2, 3, 2, 0], [1, 0], [12], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 6, 7, 7, 5, 3, 1, 4, 3, 9, 5, 6, 4, 4, 4, 3, 3, 1, 4, 5, 1, 1, 0, 1, 4, 7, 3, 9, 9, 3, 2, 4, 6, 4, 2, 0, 7, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [3, 1, 2, 2, 2, 0, 2, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0, 2, 3, 2, 1, 2, 0], [28, 9, 45, 71, 34, 14, 69, 20, 87, 76, 68, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(alpha))", "other_info": {"loss": [2.3022310733795166, 2.300280809402466, 2.3020131587982178, 2.302917003631592, 2.3031935691833496, 2.3010361194610596], "accuracy": [0.09417514503002167, 0.09311848133802414, 0.08532558381557465, 0.08942015469074249, 0.08360850811004639, 0.08928807079792023], "val_loss": [2.29915452003479, 2.29915452003479, 2.29915452003479, 2.29915452003479, 2.29915452003479, 2.29915452003479], "val_accuracy": [0.03333333507180214, 0.03333333507180214, 0.03333333507180214, 0.03333333507180214, 0.03333333507180214, 0.03333333507180214]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [3, 3, 2, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [7, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [2, 3, 2, 0], [1, 0], [12], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 6, 7, 7, 5, 3, 1, 4, 3, 9, 5, 6, 4, 4, 4, 3, 3, 1, 4, 5, 1, 1, 0, 1, 4, 7, 3, 9, 9, 3, 2, 4, 6, 4, 2, 0, 7, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [0, 1, 2, 2, 2, 0, 2, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0, 2, 3, 2, 1, 2, 0], [48, 9, 45, 71, 34, 14, 69, 20, 87, 76, 68, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.03685714304447174, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.3022310733795166, 2.300280809402466, 2.3020131587982178, 2.302917003631592, 2.3031935691833496, 2.3010361194610596], "accuracy": [0.09417514503002167, 0.09311848133802414, 0.08532558381557465, 0.08942015469074249, 0.08360850811004639, 0.08928807079792023], "val_loss": [2.29915452003479, 2.29915452003479, 2.29915452003479, 2.29915452003479, 2.29915452003479, 2.29915452003479], "val_accuracy": [0.03333333507180214, 0.03333333507180214, 0.03333333507180214, 0.03333333507180214, 0.03333333507180214, 0.03333333507180214]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [2, 3, 2, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [7, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 0], [2, 3, 2, 0], [1, 0], [12], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 6, 7, 7, 5, 3, 1, 4, 3, 9, 5, 6, 4, 4, 4, 3, 3, 1, 4, 5, 1, 1, 0, 1, 4, 7, 3, 9, 9, 3, 2, 4, 6, 4, 2, 0, 7, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [0, 1, 2, 2, 2, 0, 2, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0, 2, 3, 2, 1, 2, 0, 3, 0, 1, 2, 2, 0], [48, 9, 45, 71, 34, 14, 69, 20, 87, 76, 68, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 1, 0, 0, 0, 0, 83, 50, 33, 14], "tree_depth": 45, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(beta, tf.math.add(beta, grad))), beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(tf.math.multiply(alpha, beta)), tf.math.subtract(tf.math.pow(tf.math.multiply(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.math.divide_no_nan(tf.math.pow(tf.math.pow(beta, beta), tf.math.pow(tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(tf.math.pow(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.subtract(tf.math.negative(tf.math.subtract(tf.math.pow(tf.math.add(tf.math.multiply(sigma, beta), beta), sigma), sigma)), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.divide_no_nan(tf.math.pow(tf.math.add(tf.math.negative(tf.math.add(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))), tf.math.add(sigma, tf.math.square(beta))), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.negative(sigma)), tf.math.subtract(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), beta))), tf.math.sqrt(sigma)))), beta))), tf.math.pow(alpha, beta)), tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, tf.math.add(tf.math.square(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, beta))))))), beta)), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3022310733795166, 2.300280809402466, 2.3020131587982178, 2.302917003631592, 2.3031935691833496, 2.3010361194610596], "accuracy": [0.09417514503002167, 0.09311848133802414, 0.08532558381557465, 0.08942015469074249, 0.08360850811004639, 0.08928807079792023], "val_loss": [2.29915452003479, 2.29915452003479, 2.29915452003479, 2.29915452003479, 2.29915452003479, 2.29915452003479], "val_accuracy": [0.03333333507180214, 0.03333333507180214, 0.03333333507180214, 0.03333333507180214, 0.03333333507180214, 0.03333333507180214]}}]