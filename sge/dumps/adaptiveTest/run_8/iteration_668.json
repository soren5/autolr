[{"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 5, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.7791428565979004, "mapping_values": [1, 7, 7, 5, 2, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.284814187894959, 2.2445716065910783, 2.185103581455862, 2.0976697642805395, 1.9622782283471072, 1.7697116479015842, 1.589497295164114, 1.427219188523535, 1.304432085649669, 1.214336626518042, 1.1464891949066507, 1.0936726678427042, 1.0443763966416135, 1.0024842204135627, 0.9701009913442503, 0.9590243813289612, 0.9300203462318423, 0.9127067221689533, 0.8894638662813141, 0.8737221777147826, 0.8601052339727916, 0.8411904353160805, 0.830545873595361, 0.8245119431298784, 0.8129814779517547, 0.8045674662202057, 0.789127179675996, 0.7846599885296623, 0.7866943279560987, 0.7650676822350593, 0.7743693558594428, 0.7636762078427809, 0.75670721786464, 0.7470902660267464, 0.7384498889152448, 0.7336021995012235, 0.736284297722804, 0.7236835914218053, 0.7240618666039325, 0.7110749795499526, 0.7119969897707298, 0.71328352031738, 0.7018489008960062, 0.7003378496981253, 0.6996029556750181, 0.695870517849875, 0.68413588142099, 0.6825252194461916, 0.6787860968707811, 0.6739606951851619, 0.6790407396594154, 0.6703323322107071, 0.6600961680535737, 0.6676013558500746, 0.6524791564797807, 0.657050807092483, 0.6612636969231532, 0.6528072800099055, 0.656748086084165, 0.6474782439381014, 0.6515642883062457, 0.6514148828045189, 0.6485837621617043, 0.6410130721435351, 0.6324118174235613, 0.6345533381962049, 0.6339691225736999, 0.6356416474464406, 0.6304174494104079, 0.6337012052850921, 0.6246666387953637, 0.6239836809106428], "accuracy": [0.13459251821041107, 0.23259806632995605, 0.3203011453151703, 0.3815876245498657, 0.4227975308895111, 0.46929070353507996, 0.49531105160713196, 0.5304450988769531, 0.5555408596992493, 0.5884295105934143, 0.601109504699707, 0.6190727949142456, 0.6313564777374268, 0.6495839357376099, 0.6535464525222778, 0.6633205413818359, 0.6699247360229492, 0.6742834448814392, 0.6793025732040405, 0.6890767216682434, 0.6880200505256653, 0.6944921612739563, 0.7053229212760925, 0.707568347454071, 0.7059833407402039, 0.7084929347038269, 0.7170783281326294, 0.7205125093460083, 0.7161537408828735, 0.7201162576675415, 0.719852089881897, 0.7234182953834534, 0.7253995537757874, 0.7277770638465881, 0.7349095344543457, 0.7320036888122559, 0.7306828498840332, 0.7347774505615234, 0.7346453666687012, 0.7420420050621033, 0.7460044622421265, 0.7391361594200134, 0.7452120184898376, 0.7457403540611267, 0.7428345084190369, 0.7508915662765503, 0.7441553473472595, 0.7498348951339722, 0.7498348951339722, 0.7514199018478394, 0.7490423917770386, 0.7609298825263977, 0.7586844563484192, 0.7541936039924622, 0.761590301990509, 0.7593448758125305, 0.7589486241340637, 0.7573636174201965, 0.7581561207771301, 0.761590301990509, 0.7611940503120422, 0.765949010848999, 0.76542067527771, 0.7638356685638428, 0.7640998363494873, 0.7640998363494873, 0.7627789974212646, 0.7708360552787781, 0.7638356685638428, 0.7660810947418213, 0.7705719470977783, 0.7668735980987549], "val_loss": [1.9330830574035645, 1.8875772612435477, 1.8169360842023576, 1.705430064882551, 1.5426740305764335, 1.3423826013292586, 1.1572868824005127, 1.0134273597172327, 0.9128974505833217, 0.8431228058678764, 0.7883236067635673, 0.7502974442073277, 0.7206374406814575, 0.6914311477116176, 0.6699882916041783, 0.6548352922712054, 0.6424670730318341, 0.6292227847235543, 0.6188080651419503, 0.6055667911257062, 0.597957798412868, 0.5874162571770805, 0.5813183784484863, 0.5736562694822039, 0.5706689528056553, 0.5603345802852085, 0.5571870292936053, 0.5566136837005615, 0.5488214152199882, 0.5431276900427682, 0.5469408205577305, 0.5358318431036813, 0.5339102915355137, 0.5302771670477731, 0.5253149441310337, 0.5219762665884835, 0.5225955077580043, 0.5185905354363578, 0.5171922104699271, 0.5137337105614799, 0.5090468100139073, 0.5084763935634068, 0.4994948250906808, 0.5005004746573312, 0.49736176218305317, 0.4965073381151472, 0.49371276582990375, 0.4917705399649484, 0.49104842117854525, 0.4847311632973807, 0.4872374194008963, 0.4857592412403652, 0.48137363365718294, 0.4829553876604353, 0.47954860755375456, 0.47629800864628385, 0.4792101723807199, 0.47432637214660645, 0.4729130268096924, 0.4708163057054792, 0.4712334871292114, 0.46952894755772184, 0.46912264823913574, 0.4691077981676374, 0.46671908242361887, 0.4613182715007237, 0.464016284261431, 0.46327907698495047, 0.4621514081954956, 0.4605086020060948, 0.46428442001342773, 0.45870842252458843], "val_accuracy": [0.33799999952316284, 0.42899999022483826, 0.4906666576862335, 0.5350000262260437, 0.5680000185966492, 0.581333339214325, 0.6116666793823242, 0.6586666703224182, 0.6776666641235352, 0.699999988079071, 0.703000009059906, 0.7113333344459534, 0.7163333296775818, 0.7200000286102295, 0.7273333072662354, 0.734333336353302, 0.7390000224113464, 0.746666669845581, 0.75, 0.7493333220481873, 0.7513333559036255, 0.7566666603088379, 0.7593333125114441, 0.762333333492279, 0.7663333415985107, 0.7696666717529297, 0.7703333497047424, 0.7693333625793457, 0.7689999938011169, 0.7720000147819519, 0.7573333382606506, 0.7730000019073486, 0.7766666412353516, 0.7753333449363708, 0.7726666927337646, 0.7803333401679993, 0.7789999842643738, 0.781333327293396, 0.7763333320617676, 0.7856666445732117, 0.7846666574478149, 0.7889999747276306, 0.7900000214576721, 0.7929999828338623, 0.7879999876022339, 0.7910000085830688, 0.7956666946411133, 0.7933333516120911, 0.7963333129882812, 0.7929999828338623, 0.7916666865348816, 0.7979999780654907, 0.7956666946411133, 0.7976666688919067, 0.7986666560173035, 0.7983333468437195, 0.7893333435058594, 0.800000011920929, 0.7963333129882812, 0.8040000200271606, 0.8016666769981384, 0.8016666769981384, 0.8063333630561829, 0.8016666769981384, 0.8029999732971191, 0.8040000200271606, 0.809333324432373, 0.8059999942779541, 0.8006666898727417, 0.8063333630561829, 0.8016666769981384, 0.8076666593551636]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 5, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 0, 1, 3, 4, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [0, 24, 83, 3, 91, 6], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.7791428565979004, "mapping_values": [1, 7, 7, 5, 2, 1, 21, 21, 11, 10, 6, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.square(tf.math.add(alpha, tf.math.square(grad)))), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(grad, tf.math.multiply(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))))))), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), tf.math.add(beta, alpha))))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)))))), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.284814187894959, 2.2445716065910783, 2.185103581455862, 2.0976697642805395, 1.9622782283471072, 1.7697116479015842, 1.589497295164114, 1.427219188523535, 1.304432085649669, 1.214336626518042, 1.1464891949066507, 1.0936726678427042, 1.0443763966416135, 1.0024842204135627, 0.9701009913442503, 0.9590243813289612, 0.9300203462318423, 0.9127067221689533, 0.8894638662813141, 0.8737221777147826, 0.8601052339727916, 0.8411904353160805, 0.830545873595361, 0.8245119431298784, 0.8129814779517547, 0.8045674662202057, 0.789127179675996, 0.7846599885296623, 0.7866943279560987, 0.7650676822350593, 0.7743693558594428, 0.7636762078427809, 0.75670721786464, 0.7470902660267464, 0.7384498889152448, 0.7336021995012235, 0.736284297722804, 0.7236835914218053, 0.7240618666039325, 0.7110749795499526, 0.7119969897707298, 0.71328352031738, 0.7018489008960062, 0.7003378496981253, 0.6996029556750181, 0.695870517849875, 0.68413588142099, 0.6825252194461916, 0.6787860968707811, 0.6739606951851619, 0.6790407396594154, 0.6703323322107071, 0.6600961680535737, 0.6676013558500746, 0.6524791564797807, 0.657050807092483, 0.6612636969231532, 0.6528072800099055, 0.656748086084165, 0.6474782439381014, 0.6515642883062457, 0.6514148828045189, 0.6485837621617043, 0.6410130721435351, 0.6324118174235613, 0.6345533381962049, 0.6339691225736999, 0.6356416474464406, 0.6304174494104079, 0.6337012052850921, 0.6246666387953637, 0.6239836809106428], "accuracy": [0.13459251821041107, 0.23259806632995605, 0.3203011453151703, 0.3815876245498657, 0.4227975308895111, 0.46929070353507996, 0.49531105160713196, 0.5304450988769531, 0.5555408596992493, 0.5884295105934143, 0.601109504699707, 0.6190727949142456, 0.6313564777374268, 0.6495839357376099, 0.6535464525222778, 0.6633205413818359, 0.6699247360229492, 0.6742834448814392, 0.6793025732040405, 0.6890767216682434, 0.6880200505256653, 0.6944921612739563, 0.7053229212760925, 0.707568347454071, 0.7059833407402039, 0.7084929347038269, 0.7170783281326294, 0.7205125093460083, 0.7161537408828735, 0.7201162576675415, 0.719852089881897, 0.7234182953834534, 0.7253995537757874, 0.7277770638465881, 0.7349095344543457, 0.7320036888122559, 0.7306828498840332, 0.7347774505615234, 0.7346453666687012, 0.7420420050621033, 0.7460044622421265, 0.7391361594200134, 0.7452120184898376, 0.7457403540611267, 0.7428345084190369, 0.7508915662765503, 0.7441553473472595, 0.7498348951339722, 0.7498348951339722, 0.7514199018478394, 0.7490423917770386, 0.7609298825263977, 0.7586844563484192, 0.7541936039924622, 0.761590301990509, 0.7593448758125305, 0.7589486241340637, 0.7573636174201965, 0.7581561207771301, 0.761590301990509, 0.7611940503120422, 0.765949010848999, 0.76542067527771, 0.7638356685638428, 0.7640998363494873, 0.7640998363494873, 0.7627789974212646, 0.7708360552787781, 0.7638356685638428, 0.7660810947418213, 0.7705719470977783, 0.7668735980987549], "val_loss": [1.9330830574035645, 1.8875772612435477, 1.8169360842023576, 1.705430064882551, 1.5426740305764335, 1.3423826013292586, 1.1572868824005127, 1.0134273597172327, 0.9128974505833217, 0.8431228058678764, 0.7883236067635673, 0.7502974442073277, 0.7206374406814575, 0.6914311477116176, 0.6699882916041783, 0.6548352922712054, 0.6424670730318341, 0.6292227847235543, 0.6188080651419503, 0.6055667911257062, 0.597957798412868, 0.5874162571770805, 0.5813183784484863, 0.5736562694822039, 0.5706689528056553, 0.5603345802852085, 0.5571870292936053, 0.5566136837005615, 0.5488214152199882, 0.5431276900427682, 0.5469408205577305, 0.5358318431036813, 0.5339102915355137, 0.5302771670477731, 0.5253149441310337, 0.5219762665884835, 0.5225955077580043, 0.5185905354363578, 0.5171922104699271, 0.5137337105614799, 0.5090468100139073, 0.5084763935634068, 0.4994948250906808, 0.5005004746573312, 0.49736176218305317, 0.4965073381151472, 0.49371276582990375, 0.4917705399649484, 0.49104842117854525, 0.4847311632973807, 0.4872374194008963, 0.4857592412403652, 0.48137363365718294, 0.4829553876604353, 0.47954860755375456, 0.47629800864628385, 0.4792101723807199, 0.47432637214660645, 0.4729130268096924, 0.4708163057054792, 0.4712334871292114, 0.46952894755772184, 0.46912264823913574, 0.4691077981676374, 0.46671908242361887, 0.4613182715007237, 0.464016284261431, 0.46327907698495047, 0.4621514081954956, 0.4605086020060948, 0.46428442001342773, 0.45870842252458843], "val_accuracy": [0.33799999952316284, 0.42899999022483826, 0.4906666576862335, 0.5350000262260437, 0.5680000185966492, 0.581333339214325, 0.6116666793823242, 0.6586666703224182, 0.6776666641235352, 0.699999988079071, 0.703000009059906, 0.7113333344459534, 0.7163333296775818, 0.7200000286102295, 0.7273333072662354, 0.734333336353302, 0.7390000224113464, 0.746666669845581, 0.75, 0.7493333220481873, 0.7513333559036255, 0.7566666603088379, 0.7593333125114441, 0.762333333492279, 0.7663333415985107, 0.7696666717529297, 0.7703333497047424, 0.7693333625793457, 0.7689999938011169, 0.7720000147819519, 0.7573333382606506, 0.7730000019073486, 0.7766666412353516, 0.7753333449363708, 0.7726666927337646, 0.7803333401679993, 0.7789999842643738, 0.781333327293396, 0.7763333320617676, 0.7856666445732117, 0.7846666574478149, 0.7889999747276306, 0.7900000214576721, 0.7929999828338623, 0.7879999876022339, 0.7910000085830688, 0.7956666946411133, 0.7933333516120911, 0.7963333129882812, 0.7929999828338623, 0.7916666865348816, 0.7979999780654907, 0.7956666946411133, 0.7976666688919067, 0.7986666560173035, 0.7983333468437195, 0.7893333435058594, 0.800000011920929, 0.7963333129882812, 0.8040000200271606, 0.8016666769981384, 0.8016666769981384, 0.8063333630561829, 0.8016666769981384, 0.8029999732971191, 0.8040000200271606, 0.809333324432373, 0.8059999942779541, 0.8006666898727417, 0.8063333630561829, 0.8016666769981384, 0.8076666593551636]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 4, 5, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [0, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.7791428565979004, "mapping_values": [1, 7, 7, 5, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))))), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.284814187894959, 2.2445716065910783, 2.185103581455862, 2.0976697642805395, 1.9622782283471072, 1.7697116479015842, 1.589497295164114, 1.427219188523535, 1.304432085649669, 1.214336626518042, 1.1464891949066507, 1.0936726678427042, 1.0443763966416135, 1.0024842204135627, 0.9701009913442503, 0.9590243813289612, 0.9300203462318423, 0.9127067221689533, 0.8894638662813141, 0.8737221777147826, 0.8601052339727916, 0.8411904353160805, 0.830545873595361, 0.8245119431298784, 0.8129814779517547, 0.8045674662202057, 0.789127179675996, 0.7846599885296623, 0.7866943279560987, 0.7650676822350593, 0.7743693558594428, 0.7636762078427809, 0.75670721786464, 0.7470902660267464, 0.7384498889152448, 0.7336021995012235, 0.736284297722804, 0.7236835914218053, 0.7240618666039325, 0.7110749795499526, 0.7119969897707298, 0.71328352031738, 0.7018489008960062, 0.7003378496981253, 0.6996029556750181, 0.695870517849875, 0.68413588142099, 0.6825252194461916, 0.6787860968707811, 0.6739606951851619, 0.6790407396594154, 0.6703323322107071, 0.6600961680535737, 0.6676013558500746, 0.6524791564797807, 0.657050807092483, 0.6612636969231532, 0.6528072800099055, 0.656748086084165, 0.6474782439381014, 0.6515642883062457, 0.6514148828045189, 0.6485837621617043, 0.6410130721435351, 0.6324118174235613, 0.6345533381962049, 0.6339691225736999, 0.6356416474464406, 0.6304174494104079, 0.6337012052850921, 0.6246666387953637, 0.6239836809106428], "accuracy": [0.13459251821041107, 0.23259806632995605, 0.3203011453151703, 0.3815876245498657, 0.4227975308895111, 0.46929070353507996, 0.49531105160713196, 0.5304450988769531, 0.5555408596992493, 0.5884295105934143, 0.601109504699707, 0.6190727949142456, 0.6313564777374268, 0.6495839357376099, 0.6535464525222778, 0.6633205413818359, 0.6699247360229492, 0.6742834448814392, 0.6793025732040405, 0.6890767216682434, 0.6880200505256653, 0.6944921612739563, 0.7053229212760925, 0.707568347454071, 0.7059833407402039, 0.7084929347038269, 0.7170783281326294, 0.7205125093460083, 0.7161537408828735, 0.7201162576675415, 0.719852089881897, 0.7234182953834534, 0.7253995537757874, 0.7277770638465881, 0.7349095344543457, 0.7320036888122559, 0.7306828498840332, 0.7347774505615234, 0.7346453666687012, 0.7420420050621033, 0.7460044622421265, 0.7391361594200134, 0.7452120184898376, 0.7457403540611267, 0.7428345084190369, 0.7508915662765503, 0.7441553473472595, 0.7498348951339722, 0.7498348951339722, 0.7514199018478394, 0.7490423917770386, 0.7609298825263977, 0.7586844563484192, 0.7541936039924622, 0.761590301990509, 0.7593448758125305, 0.7589486241340637, 0.7573636174201965, 0.7581561207771301, 0.761590301990509, 0.7611940503120422, 0.765949010848999, 0.76542067527771, 0.7638356685638428, 0.7640998363494873, 0.7640998363494873, 0.7627789974212646, 0.7708360552787781, 0.7638356685638428, 0.7660810947418213, 0.7705719470977783, 0.7668735980987549], "val_loss": [1.9330830574035645, 1.8875772612435477, 1.8169360842023576, 1.705430064882551, 1.5426740305764335, 1.3423826013292586, 1.1572868824005127, 1.0134273597172327, 0.9128974505833217, 0.8431228058678764, 0.7883236067635673, 0.7502974442073277, 0.7206374406814575, 0.6914311477116176, 0.6699882916041783, 0.6548352922712054, 0.6424670730318341, 0.6292227847235543, 0.6188080651419503, 0.6055667911257062, 0.597957798412868, 0.5874162571770805, 0.5813183784484863, 0.5736562694822039, 0.5706689528056553, 0.5603345802852085, 0.5571870292936053, 0.5566136837005615, 0.5488214152199882, 0.5431276900427682, 0.5469408205577305, 0.5358318431036813, 0.5339102915355137, 0.5302771670477731, 0.5253149441310337, 0.5219762665884835, 0.5225955077580043, 0.5185905354363578, 0.5171922104699271, 0.5137337105614799, 0.5090468100139073, 0.5084763935634068, 0.4994948250906808, 0.5005004746573312, 0.49736176218305317, 0.4965073381151472, 0.49371276582990375, 0.4917705399649484, 0.49104842117854525, 0.4847311632973807, 0.4872374194008963, 0.4857592412403652, 0.48137363365718294, 0.4829553876604353, 0.47954860755375456, 0.47629800864628385, 0.4792101723807199, 0.47432637214660645, 0.4729130268096924, 0.4708163057054792, 0.4712334871292114, 0.46952894755772184, 0.46912264823913574, 0.4691077981676374, 0.46671908242361887, 0.4613182715007237, 0.464016284261431, 0.46327907698495047, 0.4621514081954956, 0.4605086020060948, 0.46428442001342773, 0.45870842252458843], "val_accuracy": [0.33799999952316284, 0.42899999022483826, 0.4906666576862335, 0.5350000262260437, 0.5680000185966492, 0.581333339214325, 0.6116666793823242, 0.6586666703224182, 0.6776666641235352, 0.699999988079071, 0.703000009059906, 0.7113333344459534, 0.7163333296775818, 0.7200000286102295, 0.7273333072662354, 0.734333336353302, 0.7390000224113464, 0.746666669845581, 0.75, 0.7493333220481873, 0.7513333559036255, 0.7566666603088379, 0.7593333125114441, 0.762333333492279, 0.7663333415985107, 0.7696666717529297, 0.7703333497047424, 0.7693333625793457, 0.7689999938011169, 0.7720000147819519, 0.7573333382606506, 0.7730000019073486, 0.7766666412353516, 0.7753333449363708, 0.7726666927337646, 0.7803333401679993, 0.7789999842643738, 0.781333327293396, 0.7763333320617676, 0.7856666445732117, 0.7846666574478149, 0.7889999747276306, 0.7900000214576721, 0.7929999828338623, 0.7879999876022339, 0.7910000085830688, 0.7956666946411133, 0.7933333516120911, 0.7963333129882812, 0.7929999828338623, 0.7916666865348816, 0.7979999780654907, 0.7956666946411133, 0.7976666688919067, 0.7986666560173035, 0.7983333468437195, 0.7893333435058594, 0.800000011920929, 0.7963333129882812, 0.8040000200271606, 0.8016666769981384, 0.8016666769981384, 0.8063333630561829, 0.8016666769981384, 0.8029999732971191, 0.8040000200271606, 0.809333324432373, 0.8059999942779541, 0.8006666898727417, 0.8063333630561829, 0.8016666769981384, 0.8076666593551636]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 5, 5, 5, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 0, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 1, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [77, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.7791428565979004, "mapping_values": [1, 6, 6, 3, 3, 2, 14, 14, 8, 6, 5, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.284814187894959, 2.2445716065910783, 2.185103581455862, 2.0976697642805395, 1.9622782283471072, 1.7697116479015842, 1.589497295164114, 1.427219188523535, 1.304432085649669, 1.214336626518042, 1.1464891949066507, 1.0936726678427042, 1.0443763966416135, 1.0024842204135627, 0.9701009913442503, 0.9590243813289612, 0.9300203462318423, 0.9127067221689533, 0.8894638662813141, 0.8737221777147826, 0.8601052339727916, 0.8411904353160805, 0.830545873595361, 0.8245119431298784, 0.8129814779517547, 0.8045674662202057, 0.789127179675996, 0.7846599885296623, 0.7866943279560987, 0.7650676822350593, 0.7743693558594428, 0.7636762078427809, 0.75670721786464, 0.7470902660267464, 0.7384498889152448, 0.7336021995012235, 0.736284297722804, 0.7236835914218053, 0.7240618666039325, 0.7110749795499526, 0.7119969897707298, 0.71328352031738, 0.7018489008960062, 0.7003378496981253, 0.6996029556750181, 0.695870517849875, 0.68413588142099, 0.6825252194461916, 0.6787860968707811, 0.6739606951851619, 0.6790407396594154, 0.6703323322107071, 0.6600961680535737, 0.6676013558500746, 0.6524791564797807, 0.657050807092483, 0.6612636969231532, 0.6528072800099055, 0.656748086084165, 0.6474782439381014, 0.6515642883062457, 0.6514148828045189, 0.6485837621617043, 0.6410130721435351, 0.6324118174235613, 0.6345533381962049, 0.6339691225736999, 0.6356416474464406, 0.6304174494104079, 0.6337012052850921, 0.6246666387953637, 0.6239836809106428], "accuracy": [0.13459251821041107, 0.23259806632995605, 0.3203011453151703, 0.3815876245498657, 0.4227975308895111, 0.46929070353507996, 0.49531105160713196, 0.5304450988769531, 0.5555408596992493, 0.5884295105934143, 0.601109504699707, 0.6190727949142456, 0.6313564777374268, 0.6495839357376099, 0.6535464525222778, 0.6633205413818359, 0.6699247360229492, 0.6742834448814392, 0.6793025732040405, 0.6890767216682434, 0.6880200505256653, 0.6944921612739563, 0.7053229212760925, 0.707568347454071, 0.7059833407402039, 0.7084929347038269, 0.7170783281326294, 0.7205125093460083, 0.7161537408828735, 0.7201162576675415, 0.719852089881897, 0.7234182953834534, 0.7253995537757874, 0.7277770638465881, 0.7349095344543457, 0.7320036888122559, 0.7306828498840332, 0.7347774505615234, 0.7346453666687012, 0.7420420050621033, 0.7460044622421265, 0.7391361594200134, 0.7452120184898376, 0.7457403540611267, 0.7428345084190369, 0.7508915662765503, 0.7441553473472595, 0.7498348951339722, 0.7498348951339722, 0.7514199018478394, 0.7490423917770386, 0.7609298825263977, 0.7586844563484192, 0.7541936039924622, 0.761590301990509, 0.7593448758125305, 0.7589486241340637, 0.7573636174201965, 0.7581561207771301, 0.761590301990509, 0.7611940503120422, 0.765949010848999, 0.76542067527771, 0.7638356685638428, 0.7640998363494873, 0.7640998363494873, 0.7627789974212646, 0.7708360552787781, 0.7638356685638428, 0.7660810947418213, 0.7705719470977783, 0.7668735980987549], "val_loss": [1.9330830574035645, 1.8875772612435477, 1.8169360842023576, 1.705430064882551, 1.5426740305764335, 1.3423826013292586, 1.1572868824005127, 1.0134273597172327, 0.9128974505833217, 0.8431228058678764, 0.7883236067635673, 0.7502974442073277, 0.7206374406814575, 0.6914311477116176, 0.6699882916041783, 0.6548352922712054, 0.6424670730318341, 0.6292227847235543, 0.6188080651419503, 0.6055667911257062, 0.597957798412868, 0.5874162571770805, 0.5813183784484863, 0.5736562694822039, 0.5706689528056553, 0.5603345802852085, 0.5571870292936053, 0.5566136837005615, 0.5488214152199882, 0.5431276900427682, 0.5469408205577305, 0.5358318431036813, 0.5339102915355137, 0.5302771670477731, 0.5253149441310337, 0.5219762665884835, 0.5225955077580043, 0.5185905354363578, 0.5171922104699271, 0.5137337105614799, 0.5090468100139073, 0.5084763935634068, 0.4994948250906808, 0.5005004746573312, 0.49736176218305317, 0.4965073381151472, 0.49371276582990375, 0.4917705399649484, 0.49104842117854525, 0.4847311632973807, 0.4872374194008963, 0.4857592412403652, 0.48137363365718294, 0.4829553876604353, 0.47954860755375456, 0.47629800864628385, 0.4792101723807199, 0.47432637214660645, 0.4729130268096924, 0.4708163057054792, 0.4712334871292114, 0.46952894755772184, 0.46912264823913574, 0.4691077981676374, 0.46671908242361887, 0.4613182715007237, 0.464016284261431, 0.46327907698495047, 0.4621514081954956, 0.4605086020060948, 0.46428442001342773, 0.45870842252458843], "val_accuracy": [0.33799999952316284, 0.42899999022483826, 0.4906666576862335, 0.5350000262260437, 0.5680000185966492, 0.581333339214325, 0.6116666793823242, 0.6586666703224182, 0.6776666641235352, 0.699999988079071, 0.703000009059906, 0.7113333344459534, 0.7163333296775818, 0.7200000286102295, 0.7273333072662354, 0.734333336353302, 0.7390000224113464, 0.746666669845581, 0.75, 0.7493333220481873, 0.7513333559036255, 0.7566666603088379, 0.7593333125114441, 0.762333333492279, 0.7663333415985107, 0.7696666717529297, 0.7703333497047424, 0.7693333625793457, 0.7689999938011169, 0.7720000147819519, 0.7573333382606506, 0.7730000019073486, 0.7766666412353516, 0.7753333449363708, 0.7726666927337646, 0.7803333401679993, 0.7789999842643738, 0.781333327293396, 0.7763333320617676, 0.7856666445732117, 0.7846666574478149, 0.7889999747276306, 0.7900000214576721, 0.7929999828338623, 0.7879999876022339, 0.7910000085830688, 0.7956666946411133, 0.7933333516120911, 0.7963333129882812, 0.7929999828338623, 0.7916666865348816, 0.7979999780654907, 0.7956666946411133, 0.7976666688919067, 0.7986666560173035, 0.7983333468437195, 0.7893333435058594, 0.800000011920929, 0.7963333129882812, 0.8040000200271606, 0.8016666769981384, 0.8016666769981384, 0.8063333630561829, 0.8016666769981384, 0.8029999732971191, 0.8040000200271606, 0.809333324432373, 0.8059999942779541, 0.8006666898727417, 0.8063333630561829, 0.8016666769981384, 0.8076666593551636]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 5, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 0, 1, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 3, 2, 1, 3, 0, 0], [87, 33, 83, 0, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.7791428565979004, "mapping_values": [1, 7, 7, 5, 2, 1, 13, 13, 7, 6, 3, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.square(tf.math.add(alpha, tf.math.square(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.negative(grad)))))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.284814187894959, 2.2445716065910783, 2.185103581455862, 2.0976697642805395, 1.9622782283471072, 1.7697116479015842, 1.589497295164114, 1.427219188523535, 1.304432085649669, 1.214336626518042, 1.1464891949066507, 1.0936726678427042, 1.0443763966416135, 1.0024842204135627, 0.9701009913442503, 0.9590243813289612, 0.9300203462318423, 0.9127067221689533, 0.8894638662813141, 0.8737221777147826, 0.8601052339727916, 0.8411904353160805, 0.830545873595361, 0.8245119431298784, 0.8129814779517547, 0.8045674662202057, 0.789127179675996, 0.7846599885296623, 0.7866943279560987, 0.7650676822350593, 0.7743693558594428, 0.7636762078427809, 0.75670721786464, 0.7470902660267464, 0.7384498889152448, 0.7336021995012235, 0.736284297722804, 0.7236835914218053, 0.7240618666039325, 0.7110749795499526, 0.7119969897707298, 0.71328352031738, 0.7018489008960062, 0.7003378496981253, 0.6996029556750181, 0.695870517849875, 0.68413588142099, 0.6825252194461916, 0.6787860968707811, 0.6739606951851619, 0.6790407396594154, 0.6703323322107071, 0.6600961680535737, 0.6676013558500746, 0.6524791564797807, 0.657050807092483, 0.6612636969231532, 0.6528072800099055, 0.656748086084165, 0.6474782439381014, 0.6515642883062457, 0.6514148828045189, 0.6485837621617043, 0.6410130721435351, 0.6324118174235613, 0.6345533381962049, 0.6339691225736999, 0.6356416474464406, 0.6304174494104079, 0.6337012052850921, 0.6246666387953637, 0.6239836809106428], "accuracy": [0.13459251821041107, 0.23259806632995605, 0.3203011453151703, 0.3815876245498657, 0.4227975308895111, 0.46929070353507996, 0.49531105160713196, 0.5304450988769531, 0.5555408596992493, 0.5884295105934143, 0.601109504699707, 0.6190727949142456, 0.6313564777374268, 0.6495839357376099, 0.6535464525222778, 0.6633205413818359, 0.6699247360229492, 0.6742834448814392, 0.6793025732040405, 0.6890767216682434, 0.6880200505256653, 0.6944921612739563, 0.7053229212760925, 0.707568347454071, 0.7059833407402039, 0.7084929347038269, 0.7170783281326294, 0.7205125093460083, 0.7161537408828735, 0.7201162576675415, 0.719852089881897, 0.7234182953834534, 0.7253995537757874, 0.7277770638465881, 0.7349095344543457, 0.7320036888122559, 0.7306828498840332, 0.7347774505615234, 0.7346453666687012, 0.7420420050621033, 0.7460044622421265, 0.7391361594200134, 0.7452120184898376, 0.7457403540611267, 0.7428345084190369, 0.7508915662765503, 0.7441553473472595, 0.7498348951339722, 0.7498348951339722, 0.7514199018478394, 0.7490423917770386, 0.7609298825263977, 0.7586844563484192, 0.7541936039924622, 0.761590301990509, 0.7593448758125305, 0.7589486241340637, 0.7573636174201965, 0.7581561207771301, 0.761590301990509, 0.7611940503120422, 0.765949010848999, 0.76542067527771, 0.7638356685638428, 0.7640998363494873, 0.7640998363494873, 0.7627789974212646, 0.7708360552787781, 0.7638356685638428, 0.7660810947418213, 0.7705719470977783, 0.7668735980987549], "val_loss": [1.9330830574035645, 1.8875772612435477, 1.8169360842023576, 1.705430064882551, 1.5426740305764335, 1.3423826013292586, 1.1572868824005127, 1.0134273597172327, 0.9128974505833217, 0.8431228058678764, 0.7883236067635673, 0.7502974442073277, 0.7206374406814575, 0.6914311477116176, 0.6699882916041783, 0.6548352922712054, 0.6424670730318341, 0.6292227847235543, 0.6188080651419503, 0.6055667911257062, 0.597957798412868, 0.5874162571770805, 0.5813183784484863, 0.5736562694822039, 0.5706689528056553, 0.5603345802852085, 0.5571870292936053, 0.5566136837005615, 0.5488214152199882, 0.5431276900427682, 0.5469408205577305, 0.5358318431036813, 0.5339102915355137, 0.5302771670477731, 0.5253149441310337, 0.5219762665884835, 0.5225955077580043, 0.5185905354363578, 0.5171922104699271, 0.5137337105614799, 0.5090468100139073, 0.5084763935634068, 0.4994948250906808, 0.5005004746573312, 0.49736176218305317, 0.4965073381151472, 0.49371276582990375, 0.4917705399649484, 0.49104842117854525, 0.4847311632973807, 0.4872374194008963, 0.4857592412403652, 0.48137363365718294, 0.4829553876604353, 0.47954860755375456, 0.47629800864628385, 0.4792101723807199, 0.47432637214660645, 0.4729130268096924, 0.4708163057054792, 0.4712334871292114, 0.46952894755772184, 0.46912264823913574, 0.4691077981676374, 0.46671908242361887, 0.4613182715007237, 0.464016284261431, 0.46327907698495047, 0.4621514081954956, 0.4605086020060948, 0.46428442001342773, 0.45870842252458843], "val_accuracy": [0.33799999952316284, 0.42899999022483826, 0.4906666576862335, 0.5350000262260437, 0.5680000185966492, 0.581333339214325, 0.6116666793823242, 0.6586666703224182, 0.6776666641235352, 0.699999988079071, 0.703000009059906, 0.7113333344459534, 0.7163333296775818, 0.7200000286102295, 0.7273333072662354, 0.734333336353302, 0.7390000224113464, 0.746666669845581, 0.75, 0.7493333220481873, 0.7513333559036255, 0.7566666603088379, 0.7593333125114441, 0.762333333492279, 0.7663333415985107, 0.7696666717529297, 0.7703333497047424, 0.7693333625793457, 0.7689999938011169, 0.7720000147819519, 0.7573333382606506, 0.7730000019073486, 0.7766666412353516, 0.7753333449363708, 0.7726666927337646, 0.7803333401679993, 0.7789999842643738, 0.781333327293396, 0.7763333320617676, 0.7856666445732117, 0.7846666574478149, 0.7889999747276306, 0.7900000214576721, 0.7929999828338623, 0.7879999876022339, 0.7910000085830688, 0.7956666946411133, 0.7933333516120911, 0.7963333129882812, 0.7929999828338623, 0.7916666865348816, 0.7979999780654907, 0.7956666946411133, 0.7976666688919067, 0.7986666560173035, 0.7983333468437195, 0.7893333435058594, 0.800000011920929, 0.7963333129882812, 0.8040000200271606, 0.8016666769981384, 0.8016666769981384, 0.8063333630561829, 0.8016666769981384, 0.8029999732971191, 0.8040000200271606, 0.809333324432373, 0.8059999942779541, 0.8006666898727417, 0.8063333630561829, 0.8016666769981384, 0.8076666593551636]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 6, 5, 3, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [8, 4, 2, 5, 6, 4, 4, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 0, 0, 2, 1, 3, 0, 0], [87, 33, 83, 0, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.7791428565979004, "mapping_values": [1, 7, 7, 4, 3, 1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.square(tf.math.multiply(tf.math.add(alpha, grad), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.pow(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.284814187894959, 2.2445716065910783, 2.185103581455862, 2.0976697642805395, 1.9622782283471072, 1.7697116479015842, 1.589497295164114, 1.427219188523535, 1.304432085649669, 1.214336626518042, 1.1464891949066507, 1.0936726678427042, 1.0443763966416135, 1.0024842204135627, 0.9701009913442503, 0.9590243813289612, 0.9300203462318423, 0.9127067221689533, 0.8894638662813141, 0.8737221777147826, 0.8601052339727916, 0.8411904353160805, 0.830545873595361, 0.8245119431298784, 0.8129814779517547, 0.8045674662202057, 0.789127179675996, 0.7846599885296623, 0.7866943279560987, 0.7650676822350593, 0.7743693558594428, 0.7636762078427809, 0.75670721786464, 0.7470902660267464, 0.7384498889152448, 0.7336021995012235, 0.736284297722804, 0.7236835914218053, 0.7240618666039325, 0.7110749795499526, 0.7119969897707298, 0.71328352031738, 0.7018489008960062, 0.7003378496981253, 0.6996029556750181, 0.695870517849875, 0.68413588142099, 0.6825252194461916, 0.6787860968707811, 0.6739606951851619, 0.6790407396594154, 0.6703323322107071, 0.6600961680535737, 0.6676013558500746, 0.6524791564797807, 0.657050807092483, 0.6612636969231532, 0.6528072800099055, 0.656748086084165, 0.6474782439381014, 0.6515642883062457, 0.6514148828045189, 0.6485837621617043, 0.6410130721435351, 0.6324118174235613, 0.6345533381962049, 0.6339691225736999, 0.6356416474464406, 0.6304174494104079, 0.6337012052850921, 0.6246666387953637, 0.6239836809106428], "accuracy": [0.13459251821041107, 0.23259806632995605, 0.3203011453151703, 0.3815876245498657, 0.4227975308895111, 0.46929070353507996, 0.49531105160713196, 0.5304450988769531, 0.5555408596992493, 0.5884295105934143, 0.601109504699707, 0.6190727949142456, 0.6313564777374268, 0.6495839357376099, 0.6535464525222778, 0.6633205413818359, 0.6699247360229492, 0.6742834448814392, 0.6793025732040405, 0.6890767216682434, 0.6880200505256653, 0.6944921612739563, 0.7053229212760925, 0.707568347454071, 0.7059833407402039, 0.7084929347038269, 0.7170783281326294, 0.7205125093460083, 0.7161537408828735, 0.7201162576675415, 0.719852089881897, 0.7234182953834534, 0.7253995537757874, 0.7277770638465881, 0.7349095344543457, 0.7320036888122559, 0.7306828498840332, 0.7347774505615234, 0.7346453666687012, 0.7420420050621033, 0.7460044622421265, 0.7391361594200134, 0.7452120184898376, 0.7457403540611267, 0.7428345084190369, 0.7508915662765503, 0.7441553473472595, 0.7498348951339722, 0.7498348951339722, 0.7514199018478394, 0.7490423917770386, 0.7609298825263977, 0.7586844563484192, 0.7541936039924622, 0.761590301990509, 0.7593448758125305, 0.7589486241340637, 0.7573636174201965, 0.7581561207771301, 0.761590301990509, 0.7611940503120422, 0.765949010848999, 0.76542067527771, 0.7638356685638428, 0.7640998363494873, 0.7640998363494873, 0.7627789974212646, 0.7708360552787781, 0.7638356685638428, 0.7660810947418213, 0.7705719470977783, 0.7668735980987549], "val_loss": [1.9330830574035645, 1.8875772612435477, 1.8169360842023576, 1.705430064882551, 1.5426740305764335, 1.3423826013292586, 1.1572868824005127, 1.0134273597172327, 0.9128974505833217, 0.8431228058678764, 0.7883236067635673, 0.7502974442073277, 0.7206374406814575, 0.6914311477116176, 0.6699882916041783, 0.6548352922712054, 0.6424670730318341, 0.6292227847235543, 0.6188080651419503, 0.6055667911257062, 0.597957798412868, 0.5874162571770805, 0.5813183784484863, 0.5736562694822039, 0.5706689528056553, 0.5603345802852085, 0.5571870292936053, 0.5566136837005615, 0.5488214152199882, 0.5431276900427682, 0.5469408205577305, 0.5358318431036813, 0.5339102915355137, 0.5302771670477731, 0.5253149441310337, 0.5219762665884835, 0.5225955077580043, 0.5185905354363578, 0.5171922104699271, 0.5137337105614799, 0.5090468100139073, 0.5084763935634068, 0.4994948250906808, 0.5005004746573312, 0.49736176218305317, 0.4965073381151472, 0.49371276582990375, 0.4917705399649484, 0.49104842117854525, 0.4847311632973807, 0.4872374194008963, 0.4857592412403652, 0.48137363365718294, 0.4829553876604353, 0.47954860755375456, 0.47629800864628385, 0.4792101723807199, 0.47432637214660645, 0.4729130268096924, 0.4708163057054792, 0.4712334871292114, 0.46952894755772184, 0.46912264823913574, 0.4691077981676374, 0.46671908242361887, 0.4613182715007237, 0.464016284261431, 0.46327907698495047, 0.4621514081954956, 0.4605086020060948, 0.46428442001342773, 0.45870842252458843], "val_accuracy": [0.33799999952316284, 0.42899999022483826, 0.4906666576862335, 0.5350000262260437, 0.5680000185966492, 0.581333339214325, 0.6116666793823242, 0.6586666703224182, 0.6776666641235352, 0.699999988079071, 0.703000009059906, 0.7113333344459534, 0.7163333296775818, 0.7200000286102295, 0.7273333072662354, 0.734333336353302, 0.7390000224113464, 0.746666669845581, 0.75, 0.7493333220481873, 0.7513333559036255, 0.7566666603088379, 0.7593333125114441, 0.762333333492279, 0.7663333415985107, 0.7696666717529297, 0.7703333497047424, 0.7693333625793457, 0.7689999938011169, 0.7720000147819519, 0.7573333382606506, 0.7730000019073486, 0.7766666412353516, 0.7753333449363708, 0.7726666927337646, 0.7803333401679993, 0.7789999842643738, 0.781333327293396, 0.7763333320617676, 0.7856666445732117, 0.7846666574478149, 0.7889999747276306, 0.7900000214576721, 0.7929999828338623, 0.7879999876022339, 0.7910000085830688, 0.7956666946411133, 0.7933333516120911, 0.7963333129882812, 0.7929999828338623, 0.7916666865348816, 0.7979999780654907, 0.7956666946411133, 0.7976666688919067, 0.7986666560173035, 0.7983333468437195, 0.7893333435058594, 0.800000011920929, 0.7963333129882812, 0.8040000200271606, 0.8016666769981384, 0.8016666769981384, 0.8063333630561829, 0.8016666769981384, 0.8029999732971191, 0.8040000200271606, 0.809333324432373, 0.8059999942779541, 0.8006666898727417, 0.8063333630561829, 0.8016666769981384, 0.8076666593551636]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 5, 5, 3, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [15, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [42, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [95, 25, 50, 71, 34]], "fitness": -0.24799999594688416, "mapping_values": [1, 10, 10, 7, 3, 2, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))))), tf.math.add(tf.math.square(grad), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [3.234778478460195, 2.3446854039142946, 2.299420980713733, 2.3978033320558323, 2.3042574119038823, 2.302580313675628, 2.2834517678658974, 2.3075019164470207, 2.320222882357854, 2.309519590057355, 2.3040843919724554, 2.303271598630751], "accuracy": [0.2094835489988327, 0.12534672021865845, 0.10540219396352768, 0.14714039862155914, 0.1018359512090683, 0.10460969805717468, 0.1394795924425125, 0.11636507511138916, 0.14938580989837646, 0.09496764093637466, 0.09932637959718704, 0.09879804402589798], "val_loss": [1.981358255658831, 1.9755665234157018, 1.9350619997297014, 1.9759994915553503, 1.9736181667872839, 1.971846444266183, 1.7949066162109375, 1.9731799534388952, 1.9831293651035853, 1.9753986086164201, 1.9740455491202218, 1.9739042009626115], "val_accuracy": [0.09700000286102295, 0.09833333641290665, 0.14933332800865173, 0.10000000149011612, 0.10100000351667404, 0.1106666699051857, 0.28299999237060547, 0.09700000286102295, 0.09700000286102295, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 5, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [44, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 5, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 24, 69, 11, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [9, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 5, 2, 1, 13, 13, 9, 4, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.square(tf.math.add(alpha, tf.math.square(grad)))), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)))), grad)), tf.math.square(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302529021560272, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 5, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 0, 1, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [85, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 2, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(sigma, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [28.519157599023526, 119997234.08796611, 6622287936.516202, 21504247021641.42, 33017631223900.484, 2.5576025079403238e+23, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.10276053100824356, 0.09906221181154251, 0.08611807972192764, 0.09708096832036972, 0.0948355570435524, 0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.039286340985979, 2.0218437058585033, 1.9873105457850866, 1.9816103662763322, 7590718273561746.0, 3.1636744070338194e+28, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.10499999672174454, 0.0989999994635582, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 6, 5, 3, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 1, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [15, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [42, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [0, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 74, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [9105.425308089734, 166430.6138926496, 776574.67428345, 2159688.0048210276, 4600546.887729494, 8384678.587240787], "accuracy": [0.10091137140989304, 0.09721305221319199, 0.10315678268671036, 0.1002509593963623, 0.10051512718200684, 0.10236428678035736], "val_loss": [34048.11607142857, 267336.4464285714, 897062.2142857143, 2120419.3571428573, 4134597.5714285714, 7136788.142857143], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 2, 5, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 3, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [87, 33, 83, 0, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [2, 3, 5, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 8, 4, 5, 1, 1, 0, 1, 0, 5, 2, 3, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))))), tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)))), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(sigma, beta), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 5, 3, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 1, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [85, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 0, 1, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 2, 2, 1, 3, 0, 0], [32, 24, 52, 38, 2, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [8, 2, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 1, 21, 21, 11, 10, 5, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), alpha)), tf.math.square(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))))))), beta)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, alpha))))), tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(sigma, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 8, 5, 3, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 1, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 0, 0, 2, 1, 3, 0, 0], [72, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 8, 5, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 5, 2, 1, 12, 12, 8, 4, 4, 1, 1, 0, 1, 0, 3, 2, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.sqrt(tf.math.add(alpha, alpha)), tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))))), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 5, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 0, 1, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [12, 24, 83, 3, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [8, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 7, 3, 2, 21, 21, 12, 9, 6, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, tf.math.square(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.add(tf.math.square(grad), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta))))), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, alpha))), tf.math.add(beta, grad)), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(sigma, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 6, 5, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 9, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 0, 0, 0, 0, 2, 1, 3, 0, 0], [87, 33, 83, 0, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 5, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 4, 2, 0, 10, 10, 6, 4, 5, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [195427.914327953, 4611501.182010302, 23232331.61326113, 66809717.61722361, 145034204.54893672, 267496006.8683133], "accuracy": [0.10077928751707077, 0.09708096832036972, 0.10315678268671036, 0.09998679161071777, 0.10038304328918457, 0.10236428678035736], "val_loss": [849351.375, 7772406.571428572, 27400168.57142857, 66364148.571428575, 131295538.28571428, 228826098.2857143], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 5, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 0, 1, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [85, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 4, 2, 0, 12, 12, 8, 4, 5, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, beta))", "other_info": {"loss": [7258696726487.881, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07277770340442657, 0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [6.036085915947012e+20, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 6, 5, 8, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [8, 4, 2, 5, 6, 4, 4, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 24, 83, 3, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [2, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 4, 2, 0, 17, 17, 10, 7, 5, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), grad)))), tf.math.add(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))))), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(sigma, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [9, 6, 5, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 1, 1, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [15, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [8, 4, 2, 5, 6, 4, 4, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [42, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [0, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [95, 25, 50, 71, 34]], "fitness": -0.09942857176065445, "mapping_values": [1, 1, 1, 1, 0, 1, 7, 7, 4, 3, 2, 1, 1, 0, 1, 0, 5, 3, 2, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3071655962587174, 2.3511624620921574, 2.4609483051073315, 2.6855206214331395, 3.0195952690886845, 3.4780790984055874, 4.1429374394651735, 4.868487589426359, 5.7487090238884315], "accuracy": [0.09087307006120682, 0.09219389408826828, 0.10091137140989304, 0.1002509593963623, 0.1010434553027153, 0.1022322028875351, 0.09628847241401672, 0.09985470771789551, 0.1014397069811821], "val_loss": [1.9790877614702498, 2.0122336660112654, 2.0892516544886996, 2.225515569959368, 2.4366983686174666, 2.734128543308803, 3.1231155395507812, 3.6036060878208707, 4.171965599060059], "val_accuracy": [0.07999999821186066, 0.0963333323597908, 0.09933333098888397, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 4, 2, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 0, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 0, 1, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 3, 0], [32, 24, 83, 3, 91, 78], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [5, 3], [], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [31, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 31, 31, 23, 8, 6, 13, 13, 7, 6, 4, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.pow(tf.math.add(alpha, tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), grad))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)))))), tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, grad))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.pow(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))))), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3010423876873616, 2.302727114113488, 2.3007645732958744, 2.302243149653717, 2.3027815373503473, 2.3027529046047697], "accuracy": [0.09245806187391281, 0.08598599582910538, 0.09166556596755981, 0.09708096832036972, 0.08730682730674744, 0.09100515395402908], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 6, 5, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 6, 2, 6, 6, 0, 1, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 2, 1, 0, 2, 1, 3, 0, 0], [87, 33, 83, 0, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [1, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 6, 6, 4, 2, 0, 13, 13, 7, 6, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.add(beta, tf.math.negative(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))))), beta))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3010423876873616, 2.302727114113488, 2.3007645732958744, 2.302243149653717, 2.3027815373503473, 2.3027529046047697], "accuracy": [0.09245806187391281, 0.08598599582910538, 0.09166556596755981, 0.09708096832036972, 0.08730682730674744, 0.09100515395402908], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]