[{"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [2, 6, 9, 0, 0, 3, 4], [3, 0, 0, 3, 1, 0], [8, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.8082857131958008, "mapping_values": [1, 11, 11, 7, 4, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [1.995074706228103, 1.539910092314142, 1.3345295744108534, 1.0070146490176277, 0.8718743965200949, 0.7582692481570508, 0.6702452912039021, 0.6666536510833078, 0.6551950785855828, 0.6164550471457004, 0.6031048110510459, 0.5504184074846509, 0.5545412801307473, 0.547141275629785, 0.5048037877589515, 0.5021109186174879, 0.502717622802431, 0.4951982301979836, 0.45455320476462197, 0.46560955069257504, 0.46962913843256815, 0.4363165215305318, 0.43838900436720185, 0.4165843864749089, 0.38949414018185824, 0.4388450652561671, 0.40327370391152145, 0.3773998045619012, 0.4099137237547191, 0.3613092445064419, 0.39406806891069374, 0.36064002239441184, 0.3572813441189383, 0.35026635526193683, 0.35250786397561357, 0.35908886100228404, 0.3541210835258077, 0.3582369006344545, 0.3206090520692933, 0.3294868844414526, 0.32462903667104054, 0.3176058811746836, 0.3136910793685548, 0.2951158832730618, 0.3015905700898551, 0.29870967413251426, 0.30919620978078033, 0.27365438965065697], "accuracy": [0.31726324558258057, 0.4943864643573761, 0.5527671575546265, 0.6483951807022095, 0.6814159154891968, 0.71100252866745, 0.7504953145980835, 0.7440232634544373, 0.7466648817062378, 0.7658169269561768, 0.7695152759552002, 0.7938185334205627, 0.791441023349762, 0.7909126877784729, 0.8131026029586792, 0.8095363974571228, 0.8095363974571228, 0.8127063512802124, 0.834632158279419, 0.8249900937080383, 0.8232730031013489, 0.8404437899589539, 0.8335754871368408, 0.8428213000297546, 0.8576145768165588, 0.8396512866020203, 0.8498216867446899, 0.8644828796386719, 0.8444063067436218, 0.8646149635314941, 0.8527275323867798, 0.8685774803161621, 0.8667283058166504, 0.8728041052818298, 0.8692378997802734, 0.8632941246032715, 0.869502067565918, 0.8619733452796936, 0.8829745054244995, 0.8742570281028748, 0.8799365758895874, 0.8809932470321655, 0.8812574148178101, 0.8910315632820129, 0.8844274282455444, 0.8862766027450562, 0.8850878477096558, 0.8960506916046143], "val_loss": [1.719519819532122, 1.2462216785975866, 0.708024229322161, 0.6200151443481445, 0.590276803289141, 0.5328872714723859, 0.51702766759055, 0.5100413901465279, 0.4818389245441982, 0.4827531065259661, 0.45553483281816753, 0.49407403809683664, 0.4207874962261745, 0.43397778272628784, 0.40472687993730816, 0.4417396443230765, 0.3981363773345947, 0.39633429050445557, 0.39259728363582064, 0.43604949542454313, 0.37263249499457224, 0.41993813855307444, 0.3742950303213937, 0.36042063576834543, 0.37022832461765837, 0.40672238383974346, 0.3514787639890398, 0.4133669308253697, 0.34505813462393625, 0.3478190473147801, 0.3431261011532375, 0.35355340582983835, 0.3453172360147749, 0.38999747378485544, 0.37368169852665495, 0.33383433307920185, 0.3546252165521894, 0.3467229689870562, 0.3291153737476894, 0.3511266367776053, 0.3435740385736738, 0.34561775411878315, 0.32344065393720356, 0.3296582187925066, 0.31772078786577496, 0.3353417345455715, 0.31634373324257986, 0.3309597798756191], "val_accuracy": [0.3916666805744171, 0.437333345413208, 0.7096666693687439, 0.7066666483879089, 0.7353333234786987, 0.7713333368301392, 0.7770000100135803, 0.7720000147819519, 0.781000018119812, 0.7723333239555359, 0.796999990940094, 0.7749999761581421, 0.8213333487510681, 0.8166666626930237, 0.8263333439826965, 0.8023333549499512, 0.8349999785423279, 0.8320000171661377, 0.8323333263397217, 0.7983333468437195, 0.8476666808128357, 0.7979999780654907, 0.8493333458900452, 0.8519999980926514, 0.8450000286102295, 0.8203333616256714, 0.8539999723434448, 0.8206666707992554, 0.8556666374206543, 0.8600000143051147, 0.8610000014305115, 0.8486666679382324, 0.859333336353302, 0.828000009059906, 0.8446666598320007, 0.8619999885559082, 0.8479999899864197, 0.8553333282470703, 0.8693333268165588, 0.8533333539962769, 0.862666666507721, 0.8586666584014893, 0.8730000257492065, 0.8723333477973938, 0.8730000257492065, 0.8629999756813049, 0.8696666955947876, 0.8683333396911621]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1], [5, 4, 4, 0, 2, 3, 9, 9, 5], [3, 0, 0, 3, 1, 0], [8, 57, 18, 17], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.8082857131958008, "mapping_values": [1, 12, 12, 9, 3, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [1.995074706228103, 1.539910092314142, 1.3345295744108534, 1.0070146490176277, 0.8718743965200949, 0.7582692481570508, 0.6702452912039021, 0.6666536510833078, 0.6551950785855828, 0.6164550471457004, 0.6031048110510459, 0.5504184074846509, 0.5545412801307473, 0.547141275629785, 0.5048037877589515, 0.5021109186174879, 0.502717622802431, 0.4951982301979836, 0.45455320476462197, 0.46560955069257504, 0.46962913843256815, 0.4363165215305318, 0.43838900436720185, 0.4165843864749089, 0.38949414018185824, 0.4388450652561671, 0.40327370391152145, 0.3773998045619012, 0.4099137237547191, 0.3613092445064419, 0.39406806891069374, 0.36064002239441184, 0.3572813441189383, 0.35026635526193683, 0.35250786397561357, 0.35908886100228404, 0.3541210835258077, 0.3582369006344545, 0.3206090520692933, 0.3294868844414526, 0.32462903667104054, 0.3176058811746836, 0.3136910793685548, 0.2951158832730618, 0.3015905700898551, 0.29870967413251426, 0.30919620978078033, 0.27365438965065697], "accuracy": [0.31726324558258057, 0.4943864643573761, 0.5527671575546265, 0.6483951807022095, 0.6814159154891968, 0.71100252866745, 0.7504953145980835, 0.7440232634544373, 0.7466648817062378, 0.7658169269561768, 0.7695152759552002, 0.7938185334205627, 0.791441023349762, 0.7909126877784729, 0.8131026029586792, 0.8095363974571228, 0.8095363974571228, 0.8127063512802124, 0.834632158279419, 0.8249900937080383, 0.8232730031013489, 0.8404437899589539, 0.8335754871368408, 0.8428213000297546, 0.8576145768165588, 0.8396512866020203, 0.8498216867446899, 0.8644828796386719, 0.8444063067436218, 0.8646149635314941, 0.8527275323867798, 0.8685774803161621, 0.8667283058166504, 0.8728041052818298, 0.8692378997802734, 0.8632941246032715, 0.869502067565918, 0.8619733452796936, 0.8829745054244995, 0.8742570281028748, 0.8799365758895874, 0.8809932470321655, 0.8812574148178101, 0.8910315632820129, 0.8844274282455444, 0.8862766027450562, 0.8850878477096558, 0.8960506916046143], "val_loss": [1.719519819532122, 1.2462216785975866, 0.708024229322161, 0.6200151443481445, 0.590276803289141, 0.5328872714723859, 0.51702766759055, 0.5100413901465279, 0.4818389245441982, 0.4827531065259661, 0.45553483281816753, 0.49407403809683664, 0.4207874962261745, 0.43397778272628784, 0.40472687993730816, 0.4417396443230765, 0.3981363773345947, 0.39633429050445557, 0.39259728363582064, 0.43604949542454313, 0.37263249499457224, 0.41993813855307444, 0.3742950303213937, 0.36042063576834543, 0.37022832461765837, 0.40672238383974346, 0.3514787639890398, 0.4133669308253697, 0.34505813462393625, 0.3478190473147801, 0.3431261011532375, 0.35355340582983835, 0.3453172360147749, 0.38999747378485544, 0.37368169852665495, 0.33383433307920185, 0.3546252165521894, 0.3467229689870562, 0.3291153737476894, 0.3511266367776053, 0.3435740385736738, 0.34561775411878315, 0.32344065393720356, 0.3296582187925066, 0.31772078786577496, 0.3353417345455715, 0.31634373324257986, 0.3309597798756191], "val_accuracy": [0.3916666805744171, 0.437333345413208, 0.7096666693687439, 0.7066666483879089, 0.7353333234786987, 0.7713333368301392, 0.7770000100135803, 0.7720000147819519, 0.781000018119812, 0.7723333239555359, 0.796999990940094, 0.7749999761581421, 0.8213333487510681, 0.8166666626930237, 0.8263333439826965, 0.8023333549499512, 0.8349999785423279, 0.8320000171661377, 0.8323333263397217, 0.7983333468437195, 0.8476666808128357, 0.7979999780654907, 0.8493333458900452, 0.8519999980926514, 0.8450000286102295, 0.8203333616256714, 0.8539999723434448, 0.8206666707992554, 0.8556666374206543, 0.8600000143051147, 0.8610000014305115, 0.8486666679382324, 0.859333336353302, 0.828000009059906, 0.8446666598320007, 0.8619999885559082, 0.8479999899864197, 0.8553333282470703, 0.8693333268165588, 0.8533333539962769, 0.862666666507721, 0.8586666584014893, 0.8730000257492065, 0.8723333477973938, 0.8730000257492065, 0.8629999756813049, 0.8696666955947876, 0.8683333396911621]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [2, 6, 5, 0, 0, 2, 4], [3, 0, 0, 3, 1, 0], [8, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.8082857131958008, "mapping_values": [1, 10, 10, 6, 4, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [1.995074706228103, 1.539910092314142, 1.3345295744108534, 1.0070146490176277, 0.8718743965200949, 0.7582692481570508, 0.6702452912039021, 0.6666536510833078, 0.6551950785855828, 0.6164550471457004, 0.6031048110510459, 0.5504184074846509, 0.5545412801307473, 0.547141275629785, 0.5048037877589515, 0.5021109186174879, 0.502717622802431, 0.4951982301979836, 0.45455320476462197, 0.46560955069257504, 0.46962913843256815, 0.4363165215305318, 0.43838900436720185, 0.4165843864749089, 0.38949414018185824, 0.4388450652561671, 0.40327370391152145, 0.3773998045619012, 0.4099137237547191, 0.3613092445064419, 0.39406806891069374, 0.36064002239441184, 0.3572813441189383, 0.35026635526193683, 0.35250786397561357, 0.35908886100228404, 0.3541210835258077, 0.3582369006344545, 0.3206090520692933, 0.3294868844414526, 0.32462903667104054, 0.3176058811746836, 0.3136910793685548, 0.2951158832730618, 0.3015905700898551, 0.29870967413251426, 0.30919620978078033, 0.27365438965065697], "accuracy": [0.31726324558258057, 0.4943864643573761, 0.5527671575546265, 0.6483951807022095, 0.6814159154891968, 0.71100252866745, 0.7504953145980835, 0.7440232634544373, 0.7466648817062378, 0.7658169269561768, 0.7695152759552002, 0.7938185334205627, 0.791441023349762, 0.7909126877784729, 0.8131026029586792, 0.8095363974571228, 0.8095363974571228, 0.8127063512802124, 0.834632158279419, 0.8249900937080383, 0.8232730031013489, 0.8404437899589539, 0.8335754871368408, 0.8428213000297546, 0.8576145768165588, 0.8396512866020203, 0.8498216867446899, 0.8644828796386719, 0.8444063067436218, 0.8646149635314941, 0.8527275323867798, 0.8685774803161621, 0.8667283058166504, 0.8728041052818298, 0.8692378997802734, 0.8632941246032715, 0.869502067565918, 0.8619733452796936, 0.8829745054244995, 0.8742570281028748, 0.8799365758895874, 0.8809932470321655, 0.8812574148178101, 0.8910315632820129, 0.8844274282455444, 0.8862766027450562, 0.8850878477096558, 0.8960506916046143], "val_loss": [1.719519819532122, 1.2462216785975866, 0.708024229322161, 0.6200151443481445, 0.590276803289141, 0.5328872714723859, 0.51702766759055, 0.5100413901465279, 0.4818389245441982, 0.4827531065259661, 0.45553483281816753, 0.49407403809683664, 0.4207874962261745, 0.43397778272628784, 0.40472687993730816, 0.4417396443230765, 0.3981363773345947, 0.39633429050445557, 0.39259728363582064, 0.43604949542454313, 0.37263249499457224, 0.41993813855307444, 0.3742950303213937, 0.36042063576834543, 0.37022832461765837, 0.40672238383974346, 0.3514787639890398, 0.4133669308253697, 0.34505813462393625, 0.3478190473147801, 0.3431261011532375, 0.35355340582983835, 0.3453172360147749, 0.38999747378485544, 0.37368169852665495, 0.33383433307920185, 0.3546252165521894, 0.3467229689870562, 0.3291153737476894, 0.3511266367776053, 0.3435740385736738, 0.34561775411878315, 0.32344065393720356, 0.3296582187925066, 0.31772078786577496, 0.3353417345455715, 0.31634373324257986, 0.3309597798756191], "val_accuracy": [0.3916666805744171, 0.437333345413208, 0.7096666693687439, 0.7066666483879089, 0.7353333234786987, 0.7713333368301392, 0.7770000100135803, 0.7720000147819519, 0.781000018119812, 0.7723333239555359, 0.796999990940094, 0.7749999761581421, 0.8213333487510681, 0.8166666626930237, 0.8263333439826965, 0.8023333549499512, 0.8349999785423279, 0.8320000171661377, 0.8323333263397217, 0.7983333468437195, 0.8476666808128357, 0.7979999780654907, 0.8493333458900452, 0.8519999980926514, 0.8450000286102295, 0.8203333616256714, 0.8539999723434448, 0.8206666707992554, 0.8556666374206543, 0.8600000143051147, 0.8610000014305115, 0.8486666679382324, 0.859333336353302, 0.828000009059906, 0.8446666598320007, 0.8619999885559082, 0.8479999899864197, 0.8553333282470703, 0.8693333268165588, 0.8533333539962769, 0.862666666507721, 0.8586666584014893, 0.8730000257492065, 0.8723333477973938, 0.8730000257492065, 0.8629999756813049, 0.8696666955947876, 0.8683333396911621]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 6, 1, 0], [0, 0, 0, 3, 1, 0], [8, 30, 3], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 0, 1, 3, 2], [82, 15, 50, 41, 34]], "fitness": -0.5674285888671875, "mapping_values": [1, 10, 10, 5, 5, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 5, 1, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.math.negative(grad), tf.math.add(alpha, alpha))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.301956931975665, 2.299905991336972, 2.2970238621555157, 2.294046089271623, 2.294124856301901, 2.290726706651318, 2.2898514744407543, 2.286880294613126, 2.286386725987898, 2.2834595654540135, 2.2830012682926197, 2.2794288566099605, 2.279591273165587, 2.2768438499459753, 2.2740174270718563, 2.2718414795822266, 2.2716524137434724, 2.2671187071673637, 2.2657262867058523, 2.2635980899134616, 2.262852460008177, 2.260252668998969, 2.257332853527117, 2.2563112590448684, 2.254142759403989, 2.2515957515788605, 2.2475452613616427, 2.2465712729068463, 2.244143840108077, 2.243368050614683, 2.2394884164543387, 2.2354661574090997, 2.2355797612955226, 2.2326973620470034, 2.231059786382526, 2.227083494004761, 2.2236096560128407, 2.2215297860145693, 2.2184550116610424, 2.2148875042022635, 2.213323430142083, 2.212103478739432, 2.20632988029483, 2.205894217058463, 2.201901963043364, 2.1967464573489455, 2.1937414631473864, 2.1904974910230717, 2.185263046294376, 2.1842467775119374, 2.1789139516286533, 2.1756316222660828, 2.171814637901509, 2.1670873417373757, 2.16270652662541, 2.1601172373074706, 2.156017218346546, 2.1505021483056406, 2.1461453215793425, 2.1413863579421673, 2.1366489224540337, 2.1307275073560725, 2.127180333906523, 2.122290268361277, 2.1162919429440965, 2.1102445005913926, 2.104867266878051, 2.0969737851152077, 2.093970916306165, 2.088817256332436, 2.081720561651175, 2.080382189084951, 2.07274814191165, 2.0670690024769804, 2.057705186597738, 2.050502477273524, 2.0435811445429937, 2.037250322326299, 2.033149264255897, 2.0251859686456855, 2.012542453062234, 2.0075777637456245, 2.001473992303252, 1.9933204207642676, 1.983172348225515, 1.9744715823504935, 1.9677526960126035, 1.9626706328610577, 1.9551557900804524, 1.9438931486153441, 1.9367834678840612, 1.926042619162169, 1.9189227626087833, 1.9120051402299947, 1.9039877831046261, 1.8878843575546755, 1.8838786928330304, 1.873245525621483, 1.8667296231021309, 1.8538461203241958], "accuracy": [0.09034473448991776, 0.0944393053650856, 0.09972262382507324, 0.1138555034995079, 0.11332716792821884, 0.11781799048185349, 0.12521463632583618, 0.1262712925672531, 0.1294412910938263, 0.146479994058609, 0.1402720957994461, 0.14463083446025848, 0.149649977684021, 0.15295206010341644, 0.16061286628246307, 0.16536785662174225, 0.1682736724615097, 0.18702945113182068, 0.1846519559621811, 0.1872936189174652, 0.2001056671142578, 0.20116232335567474, 0.2102760523557663, 0.21054022014141083, 0.21463479101657867, 0.21925769746303558, 0.22876766324043274, 0.23154141008853912, 0.23814556002616882, 0.24065512418746948, 0.2513538599014282, 0.2526746690273285, 0.25320300459861755, 0.261260062456131, 0.251750111579895, 0.26641130447387695, 0.2724871337413788, 0.27816668152809143, 0.2806762754917145, 0.2817329168319702, 0.2849029302597046, 0.28160083293914795, 0.29718664288520813, 0.29679039120674133, 0.3059041202068329, 0.30722492933273315, 0.31158366799354553, 0.3197728097438812, 0.32439571619033813, 0.3187161684036255, 0.3283582031726837, 0.33020737767219543, 0.3337736129760742, 0.3411702513694763, 0.34420815110206604, 0.3455289900302887, 0.3447364866733551, 0.349359393119812, 0.35662394762039185, 0.35768061876296997, 0.363360196352005, 0.35820895433425903, 0.3629639446735382, 0.3591335415840149, 0.3693039119243622, 0.37405890226364136, 0.3671905994415283, 0.3770968019962311, 0.381719708442688, 0.38053098320961, 0.3909655213356018, 0.38449347019195557, 0.3897767663002014, 0.38845595717430115, 0.3963809311389923, 0.4017963409423828, 0.3979659080505371, 0.4015321731567383, 0.4017963409423828, 0.40985339879989624, 0.4095892310142517, 0.4123629629611969, 0.413419634103775, 0.41526877880096436, 0.42068418860435486, 0.4266279339790344, 0.42491084337234497, 0.42491084337234497, 0.4267600178718567, 0.4283449947834015, 0.4361378848552704, 0.43349623680114746, 0.43666622042655945, 0.43864747881889343, 0.4325716495513916, 0.4333641529083252, 0.44366663694381714, 0.4504028558731079, 0.4419495463371277, 0.44644036889076233], "val_loss": [1.9687231608799525, 1.9668549128941126, 1.964988844735282, 1.963155950818743, 1.9613262585231237, 1.9594991547720773, 1.9576600619724818, 1.9558170182364327, 1.9539809226989746, 1.9521589279174805, 1.9503464698791504, 1.9485009738377161, 1.9466582706996374, 1.9448002406529017, 1.9429292678833008, 1.9410480771745955, 1.9391441345214844, 1.9372052465166365, 1.9352645874023438, 1.933300154549735, 1.9313116073608398, 1.9292960848127092, 1.9272451400756836, 1.9251794133867537, 1.9230803762163435, 1.92095947265625, 1.9187966074262346, 1.916595118386405, 1.9143614768981934, 1.912095069885254, 1.9097755295889718, 1.907416684286935, 1.9050318854195731, 1.9026012420654297, 1.9001058850969588, 1.8975399562290736, 1.8949265480041504, 1.8922886848449707, 1.8895647185189384, 1.8867900712149483, 1.8839675358363561, 1.8811280386788505, 1.8781724657331194, 1.8751850128173828, 1.8720855712890625, 1.8689135823931013, 1.865694318498884, 1.862372875213623, 1.8589377403259277, 1.8554686137608118, 1.85187714440482, 1.848200866154262, 1.8444218635559082, 1.8405888421194894, 1.8366139275687081, 1.8325489589146204, 1.8284312656947546, 1.8241706575666154, 1.8198329380580358, 1.8153845242091589, 1.8108604976109095, 1.8061746188572474, 1.8014208929879325, 1.7965137617928642, 1.791492530277797, 1.7863262040274483, 1.7810517719813757, 1.7756492750985282, 1.7701445307050432, 1.7645213263375419, 1.7587979861668177, 1.7529914719717843, 1.7470171110970634, 1.7409334182739258, 1.7346806526184082, 1.7282486643110002, 1.7217049598693848, 1.7150207928248815, 1.7082667350769043, 1.7013915266309465, 1.6942496640341622, 1.6870177473340715, 1.6796902929033553, 1.6722415855952673, 1.6645936625344413, 1.6567428452628, 1.6488168580191476, 1.6408516338893346, 1.6327382155827113, 1.6244986397879464, 1.616142920085362, 1.6075571945735387, 1.5989174161638533, 1.5902423177446638, 1.5814389501299178, 1.572399275643485, 1.5633515971047538, 1.5541646480560303, 1.5449771199907576, 1.5356504576546806], "val_accuracy": [0.050333332270383835, 0.06233333423733711, 0.07566666603088379, 0.09233333170413971, 0.11299999803304672, 0.12933333218097687, 0.14666666090488434, 0.16699999570846558, 0.18700000643730164, 0.20633333921432495, 0.22066666185855865, 0.23399999737739563, 0.24699999392032623, 0.26466667652130127, 0.27900001406669617, 0.2953333258628845, 0.3070000112056732, 0.3190000057220459, 0.3269999921321869, 0.33766666054725647, 0.34833332896232605, 0.35466668009757996, 0.3619999885559082, 0.36500000953674316, 0.3686666786670685, 0.37566667795181274, 0.3813333213329315, 0.38333332538604736, 0.3863333463668823, 0.39233332872390747, 0.3956666588783264, 0.39933332800865173, 0.4026666581630707, 0.40666666626930237, 0.4099999964237213, 0.4143333435058594, 0.41733333468437195, 0.42100000381469727, 0.4259999990463257, 0.4286666810512543, 0.4320000112056732, 0.43533334136009216, 0.437333345413208, 0.4416666626930237, 0.4440000057220459, 0.44600000977516174, 0.44999998807907104, 0.45366665720939636, 0.4569999873638153, 0.4583333432674408, 0.4620000123977661, 0.46700000762939453, 0.46966665983200073, 0.47066667675971985, 0.47466665506362915, 0.47699999809265137, 0.4793333411216736, 0.4833333194255829, 0.4856666624546051, 0.48766666650772095, 0.49033331871032715, 0.49166667461395264, 0.49533334374427795, 0.49799999594688416, 0.5, 0.5026666522026062, 0.5073333382606506, 0.5103333592414856, 0.512666642665863, 0.515999972820282, 0.5193333625793457, 0.5206666588783264, 0.5249999761581421, 0.527999997138977, 0.5299999713897705, 0.531000018119812, 0.5346666574478149, 0.5353333353996277, 0.5376666784286499, 0.5396666526794434, 0.5423333048820496, 0.5423333048820496, 0.543666660785675, 0.5440000295639038, 0.5460000038146973, 0.5483333468437195, 0.5506666898727417, 0.5519999861717224, 0.5546666383743286, 0.5550000071525574, 0.5563333630561829, 0.5569999814033508, 0.5586666464805603, 0.5600000023841858, 0.5600000023841858, 0.5603333115577698, 0.5630000233650208, 0.5633333325386047, 0.5633333325386047, 0.5669999718666077]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 0, 0], [0, 0, 0, 3, 1, 0], [8, 57, 3], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 2, 9, 3, 9], [3, 1, 0, 1, 3, 2], [82, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07634394615888596, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 0, 0], [0, 0, 0, 3, 1, 0], [61, 57, 3], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [3, 3, 9, 3, 2], [3, 1, 0, 1, 3, 2], [82, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07634394615888596, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [2, 6, 9, 0, 0, 8, 6], [0, 0, 0, 3, 1, 0], [8, 57, 3, 8], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0, 0], [0, 0, 1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 1, 0, 1, 3, 2], [82, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 7, 3, 4, 1, 1, 0, 1, 0, 6, 5, 3, 2, 0, 6, 4, 2, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, sigma))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [609294.2980971779, 2.302577322437275, 2.3025870671157023, 2.302575230488231, 2.3025870546767457, 2.3025757438234917], "accuracy": [0.09602430462837219, 0.10460969805717468, 0.09959053993225098, 0.09945846349000931, 0.09906221181154251, 0.10170386731624603], "val_loss": [1.973642213003976, 1.9736419405255998, 1.9736441203526087, 1.9736435753958566, 1.9736436435154505, 1.9736428941999162], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [2, 6, 9, 0, 0, 0, 7], [0, 0, 0, 3, 1, 0], [29, 30, 3, 71], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0], [0, 3, 3, 3, 9, 9], [0, 1, 0, 1, 3, 2], [82, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 7, 3, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 8, 5, 3, 3], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [4737.238872647994, 43471.311825138684, 140776.4626102067, 324166.03508866066, 614869.952466649, 1054237.1667712324], "accuracy": [0.09681680053472519, 0.10249637067317963, 0.10077928751707077, 0.10672302544116974, 0.09853387624025345, 0.09681680053472519], "val_loss": [11360.20814732143, 54749.45982142857, 144254.92410714287, 296781.625, 529563.5892857143, 859783.6607142857], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 0, 0], [0, 1, 0, 3, 1, 0], [8, 57, 3], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 1, 0, 1, 3, 2], [82, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [65695344.36259477, 1267642325.5643904, 5846383025.891428, 16336373516.003698, 34735726034.21688, 64294554737.47722], "accuracy": [0.09655263274908066, 0.10210011899471283, 0.10077928751707077, 0.10685510188341141, 0.09853387624025345, 0.09668471664190292], "val_loss": [251231195.42857143, 2008250294.857143, 6776023917.714286, 16059531264.0, 31363877156.57143, 54193456274.28571], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 0, 0], [2, 0, 0, 3, 1, 0], [82, 57, 3], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 8], [3, 1, 0, 1, 3, 2], [82, 71, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07634394615888596, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [2, 6, 9, 0, 0, 1, 5], [0, 0, 0, 3, 1, 0], [8, 57, 3, 68], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [8, 3, 9, 3, 9], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 7, 3, 4, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(sigma, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 0, 0], [0, 0, 0, 3, 1, 0], [8, 30, 3], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [1, 3], [], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0], [0, 3, 9, 3, 6, 0], [3, 3, 0, 1, 3, 2], [82, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [5.173142985015293, 149.7785968873731, 1801.403707951445, 11930.056251599442, 50369.13274336283, 165226.00420188878], "accuracy": [0.09311848133802414, 0.10302469879388809, 0.10051512718200684, 0.10659094154834747, 0.09840179979801178, 0.09668471664190292], "val_loss": [17.13158198765346, 360.9875749860491, 3254.8611886160716, 16968.600446428572, 62427.29241071428, 182472.6205357143], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 0, 0, 3, 4], [3, 0, 0, 3, 1, 0], [8, 57, 18], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 3, 9, 3, 6, 1, 1, 4, 2, 0], [3, 1, 0, 1, 3, 2], [82, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 10, 6, 4, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(sigma, alpha), tf.math.subtract(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [2, 6, 9, 2, 0, 4, 3], [3, 0, 0, 3, 0, 0], [8, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [26, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.302769796770514, 2.3026955954985393, 2.301841416993177, 2.3006961281430907, 2.302769111746165, 2.3012776327265443], "accuracy": [0.08955223858356476, 0.09021265059709549, 0.08770307898521423, 0.09721305221319199, 0.09417514503002167, 0.09087307006120682], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 1, 0], [0, 0, 0, 3, 1, 0], [8, 30, 3], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 5], [3, 1, 0, 1, 3, 2], [82, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 5, 5, 3, 2, 3, 1, 1, 0, 1, 0, 6, 4, 3, 1, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.302769796770514, 2.3026955954985393, 2.301841416993177, 2.3006961281430907, 2.302769111746165, 2.3012776327265443], "accuracy": [0.08955223858356476, 0.09021265059709549, 0.08770307898521423, 0.09721305221319199, 0.09417514503002167, 0.09087307006120682], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [9, 6, 9, 0, 0], [0, 0, 0, 3, 1, 0], [8, 57, 3], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0, 0], [0, 0, 1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 8], [3, 1, 0, 1, 3, 2], [37, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 6, 5, 3, 2, 0, 7, 5, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, sigma))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(sigma), alpha)))", "other_info": {"loss": [2.302769796770514, 2.3026955954985393, 2.301841416993177, 2.3006961281430907, 2.302769111746165, 2.3012776327265443], "accuracy": [0.08955223858356476, 0.09021265059709549, 0.08770307898521423, 0.09721305221319199, 0.09417514503002167, 0.09087307006120682], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 0, 0], [0, 0, 0, 3, 1, 0], [43, 57, 3], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 0, 1, 3, 2], [83, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 5, 1, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.302769796770514, 2.3026955954985393, 2.301841416993177, 2.3006961281430907, 2.302769111746165, 2.3012776327265443], "accuracy": [0.08955223858356476, 0.09021265059709549, 0.08770307898521423, 0.09721305221319199, 0.09417514503002167, 0.09087307006120682], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 0, 0], [0, 0, 0, 3, 1, 0], [8, 57, 3], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 0, 1, 3, 2], [82, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 4, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.multiply(sigma, alpha)))", "other_info": {"loss": [2.302769796770514, 2.3026955954985393, 2.301841416993177, 2.3006961281430907, 2.302769111746165, 2.3012776327265443], "accuracy": [0.08955223858356476, 0.09021265059709549, 0.08770307898521423, 0.09721305221319199, 0.09417514503002167, 0.09087307006120682], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 0, 0], [0, 0, 0, 3, 1, 0], [8, 57, 3, 26], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0], [0, 3, 3, 3, 9, 9], [3, 1, 0, 1, 3, 2], [82, 47, 50, 41, 34]], "fitness": -0.036571428179740906, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 8, 6, 2, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(sigma, tf.math.multiply(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), alpha)), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3029838560941025, 2.3043277679952756, 2.3064522408160553, 2.309597183228043, 2.317924829947084, 2.3245752194396667], "accuracy": [0.0886276587843895, 0.08598599582910538, 0.07700435817241669, 0.07806102186441422, 0.06524897366762161, 0.05005943775177002], "val_loss": [1.9713599341256278, 1.9735251835414342, 1.9771302086966378, 1.982161590031215, 1.9889373098100935, 1.9977105685642786], "val_accuracy": [0.03700000047683716, 0.027000000700354576, 0.018333332613110542, 0.011666666716337204, 0.00800000037997961, 0.006000000052154064]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 0, 0, 3, 4], [0, 0, 0, 3, 1, 0], [8, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.03628571331501007, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.multiply(sigma, alpha)))", "other_info": {"loss": [2.3030401663993723, 2.304758729778497, 2.307681964451784, 2.3120081456833983, 2.3221685633825007, 2.331417779691971], "accuracy": [0.08849557489156723, 0.08545766770839691, 0.07515519857406616, 0.07396645098924637, 0.06036190688610077, 0.041606128215789795], "val_loss": [1.971562044961112, 1.9743001120431083, 1.9788831302097865, 1.9853225435529436, 1.9941154888698034, 2.00580746786935], "val_accuracy": [0.035999998450279236, 0.026333333924412727, 0.015333333052694798, 0.009666666388511658, 0.0063333334401249886, 0.0063333334401249886]}}]