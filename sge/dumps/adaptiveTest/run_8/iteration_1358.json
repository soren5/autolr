[{"genotype": [[0], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [7, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [3, 1, 0, 8, 4, 2, 9, 2, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [2, 4, 0, 3, 1, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [1, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0], [2, 3, 0, 0], [4, 0], [38], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 3, 3, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 9, 45, 71, 34, 14, 2]], "fitness": -0.8142856955528259, "mapping_values": [1, 3, 3, 1, 2, 0, 11, 11, 7, 4, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.sqrt(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.099182367324829, 2.0734567642211914, 1.8145430088043213, 1.9113649129867554, 1.5056440830230713, 0.9966586232185364, 0.8130916357040405, 0.7313801050186157, 0.6830530166625977, 0.6937940120697021, 0.6073359847068787, 0.6230794191360474, 0.5866994261741638, 0.5618866682052612, 0.5671494007110596, 0.5249770879745483, 0.519615650177002, 0.5080894827842712, 0.5002308487892151, 0.5119421482086182, 0.4790353775024414, 0.47824719548225403, 0.4642243981361389, 0.4743371903896332, 0.449551522731781, 0.4540882706642151, 0.465691477060318, 0.43591800332069397, 0.4232107996940613], "accuracy": [0.30458328127861023, 0.3271694481372833, 0.3485668897628784, 0.35424646735191345, 0.5148593187332153, 0.6230352520942688, 0.6959450244903564, 0.7211728692054749, 0.7395324110984802, 0.7331924438476562, 0.7689869403839111, 0.7606657147407532, 0.7791573405265808, 0.7873464822769165, 0.78113853931427, 0.8083476424217224, 0.8005547523498535, 0.8099326491355896, 0.8144234418869019, 0.805177628993988, 0.819970965385437, 0.8265751004219055, 0.8260467648506165, 0.8235371708869934, 0.833179235458374, 0.8362171649932861, 0.8231409192085266, 0.8367455005645752, 0.8411042094230652], "val_loss": [2.0104715824127197, 1.8534038066864014, 1.6021095514297485, 1.8796449899673462, 1.1034660339355469, 0.7905609607696533, 0.6701996922492981, 0.6150582432746887, 0.6042363047599792, 0.5622909069061279, 0.5862117409706116, 0.5077229738235474, 0.5010058283805847, 0.5423715114593506, 0.47137197852134705, 0.4659992754459381, 0.4704540967941284, 0.4872395098209381, 0.4783596694469452, 0.4414176344871521, 0.43358784914016724, 0.4234517514705658, 0.4336083233356476, 0.4095131754875183, 0.44339510798454285, 0.45600074529647827, 0.4388490319252014, 0.4169502258300781, 0.43316295742988586], "val_accuracy": [0.43700000643730164, 0.23266667127609253, 0.3736666738986969, 0.5416666865348816, 0.6256666779518127, 0.7269999980926514, 0.7443333268165588, 0.765666663646698, 0.7486666440963745, 0.7720000147819519, 0.7606666684150696, 0.8009999990463257, 0.8103333115577698, 0.7643333077430725, 0.8286666870117188, 0.82833331823349, 0.8383333086967468, 0.815666675567627, 0.8023333549499512, 0.8349999785423279, 0.8450000286102295, 0.8426666855812073, 0.8346666693687439, 0.8463333249092102, 0.8256666660308838, 0.8236666917800903, 0.8339999914169312, 0.8450000286102295, 0.8456666469573975]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [3, 0, 0, 8, 4, 2, 9, 2, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [2, 4, 0, 3, 1, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [1, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0], [2, 3, 0, 0], [4, 0], [38], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 3, 3, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 9, 45, 71, 34, 14, 2]], "fitness": -0.8042857050895691, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.099191665649414, 2.0710482597351074, 1.8767743110656738, 1.7695095539093018, 1.3065866231918335, 0.9529790878295898, 0.836722731590271, 0.7817912101745605, 0.7007014155387878, 0.7044012546539307, 0.6603056192398071, 0.6273084282875061, 0.6040216684341431, 0.6165633201599121, 0.5776411294937134, 0.5761433839797974, 0.5310098528862, 0.5458711981773376, 0.5240432620048523, 0.5037975907325745, 0.5130285620689392, 0.48854386806488037, 0.4817318320274353, 0.4897631108760834, 0.4573713541030884, 0.4567677080631256], "accuracy": [0.3047153651714325, 0.3287544548511505, 0.3331131935119629, 0.37670058012008667, 0.5254259705543518, 0.6399418711662292, 0.6905296444892883, 0.6934354901313782, 0.737947404384613, 0.7224937081336975, 0.7490423917770386, 0.7540615797042847, 0.767401933670044, 0.7684586048126221, 0.7812706232070923, 0.7784969210624695, 0.8017435073852539, 0.7960638999938965, 0.8020076751708984, 0.8072909712791443, 0.8038568496704102, 0.8204993009567261, 0.8190463781356812, 0.8169330358505249, 0.82683926820755, 0.8327829837799072], "val_loss": [2.0101239681243896, 1.861795425415039, 1.9726369380950928, 1.3922369480133057, 0.9447716474533081, 0.7272170186042786, 0.695409893989563, 0.6131995320320129, 0.6041761040687561, 0.5851304531097412, 0.5526192784309387, 0.5406041145324707, 0.5118377804756165, 0.5180957317352295, 0.5643147826194763, 0.5075907111167908, 0.48964419960975647, 0.47754645347595215, 0.4640326201915741, 0.4541633725166321, 0.433054655790329, 0.427958607673645, 0.4328159987926483, 0.4323992133140564, 0.41239282488822937, 0.4464676082134247], "val_accuracy": [0.43566668033599854, 0.22866666316986084, 0.32466667890548706, 0.5260000228881836, 0.6946666836738586, 0.7316666841506958, 0.7056666612625122, 0.7580000162124634, 0.7599999904632568, 0.7760000228881836, 0.777999997138977, 0.7803333401679993, 0.8016666769981384, 0.7993333339691162, 0.7696666717529297, 0.8096666932106018, 0.8270000219345093, 0.8103333115577698, 0.8209999799728394, 0.8316666483879089, 0.8443333506584167, 0.8360000252723694, 0.8416666388511658, 0.8386666774749756, 0.8426666855812073, 0.8316666483879089]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [7, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [3, 9, 0, 8, 4, 2, 3, 2, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [2, 4, 0, 3, 1, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [1, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0], [2, 3, 0, 0], [4, 0], [38], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 3, 3, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 9, 45, 71, 34, 14, 2]], "fitness": -0.7885714173316956, "mapping_values": [1, 3, 3, 1, 2, 0, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.260068416595459, 1.9450981616973877, 1.5505626201629639, 1.3649336099624634, 1.04878830909729, 0.8887766003608704, 0.8812373280525208, 0.7660682797431946, 0.7309901118278503, 0.707057535648346, 0.6512466669082642, 0.6675747632980347, 0.6368836164474487, 0.6054799556732178, 0.6146554946899414, 0.5703214406967163], "accuracy": [0.29322415590286255, 0.3621714413166046, 0.47470611333847046, 0.5340113639831543, 0.6267336010932922, 0.6668868064880371, 0.657508909702301, 0.7083608508110046, 0.7238145470619202, 0.7357020378112793, 0.7536653280258179, 0.7404569983482361, 0.7516840696334839, 0.7688548564910889, 0.7597411274909973, 0.783119797706604], "val_loss": [1.3569039106369019, 1.7207067012786865, 1.6497811079025269, 0.9578692317008972, 0.7192451357841492, 0.8398212194442749, 0.7182124257087708, 0.6811878085136414, 0.7094539999961853, 0.5598069429397583, 0.5447579622268677, 0.6066768169403076, 0.5764855146408081, 0.604705810546875, 0.5077158212661743, 0.5257551074028015], "val_accuracy": [0.5663333535194397, 0.4466666579246521, 0.4736666679382324, 0.6803333163261414, 0.7170000076293945, 0.652999997138977, 0.715666651725769, 0.7326666712760925, 0.7306666374206543, 0.8040000200271606, 0.809333324432373, 0.7590000033378601, 0.7799999713897705, 0.7586666941642761, 0.7990000247955322, 0.7910000085830688]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [3, 0, 0, 8, 4, 2, 9, 2, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [2, 4, 0, 3, 1, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [1, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0], [2, 3, 0, 0], [4, 0], [38], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 3, 3, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 9, 45, 71, 34, 14, 2]], "fitness": -0.7494285702705383, "mapping_values": [1, 4, 4, 2, 2, 1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 11, 6, 5, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(beta, tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.subtract(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.add(tf.math.add(sigma, beta), tf.math.square(beta)))", "other_info": {"loss": [2.005892753601074, 1.8030121326446533, 1.469045877456665, 1.448655605316162, 0.9645529389381409, 0.8154747486114502, 0.7520895004272461, 0.7061774134635925, 0.6948893666267395, 0.6364326477050781, 0.6306689381599426, 0.6067049503326416, 0.579419732093811, 0.6019682884216309, 0.5810881853103638, 0.5499154925346375, 0.5830846428871155], "accuracy": [0.3155461549758911, 0.4091929793357849, 0.5091797709465027, 0.49768856167793274, 0.6489235162734985, 0.6922467350959778, 0.7160216569900513, 0.7384757399559021, 0.7450799345970154, 0.7675340175628662, 0.7650244235992432, 0.7717606425285339, 0.7852331399917603, 0.7680623531341553, 0.7775723338127136, 0.7989697456359863, 0.7935543656349182], "val_loss": [2.1840038299560547, 1.3691458702087402, 1.4345368146896362, 0.8604482412338257, 0.6993920803070068, 0.7086028456687927, 0.5830590128898621, 0.6643372178077698, 0.6434098482131958, 0.6084111332893372, 0.5758920907974243, 0.529348611831665, 0.5487511157989502, 0.5112012624740601, 0.500167965888977, 0.5614569783210754, 0.5766886472702026], "val_accuracy": [0.19599999487400055, 0.5286666750907898, 0.492333322763443, 0.6743333339691162, 0.7310000061988831, 0.7236666679382324, 0.777999997138977, 0.753000020980835, 0.7593333125114441, 0.7543333172798157, 0.7649999856948853, 0.8059999942779541, 0.7796666622161865, 0.7926666736602783, 0.79666668176651, 0.7823333144187927, 0.7929999828338623]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [6, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 2, 3, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [91, 37, 51, 41, 8, 79, 86, 52, 44], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [3, 9, 0, 8, 4, 2, 3, 2, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [3, 4, 0, 3, 1, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [34, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0], [2, 3, 0, 0], [0, 0], [38], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 1, 4, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 0, 3, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 9, 45, 71, 34, 14, 2]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 13, 13, 9, 4, 3, 1, 1, 0, 1, 1, 1, 0, 1, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.multiply(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), grad)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.30237078666687, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [6, 8, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [3, 9, 0, 8, 4, 2, 3, 2, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [4, 4, 0, 3, 1, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [1, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0], [2, 3, 0, 0], [7, 0], [38], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [9, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 3, 3, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 9, 45, 71, 34, 14, 2]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.30237078666687, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [6, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [91, 37, 51, 41, 8, 79, 86, 52, 44], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [3, 9, 0, 8, 4, 2, 3, 2, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [2, 4, 0, 3, 1, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [1, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0], [2, 3, 0, 0], [0, 0], [38], [1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 1, 3, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [39, 9, 45, 71, 34, 14, 2]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.30237078666687, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 3, 3, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 8, 0, 8, 4, 2, 3, 2, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [2, 3, 0, 3, 1, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [1, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 0, 1, 0, 1, 1], [0, 1, 1, 0], [2, 3, 0, 0], [3, 0], [38], [1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 3, 3, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [65, 9, 45, 71, 34, 14, 2]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 2, 2, 1, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, sigma), tf.math.add(sigma, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [53006909440.0, 1.879075378304606e+22, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.10408136248588562, 0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [7, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 0, 8, 4, 2, 9, 2, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [2, 4, 0, 3, 1, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [1, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0], [2, 3, 0, 0], [4, 0], [38], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [4, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 3, 3, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 9, 45, 71, 34, 14, 2]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(beta, tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.30237078666687, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [3, 9, 0, 8, 4, 2, 3, 2, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [4, 4, 0, 3, 1, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [1, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 0, 1, 0, 1, 1], [0, 1, 1, 0], [2, 3, 0, 0], [4, 0], [38], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [4, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 3, 3, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 9, 45, 71, 34, 14, 2]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 4, 4, 3, 1, 1, 3, 3, 1, 2, 1, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.549592971801758, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09338264167308807, 0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1073.5250244140625, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [3, 9, 0, 8, 4, 2, 3, 2, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [5, 4, 0, 3, 1, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [1, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0], [2, 3, 0, 0], [4, 0], [38], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 3, 3, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 9, 45, 71, 34, 14, 2]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.30237078666687, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 0, 3, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [26, 37, 51, 41, 8, 79, 86, 52, 44], [1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 9, 0, 8, 4, 2, 3, 2, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [4, 4, 0, 3, 1, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [34, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 0, 1, 0, 1, 1], [1, 1, 0, 0], [2, 3, 0, 0], [0, 0], [38, 98], [1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 3, 3, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 9, 45, 71, 34, 14, 2]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, grad), tf.math.subtract(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.30237078666687, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [6, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [3, 9, 4, 8, 4, 2, 3, 2, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [2, 4, 0, 3, 1, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [1, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 0, 1, 0, 1, 1], [0, 1, 1, 0], [2, 3, 0, 0], [2, 0], [38], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 7, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 3, 3, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 9, 45, 71, 34, 14, 2]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 2, 1, 1, 3, 3, 1, 2, 1, 2, 1, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [95527680.0, 1846118400.0, 8453425152.0, 23484342272.0, 50584047616.0, 92729081856.0], "accuracy": [0.10038304328918457, 0.10328886657953262, 0.1018359512090683, 0.09721305221319199, 0.1010434553027153, 0.10289261490106583], "val_loss": [411437984.0, 3289170432.0, 11098312704.0, 26304096256.0, 51371274240.0, 88765382656.0], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 6, 0, 8, 4, 2, 3, 2, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [5, 4, 0, 3, 1, 0, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [1, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0], [2, 3, 0, 0], [4, 0], [38], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [2, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 3, 3, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 9, 45, 71, 34, 14, 2]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 15, 15, 8, 7, 2, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(grad)), tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.math.add(grad, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))))), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.30237078666687, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [7, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [3, 9, 0, 8, 4, 2, 3, 2, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [2, 4, 0, 3, 1, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [1, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0], [2, 3, 0, 0], [4, 0], [38], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 3, 3, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 9, 45, 71, 34, 14, 2]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.30237078666687, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [7, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [3, 0, 0, 1, 4, 1, 9, 2, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [3, 4, 0, 3, 1, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [34, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0], [2, 3, 0, 0], [4, 0], [38], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [3, 0, 1, 2, 7, 2, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6, 6, 0, 0, 1, 8, 3, 2, 7, 5], [0, 3, 1, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 9, 45, 71, 34, 14, 2]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 13, 13, 8, 5, 2, 1, 1, 0, 1, 0, 42, 25, 17, 6], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.subtract(tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.math.subtract(grad, tf.math.add(beta, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), tf.math.add(grad, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.math.add(tf.math.add(alpha, beta), tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.add(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.divide_no_nan(tf.math.divide_no_nan(sigma, beta), tf.math.negative(beta))))))), tf.math.negative(tf.math.subtract(tf.math.sqrt(tf.math.multiply(tf.math.add(tf.math.add(tf.math.square(sigma), sigma), beta), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), sigma)))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [7, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [3, 9, 0, 8, 4, 2, 3, 2, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [3, 4, 0, 3, 1, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [1, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 0, 1, 0, 1, 1], [0, 1, 1, 0], [2, 3, 0, 0], [4, 0], [38], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 3, 3, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 9, 45, 71, 34, 14, 2]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 4, 4, 3, 1, 1, 3, 3, 1, 2, 1, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [9445099700224.0, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08426892012357712, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 7, 0, 8, 4, 2, 3, 2, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [2, 3, 0, 3, 1, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [1, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0], [2, 3, 0, 0], [4, 1], [38], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [9, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 3, 3, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 9, 45, 71, 34, 14, 2]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 14, 14, 8, 6, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, alpha), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta))), tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.math.add(grad, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha)))), beta)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.30237078666687, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [3, 9, 1, 8, 4, 2, 3, 2, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [2, 4, 0, 3, 1, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [1, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0], [2, 3, 0, 0], [4, 0], [38], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 3, 3, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 9, 45, 71, 34, 14, 2]], "fitness": -0.036571428179740906, "mapping_values": [1, 5, 5, 2, 3, 1, 14, 14, 8, 6, 2, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.math.add(grad, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha)))), beta)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.3012406826019287, 2.303755283355713, 2.3026175498962402, 2.30178165435791, 2.301683187484741, 2.3024330139160156], "accuracy": [0.09311848133802414, 0.08796724677085876, 0.09325055778026581, 0.09377889335155487, 0.09813763201236725, 0.09087307006120682], "val_loss": [2.297966480255127, 2.297966480255127, 2.297966480255127, 2.297966480255127, 2.297966480255127, 2.297966480255127], "val_accuracy": [0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [7, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 1, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [91, 37, 51, 41, 8, 79, 86, 52, 44], [1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [3, 9, 0, 8, 4, 2, 3, 2, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [2, 4, 0, 3, 1, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [10, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0], [2, 3, 0, 0], [4, 0], [38], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [9, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [2, 3, 3, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 9, 45, 71, 34, 14, 2]], "fitness": -0.036571428179740906, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3012406826019287, 2.303755283355713, 2.3026175498962402, 2.30178165435791, 2.301683187484741, 2.3024330139160156], "accuracy": [0.09311848133802414, 0.08796724677085876, 0.09325055778026581, 0.09377889335155487, 0.09813763201236725, 0.09087307006120682], "val_loss": [2.297966480255127, 2.297966480255127, 2.297966480255127, 2.297966480255127, 2.297966480255127, 2.297966480255127], "val_accuracy": [0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293]}}]