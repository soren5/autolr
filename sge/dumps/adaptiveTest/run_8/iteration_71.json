[{"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 1, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [41, 38]], "fitness": -0.7559999823570251, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 7, 7, 3, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.add(tf.math.multiply(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), alpha)), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.2894998823631205, 2.262555792000725, 2.2261571882580724, 2.182318351933544, 2.119142108164475, 2.033689168780912, 1.9192096741759088, 1.7829429664159606, 1.6466732077264137, 1.5151521600610656, 1.420043209130974, 1.3195200277719483, 1.2503189469183662, 1.1988303469093704, 1.143411270237838, 1.095298550289856, 1.0783025450977934, 1.0392741769170402, 1.0174752950447898, 0.9991376277808705, 0.97377716428206, 0.9466523967241457, 0.9385477857283628, 0.925123546322213, 0.9096824344926113, 0.891700488606842, 0.8800938466379057, 0.869807827096369, 0.8525906978990613, 0.8532571383770258, 0.8350247075891198, 0.8370647219351302, 0.8223805333865459, 0.8229811842635858, 0.8145194608679285, 0.8031656625736596, 0.7958295184072329, 0.7973548197758873, 0.7845460205754552, 0.7758584154941749, 0.7715522541881411, 0.7615385084120101, 0.7556172218210646, 0.7666880806769992, 0.7490806916071486, 0.7562166551683305, 0.747727045789607, 0.7508313032645811, 0.7319130222039405, 0.7297470212029964, 0.7367872430222965], "accuracy": [0.12389380484819412, 0.19482234120368958, 0.27037379145622253, 0.31898030638694763, 0.3615110218524933, 0.39981508255004883, 0.4345529079437256, 0.4671773910522461, 0.48329150676727295, 0.5188218355178833, 0.5266147255897522, 0.5596354603767395, 0.574560821056366, 0.5879011750221252, 0.5972790718078613, 0.6209219098091125, 0.6219785809516907, 0.6382247805595398, 0.6425835490226746, 0.6450931429862976, 0.6544709801673889, 0.6635847091674805, 0.665830135345459, 0.6737551093101501, 0.6705851554870605, 0.6775855422019958, 0.6885483860969543, 0.6859067678451538, 0.6964733600616455, 0.6940959095954895, 0.7009642124176025, 0.6999075412750244, 0.7009642124176025, 0.7078325152397156, 0.7043983340263367, 0.707568347454071, 0.7160216569900513, 0.7092854380607605, 0.7161537408828735, 0.7217012047767639, 0.7165499925613403, 0.7268524765968323, 0.7250033020973206, 0.7252674698829651, 0.7256637215614319, 0.7292299270629883, 0.7257958054542542, 0.7264562249183655, 0.7359662055969238, 0.7349095344543457, 0.7310791015625], "val_loss": [1.9438377789088659, 1.9147777557373047, 1.8769704273768835, 1.8253343445914132, 1.7532191276550293, 1.654562337057931, 1.5282247066497803, 1.385026148387364, 1.2461443969181605, 1.1224707875932967, 1.0253494126456124, 0.9464180810110909, 0.8863691943032401, 0.8379191671098981, 0.7981433016913277, 0.7660801240376064, 0.7415541580745152, 0.7201283999851772, 0.7020848137991769, 0.6860938923699516, 0.6715734686170306, 0.6615022420883179, 0.6474709681102208, 0.6411645242146083, 0.629860384123666, 0.6205066783087594, 0.612974899155753, 0.606698751449585, 0.5986870867865426, 0.5925627265657697, 0.5869790826525006, 0.580480524471828, 0.5757614374160767, 0.570242064339774, 0.5666256632123675, 0.5632073708942958, 0.5589056015014648, 0.5559721674237933, 0.5518800360815865, 0.5476724760872977, 0.5435233116149902, 0.5400021076202393, 0.537875873701913, 0.5376360586711338, 0.5351409060614449, 0.5317842790058681, 0.530315773827689, 0.5295825174876622, 0.5247473546436855, 0.5206014428819928, 0.5208037410463605], "val_accuracy": [0.2696666717529297, 0.39399999380111694, 0.4363333284854889, 0.46933332085609436, 0.5080000162124634, 0.5443333387374878, 0.562333345413208, 0.5756666660308838, 0.5913333296775818, 0.6146666407585144, 0.6476666927337646, 0.6783333420753479, 0.687333345413208, 0.6980000138282776, 0.7013333439826965, 0.7036666870117188, 0.7039999961853027, 0.7083333134651184, 0.7153333425521851, 0.7253333330154419, 0.7323333621025085, 0.7296666502952576, 0.7333333492279053, 0.7263333201408386, 0.734666645526886, 0.7450000047683716, 0.7486666440963745, 0.7516666650772095, 0.7543333172798157, 0.7570000290870667, 0.7609999775886536, 0.7606666684150696, 0.7613333463668823, 0.7646666765213013, 0.7663333415985107, 0.765333354473114, 0.765666663646698, 0.7696666717529297, 0.768666684627533, 0.7739999890327454, 0.7739999890327454, 0.7770000100135803, 0.7770000100135803, 0.7760000228881836, 0.7760000228881836, 0.781000018119812, 0.7753333449363708, 0.7773333191871643, 0.7770000100135803, 0.7786666750907898, 0.7776666879653931]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [50, 57], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [2, 5, 2, 2, 2, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 1, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [1, 0, 0, 1, 0], [0, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 3, 4, 9, 5], [2, 3, 3, 1], [41, 38, 15]], "fitness": -0.13600000739097595, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 7, 7, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.multiply(tf.math.add(beta, grad), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), alpha))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3021357655289023, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.10315678268671036, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.959007944379534, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 2, 0, 1, 0], [2, 0, 0, 3, 1, 0], [50, 57], [1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 5, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 0, 0, 3, 0, 1, 2, 3, 3, 0], [79, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [89, 97]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 2, 1, 1, 0, 1, 0, 4, 3, 1, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(grad, tf.math.add(tf.math.square(tf.math.add(beta, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1208408828.1192353, 23400047918.019814, 109256723340.08823, 302747219587.9393, 661984466800.9023, 1206263352554.6638], "accuracy": [0.10210011899471283, 0.1002509593963623, 0.10368511080741882, 0.10210011899471283, 0.09642054885625839, 0.09959053993225098], "val_loss": [4722250605.714286, 37766566473.14286, 127448163474.28572, 302084521984.0, 589995011510.8572, 1019484869193.1428], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [7, 3, 2, 6, 2, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 3, 1, 3, 3, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 4, 9, 3, 9], [3, 3, 3, 1], [41, 38, 98]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 20, 20, 10, 10, 4, 1, 1, 0, 1, 0, 6, 5, 1, 2], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.multiply(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)))), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), grad), tf.math.add(tf.math.add(beta, alpha), grad))), tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [7, 4, 2, 4, 9, 0, 3, 5, 6, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 2, 1, 2, 3, 3, 0], [15, 79, 43, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [2, 3, 3, 1], [33, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 7, 5, 3, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), tf.math.negative(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 5, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 0, 0, 3, 3, 1, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 2, 14, 14, 8, 6, 2, 1, 1, 0, 1, 0, 4, 3, 1, 2], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)), tf.math.add(beta, grad))), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [3312.1388485008747, 60633.88190752543, 279319.8791729956, 769655.2213380003, 1677699.6994122309, 3051174.269350152], "accuracy": [0.10170386731624603, 0.10038304328918457, 0.10368511080741882, 0.10196803510189056, 0.09628847241401672, 0.09959053993225098], "val_loss": [12472.231863839286, 97010.84151785714, 324657.6339285714, 766444.8214285715, 1493408.4285714286, 2576581.3571428573], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [7, 1, 2, 6, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 0, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], [2, 3, 4, 3, 9, 6, 0, 9], [0, 1, 1, 1], [84, 38, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 6, 6, 4, 1, 1, 0, 1, 0, 12, 8, 4, 3], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)))), tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.pow(tf.math.multiply(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), alpha), tf.math.divide_no_nan(alpha, tf.math.negative(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10896842926740646, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [7, 3, 2, 6, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 1, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [2, 2, 4, 3, 9, 6, 0, 9], [0, 3, 1, 1, 1], [41, 38, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 21, 21, 12, 9, 4, 1, 1, 0, 1, 0, 12, 7, 5, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.square(tf.math.add(tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(beta, alpha), beta))))))), tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, grad))))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.pow(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), sigma), tf.math.divide_no_nan(alpha, tf.math.negative(alpha))), alpha)", "other_info": {"loss": [2.3119820228987806, 2.304048289176952, 2.3040452955452806, 2.303878737982348, 2.3036276365803405, 2.3038346035259116], "accuracy": [0.1258750557899475, 0.09866596013307571, 0.09906221181154251, 0.09325055778026581, 0.09734513610601425, 0.09470347315073013], "val_loss": [1.9742783137730189, 1.9743366922651018, 1.9748144830976213, 1.973729065486363, 1.9736597878592355, 1.97412109375], "val_accuracy": [0.10400000214576721, 0.09833333641290665, 0.0976666659116745, 0.10000000149011612, 0.10000000149011612, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 3, 0, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 2, 1, 2, 3, 3, 0], [15, 16, 17, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [1, 3, 0, 3, 9], [0, 3, 3, 1], [13, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 7, 7, 2, 5, 4, 2, 2, 0, 8, 5, 3, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.negative(tf.math.multiply(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad)), tf.math.add(beta, beta)), alpha)), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), sigma)), sigma), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [867588.6817074908, 16706557.43811914, 77878194.05943732, 215642913.6272619, 471336686.527011, 858640710.7711003], "accuracy": [0.10210011899471283, 0.1002509593963623, 0.10368511080741882, 0.10196803510189056, 0.09642054885625839, 0.09959053993225098], "val_loss": [3378683.714285714, 26935532.57142857, 90804025.14285715, 215117188.57142857, 420008685.71428573, 725614025.1428572], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [1, 6, 8, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 9, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 2, 0, 0, 2, 3, 3, 0], [15, 16, 74, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [3, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 0, 9, 9], [0, 3, 3, 1], [41, 33]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 3, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(grad, tf.math.add(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [4290987.322597689, 82846136.59912825, 386478614.3082816, 1070503106.5275393, 2340266277.904636, 4263790661.9257693], "accuracy": [0.10210011899471283, 0.1002509593963623, 0.10368511080741882, 0.10196803510189056, 0.09642054885625839, 0.09959053993225098], "val_loss": [16737837.142857144, 133634724.57142857, 450719030.85714287, 1068019126.8571428, 2085576118.857143, 3603403190.857143], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], [7, 4, 2, 3, 9, 0, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 3, 2, 0, 0, 2, 3, 3, 0], [8, 16, 43, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 7, 9, 9], [0, 3, 3, 1], [41, 38, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 7, 5, 3, 1, 0, 0, 0, 0, 6, 5, 1, 3], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.pow(grad, tf.math.add(tf.math.multiply(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, beta))))))), tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1421.6969858617233, 25267.480922785133, 115724.60163989235, 318158.9960292564, 692682.6308446705, 1258829.152110025], "accuracy": [0.10196803510189056, 0.10038304328918457, 0.10368511080741882, 0.10196803510189056, 0.09628847241401672, 0.09959053993225098], "val_loss": [5244.095424107143, 40272.411830357145, 134314.3794642857, 316586.60714285716, 616306.25, 1062691.9285714286], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 1, 5, 2, 2, 9, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 2, 2, 3, 3, 0], [15, 10, 43, 60, 1, 78], [0, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 8, 9, 3, 9], [1, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 3, 1, 1, 0, 1, 0, 3, 3, 0, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.subtract(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [71969277.54625952, 1392509314.3162067, 6500165371.367587, 18009722435.01783, 39377920536.14265, 71750884726.78589], "accuracy": [0.10210011899471283, 0.1002509593963623, 0.10368511080741882, 0.10196803510189056, 0.09642054885625839, 0.09959053993225098], "val_loss": [281102464.0, 2247087762.285714, 7581970724.571428, 17969708470.857143, 35094708224.0, 60640643364.57143], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1], [7, 4, 2, 8, 0, 2, 3, 1, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 1, 1, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [41, 38, 23]], "fitness": -0.09914285689592361, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 4, 3, 1, 0, 6, 5, 1, 3], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3093863655594693, 2.386531753909114, 2.5931098431234645, 3.0158529593377397, 3.6833949570863034, 4.516385212455995, 5.599995888770611, 6.838698671572968], "accuracy": [0.09721305221319199, 0.09430722147226334, 0.10157178342342377, 0.09959053993225098, 0.09509972482919693, 0.09853387624025345, 0.10091137140989304, 0.09800554811954498], "val_loss": [1.984659126826695, 2.0509513446262906, 2.2046865054539273, 2.4800684792654857, 2.901017052786691, 3.475135258265904, 4.197561400277274, 5.060391426086426], "val_accuracy": [0.09300000220537186, 0.09866666793823242, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 2, 3, 2, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 1, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [1, 3, 3, 1], [41, 38]], "fitness": -0.08942857384681702, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 8, 8, 3, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, alpha))))), tf.math.add(beta, beta))), tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.611116816102868, 3.0290722148828753, 2.3053207252602204, 2.518700060795925, 2.304671559839547, 2.3034105755318866, 2.30312168029762, 2.3027156684786307], "accuracy": [0.18042530119419098, 0.15638621151447296, 0.10210011899471283, 0.10632677376270294, 0.09589222073554993, 0.09509972482919693, 0.09747721254825592, 0.0936468094587326], "val_loss": [1.9702882085527693, 1.980445453098842, 1.9554875918797083, 1.9762768745422363, 1.9740781102861678, 1.973614283970424, 1.9734742300851005, 1.9734432356698173], "val_accuracy": [0.14233332872390747, 0.09700000286102295, 0.2696666717529297, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [7, 4, 2, 4, 5, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 2, 1, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 0, 3, 9], [0, 3, 3, 1], [41, 38]], "fitness": -0.057428572326898575, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 6, 6, 2, 1, 1, 0, 1, 0, 7, 4, 3, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.math.add(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), grad)), tf.math.add(beta, beta))), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), sigma)), sigma))", "other_info": {"loss": [2.3009700137138243, 2.302498394046965, 2.3004883195997747, 2.3008202557645028, 2.3007522775292033, 2.3009533261138024, 2.299972101209532, 2.3014214165757725, 2.3026522040414363, 2.302084622555059, 2.303100650273672, 2.29961593339094, 2.300260428188184, 2.3012529557265498, 2.299543215976242, 2.300117619616118, 2.300523677821393, 2.2996437836159425, 2.2995193220321704, 2.3019266966201406, 2.3000029187397066, 2.2998370392101157, 2.299581013052077, 2.302040243728239, 2.300443849134061, 2.3009608468013023, 2.299999010104702, 2.3007245214623766, 2.299171738195665, 2.3001776500825852, 2.3007296036735516], "accuracy": [0.0940430611371994, 0.09496764093637466, 0.09628847241401672, 0.09681680053472519, 0.09496764093637466, 0.09430722147226334, 0.09721305221319199, 0.08757099509239197, 0.09232597798109055, 0.09219389408826828, 0.09219389408826828, 0.09642054885625839, 0.09721305221319199, 0.09985470771789551, 0.09734513610601425, 0.09694888442754745, 0.09100515395402908, 0.09219389408826828, 0.10051512718200684, 0.09008057415485382, 0.09694888442754745, 0.09787346422672272, 0.09576013684272766, 0.09298639744520187, 0.09708096832036972, 0.09153348207473755, 0.09721305221319199, 0.09430722147226334, 0.10434553027153015, 0.09694888442754745, 0.0952318087220192], "val_loss": [1.9705051694597517, 1.9703715869358607, 1.97026150567191, 1.970106737954276, 1.9700119835989816, 1.9698992456708635, 1.969822951725551, 1.9697316033499581, 1.969609260559082, 1.9695343971252441, 1.9694412095206124, 1.9693976129804338, 1.9693717956542969, 1.969327109200614, 1.969302041190011, 1.9692645072937012, 1.96921934400286, 1.9691807883126395, 1.9691581726074219, 1.9691014971051897, 1.9691169602530343, 1.9691276550292969, 1.9691243171691895, 1.9690792901175362, 1.9690722056797572, 1.969090529850551, 1.9691134180341447, 1.96911587033953, 1.9691486358642578, 1.9691554478236608, 1.969156197139195], "val_accuracy": [0.03933333232998848, 0.041333332657814026, 0.04266666620969772, 0.04466666653752327, 0.045666664838790894, 0.04633333161473274, 0.04633333161473274, 0.04833333194255829, 0.04833333194255829, 0.049666665494441986, 0.050999999046325684, 0.05233333259820938, 0.05400000140070915, 0.055666666477918625, 0.05533333495259285, 0.05666666850447655, 0.05666666850447655, 0.05700000002980232, 0.056333333253860474, 0.057999998331069946, 0.0573333315551281, 0.058666665107011795, 0.058666665107011795, 0.061000000685453415, 0.061666667461395264, 0.06199999898672104, 0.06199999898672104, 0.061666667461395264, 0.060333333909511566, 0.06066666543483734, 0.060333333909511566]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 2, 1, 1, 3, 3, 0], [54, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [3, 3, 9, 3, 9], [0, 3, 3, 1], [58, 38]], "fitness": -0.05485714226961136, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 6, 6, 2, 1, 1, 0, 1, 0, 7, 4, 3, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad))))), tf.math.add(beta, beta))), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)), sigma)", "other_info": {"loss": [2.3009897269089112, 2.3025924962320508, 2.300635632113254, 2.3010779453101744, 2.3010517922311866, 2.301330809107609, 2.300347764273802, 2.3018755531739314, 2.303231208961496, 2.30266832483443, 2.303776445799437, 2.3001557412384965, 2.300771784332088, 2.3018608875183966, 2.3000973780960408, 2.3007212013002274, 2.3010978425388338, 2.300211206135607, 2.300116591654465, 2.302749562241445, 2.3004257157809067, 2.300275865090506, 2.30002265385255, 2.3028213624484377, 2.3009760917658033, 2.301346975751541, 2.3003562662532504, 2.3011770497507125, 2.2993522370574873, 2.3006495737270547, 2.3011608758323527, 2.301230655480464, 2.300012478471322, 2.30104307327855, 2.300292476419256, 2.301938389680011, 2.2992841794962864, 2.299780352775998, 2.30039874299044, 2.2992241041236126, 2.3005479772124606, 2.300126523011711, 2.2990358203960493, 2.300276555877714, 2.2994424581622184], "accuracy": [0.09417514503002167, 0.09549596905708313, 0.09589222073554993, 0.09655263274908066, 0.09509972482919693, 0.09325055778026581, 0.09615638852119446, 0.08625016361474991, 0.09100515395402908, 0.09074098616838455, 0.08915598690509796, 0.09628847241401672, 0.09496764093637466, 0.09747721254825592, 0.09338264167308807, 0.0948355570435524, 0.0882314071059227, 0.08981640636920929, 0.09655263274908066, 0.08757099509239197, 0.09430722147226334, 0.09694888442754745, 0.09179764986038208, 0.09259014576673508, 0.0952318087220192, 0.08902391046285629, 0.09285431355237961, 0.0944393053650856, 0.10289261490106583, 0.09615638852119446, 0.09311848133802414, 0.09060890227556229, 0.09457138925790787, 0.0956280529499054, 0.09391097724437714, 0.09179764986038208, 0.0948355570435524, 0.09959053993225098, 0.09642054885625839, 0.0940430611371994, 0.09826971590518951, 0.09760929644107819, 0.1006472036242485, 0.09602430462837219, 0.09708096832036972], "val_loss": [1.9705471311296736, 1.9704752649579729, 1.9704226085117884, 1.9703470638820104, 1.9702927725655692, 1.9702221325465612, 1.970165525163923, 1.9700989042009627, 1.9700230189732142, 1.969968591417585, 1.969902515411377, 1.9698568752833776, 1.9698281288146973, 1.9697865077427454, 1.9697474070957728, 1.9696998596191406, 1.9696544919695174, 1.9696123940604073, 1.9695677757263184, 1.969513007572719, 1.9694974081856864, 1.9694784028189523, 1.969460896083287, 1.9694150515965052, 1.9693842615400041, 1.9693753378731864, 1.9693574905395508, 1.969334261757987, 1.9693244525364466, 1.9692980221339635, 1.9692692075456892, 1.9692420278276717, 1.969226905277797, 1.9692064012799944, 1.9691884177071708, 1.9691671643938338, 1.9691593306405204, 1.9691533361162459, 1.969132559640067, 1.9691318103245325, 1.969118663242885, 1.9691145079476493, 1.9691167558942522, 1.9691175733293806, 1.9691239765712194], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.0403333343565464, 0.04233333468437195, 0.0430000014603138, 0.043666668236255646, 0.04466666653752327, 0.04500000178813934, 0.045666664838790894, 0.04600000008940697, 0.04600000008940697, 0.04633333161473274, 0.04633333161473274, 0.047333333641290665, 0.04800000041723251, 0.04800000041723251, 0.04866666719317436, 0.04866666719317436, 0.04899999871850014, 0.049666665494441986, 0.049666665494441986, 0.050333332270383835, 0.05133333429694176, 0.052000001072883606, 0.05233333259820938, 0.0533333346247673, 0.0533333346247673, 0.05366666615009308, 0.05433333292603493, 0.054666668176651, 0.05533333495259285, 0.055666666477918625, 0.05533333495259285, 0.05666666850447655, 0.0560000017285347, 0.0560000017285347, 0.056333333253860474, 0.05666666850447655, 0.05700000002980232, 0.05766666680574417, 0.0573333315551281, 0.05700000002980232, 0.05700000002980232, 0.0573333315551281, 0.05766666680574417]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1], [7, 4, 4, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 0, 0, 0, 3, 1, 2, 3, 3, 0], [15, 21, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [2, 6, 9, 3, 9], [0, 3, 3, 1], [41, 38]], "fitness": -0.049142856150865555, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 9, 8, 3, 1, 1, 0, 1, 0, 5, 3, 2, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.pow(tf.math.pow(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))))), tf.math.add(beta, alpha))), tf.math.add(tf.math.add(beta, beta), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [5.3958771383727286e+20, 5.90380570407988e+20, 6.00565857789794e+20, 5.946949846193242e+20, 5.926428860455691e+20, 5.8670325556679816e+20], "accuracy": [0.1022322028875351, 0.10276053100824356, 0.10170386731624603, 0.10157178342342377, 0.09893012791872025, 0.10487385839223862], "val_loss": [2.722339119609794e+20, 2.6436304729257483e+20, 2.5743297252311463e+20, 2.5192843279954444e+20, 2.4851714205634947e+20, 2.477089218450969e+20], "val_accuracy": [0.10266666859388351, 0.09933333098888397, 0.0949999988079071, 0.09033333510160446, 0.08933333307504654, 0.08833333104848862]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 2, 0, 1, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [2, 5, 2, 2, 2, 2, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 2, 0, 0, 2, 3, 3, 0], [13, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [3, 3, 0, 7], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 7, 9, 9], [0, 3, 3, 1], [68, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 8, 6, 5, 8, 6, 4, 2, 0, 6, 3, 3, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.multiply(tf.math.add(beta, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta)))), tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, sigma))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), sigma), sigma))", "other_info": {"loss": [2.301008558449665, 2.30269189272039, 2.3007920542885647, 2.3013406776087617, 2.301372884491636, 2.301739469385103], "accuracy": [0.09417514503002167, 0.09509972482919693, 0.09509972482919693, 0.09628847241401672, 0.09391097724437714, 0.0936468094587326], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [7, 4, 2, 9, 9, 0, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 2, 1, 2, 3, 3, 0], [70, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [0, 3], [61], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [5, 3, 9, 3, 9], [0, 3, 3, 1], [41, 8]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 2, 6, 4, 3, 1, 1, 4, 3, 1, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.pow(grad, grad)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), sigma)), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3010085314303623, 2.3026916048294046, 2.300791721396899, 2.3013397013868686, 2.301371962308348, 2.3017380073825997], "accuracy": [0.09417514503002167, 0.09509972482919693, 0.09509972482919693, 0.09628847241401672, 0.09391097724437714, 0.0936468094587326], "val_loss": [1.9705899783543177, 1.9705897058759416, 1.9705896377563477, 1.9705894333975655, 1.9705893652779716, 1.9705891609191895], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 0, 0, 3, 0, 1, 2, 3, 3, 0], [34, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 5, 5, 4, 1, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.multiply(sigma, sigma)))", "other_info": {"loss": [2.3010445303369615, 2.302905218680899, 2.3011655148072974, 2.301994741931331, 2.3022119929651623, 2.302824424825025], "accuracy": [0.09377889335155487, 0.09285431355237961, 0.09377889335155487, 0.09496764093637466, 0.09245806187391281, 0.09417514503002167], "val_loss": [1.9706760815211706, 1.970860549381801, 1.9710087094988142, 1.971210139138358, 1.9713809149605888, 1.9715947423662459], "val_accuracy": [0.039000000804662704, 0.038333334028720856, 0.03766666725277901, 0.03700000047683716, 0.03633333370089531, 0.03500000014901161]}}]