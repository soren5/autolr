[{"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 5, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 0, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 32, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [3, 0, 5, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [45, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [4, 3, 2, 0], [5, 0], [12], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 0, 6, 9, 7, 5, 3, 1, 1, 1, 9, 2, 6, 5, 4, 6, 9, 3, 1, 4, 5, 8, 1, 0, 2, 4, 3, 1, 9, 9, 9, 2, 4, 6, 4, 2, 3, 8, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [2, 0, 2, 2, 2, 0, 3, 0, 0, 3, 2, 2, 3, 3, 1, 0, 3, 2, 0, 0, 3, 2, 3, 2, 1, 0, 0, 2, 0], [43, 9, 45, 4, 34, 14, 69, 20, 87, 76, 30, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.8080000281333923, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.negative(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.9868167638778687, 1.363957166671753, 1.0338122844696045, 0.870949923992157, 0.8053397536277771, 0.7695358395576477, 0.7381971478462219, 0.684217631816864, 0.6911616921424866, 0.6539018750190735, 0.6517804265022278, 0.6132206320762634, 0.6139155030250549, 0.5938428044319153, 0.5779454708099365, 0.5810097455978394, 0.5569543838500977, 0.5587483644485474, 0.5270458459854126, 0.5404958724975586, 0.5213269591331482, 0.5198941826820374, 0.510290801525116, 0.49418240785598755, 0.498456209897995, 0.49172601103782654, 0.4862578809261322, 0.4741632342338562, 0.4720134437084198, 0.47168928384780884, 0.4613308608531952, 0.44060930609703064, 0.45426538586616516, 0.43054264783859253, 0.4270828366279602, 0.429291307926178, 0.41286906599998474, 0.41690605878829956, 0.41152438521385193], "accuracy": [0.33641526103019714, 0.5222559571266174, 0.6169594526290894, 0.6728305220603943, 0.6966054439544678, 0.7127195596694946, 0.7197200059890747, 0.7429665923118591, 0.7383436560630798, 0.7516840696334839, 0.7495707273483276, 0.7671377658843994, 0.7643640041351318, 0.7733456492424011, 0.783119797706604, 0.7763835787773132, 0.7840443849563599, 0.7893276810646057, 0.8058380484580994, 0.7917051911354065, 0.8026680946350098, 0.8026680946350098, 0.8033285140991211, 0.8175934553146362, 0.8123101592063904, 0.8185180425643921, 0.8175934553146362, 0.8145555257797241, 0.8178576231002808, 0.8231409192085266, 0.8290846943855286, 0.837537944316864, 0.8301413059234619, 0.839519202709198, 0.8411042094230652, 0.8368775844573975, 0.8471800088882446, 0.8486329317092896, 0.8433496356010437], "val_loss": [1.558472990989685, 0.8700587749481201, 0.7873695492744446, 0.7878208160400391, 0.7322547435760498, 0.7211489081382751, 0.6882140040397644, 0.6558610200881958, 0.5905598402023315, 0.586270272731781, 0.5786167979240417, 0.5845940113067627, 0.5615154504776001, 0.5585356950759888, 0.5379217863082886, 0.5421389937400818, 0.5225366353988647, 0.5147527456283569, 0.5262437462806702, 0.5171272158622742, 0.5277566909790039, 0.4884771704673767, 0.4941987991333008, 0.509864091873169, 0.502955973148346, 0.4698306918144226, 0.5132209658622742, 0.46539443731307983, 0.4546755254268646, 0.4556237757205963, 0.4568319618701935, 0.45446062088012695, 0.4386037588119507, 0.43525785207748413, 0.44762852787971497, 0.4478130638599396, 0.45094600319862366, 0.45129698514938354, 0.44079792499542236], "val_accuracy": [0.47600001096725464, 0.6813333630561829, 0.7003333568572998, 0.6753333210945129, 0.7143333554267883, 0.7193333506584167, 0.7260000109672546, 0.7459999918937683, 0.7726666927337646, 0.7733333110809326, 0.7773333191871643, 0.7683333158493042, 0.781333327293396, 0.7736666798591614, 0.7940000295639038, 0.7820000052452087, 0.7976666688919067, 0.8090000152587891, 0.7983333468437195, 0.7983333468437195, 0.784333348274231, 0.8180000185966492, 0.8103333115577698, 0.8033333420753479, 0.8013333082199097, 0.8259999752044678, 0.7906666398048401, 0.8306666612625122, 0.8246666789054871, 0.8320000171661377, 0.831333339214325, 0.8346666693687439, 0.843666672706604, 0.8460000157356262, 0.8363333344459534, 0.8363333344459534, 0.8293333053588867, 0.8303333520889282, 0.8413333296775818]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [7, 5, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 0, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 32, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [3, 0, 5, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [45, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [4, 3, 2, 0], [5, 0], [12], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [0, 2, 6, 9, 4, 5, 3, 1, 1, 1, 0, 2, 6, 5, 4, 6, 9, 3, 1, 4, 5, 8, 1, 1, 2, 4, 8, 1, 9, 9, 9, 2, 4, 6, 4, 2, 3, 8, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [1, 0, 2, 2, 2, 0, 3, 0, 0, 3, 2, 2, 3, 3, 1, 0, 3, 2, 0, 0, 3, 2, 3, 2, 1, 0, 0, 2, 0], [43, 9, 45, 4, 34, 14, 69, 20, 87, 76, 30, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.22771428525447845, "mapping_values": [1, 1, 1, 0, 1, 0, 21, 21, 13, 8, 4, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.multiply(tf.math.sqrt(beta), tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha))))))))), beta)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.0923924446105957, 110103000.0, NaN, NaN, NaN, NaN], "accuracy": [0.19970941543579102, 0.11253467202186584, 0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.279921770095825, 1.6248931380459733e+19, NaN, NaN, NaN, NaN], "val_accuracy": [0.21533332765102386, 0.14000000059604645, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 5, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 0, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [95, 32, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [3, 0, 5, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [45, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [4, 3, 2, 0], [5, 0], [12], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 0, 6, 9, 2, 5, 3, 1, 1, 1, 9, 2, 6, 5, 4, 6, 9, 3, 1, 4, 5, 8, 1, 2, 2, 4, 3, 1, 9, 9, 9, 2, 4, 6, 4, 2, 3, 8, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [2, 3, 1, 1, 2, 0, 3, 0, 0, 3, 2, 1, 3, 3, 0, 3, 3, 2, 0, 0, 3, 2, 3, 2, 1, 0, 0, 2, 0], [15, 9, 45, 4, 34, 14, 69, 33, 87, 76, 30, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 46, 31, 15, 10], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.divide_no_nan(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(beta), tf.math.multiply(tf.math.subtract(sigma, tf.math.subtract(tf.math.subtract(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.pow(tf.math.divide_no_nan(alpha, beta), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.subtract(tf.math.pow(sigma, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.subtract(sigma, tf.math.add(tf.math.add(tf.math.pow(beta, alpha), tf.math.multiply(tf.math.subtract(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), sigma)), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))))))), sigma)))), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 5, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 0, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 73, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [0, 0, 5, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [45, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [4, 3, 2, 0], [5, 0], [12], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 0, 6, 9, 7, 5, 3, 1, 1, 1, 9, 2, 6, 5, 4, 6, 9, 3, 1, 4, 5, 8, 1, 0, 2, 4, 3, 1, 9, 9, 9, 2, 4, 6, 4, 2, 3, 8, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [2, 0, 2, 2, 2, 0, 3, 0, 0, 3, 2, 2, 3, 3, 1, 0, 3, 2, 0, 0, 3, 2, 3, 2, 1, 0, 0, 2, 0], [43, 9, 45, 4, 34, 14, 69, 20, 87, 76, 30, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [28780088.0, 557174784.0, 2628785920.0, 7283708416.0, 15660736512.0, 28092061696.0], "accuracy": [0.09985470771789551, 0.10196803510189056, 0.09959053993225098, 0.10170386731624603, 0.10157178342342377, 0.1026284471154213], "val_loss": [129613280.0, 1035818496.0, 3494662656.0, 8282203648.0, 16174472192.0, 27947520000.0], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 6, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 2, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [36, 32, 51, 41, 8, 79, 86, 52, 44], [1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [3, 0, 5, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [45, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [4, 3, 2, 0], [5, 0], [12], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [2, 0, 6, 9, 7, 5, 3, 1, 1, 1, 9, 2, 6, 5, 4, 6, 9, 3, 1, 4, 5, 8, 1, 0, 2, 4, 3, 1, 9, 9, 9, 2, 4, 6, 4, 2, 3, 8, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [2, 1, 2, 2, 2, 0, 3, 0, 0, 3, 2, 2, 3, 3, 1, 0, 3, 2, 0, 0, 3, 2, 3, 2, 1, 0, 0, 2, 0], [50, 9, 45, 4, 34, 14, 69, 20, 87, 76, 30, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 4, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1109112.125, 2.7017531394958496, 2.4795751571655273, 2.584458589553833, 2.6319127082824707, 2.4792494773864746, 2.611435890197754], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.10117553919553757, 0.0952318087220192, 0.10038304328918457, 0.09800554811954498, 0.10051512718200684], "val_loss": [2.7409732341766357, 2.6598174571990967, 2.700559616088867, 2.562387466430664, 2.6811068058013916, 2.6875808238983154, 2.5468993186950684], "val_accuracy": [0.09933333098888397, 0.10266666859388351, 0.10066666454076767, 0.0989999994635582, 0.10266666859388351, 0.10066666454076767, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 7, 5, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 0, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 32, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [4, 0, 5, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [45, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [4, 3, 2, 0], [5, 0], [12], [1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 0, 6, 9, 7, 5, 3, 1, 1, 1, 9, 2, 6, 5, 4, 6, 9, 3, 1, 4, 5, 8, 1, 0, 2, 4, 3, 1, 9, 9, 9, 2, 4, 6, 4, 2, 3, 8, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [1, 0, 2, 2, 2, 0, 3, 0, 0, 3, 2, 2, 3, 3, 1, 0, 3, 2, 0, 0, 3, 2, 3, 2, 1, 0, 0, 2, 0], [43, 9, 45, 4, 34, 14, 69, 20, 87, 76, 30, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07357019931077957, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 5, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 0, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 32, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [3, 0, 5, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [45, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [4, 3, 2, 0], [5, 0], [12], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 3, 1, 9, 4, 5, 3, 1, 1, 1, 9, 2, 2, 5, 4, 6, 9, 3, 9, 2, 5, 8, 1, 0, 2, 4, 2, 1, 9, 9, 9, 2, 4, 6, 4, 2, 3, 8, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [2, 0, 2, 2, 2, 0, 3, 0, 0, 3, 2, 2, 3, 3, 1, 0, 3, 2, 0, 0, 3, 2, 3, 2, 1, 0, 0, 2, 0], [33, 9, 45, 4, 34, 14, 69, 20, 87, 76, 30, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 29, 19, 10, 8], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.subtract(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.math.multiply(beta, beta)))), tf.math.subtract(tf.math.subtract(tf.math.subtract(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), sigma), tf.math.square(tf.math.pow(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), sigma)))))), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3023862838745117, 2.3031225204467773, 2.3032114505767822, 2.3031530380249023, 2.303103446960449, 2.3030760288238525, 2.3030788898468018], "accuracy": [0.0948355570435524, 0.09694888442754745, 0.09470347315073013, 0.09430722147226334, 0.0944393053650856, 0.09747721254825592, 0.09311848133802414], "val_loss": [2.3026764392852783, 2.3026883602142334, 2.302614688873291, 2.302980422973633, 2.3027210235595703, 2.302783966064453, 2.3027520179748535], "val_accuracy": [0.0989999994635582, 0.10133333504199982, 0.10133333504199982, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 7, 5, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 0, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 32, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [3, 0, 5, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [45, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [4, 3, 2, 0], [5, 0], [12], [1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 0, 6, 9, 7, 5, 3, 1, 1, 1, 9, 2, 6, 5, 4, 6, 9, 3, 1, 4, 5, 8, 1, 0, 2, 4, 3, 1, 9, 9, 9, 2, 4, 6, 4, 2, 3, 8, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [2, 0, 2, 2, 2, 0, 3, 0, 0, 3, 2, 2, 3, 3, 1, 0, 3, 2, 0, 0, 3, 2, 3, 2, 1, 0, 0, 2, 0], [43, 9, 45, 4, 34, 14, 69, 20, 87, 76, 30, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07370228320360184, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 4, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 0, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 32, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [3, 0, 5, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [45, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [4, 3, 2, 0], [5, 0], [12], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 0, 6, 9, 7, 5, 3, 1, 1, 1, 9, 2, 6, 5, 4, 6, 9, 3, 1, 4, 5, 8, 1, 0, 2, 4, 3, 1, 9, 9, 9, 2, 4, 6, 4, 2, 3, 8, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [2, 0, 2, 2, 2, 0, 3, 0, 0, 3, 2, 2, 3, 3, 1, 0, 3, 2, 0, 0, 3, 2, 3, 2, 1, 0, 0, 2, 0], [43, 9, 45, 4, 34, 14, 69, 20, 87, 76, 30, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, alpha), tf.math.pow(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [4.561172255224103e+19, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.05890899524092674, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [7, 5, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 0, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 32, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [3, 0, 5, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [45, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [4, 3, 2, 0], [5, 0], [12], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 0, 7, 9, 7, 5, 3, 1, 1, 1, 9, 2, 6, 5, 4, 6, 9, 3, 1, 4, 5, 8, 1, 0, 2, 4, 3, 1, 9, 9, 9, 2, 4, 6, 4, 2, 3, 8, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [2, 0, 2, 2, 2, 0, 3, 0, 0, 3, 2, 2, 3, 3, 1, 0, 3, 2, 0, 0, 3, 2, 3, 2, 1, 0, 0, 2, 0], [43, 9, 45, 4, 34, 14, 69, 20, 87, 76, 30, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 37, 24, 13, 7], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.add(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(beta), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))), tf.math.multiply(beta, tf.math.subtract(tf.math.subtract(tf.math.subtract(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), beta), tf.math.add(tf.math.divide_no_nan(tf.math.square(beta), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.divide_no_nan(sigma, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.subtract(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, tf.math.square(tf.math.sqrt(beta))))))), tf.math.subtract(beta, tf.math.negative(sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 5, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 0, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [56, 32, 51, 41, 8, 79, 86, 52, 44], [1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [0, 0, 5, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [45, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [4, 3, 2, 0], [5, 0], [12], [1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 0, 6, 9, 7, 5, 3, 1, 1, 1, 9, 2, 6, 5, 4, 6, 9, 3, 1, 4, 5, 8, 1, 0, 2, 4, 3, 1, 9, 9, 9, 2, 4, 6, 4, 2, 3, 8, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [2, 0, 2, 2, 2, 0, 3, 0, 0, 3, 2, 2, 3, 3, 1, 0, 3, 2, 0, 0, 3, 2, 3, 2, 1, 0, 0, 2, 0], [10, 9, 45, 34, 34, 15, 69, 20, 87, 76, 30, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1190235648.0, 180517322752.0, 3153370546176.0, 22237298032640.0, 97899299995648.0, 314713493733376.0], "accuracy": [0.09985470771789551, 0.10196803510189056, 0.09959053993225098, 0.10170386731624603, 0.1014397069811821, 0.1026284471154213], "val_loss": [11791784960.0, 635536408576.0, 6821111660544.0, 37186963505152.0, 139288515706880.0, 410865060806656.0], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 5, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 0, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [22, 32, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [3, 0, 5, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [45, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [4, 3, 2, 0], [5, 0], [12], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [7, 0, 6, 9, 7, 5, 3, 1, 1, 1, 9, 2, 6, 5, 4, 6, 9, 3, 1, 4, 5, 8, 1, 0, 2, 4, 3, 1, 9, 9, 9, 2, 4, 6, 4, 2, 3, 8, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [2, 0, 2, 2, 2, 0, 3, 0, 0, 3, 2, 2, 3, 3, 1, 0, 3, 2, 0, 0, 3, 2, 3, 2, 1, 0, 0, 2, 0], [43, 9, 45, 4, 34, 14, 69, 20, 87, 76, 30, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 4, 2, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(tf.math.divide_no_nan(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.11874257028102875, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [7, 5, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 0, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 32, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [3, 0, 5, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [45, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [4, 3, 2, 0], [5, 0], [12], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 8, 6, 9, 7, 5, 3, 1, 1, 1, 9, 2, 6, 5, 4, 6, 9, 3, 1, 4, 5, 8, 1, 0, 2, 4, 3, 1, 9, 9, 9, 2, 4, 6, 4, 2, 3, 8, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [2, 0, 2, 2, 2, 0, 3, 0, 0, 3, 2, 2, 3, 3, 1, 0, 3, 2, 0, 0, 3, 2, 3, 2, 1, 0, 0, 2, 0], [50, 9, 45, 4, 34, 14, 69, 20, 87, 76, 30, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 7, 2, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.square(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07409853488206863, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 5, 5, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 1, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 32, 51, 41, 8, 79, 86, 52, 44], [1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [4, 0, 5, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [45, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [4, 3, 2, 0], [5, 0], [12], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 0, 6, 9, 7, 5, 3, 1, 1, 1, 9, 2, 6, 5, 4, 6, 9, 3, 1, 4, 5, 8, 1, 0, 2, 4, 3, 1, 9, 9, 9, 2, 4, 6, 4, 2, 3, 8, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [0, 0, 2, 2, 2, 0, 3, 0, 0, 3, 2, 2, 3, 3, 1, 0, 3, 2, 0, 0, 3, 2, 3, 2, 1, 0, 0, 2, 0], [48, 9, 45, 4, 34, 14, 69, 20, 87, 76, 30, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.09971428662538528, "mapping_values": [1, 9, 9, 7, 2, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 2], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, alpha))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3333709239959717, 2.690659761428833, 3.7387266159057617, 5.5365400314331055, 8.12289047241211, 11.19365406036377, 15.265385627746582], "accuracy": [0.09549596905708313, 0.09813763201236725, 0.09800554811954498, 0.10157178342342377, 0.1010434553027153, 0.10236428678035736, 0.10579843819141388], "val_loss": [2.3721208572387695, 2.775012254714966, 3.7270781993865967, 5.2784833908081055, 7.383126735687256, 10.026739120483398, 13.229242324829102], "val_accuracy": [0.0989999994635582, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 5, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 0, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 32, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [3, 0, 5, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [45, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [4, 3, 2, 0], [5, 0], [12], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 0, 6, 9, 7, 5, 3, 1, 1, 1, 9, 2, 6, 5, 4, 6, 9, 3, 1, 4, 5, 8, 1, 0, 2, 4, 3, 1, 9, 9, 9, 2, 4, 6, 4, 2, 3, 8, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [2, 0, 2, 2, 2, 0, 3, 0, 0, 3, 2, 2, 3, 3, 1, 0, 3, 2, 0, 0, 3, 2, 3, 2, 1, 0, 0, 2, 0], [35, 9, 45, 4, 34, 14, 69, 20, 87, 76, 30, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.04514285549521446, "mapping_values": [1, 4, 4, 3, 1, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), tf.math.square(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(beta), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.301664352416992, 2.3020851612091064, 2.302354335784912, 2.3019375801086426, 2.3019633293151855, 2.30112624168396, 2.3018970489501953, 2.3017752170562744, 2.3027565479278564, 2.301797389984131, 2.3019163608551025, 2.3017168045043945, 2.301909923553467, 2.3010921478271484, 2.301588773727417, 2.301795721054077, 2.3019180297851562, 2.3019237518310547, 2.3014261722564697, 2.3011386394500732, 2.3007028102874756, 2.300316572189331, 2.301809072494507, 2.299726724624634, 2.302882432937622, 2.3001673221588135, 2.3012855052948, 2.301248788833618, 2.2996389865875244, 2.3016252517700195, 2.301168441772461, 2.302122116088867, 2.3018884658813477, 2.3004822731018066, 2.301076650619507, 2.300893545150757, 2.3011996746063232, 2.300551176071167, 2.3009047508239746, 2.3020927906036377, 2.3010201454162598, 2.3013789653778076, 2.3007700443267822, 2.300459623336792, 2.301461696624756, 2.3010849952697754, 2.3000378608703613, 2.3008618354797363, 2.300187826156616, 2.2997164726257324, 2.2994425296783447, 2.300473213195801, 2.30159592628479, 2.3009297847747803, 2.2995569705963135, 2.302042007446289, 2.3007030487060547, 2.2999510765075684, 2.301292657852173, 2.3004541397094727, 2.3000900745391846, 2.2999114990234375, 2.300050973892212, 2.3013880252838135, 2.300818920135498, 2.300140380859375, 2.301292657852173, 2.301379919052124], "accuracy": [0.09047681838274002, 0.09179764986038208, 0.09787346422672272, 0.09800554811954498, 0.08928807079792023, 0.09034473448991776, 0.09100515395402908, 0.09100515395402908, 0.09140139818191528, 0.08836349099874496, 0.08691058307886124, 0.09060890227556229, 0.08955223858356476, 0.09298639744520187, 0.09628847241401672, 0.08928807079792023, 0.08875974267721176, 0.09509972482919693, 0.0948355570435524, 0.09126931428909302, 0.09549596905708313, 0.09140139818191528, 0.09708096832036972, 0.0940430611371994, 0.08928807079792023, 0.1010434553027153, 0.09351472556591034, 0.09192973375320435, 0.09509972482919693, 0.08611807972192764, 0.09259014576673508, 0.09087307006120682, 0.08942015469074249, 0.09100515395402908, 0.09470347315073013, 0.09536388516426086, 0.09906221181154251, 0.09325055778026581, 0.09536388516426086, 0.09060890227556229, 0.09813763201236725, 0.08928807079792023, 0.09509972482919693, 0.09589222073554993, 0.09087307006120682, 0.0940430611371994, 0.09998679161071777, 0.09470347315073013, 0.09747721254825592, 0.09998679161071777, 0.10011887550354004, 0.09192973375320435, 0.09325055778026581, 0.09787346422672272, 0.0956280529499054, 0.09311848133802414, 0.09694888442754745, 0.09642054885625839, 0.09470347315073013, 0.09047681838274002, 0.09192973375320435, 0.09470347315073013, 0.09047681838274002, 0.09417514503002167, 0.09259014576673508, 0.09919429570436478, 0.09708096832036972, 0.09206181764602661], "val_loss": [2.2997379302978516, 2.2996838092803955, 2.2996418476104736, 2.299591541290283, 2.2995412349700928, 2.2995033264160156, 2.2994682788848877, 2.299422264099121, 2.2993736267089844, 2.2993247509002686, 2.2992782592773438, 2.2992351055145264, 2.2991926670074463, 2.2991511821746826, 2.29911208152771, 2.2990787029266357, 2.299041748046875, 2.299010992050171, 2.298973321914673, 2.2989413738250732, 2.2989120483398438, 2.2988789081573486, 2.2988431453704834, 2.298806667327881, 2.2987632751464844, 2.298725128173828, 2.2986879348754883, 2.2986598014831543, 2.2986505031585693, 2.298621654510498, 2.298590898513794, 2.298565626144409, 2.298537015914917, 2.298511028289795, 2.298494577407837, 2.298466205596924, 2.298445701599121, 2.298415422439575, 2.298389434814453, 2.29836368560791, 2.298346757888794, 2.2983238697052, 2.2983105182647705, 2.298302412033081, 2.298286199569702, 2.298264265060425, 2.298247814178467, 2.2982380390167236, 2.298229217529297, 2.2982122898101807, 2.2982077598571777, 2.298203468322754, 2.298189163208008, 2.2981724739074707, 2.2981600761413574, 2.2981467247009277, 2.2981460094451904, 2.2981364727020264, 2.298117160797119, 2.29811692237854, 2.298118829727173, 2.298112630844116, 2.298109769821167, 2.2981107234954834, 2.2980990409851074, 2.298093318939209, 2.298086166381836, 2.2980759143829346], "val_accuracy": [0.03866666555404663, 0.03999999910593033, 0.04066666588187218, 0.04100000113248825, 0.041999999433755875, 0.041999999433755875, 0.04266666620969772, 0.04333333298563957, 0.043666668236255646, 0.044333335012197495, 0.04533333331346512, 0.045666664838790894, 0.046666666865348816, 0.04766666516661644, 0.04800000041723251, 0.04899999871850014, 0.04899999871850014, 0.04933333396911621, 0.049666665494441986, 0.050333332270383835, 0.050999999046325684, 0.05133333429694176, 0.05133333429694176, 0.05166666582226753, 0.05299999937415123, 0.05299999937415123, 0.052666667848825455, 0.05366666615009308, 0.05400000140070915, 0.05433333292603493, 0.05433333292603493, 0.054666668176651, 0.054999999701976776, 0.054999999701976776, 0.05533333495259285, 0.056333333253860474, 0.056333333253860474, 0.056333333253860474, 0.05766666680574417, 0.05833333358168602, 0.05833333358168602, 0.058666665107011795, 0.058666665107011795, 0.058666665107011795, 0.058666665107011795, 0.058666665107011795, 0.05900000035762787, 0.059333331882953644, 0.05966666713356972, 0.05999999865889549, 0.06066666543483734, 0.06066666543483734, 0.06066666543483734, 0.061666667461395264, 0.06199999898672104, 0.06133333221077919, 0.061666667461395264, 0.06233333423733711, 0.06233333423733711, 0.06233333423733711, 0.06266666948795319, 0.06233333423733711, 0.06300000101327896, 0.06300000101327896, 0.06300000101327896, 0.06300000101327896, 0.06266666948795319, 0.06300000101327896]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 5, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 0, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 64, 51, 41, 8, 79, 86, 52, 44], [1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [3, 0, 5, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [45, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [4, 3, 2, 0], [5, 0], [12], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [5, 0, 6, 9, 7, 5, 3, 1, 1, 1, 9, 2, 6, 5, 4, 6, 9, 3, 1, 4, 5, 8, 1, 0, 2, 4, 3, 1, 9, 9, 9, 2, 4, 6, 4, 2, 3, 8, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [3, 0, 2, 2, 2, 0, 3, 0, 0, 3, 2, 2, 3, 3, 1, 0, 3, 2, 0, 0, 3, 2, 3, 2, 1, 0, 0, 2, 0], [43, 9, 45, 4, 34, 14, 69, 20, 87, 76, 30, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.03514285758137703, "mapping_values": [1, 4, 4, 3, 1, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 2, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.negative(sigma))", "other_info": {"loss": [2.301683187484741, 2.30216383934021, 2.302485942840576, 2.302131414413452, 2.3022191524505615, 2.3013980388641357], "accuracy": [0.09074098616838455, 0.09166556596755981, 0.09747721254825592, 0.09774138033390045, 0.08994849026203156, 0.08942015469074249], "val_loss": [2.29978084564209, 2.29978084564209, 2.29978084564209, 2.29978084564209, 2.29978084564209, 2.29978084564209], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 5, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 0, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [53, 32, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [3, 0, 5, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [45, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [4, 3, 2, 0], [5, 0], [12], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 0, 6, 9, 7, 5, 3, 1, 1, 1, 9, 2, 6, 5, 4, 6, 9, 3, 1, 4, 5, 8, 1, 0, 2, 4, 3, 1, 9, 9, 9, 2, 4, 6, 4, 2, 3, 8, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [3, 0, 2, 2, 2, 0, 3, 0, 0, 3, 2, 2, 3, 3, 1, 0, 3, 2, 0, 0, 3, 2, 3, 2, 1, 0, 0, 2, 0], [43, 9, 45, 4, 34, 14, 69, 20, 87, 76, 30, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.03514285758137703, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(sigma), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.301683187484741, 2.30216383934021, 2.302485942840576, 2.302131414413452, 2.3022191524505615, 2.3013980388641357], "accuracy": [0.09074098616838455, 0.09166556596755981, 0.09747721254825592, 0.09774138033390045, 0.08994849026203156, 0.08942015469074249], "val_loss": [2.29978084564209, 2.29978084564209, 2.29978084564209, 2.29978084564209, 2.29978084564209, 2.29978084564209], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 5, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 1, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [83, 32, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [4, 0, 5, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [45, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [4, 3, 2, 0], [5, 0], [12], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 0, 6, 9, 7, 5, 3, 1, 1, 1, 9, 2, 6, 5, 4, 6, 9, 3, 1, 4, 5, 8, 1, 0, 2, 4, 3, 1, 9, 9, 9, 2, 4, 6, 4, 2, 3, 8, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [2, 3, 2, 2, 2, 0, 3, 0, 0, 3, 2, 2, 3, 3, 1, 0, 3, 2, 0, 0, 3, 2, 3, 2, 1, 0, 0, 2, 0], [43, 9, 45, 4, 34, 14, 69, 20, 87, 76, 30, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.03514285758137703, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.negative(sigma))", "other_info": {"loss": [2.301683187484741, 2.30216383934021, 2.302485942840576, 2.302131414413452, 2.3022191524505615, 2.3013980388641357], "accuracy": [0.09074098616838455, 0.09166556596755981, 0.09747721254825592, 0.09774138033390045, 0.08994849026203156, 0.08942015469074249], "val_loss": [2.29978084564209, 2.29978084564209, 2.29978084564209, 2.29978084564209, 2.29978084564209, 2.29978084564209], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 0, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 32, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [3, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [3, 0, 5, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [45, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [4, 3, 2, 0], [5, 0], [12], [1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [0, 2, 6, 9, 4, 5, 3, 1, 1, 1, 0, 2, 6, 5, 4, 6, 9, 3, 1, 4, 5, 8, 1, 1, 2, 4, 8, 1, 9, 9, 9, 2, 4, 6, 4, 2, 3, 8, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [2, 3, 2, 2, 2, 0, 3, 0, 0, 3, 2, 2, 3, 3, 1, 0, 3, 2, 0, 0, 3, 2, 3, 2, 1, 0, 0, 2, 0], [43, 9, 45, 4, 34, 14, 69, 20, 87, 76, 30, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.03342857211828232, "mapping_values": [1, 2, 2, 1, 1, 1, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.301788568496704, 2.302640199661255, 2.3033032417297363, 2.303340435028076, 2.303938388824463, 2.303436040878296], "accuracy": [0.09047681838274002, 0.08928807079792023, 0.09681680053472519, 0.09774138033390045, 0.08915598690509796, 0.08770307898521423], "val_loss": [2.300044059753418, 2.300360918045044, 2.3006646633148193, 2.3009989261627197, 2.301445960998535, 2.3018476963043213], "val_accuracy": [0.03566666692495346, 0.03433333337306976, 0.03433333337306976, 0.03400000184774399, 0.03133333474397659, 0.030666666105389595]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [7, 4, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 2, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 32, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 3, 2, 4, 3, 8, 0, 1, 9, 6, 8, 2, 3, 9, 3, 9, 0, 2, 2, 0, 9], [3, 0, 5, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [45, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0], [4, 3, 2, 0], [5, 0], [12], [1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 0, 6, 9, 7, 5, 3, 1, 1, 1, 9, 2, 6, 5, 4, 6, 9, 3, 1, 4, 5, 8, 1, 0, 2, 4, 3, 1, 9, 9, 9, 2, 4, 6, 4, 2, 3, 8, 9, 2, 5, 0, 1, 8, 4, 7, 1, 2, 5, 2, 9], [2, 0, 2, 2, 2, 0, 3, 0, 0, 3, 2, 2, 3, 3, 1, 0, 3, 2, 0, 0, 3, 2, 3, 2, 1, 0, 0, 2, 0], [43, 9, 45, 4, 34, 14, 69, 20, 87, 76, 30, 45, 51, 66, 54, 91, 82, 43]], "fitness": -0.030571429058909416, "mapping_values": [1, 5, 5, 3, 2, 2, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3021371364593506, 2.3041415214538574, 2.306309461593628, 2.307983636856079, 2.3114852905273438, 2.3131215572357178], "accuracy": [0.09074098616838455, 0.08809932321310043, 0.08875974267721176, 0.09021265059709549, 0.07819310575723648, 0.07660810649394989], "val_loss": [2.300856828689575, 2.3024098873138428, 2.304084539413452, 2.306121349334717, 2.3088901042938232, 2.311619520187378], "val_accuracy": [0.03400000184774399, 0.028333334252238274, 0.027666667476296425, 0.0273333340883255, 0.02666666731238365, 0.030666666105389595]}}]