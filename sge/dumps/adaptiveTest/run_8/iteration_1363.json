[{"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 7, 0, 8, 4, 2, 9, 2, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [3, 4, 0, 3, 1, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [1, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0], [2, 3, 0, 0], [4, 0], [38], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 1, 3, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 9, 45, 71, 34, 14, 2]], "fitness": -0.828000009059906, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.1016218662261963, 1.816730260848999, 1.4404218196868896, 1.0347316265106201, 0.9002255201339722, 0.795045793056488, 0.7491868138313293, 0.6931620836257935, 0.6669594049453735, 0.6243093013763428, 0.6183682084083557, 0.5726235508918762, 0.6015073657035828, 0.5563244223594666, 0.5476981997489929, 0.512075662612915, 0.5311818718910217, 0.5044044256210327, 0.5037005543708801, 0.4775424897670746, 0.46669435501098633, 0.4562373757362366, 0.463313490152359, 0.4498649835586548, 0.4478446841239929, 0.43038880825042725, 0.43553587794303894, 0.4326871931552887, 0.4146847724914551, 0.4044809937477112, 0.409003347158432, 0.3865114748477936, 0.3984258472919464, 0.3884595036506653], "accuracy": [0.3019416332244873, 0.42464667558670044, 0.5105006098747253, 0.6124686598777771, 0.6586976647377014, 0.6997754573822021, 0.7232862114906311, 0.7360982894897461, 0.7413815855979919, 0.7668735980987549, 0.761590301990509, 0.7841764688491821, 0.769911527633667, 0.7897239327430725, 0.7959318161010742, 0.8090080618858337, 0.800818920135498, 0.8050455451011658, 0.8101968169212341, 0.8222163319587708, 0.8249900937080383, 0.830669641494751, 0.824329674243927, 0.8333113193511963, 0.8314621448516846, 0.8396512866020203, 0.8350284099578857, 0.8399154543876648, 0.8467837572097778, 0.8507462739944458, 0.8453308939933777, 0.8578787446022034, 0.852331280708313, 0.8552370667457581], "val_loss": [1.8328509330749512, 1.9955533742904663, 0.9718940258026123, 0.8130010366439819, 0.6773900389671326, 0.7504140734672546, 0.6288957595825195, 0.6021348237991333, 0.541047990322113, 0.582600474357605, 0.5456143617630005, 0.5703561305999756, 0.4930426776409149, 0.47285252809524536, 0.4755246639251709, 0.5268993973731995, 0.46693500876426697, 0.4926176071166992, 0.5226540565490723, 0.4653654098510742, 0.4361407458782196, 0.4637596011161804, 0.43725520372390747, 0.42176008224487305, 0.41616812348365784, 0.46913525462150574, 0.4033547341823578, 0.44233885407447815, 0.39657658338546753, 0.41973063349723816, 0.4017504155635834, 0.45053011178970337, 0.39449968934059143, 0.4632616341114044], "val_accuracy": [0.39800000190734863, 0.46966665983200073, 0.6460000276565552, 0.6863333582878113, 0.7400000095367432, 0.6866666674613953, 0.7443333268165588, 0.7586666941642761, 0.7956666946411133, 0.7576666474342346, 0.7923333048820496, 0.7699999809265137, 0.8240000009536743, 0.8259999752044678, 0.8203333616256714, 0.8036666512489319, 0.8289999961853027, 0.8036666512489319, 0.7916666865348816, 0.8266666531562805, 0.8396666646003723, 0.8346666693687439, 0.8463333249092102, 0.8486666679382324, 0.8463333249092102, 0.8213333487510681, 0.8539999723434448, 0.8379999995231628, 0.856333315372467, 0.8500000238418579, 0.8536666631698608, 0.8353333473205566, 0.8560000061988831, 0.8336666822433472]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [7, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 0, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [12, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 7, 0, 8, 4, 2, 3, 2, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [2, 4, 0, 3, 1, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [1, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0], [2, 3, 0, 0], [6, 0], [38], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 3, 3, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 9, 45, 71, 34, 14, 2]], "fitness": -0.8059999942779541, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.101609230041504, 1.811571717262268, 1.4793479442596436, 0.9656696319580078, 0.8652203679084778, 0.7680689096450806, 0.7658665180206299, 0.6871832013130188, 0.6801818013191223, 0.6277070045471191, 0.6201109290122986, 0.5773448348045349, 0.5567966103553772, 0.5642157793045044, 0.5500054955482483, 0.5152587890625, 0.5409919023513794, 0.504767119884491, 0.5055779814720154], "accuracy": [0.30180954933166504, 0.4243825078010559, 0.49649980664253235, 0.6379606127738953, 0.6837934255599976, 0.71100252866745, 0.7063795924186707, 0.7436270117759705, 0.7433628439903259, 0.7619865536689758, 0.7672698497772217, 0.7800818681716919, 0.7938185334205627, 0.7877426743507385, 0.7921014428138733, 0.8072909712791443, 0.7948752045631409, 0.8090080618858337, 0.8115176558494568], "val_loss": [1.8337949514389038, 1.9852575063705444, 0.860287606716156, 0.8889946341514587, 0.692708432674408, 0.6048622131347656, 0.6447790265083313, 0.5992070436477661, 0.541880190372467, 0.6049439907073975, 0.5548009276390076, 0.48349031805992126, 0.4916926324367523, 0.48267093300819397, 0.4822808802127838, 0.5477775931358337, 0.4664633274078369, 0.5085236430168152, 0.5096253752708435], "val_accuracy": [0.39800000190734863, 0.4716666638851166, 0.6790000200271606, 0.6880000233650208, 0.7403333187103271, 0.7673333287239075, 0.753000020980835, 0.7756666541099548, 0.7873333096504211, 0.7509999871253967, 0.781333327293396, 0.812333345413208, 0.8149999976158142, 0.8303333520889282, 0.8183333277702332, 0.7896666526794434, 0.8276666402816772, 0.7956666946411133, 0.8026666641235352]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [7, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 0, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [3, 1, 0, 8, 2, 2, 9, 2, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [2, 4, 0, 3, 1, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [1, 32, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0], [2, 3, 0, 0], [4, 0], [38], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 3, 3, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 9, 45, 71, 34, 14, 2]], "fitness": -0.8040000200271606, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 8, 5, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.negative(tf.math.add(beta, beta)), tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(grad, tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(grad, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.1013500690460205, 1.840713381767273, 1.3583422899246216, 0.9795129299163818, 0.9198826551437378, 0.7501696348190308, 0.7893582582473755, 0.717460036277771, 0.6812652945518494, 0.6206250786781311, 0.6297253966331482, 0.5860969424247742, 0.577992856502533, 0.555103600025177, 0.5381692051887512, 0.5330677032470703, 0.520065426826477, 0.5175513029098511, 0.5078825354576111], "accuracy": [0.30180954933166504, 0.4171179533004761, 0.5357284545898438, 0.6384889483451843, 0.6581693291664124, 0.7214370369911194, 0.702681303024292, 0.7279091477394104, 0.7386078238487244, 0.7681944370269775, 0.7598732113838196, 0.7798177003860474, 0.7835160493850708, 0.7866860628128052, 0.7992339134216309, 0.8029322624206543, 0.805177628993988, 0.8024039268493652, 0.8082155585289001], "val_loss": [1.8358532190322876, 1.9621061086654663, 1.1230379343032837, 0.9368961453437805, 0.6453897953033447, 0.8382673263549805, 0.7000331282615662, 0.6164537668228149, 0.561327338218689, 0.5966832041740417, 0.5424729585647583, 0.48594963550567627, 0.5238567590713501, 0.47696658968925476, 0.48413756489753723, 0.5123338103294373, 0.5015354156494141, 0.49209728837013245, 0.5033345222473145], "val_accuracy": [0.39533331990242004, 0.47466665506362915, 0.6086666584014893, 0.6259999871253967, 0.7620000243186951, 0.6783333420753479, 0.7523333430290222, 0.749666690826416, 0.7863333225250244, 0.7483333349227905, 0.7793333530426025, 0.8096666932106018, 0.8050000071525574, 0.8270000219345093, 0.8223333358764648, 0.8103333115577698, 0.8033333420753479, 0.815666675567627, 0.8090000152587891]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [7, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 7, 0, 8, 4, 9, 9, 2, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [2, 4, 0, 3, 1, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [1, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0], [2, 3, 0, 0], [4, 0], [38], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 3, 3, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [16, 9, 45, 71, 34, 14, 2]], "fitness": -0.576285719871521, "mapping_values": [1, 3, 3, 1, 2, 0, 9, 9, 7, 2, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))))), grad), tf.math.add(beta, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.3010671138763428, 2.298264503479004, 2.298125982284546, 2.2937049865722656, 2.292217493057251, 2.290881395339966, 2.287843942642212, 2.283752918243408, 2.2811803817749023, 2.279026746749878, 2.2788589000701904, 2.277430534362793, 2.272730588912964, 2.2704038619995117, 2.2674496173858643, 2.2639689445495605, 2.2625732421875, 2.260929822921753, 2.2572600841522217, 2.2558627128601074, 2.2496795654296875, 2.2493066787719727, 2.245609998703003, 2.2427818775177, 2.2405619621276855, 2.2368617057800293, 2.2352283000946045, 2.230818748474121, 2.228494167327881, 2.2228052616119385, 2.2213001251220703, 2.2174489498138428, 2.2135519981384277, 2.210336208343506, 2.207005739212036, 2.202785015106201, 2.2014458179473877, 2.1940391063690186, 2.1902594566345215, 2.1877760887145996, 2.181678056716919, 2.177215099334717, 2.171224594116211, 2.1651811599731445, 2.1614131927490234, 2.15759015083313, 2.1518471240997314, 2.1467158794403076, 2.1410863399505615, 2.1343719959259033, 2.1292481422424316, 2.1215405464172363, 2.1177382469177246, 2.107825756072998, 2.101041078567505, 2.0956761837005615, 2.0870234966278076, 2.0772461891174316, 2.073612928390503, 2.0665512084960938, 2.059779167175293, 2.047896146774292, 2.036729574203491, 2.03041410446167, 2.0216898918151855, 2.012636661529541, 2.007678985595703, 1.995613694190979, 1.9846779108047485, 1.9762245416641235, 1.9661160707473755, 1.955574870109558, 1.9392740726470947, 1.9340903759002686, 1.9268300533294678, 1.9134047031402588, 1.9014875888824463, 1.8881958723068237, 1.8788694143295288, 1.8692632913589478, 1.8569647073745728, 1.8480604887008667, 1.83213472366333, 1.8220778703689575, 1.80755615234375, 1.7944309711456299, 1.787232518196106, 1.7714424133300781, 1.756669521331787, 1.7492806911468506, 1.7386035919189453, 1.727545976638794, 1.7162764072418213, 1.712092399597168, 1.6862802505493164, 1.6762415170669556, 1.6663379669189453, 1.6532620191574097, 1.639978051185608, 1.6314536333084106], "accuracy": [0.09153348207473755, 0.1006472036242485, 0.09628847241401672, 0.11081759631633759, 0.11557257920503616, 0.11940298229455948, 0.1290450394153595, 0.13657376170158386, 0.14595165848731995, 0.15215955674648285, 0.14780081808567047, 0.15770703554153442, 0.1702549159526825, 0.17474573850631714, 0.18319904804229736, 0.19178444147109985, 0.1982565075159073, 0.19997358322143555, 0.20591731369495392, 0.21318188309669495, 0.22652225196361542, 0.2277110069990158, 0.23180557787418365, 0.23761722445487976, 0.2502971887588501, 0.24976885318756104, 0.25676923990249634, 0.2627129852771759, 0.2639017403125763, 0.27341169118881226, 0.2805441915988922, 0.27565711736679077, 0.29097872972488403, 0.29837536811828613, 0.29877161979675293, 0.3089420199394226, 0.304979532957077, 0.311319500207901, 0.3135649263858795, 0.31343284249305725, 0.32743361592292786, 0.3299432098865509, 0.3327169418334961, 0.33786818385124207, 0.337339848279953, 0.35041606426239014, 0.3509443998336792, 0.3520010709762573, 0.354510635137558, 0.35503897070884705, 0.3579447865486145, 0.3667943477630615, 0.36560559272766113, 0.37168142199516296, 0.3653414249420166, 0.38053098320961, 0.38462555408477783, 0.38409721851348877, 0.39043718576431274, 0.39189010858535767, 0.3863426148891449, 0.390569269657135, 0.4039096534252167, 0.40681546926498413, 0.40787214040756226, 0.41024965047836304, 0.4095892310142517, 0.41328755021095276, 0.4177783727645874, 0.4154008626937866, 0.4224012792110443, 0.418570876121521, 0.4403645396232605, 0.4336283206939697, 0.4301941692829132, 0.4414212107658386, 0.43666622042655945, 0.4410249590873718, 0.44525161385536194, 0.44987452030181885, 0.44208163022994995, 0.45647865533828735, 0.4555540978908539, 0.4566107392311096, 0.46506404876708984, 0.4651961326599121, 0.4616298973560333, 0.46387532353401184, 0.469819039106369, 0.4714040458202362, 0.4737815260887146, 0.4822348356246948, 0.4788006842136383, 0.4741777777671814, 0.4842160940170288, 0.4811781942844391, 0.4858010709285736, 0.49187690019607544, 0.4908202290534973, 0.4939902126789093], "val_loss": [2.295274019241333, 2.292633533477783, 2.2899906635284424, 2.2873451709747314, 2.284733533859253, 2.28210711479187, 2.279449224472046, 2.2768168449401855, 2.2741551399230957, 2.2714903354644775, 2.268842935562134, 2.266141176223755, 2.2634377479553223, 2.2607080936431885, 2.257924795150757, 2.255093812942505, 2.2522456645965576, 2.249317169189453, 2.246399402618408, 2.243420362472534, 2.240328073501587, 2.237205982208252, 2.234009265899658, 2.2307395935058594, 2.227424144744873, 2.224008798599243, 2.2205731868743896, 2.2169811725616455, 2.213334321975708, 2.20955753326416, 2.2057344913482666, 2.201803207397461, 2.1977474689483643, 2.1936099529266357, 2.1893153190612793, 2.1849350929260254, 2.180511951446533, 2.175858497619629, 2.171065092086792, 2.1661529541015625, 2.1610398292541504, 2.1558070182800293, 2.1503450870513916, 2.1446852684020996, 2.1388773918151855, 2.1329641342163086, 2.126830816268921, 2.120530843734741, 2.114069938659668, 2.1074509620666504, 2.1006062030792236, 2.093515634536743, 2.0862772464752197, 2.078777551651001, 2.0710678100585938, 2.063154697418213, 2.0550119876861572, 2.0465571880340576, 2.0379886627197266, 2.0291714668273926, 2.020146369934082, 2.010845422744751, 2.0012459754943848, 1.9914124011993408, 1.9813940525054932, 1.9710934162139893, 1.9606878757476807, 1.9500073194503784, 1.9390108585357666, 1.9278380870819092, 1.916420578956604, 1.9047636985778809, 1.8927844762802124, 1.8806979656219482, 1.8684157133102417, 1.85585355758667, 1.8430724143981934, 1.8300085067749023, 1.8168556690216064, 1.8035207986831665, 1.7900804281234741, 1.7764922380447388, 1.7626878023147583, 1.7489012479782104, 1.7348753213882446, 1.7207725048065186, 1.706570029258728, 1.6923000812530518, 1.677854061126709, 1.66350257396698, 1.6492451429367065, 1.6348103284835815, 1.6205341815948486, 1.6064518690109253, 1.5920442342758179, 1.5776572227478027, 1.563227891921997, 1.5490082502365112, 1.534711480140686, 1.5206637382507324], "val_accuracy": [0.05066666752099991, 0.0663333311676979, 0.08533333241939545, 0.10300000011920929, 0.12066666781902313, 0.14866666495800018, 0.1733333319425583, 0.19099999964237213, 0.210999995470047, 0.23499999940395355, 0.25333333015441895, 0.27133333683013916, 0.28833332657814026, 0.3006666600704193, 0.3153333365917206, 0.32633334398269653, 0.3333333432674408, 0.3426666557788849, 0.3499999940395355, 0.35633334517478943, 0.36133334040641785, 0.3646666705608368, 0.3696666657924652, 0.3736666738986969, 0.3803333342075348, 0.38366666436195374, 0.38999998569488525, 0.39266666769981384, 0.39766666293144226, 0.4013333320617676, 0.40566667914390564, 0.4103333353996277, 0.41333332657814026, 0.41733333468437195, 0.42266666889190674, 0.42633333802223206, 0.4309999942779541, 0.4350000023841858, 0.4363333284854889, 0.4386666715145111, 0.4426666796207428, 0.4449999928474426, 0.4483333230018616, 0.4493333399295807, 0.4519999921321869, 0.4566666781902313, 0.46133333444595337, 0.46533334255218506, 0.4713333249092102, 0.4729999899864197, 0.47699999809265137, 0.4806666672229767, 0.4819999933242798, 0.4869999885559082, 0.49000000953674316, 0.49433332681655884, 0.49799999594688416, 0.500333309173584, 0.5040000081062317, 0.5073333382606506, 0.5113333463668823, 0.5143333077430725, 0.5170000195503235, 0.5206666588783264, 0.5236666798591614, 0.527999997138977, 0.5316666960716248, 0.5356666445732117, 0.5366666913032532, 0.5386666655540466, 0.5429999828338623, 0.54666668176651, 0.5483333468437195, 0.5490000247955322, 0.550000011920929, 0.5513333082199097, 0.5536666512489319, 0.5553333163261414, 0.559333324432373, 0.562333345413208, 0.562666654586792, 0.5643333196640015, 0.5649999976158142, 0.5666666626930237, 0.5703333616256714, 0.5703333616256714, 0.5706666707992554, 0.5759999752044678, 0.5803333520889282, 0.5806666612625122, 0.581333339214325, 0.5816666483879089, 0.5836666822433472, 0.5849999785423279, 0.5860000252723694, 0.5863333344459534, 0.5879999995231628, 0.5889999866485596, 0.5926666855812073, 0.5946666598320007]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 7, 0, 8, 4, 2, 9, 2, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [2, 4, 0, 3, 1, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [1, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0], [2, 3, 0, 0], [4, 0], [38], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 3, 3, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [16, 9, 45, 71, 34, 14, 2]], "fitness": -0.576285719871521, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 9, 3, 3, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), beta), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))))))), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.3010671138763428, 2.298264503479004, 2.298125982284546, 2.2937049865722656, 2.292217493057251, 2.290881395339966, 2.287843942642212, 2.283752918243408, 2.2811803817749023, 2.279026746749878, 2.2788591384887695, 2.277430534362793, 2.272730588912964, 2.2704038619995117, 2.267449378967285, 2.2639689445495605, 2.2625732421875, 2.260929822921753, 2.2572600841522217, 2.2558627128601074, 2.2496798038482666, 2.2493062019348145, 2.245609760284424, 2.2427818775177, 2.2405619621276855, 2.2368617057800293, 2.2352283000946045, 2.230818748474121, 2.228494167327881, 2.2228052616119385, 2.2213001251220703, 2.217449188232422, 2.2135517597198486, 2.210336208343506, 2.2070059776306152, 2.202785015106201, 2.2014458179473877, 2.1940388679504395, 2.1902592182159424, 2.1877760887145996, 2.18167781829834, 2.1772146224975586, 2.171224355697632, 2.1651809215545654, 2.1614129543304443, 2.15759015083313, 2.1518471240997314, 2.1467154026031494, 2.1410861015319824, 2.134371757507324, 2.1292479038238525, 2.121540069580078, 2.117737293243408, 2.107825517654419, 2.101040840148926, 2.0956759452819824, 2.0870230197906494, 2.0772457122802734, 2.0736119747161865, 2.0665504932403564, 2.059779167175293, 2.047895908355713, 2.036729097366333, 2.030413866043091, 2.0216898918151855, 2.0126359462738037, 2.0076780319213867, 1.9956125020980835, 1.9846769571304321, 1.9762234687805176, 1.9661152362823486, 1.9555743932724, 1.9392728805541992, 1.9340890645980835, 1.9268287420272827, 1.9134032726287842, 1.9014860391616821, 1.8881947994232178, 1.8788678646087646, 1.8692618608474731, 1.8569629192352295, 1.848058819770813, 1.8321324586868286, 1.822075605392456, 1.8075529336929321, 1.7944278717041016, 1.787229061126709, 1.7714388370513916, 1.7566659450531006, 1.749276876449585, 1.738599181175232, 1.727541208267212, 1.7162717580795288, 1.7120877504348755, 1.6862752437591553, 1.6762360334396362, 1.6663316488265991, 1.653254747390747, 1.6399704217910767, 1.6314455270767212], "accuracy": [0.09153348207473755, 0.1006472036242485, 0.09628847241401672, 0.11081759631633759, 0.11557257920503616, 0.11940298229455948, 0.1290450394153595, 0.13657376170158386, 0.14595165848731995, 0.15215955674648285, 0.14780081808567047, 0.15770703554153442, 0.1702549159526825, 0.17474573850631714, 0.18319904804229736, 0.19178444147109985, 0.1982565075159073, 0.19997358322143555, 0.20591731369495392, 0.21318188309669495, 0.22652225196361542, 0.2277110069990158, 0.23180557787418365, 0.23761722445487976, 0.2502971887588501, 0.24976885318756104, 0.25676923990249634, 0.2627129852771759, 0.2639017403125763, 0.27341169118881226, 0.2805441915988922, 0.27565711736679077, 0.29097872972488403, 0.29837536811828613, 0.29877161979675293, 0.3089420199394226, 0.304979532957077, 0.311319500207901, 0.3135649263858795, 0.31343284249305725, 0.32743361592292786, 0.3299432098865509, 0.3327169418334961, 0.33786818385124207, 0.337339848279953, 0.35041606426239014, 0.3509443998336792, 0.3520010709762573, 0.354510635137558, 0.35503897070884705, 0.3579447865486145, 0.3667943477630615, 0.36560559272766113, 0.37168142199516296, 0.36520934104919434, 0.38053098320961, 0.38462555408477783, 0.38409721851348877, 0.3903051018714905, 0.39189010858535767, 0.3863426148891449, 0.390569269657135, 0.40404173731803894, 0.40668338537216187, 0.40787214040756226, 0.41024965047836304, 0.4095892310142517, 0.41328755021095276, 0.4177783727645874, 0.4155329465866089, 0.4224012792110443, 0.418570876121521, 0.4403645396232605, 0.4336283206939697, 0.4301941692829132, 0.4414212107658386, 0.43666622042655945, 0.4410249590873718, 0.44525161385536194, 0.44987452030181885, 0.44208163022994995, 0.45647865533828735, 0.4555540978908539, 0.4566107392311096, 0.46506404876708984, 0.4651961326599121, 0.4616298973560333, 0.46387532353401184, 0.469819039106369, 0.4714040458202362, 0.4737815260887146, 0.4822348356246948, 0.4788006842136383, 0.47404569387435913, 0.4843481779098511, 0.4811781942844391, 0.4858010709285736, 0.49187690019607544, 0.4908202290534973, 0.4939902126789093], "val_loss": [2.295274019241333, 2.292633533477783, 2.2899906635284424, 2.2873451709747314, 2.284733533859253, 2.28210711479187, 2.279449224472046, 2.2768168449401855, 2.2741551399230957, 2.2714903354644775, 2.268842935562134, 2.266141176223755, 2.2634377479553223, 2.2607080936431885, 2.257924795150757, 2.255094051361084, 2.2522456645965576, 2.249317169189453, 2.2463996410369873, 2.243420362472534, 2.240328073501587, 2.237205982208252, 2.234009265899658, 2.2307395935058594, 2.2274234294891357, 2.224008560180664, 2.2205731868743896, 2.2169811725616455, 2.213334321975708, 2.20955753326416, 2.2057344913482666, 2.201803207397461, 2.1977477073669434, 2.1936099529266357, 2.1893150806427, 2.1849348545074463, 2.180511713027954, 2.17585825920105, 2.1710643768310547, 2.1661529541015625, 2.1610398292541504, 2.155806541442871, 2.1503450870513916, 2.1446847915649414, 2.1388766765594482, 2.1329641342163086, 2.1268303394317627, 2.120530605316162, 2.114069700241089, 2.107450485229492, 2.1006062030792236, 2.093515396118164, 2.0862770080566406, 2.078777313232422, 2.0710678100585938, 2.0631542205810547, 2.055011749267578, 2.0465567111968994, 2.0379881858825684, 2.0291714668273926, 2.020145893096924, 2.010845184326172, 2.0012459754943848, 1.9914122819900513, 1.9813932180404663, 1.9710924625396729, 1.9606863260269165, 1.9500060081481934, 1.939009428024292, 1.927836537361145, 1.9164191484451294, 1.9047620296478271, 1.8927829265594482, 1.880696177482605, 1.8684139251708984, 1.8558515310287476, 1.84307062625885, 1.8300062417984009, 1.816853404045105, 1.8035181760787964, 1.790077805519104, 1.7764889001846313, 1.7626845836639404, 1.7488974332809448, 1.7348716259002686, 1.7207685708999634, 1.7065662145614624, 1.6922965049743652, 1.6778498888015747, 1.6634984016418457, 1.649240255355835, 1.6348049640655518, 1.6205283403396606, 1.6064459085464478, 1.5920380353927612, 1.577648639678955, 1.563218116760254, 1.5489964485168457, 1.5346992015838623, 1.5206512212753296], "val_accuracy": [0.05066666752099991, 0.0663333311676979, 0.08533333241939545, 0.10300000011920929, 0.12066666781902313, 0.14866666495800018, 0.1733333319425583, 0.19099999964237213, 0.210999995470047, 0.23499999940395355, 0.25333333015441895, 0.27133333683013916, 0.28833332657814026, 0.3006666600704193, 0.3153333365917206, 0.32633334398269653, 0.3333333432674408, 0.3426666557788849, 0.3499999940395355, 0.35633334517478943, 0.36133334040641785, 0.3646666705608368, 0.3696666657924652, 0.3736666738986969, 0.3803333342075348, 0.38366666436195374, 0.38999998569488525, 0.3930000066757202, 0.39766666293144226, 0.4013333320617676, 0.40566667914390564, 0.4103333353996277, 0.41333332657814026, 0.41733333468437195, 0.42266666889190674, 0.42633333802223206, 0.4309999942779541, 0.4350000023841858, 0.4363333284854889, 0.4386666715145111, 0.4426666796207428, 0.4449999928474426, 0.4483333230018616, 0.4493333399295807, 0.4519999921321869, 0.4566666781902313, 0.46133333444595337, 0.46533334255218506, 0.4713333249092102, 0.4729999899864197, 0.47699999809265137, 0.4806666672229767, 0.4819999933242798, 0.4869999885559082, 0.49000000953674316, 0.49433332681655884, 0.49799999594688416, 0.500333309173584, 0.5040000081062317, 0.5073333382606506, 0.5113333463668823, 0.5143333077430725, 0.5170000195503235, 0.5206666588783264, 0.5236666798591614, 0.5276666879653931, 0.5316666960716248, 0.5356666445732117, 0.5366666913032532, 0.5386666655540466, 0.5429999828338623, 0.54666668176651, 0.5483333468437195, 0.5490000247955322, 0.550000011920929, 0.5513333082199097, 0.5536666512489319, 0.5553333163261414, 0.559333324432373, 0.562333345413208, 0.562666654586792, 0.5643333196640015, 0.5649999976158142, 0.5666666626930237, 0.5703333616256714, 0.5703333616256714, 0.5706666707992554, 0.5759999752044678, 0.5803333520889282, 0.5806666612625122, 0.581333339214325, 0.5816666483879089, 0.5836666822433472, 0.5849999785423279, 0.5860000252723694, 0.5866666436195374, 0.5879999995231628, 0.5889999866485596, 0.5926666855812073, 0.5946666598320007]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [7, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 2, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 7, 0, 8, 4, 2, 9, 4, 0, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [0, 4, 0, 3, 1, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [1, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0], [2, 3, 0, 0], [4, 0], [38], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 1, 3, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [16, 9, 45, 71, 34, 14, 2]], "fitness": -0.45171427726745605, "mapping_values": [1, 5, 5, 2, 3, 0, 10, 10, 7, 3, 3, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, grad))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad)), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))))))), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.3014938831329346, 2.2998886108398438, 2.3009493350982666, 2.297736406326294, 2.2973785400390625, 2.2972564697265625, 2.295497179031372, 2.2924997806549072, 2.2911720275878906, 2.2901508808135986, 2.291090488433838, 2.2910752296447754, 2.287470579147339, 2.286395311355591, 2.2848246097564697, 2.282777786254883, 2.2825911045074463, 2.2825241088867188, 2.279909372329712, 2.2800536155700684, 2.2756426334381104, 2.276730537414551, 2.274883985519409, 2.2735695838928223, 2.272831439971924, 2.271331548690796, 2.2710156440734863, 2.2690186500549316, 2.2684545516967773, 2.265193462371826, 2.2657620906829834, 2.26399564743042, 2.2623980045318604, 2.2614269256591797, 2.2609081268310547, 2.2588160037994385, 2.2595279216766357, 2.2556798458099365, 2.2549617290496826, 2.255068778991699, 2.2524497509002686, 2.2508656978607178, 2.248500108718872, 2.2466211318969727, 2.246324062347412, 2.2458748817443848, 2.2441065311431885, 2.2428441047668457, 2.2418372631073, 2.2393152713775635, 2.2381751537323, 2.2361130714416504, 2.2364754676818848, 2.2324540615081787, 2.230858325958252, 2.2305374145507812, 2.2282936573028564, 2.225332021713257, 2.2253289222717285, 2.2243199348449707, 2.2233803272247314, 2.2192318439483643, 2.2161295413970947, 2.215471029281616, 2.2134571075439453, 2.21225643157959, 2.2119734287261963, 2.2084832191467285, 2.2065982818603516, 2.205099105834961, 2.2030093669891357, 2.2006113529205322, 2.1958060264587402, 2.195880651473999, 2.1958553791046143, 2.193120241165161, 2.1893882751464844, 2.186863422393799, 2.1854562759399414, 2.18499755859375, 2.182312250137329, 2.1814475059509277, 2.177389621734619, 2.174971580505371, 2.1716253757476807, 2.168874502182007, 2.169556140899658, 2.1642327308654785, 2.1606462001800537, 2.159231185913086, 2.1586685180664062, 2.1559033393859863, 2.1529717445373535, 2.1533761024475098, 2.144956111907959, 2.14389967918396, 2.1417295932769775, 2.1365606784820557, 2.1354403495788574, 2.1322379112243652], "accuracy": [0.09060890227556229, 0.09642054885625839, 0.09060890227556229, 0.10289261490106583, 0.10130762308835983, 0.10460969805717468, 0.10896842926740646, 0.11227050423622131, 0.11557257920503616, 0.12362963706254959, 0.11662924289703369, 0.12019548565149307, 0.12996962666511536, 0.13181878626346588, 0.13974376022815704, 0.13881917297840118, 0.1460837423801422, 0.1422533392906189, 0.14542332291603088, 0.15110288560390472, 0.16259410977363586, 0.1570466309785843, 0.16259410977363586, 0.16391493380069733, 0.17223615944385529, 0.17250032722949982, 0.1802932173013687, 0.17500990629196167, 0.17699114978313446, 0.19310526549816132, 0.187689870595932, 0.19231277704238892, 0.19482234120368958, 0.20076608657836914, 0.2040681540966034, 0.20684190094470978, 0.20618148148059845, 0.21265354752540588, 0.20763438940048218, 0.20842689275741577, 0.21872936189174652, 0.2250693440437317, 0.2285034954547882, 0.23273015022277832, 0.2343151569366455, 0.23854179680347443, 0.24224013090133667, 0.2374851405620575, 0.24316470324993134, 0.24184387922286987, 0.2513538599014282, 0.25756174325942993, 0.24699510633945465, 0.26020342111587524, 0.25861841440200806, 0.260071337223053, 0.27143046259880066, 0.2712983787059784, 0.27327960729599, 0.27103421092033386, 0.270109623670578, 0.278959184885025, 0.2863558232784271, 0.28622373938560486, 0.2899220585823059, 0.2926958203315735, 0.28701624274253845, 0.29441288113594055, 0.29705455899238586, 0.29203540086746216, 0.29679039120674133, 0.3023378551006317, 0.31224408745765686, 0.3109232485294342, 0.31197991967201233, 0.32201823592185974, 0.31924447417259216, 0.32479196786880493, 0.3218861520290375, 0.32624489068984985, 0.31779158115386963, 0.32822611927986145, 0.33126401901245117, 0.3311319649219513, 0.3303394615650177, 0.3365473449230194, 0.33086779713630676, 0.3416985869407654, 0.34341567754745483, 0.33786818385124207, 0.34381189942359924, 0.3469819128513336, 0.34447231888771057, 0.33945319056510925, 0.35226520895957947, 0.351340651512146, 0.3541143834590912, 0.3583410382270813, 0.3568881154060364, 0.3559635579586029], "val_loss": [2.2965986728668213, 2.2952661514282227, 2.2939326763153076, 2.2925899028778076, 2.2912607192993164, 2.2899372577667236, 2.2886199951171875, 2.2873313426971436, 2.286025047302246, 2.284691095352173, 2.283376693725586, 2.2820661067962646, 2.2807769775390625, 2.2795069217681885, 2.2781898975372314, 2.276866912841797, 2.27555251121521, 2.2742037773132324, 2.272878885269165, 2.2715749740600586, 2.2702343463897705, 2.2688963413238525, 2.2675678730010986, 2.266192674636841, 2.264854907989502, 2.2634963989257812, 2.2621498107910156, 2.2607617378234863, 2.2593679428100586, 2.2579731941223145, 2.2565722465515137, 2.255152940750122, 2.253725051879883, 2.2522847652435303, 2.250812292098999, 2.2493438720703125, 2.24790620803833, 2.246417999267578, 2.244927406311035, 2.243435859680176, 2.2419400215148926, 2.240410566329956, 2.238863945007324, 2.237271785736084, 2.2356886863708496, 2.2341115474700928, 2.23245906829834, 2.230808734893799, 2.22916579246521, 2.227498769760132, 2.2258307933807373, 2.2240638732910156, 2.2223575115203857, 2.2205960750579834, 2.218809127807617, 2.216975212097168, 2.2151834964752197, 2.2132925987243652, 2.211428165435791, 2.2095699310302734, 2.207636833190918, 2.2057135105133057, 2.203709602355957, 2.2016897201538086, 2.1996495723724365, 2.1975841522216797, 2.195491313934326, 2.193392038345337, 2.191230535507202, 2.1891443729400635, 2.186995029449463, 2.184755325317383, 2.182453155517578, 2.1801576614379883, 2.177839756011963, 2.175482749938965, 2.1730611324310303, 2.1706080436706543, 2.1681244373321533, 2.1655805110931396, 2.1630094051361084, 2.1603646278381348, 2.1577858924865723, 2.155123472213745, 2.1523919105529785, 2.1495871543884277, 2.1467599868774414, 2.1439335346221924, 2.14101243019104, 2.13804030418396, 2.135099172592163, 2.132079839706421, 2.129072904586792, 2.126018762588501, 2.122859477996826, 2.119749069213867, 2.116565704345703, 2.113318920135498, 2.109987258911133, 2.106611967086792], "val_accuracy": [0.041999999433755875, 0.050999999046325684, 0.057999998331069946, 0.06833333522081375, 0.07833333313465118, 0.08699999749660492, 0.09433333575725555, 0.10400000214576721, 0.11033333092927933, 0.11999999731779099, 0.13600000739097595, 0.14866666495800018, 0.16066665947437286, 0.17166666686534882, 0.179666668176651, 0.19099999964237213, 0.1979999989271164, 0.20999999344348907, 0.2199999988079071, 0.23199999332427979, 0.24300000071525574, 0.2513333261013031, 0.2603333294391632, 0.27000001072883606, 0.27799999713897705, 0.2879999876022339, 0.29466667771339417, 0.30133333802223206, 0.30666667222976685, 0.31299999356269836, 0.320333331823349, 0.3269999921321869, 0.33033332228660583, 0.3330000042915344, 0.3386666774749756, 0.3426666557788849, 0.3466666638851166, 0.34933334589004517, 0.3503333330154419, 0.35466668009757996, 0.3583333194255829, 0.3596666753292084, 0.3630000054836273, 0.3646666705608368, 0.36766666173934937, 0.3686666786670685, 0.37166666984558105, 0.37400001287460327, 0.37566667795181274, 0.3773333430290222, 0.3799999952316284, 0.3803333342075348, 0.3813333213329315, 0.3843333423137665, 0.3853333294391632, 0.3876666724681854, 0.390666663646698, 0.3919999897480011, 0.39533331990242004, 0.3956666588783264, 0.3973333239555359, 0.4000000059604645, 0.40166667103767395, 0.40400001406669617, 0.40566667914390564, 0.40700000524520874, 0.40799999237060547, 0.4099999964237213, 0.41233333945274353, 0.414000004529953, 0.4163333475589752, 0.4189999997615814, 0.421999990940094, 0.4233333468437195, 0.42500001192092896, 0.4273333251476288, 0.42899999022483826, 0.43166667222976685, 0.4326666593551636, 0.43433332443237305, 0.43566668033599854, 0.43533334136009216, 0.43700000643730164, 0.43666666746139526, 0.43833333253860474, 0.43933331966400146, 0.4399999976158142, 0.4413333237171173, 0.44433334469795227, 0.4466666579246521, 0.4483333230018616, 0.4493333399295807, 0.45133334398269653, 0.45366665720939636, 0.4546666741371155, 0.4569999873638153, 0.45899999141693115, 0.46000000834465027, 0.460999995470047, 0.46433332562446594]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [7, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 7, 0, 8, 4, 2, 9, 2, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [1, 4, 0, 3, 1, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [1, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0], [2, 3, 0, 0], [0, 0], [38], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 1, 3, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 9, 45, 71, 34, 14, 2]], "fitness": -0.22514285147190094, "mapping_values": [1, 3, 3, 1, 2, 0, 6, 6, 4, 2, 0, 1, 1, 0, 1, 1, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, grad)), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, alpha)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.662562608718872, 2.2173023223876953, 2.3140170574188232, 2.310595750808716, 2.3049707412719727, 2.3033511638641357], "accuracy": [0.17910447716712952, 0.17619864642620087, 0.20763438940048218, 0.16338661313056946, 0.09826971590518951, 0.09972262382507324], "val_loss": [1.9967747926712036, 2.279500961303711, 2.1954472064971924, 2.306518793106079, 2.3034090995788574, 2.3028619289398193], "val_accuracy": [0.22833333909511566, 0.18566666543483734, 0.1653333306312561, 0.09866666793823242, 0.09866666793823242, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [7, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 1, 0, 8, 9, 2, 9, 2, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [4, 4, 3, 3, 0, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [1, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0], [2, 3, 0, 0], [4, 0], [38], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 2, 7, 5, 1, 3, 1, 4, 3, 9, 2, 0, 2, 2, 6, 3, 9], [0, 3, 3, 2, 2, 2, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [16, 9, 45, 71, 34, 14, 2]], "fitness": -0.11714285612106323, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.3227405548095703, 8.414131164550781, 58.339481353759766, 2.306823253631592, 2.303793430328369, 2.3031251430511475, 2.3040246963500977, 2.303405523300171, 2.3029558658599854, 2.3029932975769043], "accuracy": [0.11094967275857925, 0.10579843819141388, 0.0952318087220192, 0.09787346422672272, 0.09576013684272766, 0.09681680053472519, 0.10038304328918457, 0.09642054885625839, 0.09219389408826828, 0.09721305221319199], "val_loss": [2.302762269973755, 416.5517883300781, 2.308152437210083, 2.303622007369995, 2.302715539932251, 2.304879903793335, 2.3028717041015625, 2.3025949001312256, 2.3025808334350586, 2.3025736808776855], "val_accuracy": [0.09799999743700027, 0.0846666693687439, 0.09799999743700027, 0.10000000149011612, 0.10400000214576721, 0.0976666659116745, 0.0989999994635582, 0.1003333330154419, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [7, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 0, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 7, 0, 8, 4, 2, 9, 2, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [2, 4, 3, 3, 1, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [39, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0], [2, 3, 0, 0], [4, 0], [38], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 2, 2, 7, 5, 1, 3, 1, 4, 3, 9, 2, 0, 2, 2, 6, 3, 9], [0, 3, 3, 2, 2, 2, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 9, 45, 71, 34, 14, 2]], "fitness": -0.10199999809265137, "mapping_values": [1, 3, 3, 1, 2, 1, 13, 13, 8, 5, 1, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.subtract(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.math.add(grad, tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)))))), tf.math.add(grad, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), sigma), sigma)", "other_info": {"loss": [31.952314376831055, 2.8349132537841797, 4.314661979675293, 4.6165032386779785, 3.602151393890381, 3.374810218811035], "accuracy": [0.05824857950210571, 0.09879804402589798, 0.09840179979801178, 0.09959053993225098, 0.09879804402589798, 0.10077928751707077], "val_loss": [2.430577516555786, 3.577448844909668, 4.5538530349731445, 3.9452412128448486, 3.3230223655700684, 3.343519449234009], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [7, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 1, 0, 8, 5, 2, 9, 2, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [0, 3, 3, 3, 0, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [3, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 0, 1, 0, 1, 1], [0, 1, 1, 0], [2, 3, 0, 0], [4, 0], [38], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 2, 7, 5, 1, 3, 1, 4, 3, 9, 2, 0, 2, 2, 6, 3, 9], [0, 3, 3, 2, 2, 2, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 38, 45, 4, 34, 14, 2]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 9, 5, 4, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.math.add(tf.math.square(sigma), beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09470347315073013, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [7, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 0, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [71, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 7, 0, 8, 4, 2, 9, 2, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [0, 4, 0, 0, 1, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [1, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0], [2, 3, 0, 0], [4, 0], [38], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [1, 0, 3, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [16, 9, 45, 71, 34, 14, 2]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 13, 13, 8, 5, 4, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.math.add(grad, tf.math.add(beta, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3020737171173096, 2.302586555480957, 2.302586555480957, 2.302586078643799, 2.302586317062378, 2.3025858402252197, 2.3025877475738525], "accuracy": [0.0952318087220192, 0.09694888442754745, 0.09998679161071777, 0.09972262382507324, 0.0948355570435524, 0.09879804402589798, 0.10011887550354004], "val_loss": [2.302584648132324, 2.302584648132324, 2.3025851249694824, 2.302584648132324, 2.302584648132324, 2.302583694458008, 2.302583932876587], "val_accuracy": [0.10000000149011612, 0.10400000214576721, 0.10400000214576721, 0.10000000149011612, 0.09799999743700027, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [7, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [3, 1, 0, 0, 4, 2, 9, 2, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [2, 4, 0, 3, 1, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [1, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 0, 1, 0, 1, 1], [0, 1, 1, 0], [2, 3, 0, 0], [4, 0], [38], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [5, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 3, 3, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 9, 45, 71, 34, 14, 2]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 11, 11, 7, 4, 2, 3, 3, 1, 2, 1, 3, 2, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302072048187256, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 7, 0, 8, 4, 2, 9, 2, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [3, 4, 0, 3, 1, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [1, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0], [2, 3, 0, 0], [4, 0], [38], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 1, 3, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 9, 45, 71, 34, 14, 2]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.square(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.302072048187256, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025851249694824, 2.3025848865509033], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [7, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 1, 0, 8, 9, 2, 2, 2, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [0, 1, 3, 3, 0, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [14, 52, 90, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0], [2, 3, 0, 0], [4, 0], [38], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 4, 2, 7, 5, 1, 3, 1, 4, 3, 9, 2, 0, 2, 2, 6, 3, 9], [0, 3, 3, 2, 2, 2, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 38, 45, 4, 34, 14, 2]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 7, 4, 2, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.subtract(tf.math.negative(tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.sqrt(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302072048187256, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [7, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 7, 0, 8, 4, 2, 9, 2, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [3, 4, 0, 3, 1, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [1, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0], [2, 3, 0, 0], [4, 0], [38], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 1, 3, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 9, 45, 71, 34, 14, 2]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 7, 3, 2, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.negative(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.math.add(grad, tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06300356984138489, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 7, 0, 8, 4, 2, 9, 2, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [2, 4, 0, 3, 1, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [1, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0], [2, 3, 0, 0], [4, 0], [38], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 1, 3, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 9, 45, 71, 34, 14, 2]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.subtract(grad, tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.square(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302072048187256, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [7, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 7, 0, 8, 4, 2, 9, 2, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [2, 4, 0, 3, 1, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [1, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0], [2, 3, 0, 0], [4, 0], [38], [1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [7, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 1, 3, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [99, 9, 45, 71, 34, 14, 2]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302072048187256, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [7, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 8, 0, 8, 4, 2, 9, 8, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [2, 2, 0, 3, 1, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [1, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0], [2, 3, 0, 0], [4, 0], [38], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 3, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 3, 3, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 9, 45, 71, 34, 14, 2]], "fitness": -0.036571428179740906, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 4, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.sqrt(tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), sigma), sigma)", "other_info": {"loss": [2.3020689487457275, 2.3016653060913086, 2.3039472103118896, 2.3019638061523438, 2.3027493953704834, 2.303868532180786], "accuracy": [0.08955223858356476, 0.09325055778026581, 0.08426892012357712, 0.09219389408826828, 0.0870426595211029, 0.08875974267721176], "val_loss": [2.297966480255127, 2.297966480255127, 2.297966480255127, 2.297966480255127, 2.297966480255127, 2.297966480255127], "val_accuracy": [0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [7, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 5, 0, 8, 9, 2, 9, 2, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [0, 4, 0, 3, 1, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [1, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0], [2, 3, 0, 0], [4, 0], [38], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 1, 3, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 38, 45, 4, 34, 14, 2]], "fitness": -0.036571428179740906, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.3020689487457275, 2.3016653060913086, 2.3039472103118896, 2.3019638061523438, 2.3027493953704834, 2.303868532180786], "accuracy": [0.08955223858356476, 0.09325055778026581, 0.08426892012357712, 0.09219389408826828, 0.0870426595211029, 0.08875974267721176], "val_loss": [2.297966480255127, 2.297966480255127, 2.297966480255127, 2.297966480255127, 2.297966480255127, 2.297966480255127], "val_accuracy": [0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [7, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [3, 1, 0, 8, 4, 2, 9, 2, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [2, 4, 0, 3, 1, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [1, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0], [2, 3, 0, 0], [2, 0], [38], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 3, 3, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 9, 45, 71, 34, 14, 2]], "fitness": -0.036571428179740906, "mapping_values": [1, 3, 3, 1, 2, 0, 11, 11, 7, 4, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.sqrt(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.3020689487457275, 2.3016653060913086, 2.3039472103118896, 2.3019638061523438, 2.3027493953704834, 2.303868532180786], "accuracy": [0.08955223858356476, 0.09325055778026581, 0.08426892012357712, 0.09219389408826828, 0.0870426595211029, 0.08875974267721176], "val_loss": [2.297966480255127, 2.297966480255127, 2.297966480255127, 2.297966480255127, 2.297966480255127, 2.297966480255127], "val_accuracy": [0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293]}}]