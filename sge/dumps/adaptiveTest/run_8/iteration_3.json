[{"genotype": [[0], [1, 0, 0, 1, 1], [0, 1, 0, 1, 1], [2, 6], [0, 3, 2], [44], [1, 1, 1], [0, 0, 0, 1, 1], [4, 9, 9], [3], [65, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 1], [0], [3], [45]], "fitness": -0.23657143115997314, "mapping_values": [1, 5, 5, 2, 3, 1, 3, 3, 3, 0, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.7610047979597967, 2.254557154197829, 2.303789245485551, 2.303499501819986, 2.302875783354961, 2.3026413392271143], "accuracy": [0.16880200803279877, 0.15440496802330017, 0.0956280529499054, 0.09509972482919693, 0.09906221181154251, 0.09708096832036972], "val_loss": [1.8745312009538924, 1.974447386605399, 1.9736886024475098, 1.9735940524509974, 1.9735864911760603, 1.9735569953918457], "val_accuracy": [0.2096666693687439, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [1], [1], [2, 6], [3], [], [1, 0, 1], [0, 0, 0, 1, 1], [4, 9, 9], [4], [65, 70], [0, 0, 0, 1, 0], [1], [3, 3], [5], [], [0, 1, 0, 1, 1, 1], [0, 8, 3], [3], [45]], "fitness": -0.23657143115997314, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 3, 0, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.7610047979597967, 2.254557154197829, 2.303789245485551, 2.303499501819986, 2.302875783354961, 2.3026413392271143], "accuracy": [0.16880200803279877, 0.15440496802330017, 0.0956280529499054, 0.09509972482919693, 0.09906221181154251, 0.09708096832036972], "val_loss": [1.8745312009538924, 1.974447386605399, 1.9736886024475098, 1.9735940524509974, 1.9735864911760603, 1.9735569953918457], "val_accuracy": [0.2096666693687439, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 0, 1, 1], [1], [], [2], [44], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [4, 3, 8, 2, 3, 6, 4], [4, 5, 4, 5, 5, 2, 5], [65, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 1], [0], [1, 1, 3, 0, 3, 1, 0], [73, 6, 0]], "fitness": -0.23657143115997314, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 7, 7, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.multiply(tf.math.sqrt(grad), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad)))), tf.math.pow(tf.math.add(beta, beta), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.7610047979597967, 2.254557154197829, 2.303789245485551, 2.303499501819986, 2.302875783354961, 2.3026413392271143], "accuracy": [0.16880200803279877, 0.15440496802330017, 0.0956280529499054, 0.09509972482919693, 0.09906221181154251, 0.09708096832036972], "val_loss": [1.8745312009538924, 1.974447386605399, 1.9736886024475098, 1.9735940524509974, 1.9735864911760603, 1.9735569953918457], "val_accuracy": [0.2096666693687439, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1], [0, 1, 0, 0, 0, 1], [4, 2, 8, 9], [3, 0], [13, 40], [1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0], [4, 0, 2, 1, 0], [], [0, 1, 1], [0], [6], [5], [], [1], [9], [2], [87]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 4, 2, 2, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0812310129404068, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1], [1], [], [2], [], [1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0], [2], [42], [1], [], [], [], [], [0], [9], [2], [87]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303041412089999, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1], [0, 1, 1, 0, 1], [4, 6], [0, 3, 2], [86], [1, 1, 1], [1, 0, 0, 1, 1], [4, 6, 9], [3], [80, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 0, 1, 1], [5, 4], [3, 2], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.pow(sigma, beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0], [0, 1, 1], [2, 6], [0, 3, 2], [44], [0, 1, 1, 0], [1, 0, 0, 0, 1], [0, 0, 8], [3], [65, 70], [1], [], [], [], [], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 4, 7, 6, 1, 4, 4, 7, 2, 3, 9, 8, 2, 8, 9, 3, 1], [2, 0, 3, 2, 2, 1, 1, 1, 3, 3, 1], [45, 9, 39]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 28, 17, 11, 3], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(sigma, tf.math.subtract(beta, tf.math.pow(tf.math.pow(beta, tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), alpha))), tf.math.multiply(tf.math.subtract(sigma, sigma), alpha))))))", "other_info": {"loss": [1242069489.7532763, 23373675335.379738, 109454253208.97107, 305706435988.27106, 667033273540.5225, 1199411260043.6487], "accuracy": [0.09734513610601425, 0.09853387624025345, 0.10421344637870789, 0.1026284471154213, 0.10342095047235489, 0.09972262382507324], "val_loss": [4728052150.857142, 37813087670.85714, 127606540580.57143, 302466241097.1429, 590720120539.4286, 1020743310189.7142], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1], [1], [2, 6], [3, 1, 1], [], [1, 1, 1], [0, 0, 0, 1, 1], [9], [4], [26, 84], [1], [1], [], [], [], [0, 1, 0, 0, 1, 1], [7, 1, 5], [2, 2, 0], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.math.subtract(tf.math.square(beta), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [38905756.767343156, 926580570.2813367, 5410705221.891956, 18286087013.135384, 46759719128.94572, 95648493221.21147], "accuracy": [0.09734513610601425, 0.09853387624025345, 0.10421344637870789, 0.10249637067317963, 0.10342095047235489, 0.09972262382507324], "val_loss": [161006989.7142857, 1669350326.857143, 6980926171.428572, 19746793179.42857, 44570724644.57143, 86540121819.42857], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1], [1], [4, 4], [0, 2, 2], [44], [1, 1, 1], [1], [0, 4, 6], [4, 0, 2, 1, 0], [26, 84], [1], [1, 0, 1], [], [5], [], [0, 1], [9], [2, 2, 0], [61]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303041412089999, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1], [0, 1, 1], [4], [3, 0], [25], [0, 1], [0, 1], [0], [2], [], [1], [], [], [], [], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0], [7, 3, 7, 6, 5, 2, 7, 7, 2, 0, 3, 4, 8, 3, 7, 7, 8, 3, 0, 8, 3, 0, 1, 3, 4, 8, 4, 1, 3, 4, 4, 8, 9, 4, 8, 9, 9], [2, 1, 2, 1, 0, 1, 0, 3, 1, 2, 1, 2, 3, 0, 2, 1, 0, 0, 3, 2, 3, 0], [87, 54, 39, 41, 30, 78, 67, 48, 79]], "fitness": -0.10000000149011612, "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, grad), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.math.square(tf.math.add(tf.math.add(tf.math.add(tf.math.add(alpha, beta), alpha), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.multiply(alpha, tf.math.pow(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.multiply(tf.math.add(sigma, tf.math.add(alpha, tf.math.sqrt(beta))), tf.math.multiply(alpha, beta)))))))), tf.math.negative(tf.math.sqrt(tf.math.multiply(sigma, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), tf.math.negative(tf.math.subtract(beta, tf.math.multiply(alpha, tf.math.pow(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.pow(tf.math.subtract(tf.math.multiply(tf.math.pow(tf.math.pow(tf.math.sqrt(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), sigma), tf.math.pow(tf.math.sqrt(beta), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))), sigma), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))))))), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}, "mapping_values": [1, 3, 3, 1, 2, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 59, 37, 22, 9]}, {"genotype": [[0], [0, 1], [0, 1], [0], [3], [16], [1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 1, 1], [4, 9, 9], [5, 3, 2], [65, 70], [0, 0, 0, 1, 0], [1, 0, 1], [8, 5], [4], [], [0, 1, 0], [7, 9], [2], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1], [0, 1, 0, 1], [4, 8], [3, 1], [], [1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0], [4, 0, 2, 1, 0], [], [1], [], [], [], [], [1], [9], [2], [87]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [7.827969615706017, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.17263241112232208, 0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [945.7990025111607, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10400000214576721, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0], [1], [4, 6], [3], [16], [1, 0, 0, 1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 1], [3, 4, 2], [1, 3, 2, 4], [14], [1, 0, 1, 1, 0], [0], [], [], [], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [7, 3, 2, 6, 2, 7, 4, 5], [2, 1, 2, 3, 2, 3, 0, 1], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 0, 1, 0, 0, 0, 0, 16, 8, 8, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), grad)), tf.math.add(beta, tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(alpha, beta), tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.math.pow(tf.math.square(sigma), beta), sigma), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0], [1], [4], [3, 1], [], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0], [4, 0, 2, 1, 0], [], [1], [], [], [], [], [1], [9], [2], [87]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [7.827969615706017, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.17263241112232208, 0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [945.7990025111607, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10400000214576721, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0], [1, 1, 1], [4], [3, 1], [], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0], [1, 0, 2, 1, 0], [], [1], [], [], [], [], [1], [9], [2], [87]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08136309683322906, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0], [0, 1, 1], [0], [0, 1, 1], [69], [1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0], [4, 0, 2, 1, 0], [], [1], [1], [], [], [], [1], [9], [2], [87]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [7.827969615706017, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.17263241112232208, 0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [945.7990025111607, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10400000214576721, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0], [1, 0, 0, 1, 1], [4, 6], [0, 2, 2], [22], [1, 1, 1, 1, 0, 0], [0, 0, 0, 1, 0, 1], [1, 0, 0, 9], [4, 0], [65, 70], [0], [1, 0, 1], [], [5], [11], [0, 1, 0], [7, 9], [3], [61]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 4, 1, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.negative(tf.math.negative(grad)), tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3026777994143037, 2.302196965477706, 2.3028393207429625, 2.3052230839243717, 2.3161070620489315, 2.3670384085583036, 2.621203145425333], "accuracy": [0.10540219396352768, 0.10553427785634995, 0.10447761416435242, 0.10527011007070541, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.9736268860953194, 1.9737104688371931, 1.9744510650634766, 1.978402955191476, 1.9981117929731096, 2.097445692334856, 2.645577907562256], "val_accuracy": [0.09966666996479034, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 1, 0], [0, 1, 1, 0, 1], [2, 6], [2, 1, 1], [44], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 4, 2, 1, 6], [3, 4, 3, 3, 3], [65, 70], [1], [], [], [5], [], [1], [0], [2], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 10, 10, 5, 5, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1], [0, 1, 1], [2, 6], [3, 3], [], [1, 1, 1], [1, 0, 1, 1, 1], [4, 9, 9], [4, 0, 2, 1, 0], [65, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [3], [], [1], [0], [2], [87]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0812310129404068, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1], [2, 6, 0], [0, 3, 1], [2], [1, 1, 1], [0, 0, 0, 1, 1], [4, 9, 9], [3], [65, 70], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 1], [0], [3], [45]], "fitness": -0.03999999910593033, "mapping_values": [1, 6, 6, 3, 3, 1, 3, 3, 3, 0, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), grad)), alpha), lambda shape,  alpha, beta, grad: tf.math.pow(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.299865699762272, 2.3007997621902305, 2.302131933511571, 2.30167131473706, 2.3035630256807518, 2.3020435984675376], "accuracy": [0.09509972482919693, 0.08691058307886124, 0.08598599582910538, 0.09245806187391281, 0.08730682730674744, 0.0936468094587326], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]