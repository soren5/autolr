[{"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 6, 1, 8, 4, 1, 2, 8, 0, 4, 9, 2, 9, 3, 9, 6, 9, 5, 0, 8, 8, 2, 0, 2, 8, 8], [1, 2, 2, 2, 2, 2, 2, 2, 0, 0, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 65, 73, 52, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 36, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [35, 25, 50, 71, 34]], "fitness": -0.7805714011192322, "mapping_values": [1, 30, 30, 23, 7, 4, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(alpha, tf.math.sqrt(tf.math.pow(tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))))), tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.negative(grad))))))))), tf.math.sqrt(tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.pow(grad, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2577520678024787, 2.058721608615523, 1.6304968837355862, 1.270350775556825, 1.109677016018656, 1.0000731309942519, 0.941732259112232, 0.8975146017322104, 0.853258473895812, 0.8024419644930422, 0.8035721894520432, 0.7835524818286637, 0.7668055381284902, 0.755064473073748, 0.7386500490906847, 0.726354687016449, 0.7135460938224546, 0.6993114982834109, 0.6865855223152222, 0.698920265046786, 0.6883963637064792, 0.6692332474783254, 0.6561752854085098, 0.6678303335683221, 0.6553467330978594, 0.6483205073875853, 0.6435879553549987, 0.639163184561167], "accuracy": [0.19759608805179596, 0.3910976052284241, 0.4876502454280853, 0.5699379444122314, 0.6165632009506226, 0.6433760523796082, 0.6622639298439026, 0.6812838315963745, 0.693831741809845, 0.7102100253105164, 0.7113987803459167, 0.7210407853126526, 0.7181349992752075, 0.7253995537757874, 0.733588695526123, 0.735569953918457, 0.7412495017051697, 0.7442874312400818, 0.7500990629196167, 0.7441553473472595, 0.7456082701683044, 0.7556465268135071, 0.7613261342048645, 0.7537974119186401, 0.7540615797042847, 0.7625148296356201, 0.7626469135284424, 0.7640998363494873], "val_loss": [1.8522547313145228, 1.5112131323133196, 1.0461485726492745, 0.8257754870823452, 0.7407055071422032, 0.6730117627552578, 0.6362120253699166, 0.6154846123286656, 0.594208802495684, 0.5715688126427787, 0.5817470380238124, 0.5507641179221017, 0.5394581215722221, 0.5455884081976754, 0.5311931541987828, 0.5179816995348249, 0.5203137738364083, 0.5085057531084333, 0.4932765449796404, 0.49722230434417725, 0.5188180719103131, 0.49627232551574707, 0.48023109776633127, 0.48052683898380827, 0.4762887784412929, 0.4777881247656686, 0.47927197388240267, 0.47153242996760775], "val_accuracy": [0.4386666715145111, 0.5703333616256714, 0.640999972820282, 0.6823333501815796, 0.6916666626930237, 0.7246666550636292, 0.7329999804496765, 0.7456666827201843, 0.7563333511352539, 0.7546666860580444, 0.749666690826416, 0.7716666460037231, 0.7789999842643738, 0.7609999775886536, 0.7726666927337646, 0.7820000052452087, 0.7693333625793457, 0.778333306312561, 0.7876666784286499, 0.7839999794960022, 0.7699999809265137, 0.7863333225250244, 0.8043333292007446, 0.7919999957084656, 0.7993333339691162, 0.8033333420753479, 0.7923333048820496, 0.7919999957084656]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [0, 6, 1, 2, 4, 4, 5, 8, 0, 8, 9, 5, 1, 9, 8, 2, 3, 8, 0, 8, 8, 2, 0, 2, 8, 8], [0, 2, 2, 2, 2, 2, 2, 2, 0, 0, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [2, 72, 73, 52, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 3, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 0, 0, 2, 1, 3, 0, 0], [47, 33, 83, 36, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [35, 25, 50, 71, 34]], "fitness": -0.7805714011192322, "mapping_values": [1, 1, 1, 0, 1, 1, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2577520678024787, 2.058721608615523, 1.6304968837355862, 1.270350775556825, 1.109677016018656, 1.0000731309942519, 0.941732259112232, 0.8975146017322104, 0.853258473895812, 0.8024419644930422, 0.8035721894520432, 0.7835524818286637, 0.7668055381284902, 0.755064473073748, 0.7386500490906847, 0.726354687016449, 0.7135460938224546, 0.6993114982834109, 0.6865855223152222, 0.698920265046786, 0.6883963637064792, 0.6692332474783254, 0.6561752854085098, 0.6678303335683221, 0.6553467330978594, 0.6483205073875853, 0.6435879553549987, 0.639163184561167], "accuracy": [0.19759608805179596, 0.3910976052284241, 0.4876502454280853, 0.5699379444122314, 0.6165632009506226, 0.6433760523796082, 0.6622639298439026, 0.6812838315963745, 0.693831741809845, 0.7102100253105164, 0.7113987803459167, 0.7210407853126526, 0.7181349992752075, 0.7253995537757874, 0.733588695526123, 0.735569953918457, 0.7412495017051697, 0.7442874312400818, 0.7500990629196167, 0.7441553473472595, 0.7456082701683044, 0.7556465268135071, 0.7613261342048645, 0.7537974119186401, 0.7540615797042847, 0.7625148296356201, 0.7626469135284424, 0.7640998363494873], "val_loss": [1.8522547313145228, 1.5112131323133196, 1.0461485726492745, 0.8257754870823452, 0.7407055071422032, 0.6730117627552578, 0.6362120253699166, 0.6154846123286656, 0.594208802495684, 0.5715688126427787, 0.5817470380238124, 0.5507641179221017, 0.5394581215722221, 0.5455884081976754, 0.5311931541987828, 0.5179816995348249, 0.5203137738364083, 0.5085057531084333, 0.4932765449796404, 0.49722230434417725, 0.5188180719103131, 0.49627232551574707, 0.48023109776633127, 0.48052683898380827, 0.4762887784412929, 0.4777881247656686, 0.47927197388240267, 0.47153242996760775], "val_accuracy": [0.4386666715145111, 0.5703333616256714, 0.640999972820282, 0.6823333501815796, 0.6916666626930237, 0.7246666550636292, 0.7329999804496765, 0.7456666827201843, 0.7563333511352539, 0.7546666860580444, 0.749666690826416, 0.7716666460037231, 0.7789999842643738, 0.7609999775886536, 0.7726666927337646, 0.7820000052452087, 0.7693333625793457, 0.778333306312561, 0.7876666784286499, 0.7839999794960022, 0.7699999809265137, 0.7863333225250244, 0.8043333292007446, 0.7919999957084656, 0.7993333339691162, 0.8033333420753479, 0.7923333048820496, 0.7919999957084656]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 6, 1, 8, 4, 2, 2, 8, 0, 4, 9, 2, 8, 3, 9, 6, 9, 5, 0, 6, 8, 2, 0, 2, 8, 8], [2, 0, 2, 1, 2, 2, 2, 2, 0, 0, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [42, 13, 73, 52, 8, 79, 86, 52, 44], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 2, 3, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [35, 25, 50, 71, 34]], "fitness": -0.7805714011192322, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2577520678024787, 2.058721608615523, 1.6304968837355862, 1.270350775556825, 1.109677016018656, 1.0000731309942519, 0.941732259112232, 0.8975146017322104, 0.853258473895812, 0.8024419644930422, 0.8035721894520432, 0.7835524818286637, 0.7668055381284902, 0.755064473073748, 0.7386500490906847, 0.726354687016449, 0.7135460938224546, 0.6993114982834109, 0.6865855223152222, 0.698920265046786, 0.6883963637064792, 0.6692332474783254, 0.6561752854085098, 0.6678303335683221, 0.6553467330978594, 0.6483205073875853, 0.6435879553549987, 0.639163184561167], "accuracy": [0.19759608805179596, 0.3910976052284241, 0.4876502454280853, 0.5699379444122314, 0.6165632009506226, 0.6433760523796082, 0.6622639298439026, 0.6812838315963745, 0.693831741809845, 0.7102100253105164, 0.7113987803459167, 0.7210407853126526, 0.7181349992752075, 0.7253995537757874, 0.733588695526123, 0.735569953918457, 0.7412495017051697, 0.7442874312400818, 0.7500990629196167, 0.7441553473472595, 0.7456082701683044, 0.7556465268135071, 0.7613261342048645, 0.7537974119186401, 0.7540615797042847, 0.7625148296356201, 0.7626469135284424, 0.7640998363494873], "val_loss": [1.8522547313145228, 1.5112131323133196, 1.0461485726492745, 0.8257754870823452, 0.7407055071422032, 0.6730117627552578, 0.6362120253699166, 0.6154846123286656, 0.594208802495684, 0.5715688126427787, 0.5817470380238124, 0.5507641179221017, 0.5394581215722221, 0.5455884081976754, 0.5311931541987828, 0.5179816995348249, 0.5203137738364083, 0.5085057531084333, 0.4932765449796404, 0.49722230434417725, 0.5188180719103131, 0.49627232551574707, 0.48023109776633127, 0.48052683898380827, 0.4762887784412929, 0.4777881247656686, 0.47927197388240267, 0.47153242996760775], "val_accuracy": [0.4386666715145111, 0.5703333616256714, 0.640999972820282, 0.6823333501815796, 0.6916666626930237, 0.7246666550636292, 0.7329999804496765, 0.7456666827201843, 0.7563333511352539, 0.7546666860580444, 0.749666690826416, 0.7716666460037231, 0.7789999842643738, 0.7609999775886536, 0.7726666927337646, 0.7820000052452087, 0.7693333625793457, 0.778333306312561, 0.7876666784286499, 0.7839999794960022, 0.7699999809265137, 0.7863333225250244, 0.8043333292007446, 0.7919999957084656, 0.7993333339691162, 0.8033333420753479, 0.7923333048820496, 0.7919999957084656]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 6, 1, 2, 4, 4, 5, 2, 0, 8, 9, 5, 0, 2, 8, 2, 3, 8, 0, 8, 8, 2, 2, 2, 8, 8], [2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 3, 73, 52, 8, 79, 86, 52, 44], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [35, 25, 50, 71, 34]], "fitness": -0.7805714011192322, "mapping_values": [1, 4, 4, 2, 2, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(grad, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2577520678024787, 2.058721608615523, 1.6304968837355862, 1.270350775556825, 1.109677016018656, 1.0000731309942519, 0.941732259112232, 0.8975146017322104, 0.853258473895812, 0.8024419644930422, 0.8035721894520432, 0.7835524818286637, 0.7668055381284902, 0.755064473073748, 0.7386500490906847, 0.726354687016449, 0.7135460938224546, 0.6993114982834109, 0.6865855223152222, 0.698920265046786, 0.6883963637064792, 0.6692332474783254, 0.6561752854085098, 0.6678303335683221, 0.6553467330978594, 0.6483205073875853, 0.6435879553549987, 0.639163184561167], "accuracy": [0.19759608805179596, 0.3910976052284241, 0.4876502454280853, 0.5699379444122314, 0.6165632009506226, 0.6433760523796082, 0.6622639298439026, 0.6812838315963745, 0.693831741809845, 0.7102100253105164, 0.7113987803459167, 0.7210407853126526, 0.7181349992752075, 0.7253995537757874, 0.733588695526123, 0.735569953918457, 0.7412495017051697, 0.7442874312400818, 0.7500990629196167, 0.7441553473472595, 0.7456082701683044, 0.7556465268135071, 0.7613261342048645, 0.7537974119186401, 0.7540615797042847, 0.7625148296356201, 0.7626469135284424, 0.7640998363494873], "val_loss": [1.8522547313145228, 1.5112131323133196, 1.0461485726492745, 0.8257754870823452, 0.7407055071422032, 0.6730117627552578, 0.6362120253699166, 0.6154846123286656, 0.594208802495684, 0.5715688126427787, 0.5817470380238124, 0.5507641179221017, 0.5394581215722221, 0.5455884081976754, 0.5311931541987828, 0.5179816995348249, 0.5203137738364083, 0.5085057531084333, 0.4932765449796404, 0.49722230434417725, 0.5188180719103131, 0.49627232551574707, 0.48023109776633127, 0.48052683898380827, 0.4762887784412929, 0.4777881247656686, 0.47927197388240267, 0.47153242996760775], "val_accuracy": [0.4386666715145111, 0.5703333616256714, 0.640999972820282, 0.6823333501815796, 0.6916666626930237, 0.7246666550636292, 0.7329999804496765, 0.7456666827201843, 0.7563333511352539, 0.7546666860580444, 0.749666690826416, 0.7716666460037231, 0.7789999842643738, 0.7609999775886536, 0.7726666927337646, 0.7820000052452087, 0.7693333625793457, 0.778333306312561, 0.7876666784286499, 0.7839999794960022, 0.7699999809265137, 0.7863333225250244, 0.8043333292007446, 0.7919999957084656, 0.7993333339691162, 0.8033333420753479, 0.7923333048820496, 0.7919999957084656]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 6, 1, 2, 4, 4, 5, 2, 0, 8, 9, 5, 1, 9, 8, 2, 1, 8, 0, 0, 8, 2, 0, 2, 8, 8], [2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [54, 65, 59, 52, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 2, 3, 2, 3, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 36, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [35, 25, 50, 71, 34]], "fitness": -0.7805714011192322, "mapping_values": [1, 35, 35, 25, 10, 4, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.pow(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))))))), tf.math.square(grad))), tf.math.subtract(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(grad)))))), tf.math.sqrt(tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))))), grad)))), grad))))), tf.math.add(alpha, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2577520678024787, 2.058721608615523, 1.6304968837355862, 1.270350775556825, 1.109677016018656, 1.0000731309942519, 0.941732259112232, 0.8975146017322104, 0.853258473895812, 0.8024419644930422, 0.8035721894520432, 0.7835524818286637, 0.7668055381284902, 0.755064473073748, 0.7386500490906847, 0.726354687016449, 0.7135460938224546, 0.6993114982834109, 0.6865855223152222, 0.698920265046786, 0.6883963637064792, 0.6692332474783254, 0.6561752854085098, 0.6678303335683221, 0.6553467330978594, 0.6483205073875853, 0.6435879553549987, 0.639163184561167], "accuracy": [0.19759608805179596, 0.3910976052284241, 0.4876502454280853, 0.5699379444122314, 0.6165632009506226, 0.6433760523796082, 0.6622639298439026, 0.6812838315963745, 0.693831741809845, 0.7102100253105164, 0.7113987803459167, 0.7210407853126526, 0.7181349992752075, 0.7253995537757874, 0.733588695526123, 0.735569953918457, 0.7412495017051697, 0.7442874312400818, 0.7500990629196167, 0.7441553473472595, 0.7456082701683044, 0.7556465268135071, 0.7613261342048645, 0.7537974119186401, 0.7540615797042847, 0.7625148296356201, 0.7626469135284424, 0.7640998363494873], "val_loss": [1.8522547313145228, 1.5112131323133196, 1.0461485726492745, 0.8257754870823452, 0.7407055071422032, 0.6730117627552578, 0.6362120253699166, 0.6154846123286656, 0.594208802495684, 0.5715688126427787, 0.5817470380238124, 0.5507641179221017, 0.5394581215722221, 0.5455884081976754, 0.5311931541987828, 0.5179816995348249, 0.5203137738364083, 0.5085057531084333, 0.4932765449796404, 0.49722230434417725, 0.5188180719103131, 0.49627232551574707, 0.48023109776633127, 0.48052683898380827, 0.4762887784412929, 0.4777881247656686, 0.47927197388240267, 0.47153242996760775], "val_accuracy": [0.4386666715145111, 0.5703333616256714, 0.640999972820282, 0.6823333501815796, 0.6916666626930237, 0.7246666550636292, 0.7329999804496765, 0.7456666827201843, 0.7563333511352539, 0.7546666860580444, 0.749666690826416, 0.7716666460037231, 0.7789999842643738, 0.7609999775886536, 0.7726666927337646, 0.7820000052452087, 0.7693333625793457, 0.778333306312561, 0.7876666784286499, 0.7839999794960022, 0.7699999809265137, 0.7863333225250244, 0.8043333292007446, 0.7919999957084656, 0.7993333339691162, 0.8033333420753479, 0.7923333048820496, 0.7919999957084656]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 6, 1, 2, 4, 4, 5, 2, 0, 8, 9, 2, 1, 9, 8, 2, 3, 8, 4, 8, 6, 2, 0, 2, 8, 8], [1, 0, 2, 1, 1, 2, 2, 2, 0, 0, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [42, 13, 73, 52, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 2, 3, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [35, 25, 50, 71, 34]], "fitness": -0.7805714011192322, "mapping_values": [1, 17, 17, 11, 6, 2, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.pow(tf.math.add(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(grad))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.negative(tf.math.sqrt(alpha))))), grad)))), tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2577520678024787, 2.058721608615523, 1.6304968837355862, 1.270350775556825, 1.109677016018656, 1.0000731309942519, 0.941732259112232, 0.8975146017322104, 0.853258473895812, 0.8024419644930422, 0.8035721894520432, 0.7835524818286637, 0.7668055381284902, 0.755064473073748, 0.7386500490906847, 0.726354687016449, 0.7135460938224546, 0.6993114982834109, 0.6865855223152222, 0.698920265046786, 0.6883963637064792, 0.6692332474783254, 0.6561752854085098, 0.6678303335683221, 0.6553467330978594, 0.6483205073875853, 0.6435879553549987, 0.639163184561167], "accuracy": [0.19759608805179596, 0.3910976052284241, 0.4876502454280853, 0.5699379444122314, 0.6165632009506226, 0.6433760523796082, 0.6622639298439026, 0.6812838315963745, 0.693831741809845, 0.7102100253105164, 0.7113987803459167, 0.7210407853126526, 0.7181349992752075, 0.7253995537757874, 0.733588695526123, 0.735569953918457, 0.7412495017051697, 0.7442874312400818, 0.7500990629196167, 0.7441553473472595, 0.7456082701683044, 0.7556465268135071, 0.7613261342048645, 0.7537974119186401, 0.7540615797042847, 0.7625148296356201, 0.7626469135284424, 0.7640998363494873], "val_loss": [1.8522547313145228, 1.5112131323133196, 1.0461485726492745, 0.8257754870823452, 0.7407055071422032, 0.6730117627552578, 0.6362120253699166, 0.6154846123286656, 0.594208802495684, 0.5715688126427787, 0.5817470380238124, 0.5507641179221017, 0.5394581215722221, 0.5455884081976754, 0.5311931541987828, 0.5179816995348249, 0.5203137738364083, 0.5085057531084333, 0.4932765449796404, 0.49722230434417725, 0.5188180719103131, 0.49627232551574707, 0.48023109776633127, 0.48052683898380827, 0.4762887784412929, 0.4777881247656686, 0.47927197388240267, 0.47153242996760775], "val_accuracy": [0.4386666715145111, 0.5703333616256714, 0.640999972820282, 0.6823333501815796, 0.6916666626930237, 0.7246666550636292, 0.7329999804496765, 0.7456666827201843, 0.7563333511352539, 0.7546666860580444, 0.749666690826416, 0.7716666460037231, 0.7789999842643738, 0.7609999775886536, 0.7726666927337646, 0.7820000052452087, 0.7693333625793457, 0.778333306312561, 0.7876666784286499, 0.7839999794960022, 0.7699999809265137, 0.7863333225250244, 0.8043333292007446, 0.7919999957084656, 0.7993333339691162, 0.8033333420753479, 0.7923333048820496, 0.7919999957084656]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 6, 1, 2, 4, 4, 5, 8, 0, 8, 9, 5, 1, 9, 8, 2, 3, 5, 0, 8, 8, 2, 0, 2, 8, 8], [1, 0, 2, 1, 2, 2, 2, 2, 0, 0, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [98, 72, 73, 52, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 3, 2, 3, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 5, 83, 36, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [35, 25, 50, 71, 34]], "fitness": -0.7805714011192322, "mapping_values": [1, 25, 25, 18, 7, 3, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.negative(alpha)))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))))), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32))), tf.math.square(grad))), alpha)), tf.math.subtract(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.math.square(grad), tf.math.add(alpha, grad))))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2577520678024787, 2.058721608615523, 1.6304968837355862, 1.270350775556825, 1.109677016018656, 1.0000731309942519, 0.941732259112232, 0.8975146017322104, 0.853258473895812, 0.8024419644930422, 0.8035721894520432, 0.7835524818286637, 0.7668055381284902, 0.755064473073748, 0.7386500490906847, 0.726354687016449, 0.7135460938224546, 0.6993114982834109, 0.6865855223152222, 0.698920265046786, 0.6883963637064792, 0.6692332474783254, 0.6561752854085098, 0.6678303335683221, 0.6553467330978594, 0.6483205073875853, 0.6435879553549987, 0.639163184561167], "accuracy": [0.19759608805179596, 0.3910976052284241, 0.4876502454280853, 0.5699379444122314, 0.6165632009506226, 0.6433760523796082, 0.6622639298439026, 0.6812838315963745, 0.693831741809845, 0.7102100253105164, 0.7113987803459167, 0.7210407853126526, 0.7181349992752075, 0.7253995537757874, 0.733588695526123, 0.735569953918457, 0.7412495017051697, 0.7442874312400818, 0.7500990629196167, 0.7441553473472595, 0.7456082701683044, 0.7556465268135071, 0.7613261342048645, 0.7537974119186401, 0.7540615797042847, 0.7625148296356201, 0.7626469135284424, 0.7640998363494873], "val_loss": [1.8522547313145228, 1.5112131323133196, 1.0461485726492745, 0.8257754870823452, 0.7407055071422032, 0.6730117627552578, 0.6362120253699166, 0.6154846123286656, 0.594208802495684, 0.5715688126427787, 0.5817470380238124, 0.5507641179221017, 0.5394581215722221, 0.5455884081976754, 0.5311931541987828, 0.5179816995348249, 0.5203137738364083, 0.5085057531084333, 0.4932765449796404, 0.49722230434417725, 0.5188180719103131, 0.49627232551574707, 0.48023109776633127, 0.48052683898380827, 0.4762887784412929, 0.4777881247656686, 0.47927197388240267, 0.47153242996760775], "val_accuracy": [0.4386666715145111, 0.5703333616256714, 0.640999972820282, 0.6823333501815796, 0.6916666626930237, 0.7246666550636292, 0.7329999804496765, 0.7456666827201843, 0.7563333511352539, 0.7546666860580444, 0.749666690826416, 0.7716666460037231, 0.7789999842643738, 0.7609999775886536, 0.7726666927337646, 0.7820000052452087, 0.7693333625793457, 0.778333306312561, 0.7876666784286499, 0.7839999794960022, 0.7699999809265137, 0.7863333225250244, 0.8043333292007446, 0.7919999957084656, 0.7993333339691162, 0.8033333420753479, 0.7923333048820496, 0.7919999957084656]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 1, 2, 4, 4, 5, 2, 0, 8, 9, 5, 1, 9, 8, 2, 3, 8, 0, 8, 8, 2, 0, 2, 8, 8], [2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 65, 59, 52, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 2, 3, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [35, 25, 50, 71, 34]], "fitness": -0.7805714011192322, "mapping_values": [1, 29, 29, 20, 9, 3, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(grad))), tf.math.add(alpha, grad)), tf.math.add(tf.math.negative(tf.math.sqrt(grad)), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))), tf.math.square(tf.math.subtract(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), grad)), tf.math.sqrt(grad)))))))), tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2577520678024787, 2.058721608615523, 1.6304968837355862, 1.270350775556825, 1.109677016018656, 1.0000731309942519, 0.941732259112232, 0.8975146017322104, 0.853258473895812, 0.8024419644930422, 0.8035721894520432, 0.7835524818286637, 0.7668055381284902, 0.755064473073748, 0.7386500490906847, 0.726354687016449, 0.7135460938224546, 0.6993114982834109, 0.6865855223152222, 0.698920265046786, 0.6883963637064792, 0.6692332474783254, 0.6561752854085098, 0.6678303335683221, 0.6553467330978594, 0.6483205073875853, 0.6435879553549987, 0.639163184561167], "accuracy": [0.19759608805179596, 0.3910976052284241, 0.4876502454280853, 0.5699379444122314, 0.6165632009506226, 0.6433760523796082, 0.6622639298439026, 0.6812838315963745, 0.693831741809845, 0.7102100253105164, 0.7113987803459167, 0.7210407853126526, 0.7181349992752075, 0.7253995537757874, 0.733588695526123, 0.735569953918457, 0.7412495017051697, 0.7442874312400818, 0.7500990629196167, 0.7441553473472595, 0.7456082701683044, 0.7556465268135071, 0.7613261342048645, 0.7537974119186401, 0.7540615797042847, 0.7625148296356201, 0.7626469135284424, 0.7640998363494873], "val_loss": [1.8522547313145228, 1.5112131323133196, 1.0461485726492745, 0.8257754870823452, 0.7407055071422032, 0.6730117627552578, 0.6362120253699166, 0.6154846123286656, 0.594208802495684, 0.5715688126427787, 0.5817470380238124, 0.5507641179221017, 0.5394581215722221, 0.5455884081976754, 0.5311931541987828, 0.5179816995348249, 0.5203137738364083, 0.5085057531084333, 0.4932765449796404, 0.49722230434417725, 0.5188180719103131, 0.49627232551574707, 0.48023109776633127, 0.48052683898380827, 0.4762887784412929, 0.4777881247656686, 0.47927197388240267, 0.47153242996760775], "val_accuracy": [0.4386666715145111, 0.5703333616256714, 0.640999972820282, 0.6823333501815796, 0.6916666626930237, 0.7246666550636292, 0.7329999804496765, 0.7456666827201843, 0.7563333511352539, 0.7546666860580444, 0.749666690826416, 0.7716666460037231, 0.7789999842643738, 0.7609999775886536, 0.7726666927337646, 0.7820000052452087, 0.7693333625793457, 0.778333306312561, 0.7876666784286499, 0.7839999794960022, 0.7699999809265137, 0.7863333225250244, 0.8043333292007446, 0.7919999957084656, 0.7993333339691162, 0.8033333420753479, 0.7923333048820496, 0.7919999957084656]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 6, 5, 8, 1, 1, 2, 8, 8, 4, 2, 2, 9, 3, 9, 9, 9, 8, 0, 5, 0, 2, 0, 2, 8, 8], [1, 2, 1, 1, 2, 2, 2, 2, 0, 0, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 65, 73, 52, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 6, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 36, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [35, 25, 50, 71, 34]], "fitness": -0.7805714011192322, "mapping_values": [1, 23, 23, 18, 5, 4, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(alpha)), tf.math.add(alpha, tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.sqrt(grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.add(alpha, alpha), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.sqrt(grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2577520678024787, 2.058721608615523, 1.6304968837355862, 1.270350775556825, 1.109677016018656, 1.0000731309942519, 0.941732259112232, 0.8975146017322104, 0.853258473895812, 0.8024419644930422, 0.8035721894520432, 0.7835524818286637, 0.7668055381284902, 0.755064473073748, 0.7386500490906847, 0.726354687016449, 0.7135460938224546, 0.6993114982834109, 0.6865855223152222, 0.698920265046786, 0.6883963637064792, 0.6692332474783254, 0.6561752854085098, 0.6678303335683221, 0.6553467330978594, 0.6483205073875853, 0.6435879553549987, 0.639163184561167], "accuracy": [0.19759608805179596, 0.3910976052284241, 0.4876502454280853, 0.5699379444122314, 0.6165632009506226, 0.6433760523796082, 0.6622639298439026, 0.6812838315963745, 0.693831741809845, 0.7102100253105164, 0.7113987803459167, 0.7210407853126526, 0.7181349992752075, 0.7253995537757874, 0.733588695526123, 0.735569953918457, 0.7412495017051697, 0.7442874312400818, 0.7500990629196167, 0.7441553473472595, 0.7456082701683044, 0.7556465268135071, 0.7613261342048645, 0.7537974119186401, 0.7540615797042847, 0.7625148296356201, 0.7626469135284424, 0.7640998363494873], "val_loss": [1.8522547313145228, 1.5112131323133196, 1.0461485726492745, 0.8257754870823452, 0.7407055071422032, 0.6730117627552578, 0.6362120253699166, 0.6154846123286656, 0.594208802495684, 0.5715688126427787, 0.5817470380238124, 0.5507641179221017, 0.5394581215722221, 0.5455884081976754, 0.5311931541987828, 0.5179816995348249, 0.5203137738364083, 0.5085057531084333, 0.4932765449796404, 0.49722230434417725, 0.5188180719103131, 0.49627232551574707, 0.48023109776633127, 0.48052683898380827, 0.4762887784412929, 0.4777881247656686, 0.47927197388240267, 0.47153242996760775], "val_accuracy": [0.4386666715145111, 0.5703333616256714, 0.640999972820282, 0.6823333501815796, 0.6916666626930237, 0.7246666550636292, 0.7329999804496765, 0.7456666827201843, 0.7563333511352539, 0.7546666860580444, 0.749666690826416, 0.7716666460037231, 0.7789999842643738, 0.7609999775886536, 0.7726666927337646, 0.7820000052452087, 0.7693333625793457, 0.778333306312561, 0.7876666784286499, 0.7839999794960022, 0.7699999809265137, 0.7863333225250244, 0.8043333292007446, 0.7919999957084656, 0.7993333339691162, 0.8033333420753479, 0.7923333048820496, 0.7919999957084656]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 6, 3, 5, 4, 1, 2, 6, 0, 4, 9, 2, 9, 3, 9, 6, 2, 5, 0, 8, 8, 2, 0, 2, 8, 8], [0, 2, 2, 2, 1, 2, 1, 2, 0, 0, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 65, 20, 52, 8, 79, 86, 52, 44], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 1, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 0, 0, 2, 1, 3, 0, 0], [47, 33, 83, 36, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [35, 25, 50, 71, 34]], "fitness": -0.5339999794960022, "mapping_values": [1, 32, 32, 22, 10, 6, 8, 8, 4, 4, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), grad)), tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.subtract(tf.math.add(alpha, tf.math.add(grad, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), grad))), alpha))), tf.math.add(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(tf.math.square(grad), tf.math.negative(tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))))))), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))))), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.314265131178848, 2.563333230263616, 2.3046144473633006, 2.303114255594776, 2.302508659555518, 2.288180648217726, 2.13941607225242, 2.238252483323077, 2.192854868186353, 2.304573895200337, 2.223303812684762, 2.187894130127856], "accuracy": [0.19601109623908997, 0.12336547672748566, 0.09708096832036972, 0.10434553027153015, 0.09972262382507324, 0.13921542465686798, 0.2782987654209137, 0.1868973672389984, 0.2075023055076599, 0.10421344637870789, 0.190859854221344, 0.20459648966789246], "val_loss": [1.89407137462071, 1.975574357169015, 1.973959173474993, 1.9733775002615792, 1.9720441273280553, 1.7937148639133997, 1.3672665868486678, 1.5283123765672957, 1.9746251787458147, 1.9718841825212752, 1.9708607537405831, 1.9760435649326868], "val_accuracy": [0.23466666042804718, 0.09966666996479034, 0.10166666656732559, 0.11766666918992996, 0.11933333426713943, 0.35600000619888306, 0.5546666383743286, 0.41233333945274353, 0.09733333438634872, 0.10199999809265137, 0.1720000058412552, 0.10400000214576721]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 4, 1, 5, 4, 4, 5, 8, 0, 8, 9, 5, 1, 9, 8, 2, 3, 8, 0, 8, 8, 2, 0, 2, 8, 8], [1, 0, 2, 1, 2, 0, 2, 2, 0, 0, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [99, 72, 73, 52, 8, 79, 86, 52, 44], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [1, 2, 3, 2, 2, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 0, 0, 2, 1, 3, 0, 0], [28, 33, 83, 36, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [35, 25, 50, 71, 34]], "fitness": -0.13114285469055176, "mapping_values": [1, 15, 15, 10, 5, 1, 7, 7, 3, 4, 2, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(alpha, tf.math.square(tf.math.pow(tf.math.pow(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(grad))), alpha)))), tf.math.sqrt(tf.math.negative(tf.math.sqrt(tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.multiply(tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, beta))", "other_info": {"loss": [2.3004403320270175, 3.7182356865020902, NaN, NaN, NaN, NaN], "accuracy": [0.09259014576673508, 0.2028794139623642, 0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9592670031956263, 5672137435.428572, NaN, NaN, NaN, NaN], "val_accuracy": [0.2136666625738144, 0.09733333438634872, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 4, 9, 8, 4, 1, 2, 8, 0, 4, 9, 2, 9, 3, 9, 6, 2, 5, 0, 8, 2, 2, 0, 2, 8, 8], [1, 2, 2, 2, 2, 2, 0, 2, 0, 0, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 65, 73, 63, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 36, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [31, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 4, 4, 0, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.pow(grad, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.375948427281186, 3.159063865511472, 5.4031397389099665, 8.998798476549076, 14.090678447934504, 20.44604728244252, 28.61681218135311], "accuracy": [0.0956280529499054, 0.1006472036242485, 0.09893012791872025, 0.09734513610601425, 0.10130762308835983, 0.10289261490106583, 0.09708096832036972], "val_loss": [2.123870985848563, 2.961273193359375, 4.7679837090628485, 7.479703630719866, 11.090573992047991, 15.664376940046038, 21.280193873814174], "val_accuracy": [0.0989999994635582, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 4, 1, 2, 4, 4, 5, 2, 0, 8, 9, 5, 1, 9, 8, 2, 3, 8, 0, 8, 1, 2, 0, 2, 8, 8], [1, 2, 2, 2, 2, 2, 2, 2, 0, 0, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [42, 13, 73, 52, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 2, 9, 9, 2, 9], [2, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [35, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 18, 12, 6, 1, 11, 11, 8, 3, 3, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))), grad), grad)))), tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))))), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09576013684272766, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [0, 6, 1, 8, 4, 1, 2, 8, 0, 4, 9, 2, 9, 3, 9, 2, 9, 8, 0, 8, 8, 2, 0, 2, 8, 8], [1, 0, 2, 1, 2, 2, 2, 2, 0, 0, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [42, 13, 73, 52, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 1, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 0, 0, 2, 1, 3, 0, 0], [47, 33, 83, 36, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [35, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 4, 0, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.789500248162911, 7.742409458344308, 19.727514096160434, 38.97277792982374, 67.33384039197001, 104.98866679491762], "accuracy": [0.10038304328918457, 0.10236428678035736, 0.09893012791872025, 0.09760929644107819, 0.09945846349000931, 0.10302469879388809], "val_loss": [3.215962682451521, 8.67691775730678, 18.570594787597656, 33.63251059395926, 54.746892656598774, 82.93691580636161], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 6, 1, 8, 4, 2, 2, 8, 0, 4, 9, 2, 8, 3, 6, 5, 9, 5, 3, 6, 8, 2, 0, 2, 8, 8], [1, 0, 2, 1, 2, 2, 2, 2, 0, 0, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [54, 65, 59, 52, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 3, 6, 2, 8, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 26, 36, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [35, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 8, 3, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.multiply(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07607977837324142, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 9, 1, 8, 4, 1, 2, 6, 0, 4, 9, 2, 9, 3, 9, 6, 9, 5, 0, 4, 8, 2, 0, 2, 8, 8], [1, 2, 0, 2, 2, 2, 2, 2, 0, 0, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 65, 73, 26, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 5, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 36, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [35, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07607977837324142, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 6, 1, 8, 4, 2, 2, 8, 0, 4, 9, 2, 8, 3, 9, 6, 9, 5, 0, 6, 8, 2, 0, 2, 8, 8], [0, 2, 2, 2, 2, 2, 2, 2, 0, 0, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [54, 65, 59, 52, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 1, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 36, 91, 78], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 7, 1, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [35, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 32, 32, 23, 9, 5, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 6, 4, 2, 1], "tree_depth": 52, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.sqrt(tf.math.multiply(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.negative(tf.math.divide_no_nan(grad, grad))))))))))), tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, grad))))), grad)))), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.pow(grad, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(sigma, tf.math.subtract(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 6, 1, 8, 4, 2, 2, 8, 0, 4, 9, 2, 8, 3, 9, 6, 9, 5, 0, 6, 8, 2, 0, 2, 8, 8], [2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [54, 65, 59, 52, 8, 79, 86, 52, 44], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 2, 3, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 36, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [2, 3, 1, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [35, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 8, 4, 4, 1, 1, 0, 1, 0, 5, 2, 3, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))))), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(sigma, beta), beta)", "other_info": {"loss": [46547099.92317755, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3002009438323062e+18, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10400000214576721, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 6, 1, 2, 4, 4, 5, 2, 0, 8, 9, 5, 1, 9, 8, 2, 3, 8, 0, 8, 8, 2, 0, 2, 8, 8], [2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [42, 13, 73, 52, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 2, 3, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [35, 25, 50, 71, 34]], "fitness": -0.07514286041259766, "mapping_values": [1, 32, 32, 23, 9, 3, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))))))), tf.math.square(grad)), tf.math.subtract(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.sqrt(grad)))))), grad)), tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, grad))))))), grad)))), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(grad, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, beta))", "other_info": {"loss": [2.300526340923226, 2.2993213792187963, 2.3015345406333894, 2.3012401030410343, 2.3014591779407807, 2.301600013442437], "accuracy": [0.08889182657003403, 0.10421344637870789, 0.08928807079792023, 0.08426892012357712, 0.08070268481969833, 0.07911768555641174], "val_loss": [1.968555518559047, 1.9709391593933105, 1.9719557080950056, 1.972327641078404, 1.972609519958496, 1.9727213042122977], "val_accuracy": [0.0820000022649765, 0.07966666668653488, 0.060333333909511566, 0.0716666653752327, 0.07066666334867477, 0.06266666948795319]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [0, 6, 1, 2, 4, 4, 5, 8, 0, 8, 9, 5, 1, 9, 8, 2, 3, 8, 0, 8, 8, 2, 0, 2, 8, 8], [2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [99, 72, 73, 52, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [1, 2, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 1, 0, 3, 0, 2, 1, 3, 0, 0], [46, 33, 83, 36, 91, 78], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 0, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [35, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 3, 2, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(sigma))", "other_info": {"loss": [2.301944886247763, 2.301447575638055, 2.3034640991645263, 2.302311316772207, 2.303034131017737, 2.3010712339736057], "accuracy": [0.0866464152932167, 0.09008057415485382, 0.0944393053650856, 0.09298639744520187, 0.08902391046285629, 0.09087307006120682], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]