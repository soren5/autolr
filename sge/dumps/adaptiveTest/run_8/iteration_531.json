[{"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.817714273929596, "mapping_values": [1, 16, 16, 10, 6, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), grad))))), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.1469287096690413, 1.943279235874106, 1.724938415627611, 1.2014382017161065, 0.8732541292539724, 0.7820329192984987, 0.7361457450058262, 0.6952630756333079, 0.6775409207053078, 0.6645732970915419, 0.611876742029864, 0.5973388246100545, 0.5818968221590488, 0.5777180432060911, 0.5419021282276661, 0.5215582478599085, 0.5203423844336708, 0.5331965293614714, 0.5011923900094283, 0.4764642167588928, 0.4987161515993827, 0.4805327103342977, 0.4767328887575606, 0.46102594321965384, 0.4408971906779008, 0.462263615163499, 0.43261824778719443, 0.4399462587852929, 0.41067697695296407, 0.4109154506649843, 0.4089744700897072, 0.4041168737633511, 0.4104424532984604, 0.38420457523323526, 0.3718693137696359, 0.38130523348449796, 0.3942889211089966, 0.3692306275018816, 0.3512629787557554, 0.37818453984174905, 0.3684912313599045, 0.3446991622660532], "accuracy": [0.27565711736679077, 0.29480913281440735, 0.42464667558670044, 0.5580504536628723, 0.6688680648803711, 0.7111346125602722, 0.7205125093460083, 0.7372870445251465, 0.7452120184898376, 0.7511557340621948, 0.7725531458854675, 0.7778365015983582, 0.7808743715286255, 0.7807422876358032, 0.793950617313385, 0.8042530417442322, 0.8064984679222107, 0.8006868362426758, 0.8136309385299683, 0.8245938420295715, 0.8101968169212341, 0.819970965385437, 0.8189142942428589, 0.8253863453865051, 0.8374059200286865, 0.8305375576019287, 0.8408400416374207, 0.8348963260650635, 0.8492933511734009, 0.8502179384231567, 0.8487650156021118, 0.8549728989601135, 0.8500858545303345, 0.8545766472816467, 0.8632941246032715, 0.8610487580299377, 0.8544445633888245, 0.858671247959137, 0.8667283058166504, 0.8594637513160706, 0.863029956817627, 0.8704266548156738], "val_loss": [1.573856966836112, 1.3462175301143102, 1.1094628742762975, 0.7001182351793561, 0.7166990722928729, 0.582114611353193, 0.5443663597106934, 0.5318968296051025, 0.5515661750520978, 0.5064741713660104, 0.4871020998273577, 0.5454858030591693, 0.48578149931771414, 0.480696507862636, 0.4561299341065543, 0.46076066153390066, 0.5138567004884992, 0.4203989676066807, 0.4205549018723624, 0.4405029926981245, 0.43077082293374197, 0.4158798200743539, 0.38527925525392803, 0.3741827522005354, 0.38653442689350676, 0.4146861178534372, 0.3723006844520569, 0.3672907182148525, 0.36620132412229267, 0.3486207127571106, 0.35262629815510343, 0.35481795242854525, 0.3533757584435599, 0.3628565413611276, 0.34960352522986277, 0.35399143184934345, 0.33100427048546927, 0.3399257319314139, 0.3496541125433786, 0.3485374706132071, 0.3339128238814218, 0.3682952863829477], "val_accuracy": [0.25033333897590637, 0.5786666870117188, 0.5976666808128357, 0.6919999718666077, 0.6646666526794434, 0.7360000014305115, 0.7526666522026062, 0.7793333530426025, 0.7620000243186951, 0.7620000243186951, 0.7893333435058594, 0.7386666536331177, 0.7873333096504211, 0.7766666412353516, 0.7896666526794434, 0.7883333563804626, 0.7826666831970215, 0.8109999895095825, 0.8190000057220459, 0.8016666769981384, 0.8090000152587891, 0.8163333535194397, 0.8286666870117188, 0.8353333473205566, 0.8363333344459534, 0.8169999718666077, 0.8393333554267883, 0.8356666564941406, 0.846666693687439, 0.8539999723434448, 0.8519999980926514, 0.8506666421890259, 0.8583333492279053, 0.843999981880188, 0.8523333072662354, 0.8543333411216736, 0.8663333058357239, 0.8586666584014893, 0.8579999804496765, 0.8523333072662354, 0.8636666536331177, 0.8496666550636292]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1], [2, 9, 6, 6, 0, 3, 8, 0, 5, 6, 1, 8, 4, 3, 2, 6, 8, 5, 0, 2], [2, 2, 0, 2, 2, 0, 0, 2, 0, 0, 0, 2, 2, 2, 1], [26, 98, 22, 73, 46, 27], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 0, 0, 1], [0, 0, 0, 0], [3, 2, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.817714273929596, "mapping_values": [1, 12, 12, 8, 4, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))))), grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.1469287096690413, 1.943279235874106, 1.724938415627611, 1.2014382017161065, 0.8732541292539724, 0.7820329192984987, 0.7361457450058262, 0.6952630756333079, 0.6775409207053078, 0.6645732970915419, 0.611876742029864, 0.5973388246100545, 0.5818968221590488, 0.5777180432060911, 0.5419021282276661, 0.5215582478599085, 0.5203423844336708, 0.5331965293614714, 0.5011923900094283, 0.4764642167588928, 0.4987161515993827, 0.4805327103342977, 0.4767328887575606, 0.46102594321965384, 0.4408971906779008, 0.462263615163499, 0.43261824778719443, 0.4399462587852929, 0.41067697695296407, 0.4109154506649843, 0.4089744700897072, 0.4041168737633511, 0.4104424532984604, 0.38420457523323526, 0.3718693137696359, 0.38130523348449796, 0.3942889211089966, 0.3692306275018816, 0.3512629787557554, 0.37818453984174905, 0.3684912313599045, 0.3446991622660532], "accuracy": [0.27565711736679077, 0.29480913281440735, 0.42464667558670044, 0.5580504536628723, 0.6688680648803711, 0.7111346125602722, 0.7205125093460083, 0.7372870445251465, 0.7452120184898376, 0.7511557340621948, 0.7725531458854675, 0.7778365015983582, 0.7808743715286255, 0.7807422876358032, 0.793950617313385, 0.8042530417442322, 0.8064984679222107, 0.8006868362426758, 0.8136309385299683, 0.8245938420295715, 0.8101968169212341, 0.819970965385437, 0.8189142942428589, 0.8253863453865051, 0.8374059200286865, 0.8305375576019287, 0.8408400416374207, 0.8348963260650635, 0.8492933511734009, 0.8502179384231567, 0.8487650156021118, 0.8549728989601135, 0.8500858545303345, 0.8545766472816467, 0.8632941246032715, 0.8610487580299377, 0.8544445633888245, 0.858671247959137, 0.8667283058166504, 0.8594637513160706, 0.863029956817627, 0.8704266548156738], "val_loss": [1.573856966836112, 1.3462175301143102, 1.1094628742762975, 0.7001182351793561, 0.7166990722928729, 0.582114611353193, 0.5443663597106934, 0.5318968296051025, 0.5515661750520978, 0.5064741713660104, 0.4871020998273577, 0.5454858030591693, 0.48578149931771414, 0.480696507862636, 0.4561299341065543, 0.46076066153390066, 0.5138567004884992, 0.4203989676066807, 0.4205549018723624, 0.4405029926981245, 0.43077082293374197, 0.4158798200743539, 0.38527925525392803, 0.3741827522005354, 0.38653442689350676, 0.4146861178534372, 0.3723006844520569, 0.3672907182148525, 0.36620132412229267, 0.3486207127571106, 0.35262629815510343, 0.35481795242854525, 0.3533757584435599, 0.3628565413611276, 0.34960352522986277, 0.35399143184934345, 0.33100427048546927, 0.3399257319314139, 0.3496541125433786, 0.3485374706132071, 0.3339128238814218, 0.3682952863829477], "val_accuracy": [0.25033333897590637, 0.5786666870117188, 0.5976666808128357, 0.6919999718666077, 0.6646666526794434, 0.7360000014305115, 0.7526666522026062, 0.7793333530426025, 0.7620000243186951, 0.7620000243186951, 0.7893333435058594, 0.7386666536331177, 0.7873333096504211, 0.7766666412353516, 0.7896666526794434, 0.7883333563804626, 0.7826666831970215, 0.8109999895095825, 0.8190000057220459, 0.8016666769981384, 0.8090000152587891, 0.8163333535194397, 0.8286666870117188, 0.8353333473205566, 0.8363333344459534, 0.8169999718666077, 0.8393333554267883, 0.8356666564941406, 0.846666693687439, 0.8539999723434448, 0.8519999980926514, 0.8506666421890259, 0.8583333492279053, 0.843999981880188, 0.8523333072662354, 0.8543333411216736, 0.8663333058357239, 0.8586666584014893, 0.8579999804496765, 0.8523333072662354, 0.8636666536331177, 0.8496666550636292]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0], [2, 9, 6, 6, 0, 4, 8, 2, 5, 2, 1, 8, 4, 9], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46, 3, 52, 63], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 0, 0], [3, 2, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.817714273929596, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.1469287096690413, 1.943279235874106, 1.724938415627611, 1.2014382017161065, 0.8732541292539724, 0.7820329192984987, 0.7361457450058262, 0.6952630756333079, 0.6775409207053078, 0.6645732970915419, 0.611876742029864, 0.5973388246100545, 0.5818968221590488, 0.5777180432060911, 0.5419021282276661, 0.5215582478599085, 0.5203423844336708, 0.5331965293614714, 0.5011923900094283, 0.4764642167588928, 0.4987161515993827, 0.4805327103342977, 0.4767328887575606, 0.46102594321965384, 0.4408971906779008, 0.462263615163499, 0.43261824778719443, 0.4399462587852929, 0.41067697695296407, 0.4109154506649843, 0.4089744700897072, 0.4041168737633511, 0.4104424532984604, 0.38420457523323526, 0.3718693137696359, 0.38130523348449796, 0.3942889211089966, 0.3692306275018816, 0.3512629787557554, 0.37818453984174905, 0.3684912313599045, 0.3446991622660532], "accuracy": [0.27565711736679077, 0.29480913281440735, 0.42464667558670044, 0.5580504536628723, 0.6688680648803711, 0.7111346125602722, 0.7205125093460083, 0.7372870445251465, 0.7452120184898376, 0.7511557340621948, 0.7725531458854675, 0.7778365015983582, 0.7808743715286255, 0.7807422876358032, 0.793950617313385, 0.8042530417442322, 0.8064984679222107, 0.8006868362426758, 0.8136309385299683, 0.8245938420295715, 0.8101968169212341, 0.819970965385437, 0.8189142942428589, 0.8253863453865051, 0.8374059200286865, 0.8305375576019287, 0.8408400416374207, 0.8348963260650635, 0.8492933511734009, 0.8502179384231567, 0.8487650156021118, 0.8549728989601135, 0.8500858545303345, 0.8545766472816467, 0.8632941246032715, 0.8610487580299377, 0.8544445633888245, 0.858671247959137, 0.8667283058166504, 0.8594637513160706, 0.863029956817627, 0.8704266548156738], "val_loss": [1.573856966836112, 1.3462175301143102, 1.1094628742762975, 0.7001182351793561, 0.7166990722928729, 0.582114611353193, 0.5443663597106934, 0.5318968296051025, 0.5515661750520978, 0.5064741713660104, 0.4871020998273577, 0.5454858030591693, 0.48578149931771414, 0.480696507862636, 0.4561299341065543, 0.46076066153390066, 0.5138567004884992, 0.4203989676066807, 0.4205549018723624, 0.4405029926981245, 0.43077082293374197, 0.4158798200743539, 0.38527925525392803, 0.3741827522005354, 0.38653442689350676, 0.4146861178534372, 0.3723006844520569, 0.3672907182148525, 0.36620132412229267, 0.3486207127571106, 0.35262629815510343, 0.35481795242854525, 0.3533757584435599, 0.3628565413611276, 0.34960352522986277, 0.35399143184934345, 0.33100427048546927, 0.3399257319314139, 0.3496541125433786, 0.3485374706132071, 0.3339128238814218, 0.3682952863829477], "val_accuracy": [0.25033333897590637, 0.5786666870117188, 0.5976666808128357, 0.6919999718666077, 0.6646666526794434, 0.7360000014305115, 0.7526666522026062, 0.7793333530426025, 0.7620000243186951, 0.7620000243186951, 0.7893333435058594, 0.7386666536331177, 0.7873333096504211, 0.7766666412353516, 0.7896666526794434, 0.7883333563804626, 0.7826666831970215, 0.8109999895095825, 0.8190000057220459, 0.8016666769981384, 0.8090000152587891, 0.8163333535194397, 0.8286666870117188, 0.8353333473205566, 0.8363333344459534, 0.8169999718666077, 0.8393333554267883, 0.8356666564941406, 0.846666693687439, 0.8539999723434448, 0.8519999980926514, 0.8506666421890259, 0.8583333492279053, 0.843999981880188, 0.8523333072662354, 0.8543333411216736, 0.8663333058357239, 0.8586666584014893, 0.8579999804496765, 0.8523333072662354, 0.8636666536331177, 0.8496666550636292]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [2, 0, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8, 4, 3, 9, 1, 6, 6, 6, 4, 5, 4, 8, 6], [2, 2, 0, 0, 2, 1, 2, 2, 0, 0, 2, 2, 2, 2, 1, 2], [12, 98, 68, 73, 46, 92, 92, 33, 87], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 0, 0, 1], [0, 0, 0, 0], [3, 2, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.817714273929596, "mapping_values": [1, 40, 40, 24, 16, 5, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.multiply(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), tf.math.subtract(alpha, tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.add(alpha, grad)), tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(alpha, grad)))))))))))), tf.math.divide_no_nan(tf.math.add(alpha, grad), alpha))))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.1469287096690413, 1.943279235874106, 1.724938415627611, 1.2014382017161065, 0.8732541292539724, 0.7820329192984987, 0.7361457450058262, 0.6952630756333079, 0.6775409207053078, 0.6645732970915419, 0.611876742029864, 0.5973388246100545, 0.5818968221590488, 0.5777180432060911, 0.5419021282276661, 0.5215582478599085, 0.5203423844336708, 0.5331965293614714, 0.5011923900094283, 0.4764642167588928, 0.4987161515993827, 0.4805327103342977, 0.4767328887575606, 0.46102594321965384, 0.4408971906779008, 0.462263615163499, 0.43261824778719443, 0.4399462587852929, 0.41067697695296407, 0.4109154506649843, 0.4089744700897072, 0.4041168737633511, 0.4104424532984604, 0.38420457523323526, 0.3718693137696359, 0.38130523348449796, 0.3942889211089966, 0.3692306275018816, 0.3512629787557554, 0.37818453984174905, 0.3684912313599045, 0.3446991622660532], "accuracy": [0.27565711736679077, 0.29480913281440735, 0.42464667558670044, 0.5580504536628723, 0.6688680648803711, 0.7111346125602722, 0.7205125093460083, 0.7372870445251465, 0.7452120184898376, 0.7511557340621948, 0.7725531458854675, 0.7778365015983582, 0.7808743715286255, 0.7807422876358032, 0.793950617313385, 0.8042530417442322, 0.8064984679222107, 0.8006868362426758, 0.8136309385299683, 0.8245938420295715, 0.8101968169212341, 0.819970965385437, 0.8189142942428589, 0.8253863453865051, 0.8374059200286865, 0.8305375576019287, 0.8408400416374207, 0.8348963260650635, 0.8492933511734009, 0.8502179384231567, 0.8487650156021118, 0.8549728989601135, 0.8500858545303345, 0.8545766472816467, 0.8632941246032715, 0.8610487580299377, 0.8544445633888245, 0.858671247959137, 0.8667283058166504, 0.8594637513160706, 0.863029956817627, 0.8704266548156738], "val_loss": [1.573856966836112, 1.3462175301143102, 1.1094628742762975, 0.7001182351793561, 0.7166990722928729, 0.582114611353193, 0.5443663597106934, 0.5318968296051025, 0.5515661750520978, 0.5064741713660104, 0.4871020998273577, 0.5454858030591693, 0.48578149931771414, 0.480696507862636, 0.4561299341065543, 0.46076066153390066, 0.5138567004884992, 0.4203989676066807, 0.4205549018723624, 0.4405029926981245, 0.43077082293374197, 0.4158798200743539, 0.38527925525392803, 0.3741827522005354, 0.38653442689350676, 0.4146861178534372, 0.3723006844520569, 0.3672907182148525, 0.36620132412229267, 0.3486207127571106, 0.35262629815510343, 0.35481795242854525, 0.3533757584435599, 0.3628565413611276, 0.34960352522986277, 0.35399143184934345, 0.33100427048546927, 0.3399257319314139, 0.3496541125433786, 0.3485374706132071, 0.3339128238814218, 0.3682952863829477], "val_accuracy": [0.25033333897590637, 0.5786666870117188, 0.5976666808128357, 0.6919999718666077, 0.6646666526794434, 0.7360000014305115, 0.7526666522026062, 0.7793333530426025, 0.7620000243186951, 0.7620000243186951, 0.7893333435058594, 0.7386666536331177, 0.7873333096504211, 0.7766666412353516, 0.7896666526794434, 0.7883333563804626, 0.7826666831970215, 0.8109999895095825, 0.8190000057220459, 0.8016666769981384, 0.8090000152587891, 0.8163333535194397, 0.8286666870117188, 0.8353333473205566, 0.8363333344459534, 0.8169999718666077, 0.8393333554267883, 0.8356666564941406, 0.846666693687439, 0.8539999723434448, 0.8519999980926514, 0.8506666421890259, 0.8583333492279053, 0.843999981880188, 0.8523333072662354, 0.8543333411216736, 0.8663333058357239, 0.8586666584014893, 0.8579999804496765, 0.8523333072662354, 0.8636666536331177, 0.8496666550636292]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [8, 2, 6, 6, 0, 8, 8, 4, 3, 8, 2, 8, 4, 9, 1, 0], [2, 3, 0, 0, 2, 0, 1, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 1, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.817714273929596, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 5, 2, 2, 0, 0, 5, 2, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.1469287096690413, 1.943279235874106, 1.724938415627611, 1.2014382017161065, 0.8732541292539724, 0.7820329192984987, 0.7361457450058262, 0.6952630756333079, 0.6775409207053078, 0.6645732970915419, 0.611876742029864, 0.5973388246100545, 0.5818968221590488, 0.5777180432060911, 0.5419021282276661, 0.5215582478599085, 0.5203423844336708, 0.5331965293614714, 0.5011923900094283, 0.4764642167588928, 0.4987161515993827, 0.4805327103342977, 0.4767328887575606, 0.46102594321965384, 0.4408971906779008, 0.462263615163499, 0.43261824778719443, 0.4399462587852929, 0.41067697695296407, 0.4109154506649843, 0.4089744700897072, 0.4041168737633511, 0.4104424532984604, 0.38420457523323526, 0.3718693137696359, 0.38130523348449796, 0.3942889211089966, 0.3692306275018816, 0.3512629787557554, 0.37818453984174905, 0.3684912313599045, 0.3446991622660532], "accuracy": [0.27565711736679077, 0.29480913281440735, 0.42464667558670044, 0.5580504536628723, 0.6688680648803711, 0.7111346125602722, 0.7205125093460083, 0.7372870445251465, 0.7452120184898376, 0.7511557340621948, 0.7725531458854675, 0.7778365015983582, 0.7808743715286255, 0.7807422876358032, 0.793950617313385, 0.8042530417442322, 0.8064984679222107, 0.8006868362426758, 0.8136309385299683, 0.8245938420295715, 0.8101968169212341, 0.819970965385437, 0.8189142942428589, 0.8253863453865051, 0.8374059200286865, 0.8305375576019287, 0.8408400416374207, 0.8348963260650635, 0.8492933511734009, 0.8502179384231567, 0.8487650156021118, 0.8549728989601135, 0.8500858545303345, 0.8545766472816467, 0.8632941246032715, 0.8610487580299377, 0.8544445633888245, 0.858671247959137, 0.8667283058166504, 0.8594637513160706, 0.863029956817627, 0.8704266548156738], "val_loss": [1.573856966836112, 1.3462175301143102, 1.1094628742762975, 0.7001182351793561, 0.7166990722928729, 0.582114611353193, 0.5443663597106934, 0.5318968296051025, 0.5515661750520978, 0.5064741713660104, 0.4871020998273577, 0.5454858030591693, 0.48578149931771414, 0.480696507862636, 0.4561299341065543, 0.46076066153390066, 0.5138567004884992, 0.4203989676066807, 0.4205549018723624, 0.4405029926981245, 0.43077082293374197, 0.4158798200743539, 0.38527925525392803, 0.3741827522005354, 0.38653442689350676, 0.4146861178534372, 0.3723006844520569, 0.3672907182148525, 0.36620132412229267, 0.3486207127571106, 0.35262629815510343, 0.35481795242854525, 0.3533757584435599, 0.3628565413611276, 0.34960352522986277, 0.35399143184934345, 0.33100427048546927, 0.3399257319314139, 0.3496541125433786, 0.3485374706132071, 0.3339128238814218, 0.3682952863829477], "val_accuracy": [0.25033333897590637, 0.5786666870117188, 0.5976666808128357, 0.6919999718666077, 0.6646666526794434, 0.7360000014305115, 0.7526666522026062, 0.7793333530426025, 0.7620000243186951, 0.7620000243186951, 0.7893333435058594, 0.7386666536331177, 0.7873333096504211, 0.7766666412353516, 0.7896666526794434, 0.7883333563804626, 0.7826666831970215, 0.8109999895095825, 0.8190000057220459, 0.8016666769981384, 0.8090000152587891, 0.8163333535194397, 0.8286666870117188, 0.8353333473205566, 0.8363333344459534, 0.8169999718666077, 0.8393333554267883, 0.8356666564941406, 0.846666693687439, 0.8539999723434448, 0.8519999980926514, 0.8506666421890259, 0.8583333492279053, 0.843999981880188, 0.8523333072662354, 0.8543333411216736, 0.8663333058357239, 0.8586666584014893, 0.8579999804496765, 0.8523333072662354, 0.8636666536331177, 0.8496666550636292]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1], [2, 9, 0, 6, 0, 3, 8, 2, 5, 6, 1, 8, 4, 3, 9, 1, 6, 6, 6, 4, 5, 2, 8, 7], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2, 2], [26, 98, 68, 73, 46, 3, 41, 63], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 0, 0, 1], [0, 0, 1, 0], [3, 2, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.817714273929596, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.1469287096690413, 1.943279235874106, 1.724938415627611, 1.2014382017161065, 0.8732541292539724, 0.7820329192984987, 0.7361457450058262, 0.6952630756333079, 0.6775409207053078, 0.6645732970915419, 0.611876742029864, 0.5973388246100545, 0.5818968221590488, 0.5777180432060911, 0.5419021282276661, 0.5215582478599085, 0.5203423844336708, 0.5331965293614714, 0.5011923900094283, 0.4764642167588928, 0.4987161515993827, 0.4805327103342977, 0.4767328887575606, 0.46102594321965384, 0.4408971906779008, 0.462263615163499, 0.43261824778719443, 0.4399462587852929, 0.41067697695296407, 0.4109154506649843, 0.4089744700897072, 0.4041168737633511, 0.4104424532984604, 0.38420457523323526, 0.3718693137696359, 0.38130523348449796, 0.3942889211089966, 0.3692306275018816, 0.3512629787557554, 0.37818453984174905, 0.3684912313599045, 0.3446991622660532], "accuracy": [0.27565711736679077, 0.29480913281440735, 0.42464667558670044, 0.5580504536628723, 0.6688680648803711, 0.7111346125602722, 0.7205125093460083, 0.7372870445251465, 0.7452120184898376, 0.7511557340621948, 0.7725531458854675, 0.7778365015983582, 0.7808743715286255, 0.7807422876358032, 0.793950617313385, 0.8042530417442322, 0.8064984679222107, 0.8006868362426758, 0.8136309385299683, 0.8245938420295715, 0.8101968169212341, 0.819970965385437, 0.8189142942428589, 0.8253863453865051, 0.8374059200286865, 0.8305375576019287, 0.8408400416374207, 0.8348963260650635, 0.8492933511734009, 0.8502179384231567, 0.8487650156021118, 0.8549728989601135, 0.8500858545303345, 0.8545766472816467, 0.8632941246032715, 0.8610487580299377, 0.8544445633888245, 0.858671247959137, 0.8667283058166504, 0.8594637513160706, 0.863029956817627, 0.8704266548156738], "val_loss": [1.573856966836112, 1.3462175301143102, 1.1094628742762975, 0.7001182351793561, 0.7166990722928729, 0.582114611353193, 0.5443663597106934, 0.5318968296051025, 0.5515661750520978, 0.5064741713660104, 0.4871020998273577, 0.5454858030591693, 0.48578149931771414, 0.480696507862636, 0.4561299341065543, 0.46076066153390066, 0.5138567004884992, 0.4203989676066807, 0.4205549018723624, 0.4405029926981245, 0.43077082293374197, 0.4158798200743539, 0.38527925525392803, 0.3741827522005354, 0.38653442689350676, 0.4146861178534372, 0.3723006844520569, 0.3672907182148525, 0.36620132412229267, 0.3486207127571106, 0.35262629815510343, 0.35481795242854525, 0.3533757584435599, 0.3628565413611276, 0.34960352522986277, 0.35399143184934345, 0.33100427048546927, 0.3399257319314139, 0.3496541125433786, 0.3485374706132071, 0.3339128238814218, 0.3682952863829477], "val_accuracy": [0.25033333897590637, 0.5786666870117188, 0.5976666808128357, 0.6919999718666077, 0.6646666526794434, 0.7360000014305115, 0.7526666522026062, 0.7793333530426025, 0.7620000243186951, 0.7620000243186951, 0.7893333435058594, 0.7386666536331177, 0.7873333096504211, 0.7766666412353516, 0.7896666526794434, 0.7883333563804626, 0.7826666831970215, 0.8109999895095825, 0.8190000057220459, 0.8016666769981384, 0.8090000152587891, 0.8163333535194397, 0.8286666870117188, 0.8353333473205566, 0.8363333344459534, 0.8169999718666077, 0.8393333554267883, 0.8356666564941406, 0.846666693687439, 0.8539999723434448, 0.8519999980926514, 0.8506666421890259, 0.8583333492279053, 0.843999981880188, 0.8523333072662354, 0.8543333411216736, 0.8663333058357239, 0.8586666584014893, 0.8579999804496765, 0.8523333072662354, 0.8636666536331177, 0.8496666550636292]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [9, 9, 6, 6, 6, 3, 5, 2, 5, 6, 1, 8], [2, 3, 0, 2, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46, 3, 52, 63], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 0, 0], [3, 2, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.817714273929596, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.1469287096690413, 1.943279235874106, 1.724938415627611, 1.2014382017161065, 0.8732541292539724, 0.7820329192984987, 0.7361457450058262, 0.6952630756333079, 0.6775409207053078, 0.6645732970915419, 0.611876742029864, 0.5973388246100545, 0.5818968221590488, 0.5777180432060911, 0.5419021282276661, 0.5215582478599085, 0.5203423844336708, 0.5331965293614714, 0.5011923900094283, 0.4764642167588928, 0.4987161515993827, 0.4805327103342977, 0.4767328887575606, 0.46102594321965384, 0.4408971906779008, 0.462263615163499, 0.43261824778719443, 0.4399462587852929, 0.41067697695296407, 0.4109154506649843, 0.4089744700897072, 0.4041168737633511, 0.4104424532984604, 0.38420457523323526, 0.3718693137696359, 0.38130523348449796, 0.3942889211089966, 0.3692306275018816, 0.3512629787557554, 0.37818453984174905, 0.3684912313599045, 0.3446991622660532], "accuracy": [0.27565711736679077, 0.29480913281440735, 0.42464667558670044, 0.5580504536628723, 0.6688680648803711, 0.7111346125602722, 0.7205125093460083, 0.7372870445251465, 0.7452120184898376, 0.7511557340621948, 0.7725531458854675, 0.7778365015983582, 0.7808743715286255, 0.7807422876358032, 0.793950617313385, 0.8042530417442322, 0.8064984679222107, 0.8006868362426758, 0.8136309385299683, 0.8245938420295715, 0.8101968169212341, 0.819970965385437, 0.8189142942428589, 0.8253863453865051, 0.8374059200286865, 0.8305375576019287, 0.8408400416374207, 0.8348963260650635, 0.8492933511734009, 0.8502179384231567, 0.8487650156021118, 0.8549728989601135, 0.8500858545303345, 0.8545766472816467, 0.8632941246032715, 0.8610487580299377, 0.8544445633888245, 0.858671247959137, 0.8667283058166504, 0.8594637513160706, 0.863029956817627, 0.8704266548156738], "val_loss": [1.573856966836112, 1.3462175301143102, 1.1094628742762975, 0.7001182351793561, 0.7166990722928729, 0.582114611353193, 0.5443663597106934, 0.5318968296051025, 0.5515661750520978, 0.5064741713660104, 0.4871020998273577, 0.5454858030591693, 0.48578149931771414, 0.480696507862636, 0.4561299341065543, 0.46076066153390066, 0.5138567004884992, 0.4203989676066807, 0.4205549018723624, 0.4405029926981245, 0.43077082293374197, 0.4158798200743539, 0.38527925525392803, 0.3741827522005354, 0.38653442689350676, 0.4146861178534372, 0.3723006844520569, 0.3672907182148525, 0.36620132412229267, 0.3486207127571106, 0.35262629815510343, 0.35481795242854525, 0.3533757584435599, 0.3628565413611276, 0.34960352522986277, 0.35399143184934345, 0.33100427048546927, 0.3399257319314139, 0.3496541125433786, 0.3485374706132071, 0.3339128238814218, 0.3682952863829477], "val_accuracy": [0.25033333897590637, 0.5786666870117188, 0.5976666808128357, 0.6919999718666077, 0.6646666526794434, 0.7360000014305115, 0.7526666522026062, 0.7793333530426025, 0.7620000243186951, 0.7620000243186951, 0.7893333435058594, 0.7386666536331177, 0.7873333096504211, 0.7766666412353516, 0.7896666526794434, 0.7883333563804626, 0.7826666831970215, 0.8109999895095825, 0.8190000057220459, 0.8016666769981384, 0.8090000152587891, 0.8163333535194397, 0.8286666870117188, 0.8353333473205566, 0.8363333344459534, 0.8169999718666077, 0.8393333554267883, 0.8356666564941406, 0.846666693687439, 0.8539999723434448, 0.8519999980926514, 0.8506666421890259, 0.8583333492279053, 0.843999981880188, 0.8523333072662354, 0.8543333411216736, 0.8663333058357239, 0.8586666584014893, 0.8579999804496765, 0.8523333072662354, 0.8636666536331177, 0.8496666550636292]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1], [2, 9, 2, 8, 0, 3, 8, 2, 5, 6, 1, 8, 4, 3, 9, 1, 6, 6, 6, 4, 5, 4, 8, 7], [2, 2, 2, 0, 2, 0, 2, 2, 0, 0, 0, 2, 2, 2, 1], [26, 98, 68, 3, 46, 3, 2, 63], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 0, 0, 1], [0, 0, 0, 0], [3, 2, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.817714273929596, "mapping_values": [1, 36, 36, 23, 13, 7, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 44, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, grad)), grad))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), grad))), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), tf.math.square(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))))), tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), grad)))))))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.1469287096690413, 1.943279235874106, 1.724938415627611, 1.2014382017161065, 0.8732541292539724, 0.7820329192984987, 0.7361457450058262, 0.6952630756333079, 0.6775409207053078, 0.6645732970915419, 0.611876742029864, 0.5973388246100545, 0.5818968221590488, 0.5777180432060911, 0.5419021282276661, 0.5215582478599085, 0.5203423844336708, 0.5331965293614714, 0.5011923900094283, 0.4764642167588928, 0.4987161515993827, 0.4805327103342977, 0.4767328887575606, 0.46102594321965384, 0.4408971906779008, 0.462263615163499, 0.43261824778719443, 0.4399462587852929, 0.41067697695296407, 0.4109154506649843, 0.4089744700897072, 0.4041168737633511, 0.4104424532984604, 0.38420457523323526, 0.3718693137696359, 0.38130523348449796, 0.3942889211089966, 0.3692306275018816, 0.3512629787557554, 0.37818453984174905, 0.3684912313599045, 0.3446991622660532], "accuracy": [0.27565711736679077, 0.29480913281440735, 0.42464667558670044, 0.5580504536628723, 0.6688680648803711, 0.7111346125602722, 0.7205125093460083, 0.7372870445251465, 0.7452120184898376, 0.7511557340621948, 0.7725531458854675, 0.7778365015983582, 0.7808743715286255, 0.7807422876358032, 0.793950617313385, 0.8042530417442322, 0.8064984679222107, 0.8006868362426758, 0.8136309385299683, 0.8245938420295715, 0.8101968169212341, 0.819970965385437, 0.8189142942428589, 0.8253863453865051, 0.8374059200286865, 0.8305375576019287, 0.8408400416374207, 0.8348963260650635, 0.8492933511734009, 0.8502179384231567, 0.8487650156021118, 0.8549728989601135, 0.8500858545303345, 0.8545766472816467, 0.8632941246032715, 0.8610487580299377, 0.8544445633888245, 0.858671247959137, 0.8667283058166504, 0.8594637513160706, 0.863029956817627, 0.8704266548156738], "val_loss": [1.573856966836112, 1.3462175301143102, 1.1094628742762975, 0.7001182351793561, 0.7166990722928729, 0.582114611353193, 0.5443663597106934, 0.5318968296051025, 0.5515661750520978, 0.5064741713660104, 0.4871020998273577, 0.5454858030591693, 0.48578149931771414, 0.480696507862636, 0.4561299341065543, 0.46076066153390066, 0.5138567004884992, 0.4203989676066807, 0.4205549018723624, 0.4405029926981245, 0.43077082293374197, 0.4158798200743539, 0.38527925525392803, 0.3741827522005354, 0.38653442689350676, 0.4146861178534372, 0.3723006844520569, 0.3672907182148525, 0.36620132412229267, 0.3486207127571106, 0.35262629815510343, 0.35481795242854525, 0.3533757584435599, 0.3628565413611276, 0.34960352522986277, 0.35399143184934345, 0.33100427048546927, 0.3399257319314139, 0.3496541125433786, 0.3485374706132071, 0.3339128238814218, 0.3682952863829477], "val_accuracy": [0.25033333897590637, 0.5786666870117188, 0.5976666808128357, 0.6919999718666077, 0.6646666526794434, 0.7360000014305115, 0.7526666522026062, 0.7793333530426025, 0.7620000243186951, 0.7620000243186951, 0.7893333435058594, 0.7386666536331177, 0.7873333096504211, 0.7766666412353516, 0.7896666526794434, 0.7883333563804626, 0.7826666831970215, 0.8109999895095825, 0.8190000057220459, 0.8016666769981384, 0.8090000152587891, 0.8163333535194397, 0.8286666870117188, 0.8353333473205566, 0.8363333344459534, 0.8169999718666077, 0.8393333554267883, 0.8356666564941406, 0.846666693687439, 0.8539999723434448, 0.8519999980926514, 0.8506666421890259, 0.8583333492279053, 0.843999981880188, 0.8523333072662354, 0.8543333411216736, 0.8663333058357239, 0.8586666584014893, 0.8579999804496765, 0.8523333072662354, 0.8636666536331177, 0.8496666550636292]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [2, 3, 6, 6, 0, 3, 6, 2, 5, 6, 1, 8, 9, 9, 3, 1, 7, 8, 4, 9], [2, 3, 0, 2, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 78, 68, 73, 46, 92, 49, 75], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.27085715532302856, "mapping_values": [1, 31, 31, 20, 11, 8, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.subtract(grad, tf.math.add(alpha, grad)), tf.math.sqrt(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.subtract(tf.math.add(grad, grad), tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))), tf.math.sqrt(tf.math.pow(tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, beta), beta)", "other_info": {"loss": [2.271590426424475, 2.384828316174982, 2.3019893750412557, 2.2665628060184813, 2.302966452986415, 2.420206713780373], "accuracy": [0.20499274134635925, 0.12323339283466339, 0.10196803510189056, 0.14872540533542633, 0.09021265059709549, 0.1508387327194214], "val_loss": [1.5599912575313024, 1.974825654711042, 1.959113461630685, 1.9742497035435267, 1.9697075571332658, 1.9820404052734375], "val_accuracy": [0.2926666736602783, 0.09966666996479034, 0.25200000405311584, 0.10266666859388351, 0.1626666635274887, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 95, 68, 73, 46], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.20257142186164856, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, beta), beta)", "other_info": {"loss": [2.9986455928632187, 2.509495130855614, 2.5011931221168022, 2.428804806556999, 2.456326279295686, 2.5236967133020825, 2.4889850144089647], "accuracy": [0.20314356684684753, 0.13881917297840118, 0.1476687341928482, 0.10328886657953262, 0.09734513610601425, 0.09893012791872025, 0.10196803510189056], "val_loss": [2.143159866333008, 1.704925298690796, 2.0612121990748813, 2.1427011489868164, 2.159481797899519, 1.9983187402997697, 2.144656317574637], "val_accuracy": [0.09966666996479034, 0.3440000116825104, 0.09833333641290665, 0.09733333438634872, 0.10000000149011612, 0.10400000214576721, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1], [2, 6, 6, 6, 0, 5, 8, 2, 5, 6, 9, 1, 4, 5, 9, 1, 6, 6, 6, 9, 5, 4, 8, 7], [2, 3, 1, 0, 0, 0, 2, 2, 0, 0, 0, 3, 2, 2, 1], [26, 98, 68, 73, 46, 44, 91, 34], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 0, 1], [0, 0, 0, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 24, 24, 16, 8, 5, 1, 1, 0, 1, 1, 6, 3, 3, 0, 0, 5, 2, 3, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), alpha)))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))))), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.pow(tf.math.add(alpha, tf.math.square(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), grad)), grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.3022952951444626, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [5, 9, 6, 6, 0, 9, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07277770340442657, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1], [6, 1, 0, 6, 0, 5, 2, 2, 5, 6, 1, 8], [2, 1, 0, 2, 0, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 4, 3, 3, 0, 2, 1, 3, 0, 0], [12, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 1, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 7, 5, 2, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, grad), alpha), tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(grad, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [3.480261328670374, 14.567247467585181, 40.32319099014115, 85.41724180907558, 151.4910258871453, 246.11377568636053], "accuracy": [0.09232597798109055, 0.10368511080741882, 0.10249637067317963, 0.1014397069811821, 0.09985470771789551, 0.09985470771789551], "val_loss": [5.071988923209054, 17.02614430018834, 39.4270749773298, 74.9455806187221, 126.77032470703125, 198.36055646623885], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [2, 2, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8, 4, 9, 5, 0, 5, 2, 3, 3, 3, 0, 4, 3, 7, 6], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2, 3, 0, 0], [26, 98, 68, 73, 46, 92, 92, 33, 87], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [0, 0, 0, 0], [3, 3, 0], [5, 3], [], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 1, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 9, 7, 3, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 3, 1, 2, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), grad)))), tf.math.add(alpha, tf.math.add(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1], [1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0], [2, 9, 6, 6, 0, 4, 8, 2, 5, 2, 1, 8, 4, 9], [2, 2, 0, 0, 2, 0, 2, 2, 0, 0, 0, 2, 2, 2, 1], [18, 49, 68, 84, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 0, 0], [3, 3, 0], [5, 3], [], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [0, 3, 0, 0, 0, 0, 2, 2, 0, 0, 0, 3, 2, 2], [20, 98, 68, 73, 46, 45], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [2, 3, 2, 9, 2, 9], [2, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 10, 6, 6, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(beta, beta), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07106062769889832, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [9, 9, 6, 6, 6, 3, 5, 2, 5, 6, 1, 8], [1, 3, 0, 2, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 88, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 1, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.subtract(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [4698097561.713169, 158396262465.19193, 451649100905.36206, 853151192683.0527, 1372627527193.3599, 2018320048183.183], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [65963355574.85714, 263948861440.0, 574854154532.5714, 978249018806.8572, 1487547662336.0, 2102745703570.2856], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 4, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 9, 5, 3, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 5, 2, 3, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(grad)), tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))), tf.math.square(grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.pow(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1], [2, 9, 6, 6, 0, 3, 8, 2, 2, 6, 1, 8, 4, 3, 9, 1, 2, 6, 6, 4, 5, 4, 8, 7], [2, 2, 1, 2, 2, 0, 2, 2, 0, 0, 1, 2, 2, 0, 1], [21, 98, 68, 73, 46, 3, 86, 11], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 0, 0, 1], [0, 0, 0, 0], [3, 2, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.04828571528196335, "mapping_values": [1, 38, 38, 23, 15, 6, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 50, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), alpha)), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.subtract(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), grad))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha))))), tf.math.add(alpha, grad)))))))))))), tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))))))), tf.math.sqrt(alpha)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.1292174551795897, 3.191247730994536, 2.563667952124752, 2.4281268223417496, 2.19344292265187, 2.389435031048421, 2.4571624792263003, 2.370123398034737, 2.39572084524754, 2.3997409488578216], "accuracy": [0.2938845455646515, 0.19099193811416626, 0.1492537260055542, 0.1438383311033249, 0.2114647924900055, 0.20697398483753204, 0.10038304328918457, 0.10077928751707077, 0.09985470771789551, 0.10170386731624603], "val_loss": [1.8926194054739816, 1.5182158606392997, 1.9251415388924735, 1.936389446258545, 1.4678226198468889, 2.1123829569135393, 2.0317995888846263, 2.0340144293648854, 2.058263506208147, 2.0428966113499234], "val_accuracy": [0.18066667020320892, 0.3423333466053009, 0.14000000059604645, 0.10166666656732559, 0.4339999854564667, 0.09833333641290665, 0.09966666996479034, 0.09733333438634872, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0], [2, 9, 6, 6, 0, 4, 8, 2, 5, 2, 1, 8, 4, 9], [2, 2, 0, 0, 2, 0, 2, 2, 0, 0, 0, 2, 2, 2, 1], [26, 98, 68, 73, 46, 3, 52, 63], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 0, 1], [0, 0, 0, 0], [3, 2, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 2, 2, 9, 2, 9], [2, 3, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 6, 3, 3, 0, 0, 5, 2, 3, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.add(sigma, sigma)), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.add(beta, sigma), beta)", "other_info": {"loss": [2.3039159150942994, 2.3036963095077354, 2.3010431384019974, 2.30238342858293, 2.300447344858696, 2.3016362336364957], "accuracy": [0.0874389111995697, 0.08889182657003403, 0.09047681838274002, 0.09325055778026581, 0.09747721254825592, 0.09113723784685135], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]