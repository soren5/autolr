[{"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [3, 2, 2, 3], [44, 57], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 6, 6, 6, 5, 2, 2, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 1, 0, 1, 1, 3, 0, 0], [90, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 3, 3, 6, 9], [3, 3, 3, 1], [45, 38]], "fitness": -0.8057143092155457, "mapping_values": [1, 3, 3, 1, 2, 0, 18, 18, 9, 9, 2, 1, 1, 0, 1, 0, 8, 5, 3, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(grad, grad), tf.math.add(beta, grad))), tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(alpha, tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, grad)))))), tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(sigma, tf.math.divide_no_nan(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), sigma)), sigma))", "other_info": {"loss": [2.011893494364419, 1.4667344345250983, 1.021156639313386, 0.8683749948352824, 0.795230312228376, 0.732628464974338, 0.7334442403196517, 0.6562204629501662, 0.6887756423344937, 0.6374200628796085, 0.6164680949811213, 0.5693149694031602, 0.5945481521310807, 0.5892750996608681, 0.5396235019948741, 0.552609655166173, 0.5298024479896637, 0.5322676773761572, 0.512131830374043, 0.4913527964128558, 0.485110110874268, 0.4792486030419961, 0.46767706176498075, 0.4643018299861591, 0.4525874969060505, 0.4477412916366624, 0.4560599947421306, 0.44287255846073187, 0.4396838483289563, 0.419532486169314, 0.4278239191735756, 0.4133642807911888, 0.4158186263191607, 0.40127510752313883, 0.408436848002969, 0.3939210526018315, 0.3795690852354042, 0.3861300825891619, 0.37613115428287935, 0.3762845670416402, 0.36710467424060156, 0.3637847607051692, 0.36085602560803526, 0.3590274813932246, 0.33943953420885675, 0.3522317445218335, 0.32591792919443363, 0.3281920784972426, 0.34234922497248244, 0.3504815106465281], "accuracy": [0.33483028411865234, 0.5031039714813232, 0.6156386137008667, 0.6713775992393494, 0.7025492191314697, 0.7195879220962524, 0.7169462442398071, 0.7535332441329956, 0.7390040755271912, 0.7555144429206848, 0.7668735980987549, 0.7903843522071838, 0.7771760821342468, 0.7770439982414246, 0.8016114234924316, 0.7890635132789612, 0.7975168228149414, 0.7975168228149414, 0.8043851256370544, 0.8141592741012573, 0.8189142942428589, 0.8204993009567261, 0.828292191028595, 0.8309338092803955, 0.8294808864593506, 0.8348963260650635, 0.8317263126373291, 0.8333113193511963, 0.8333113193511963, 0.8453308939933777, 0.8381983637809753, 0.8450667262077332, 0.8462554216384888, 0.850350022315979, 0.8486329317092896, 0.8555012345314026, 0.8626337051391602, 0.8578787446022034, 0.8593316674232483, 0.8603883385658264, 0.8626337051391602, 0.8684453964233398, 0.8644828796386719, 0.870030403137207, 0.8728041052818298, 0.8665962219238281, 0.8794082403182983, 0.8796724081039429, 0.8720116019248962, 0.8679170608520508], "val_loss": [1.5581104414803642, 0.874352250780378, 0.6552378279822213, 0.6868072748184204, 0.617122871535165, 0.6278570549828666, 0.5165812117712838, 0.5403821127755302, 0.5229924236025129, 0.5247349398476737, 0.48649089676993235, 0.4562207119805472, 0.5523929936545235, 0.47201335430145264, 0.47257910455976215, 0.4392695852688381, 0.4309384397097996, 0.45609854800360544, 0.45169375623975483, 0.4130131006240845, 0.4452283041817801, 0.3857698696000235, 0.4386020302772522, 0.39379554986953735, 0.39337949241910664, 0.40650091000965666, 0.36760449409484863, 0.4072504299027579, 0.36921966075897217, 0.3694835220064436, 0.3593611036028181, 0.3806625349181039, 0.3817806584494455, 0.3711892707007272, 0.34602729763303486, 0.3585078886577061, 0.3517893297331674, 0.34814103160585674, 0.3456846135003226, 0.337376458304269, 0.3743481550897871, 0.3420773318835667, 0.3488302230834961, 0.3778989315032959, 0.3310581956590925, 0.3392335687364851, 0.32308932713099886, 0.33126865114484516, 0.3234122565814427, 0.3410232492855617], "val_accuracy": [0.41866666078567505, 0.6033333539962769, 0.7086666822433472, 0.7049999833106995, 0.7143333554267883, 0.7046666741371155, 0.7710000276565552, 0.7540000081062317, 0.7616666555404663, 0.7580000162124634, 0.7743333578109741, 0.8063333630561829, 0.7673333287239075, 0.8016666769981384, 0.7886666655540466, 0.812333345413208, 0.8046666383743286, 0.7950000166893005, 0.8033333420753479, 0.8263333439826965, 0.7983333468437195, 0.8376666903495789, 0.8029999732971191, 0.8330000042915344, 0.8323333263397217, 0.8256666660308838, 0.847000002861023, 0.8199999928474426, 0.8463333249092102, 0.8413333296775818, 0.8493333458900452, 0.8343333601951599, 0.8393333554267883, 0.8396666646003723, 0.8539999723434448, 0.8456666469573975, 0.8543333411216736, 0.8560000061988831, 0.8516666889190674, 0.8619999885559082, 0.8420000076293945, 0.8556666374206543, 0.8543333411216736, 0.8293333053588867, 0.8679999709129333, 0.859000027179718, 0.8659999966621399, 0.8669999837875366, 0.8646666407585144, 0.8583333492279053]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 0], [7, 6, 4, 9], [3, 2, 2, 3], [44, 57], [1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [4, 6, 6, 6, 5, 2, 2, 4, 5, 2, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 2, 1, 0, 2, 1, 3, 0, 0], [48, 53, 49, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 1, 1], [0, 3, 3, 6, 9], [3, 0], [45, 38]], "fitness": -0.74657142162323, "mapping_values": [1, 1, 1, 0, 1, 0, 19, 19, 10, 9, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(grad, grad)), tf.math.square(tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), beta)))))), tf.math.square(tf.math.add(beta, alpha)))), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.066674916531038, 1.7431958381919623, 1.3068926701251589, 0.9748195180598818, 0.9096160913738734, 0.8264747355371937, 0.8464486480562238, 0.7322106454602605, 0.7202921713410966, 0.6967481067388159], "accuracy": [0.31726324558258057, 0.4593845009803772, 0.5365209579467773, 0.6440364718437195, 0.6592260003089905, 0.6881521344184875, 0.6804913282394409, 0.7137762308120728, 0.7195879220962524, 0.7302865982055664], "val_loss": [1.5592522961752755, 1.3127033369881767, 0.8437207766941616, 0.7246259791510445, 0.5762112140655518, 0.6580391441072736, 0.6020639794213432, 0.5477830001286098, 0.5301355634416852, 0.5291554416928973], "val_accuracy": [0.46433332562446594, 0.49000000953674316, 0.653333306312561, 0.6696666479110718, 0.7593333125114441, 0.7003333568572998, 0.7120000123977661, 0.7329999804496765, 0.7540000081062317, 0.7526666522026062]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [3, 2, 2, 3], [44, 57], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [9, 6, 6, 8, 5, 2, 2, 4, 5, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 1, 0, 1, 2, 3, 0, 0], [42, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0], [0, 3, 3, 5, 9], [3, 1, 3, 1], [45, 38]], "fitness": -0.26914286613464355, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.610897393006816, 2.3136966290837346, 2.293990644150879, 2.3070451206519165, 2.3038531235888997, 2.3037783334661768, 2.3034756595526926], "accuracy": [0.2316734939813614, 0.13168670237064362, 0.17791573703289032, 0.09879804402589798, 0.09959053993225098, 0.09734513610601425, 0.0952318087220192], "val_loss": [2.1078852925981795, 1.6266594614301408, 1.983971391405378, 1.9740170751299178, 1.9739413261413574, 1.9739603996276855, 1.9736111504690987], "val_accuracy": [0.10000000149011612, 0.3186666667461395, 0.09966666996479034, 0.09733333438634872, 0.09966666996479034, 0.09966666996479034, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1], [7, 6, 4, 0, 8, 8, 0], [3, 2, 2, 3], [44, 57, 55], [1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 6, 6, 1, 1, 8, 4, 8], [2, 0, 2, 3, 2, 0, 2, 1, 4, 1, 3, 2, 1, 3, 5], [48, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [6], [], [0, 0, 0, 1], [0, 0, 0], [3, 1], [18]], "fitness": -0.26914286613464355, "mapping_values": [1, 11, 11, 7, 4, 0, 15, 15, 8, 7, 2, 1, 1, 0, 1, 0, 4, 3, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(grad, tf.math.negative(tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, grad))))), tf.math.negative(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(beta, tf.math.subtract(tf.math.add(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), tf.math.sqrt(grad))))))), beta), tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.negative(sigma)))", "other_info": {"loss": [2.610897393006816, 2.3136966290837346, 2.293990644150879, 2.3070451206519165, 2.3038531235888997, 2.3037783334661768, 2.3034756595526926], "accuracy": [0.2316734939813614, 0.13168670237064362, 0.17791573703289032, 0.09879804402589798, 0.09959053993225098, 0.09734513610601425, 0.0952318087220192], "val_loss": [2.1078852925981795, 1.6266594614301408, 1.983971391405378, 1.9740170751299178, 1.9739413261413574, 1.9739603996276855, 1.9736111504690987], "val_accuracy": [0.10000000149011612, 0.3186666667461395, 0.09966666996479034, 0.09733333438634872, 0.09966666996479034, 0.09966666996479034, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0], [7, 6, 4, 9], [3, 3, 2, 3], [44, 57, 55], [1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0], [1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], [1, 6, 8, 4, 5, 2, 2, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 3, 1, 0, 1, 1, 3, 0, 0], [48, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [1, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 3, 4, 6, 9], [3, 3, 3, 1], [45, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), tf.math.pow(tf.math.add(alpha, grad), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0738343670964241, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [3, 2, 2, 3], [44, 57], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [2, 6, 6, 6, 5, 2, 8, 4, 4, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 1, 0, 1, 1, 3, 0, 0], [42, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [1, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 3, 3, 6, 9], [3, 1, 3, 1], [45, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 13, 13, 7, 6, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(grad, grad)), tf.math.square(grad))), tf.math.add(beta, alpha))), tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0738343670964241, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [3, 2, 2, 3], [44, 57], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [2, 6, 6, 6, 5, 2, 2, 4, 5, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 1, 0, 1, 1, 0, 0, 0], [48, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0], [0, 2, 3, 1, 9], [3, 1, 3, 1], [45, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 17, 17, 9, 8, 2, 1, 1, 0, 1, 0, 8, 4, 4, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(grad, grad)), grad)), tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), alpha)), tf.math.square(tf.math.add(beta, alpha))))), tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.multiply(sigma, alpha), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07555144280195236, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [3, 2, 2, 3], [44, 57], [1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [2, 6, 6, 6, 5, 2, 2, 4, 5, 2, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 1, 0, 1, 1, 3, 1, 0], [42, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 6, 3, 2, 9], [3, 1, 1, 1], [45, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 19, 19, 10, 9, 1, 1, 1, 0, 1, 0, 8, 5, 3, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.divide_no_nan(grad, grad), tf.math.add(beta, tf.math.square(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.pow(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), alpha)))))), tf.math.square(tf.math.add(beta, alpha)))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(sigma, tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), alpha)), alpha))", "other_info": {"loss": [14019.854889175786, 2.313216327282542, 2.305246803817527, 2.3033407001825386, 2.3030714505951027, 2.303152349914432, 2.3029465707789765], "accuracy": [0.09787346422672272, 0.09906221181154251, 0.09998679161071777, 0.09774138033390045, 0.09747721254825592, 0.09787346422672272, 0.09272222965955734], "val_loss": [1.9897756576538086, 1.9778923988342285, 1.974790368761335, 1.9740054947989327, 1.973832130432129, 1.973757539476667, 1.9738022940499442], "val_accuracy": [0.09833333641290665, 0.10400000214576721, 0.09833333641290665, 0.09700000286102295, 0.09700000286102295, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [7, 6, 4, 9], [3, 2, 2, 3], [44, 57], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 1], [1, 6, 6, 6, 5, 2, 2, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [5, 3, 3, 1, 0, 1, 1, 3, 0, 0], [48, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3], [4, 6], [], [1, 1, 0, 1, 0, 1], [0, 3, 3, 6, 9], [2, 3, 3, 1], [87]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0738343670964241, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [5, 6, 4, 9], [3, 2, 2, 3], [44, 57, 55], [1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [4, 6, 6, 8, 5, 2, 2, 4, 5, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 1, 2, 3, 0, 0, 2, 1, 4, 1, 3, 2, 1, 3, 5], [48, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [6], [], [0, 0, 1, 1, 1], [3, 3], [3, 1, 3, 1], [45, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 5, 2, 3, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), alpha), beta)), tf.math.sqrt(tf.math.square(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(sigma, alpha), sigma)", "other_info": {"loss": [2.3034610637442596, 2.303628584334344, 2.302813436376924, 2.301253269534652, 1158680.1476069512, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09140139818191528, 0.0878351628780365, 0.08677849918603897, 0.0874389111995697, 0.09298639744520187, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.970590659550258, 1.9705909320286341, 1.9705791473388672, 1.97053439276559, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03866666555404663, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 1, 0, 1, 0], [7, 6, 4, 9], [3, 2, 2, 3], [44, 57], [1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 6, 1, 6, 5, 2, 2, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 1, 0, 1, 1, 3, 3, 0], [90, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5, 2], [], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [8, 3, 3, 6, 9], [3, 3, 3, 1], [45, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 18, 18, 9, 9, 1, 1, 1, 0, 1, 0, 8, 5, 3, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(grad, grad)), grad)), tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))), tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(alpha, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, grad))))), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(tf.math.multiply(sigma, tf.math.divide_no_nan(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), sigma)), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [3, 2, 2, 3], [44, 57, 55], [1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [4, 2, 0, 6, 2, 4, 2, 4, 5, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 1, 0, 1, 1, 3, 0, 0], [79, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [1, 0, 1, 1, 0, 0, 1, 1, 1, 0], [0, 3, 9, 6, 9], [3, 1, 3, 1], [45, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0738343670964241, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [0, 1, 0, 1, 0, 1, 0], [7, 6, 4, 9], [3, 2, 2, 3], [44, 57], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [4, 6, 6, 6, 5, 2, 9, 4, 5, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 1, 0, 1, 1, 0, 0, 0], [42, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 3, 3, 6, 9], [3, 1, 3, 1], [45, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 8, 5, 3, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(sigma, tf.math.divide_no_nan(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), alpha)), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 1, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1], [6, 6, 4, 0, 8, 8], [1, 2, 2, 3], [44, 57], [1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 6, 6, 6, 5, 2, 2, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 4, 2, 1, 0, 1, 1, 3, 0, 0], [90, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [0], [13], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 3, 1, 6, 9, 4, 6], [1, 3, 3, 1, 2], [4]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 5, 4, 0, 14, 14, 7, 7, 1, 1, 1, 0, 1, 1, 12, 7, 5, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.pow(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, grad)), tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, grad), tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), alpha))))))), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.subtract(alpha, tf.math.divide_no_nan(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.math.pow(sigma, sigma))), tf.math.divide_no_nan(alpha, beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 0, 8, 8], [3, 2, 2, 3], [44, 57], [1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 6, 6, 1, 1, 8, 4], [0, 1, 2, 3, 2, 0, 2, 1, 4, 1, 3, 2, 1, 3, 5], [48, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0], [0, 3, 1, 4, 8], [3, 1, 0, 1], [18]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(beta, alpha), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0738343670964241, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 6, 5, 0, 8, 8], [3, 2, 2, 0], [44, 57, 55], [1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 6, 6, 1, 1, 8, 4], [2, 3, 3, 3, 2, 0, 2, 1, 4, 1, 3, 2, 1, 3, 5], [48, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [6], [], [0, 0, 1, 1], [0, 5], [3, 0], [18]], "fitness": -0.08171428740024567, "mapping_values": [1, 7, 7, 4, 3, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, grad)), tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(sigma))", "other_info": {"loss": [2.3039877024214612, 2.305742800117657, 2.306916562463188, 2.307251892447582, 2.3114865535380362, 2.3137660877437893, 2.3189839938565204, 2.3268861901632563, 2.3298606214081183, 2.3421388762328825, 2.3743366026497315, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09060890227556229, 0.08506141602993011, 0.08083476126194, 0.08294808864593506, 0.08070268481969833, 0.07753269374370575, 0.07475894689559937, 0.07753269374370575, 0.07806102186441422, 0.07092854380607605, 0.07647603005170822, 0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9716963086809431, 1.9732792718069894, 1.9749177524021693, 1.9767678124564034, 1.9792611939566476, 1.9817626135689872, 1.9850281306675501, 1.9895108086722237, 1.9957084655761719, 2.008380958012172, 2.0573367391313826, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.033666666597127914, 0.02866666577756405, 0.029333332553505898, 0.02800000086426735, 0.029999999329447746, 0.039000000804662704, 0.04699999839067459, 0.06199999898672104, 0.08133333176374435, 0.0963333323597908, 0.10000000149011612, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0], [1, 0, 0, 1, 0, 1, 0], [7, 6, 4, 9], [3, 2, 2, 3], [44, 57], [1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [4, 6, 6, 6, 5, 2, 2, 4, 5, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 3, 3, 1, 0, 1, 1, 3, 0, 0], [42, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 3, 3, 6, 9], [3, 1, 3, 1], [45, 11]], "fitness": -0.07000000029802322, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 9, 5, 4, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.multiply(sigma, tf.math.divide_no_nan(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), alpha)), sigma), alpha)", "other_info": {"loss": [2.3033271460028657, 2.30316437347265, 2.30199358608461, 2.300327082666597, 2.3014870851960367, 2.300253584305876, 2.3005850042696596, 2.3019357451263938, 2.2999649402125635, 2.3000095691411344, 2.2999050395206266, 2.3002266419987243, 2.299954695456599, 2.2996946941230116, 2.299980007788099, 2.301063888092807, 2.2990174836423405, 2.299300086717123, 2.299973611298837, 2.3003474071970262, 2.300162773374175, 2.300321329916945, 2.300224121960635, 2.298939647329419, 2.30069508188515, 2.2995422439426556, 2.299472033087887, 2.2993869917850294, 2.2993080416344194, 2.299665276558014, 2.299953500718457, 2.2986549682085617, 2.2992269993143277, 2.299422208580437], "accuracy": [0.09166556596755981, 0.08875974267721176, 0.09100515395402908, 0.08955223858356476, 0.09430722147226334, 0.09549596905708313, 0.09245806187391281, 0.09074098616838455, 0.10051512718200684, 0.09879804402589798, 0.09298639744520187, 0.08809932321310043, 0.09853387624025345, 0.0952318087220192, 0.0952318087220192, 0.09800554811954498, 0.1018359512090683, 0.0940430611371994, 0.09509972482919693, 0.09140139818191528, 0.09589222073554993, 0.09787346422672272, 0.09311848133802414, 0.1022322028875351, 0.09602430462837219, 0.09232597798109055, 0.09998679161071777, 0.10011887550354004, 0.10117553919553757, 0.09813763201236725, 0.09787346422672272, 0.10276053100824356, 0.09774138033390045, 0.09774138033390045], "val_loss": [1.9703384126935686, 1.970041343144008, 1.9698123931884766, 1.9696642330714635, 1.9694958414350237, 1.9693653924124581, 1.969236101422991, 1.9690758160182409, 1.9690395082746233, 1.9689742497035436, 1.9689593996320451, 1.968923909323556, 1.9688921655927385, 1.9688786779131209, 1.9689291545322962, 1.968923773084368, 1.9689613751002721, 1.9690133503505163, 1.96905551637922, 1.9690707751682825, 1.9690960475376673, 1.9690861701965332, 1.969086033957345, 1.9690967287336076, 1.969078813280378, 1.9690929821559362, 1.9690861701965332, 1.96907867704119, 1.9690772465297155, 1.9690827642168318, 1.9690849440438407, 1.9691166196550642, 1.9691243852887834, 1.969160488673619], "val_accuracy": [0.0416666679084301, 0.04466666653752327, 0.046666666865348816, 0.04766666516661644, 0.04899999871850014, 0.05133333429694176, 0.05400000140070915, 0.05533333495259285, 0.05700000002980232, 0.057999998331069946, 0.05766666680574417, 0.05966666713356972, 0.06066666543483734, 0.06066666543483734, 0.06066666543483734, 0.06233333423733711, 0.06400000303983688, 0.06499999761581421, 0.06666667014360428, 0.06866666674613953, 0.06966666877269745, 0.07100000232458115, 0.07233333587646484, 0.07266666740179062, 0.0729999989271164, 0.07366666942834854, 0.07366666942834854, 0.07433333247900009, 0.07466666400432587, 0.07466666400432587, 0.07433333247900009, 0.07366666942834854, 0.07433333247900009, 0.0729999989271164]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [3, 2, 2, 3], [44, 57, 55], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], [4, 6, 6, 6, 5, 2, 2, 4, 5, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 2, 0, 1, 1, 3, 0, 0], [18, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3], [4, 3], [], [0, 1, 1, 1], [5, 3, 3, 6, 9], [3, 0], [45, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 3, 3, 1, 2, 0, 10, 10, 5, 5, 1, 5, 4, 2, 2, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(grad, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, beta))))), tf.math.add(beta, tf.math.square(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(sigma)", "other_info": {"loss": [2.3034607938346516, 2.3036265241912393, 2.302814925020838, 2.301275985903193, 2.302677444573391, 2.3016428712210746], "accuracy": [0.09140139818191528, 0.08770307898521423, 0.08691058307886124, 0.08717474341392517, 0.09113723784685135, 0.09206181764602661], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [8, 6, 4, 6], [3, 2, 2, 3], [44, 57], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [1, 6, 6, 6, 5, 2, 2, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 3, 1, 0, 0, 1, 3, 0, 0], [90, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1, 1], [3, 3], [3, 2], [], [0, 1, 0, 1, 0, 1], [0, 3, 3, 6, 9], [3, 3, 3, 1], [45, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 2, 2, 1, 1, 0, 12, 12, 6, 6, 3, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), grad)), grad)), tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))), tf.math.add(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3034607938346516, 2.3036265241912393, 2.302814925020838, 2.301275985903193, 2.302677444573391, 2.3016428712210746], "accuracy": [0.09140139818191528, 0.08770307898521423, 0.08691058307886124, 0.08717474341392517, 0.09113723784685135, 0.09206181764602661], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [3, 1, 2, 3], [44, 57], [1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1], [4, 6, 0, 6, 6, 2, 9, 4, 5, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 3, 0, 1, 1, 0, 0, 0], [42, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 3, 3, 2, 9], [3, 3, 3, 1], [45, 38]], "fitness": -0.03971428424119949, "mapping_values": [1, 3, 3, 1, 2, 0, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 8, 5, 3, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.pow(grad, tf.math.divide_no_nan(grad, tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(sigma, tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), sigma)), sigma))", "other_info": {"loss": [2.3035637711993675, 2.3040742522075806, 2.3036051621573743, 2.302296464374871, 2.3040716065517772, 2.3034863744067353], "accuracy": [0.09153348207473755, 0.0866464152932167, 0.08572183549404144, 0.08625016361474991, 0.08836349099874496, 0.08981640636920929], "val_loss": [1.9708058493477958, 1.9711218561444963, 1.9713770321437292, 1.9716099330357142, 1.97190523147583, 1.9722531863621302], "val_accuracy": [0.039000000804662704, 0.03733333200216293, 0.03566666692495346, 0.03400000184774399, 0.03166666626930237, 0.03200000151991844]}}]