[{"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.8222857117652893, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.024984486807512, 1.3161665204808601, 1.014502416087211, 0.8757208765474183, 0.8268824708365714, 0.7679062859178487, 0.6981724974517384, 0.6733139851672413, 0.6681394951061062, 0.6547886643742274, 0.6454840861511835, 0.5970488767960226, 0.6102458314495064, 0.6007065198062795, 0.5842984426432534, 0.572833572376705, 0.5561975403909655, 0.5313354650382683, 0.5242411891120756, 0.5259358502256242, 0.4819442955352658, 0.5039750776152648, 0.5007718673211834, 0.47381329272700623, 0.48174190192552624, 0.4610786025928169, 0.4458332803223851, 0.47874186891118187, 0.4496935196698161, 0.42342768707736417, 0.4396412604126901, 0.43761785241591067, 0.4339936878923349, 0.4144711522394089, 0.4227082106880051, 0.40505520069855805, 0.3998563879548031, 0.3956235894484842, 0.4015373402834726, 0.38843877475180755, 0.38440056304811343, 0.3853180888519154, 0.3731232206575182, 0.38231924937511746, 0.3664927299445284, 0.37814287160917, 0.34561833213774157, 0.36658427007855554, 0.3600743298777153, 0.34462558322137987, 0.33844814737790047, 0.33995831936987525, 0.33683876491115705, 0.3334681688085948, 0.33955346602317193, 0.3292760122500989, 0.330312188676855], "accuracy": [0.30299827456474304, 0.5349359512329102, 0.6353189945220947, 0.6760005354881287, 0.698190450668335, 0.7046625018119812, 0.7354378700256348, 0.7458723783493042, 0.7464007139205933, 0.7515519857406616, 0.7600052952766418, 0.7751948237419128, 0.7675340175628662, 0.7701756954193115, 0.77677983045578, 0.789459764957428, 0.789988100528717, 0.7981772422790527, 0.8053097128868103, 0.800290584564209, 0.8181217908859253, 0.81112140417099, 0.8123101592063904, 0.8230088353157043, 0.8220842480659485, 0.8274996876716614, 0.832650899887085, 0.8241975903511047, 0.8318583965301514, 0.839519202709198, 0.8378021121025085, 0.8380662798881531, 0.8411042094230652, 0.8500858545303345, 0.842028796672821, 0.8511425256729126, 0.8518029451370239, 0.8502179384231567, 0.8508783578872681, 0.8568220734596252, 0.8565579056739807, 0.8553691506385803, 0.8638224601745605, 0.8568220734596252, 0.8644828796386719, 0.8584070801734924, 0.8737286925315857, 0.8654074668884277, 0.8661999702453613, 0.871879518032074, 0.8734645247459412, 0.8732003569602966, 0.872407853603363, 0.8735966086387634, 0.8705587387084961, 0.8780874609947205, 0.8761062026023865], "val_loss": [1.3702518599373954, 0.7801803520747593, 0.7934743336268834, 0.5962389707565308, 0.6067253691809518, 0.5402397428240094, 0.5650379998343331, 0.5331963130405971, 0.4995884384427752, 0.4939977100917271, 0.47469266823359896, 0.5306546858378819, 0.5024047068187169, 0.4628880023956299, 0.45552111523491995, 0.4454281074660165, 0.4461028150149754, 0.4439804128238133, 0.44821289607456755, 0.40910842588969637, 0.42984371525900705, 0.4514238238334656, 0.41461433683122906, 0.41020290340696064, 0.4051823019981384, 0.3970174193382263, 0.4333599635532924, 0.4234727621078491, 0.38298611981528147, 0.39324008566992624, 0.37424066237040926, 0.37775369201387676, 0.36685681343078613, 0.37783197845731464, 0.3596480829375131, 0.3516811728477478, 0.3689058337892805, 0.3518264378820147, 0.3690930094037737, 0.340944732938494, 0.3564563989639282, 0.3473165546144758, 0.3424264533179147, 0.3374992183276585, 0.34562021493911743, 0.3400325093950544, 0.360624577317919, 0.33560324566704886, 0.3271198443004063, 0.33836283002580914, 0.3354629193033491, 0.325589724949428, 0.3297950966017587, 0.3803804431642805, 0.33795941727502005, 0.3262867842401777, 0.33742772681372507], "val_accuracy": [0.5316666960716248, 0.6496666669845581, 0.653333306312561, 0.7369999885559082, 0.7096666693687439, 0.7590000033378601, 0.7246666550636292, 0.7606666684150696, 0.7776666879653931, 0.7793333530426025, 0.7910000085830688, 0.7596666812896729, 0.7776666879653931, 0.809333324432373, 0.8216666579246521, 0.8086666464805603, 0.8059999942779541, 0.812666654586792, 0.7950000166893005, 0.8259999752044678, 0.8193333148956299, 0.7929999828338623, 0.8173333406448364, 0.812666654586792, 0.8306666612625122, 0.8339999914169312, 0.8149999976158142, 0.8066666722297668, 0.8376666903495789, 0.8240000009536743, 0.8383333086967468, 0.8396666646003723, 0.8516666889190674, 0.8416666388511658, 0.8526666760444641, 0.8523333072662354, 0.8379999995231628, 0.8523333072662354, 0.8453333377838135, 0.8550000190734863, 0.8539999723434448, 0.8553333282470703, 0.8576666712760925, 0.8610000014305115, 0.8483333587646484, 0.8569999933242798, 0.8500000238418579, 0.8576666712760925, 0.8683333396911621, 0.8579999804496765, 0.8603333234786987, 0.8693333268165588, 0.862666666507721, 0.8393333554267883, 0.856333315372467, 0.8690000176429749, 0.8629999756813049]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 2, 1, 2, 0, 2, 2, 0, 0, 1, 3, 2, 2, 0, 0], [8, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [2, 3], [], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [0, 1, 0, 1, 3, 2], [44, 72, 50, 41, 34]], "fitness": -0.8222857117652893, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [2.024984486807512, 1.3161665204808601, 1.014502416087211, 0.8757208765474183, 0.8268824708365714, 0.7679062859178487, 0.6981724974517384, 0.6733139851672413, 0.6681394951061062, 0.6547886643742274, 0.6454840861511835, 0.5970488767960226, 0.6102458314495064, 0.6007065198062795, 0.5842984426432534, 0.572833572376705, 0.5561975403909655, 0.5313354650382683, 0.5242411891120756, 0.5259358502256242, 0.4819442955352658, 0.5039750776152648, 0.5007718673211834, 0.47381329272700623, 0.48174190192552624, 0.4610786025928169, 0.4458332803223851, 0.47874186891118187, 0.4496935196698161, 0.42342768707736417, 0.4396412604126901, 0.43761785241591067, 0.4339936878923349, 0.4144711522394089, 0.4227082106880051, 0.40505520069855805, 0.3998563879548031, 0.3956235894484842, 0.4015373402834726, 0.38843877475180755, 0.38440056304811343, 0.3853180888519154, 0.3731232206575182, 0.38231924937511746, 0.3664927299445284, 0.37814287160917, 0.34561833213774157, 0.36658427007855554, 0.3600743298777153, 0.34462558322137987, 0.33844814737790047, 0.33995831936987525, 0.33683876491115705, 0.3334681688085948, 0.33955346602317193, 0.3292760122500989, 0.330312188676855], "accuracy": [0.30299827456474304, 0.5349359512329102, 0.6353189945220947, 0.6760005354881287, 0.698190450668335, 0.7046625018119812, 0.7354378700256348, 0.7458723783493042, 0.7464007139205933, 0.7515519857406616, 0.7600052952766418, 0.7751948237419128, 0.7675340175628662, 0.7701756954193115, 0.77677983045578, 0.789459764957428, 0.789988100528717, 0.7981772422790527, 0.8053097128868103, 0.800290584564209, 0.8181217908859253, 0.81112140417099, 0.8123101592063904, 0.8230088353157043, 0.8220842480659485, 0.8274996876716614, 0.832650899887085, 0.8241975903511047, 0.8318583965301514, 0.839519202709198, 0.8378021121025085, 0.8380662798881531, 0.8411042094230652, 0.8500858545303345, 0.842028796672821, 0.8511425256729126, 0.8518029451370239, 0.8502179384231567, 0.8508783578872681, 0.8568220734596252, 0.8565579056739807, 0.8553691506385803, 0.8638224601745605, 0.8568220734596252, 0.8644828796386719, 0.8584070801734924, 0.8737286925315857, 0.8654074668884277, 0.8661999702453613, 0.871879518032074, 0.8734645247459412, 0.8732003569602966, 0.872407853603363, 0.8735966086387634, 0.8705587387084961, 0.8780874609947205, 0.8761062026023865], "val_loss": [1.3702518599373954, 0.7801803520747593, 0.7934743336268834, 0.5962389707565308, 0.6067253691809518, 0.5402397428240094, 0.5650379998343331, 0.5331963130405971, 0.4995884384427752, 0.4939977100917271, 0.47469266823359896, 0.5306546858378819, 0.5024047068187169, 0.4628880023956299, 0.45552111523491995, 0.4454281074660165, 0.4461028150149754, 0.4439804128238133, 0.44821289607456755, 0.40910842588969637, 0.42984371525900705, 0.4514238238334656, 0.41461433683122906, 0.41020290340696064, 0.4051823019981384, 0.3970174193382263, 0.4333599635532924, 0.4234727621078491, 0.38298611981528147, 0.39324008566992624, 0.37424066237040926, 0.37775369201387676, 0.36685681343078613, 0.37783197845731464, 0.3596480829375131, 0.3516811728477478, 0.3689058337892805, 0.3518264378820147, 0.3690930094037737, 0.340944732938494, 0.3564563989639282, 0.3473165546144758, 0.3424264533179147, 0.3374992183276585, 0.34562021493911743, 0.3400325093950544, 0.360624577317919, 0.33560324566704886, 0.3271198443004063, 0.33836283002580914, 0.3354629193033491, 0.325589724949428, 0.3297950966017587, 0.3803804431642805, 0.33795941727502005, 0.3262867842401777, 0.33742772681372507], "val_accuracy": [0.5316666960716248, 0.6496666669845581, 0.653333306312561, 0.7369999885559082, 0.7096666693687439, 0.7590000033378601, 0.7246666550636292, 0.7606666684150696, 0.7776666879653931, 0.7793333530426025, 0.7910000085830688, 0.7596666812896729, 0.7776666879653931, 0.809333324432373, 0.8216666579246521, 0.8086666464805603, 0.8059999942779541, 0.812666654586792, 0.7950000166893005, 0.8259999752044678, 0.8193333148956299, 0.7929999828338623, 0.8173333406448364, 0.812666654586792, 0.8306666612625122, 0.8339999914169312, 0.8149999976158142, 0.8066666722297668, 0.8376666903495789, 0.8240000009536743, 0.8383333086967468, 0.8396666646003723, 0.8516666889190674, 0.8416666388511658, 0.8526666760444641, 0.8523333072662354, 0.8379999995231628, 0.8523333072662354, 0.8453333377838135, 0.8550000190734863, 0.8539999723434448, 0.8553333282470703, 0.8576666712760925, 0.8610000014305115, 0.8483333587646484, 0.8569999933242798, 0.8500000238418579, 0.8576666712760925, 0.8683333396911621, 0.8579999804496765, 0.8603333234786987, 0.8693333268165588, 0.862666666507721, 0.8393333554267883, 0.856333315372467, 0.8690000176429749, 0.8629999756813049]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.8222857117652893, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.024984486807512, 1.3161665204808601, 1.014502416087211, 0.8757208765474183, 0.8268824708365714, 0.7679062859178487, 0.6981724974517384, 0.6733139851672413, 0.6681394951061062, 0.6547886643742274, 0.6454840861511835, 0.5970488767960226, 0.6102458314495064, 0.6007065198062795, 0.5842984426432534, 0.572833572376705, 0.5561975403909655, 0.5313354650382683, 0.5242411891120756, 0.5259358502256242, 0.4819442955352658, 0.5039750776152648, 0.5007718673211834, 0.47381329272700623, 0.48174190192552624, 0.4610786025928169, 0.4458332803223851, 0.47874186891118187, 0.4496935196698161, 0.42342768707736417, 0.4396412604126901, 0.43761785241591067, 0.4339936878923349, 0.4144711522394089, 0.4227082106880051, 0.40505520069855805, 0.3998563879548031, 0.3956235894484842, 0.4015373402834726, 0.38843877475180755, 0.38440056304811343, 0.3853180888519154, 0.3731232206575182, 0.38231924937511746, 0.3664927299445284, 0.37814287160917, 0.34561833213774157, 0.36658427007855554, 0.3600743298777153, 0.34462558322137987, 0.33844814737790047, 0.33995831936987525, 0.33683876491115705, 0.3334681688085948, 0.33955346602317193, 0.3292760122500989, 0.330312188676855], "accuracy": [0.30299827456474304, 0.5349359512329102, 0.6353189945220947, 0.6760005354881287, 0.698190450668335, 0.7046625018119812, 0.7354378700256348, 0.7458723783493042, 0.7464007139205933, 0.7515519857406616, 0.7600052952766418, 0.7751948237419128, 0.7675340175628662, 0.7701756954193115, 0.77677983045578, 0.789459764957428, 0.789988100528717, 0.7981772422790527, 0.8053097128868103, 0.800290584564209, 0.8181217908859253, 0.81112140417099, 0.8123101592063904, 0.8230088353157043, 0.8220842480659485, 0.8274996876716614, 0.832650899887085, 0.8241975903511047, 0.8318583965301514, 0.839519202709198, 0.8378021121025085, 0.8380662798881531, 0.8411042094230652, 0.8500858545303345, 0.842028796672821, 0.8511425256729126, 0.8518029451370239, 0.8502179384231567, 0.8508783578872681, 0.8568220734596252, 0.8565579056739807, 0.8553691506385803, 0.8638224601745605, 0.8568220734596252, 0.8644828796386719, 0.8584070801734924, 0.8737286925315857, 0.8654074668884277, 0.8661999702453613, 0.871879518032074, 0.8734645247459412, 0.8732003569602966, 0.872407853603363, 0.8735966086387634, 0.8705587387084961, 0.8780874609947205, 0.8761062026023865], "val_loss": [1.3702518599373954, 0.7801803520747593, 0.7934743336268834, 0.5962389707565308, 0.6067253691809518, 0.5402397428240094, 0.5650379998343331, 0.5331963130405971, 0.4995884384427752, 0.4939977100917271, 0.47469266823359896, 0.5306546858378819, 0.5024047068187169, 0.4628880023956299, 0.45552111523491995, 0.4454281074660165, 0.4461028150149754, 0.4439804128238133, 0.44821289607456755, 0.40910842588969637, 0.42984371525900705, 0.4514238238334656, 0.41461433683122906, 0.41020290340696064, 0.4051823019981384, 0.3970174193382263, 0.4333599635532924, 0.4234727621078491, 0.38298611981528147, 0.39324008566992624, 0.37424066237040926, 0.37775369201387676, 0.36685681343078613, 0.37783197845731464, 0.3596480829375131, 0.3516811728477478, 0.3689058337892805, 0.3518264378820147, 0.3690930094037737, 0.340944732938494, 0.3564563989639282, 0.3473165546144758, 0.3424264533179147, 0.3374992183276585, 0.34562021493911743, 0.3400325093950544, 0.360624577317919, 0.33560324566704886, 0.3271198443004063, 0.33836283002580914, 0.3354629193033491, 0.325589724949428, 0.3297950966017587, 0.3803804431642805, 0.33795941727502005, 0.3262867842401777, 0.33742772681372507], "val_accuracy": [0.5316666960716248, 0.6496666669845581, 0.653333306312561, 0.7369999885559082, 0.7096666693687439, 0.7590000033378601, 0.7246666550636292, 0.7606666684150696, 0.7776666879653931, 0.7793333530426025, 0.7910000085830688, 0.7596666812896729, 0.7776666879653931, 0.809333324432373, 0.8216666579246521, 0.8086666464805603, 0.8059999942779541, 0.812666654586792, 0.7950000166893005, 0.8259999752044678, 0.8193333148956299, 0.7929999828338623, 0.8173333406448364, 0.812666654586792, 0.8306666612625122, 0.8339999914169312, 0.8149999976158142, 0.8066666722297668, 0.8376666903495789, 0.8240000009536743, 0.8383333086967468, 0.8396666646003723, 0.8516666889190674, 0.8416666388511658, 0.8526666760444641, 0.8523333072662354, 0.8379999995231628, 0.8523333072662354, 0.8453333377838135, 0.8550000190734863, 0.8539999723434448, 0.8553333282470703, 0.8576666712760925, 0.8610000014305115, 0.8483333587646484, 0.8569999933242798, 0.8500000238418579, 0.8576666712760925, 0.8683333396911621, 0.8579999804496765, 0.8603333234786987, 0.8693333268165588, 0.862666666507721, 0.8393333554267883, 0.856333315372467, 0.8690000176429749, 0.8629999756813049]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.16257143020629883, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.788769844988822, 2.322484616605975, 2.304369548623273, 2.302252710393045, 2.2797808200298064, 2.223868479959843, 2.30512595948227, 2.3034320839045623, 2.3030908074062166, 2.302882159752947], "accuracy": [0.18755778670310974, 0.09734513610601425, 0.09879804402589798, 0.09668471664190292, 0.15295206010341644, 0.2921674847602844, 0.09787346422672272, 0.09853387624025345, 0.09325055778026581, 0.10130762308835983], "val_loss": [2.0317180497305736, 1.9755345753261022, 1.973623275756836, 1.9704903193882533, 1.7441541126796178, 1.9768274171011788, 1.9740700721740723, 1.973625591823033, 1.9735123089381628, 1.9735019547598702], "val_accuracy": [0.10400000214576721, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.32100000977516174, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10400000214576721, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50, 36], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 5, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.16257143020629883, "mapping_values": [1, 16, 16, 10, 6, 4, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.square(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), grad))), tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.788769844988822, 2.322484616605975, 2.304369548623273, 2.302252710393045, 2.2797808200298064, 2.223868479959843, 2.30512595948227, 2.3034320839045623, 2.3030908074062166, 2.302882159752947], "accuracy": [0.18755778670310974, 0.09734513610601425, 0.09879804402589798, 0.09668471664190292, 0.15295206010341644, 0.2921674847602844, 0.09787346422672272, 0.09853387624025345, 0.09325055778026581, 0.10130762308835983], "val_loss": [2.0317180497305736, 1.9755345753261022, 1.973623275756836, 1.9704903193882533, 1.7441541126796178, 1.9768274171011788, 1.9740700721740723, 1.973625591823033, 1.9735123089381628, 1.9735019547598702], "val_accuracy": [0.10400000214576721, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.32100000977516174, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10400000214576721, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1], [8, 5, 6, 2, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [30, 90, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.16257143020629883, "mapping_values": [1, 3, 3, 2, 1, 0, 9, 9, 5, 4, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, tf.math.negative(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.788769844988822, 2.322484616605975, 2.304369548623273, 2.302252710393045, 2.2797808200298064, 2.223868479959843, 2.30512595948227, 2.3034320839045623, 2.3030908074062166, 2.302882159752947], "accuracy": [0.18755778670310974, 0.09734513610601425, 0.09879804402589798, 0.09668471664190292, 0.15295206010341644, 0.2921674847602844, 0.09787346422672272, 0.09853387624025345, 0.09325055778026581, 0.10130762308835983], "val_loss": [2.0317180497305736, 1.9755345753261022, 1.973623275756836, 1.9704903193882533, 1.7441541126796178, 1.9768274171011788, 1.9740700721740723, 1.973625591823033, 1.9735123089381628, 1.9735019547598702], "val_accuracy": [0.10400000214576721, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.32100000977516174, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10400000214576721, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [2, 6, 6, 1, 4, 3, 4, 1, 5, 7, 1], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [11, 86, 50, 98], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.16257143020629883, "mapping_values": [1, 18, 18, 9, 9, 4, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(grad, grad)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.math.pow(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.subtract(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))))))), grad), tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))))), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.788769844988822, 2.322484616605975, 2.304369548623273, 2.302252710393045, 2.2797808200298064, 2.223868479959843, 2.30512595948227, 2.3034320839045623, 2.3030908074062166, 2.302882159752947], "accuracy": [0.18755778670310974, 0.09734513610601425, 0.09879804402589798, 0.09668471664190292, 0.15295206010341644, 0.2921674847602844, 0.09787346422672272, 0.09853387624025345, 0.09325055778026581, 0.10130762308835983], "val_loss": [2.0317180497305736, 1.9755345753261022, 1.973623275756836, 1.9704903193882533, 1.7441541126796178, 1.9768274171011788, 1.9740700721740723, 1.973625591823033, 1.9735123089381628, 1.9735019547598702], "val_accuracy": [0.10400000214576721, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.32100000977516174, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10400000214576721, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [2, 6, 6, 6, 5, 3, 1, 1, 5, 7, 1], [0, 3, 0, 0, 0, 0, 2, 2, 0, 1, 0, 3, 2, 2], [18, 86, 50, 27, 49], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.16257143020629883, "mapping_values": [1, 12, 12, 6, 6, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), tf.math.divide_no_nan(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.788769844988822, 2.322484616605975, 2.304369548623273, 2.302252710393045, 2.2797808200298064, 2.223868479959843, 2.30512595948227, 2.3034320839045623, 2.3030908074062166, 2.302882159752947], "accuracy": [0.18755778670310974, 0.09734513610601425, 0.09879804402589798, 0.09668471664190292, 0.15295206010341644, 0.2921674847602844, 0.09787346422672272, 0.09853387624025345, 0.09325055778026581, 0.10130762308835983], "val_loss": [2.0317180497305736, 1.9755345753261022, 1.973623275756836, 1.9704903193882533, 1.7441541126796178, 1.9768274171011788, 1.9740700721740723, 1.973625591823033, 1.9735123089381628, 1.9735019547598702], "val_accuracy": [0.10400000214576721, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.32100000977516174, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10400000214576721, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [1, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [16, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 5, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.1331428587436676, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.square(sigma), alpha))", "other_info": {"loss": [2.3036771422411237, 2.3022411490286565, 2.296629100349113, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08572183549404144, 0.08875974267721176, 0.10302469879388809, 0.10342095047235489, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9705909320286341, 1.970642021724156, 2.1432480812072754, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0], [9, 3, 4, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302648152122251, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [5, 9, 6, 6, 0, 3, 4, 1, 5], [3, 3, 0, 0, 2, 2, 2, 2, 0, 0, 0, 3, 2, 2], [72, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [8, 3, 5, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))))), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(tf.math.square(sigma), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [36, 21, 13, 80, 44, 89, 7, 53, 62, 69, 4, 65], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0], [7, 3, 9, 3, 6], [0, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302648152122251, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [1, 1, 0, 1, 3, 2], [27, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [2.300342186866199, 2442.1642079910725, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10566636174917221, 0.15215955674648285, 0.09509972482919693, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.1461239542279924, 581916196.5714285, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.06966666877269745, 0.10000000149011612, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0], [2, 9, 6, 6, 0, 3, 4, 1, 5], [0, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [16, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 2, 1, 3, 6], [3, 1, 0, 1, 3, 2], [18, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 2, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(sigma, alpha))", "other_info": {"loss": [2.3029709055974514, 2.303052907291735, 2.3028632093650505, 2.3030915069164397, 2.3029614038093293, 2.302894818359252], "accuracy": [0.09100515395402908, 0.08994849026203156, 0.09787346422672272, 0.09192973375320435, 0.09219389408826828, 0.09655263274908066], "val_loss": [1.9736332212175642, 1.9735736846923828, 1.9737247739519392, 1.9737262044634138, 1.9737277030944824, 1.9737685067313058], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.09966666996479034, 0.09833333641290665, 0.09966666996479034, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 5, 3, 6], [3, 1, 0, 1, 3, 2], [18, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3036770567114893, 2.30225756640416, 2.3011982514637492, 2.3033638954981366, 2.302617069784015, 2.3020596700085627], "accuracy": [0.08572183549404144, 0.08915598690509796, 0.09047681838274002, 0.08360850811004639, 0.08598599582910538, 0.09549596905708313], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [97, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 5, 4, 2, 2, 0, 6, 4, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.multiply(sigma, alpha)))", "other_info": {"loss": [2.3036770567114893, 2.30225756640416, 2.3011982514637492, 2.3033638954981366, 2.302617069784015, 2.3020596700085627], "accuracy": [0.08572183549404144, 0.08915598690509796, 0.09047681838274002, 0.08360850811004639, 0.08598599582910538, 0.09549596905708313], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0], [8, 6, 6, 6, 0, 3, 4, 1, 5, 7, 3], [2, 2, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50, 15, 49], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [16, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [18, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(grad, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.3036770567114893, 2.30225756640416, 2.3011982514637492, 2.3033638954981366, 2.302617069784015, 2.3020596700085627], "accuracy": [0.08572183549404144, 0.08915598690509796, 0.09047681838274002, 0.08360850811004639, 0.08598599582910538, 0.09549596905708313], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0], [2, 6, 6, 9, 0, 3, 2, 1, 5, 2, 3], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50, 23], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(grad, grad)), tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.3036770567114893, 2.30225756640416, 2.3011982514637492, 2.3033638954981366, 2.302617069784015, 2.3020596700085627], "accuracy": [0.08572183549404144, 0.08915598690509796, 0.09047681838274002, 0.08360850811004639, 0.08598599582910538, 0.09549596905708313], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [7, 9, 6, 6, 0, 3, 4, 1, 5], [2, 2, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 5, 4, 2, 2, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.3036770567114893, 2.30225756640416, 2.3011982514637492, 2.3033638954981366, 2.302617069784015, 2.3020596700085627], "accuracy": [0.08572183549404144, 0.08915598690509796, 0.09047681838274002, 0.08360850811004639, 0.08598599582910538, 0.09549596905708313], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 5, 9, 3, 6], [3, 1, 0, 1, 3, 2], [77, 47, 50, 41, 34]], "fitness": -0.03742857277393341, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(sigma))", "other_info": {"loss": [2.30427513001633, 2.3043638687753534, 2.30496116661361, 2.3098971348050688, 2.3123378203513836, 2.3152751819001938], "accuracy": [0.08532558381557465, 0.08519349992275238, 0.08281600475311279, 0.07885351777076721, 0.07845727354288101, 0.07858935743570328], "val_loss": [1.9718529156276159, 1.9733115604945592, 1.974752630506243, 1.9769701276506697, 1.9797364643641882, 1.982335431235177], "val_accuracy": [0.033666666597127914, 0.03099999949336052, 0.029666665941476822, 0.02666666731238365, 0.02866666577756405, 0.03166666626930237]}}]