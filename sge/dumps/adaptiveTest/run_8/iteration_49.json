[{"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [1, 3, 2, 3], [48, 57], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 2, 6, 6, 0, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.7808571457862854, "mapping_values": [1, 3, 3, 1, 2, 0, 18, 18, 10, 8, 2, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.negative(tf.math.subtract(tf.math.add(beta, grad), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(grad, tf.math.add(beta, tf.math.add(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), beta)))))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0795861578352968, 1.3800160506964831, 1.076814203852156, 0.890994733051617, 0.8372025995553052, 0.7656370224324137, 0.7653406439377348, 0.7199577378984203, 0.6793361616613307, 0.6892590992297353, 0.6763421072227419, 0.6540709530452239, 0.628349744396565, 0.6410356550530956, 0.6195967701038491], "accuracy": [0.3185840845108032, 0.5107647776603699, 0.6016378402709961, 0.6720380187034607, 0.6863030195236206, 0.7127195596694946, 0.7120591998100281, 0.7238145470619202, 0.7397965788841248, 0.7392682433128357, 0.7477215528488159, 0.7519482374191284, 0.7640998363494873, 0.7578919529914856, 0.7680623531341553], "val_loss": [1.1522416046687536, 0.7641358205250331, 0.672079154423305, 0.6052900382450649, 0.5960195405142648, 0.5756454978670392, 0.5478667361395699, 0.5377856492996216, 0.5579347269875663, 0.5015421424593244, 0.4937453269958496, 0.5550972904477801, 0.5204510007585798, 0.5048610142299107, 0.4986520494733538], "val_accuracy": [0.5550000071525574, 0.6673333048820496, 0.7143333554267883, 0.7400000095367432, 0.7303333282470703, 0.7553333044052124, 0.7689999938011169, 0.7429999709129333, 0.7329999804496765, 0.7903333306312561, 0.7860000133514404, 0.7423333525657654, 0.7549999952316284, 0.7670000195503235, 0.777999997138977]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [2, 0, 2, 3], [48, 57], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 2, 6, 6, 0, 1, 9, 1, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 3, 0, 1, 0, 3, 0, 2, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.7808571457862854, "mapping_values": [1, 3, 3, 1, 2, 1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0795861578352968, 1.3800160506964831, 1.076814203852156, 0.890994733051617, 0.8372025995553052, 0.7656370224324137, 0.7653406439377348, 0.7199577378984203, 0.6793361616613307, 0.6892590992297353, 0.6763421072227419, 0.6540709530452239, 0.628349744396565, 0.6410356550530956, 0.6195967701038491], "accuracy": [0.3185840845108032, 0.5107647776603699, 0.6016378402709961, 0.6720380187034607, 0.6863030195236206, 0.7127195596694946, 0.7120591998100281, 0.7238145470619202, 0.7397965788841248, 0.7392682433128357, 0.7477215528488159, 0.7519482374191284, 0.7640998363494873, 0.7578919529914856, 0.7680623531341553], "val_loss": [1.1522416046687536, 0.7641358205250331, 0.672079154423305, 0.6052900382450649, 0.5960195405142648, 0.5756454978670392, 0.5478667361395699, 0.5377856492996216, 0.5579347269875663, 0.5015421424593244, 0.4937453269958496, 0.5550972904477801, 0.5204510007585798, 0.5048610142299107, 0.4986520494733538], "val_accuracy": [0.5550000071525574, 0.6673333048820496, 0.7143333554267883, 0.7400000095367432, 0.7303333282470703, 0.7553333044052124, 0.7689999938011169, 0.7429999709129333, 0.7329999804496765, 0.7903333306312561, 0.7860000133514404, 0.7423333525657654, 0.7549999952316284, 0.7670000195503235, 0.777999997138977]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [1, 1, 1, 1, 0, 1, 0], [2, 6, 4, 9], [2, 3, 2, 3], [48, 57], [1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [1, 2, 6, 6, 0, 1, 9, 3, 2, 6, 3, 9, 8, 1, 1, 8, 9, 0], [3, 1, 3, 3, 0, 3, 3, 1, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [15, 38]], "fitness": -0.6779999732971191, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 7, 5, 2, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.divide_no_nan(alpha, tf.math.add(beta, grad)))), tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.add(sigma, sigma)))", "other_info": {"loss": [2.300369169198448, 2.2956766176217456, 2.292567648671606, 2.2888465357525885, 2.2839050986086296, 2.2819602574497213, 2.2767091126505568, 2.272097306559508, 2.2701072477472457, 2.2649563704467863, 2.2610535151796918, 2.2565148435075444, 2.252541785226947, 2.247552441788576, 2.2434448661144146, 2.2385618041424844, 2.231673378277417, 2.2279727141524286, 2.224606232573217, 2.2185673203844325, 2.211197156128929, 2.205925893191538, 2.199396690530642, 2.1917929273350145, 2.185095492418274, 2.1782761053118835, 2.170320555172135, 2.158334598817121, 2.153662308946246, 2.143302412742259, 2.133850165393453, 2.1240697374685236, 2.1119689007697247, 2.103546129288911, 2.09106547393819, 2.0787216297875717, 2.066706501843986, 2.0564260479324075, 2.0407405891249666, 2.028439915143992, 2.0090456144952378, 1.9955202984441431, 1.9796773074656084, 1.9622683692617722, 1.9425145914809359, 1.931694413629647, 1.9180778750433598, 1.893810852234311, 1.8824411595990362, 1.8541253369639594, 1.8428857330601403, 1.822006317854652, 1.8009735004792613, 1.7811158325190022, 1.7624227033551374, 1.7453389411368752, 1.7201602172700405, 1.7064167850320806, 1.679207812021941, 1.6633312443480153, 1.6391244186402123, 1.6218133483501773, 1.6001453497595304, 1.5987558272441995, 1.5702360181162276, 1.5480971373366705, 1.535268196056957, 1.5162068485284699, 1.4997863132782647, 1.4857096855178438, 1.475838602006459, 1.447297951769221, 1.441104126817373, 1.4287845613997074, 1.41889954049432, 1.3977887367197646, 1.389088149083966, 1.3719091709059117, 1.3563574320919494, 1.3600023079069614, 1.3419649304966996, 1.3257518703155609, 1.3202943246063223, 1.3084662471228838, 1.3004532558822581, 1.290289186436219, 1.2881421455853903, 1.270685174477461, 1.2535141739847164, 1.2464148980940433, 1.2479645492315388, 1.2361080778619757, 1.2251092354698014, 1.2209631058014363, 1.2055326979378542, 1.2029824212966989, 1.1937146531025558, 1.190866334185451, 1.1814913394476019, 1.1694205238551134], "accuracy": [0.09972262382507324, 0.10394927859306335, 0.11161009222269058, 0.12270505726337433, 0.13855500519275665, 0.14397041499614716, 0.16536785662174225, 0.16880200803279877, 0.17144367098808289, 0.1896711140871048, 0.20155857503414154, 0.20855897665023804, 0.2172764539718628, 0.230484738945961, 0.2378813922405243, 0.2509576082229614, 0.2587504982948303, 0.27499669790267944, 0.2689208686351776, 0.2826575040817261, 0.2934883236885071, 0.2995641231536865, 0.3066965937614441, 0.3140932619571686, 0.3199048936367035, 0.32743361592292786, 0.3415665030479431, 0.34605732560157776, 0.34222692251205444, 0.3591335415840149, 0.36864352226257324, 0.36943599581718445, 0.3726060092449188, 0.3796063959598541, 0.38026681542396545, 0.3897767663002014, 0.38885220885276794, 0.39823007583618164, 0.39783385396003723, 0.40562674403190613, 0.41328755021095276, 0.41645753383636475, 0.42491084337234497, 0.4251750111579895, 0.43904373049736023, 0.431779146194458, 0.42966583371162415, 0.4473649561405182, 0.4399682879447937, 0.4563465714454651, 0.4439307749271393, 0.45330867171287537, 0.4663848876953125, 0.46308282017707825, 0.46466779708862305, 0.4695548713207245, 0.47325319051742554, 0.47272488474845886, 0.4859331548213959, 0.48487651348114014, 0.4935939908027649, 0.4884427487850189, 0.497820645570755, 0.4854048490524292, 0.5056135058403015, 0.5119535326957703, 0.509840190410614, 0.511821448802948, 0.514198899269104, 0.5254259705543518, 0.5252938866615295, 0.5322942733764648, 0.5271430611610413, 0.5309734344482422, 0.531369686126709, 0.5449742674827576, 0.5357284545898438, 0.547087550163269, 0.5489367246627808, 0.5386342406272888, 0.5523709058761597, 0.5564654469490051, 0.5577862858772278, 0.5596354603767395, 0.5559371113777161, 0.5675604343414307, 0.5581825375556946, 0.5711266398429871, 0.5775987505912781, 0.5795799493789673, 0.5727116465568542, 0.5760137438774109, 0.5798441171646118, 0.5819574594497681, 0.583410382270813, 0.5805045366287231, 0.5900145173072815, 0.5869766473770142, 0.5941091179847717, 0.5886936783790588], "val_loss": [1.966850417000907, 1.9631617409842355, 1.9595056942531042, 1.9558486257280623, 1.9521803174700056, 1.948486055646624, 1.944741998400007, 1.940960475376674, 1.9371546336582728, 1.933229650769915, 1.9292122977120536, 1.925118855067662, 1.9208812032427107, 1.9165148735046387, 1.912015506199428, 1.9073331696646554, 1.9024411610194616, 1.8974146842956543, 1.8922222001211983, 1.8867733137948173, 1.8810614858354842, 1.8750404630388533, 1.8687960079738073, 1.8621718542916434, 1.8552561487470354, 1.8479859488351005, 1.8403141157967704, 1.8322128568376814, 1.8238276072910853, 1.8149683134896415, 1.8056847027369909, 1.796037265232631, 1.7858427592686243, 1.7751943043300085, 1.7640792301722936, 1.7524035998753138, 1.7402332169669015, 1.7276571818760462, 1.7144479070390974, 1.7007725919995988, 1.6862917968205042, 1.6713859013148717, 1.655919143131801, 1.6398693834032332, 1.6231848512377058, 1.6062394210270472, 1.5889392239706857, 1.5708825928824288, 1.5527355670928955, 1.5337652138301305, 1.5149782385144914, 1.4956799915858678, 1.4761174065726144, 1.4563414709908622, 1.4366570540836878, 1.4168379647391183, 1.3967393125806535, 1.376683575766427, 1.3565493651798792, 1.336609193256923, 1.316540309361049, 1.296858651297433, 1.277085849217006, 1.2584193774632044, 1.2395988873073034, 1.2211370808737618, 1.2030633517674036, 1.1856086935315813, 1.1684825420379639, 1.151937757219587, 1.1359744753156389, 1.1200522695268904, 1.1051469870976038, 1.0903608458382743, 1.0763577733721053, 1.0626471723828996, 1.0493390900748116, 1.0365164961133684, 1.0239966937473841, 1.0122999804360526, 1.0008601801736015, 0.9897666658673968, 0.9789850030626569, 0.9686144420078823, 0.9585484777178083, 0.9487901074545724, 0.939631496156965, 0.9305132116590228, 0.9214831760951451, 0.9129846777234759, 0.9048520156315395, 0.8970090321132115, 0.8893731321607318, 0.8819094385419574, 0.8745953014918736, 0.8677799701690674, 0.8609023945672172, 0.8544472626277378, 0.8480844327381679, 0.8417655229568481], "val_accuracy": [0.06199999898672104, 0.09200000017881393, 0.12833333015441895, 0.16500000655651093, 0.20600000023841858, 0.23399999737739563, 0.26600000262260437, 0.29600000381469727, 0.3179999887943268, 0.3413333296775818, 0.35866665840148926, 0.367333322763443, 0.3766666650772095, 0.38333332538604736, 0.39633333683013916, 0.40533334016799927, 0.40966665744781494, 0.4169999957084656, 0.4273333251476288, 0.43433332443237305, 0.43833333253860474, 0.4440000057220459, 0.4493333399295807, 0.4566666781902313, 0.4596666693687439, 0.468666672706604, 0.47200000286102295, 0.47600001096725464, 0.47966668009757996, 0.4846666753292084, 0.49033331871032715, 0.4959999918937683, 0.5013333559036255, 0.5090000033378601, 0.5146666765213013, 0.5189999938011169, 0.5253333449363708, 0.5296666622161865, 0.5320000052452087, 0.534333348274231, 0.5400000214576721, 0.543666660785675, 0.5453333258628845, 0.550000011920929, 0.5536666512489319, 0.5556666851043701, 0.5583333373069763, 0.5596666932106018, 0.5606666803359985, 0.5643333196640015, 0.5673333406448364, 0.5709999799728394, 0.5730000138282776, 0.5746666789054871, 0.574999988079071, 0.5756666660308838, 0.578000009059906, 0.581333339214325, 0.5839999914169312, 0.5856666564941406, 0.5893333554267883, 0.5916666388511658, 0.5933333039283752, 0.5976666808128357, 0.6019999980926514, 0.6033333539962769, 0.6079999804496765, 0.6119999885559082, 0.6136666536331177, 0.6190000176429749, 0.6226666569709778, 0.6243333220481873, 0.6320000290870667, 0.6396666765213013, 0.640999972820282, 0.6473333239555359, 0.6493333578109741, 0.6536666750907898, 0.6583333611488342, 0.6616666913032532, 0.6636666655540466, 0.6666666865348816, 0.6706666946411133, 0.6723333597183228, 0.6746666431427002, 0.6769999861717224, 0.6809999942779541, 0.6823333501815796, 0.684333324432373, 0.6836666464805603, 0.6853333115577698, 0.6880000233650208, 0.6896666884422302, 0.6923333406448364, 0.6919999718666077, 0.6923333406448364, 0.6936666369438171, 0.6943333148956299, 0.6946666836738586, 0.6949999928474426]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [8, 6, 4, 9], [2, 2, 2, 3], [48, 57], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 2, 6, 6, 0, 1, 9, 1, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 3, 0, 1, 0, 3, 0, 2, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [15, 38]], "fitness": -0.5668571591377258, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.3011796691429978, 2.2984245593096553, 2.2972336730244076, 2.2954107897550267, 2.2924257700296207, 2.2925024505273117, 2.2891950377730206, 2.286502912894468, 2.2865144458539484, 2.283707876719378, 2.281921539355767, 2.2796975820922047, 2.2781336857358996, 2.2758466532012775, 2.2742436228175094, 2.272276762690385, 2.268510492108423, 2.267912006176631, 2.267317925021003, 2.2653037698088445, 2.261560079648652, 2.2605499813128707, 2.2580366365157887, 2.2556300042343493, 2.253402484170261, 2.25159157186908, 2.249243437291262, 2.2441615307918394, 2.244468188351959, 2.2413114514789876, 2.2392329036315606, 2.236283716729068, 2.2326121169971893, 2.232145477484372, 2.228421735190413, 2.2260488397205007, 2.2236367067750953, 2.221872115100553, 2.2175993095567246, 2.2155738692824647, 2.2108402272036614, 2.2086690228298087, 2.2052498919033905, 2.200843341944791, 2.1963725245592536, 2.1959814459750713, 2.194651155392444, 2.1896075946370512, 2.187969077044411, 2.1804011333824826, 2.179506237449238, 2.1750060708027443, 2.169952753370842, 2.166144291423394, 2.1620887146807304, 2.1595294841166264, 2.153909740226301, 2.1516267880472637, 2.143931914219814, 2.1389818634607094, 2.134497284243655, 2.1293180591284466, 2.123699218022935, 2.123497476478247, 2.1150398737152, 2.107628047804807, 2.1043661973416894, 2.097463553151151, 2.0925178820068777, 2.0862340692200947, 2.083499582861519, 2.0723069873641524, 2.068397375602354, 2.0640742930879745, 2.057703321415593, 2.0473713876706356, 2.044015924046619, 2.033561915769364, 2.025886520119454, 2.0263683398197263, 2.0150613005701987, 2.0055539776793623, 2.0016001617557353, 1.9900911300410022, 1.9862258084587778, 1.974988884252564, 1.9742767431197181, 1.9610010049189117, 1.950255523929664, 1.9404342702634583, 1.9368798716224778, 1.9236382381586334, 1.9158861762134862, 1.909402547164789, 1.895185757212399, 1.891641158815766, 1.8803932027038315, 1.8726710026306075, 1.8620402111337642, 1.8500780049977663], "accuracy": [0.09840179979801178, 0.09668471664190292, 0.10051512718200684, 0.10698718577623367, 0.11174217611551285, 0.1150442510843277, 0.12719587981700897, 0.12970545887947083, 0.12719587981700897, 0.1352529376745224, 0.1488574892282486, 0.14872540533542633, 0.1504424810409546, 0.16021661460399628, 0.16814158856868744, 0.16893409192562103, 0.177255317568779, 0.19072777032852173, 0.18333113193511963, 0.19112402200698853, 0.19852067530155182, 0.19997358322143555, 0.2094835489988327, 0.21080438792705536, 0.21859727799892426, 0.2176727056503296, 0.22942808270454407, 0.24039097130298615, 0.2370888888835907, 0.2421080470085144, 0.25241050124168396, 0.258090078830719, 0.25584468245506287, 0.2645621597766876, 0.26561880111694336, 0.2666754722595215, 0.27037379145622253, 0.2782987654209137, 0.28424251079559326, 0.28424251079559326, 0.2926958203315735, 0.29084664583206177, 0.2965262234210968, 0.30458328127861023, 0.31805574893951416, 0.3066965937614441, 0.30986660718917847, 0.32782986760139465, 0.3179236650466919, 0.3358869254589081, 0.32267865538597107, 0.32862237095832825, 0.3361510932445526, 0.33945319056510925, 0.33562275767326355, 0.34605732560157776, 0.34103816747665405, 0.3435477614402771, 0.3517369031906128, 0.35820895433425903, 0.35847312211990356, 0.3629639446735382, 0.3689076602458954, 0.3630960285663605, 0.36824727058410645, 0.3781534731388092, 0.3673226833343506, 0.3809272348880768, 0.38488972187042236, 0.3796063959598541, 0.3825122117996216, 0.3937392830848694, 0.3843613862991333, 0.39043718576431274, 0.381719708442688, 0.39928674697875977, 0.3965130150318146, 0.4035134017467499, 0.4041738212108612, 0.39545634388923645, 0.4084004759788513, 0.4099854826927185, 0.4147404432296753, 0.4169858694076538, 0.41024965047836304, 0.42464667558670044, 0.4089288115501404, 0.4291374981403351, 0.4309866726398468, 0.4373266398906708, 0.4299300014972687, 0.43706247210502625, 0.43164706230163574, 0.4341566562652588, 0.4356095492839813, 0.4383833110332489, 0.4468366205692291, 0.43891164660453796, 0.4497424364089966, 0.4523840844631195], "val_loss": [1.9687145778111048, 1.9668553216116769, 1.9650120735168457, 1.9631729807172502, 1.9613385200500488, 1.9595014708382743, 1.9576516832624162, 1.9558138847351074, 1.9539901188441686, 1.952146053314209, 1.9502893856593542, 1.948446478162493, 1.9465791838509696, 1.944699764251709, 1.9428245680672782, 1.940929617200579, 1.9390098026820592, 1.9370824950081962, 1.9351624080113001, 1.933201857975551, 1.9312261172703333, 1.9292099135262626, 1.9271798133850098, 1.925097874232701, 1.9230119841439384, 1.9209025246756417, 1.9187445640563965, 1.9165188244410925, 1.914285387311663, 1.911996705191476, 1.9096745763506209, 1.9073143686567033, 1.9048961230686732, 1.9024135044642858, 1.8998823847089494, 1.8973123686654227, 1.894674573625837, 1.8920238358633858, 1.889303547995431, 1.8865372794015067, 1.8836515290396554, 1.880694798060826, 1.8776937893458776, 1.8745991161891393, 1.871424674987793, 1.8682081358773368, 1.8649685042245048, 1.8615809849330358, 1.8581741196768624, 1.854597840990339, 1.8510019438607352, 1.8473196029663086, 1.8435111045837402, 1.8396049908229284, 1.8356364113943917, 1.831587450844901, 1.8273841994149345, 1.8231355122157507, 1.8187307630266463, 1.8142123222351074, 1.8095949717930384, 1.8048569134303503, 1.7999745096479143, 1.79508638381958, 1.7900492123195104, 1.7848525047302246, 1.7795513016836983, 1.7741293907165527, 1.7685850007193429, 1.762939725603376, 1.757173810686384, 1.7511993135724748, 1.7451597622462682, 1.739006723676409, 1.7326994623456682, 1.726219994681222, 1.7196861675807409, 1.7129482541765486, 1.7060524736131941, 1.6991846220833915, 1.6921070643833704, 1.68482163974217, 1.6774584225245885, 1.6698919364384242, 1.6622778006962367, 1.6544571604047502, 1.6466329778943742, 1.6386066164289201, 1.630359513419015, 1.6220011029924666, 1.6136101995195662, 1.6050456932612829, 1.5963340827396937, 1.5875537054879325, 1.5786055156162806, 1.5696496622903007, 1.5605183328901018, 1.551313877105713, 1.5419823442186629, 1.532503400530134], "val_accuracy": [0.05000000074505806, 0.06266666948795319, 0.07566666603088379, 0.09166666865348816, 0.11233333498239517, 0.12800000607967377, 0.14733333885669708, 0.16566666960716248, 0.18666666746139526, 0.20466665923595428, 0.22100000083446503, 0.23333333432674408, 0.24833333492279053, 0.26499998569488525, 0.28166666626930237, 0.29600000381469727, 0.3076666593551636, 0.3179999887943268, 0.32899999618530273, 0.3413333296775818, 0.35066667199134827, 0.3580000102519989, 0.3633333444595337, 0.36899998784065247, 0.37433332204818726, 0.3803333342075348, 0.3816666603088379, 0.3853333294391632, 0.3883333206176758, 0.3943333327770233, 0.39766666293144226, 0.4009999930858612, 0.40433332324028015, 0.40799999237060547, 0.4113333225250244, 0.4153333306312561, 0.4216666519641876, 0.4266666769981384, 0.42933332920074463, 0.4313333332538605, 0.4350000023841858, 0.437333345413208, 0.43833333253860474, 0.4416666626930237, 0.44600000977516174, 0.44966667890548706, 0.453000009059906, 0.4546666741371155, 0.4573333263397217, 0.4606666564941406, 0.4636666774749756, 0.46700000762939453, 0.468666672706604, 0.4713333249092102, 0.4729999899864197, 0.4763333201408386, 0.48100000619888306, 0.48233333230018616, 0.4856666624546051, 0.4869999885559082, 0.4896666705608368, 0.49266666173934937, 0.49533334374427795, 0.4973333477973938, 0.5009999871253967, 0.5049999952316284, 0.5080000162124634, 0.5109999775886536, 0.5133333206176758, 0.5163333415985107, 0.518666684627533, 0.5210000276565552, 0.5246666669845581, 0.528333306312561, 0.5296666622161865, 0.5320000052452087, 0.5339999794960022, 0.534333348274231, 0.5360000133514404, 0.5379999876022339, 0.5403333306312561, 0.5410000085830688, 0.5426666736602783, 0.5453333258628845, 0.5463333129882812, 0.5486666560173035, 0.5493333339691162, 0.5503333210945129, 0.5543333292007446, 0.5550000071525574, 0.5556666851043701, 0.5563333630561829, 0.5573333501815796, 0.5583333373069763, 0.5596666932106018, 0.5603333115577698, 0.5616666674613953, 0.5619999766349792, 0.5643333196640015, 0.5663333535194397]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [1, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 3, 2, 3], [48, 57], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 2, 6, 6, 0, 1, 9, 1, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 3, 3, 1, 3, 2, 3, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 4, 2, 9], [3, 3, 3, 1], [15, 38]], "fitness": -0.14657142758369446, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.515690090917341, 2.387908706103239, 2.305122098398719, 2.15781222188383, 2.3052421889332195, 2.3041040687009313, 2.303837695094683, 2.302939893547192], "accuracy": [0.17421740293502808, 0.18650111556053162, 0.11596883088350296, 0.22744683921337128, 0.09734513610601425, 0.09496764093637466, 0.09325055778026581, 0.09998679161071777], "val_loss": [1.9749948637826102, 1.980515480041504, 1.9335969516209193, 1.97598477772304, 1.974048069545201, 1.973715032849993, 1.9737042018345423, 1.9735663958958216], "val_accuracy": [0.1523333340883255, 0.10000000149011612, 0.18199999630451202, 0.09733333438634872, 0.09733333438634872, 0.10400000214576721, 0.10400000214576721, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [1, 0, 0, 1, 0, 1, 0], [7, 6, 4, 9], [2, 0, 2, 3], [48, 57], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 2, 6, 6, 0, 1, 9, 1, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.14657142758369446, "mapping_values": [1, 1, 1, 0, 1, 0, 18, 18, 10, 8, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.negative(tf.math.add(beta, alpha)), tf.math.subtract(grad, tf.math.add(beta, grad))), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(grad, tf.math.add(beta, tf.math.add(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, beta)))))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.515690090917341, 2.387908706103239, 2.305122098398719, 2.15781222188383, 2.3052421889332195, 2.3041040687009313, 2.303837695094683, 2.302939893547192], "accuracy": [0.17421740293502808, 0.18650111556053162, 0.11596883088350296, 0.22744683921337128, 0.09734513610601425, 0.09496764093637466, 0.09325055778026581, 0.09998679161071777], "val_loss": [1.9749948637826102, 1.980515480041504, 1.9335969516209193, 1.97598477772304, 1.974048069545201, 1.973715032849993, 1.9737042018345423, 1.9735663958958216], "val_accuracy": [0.1523333340883255, 0.10000000149011612, 0.18199999630451202, 0.09733333438634872, 0.09733333438634872, 0.10400000214576721, 0.10400000214576721, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [7, 6, 4, 9, 2, 4, 0, 2, 0, 5, 1, 4, 7, 1, 7, 6, 7, 7, 2, 9, 4, 9, 4, 8, 7], [2, 3, 2, 3, 2, 2, 3, 3, 0, 1, 3, 1, 2, 0, 1, 2], [48, 57, 53, 88, 95], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 2, 6, 6, 0, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 4, 9, 2, 9], [3, 3, 3, 1], [15, 38]], "fitness": -0.14657142758369446, "mapping_values": [1, 41, 41, 25, 16, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 52, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(tf.math.pow(grad, tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.subtract(grad, tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, grad))), grad)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.sqrt(tf.math.add(alpha, alpha)), tf.math.add(grad, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, alpha)))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.515690090917341, 2.387908706103239, 2.305122098398719, 2.15781222188383, 2.3052421889332195, 2.3041040687009313, 2.303837695094683, 2.302939893547192], "accuracy": [0.17421740293502808, 0.18650111556053162, 0.11596883088350296, 0.22744683921337128, 0.09734513610601425, 0.09496764093637466, 0.09325055778026581, 0.09998679161071777], "val_loss": [1.9749948637826102, 1.980515480041504, 1.9335969516209193, 1.97598477772304, 1.974048069545201, 1.973715032849993, 1.9737042018345423, 1.9735663958958216], "val_accuracy": [0.1523333340883255, 0.10000000149011612, 0.18199999630451202, 0.09733333438634872, 0.09733333438634872, 0.10400000214576721, 0.10400000214576721, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [7, 6, 4, 4, 5, 4, 2, 2, 0, 2, 1, 4, 7, 0, 7, 1, 7, 8, 2, 9, 4, 6, 4, 8], [2, 3, 2, 3, 2, 2, 3, 3, 0, 1, 3, 3, 2, 0, 1, 2], [48, 57, 46, 52], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 2, 6, 6, 0, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 4, 9, 2, 9], [3, 3, 3, 1], [15, 38]], "fitness": -0.14657142758369446, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.515690090917341, 2.387908706103239, 2.305122098398719, 2.15781222188383, 2.3052421889332195, 2.3041040687009313, 2.303837695094683, 2.302939893547192], "accuracy": [0.17421740293502808, 0.18650111556053162, 0.11596883088350296, 0.22744683921337128, 0.09734513610601425, 0.09496764093637466, 0.09325055778026581, 0.09998679161071777], "val_loss": [1.9749948637826102, 1.980515480041504, 1.9335969516209193, 1.97598477772304, 1.974048069545201, 1.973715032849993, 1.9737042018345423, 1.9735663958958216], "val_accuracy": [0.1523333340883255, 0.10000000149011612, 0.18199999630451202, 0.09733333438634872, 0.09733333438634872, 0.10400000214576721, 0.10400000214576721, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [1, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [1, 3, 2, 3], [48, 57], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 2, 6, 6, 0, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 1, 0, 3, 2, 2, 3, 0], [12, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [15, 38]], "fitness": -0.14657142758369446, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 8, 6, 3, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.515690090917341, 2.387908706103239, 2.305122098398719, 2.15781222188383, 2.3052421889332195, 2.3041040687009313, 2.303837695094683, 2.302939893547192], "accuracy": [0.17421740293502808, 0.18650111556053162, 0.11596883088350296, 0.22744683921337128, 0.09734513610601425, 0.09496764093637466, 0.09325055778026581, 0.09998679161071777], "val_loss": [1.9749948637826102, 1.980515480041504, 1.9335969516209193, 1.97598477772304, 1.974048069545201, 1.973715032849993, 1.9737042018345423, 1.9735663958958216], "val_accuracy": [0.1523333340883255, 0.10000000149011612, 0.18199999630451202, 0.09733333438634872, 0.09733333438634872, 0.10400000214576721, 0.10400000214576721, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [1, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [2, 3, 2, 3], [48, 57], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 2, 6, 6, 0, 1, 9, 1, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 3, 0, 1, 0, 3, 0, 2, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [2, 3, 3, 1], [15, 38]], "fitness": -0.13571429252624512, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3025307449068233, 3.036624661809528, 58776897499295.95, NaN, NaN, NaN], "accuracy": [0.0956280529499054, 0.13142253458499908, 0.11174217611551285, 0.10276053100824356, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9580231394086565, 17.06690652029855, Infinity, NaN, NaN, NaN], "val_accuracy": [0.14033333957195282, 0.1066666692495346, 0.09700000286102295, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0], [1, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [2, 3, 2, 3], [48, 57], [1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1], [1, 2, 6, 6, 0, 1, 9, 1, 9, 1, 9, 9, 8, 1, 1, 8, 9, 0], [2, 3, 3, 3, 0, 3, 3, 3, 3, 0], [42, 71, 15, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [6, 3, 9, 2, 9], [3, 3, 3, 1], [92, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 10, 6, 3, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, beta), tf.math.add(grad, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.subtract(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(sigma, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.302357080542983, 2.3025830511277805, 2.302583033146403, 2.3025830511277805, 2.3025828082374753, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736425536019462, 1.9736425536019462, 1.9736425536019462, 1.9736425536019462, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [3, 6, 4, 9], [2, 3, 2, 3], [48, 57], [1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 2, 6, 6, 0, 1, 9, 1, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [2, 3], [], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [0, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 18, 18, 10, 8, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.negative(tf.math.subtract(tf.math.add(beta, grad), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(grad, tf.math.add(beta, tf.math.add(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(grad, beta))))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 1, 0], [0, 6, 4, 9], [1, 2, 2, 3], [48, 57], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [1, 1, 4, 6, 0, 0, 9, 3, 3, 8, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [13, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0], [2, 1, 2, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 4, 2, 1, 18, 18, 11, 7, 2, 1, 1, 0, 1, 0, 9, 5, 4, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.divide_no_nan(tf.math.negative(tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.negative(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad))), tf.math.multiply(tf.math.multiply(grad, grad), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, beta))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.subtract(sigma, tf.math.add(sigma, sigma)), tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [2.3027040691990437, 2.302990347875218, 2.303084117672494, 2.3030483580977137, 2.3030085783152137, 2.3029434602526058, 2.3030629830038576, 2.3028837936964677], "accuracy": [0.09021265059709549, 0.09285431355237961, 0.0956280529499054, 0.09760929644107819, 0.09668471664190292, 0.10130762308835983, 0.0948355570435524, 0.0956280529499054], "val_loss": [1.973670482635498, 1.9737282480512346, 1.9736354010445731, 1.9736322675432478, 1.973606858934675, 1.9735494341169084, 1.9736038616725378, 1.9735733440944128], "val_accuracy": [0.09833333641290665, 0.09733333438634872, 0.10400000214576721, 0.10400000214576721, 0.09733333438634872, 0.09966666996479034, 0.09966666996479034, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [0, 0, 1, 1, 0, 1, 0], [2, 2, 4, 9], [2, 2, 2, 3], [4, 57], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1], [1, 2, 9, 6, 0, 1, 9, 1, 6, 2, 4, 9, 8, 1, 1, 8, 9, 0], [2, 1, 3, 3, 0, 3, 3, 1, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 2, 4, 2, 9], [3, 3, 3, 1], [15, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 10, 10, 7, 3, 2, 1, 1, 0, 1, 0, 6, 3, 3, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.add(beta, grad), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(sigma, tf.math.pow(sigma, sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [2, 3, 2, 3], [56, 57], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 2, 6, 6, 0, 1, 9, 1, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 2, 3, 3, 1, 3, 2, 3, 3, 0], [42, 71, 43, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0], [7, 3, 9, 6, 9], [3, 1, 3, 1], [96, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(sigma, alpha), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302357080542983, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [1, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [2, 3, 2, 3], [48, 57], [0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [1, 2, 6, 5, 0, 1, 9, 4, 2, 1, 4, 8, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 2, 3, 2, 3, 3, 0], [43, 80, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 5, 2, 9], [2, 3, 3, 1], [74, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 21, 21, 13, 8, 1, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.add(beta, grad)), beta)), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta)))))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.math.square(sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [1, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [1, 3, 2, 3], [48, 57], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 2, 6, 6, 0, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [34], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [92, 38]], "fitness": -0.09828571230173111, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 7, 5, 2, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.negative(tf.math.add(beta, grad)), tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [3.5131844499595823, 3.399476200598043, NaN, NaN, NaN, NaN], "accuracy": [0.17461365461349487, 0.19033153355121613, 0.1026284471154213, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9749668666294642, 835.0409458705357, NaN, NaN, NaN, NaN], "val_accuracy": [0.14766666293144226, 0.09700000286102295, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [1, 3, 2, 3], [48, 57], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 2, 6, 6, 5, 1, 9, 3, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 3, 3, 1, 3, 2, 3, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [5, 1, 2, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.07199999690055847, "mapping_values": [1, 3, 3, 1, 2, 0, 18, 18, 10, 8, 1, 1, 1, 0, 1, 0, 6, 3, 3, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, grad)), beta), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), tf.math.multiply(grad, tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, tf.math.subtract(grad, beta))))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.subtract(sigma, tf.math.add(sigma, sigma)))", "other_info": {"loss": [2.301549050471314, 2.30015754882355, 2.3004554025627098, 2.300198961699313, 2.2993494627923226, 2.301030037441211, 2.2997971648285653, 2.2988678090182812, 2.300396712196974, 2.299961037182962, 2.2998155418278095, 2.29972158705223, 2.29988561683028, 2.299728746222719], "accuracy": [0.09694888442754745, 0.09628847241401672, 0.09496764093637466, 0.09747721254825592, 0.09747721254825592, 0.09417514503002167, 0.10051512718200684, 0.10130762308835983, 0.0956280529499054, 0.09694888442754745, 0.09747721254825592, 0.10328886657953262, 0.0940430611371994, 0.1002509593963623], "val_loss": [1.969759464263916, 1.9694655963352747, 1.9692482267107283, 1.9691970688956124, 1.9693311963762556, 1.9692965235028947, 1.9692576953342982, 1.9692272458757674, 1.9691935266767229, 1.9693031992231096, 1.9694884163992745, 1.969780445098877, 1.970015048980713, 1.9702160017830985], "val_accuracy": [0.047333333641290665, 0.05233333259820938, 0.05766666680574417, 0.061666667461395264, 0.06366666406393051, 0.06966666877269745, 0.07666666805744171, 0.07733333110809326, 0.07766667008399963, 0.07633333653211594, 0.07566666603088379, 0.0729999989271164, 0.0663333311676979, 0.06666667014360428]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [1, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [1, 2, 2, 3], [48, 57], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [1, 2, 5, 4, 0, 1, 9, 2, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 1, 3, 3, 1, 3, 2, 3, 3, 0], [2, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [1, 3], [], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [6, 3, 6, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 19, 19, 11, 8, 1, 1, 1, 0, 1, 0, 5, 2, 3, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(tf.math.square(tf.math.pow(tf.math.add(beta, alpha), tf.math.negative(tf.math.subtract(tf.math.add(beta, grad), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))))), tf.math.add(grad, tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.pow(tf.math.add(beta, beta), tf.math.add(beta, grad)))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(sigma, sigma), sigma)", "other_info": {"loss": [2.301993992633792, 2.301199580259201, 2.3019628537691594, 2.3020759594045246, 2.3010711606309995, 2.303160467766311], "accuracy": [0.09694888442754745, 0.09113723784685135, 0.09087307006120682, 0.09259014576673508, 0.09074098616838455, 0.09259014576673508], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [1, 1, 1, 1, 0, 1, 0], [8, 6, 4, 9], [1, 3, 2, 3], [48, 57], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [1, 2, 6, 6, 0, 9, 9, 8, 2, 1, 4, 4, 8, 1, 1, 8, 9, 0], [2, 0, 3, 3, 0, 3, 3, 0, 3, 0], [43, 71, 1, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [1, 3, 3, 1], [41, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 7, 3, 3, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.math.add(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.negative(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.301993992633792, 2.301199580259201, 2.3019628537691594, 2.3020759594045246, 2.3010711606309995, 2.303160467766311], "accuracy": [0.09694888442754745, 0.09113723784685135, 0.09087307006120682, 0.09259014576673508, 0.09074098616838455, 0.09259014576673508], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]