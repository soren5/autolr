[{"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 1, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [41, 38]], "fitness": -0.7774285674095154, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 7, 7, 3, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.add(tf.math.multiply(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), alpha)), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.2891898444929866, 2.2624197402697637, 2.2283120394666294, 2.182768317481955, 2.1220612943825894, 2.0347977478459147, 1.9208428931982604, 1.789401570661996, 1.6496950573436873, 1.5152402868076889, 1.4169674918573167, 1.3331904600419546, 1.2541004281396075, 1.2021308324403452, 1.1537648946255457, 1.1141013587391875, 1.0823714541973235, 1.044138331328873, 1.0129389470169305, 0.9900696514273489, 0.9739123491988347, 0.9520674649482831, 0.9491021972700211, 0.9229792559923135, 0.9098289380566696, 0.9025108832031933, 0.8872914902916076, 0.8829181581408891, 0.8630739184355518, 0.8432250005331935, 0.8493229785867418, 0.8361072933921063, 0.8255642030327595, 0.8176837666411646, 0.8061084805179218, 0.8063802688097548, 0.7888188750799605, 0.7930374348861131, 0.7861858770406761, 0.7855884620794106, 0.7810872498677784, 0.7760794564339589, 0.7601700960967865, 0.7593014271755921, 0.7590042430380505, 0.7545382708858237, 0.7450451232564763, 0.748665801191752, 0.7330419370337973, 0.7377999186389844, 0.7386622706802373, 0.7329877710865158, 0.728667542304912, 0.7114506676495902, 0.7179292313663038, 0.7205975236059448, 0.6989257530434855, 0.7112189027627288, 0.6975764525391721, 0.7039643087722149, 0.6933883349609854, 0.6840348097280095, 0.6960839106343473, 0.6859010848638766, 0.6938975607367901, 0.679420960561994, 0.6855674706996786, 0.6843065316131354, 0.6795778244383472, 0.6805780806860762, 0.6653045327152323, 0.6702917153572976, 0.6740841525357713, 0.6700083016955606, 0.6611532218830067, 0.6676698864931286, 0.6589262982353857, 0.6580881168183839, 0.6564173790536553, 0.6580805078142937, 0.6540490069315025, 0.6563116139219957, 0.6411114815219582, 0.6479713626037641, 0.6423970397437301, 0.6426609445635385, 0.6397654871033042, 0.6455012572487159], "accuracy": [0.11979923397302628, 0.18636904656887054, 0.26799631118774414, 0.320169061422348, 0.3671905994415283, 0.39928674697875977, 0.4282129108905792, 0.45370492339134216, 0.48751816153526306, 0.5218597054481506, 0.531898021697998, 0.5499933958053589, 0.5704662799835205, 0.5824857950210571, 0.603090763092041, 0.6081098914146423, 0.6139215230941772, 0.6349227428436279, 0.6444327235221863, 0.6548672318458557, 0.654999315738678, 0.6647734642028809, 0.6633205413818359, 0.6767930388450623, 0.6737551093101501, 0.6725663542747498, 0.689869225025177, 0.6917183995246887, 0.6905296444892883, 0.6993792057037354, 0.6991150379180908, 0.6988508701324463, 0.7033417224884033, 0.7022850513458252, 0.7123233675956726, 0.7144366502761841, 0.7123233675956726, 0.7123233675956726, 0.7215691208839417, 0.7150970697402954, 0.7174745798110962, 0.7226257920265198, 0.7162858247756958, 0.7230220437049866, 0.7232862114906311, 0.7263241410255432, 0.7281733155250549, 0.7275128960609436, 0.7280412316322327, 0.733060359954834, 0.7333245277404785, 0.7308149337768555, 0.7387399077415466, 0.739928662776947, 0.7366266250610352, 0.7360982894897461, 0.7466648817062378, 0.7392682433128357, 0.7449478507041931, 0.7450799345970154, 0.7470611333847046, 0.7494386434555054, 0.7427024245262146, 0.7457403540611267, 0.7449478507041931, 0.7483819723129272, 0.7495707273483276, 0.7508915662765503, 0.7523444890975952, 0.7473253011703491, 0.7578919529914856, 0.7531369924545288, 0.7541936039924622, 0.7547219395637512, 0.7594769597053528, 0.7499669790267944, 0.7537974119186401, 0.7576277852058411, 0.7544577717781067, 0.7565711140632629, 0.7593448758125305, 0.7614582180976868, 0.7676661014556885, 0.7663452625274658, 0.7606657147407532, 0.759609043598175, 0.7640998363494873, 0.76106196641922], "val_loss": [1.9433608055114746, 1.9144882474626814, 1.8777729443141393, 1.8263416971479143, 1.7541932378496443, 1.6558074269975935, 1.5306623322623116, 1.3903332778385706, 1.2491396154676164, 1.1242661816733224, 1.0249263899666923, 0.948664733341762, 0.8889990193503243, 0.8426338945116315, 0.8013335806982858, 0.771048733166286, 0.7456194162368774, 0.7243458543504987, 0.7050589152744838, 0.6860757895878383, 0.6726636375699725, 0.6606570993150983, 0.6490378890718732, 0.6391811881746564, 0.6302998065948486, 0.6212118012564523, 0.6126965114048549, 0.6101974589484078, 0.6015953336443219, 0.5923723493303571, 0.5897263969693866, 0.5820817266191755, 0.5764974185398647, 0.571729132107326, 0.5661572558539254, 0.5629152400153024, 0.5580103737967355, 0.5560781444822039, 0.5560334069388253, 0.5496349845613752, 0.5458946398326329, 0.5411909818649292, 0.5407437256404332, 0.5358411925179618, 0.5334614515304565, 0.5321246726172311, 0.528933048248291, 0.5268397331237793, 0.5250917843409947, 0.5221512828554425, 0.5224807262420654, 0.5173419713973999, 0.5173919371196202, 0.5126088857650757, 0.5114198752811977, 0.5099547249930245, 0.5076283046177456, 0.504747918673924, 0.5025793484279087, 0.5009068931852069, 0.49930427755628315, 0.49754934651511057, 0.49590531417301725, 0.49578188146863666, 0.4948855297906058, 0.49135269437517437, 0.49013446058545795, 0.4905103955950056, 0.4868796042033604, 0.4854292018072946, 0.4830281564167568, 0.48435202666691374, 0.48154033933367046, 0.4808574233736311, 0.47911146708897184, 0.4784066677093506, 0.47683397361210417, 0.47706024987357004, 0.4748992238725935, 0.4746811219624111, 0.4725138970783779, 0.47136829580579487, 0.4703683001654489, 0.4705601590020316, 0.4719177484512329, 0.4684769766671317, 0.4690333775111607, 0.4661332368850708], "val_accuracy": [0.26899999380111694, 0.39366665482521057, 0.4516666531562805, 0.48899999260902405, 0.5136666893959045, 0.5393333435058594, 0.5663333535194397, 0.5856666564941406, 0.6006666421890259, 0.621999979019165, 0.6589999794960022, 0.6823333501815796, 0.6786666512489319, 0.6903333067893982, 0.7023333311080933, 0.7043333053588867, 0.7083333134651184, 0.7103333473205566, 0.7179999947547913, 0.7236666679382324, 0.7283333539962769, 0.731333315372467, 0.737333357334137, 0.7393333315849304, 0.7366666793823242, 0.7443333268165588, 0.750333309173584, 0.7509999871253967, 0.7556666731834412, 0.753000020980835, 0.753000020980835, 0.762333333492279, 0.7609999775886536, 0.7609999775886536, 0.7683333158493042, 0.7680000066757202, 0.7666666507720947, 0.7680000066757202, 0.7693333625793457, 0.7723333239555359, 0.7720000147819519, 0.7739999890327454, 0.7699999809265137, 0.7753333449363708, 0.7756666541099548, 0.7770000100135803, 0.7776666879653931, 0.7806666493415833, 0.7760000228881836, 0.7856666445732117, 0.7796666622161865, 0.781333327293396, 0.7786666750907898, 0.7860000133514404, 0.7856666445732117, 0.7886666655540466, 0.7866666913032532, 0.7870000004768372, 0.7886666655540466, 0.7896666526794434, 0.7923333048820496, 0.7903333306312561, 0.7919999957084656, 0.7910000085830688, 0.7903333306312561, 0.7933333516120911, 0.7900000214576721, 0.7943333387374878, 0.7950000166893005, 0.7940000295639038, 0.7976666688919067, 0.7963333129882812, 0.7983333468437195, 0.7963333129882812, 0.7973333597183228, 0.7986666560173035, 0.7946666479110718, 0.8046666383743286, 0.7983333468437195, 0.8006666898727417, 0.8026666641235352, 0.8013333082199097, 0.8050000071525574, 0.8003333210945129, 0.800000011920929, 0.8009999990463257, 0.7993333339691162, 0.8013333082199097]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [1, 6, 8, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 2, 2, 2, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 2, 0, 0, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 7, 9, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.5462856888771057, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 4, 5, 3, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), sigma), sigma))", "other_info": {"loss": [2.078677741244579, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.3171311616897583, 0.24263638257980347, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.1867972101484026, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.5446666479110718, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [5, 6, 8, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 2, 2, 2, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 0, 0, 3, 0, 0, 2, 3, 3, 0], [15, 16, 87, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 7, 9, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.5462856888771057, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 6, 6, 4, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, beta), tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), sigma), sigma))", "other_info": {"loss": [2.078677741244579, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.3171311616897583, 0.24263638257980347, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.1867972101484026, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.5446666479110718, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 6, 8, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 5, 2, 2, 2, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 0, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0], [0, 3, 7, 9, 9], [3, 3, 3, 1], [89, 38]], "fitness": -0.3782857060432434, "mapping_values": [1, 6, 6, 5, 1, 1, 12, 12, 6, 6, 4, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(grad, tf.math.add(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.597026895632786, 2.411091822328317, 2.3705666479638006, 2.3033573739579984, 2.2948560461218896, 2.1599329214495375], "accuracy": [0.2044644057750702, 0.18953903019428253, 0.09945846349000931, 0.09642054885625839, 0.12032756209373474, 0.23946638405323029], "val_loss": [1.717027051108224, 2.1456619671412875, 1.9742576735360282, 1.9727856772286552, 1.888662474496024, 1.976870332445417], "val_accuracy": [0.42133334279060364, 0.10000000149011612, 0.09799999743700027, 0.12800000607967377, 0.1523333340883255, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [6, 2, 2, 8, 5, 2, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 0, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0], [0, 3, 0, 9, 9], [3, 2, 3, 1], [41, 38]], "fitness": -0.3782857060432434, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.597026895632786, 2.411091822328317, 2.3705666479638006, 2.3033573739579984, 2.2948560461218896, 2.1599329214495375], "accuracy": [0.2044644057750702, 0.18953903019428253, 0.09945846349000931, 0.09642054885625839, 0.12032756209373474, 0.23946638405323029], "val_loss": [1.717027051108224, 2.1456619671412875, 1.9742576735360282, 1.9727856772286552, 1.888662474496024, 1.976870332445417], "val_accuracy": [0.42133334279060364, 0.10000000149011612, 0.09799999743700027, 0.12800000607967377, 0.1523333340883255, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 2, 9, 1, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [2, 5, 2, 2, 2, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 0, 2, 3, 3, 0], [79, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0], [0, 3, 7, 9, 9], [3, 3, 3, 1], [89, 38]], "fitness": -0.3782857060432434, "mapping_values": [1, 5, 5, 3, 2, 2, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.597026895632786, 2.411091822328317, 2.3705666479638006, 2.3033573739579984, 2.2948560461218896, 2.1599329214495375], "accuracy": [0.2044644057750702, 0.18953903019428253, 0.09945846349000931, 0.09642054885625839, 0.12032756209373474, 0.23946638405323029], "val_loss": [1.717027051108224, 2.1456619671412875, 1.9742576735360282, 1.9727856772286552, 1.888662474496024, 1.976870332445417], "val_accuracy": [0.42133334279060364, 0.10000000149011612, 0.09799999743700027, 0.12800000607967377, 0.1523333340883255, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1], [5, 6, 8, 6, 0, 7, 7, 2, 9], [2, 0, 0, 3, 1, 0], [5, 57, 93], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [1, 5, 2, 2, 2, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 0, 2, 3, 3, 0], [83, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0], [0, 3, 7, 9, 9], [3, 3, 3, 1], [89, 38]], "fitness": -0.3782857060432434, "mapping_values": [1, 14, 14, 9, 5, 3, 14, 14, 7, 7, 4, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), grad)))))), tf.math.add(alpha, tf.math.add(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(grad, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.multiply(tf.math.add(beta, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad), tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.597026895632786, 2.411091822328317, 2.3705666479638006, 2.3033573739579984, 2.2948560461218896, 2.1599329214495375], "accuracy": [0.2044644057750702, 0.18953903019428253, 0.09945846349000931, 0.09642054885625839, 0.12032756209373474, 0.23946638405323029], "val_loss": [1.717027051108224, 2.1456619671412875, 1.9742576735360282, 1.9727856772286552, 1.888662474496024, 1.976870332445417], "val_accuracy": [0.42133334279060364, 0.10000000149011612, 0.09799999743700027, 0.12800000607967377, 0.1523333340883255, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [5, 6, 8, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 2, 8, 2, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 0, 2, 3, 3, 0], [35, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0], [0, 3, 7, 9, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.3782857060432434, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 6, 5, 3, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.square(tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.597026895632786, 2.411091822328317, 2.3705666479638006, 2.3033573739579984, 2.2948560461218896, 2.1599329214495375], "accuracy": [0.2044644057750702, 0.18953903019428253, 0.09945846349000931, 0.09642054885625839, 0.12032756209373474, 0.23946638405323029], "val_loss": [1.717027051108224, 2.1456619671412875, 1.9742576735360282, 1.9727856772286552, 1.888662474496024, 1.976870332445417], "val_accuracy": [0.42133334279060364, 0.10000000149011612, 0.09799999743700027, 0.12800000607967377, 0.1523333340883255, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [5, 6, 2, 1, 0, 4, 8], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 5, 2, 2, 2, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 0, 2, 3, 0, 0, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0], [0, 3, 7, 9, 9], [0, 3, 3, 1], [89, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 7, 5, 2, 12, 12, 6, 6, 3, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), grad)), tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, beta), grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1243794791.9025078, 24034816218.027737, 109044194439.65869, 310171233613.128, 662272497200.6234, 1207275002502.7795], "accuracy": [0.1010434553027153, 0.10342095047235489, 0.10527011007070541, 0.09945846349000931, 0.10276053100824356, 0.09972262382507324], "val_loss": [4723210678.857142, 37773980233.14286, 127476657590.85715, 302147539529.1429, 590105055817.1428, 1019704995254.8572], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 2, 2, 2, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 2, 2, 3, 3, 0], [15, 16, 21, 84, 1, 78], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 2, 0, 2, 9, 9], [1, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 8, 9, 3, 6, 4, 3, 1, 0, 7, 5, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), beta)))), beta), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), alpha)), sigma))", "other_info": {"loss": [2.3029897287615917, 3.089036144553363, 28.486253559786206, 109.9393481797609, 248.50953252084693, 444.8693744869532], "accuracy": [0.1022322028875351, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.994966779436384, 8.188930238996234, 57.53913879394531, 156.20449829101562, 304.37357003348217, 501.9410923549107], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 8, 2, 2, 2, 2, 2, 9, 2, 3, 2, 9, 8, 1, 1, 8, 9, 0], [3, 3, 1, 3, 0, 2, 0, 3, 3, 0, 5, 0], [35, 3, 4, 96, 67, 78, 69], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 2, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.sqrt(grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08268392831087112, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 0], [2, 6, 9, 9, 0], [0, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [2, 5, 2, 2, 2, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 3, 2, 1, 0, 2, 3, 3, 0], [36, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0], [0, 3, 7, 9, 9], [0, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 12, 12, 6, 6, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(grad, tf.math.add(tf.math.add(beta, beta), tf.math.add(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, beta)), alpha))))), tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [4415379.636455564, 85074474.14185709, 385646196.25835425, 1096527897.004887, 2340790409.721305, 4266553006.88205], "accuracy": [0.1010434553027153, 0.10342095047235489, 0.10527011007070541, 0.09945846349000931, 0.10276053100824356, 0.09959053993225098], "val_loss": [16737837.142857144, 133634724.57142857, 450719030.85714287, 1068019126.8571428, 2085576118.857143, 3603403190.857143], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 0], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 5, 2, 2, 9, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 2, 2, 3, 3, 0], [35, 50, 43, 84, 1, 78], [0, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0], [0, 2, 7, 9, 5], [1, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), alpha), sigma))", "other_info": {"loss": [16440.85030421444, 2.3136751028241545, 2.3054506743132177, 2.3035690871054677, 2.3030505263495202, 2.302898571145155, 2.3028963168913488, 2.3030488549001844], "accuracy": [0.09972262382507324, 0.0956280529499054, 0.09655263274908066, 0.09272222965955734, 0.0940430611371994, 0.09959053993225098, 0.09298639744520187, 0.09681680053472519], "val_loss": [1.990509373801095, 1.9783447810581751, 1.9750046048845564, 1.9739596503121513, 1.9737532479422433, 1.9737950733729772, 1.9737351962498255, 1.973750114440918], "val_accuracy": [0.09833333641290665, 0.09966666996479034, 0.10400000214576721, 0.09733333438634872, 0.09733333438634872, 0.10000000149011612, 0.09700000286102295, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [5, 6, 8, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 5, 2, 2, 2, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 0, 2, 3, 3, 0], [15, 16, 90, 23, 1, 78], [0, 0, 0, 1, 0, 1], [0, 1, 0, 0], [3, 3, 0], [5, 3], [], [1, 1, 0, 0, 1, 0, 1, 0, 1, 0], [6, 3, 7, 2, 9, 9], [1, 3, 3, 1], [41, 38]], "fitness": -0.054571427404880524, "mapping_values": [1, 2, 2, 1, 1, 0, 12, 12, 6, 6, 4, 6, 4, 3, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.add(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(beta, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.negative(sigma)))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3015881654152137, 2.304789128163078, 2.3058434344238656, 2.308039893721073, 2.311157355801682, 2.3144471046710766, 2.317638608080726, 2.3222060235043274, 2.3302308030494405, 2.337659910386186, 2.3642779187346177, 22.92009080900193, NaN, NaN, NaN, NaN], "accuracy": [0.08889182657003403, 0.08400475233793259, 0.08426892012357712, 0.07885351777076721, 0.08321225643157959, 0.07924976944923401, 0.0796460211277008, 0.07806102186441422, 0.07290978729724884, 0.07674019038677216, 0.07819310575723648, 0.08796724677085876, 0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9715012141636439, 1.9728994369506836, 1.9744399615696497, 1.9765776225498743, 1.9788997513907296, 1.9813978331429618, 1.98428589957101, 1.9874930381774902, 1.992638451712472, 2.002589634486607, 2.0300912857055664, 1.0143762951812828e+16, NaN, NaN, NaN, NaN], "val_accuracy": [0.03466666489839554, 0.03133333474397659, 0.03033333271741867, 0.02800000086426735, 0.03433333337306976, 0.03933333232998848, 0.05166666582226753, 0.06466666609048843, 0.0820000022649765, 0.0949999988079071, 0.10000000149011612, 0.10000000149011612, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 0], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 2, 2, 2, 2, 2, 9, 2, 3, 2, 9, 8, 1, 1, 8, 9, 0], [3, 4, 1, 3, 0, 2, 0, 3, 3, 0, 5, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [1, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 2, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 6, 7, 2, 1, 1, 0, 1, 0, 6, 3, 3, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, alpha))), tf.math.add(beta, grad)))), tf.math.add(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta)))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(sigma, sigma), sigma))", "other_info": {"loss": [2.3011257754907697, 2.30290631390739, 2.302195259640167, 2.301943862852309, 2.3024507138266492, 2.302362465603382], "accuracy": [0.08968432247638702, 0.08717474341392517, 0.09232597798109055, 0.08651433140039444, 0.09391097724437714, 0.08942015469074249], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 0], [5, 6, 8, 9, 0], [2, 0, 0, 3, 1, 0], [35, 57], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 1, 2, 2, 2, 2, 9, 2, 3, 2, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 0, 2, 3, 3, 0], [35, 3, 12, 96, 67, 78, 69], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [5, 3], [], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 2, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 2, 5, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3011257754907697, 2.30290631390739, 2.302195259640167, 2.301943862852309, 2.3024507138266492, 2.302362465603382], "accuracy": [0.08968432247638702, 0.08717474341392517, 0.09232597798109055, 0.08651433140039444, 0.09391097724437714, 0.08942015469074249], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 5, 2, 2, 2, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 0, 2, 3, 3, 0], [35, 3, 4, 96, 67, 78, 69], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [1, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 7, 9, 9], [1, 3, 3, 1], [89, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 4, 4, 4, 0, 2, 12, 12, 6, 6, 4, 1, 1, 0, 1, 0, 6, 3, 3, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(alpha, sigma), sigma))", "other_info": {"loss": [2.3011257754907697, 2.30290631390739, 2.302195259640167, 2.301943862852309, 2.3024507138266492, 2.302362465603382], "accuracy": [0.08968432247638702, 0.08717474341392517, 0.09232597798109055, 0.08651433140039444, 0.09391097724437714, 0.08942015469074249], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 2, 2, 2, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 0, 0, 3, 0, 3, 2, 3, 3, 0], [15, 16, 77, 84, 1, 78], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 1, 1, 0], [0, 3, 7, 2, 9, 9], [3, 3, 3, 1], [7, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 5, 5, 3, 2, 2, 11, 11, 5, 6, 4, 6, 4, 3, 1, 0, 6, 3, 3, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(tf.math.add(beta, grad), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(sigma, sigma), sigma))", "other_info": {"loss": [2.3011257754907697, 2.30290631390739, 2.302195259640167, 2.301943862852309, 2.3024507138266492, 2.302362465603382], "accuracy": [0.08968432247638702, 0.08717474341392517, 0.09232597798109055, 0.08651433140039444, 0.09391097724437714, 0.08942015469074249], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 6, 8, 4, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 4, 2, 2, 6, 2, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 0, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 3, 7, 9, 9, 5], [3, 3, 3, 1], [89, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 2, 2, 1, 1, 0, 9, 9, 4, 5, 3, 3, 3, 1, 2, 0, 7, 6, 1, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.pow(tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad), tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.square(sigma)))", "other_info": {"loss": [2.3011257754907697, 2.30290631390739, 2.302195259640167, 2.301943862852309, 2.3024507138266492, 2.302362465603382], "accuracy": [0.08968432247638702, 0.08717474341392517, 0.09232597798109055, 0.08651433140039444, 0.09391097724437714, 0.08942015469074249], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 0], [0, 6, 9, 9, 0], [0, 0, 0, 3, 1, 0], [35, 57], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [6, 2, 2, 2, 2, 2, 2, 9, 2, 3, 2, 9, 8, 1, 1, 8, 9, 0], [3, 3, 1, 3, 2, 2, 0, 3, 3, 0, 5, 0], [35, 3, 4, 96, 67, 78, 69], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [1, 3], [], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 2, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 1, 9, 9, 4, 5, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(grad, tf.math.add(beta, grad)), tf.math.add(tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, grad))), tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3011257754907697, 2.30290631390739, 2.302195259640167, 2.301943862852309, 2.3024507138266492, 2.302362465603382], "accuracy": [0.08968432247638702, 0.08717474341392517, 0.09232597798109055, 0.08651433140039444, 0.09391097724437714, 0.08942015469074249], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]