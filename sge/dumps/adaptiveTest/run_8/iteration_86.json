[{"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.7900000214576721, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 6, 6, 2, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(grad, tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta))), tf.math.add(beta, tf.math.pow(tf.math.negative(grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.2336182190584326, 1.8481037860942664, 1.3210921978292338, 1.0929701247975465, 0.9677494704258865, 0.9061298319109679, 0.8824370805109654, 0.8180548476032876, 0.8022556258482373, 0.7800535321109693, 0.7418808219470935, 0.7310114184926136, 0.7366099303912776, 0.7007388214409359, 0.6988247311299487, 0.6777290317203233, 0.6745867815393704, 0.6720815426039579, 0.6637265369908181, 0.6585236923601082, 0.648301304725057, 0.6297939170494906, 0.6164235582425374, 0.6156642264489091, 0.62323007229659, 0.6176839240191556, 0.6130826191470103, 0.6029003275824796, 0.5946076481396795, 0.5931636506713471, 0.5888461516974483, 0.5926875571029344, 0.5800869944088999], "accuracy": [0.22956016659736633, 0.4435345530509949, 0.5547483563423157, 0.6194690465927124, 0.653150200843811, 0.6723021864891052, 0.6820763349533081, 0.7034738063812256, 0.7098137736320496, 0.7195879220962524, 0.7297582626342773, 0.7317395210266113, 0.7269845604896545, 0.7409853339195251, 0.7409853339195251, 0.7516840696334839, 0.7453441023826599, 0.7499669790267944, 0.7535332441329956, 0.7536653280258179, 0.7555144429206848, 0.7658169269561768, 0.7681944370269775, 0.7697794437408447, 0.765949010848999, 0.7667415142059326, 0.7744023203849792, 0.7755910754203796, 0.780610203742981, 0.7765156626701355, 0.7815347909927368, 0.7771760821342468, 0.7827235460281372], "val_loss": [1.7647271837506975, 1.1466032096317835, 0.874769960130964, 0.7071850640433175, 0.6548268624714443, 0.6165592329842704, 0.6056636571884155, 0.6006532737186977, 0.5693121978214809, 0.5553265810012817, 0.5306976011821202, 0.5243278230939593, 0.5180631875991821, 0.5271550757544381, 0.5038385902132306, 0.5139553376606533, 0.50164224420275, 0.5023935692650932, 0.49662634304591585, 0.48389930384499685, 0.47707208565303255, 0.4679891211645944, 0.4670736619404384, 0.47750650133405415, 0.4648157187870571, 0.4626965182168143, 0.4573792134012495, 0.45473025526319233, 0.44541397265025545, 0.4618777206965855, 0.45658176285879953, 0.45225667101996286, 0.4510424477713449], "val_accuracy": [0.5289999842643738, 0.621666669845581, 0.6583333611488342, 0.703000009059906, 0.7316666841506958, 0.7243333458900452, 0.7310000061988831, 0.7379999756813049, 0.7549999952316284, 0.7516666650772095, 0.7776666879653931, 0.7766666412353516, 0.7789999842643738, 0.7670000195503235, 0.7833333611488342, 0.762666642665863, 0.784333348274231, 0.7746666669845581, 0.7713333368301392, 0.7943333387374878, 0.7946666479110718, 0.7976666688919067, 0.8040000200271606, 0.8029999732971191, 0.8016666769981384, 0.8040000200271606, 0.8023333549499512, 0.8130000233650208, 0.8090000152587891, 0.8053333163261414, 0.8033333420753479, 0.812666654586792, 0.8023333549499512]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 47], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [7, 4, 2, 6, 0, 2, 8, 0, 2, 4, 4, 9, 8, 8, 1, 5, 9, 4, 6, 2, 4, 8, 1, 7, 8], [3, 2, 2, 3, 0, 1, 2, 3, 3, 0, 1, 1, 5], [85, 54, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [56, 38]], "fitness": -0.3717142939567566, "mapping_values": [1, 5, 5, 4, 1, 2, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.736664284898967, 2.656620801132841, 2.3050458452342886, 2.3032528683651456, 2.3029614661300752, 2.303248860596382], "accuracy": [0.1912561058998108, 0.14700831472873688, 0.09470347315073013, 0.09245806187391281, 0.1022322028875351, 0.09153348207473755], "val_loss": [1.6809803077152796, 1.9766161782400948, 1.9740631239754813, 1.9737341063363212, 1.9734395572117396, 1.9735050882611955], "val_accuracy": [0.3720000088214874, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10400000214576721, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [0, 4, 2, 5, 7, 9, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 5, 0, 1, 2, 3, 3, 0], [28, 26, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [1, 3, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [2.301716332579837, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 9, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 4, 1, 2, 3, 3, 0], [28, 21, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 3, 9, 6, 9], [3, 1, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 2, 1, 1, 0, 1, 0, 6, 5, 1, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(grad, tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta))), tf.math.add(beta, tf.math.pow(tf.math.negative(grad), tf.math.add(beta, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(sigma, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.11227050423622131, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 8, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 47], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [8, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 0, 1, 3, 0, 1, 2, 3, 3, 0], [60, 30, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [2, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [6, 3, 9, 3, 9], [1, 1, 3, 1], [20, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 7, 5, 2, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(grad, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), alpha)), alpha)", "other_info": {"loss": [2.3013779299842714, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 5, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [52, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 2, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [613365543.1134623, 11597010484.140007, 54593625986.485275, 149610780771.27567, 320238062934.8662, 595299527961.1909], "accuracy": [0.10077928751707077, 0.10342095047235489, 0.10315678268671036, 0.09998679161071777, 0.09893012791872025, 0.10130762308835983], "val_loss": [2314153472.0, 18506183241.142857, 62450293613.71429, 148022624256.0, 289093170907.4286, 499543591204.5714], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 47], [0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [7, 8, 2, 2, 9, 2, 2, 9, 2, 1, 4, 4, 8, 1, 1, 8, 9, 0, 2, 7, 3, 9, 6, 4, 6], [3, 3, 3, 3, 0, 1, 2, 3, 3, 0], [28, 39, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 27, 27, 18, 9, 4, 1, 1, 0, 1, 0, 4, 3, 1, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), grad))))), tf.math.add(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.sqrt(tf.math.subtract(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha))), tf.math.subtract(tf.math.sqrt(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), beta))), tf.math.negative(tf.math.add(beta, grad))))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [440957.13046950346, 8279143.558314621, 38892499.928675205, 106485668.39149386, 227814696.11094967, 423351671.0310395], "accuracy": [0.10077928751707077, 0.10342095047235489, 0.10302469879388809, 0.09998679161071777, 0.09879804402589798, 0.10130762308835983], "val_loss": [1656600.0, 13193702.857142856, 44464147.428571425, 105320571.42857143, 205615593.14285713, 355202157.71428573], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [8, 5, 0, 9, 0], [0, 0, 0, 3, 1, 0], [5, 57], [0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 4, 6, 0, 2, 8, 0, 2, 4, 4, 9, 8, 8, 1, 5, 9, 4, 6, 2, 4, 8, 1, 7, 8], [3, 0, 2, 3, 2, 1, 2, 3, 3, 0], [85, 54, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0], [1, 3, 9, 3, 9], [3, 1, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 13, 13, 7, 6, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.negative(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.pow(grad, tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.negative(tf.math.add(beta, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))), beta)), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), sigma), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09008057415485382, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 47], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 9, 2, 2, 9, 2, 4, 9, 2, 1, 4, 4, 8, 1, 1, 8, 9, 0, 2, 7, 3, 9, 6, 4, 6], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [60, 30, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [2, 3], [45], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [0, 3, 9, 9, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 5, 2, 3, 1, 1, 0, 1, 0, 4, 3, 1, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [440957.13046950346, 8279143.558314621, 38892499.928675205, 106485668.39149386, 227814696.11094967, 423351671.0310395], "accuracy": [0.10077928751707077, 0.10342095047235489, 0.10302469879388809, 0.09998679161071777, 0.09879804402589798, 0.10130762308835983], "val_loss": [1656600.0, 13193702.857142856, 44464147.428571425, 105320571.42857143, 205615593.14285713, 355202157.71428573], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 8, 0], [2, 0, 0, 3, 1, 0], [5, 49], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [85, 16, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [91, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 4, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1252211920.1236327, 23678933161.607185, 111474273325.30974, 305495638855.65027, 653912404354.8234, 1215573167498.8032], "accuracy": [0.10077928751707077, 0.10342095047235489, 0.10315678268671036, 0.09998679161071777, 0.09879804402589798, 0.10130762308835983], "val_loss": [4724820406.857142, 37787042962.28571, 127518530413.71428, 302250580845.7143, 590315520000.0, 1020053197385.1428], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1], [1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [85, 30, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0], [2, 3, 9, 3, 9], [1, 1, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08255184441804886, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 9, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 0, 0, 3, 4, 5, 2, 3, 3, 0], [70, 16, 43, 84, 1, 78], [0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1], [3, 3, 8], [6, 3], [], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0], [3, 3, 9, 3, 9], [1, 2, 0, 1], [56, 38, 89]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1352529376745224, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 5, 0, 9, 0], [3, 0, 0, 3, 1, 0], [5, 47], [1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [7, 4, 2, 6, 0, 2, 8, 0, 2, 4, 4, 9, 8, 8, 1, 5, 9, 4, 6, 2, 4, 8, 1, 7, 8], [3, 4, 2, 3, 0, 1, 2, 3, 3, 0, 1, 1, 5], [85, 54, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [0, 3], [30], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 24, 24, 15, 9, 2, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(grad, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.sqrt(grad), tf.math.add(beta, beta)))), tf.math.add(beta, grad))), tf.math.negative(tf.math.add(tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.pow(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(beta)))))))), tf.math.sqrt(tf.math.subtract(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.301716332579837, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 8, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 47], [1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [7, 4, 2, 6, 0, 2, 8, 0, 2, 4, 4, 9, 8, 8, 1, 5, 9, 4, 6, 2, 4, 8, 1, 7, 8], [2, 3, 2, 3, 4, 1, 2, 3, 3, 0, 1, 1, 5], [60, 30, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [0, 3], [62], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0], [0, 3, 9, 3, 9], [1, 1, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [7, 4, 7, 4, 2, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 0, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 9, 8, 9], [0, 3, 3, 1], [56, 5]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 20, 20, 10, 10, 4, 1, 1, 0, 1, 0, 3, 3, 0, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(grad, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta))), tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, alpha)), tf.math.add(tf.math.add(beta, beta), grad)), tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.301716332579837, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 8, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 47], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [8, 4, 2, 8, 2, 2, 0, 5, 2, 5, 4, 9, 8, 1, 1, 8, 9, 0], [5, 5, 2, 3, 4, 1, 2, 3, 3, 0, 1, 1, 5], [32, 50, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [1, 1, 3, 1], [32, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.301598871262822, 2.301488944930234, 2.303363820769925, 2.30215863239307, 2.3028474459637427, 2.303045483281694], "accuracy": [0.09549596905708313, 0.08915598690509796, 0.08955223858356476, 0.09074098616838455, 0.08677849918603897, 0.09153348207473755], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 8, 0, 9, 0], [0, 0, 0, 3, 1, 0], [95, 47], [0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [7, 8, 2, 2, 9, 9, 2, 9, 2, 1, 4, 4, 8, 1, 1, 8, 9, 0, 2, 7, 3, 9, 6, 4, 6], [2, 3, 3, 3, 0, 1, 2, 3, 3, 0], [85, 50, 99, 84, 1, 78, 2, 15], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 3, 5, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 5, 5, 4, 1, 2, 10, 10, 8, 2, 3, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.301598871262822, 2.301488944930234, 2.303363820769925, 2.30215863239307, 2.3028474459637427, 2.303045483281694], "accuracy": [0.09549596905708313, 0.08915598690509796, 0.08955223858356476, 0.09074098616838455, 0.08677849918603897, 0.09153348207473755], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [8, 5, 0, 9, 0], [1, 0, 0, 3, 1, 0], [5, 47], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [7, 4, 2, 6, 0, 2, 8, 0, 2, 4, 4, 9, 8, 8, 1, 5, 9, 4, 6, 2, 4, 8, 1, 7, 8], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0, 1, 1, 5], [85, 54, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0], [5, 3, 9, 3, 9], [3, 1, 3, 1], [56, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 4, 4, 3, 1, 0, 3, 3, 1, 2, 1, 6, 4, 3, 1, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(sigma)", "other_info": {"loss": [2.301598871262822, 2.301488944930234, 2.303363820769925, 2.30215863239307, 2.3028474459637427, 2.303045483281694], "accuracy": [0.09549596905708313, 0.08915598690509796, 0.08955223858356476, 0.09074098616838455, 0.08677849918603897, 0.09153348207473755], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [4, 5, 0, 9, 0], [1, 0, 0, 3, 1, 0], [5, 47], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [5, 5, 2, 3, 4, 1, 2, 3, 3, 0, 1, 1, 5], [60, 30, 99, 84, 1, 78, 2, 15], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [56, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 5, 5, 4, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(alpha)))), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.301598871262822, 2.301488944930234, 2.303363820769925, 2.30215863239307, 2.3028474459637427, 2.303045483281694], "accuracy": [0.09549596905708313, 0.08915598690509796, 0.08955223858356476, 0.09074098616838455, 0.08677849918603897, 0.09153348207473755], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [8, 5, 0, 9, 0], [1, 0, 0, 3, 1, 0], [5, 47], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [8, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0, 1, 1, 5], [60, 30, 99, 84, 1, 78, 2, 15], [1, 0, 0, 1, 0], [0, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [56, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 4, 4, 3, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.301598871262822, 2.301488944930234, 2.303363820769925, 2.30215863239307, 2.3028474459637427, 2.303045483281694], "accuracy": [0.09549596905708313, 0.08915598690509796, 0.08955223858356476, 0.09074098616838455, 0.08677849918603897, 0.09153348207473755], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]