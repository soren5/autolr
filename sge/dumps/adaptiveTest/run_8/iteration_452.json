[{"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 1, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [84, 89, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.8185714483261108, "mapping_values": [1, 16, 16, 10, 6, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), grad))))), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.1758637121875983, 2.15901548600137, 1.7648893014204705, 1.6493120971624766, 1.0790818148773453, 0.8477438949653737, 0.7544432864087117, 0.7218220916485286, 0.6705254683357896, 0.6300831684315477, 0.62007723813831, 0.616926650518534, 0.5911652292431842, 0.5763296761044799, 0.5567716668940428, 0.5381011181519473, 0.5364218364695926, 0.5101824502714432, 0.5246313428047421, 0.5053585937561345, 0.4820954576813707, 0.4913230513923314, 0.479987525362081, 0.4621508338817941, 0.45737385699824884, 0.45711705609004666, 0.46118720526299095, 0.4576941052951896, 0.4314119481824692, 0.4316416448960136, 0.4276688420785149, 0.4186905960420403, 0.406908345921574, 0.40940924426741243, 0.4173571927995257, 0.41570845153810104, 0.39226152501353784, 0.4094801343206905, 0.3929638546991027, 0.37612072483990344, 0.3416556163927536, 0.36938582160579625, 0.36547630606877285, 0.3542101550859593, 0.362361674216823], "accuracy": [0.31898030638694763, 0.282129168510437, 0.4157971143722534, 0.47047945857048035, 0.6215823292732239, 0.684982180595398, 0.715889573097229, 0.733588695526123, 0.7430986762046814, 0.7614582180976868, 0.7688548564910889, 0.7637035846710205, 0.7775723338127136, 0.7795535326004028, 0.7897239327430725, 0.7961959838867188, 0.7996301651000977, 0.8076872229576111, 0.8014793395996094, 0.8100647330284119, 0.8210275769233704, 0.8125742673873901, 0.8190463781356812, 0.8267071843147278, 0.8305375576019287, 0.8257825970649719, 0.8314621448516846, 0.8220842480659485, 0.8359529972076416, 0.8364813327789307, 0.8407079577445984, 0.8432175517082214, 0.8511425256729126, 0.8499537706375122, 0.8481045961380005, 0.8454629778862, 0.8549728989601135, 0.845859169960022, 0.8479725122451782, 0.8578787446022034, 0.8709549307823181, 0.8585391640663147, 0.8622375130653381, 0.8663320541381836, 0.8627657890319824], "val_loss": [1.5377801145826067, 1.5283920083727156, 1.4201200348990304, 0.9987250396183559, 0.6594162157603672, 0.6104505062103271, 0.5811469214303153, 0.5448995998927525, 0.4909088781901768, 0.4995518582207816, 0.4818263053894043, 0.4854611839566912, 0.5081121240343366, 0.45375244106565205, 0.4446277788707188, 0.4457102247646877, 0.4252162916319711, 0.43484242473329815, 0.4491839323725019, 0.42995459692818777, 0.4449875610215323, 0.3909237129347665, 0.40250301361083984, 0.43353640181677683, 0.38553742851529804, 0.3749390755380903, 0.37360518319266184, 0.3945317694119045, 0.3777793049812317, 0.40153167077473234, 0.360578145299639, 0.3596286858831133, 0.3915280188832964, 0.4076767308371408, 0.3524878110204424, 0.39529484510421753, 0.4274791819708688, 0.35948141132082256, 0.34393781423568726, 0.34777313470840454, 0.3586253012929644, 0.3477903093610491, 0.3316042423248291, 0.33001573596681866, 0.3430443150656564], "val_accuracy": [0.40433332324028015, 0.4543333351612091, 0.492000013589859, 0.6269999742507935, 0.7020000219345093, 0.7203333377838135, 0.7586666941642761, 0.746999979019165, 0.7756666541099548, 0.7799999713897705, 0.781000018119812, 0.7839999794960022, 0.7549999952316284, 0.7933333516120911, 0.8029999732971191, 0.7996666431427002, 0.8130000233650208, 0.8069999814033508, 0.7893333435058594, 0.8013333082199097, 0.7986666560173035, 0.828000009059906, 0.8220000267028809, 0.8023333549499512, 0.8383333086967468, 0.8403333425521851, 0.8413333296775818, 0.8263333439826965, 0.8399999737739563, 0.8206666707992554, 0.8500000238418579, 0.8476666808128357, 0.8240000009536743, 0.8083333373069763, 0.8550000190734863, 0.8153333067893982, 0.8203333616256714, 0.8519999980926514, 0.8560000061988831, 0.8643333315849304, 0.8483333587646484, 0.859333336353302, 0.8633333444595337, 0.8616666793823242, 0.8583333492279053]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], [2, 9, 6, 3, 0, 3, 1, 1, 5, 6, 1, 8], [2, 3, 0, 0, 2, 1, 2, 2, 0, 0, 0, 3, 2, 2], [84, 89, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.8185714483261108, "mapping_values": [1, 19, 19, 11, 8, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), grad)))), tf.math.add(alpha, tf.math.subtract(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)), tf.math.add(alpha, alpha))))), tf.math.add(alpha, grad)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.1758637121875983, 2.15901548600137, 1.7648893014204705, 1.6493120971624766, 1.0790818148773453, 0.8477438949653737, 0.7544432864087117, 0.7218220916485286, 0.6705254683357896, 0.6300831684315477, 0.62007723813831, 0.616926650518534, 0.5911652292431842, 0.5763296761044799, 0.5567716668940428, 0.5381011181519473, 0.5364218364695926, 0.5101824502714432, 0.5246313428047421, 0.5053585937561345, 0.4820954576813707, 0.4913230513923314, 0.479987525362081, 0.4621508338817941, 0.45737385699824884, 0.45711705609004666, 0.46118720526299095, 0.4576941052951896, 0.4314119481824692, 0.4316416448960136, 0.4276688420785149, 0.4186905960420403, 0.406908345921574, 0.40940924426741243, 0.4173571927995257, 0.41570845153810104, 0.39226152501353784, 0.4094801343206905, 0.3929638546991027, 0.37612072483990344, 0.3416556163927536, 0.36938582160579625, 0.36547630606877285, 0.3542101550859593, 0.362361674216823], "accuracy": [0.31898030638694763, 0.282129168510437, 0.4157971143722534, 0.47047945857048035, 0.6215823292732239, 0.684982180595398, 0.715889573097229, 0.733588695526123, 0.7430986762046814, 0.7614582180976868, 0.7688548564910889, 0.7637035846710205, 0.7775723338127136, 0.7795535326004028, 0.7897239327430725, 0.7961959838867188, 0.7996301651000977, 0.8076872229576111, 0.8014793395996094, 0.8100647330284119, 0.8210275769233704, 0.8125742673873901, 0.8190463781356812, 0.8267071843147278, 0.8305375576019287, 0.8257825970649719, 0.8314621448516846, 0.8220842480659485, 0.8359529972076416, 0.8364813327789307, 0.8407079577445984, 0.8432175517082214, 0.8511425256729126, 0.8499537706375122, 0.8481045961380005, 0.8454629778862, 0.8549728989601135, 0.845859169960022, 0.8479725122451782, 0.8578787446022034, 0.8709549307823181, 0.8585391640663147, 0.8622375130653381, 0.8663320541381836, 0.8627657890319824], "val_loss": [1.5377801145826067, 1.5283920083727156, 1.4201200348990304, 0.9987250396183559, 0.6594162157603672, 0.6104505062103271, 0.5811469214303153, 0.5448995998927525, 0.4909088781901768, 0.4995518582207816, 0.4818263053894043, 0.4854611839566912, 0.5081121240343366, 0.45375244106565205, 0.4446277788707188, 0.4457102247646877, 0.4252162916319711, 0.43484242473329815, 0.4491839323725019, 0.42995459692818777, 0.4449875610215323, 0.3909237129347665, 0.40250301361083984, 0.43353640181677683, 0.38553742851529804, 0.3749390755380903, 0.37360518319266184, 0.3945317694119045, 0.3777793049812317, 0.40153167077473234, 0.360578145299639, 0.3596286858831133, 0.3915280188832964, 0.4076767308371408, 0.3524878110204424, 0.39529484510421753, 0.4274791819708688, 0.35948141132082256, 0.34393781423568726, 0.34777313470840454, 0.3586253012929644, 0.3477903093610491, 0.3316042423248291, 0.33001573596681866, 0.3430443150656564], "val_accuracy": [0.40433332324028015, 0.4543333351612091, 0.492000013589859, 0.6269999742507935, 0.7020000219345093, 0.7203333377838135, 0.7586666941642761, 0.746999979019165, 0.7756666541099548, 0.7799999713897705, 0.781000018119812, 0.7839999794960022, 0.7549999952316284, 0.7933333516120911, 0.8029999732971191, 0.7996666431427002, 0.8130000233650208, 0.8069999814033508, 0.7893333435058594, 0.8013333082199097, 0.7986666560173035, 0.828000009059906, 0.8220000267028809, 0.8023333549499512, 0.8383333086967468, 0.8403333425521851, 0.8413333296775818, 0.8263333439826965, 0.8399999737739563, 0.8206666707992554, 0.8500000238418579, 0.8476666808128357, 0.8240000009536743, 0.8083333373069763, 0.8550000190734863, 0.8153333067893982, 0.8203333616256714, 0.8519999980926514, 0.8560000061988831, 0.8643333315849304, 0.8483333587646484, 0.859333336353302, 0.8633333444595337, 0.8616666793823242, 0.8583333492279053]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 3, 6, 0, 3, 8, 1, 5, 6, 1, 8], [2, 3, 0, 0, 2, 1, 2, 2, 0, 0, 0, 3, 2, 2], [84, 89, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 0, 1, 0, 1], [0, 0, 1, 1], [3, 3, 0], [3, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.8185714483261108, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 4, 2, 2, 0, 5, 2, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, sigma), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.1758637121875983, 2.15901548600137, 1.7648893014204705, 1.6493120971624766, 1.0790818148773453, 0.8477438949653737, 0.7544432864087117, 0.7218220916485286, 0.6705254683357896, 0.6300831684315477, 0.62007723813831, 0.616926650518534, 0.5911652292431842, 0.5763296761044799, 0.5567716668940428, 0.5381011181519473, 0.5364218364695926, 0.5101824502714432, 0.5246313428047421, 0.5053585937561345, 0.4820954576813707, 0.4913230513923314, 0.479987525362081, 0.4621508338817941, 0.45737385699824884, 0.45711705609004666, 0.46118720526299095, 0.4576941052951896, 0.4314119481824692, 0.4316416448960136, 0.4276688420785149, 0.4186905960420403, 0.406908345921574, 0.40940924426741243, 0.4173571927995257, 0.41570845153810104, 0.39226152501353784, 0.4094801343206905, 0.3929638546991027, 0.37612072483990344, 0.3416556163927536, 0.36938582160579625, 0.36547630606877285, 0.3542101550859593, 0.362361674216823], "accuracy": [0.31898030638694763, 0.282129168510437, 0.4157971143722534, 0.47047945857048035, 0.6215823292732239, 0.684982180595398, 0.715889573097229, 0.733588695526123, 0.7430986762046814, 0.7614582180976868, 0.7688548564910889, 0.7637035846710205, 0.7775723338127136, 0.7795535326004028, 0.7897239327430725, 0.7961959838867188, 0.7996301651000977, 0.8076872229576111, 0.8014793395996094, 0.8100647330284119, 0.8210275769233704, 0.8125742673873901, 0.8190463781356812, 0.8267071843147278, 0.8305375576019287, 0.8257825970649719, 0.8314621448516846, 0.8220842480659485, 0.8359529972076416, 0.8364813327789307, 0.8407079577445984, 0.8432175517082214, 0.8511425256729126, 0.8499537706375122, 0.8481045961380005, 0.8454629778862, 0.8549728989601135, 0.845859169960022, 0.8479725122451782, 0.8578787446022034, 0.8709549307823181, 0.8585391640663147, 0.8622375130653381, 0.8663320541381836, 0.8627657890319824], "val_loss": [1.5377801145826067, 1.5283920083727156, 1.4201200348990304, 0.9987250396183559, 0.6594162157603672, 0.6104505062103271, 0.5811469214303153, 0.5448995998927525, 0.4909088781901768, 0.4995518582207816, 0.4818263053894043, 0.4854611839566912, 0.5081121240343366, 0.45375244106565205, 0.4446277788707188, 0.4457102247646877, 0.4252162916319711, 0.43484242473329815, 0.4491839323725019, 0.42995459692818777, 0.4449875610215323, 0.3909237129347665, 0.40250301361083984, 0.43353640181677683, 0.38553742851529804, 0.3749390755380903, 0.37360518319266184, 0.3945317694119045, 0.3777793049812317, 0.40153167077473234, 0.360578145299639, 0.3596286858831133, 0.3915280188832964, 0.4076767308371408, 0.3524878110204424, 0.39529484510421753, 0.4274791819708688, 0.35948141132082256, 0.34393781423568726, 0.34777313470840454, 0.3586253012929644, 0.3477903093610491, 0.3316042423248291, 0.33001573596681866, 0.3430443150656564], "val_accuracy": [0.40433332324028015, 0.4543333351612091, 0.492000013589859, 0.6269999742507935, 0.7020000219345093, 0.7203333377838135, 0.7586666941642761, 0.746999979019165, 0.7756666541099548, 0.7799999713897705, 0.781000018119812, 0.7839999794960022, 0.7549999952316284, 0.7933333516120911, 0.8029999732971191, 0.7996666431427002, 0.8130000233650208, 0.8069999814033508, 0.7893333435058594, 0.8013333082199097, 0.7986666560173035, 0.828000009059906, 0.8220000267028809, 0.8023333549499512, 0.8383333086967468, 0.8403333425521851, 0.8413333296775818, 0.8263333439826965, 0.8399999737739563, 0.8206666707992554, 0.8500000238418579, 0.8476666808128357, 0.8240000009536743, 0.8083333373069763, 0.8550000190734863, 0.8153333067893982, 0.8203333616256714, 0.8519999980926514, 0.8560000061988831, 0.8643333315849304, 0.8483333587646484, 0.859333336353302, 0.8633333444595337, 0.8616666793823242, 0.8583333492279053]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 3, 6, 0, 3, 8, 1, 5, 6, 1, 8], [2, 3, 0, 0, 2, 1, 2, 2, 0, 0, 0, 3, 2, 2], [84, 89, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [1, 3], [], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1], [3, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.11028571426868439, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 9, 6, 3, 3], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), beta)", "other_info": {"loss": [22.032251088028147, 3.1576402650895354, 4.949341848872483, 6.98028757108941, 9.828977529666584, 4.500191098364227], "accuracy": [0.06260731816291809, 0.09694888442754745, 0.09959053993225098, 0.1010434553027153, 0.0948355570435524, 0.09642054885625839], "val_loss": [2.288433415549142, 3.311093807220459, 5.794269834245954, 7.147958483014788, 5.843743732997349, 2.890205519539969], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 6, 1, 9, 6, 1, 8], [2, 3, 0, 0, 2, 1, 2, 2, 0, 0, 0, 3, 2, 2], [84, 89, 71, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 2, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 9, 5, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))), grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.3031525124396315, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 3, 6, 0, 3, 8, 1, 5, 6, 1, 8], [2, 3, 0, 0, 2, 1, 2, 2, 0, 0, 0, 3, 2, 2], [84, 89, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [5, 3], [], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 1, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0796460211277008, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 1, 9, 6, 1, 8], [2, 0, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [84, 56, 5, 73, 46], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 9, 5, 4, 3], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1702264.6224850765, 2.4384275910530295, 2.4345042912117036, 2.447676234099812, 2.4265547640461254, 2.422190658294482], "accuracy": [0.09549596905708313, 0.10579843819141388, 0.10289261490106583, 0.10117553919553757, 0.10011887550354004, 0.09536388516426086], "val_loss": [2.1791652951921736, 2.068415437425886, 2.0006015641348704, 2.106555393763951, 2.030031272343227, 2.0896847588675365], "val_accuracy": [0.10400000214576721, 0.09966666996479034, 0.09833333641290665, 0.10000000149011612, 0.10400000214576721, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1], [2, 9, 6, 6, 0, 3, 8, 1, 5, 5, 1, 8], [2, 3, 0, 0, 2, 1, 2, 2, 0, 0, 0, 3, 2, 2], [61, 18, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 0, 1, 0, 1], [0, 0, 1, 1], [3, 3, 0], [3, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [4, 3, 2, 9, 2, 9], [1, 2, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [13, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 4, 2, 2, 0, 5, 2, 3, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, sigma), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(alpha, beta), sigma)", "other_info": {"loss": [2.3031525124396315, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 3, 5, 6, 1, 8], [1, 0, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [84, 89, 13, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [8, 3, 2, 9, 2, 9], [1, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [38, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 9, 3, 8, 1, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [98, 53, 68, 73, 46], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 3, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 8, 4, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 9, 5, 4, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.add(beta, sigma), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [2, 2, 5, 6, 0, 3, 8, 3, 5, 1, 1, 8], [2, 0, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [84, 89, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 1, 2, 9, 2, 9], [3, 0, 0, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [38, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 2], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.square(grad), tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.subtract(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), grad)))), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.subtract(sigma, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 3, 6, 0, 3, 8, 1, 5, 6, 1, 8], [2, 3, 0, 0, 2, 1, 2, 2, 0, 0, 0, 3, 2, 2], [84, 89, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [9, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3031525124396315, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 9, 6, 0, 0, 3, 8, 1, 9, 6, 1, 8], [2, 3, 2, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [84, 89, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [1, 0, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 4, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [3591231.9583178586, 2.308334378329534, 2.304025987482279, 2.3031694101792883, 2.303030636867654, 2.3030865724926626], "accuracy": [0.09391097724437714, 0.09589222073554993, 0.09509972482919693, 0.09589222073554993, 0.09576013684272766, 0.09060890227556229], "val_loss": [1.9825457164219447, 1.975599902016776, 1.9741012709481376, 1.973764283316476, 1.9735965047563826, 1.9736501148768835], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 1, 5, 5, 1, 8], [2, 0, 0, 0, 2, 1, 2, 2, 0, 0, 0, 3, 2, 2], [84, 89, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [1, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [33, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1], [2, 9, 3, 6, 0, 3, 8, 1, 9, 6, 1, 8], [2, 3, 2, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [84, 89, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [2, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [6, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [38, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 18, 12, 6, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.subtract(grad, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, grad))), tf.math.sqrt(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.3031525124396315, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 3, 6, 0, 3, 8, 1, 5, 6, 1, 8], [2, 3, 0, 0, 2, 1, 2, 2, 0, 0, 0, 3, 2, 2], [84, 89, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [51, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1], [2, 5, 4, 8, 9, 3, 8, 1, 5, 6, 1, 8], [1, 0, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [33, 18, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 9, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [71, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 5, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.pow(alpha, tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))))), tf.math.sqrt(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), beta)", "other_info": {"loss": [2.303598302340605, 2.302964304573957, 2.3030563808151947, 2.3030054799758717, 2.302990681239249, 2.303085828737544, 2.3030572914097838, 2.303045478904441, 2.302936492768009, 2.30291545077747], "accuracy": [0.0956280529499054, 0.09470347315073013, 0.0882314071059227, 0.09681680053472519, 0.09694888442754745, 0.09008057415485382, 0.09747721254825592, 0.0948355570435524, 0.09813763201236725, 0.09496764093637466], "val_loss": [1.9736619676862444, 1.9737002508980888, 1.9736549513680595, 1.9736151014055525, 1.973560401371547, 1.9736390113830566, 1.9736535889761788, 1.973595346723284, 1.9735969134739466, 1.9736322675432478], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.10233332961797714, 0.10400000214576721, 0.09833333641290665, 0.09833333641290665, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [2, 2, 6, 6, 0, 2, 8, 3, 5, 9, 1, 8], [1, 0, 0, 0, 0, 2, 2, 2, 0, 0, 0, 3, 2, 2], [84, 89, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [1, 9, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [68, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 9, 7, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(alpha, tf.math.divide_no_nan(tf.math.negative(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.multiply(tf.math.square(grad), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3035983562847373, 2.302964196591219, 2.3030557689759963, 2.3030054305034655, 2.302991221058465, 2.303085819699619, 2.3030570079905246, 2.303044669175617, 2.3029356200571276, 2.3029156216477924], "accuracy": [0.0956280529499054, 0.09470347315073013, 0.0882314071059227, 0.09681680053472519, 0.09694888442754745, 0.09008057415485382, 0.09747721254825592, 0.0948355570435524, 0.09813763201236725, 0.09496764093637466], "val_loss": [1.97366121837071, 1.9737005914960588, 1.9736549513680595, 1.9736151695251465, 1.9735608782087053, 1.9736406462533134, 1.9736520222255163, 1.9735948698861259, 1.973597730909075, 1.9736319950648717], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.10233332961797714, 0.10400000214576721, 0.09833333641290665, 0.09833333641290665, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 3, 6, 0, 3, 8, 1, 5, 6, 1, 8], [0, 3, 0, 0, 2, 1, 2, 2, 0, 0, 0, 3, 2, 2], [58, 89, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [1, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 9, 6, 3, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.math.multiply(tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), beta))", "other_info": {"loss": [12911958.119989427, 2.3088023254758316, 2.3039095062290627, 2.303163818380285, 2.3030740940465337, 2.3031584961444884, 2.3031259044097507, 2.3031161088103302, 2.3029902827517703, 2.302963943434839, 2.302973638137003, 2.303027809004758, 2.3030760616060135], "accuracy": [0.09377889335155487, 0.09589222073554993, 0.09166556596755981, 0.09760929644107819, 0.09694888442754745, 0.09060890227556229, 0.09800554811954498, 0.0948355570435524, 0.09813763201236725, 0.09470347315073013, 0.09879804402589798, 0.09417514503002167, 0.09060890227556229], "val_loss": [1.983891419001988, 1.975414548601423, 1.9739811079842704, 1.9737144197736467, 1.973574229649135, 1.973661014011928, 1.973668098449707, 1.9735948698861259, 1.9736010687691825, 1.9736455508640833, 1.9736194610595703, 1.9736378533499581, 1.973655836922782], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.10233332961797714, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.09700000286102295, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 3, 6, 0, 3, 8, 1, 5, 6, 1, 8], [2, 3, 0, 0, 2, 1, 2, 2, 0, 0, 0, 3, 2, 2], [84, 89, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [1, 3], [], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [1, 3, 0, 9, 2, 9], [2, 0, 1, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [76, 25, 63, 71, 34]], "fitness": -0.09828571230173111, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.math.negative(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))), alpha)", "other_info": {"loss": [6.607233404310199, 1.6914608419853582e+33, NaN, NaN, NaN, NaN], "accuracy": [0.15361246466636658, 0.09549596905708313, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.085799080984933, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}]