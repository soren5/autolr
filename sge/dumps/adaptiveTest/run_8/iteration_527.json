[{"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.7997142672538757, "mapping_values": [1, 16, 16, 10, 6, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), grad))))), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.091655520132551, 1.5226927004344175, 1.3217568606150039, 0.9576335190671735, 0.8200543524488056, 0.7523475165506317, 0.73593875066306, 0.6971759812990278, 0.6623534150662722, 0.6431794019344381, 0.6069284967144231, 0.6076295809691624, 0.594155140336258, 0.5651999225139052, 0.5538142722721475, 0.5506246205113741, 0.5174945667986353, 0.5245528003763544, 0.535337369900338, 0.4987551015106096, 0.500521214256953, 0.4648424780576646], "accuracy": [0.2925637364387512, 0.4802536070346832, 0.553031325340271, 0.6421872973442078, 0.691850483417511, 0.7224937081336975, 0.7228899598121643, 0.7334566116333008, 0.7489103078842163, 0.7460044622421265, 0.7721568942070007, 0.7708360552787781, 0.7711002230644226, 0.7783648371696472, 0.7932901978492737, 0.7943468689918518, 0.8072909712791443, 0.7998943328857422, 0.7968564033508301, 0.8137630224227905, 0.8098005652427673, 0.8277638554573059], "val_loss": [1.135094165802002, 1.4195314475468226, 0.7178726196289062, 0.6211218323026385, 0.5802493946892875, 0.525234545980181, 0.5371836423873901, 0.5461283922195435, 0.5337755339486259, 0.5112794297082084, 0.4922558069229126, 0.46326933588300434, 0.49581273964473177, 0.48862387452806744, 0.4612372943333217, 0.41002741881779264, 0.4127375909260341, 0.46493702275412424, 0.42093896865844727, 0.4050517848559788, 0.4209591065134321, 0.4073796442576817], "val_accuracy": [0.5640000104904175, 0.5533333420753479, 0.6903333067893982, 0.7413333058357239, 0.7459999918937683, 0.765333354473114, 0.7699999809265137, 0.7390000224113464, 0.7403333187103271, 0.7680000066757202, 0.7820000052452087, 0.7799999713897705, 0.7646666765213013, 0.7863333225250244, 0.7956666946411133, 0.8259999752044678, 0.8303333520889282, 0.8026666641235352, 0.8136666417121887, 0.824999988079071, 0.815666675567627, 0.8143333196640015]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 5, 2, 2, 5, 6, 1, 8], [2, 1, 0, 2, 0, 0, 2, 2, 0, 0, 0, 3, 2, 2], [42, 90, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.7997142672538757, "mapping_values": [1, 8, 8, 5, 3, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(alpha), tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.091655520132551, 1.5226927004344175, 1.3217568606150039, 0.9576335190671735, 0.8200543524488056, 0.7523475165506317, 0.73593875066306, 0.6971759812990278, 0.6623534150662722, 0.6431794019344381, 0.6069284967144231, 0.6076295809691624, 0.594155140336258, 0.5651999225139052, 0.5538142722721475, 0.5506246205113741, 0.5174945667986353, 0.5245528003763544, 0.535337369900338, 0.4987551015106096, 0.500521214256953, 0.4648424780576646], "accuracy": [0.2925637364387512, 0.4802536070346832, 0.553031325340271, 0.6421872973442078, 0.691850483417511, 0.7224937081336975, 0.7228899598121643, 0.7334566116333008, 0.7489103078842163, 0.7460044622421265, 0.7721568942070007, 0.7708360552787781, 0.7711002230644226, 0.7783648371696472, 0.7932901978492737, 0.7943468689918518, 0.8072909712791443, 0.7998943328857422, 0.7968564033508301, 0.8137630224227905, 0.8098005652427673, 0.8277638554573059], "val_loss": [1.135094165802002, 1.4195314475468226, 0.7178726196289062, 0.6211218323026385, 0.5802493946892875, 0.525234545980181, 0.5371836423873901, 0.5461283922195435, 0.5337755339486259, 0.5112794297082084, 0.4922558069229126, 0.46326933588300434, 0.49581273964473177, 0.48862387452806744, 0.4612372943333217, 0.41002741881779264, 0.4127375909260341, 0.46493702275412424, 0.42093896865844727, 0.4050517848559788, 0.4209591065134321, 0.4073796442576817], "val_accuracy": [0.5640000104904175, 0.5533333420753479, 0.6903333067893982, 0.7413333058357239, 0.7459999918937683, 0.765333354473114, 0.7699999809265137, 0.7390000224113464, 0.7403333187103271, 0.7680000066757202, 0.7820000052452087, 0.7799999713897705, 0.7646666765213013, 0.7863333225250244, 0.7956666946411133, 0.8259999752044678, 0.8303333520889282, 0.8026666641235352, 0.8136666417121887, 0.824999988079071, 0.815666675567627, 0.8143333196640015]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1], [2, 9, 6, 6, 2, 3, 8, 4, 9, 6, 1, 8, 8, 6, 9, 0], [2, 1, 0, 2, 2, 0, 2, 1, 0, 0, 0, 3, 2, 2], [26, 79, 68, 73, 80], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 0, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.7997142672538757, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 6, 4, 3, 1, 0, 5, 2, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.091655520132551, 1.5226927004344175, 1.3217568606150039, 0.9576335190671735, 0.8200543524488056, 0.7523475165506317, 0.73593875066306, 0.6971759812990278, 0.6623534150662722, 0.6431794019344381, 0.6069284967144231, 0.6076295809691624, 0.594155140336258, 0.5651999225139052, 0.5538142722721475, 0.5506246205113741, 0.5174945667986353, 0.5245528003763544, 0.535337369900338, 0.4987551015106096, 0.500521214256953, 0.4648424780576646], "accuracy": [0.2925637364387512, 0.4802536070346832, 0.553031325340271, 0.6421872973442078, 0.691850483417511, 0.7224937081336975, 0.7228899598121643, 0.7334566116333008, 0.7489103078842163, 0.7460044622421265, 0.7721568942070007, 0.7708360552787781, 0.7711002230644226, 0.7783648371696472, 0.7932901978492737, 0.7943468689918518, 0.8072909712791443, 0.7998943328857422, 0.7968564033508301, 0.8137630224227905, 0.8098005652427673, 0.8277638554573059], "val_loss": [1.135094165802002, 1.4195314475468226, 0.7178726196289062, 0.6211218323026385, 0.5802493946892875, 0.525234545980181, 0.5371836423873901, 0.5461283922195435, 0.5337755339486259, 0.5112794297082084, 0.4922558069229126, 0.46326933588300434, 0.49581273964473177, 0.48862387452806744, 0.4612372943333217, 0.41002741881779264, 0.4127375909260341, 0.46493702275412424, 0.42093896865844727, 0.4050517848559788, 0.4209591065134321, 0.4073796442576817], "val_accuracy": [0.5640000104904175, 0.5533333420753479, 0.6903333067893982, 0.7413333058357239, 0.7459999918937683, 0.765333354473114, 0.7699999809265137, 0.7390000224113464, 0.7403333187103271, 0.7680000066757202, 0.7820000052452087, 0.7799999713897705, 0.7646666765213013, 0.7863333225250244, 0.7956666946411133, 0.8259999752044678, 0.8303333520889282, 0.8026666641235352, 0.8136666417121887, 0.824999988079071, 0.815666675567627, 0.8143333196640015]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [2, 0, 6, 2, 0, 8, 3, 2, 1, 6, 2, 4, 4, 8, 9, 8, 3], [2, 2, 0, 1, 2, 2, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [81, 25, 50, 71, 34]], "fitness": -0.6660000085830688, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.2994523015335298, 2.2983320172531196, 2.2938080699987666, 2.2910775638543037, 2.2862851020761092, 2.283067615355609, 2.279889566393545, 2.276222122816157, 2.2713076333958067, 2.267403513134085, 2.264976990048156, 2.2614529434841986, 2.2568023727554545, 2.2531933394625927, 2.2476893543897916, 2.2453802558078646, 2.2397770556350505, 2.2347338522398523, 2.2300968133636423, 2.2262256779391705, 2.2215618102494767, 2.215918381232092, 2.2118337286335836, 2.2029645952802404, 2.1983060611001317, 2.191975410415071, 2.187659495920159, 2.179571078044391, 2.171718707252818, 2.1651599568745024, 2.155803084798603, 2.1504035038860514, 2.1414413984661733, 2.1308391594285303, 2.1249844791740866, 2.116898333690957, 2.1019311275275596, 2.094624761388192, 2.084721965182648, 2.073345176107013, 2.06032686333662, 2.0468667393048143, 2.0378353651787675, 2.021680731673235, 2.0081113024693846, 1.9932486527568518, 1.981401800589712, 1.9632763264752682, 1.950224618807193, 1.9320206249300294, 1.921291877785379, 1.9024669942823085, 1.8858722839782487, 1.870950741333937, 1.851284131649825, 1.8375879353410012, 1.815707983090153, 1.7951347639909936, 1.7805097310329867, 1.7630845509374051, 1.7401045552019303, 1.7264293897830578, 1.7052393459357353, 1.692202753788287, 1.6704255958762955, 1.6589383468683354, 1.6390871343327993, 1.6252730887374858, 1.6044066861604482, 1.5934226759641146, 1.5710007367494982, 1.5517991207153286, 1.5335301698049328, 1.517274949717846, 1.506273694168134, 1.4936962739713693, 1.4857304924750891, 1.4560989185236763, 1.4514792711507092, 1.4414133346154785, 1.423081298435621, 1.422576801636121, 1.4012768708199967, 1.3949188575642597, 1.3777943155186414, 1.357422626029546, 1.3518249548311325, 1.3499031870073221, 1.329616742331858, 1.3229448180456267, 1.3191019595653437, 1.3035748226767627, 1.2941324634637656, 1.2912169373219653, 1.2686486308443359, 1.2697544115220456, 1.2633612591120325, 1.2513819552211083, 1.2471053089526791, 1.2396619316766668], "accuracy": [0.09457138925790787, 0.10342095047235489, 0.10791176557540894, 0.11570466309785843, 0.1320829540491104, 0.13855500519275665, 0.15519747138023376, 0.16299036145210266, 0.17236824333667755, 0.18280279636383057, 0.19310526549816132, 0.20116232335567474, 0.21040813624858856, 0.2141064554452896, 0.2308809906244278, 0.2351076453924179, 0.24461762607097626, 0.25241050124168396, 0.2583542466163635, 0.2650904655456543, 0.27420419454574585, 0.2849029302597046, 0.2852991819381714, 0.30141329765319824, 0.30999869108200073, 0.31660282611846924, 0.31501781940460205, 0.3335094451904297, 0.33166027069091797, 0.3335094451904297, 0.3494914770126343, 0.34143441915512085, 0.349359393119812, 0.3625676929950714, 0.3555673062801361, 0.35966187715530396, 0.3727380931377411, 0.37907806038856506, 0.38145554065704346, 0.3875313699245453, 0.39347511529922485, 0.39941883087158203, 0.4011359214782715, 0.401400089263916, 0.41566503047943115, 0.41566503047943115, 0.4233258366584778, 0.42385417222976685, 0.4361378848552704, 0.439439982175827, 0.4283449947834015, 0.43349623680114746, 0.44247788190841675, 0.4430062174797058, 0.45145952701568604, 0.45528993010520935, 0.45766741037368774, 0.460969477891922, 0.4605732262134552, 0.46123364567756653, 0.47272488474845886, 0.4785365164279938, 0.47866860032081604, 0.4785365164279938, 0.4877823293209076, 0.4855369031429291, 0.47985735535621643, 0.48725399374961853, 0.49887728691101074, 0.49266940355300903, 0.505877673625946, 0.5101043581962585, 0.5085193514823914, 0.516708493232727, 0.5197464227676392, 0.5107647776603699, 0.5221238732337952, 0.5254259705543518, 0.518161416053772, 0.5255580544471741, 0.5334830284118652, 0.5340113639831543, 0.5403513312339783, 0.5352001190185547, 0.544181764125824, 0.5476158857345581, 0.5436534285545349, 0.5543521046638489, 0.5507858991622925, 0.5556729435920715, 0.5518425703048706, 0.5577862858772278, 0.5621450543403625, 0.5641262531280518, 0.5713908076286316, 0.5659754276275635, 0.5595033764839172, 0.5729758143424988, 0.5708624720573425, 0.5843349695205688], "val_loss": [1.9671660150800432, 1.963752133505685, 1.9603539194379533, 1.9570042065211706, 1.953620501926967, 1.9502262387956892, 1.9468282290867396, 1.943409034184047, 1.939948899405343, 1.9364289556230818, 1.9328033583504813, 1.9291223117283411, 1.9253407887050085, 1.9214626039777483, 1.9174848284040178, 1.9133919988359724, 1.909184796469552, 1.9047832489013672, 1.90018401827131, 1.8954783848353796, 1.8906269073486328, 1.8855742727007185, 1.8803254536220007, 1.8747528621128626, 1.8689806120736259, 1.8629347256251745, 1.8567347526550293, 1.8501513344900948, 1.8432982308523995, 1.8361389296395438, 1.8286122594560896, 1.8208114760262626, 1.8126276561192103, 1.804063047681536, 1.7952238491603307, 1.786046368735177, 1.7763332639421736, 1.7662815366472517, 1.7558088983808244, 1.7448884419032507, 1.7334895815168108, 1.7215962409973145, 1.7094178540366036, 1.6966491426740373, 1.6834773676736015, 1.6697096824645996, 1.655667475291661, 1.641068628856114, 1.6260557515280587, 1.6105285372052873, 1.594796930040632, 1.5785691397530692, 1.5620363780430384, 1.5453023229326521, 1.5281047480446952, 1.510770389011928, 1.4930428096226283, 1.4750930922372, 1.4571570668901717, 1.4389831338609969, 1.4205293655395508, 1.4022222587040492, 1.3837278570447649, 1.3653208868844169, 1.3469867365700858, 1.3288208757128035, 1.3106863839285714, 1.2929976667676653, 1.2752435207366943, 1.2580695833478654, 1.240891763142177, 1.2241283825465612, 1.2075391496930803, 1.1912756987980433, 1.1754848616463798, 1.1600726331983293, 1.1453983783721924, 1.1305951731545585, 1.1165401935577393, 1.103001628603254, 1.0895360197339738, 1.0768473148345947, 1.0643064975738525, 1.0520915303911482, 1.0403388568333216, 1.0284573350633894, 1.0172595637185233, 1.006573268345424, 0.995896407536098, 0.9859400476728167, 0.9762827668871198, 0.9666608401707241, 0.9573484829493931, 0.9486855098179409, 0.9398717880249023, 0.9315602438790458, 0.9234355858394078, 0.9154723712376186, 0.9080328600747245, 0.9006570066724505], "val_accuracy": [0.06066666543483734, 0.08766666799783707, 0.12200000137090683, 0.15299999713897705, 0.1886666715145111, 0.21899999678134918, 0.2433333396911621, 0.2723333239555359, 0.2980000078678131, 0.3213333189487457, 0.3400000035762787, 0.3526666760444641, 0.3643333315849304, 0.37166666984558105, 0.3790000081062317, 0.3863333463668823, 0.3946666717529297, 0.40066665410995483, 0.40566667914390564, 0.41499999165534973, 0.421999990940094, 0.42766666412353516, 0.4333333373069763, 0.44066667556762695, 0.4463333189487457, 0.4519999921321869, 0.4593333303928375, 0.4673333466053009, 0.4703333377838135, 0.47200000286102295, 0.47699999809265137, 0.4833333194255829, 0.4873333275318146, 0.49399998784065247, 0.4963333308696747, 0.503000020980835, 0.5073333382606506, 0.5133333206176758, 0.518666684627533, 0.5239999890327454, 0.527999997138977, 0.531333327293396, 0.5353333353996277, 0.5383333563804626, 0.5403333306312561, 0.5413333177566528, 0.5456666946411133, 0.550000011920929, 0.5546666383743286, 0.5556666851043701, 0.5573333501815796, 0.5590000152587891, 0.5613333582878113, 0.562333345413208, 0.5663333535194397, 0.5706666707992554, 0.5733333230018616, 0.5753333568572998, 0.5773333311080933, 0.5753333568572998, 0.5766666531562805, 0.5796666741371155, 0.581333339214325, 0.5836666822433472, 0.5860000252723694, 0.5896666646003723, 0.5933333039283752, 0.593999981880188, 0.5960000157356262, 0.5983333587646484, 0.6016666889190674, 0.6033333539962769, 0.6086666584014893, 0.612666666507721, 0.6179999709129333, 0.621666669845581, 0.6230000257492065, 0.6263333559036255, 0.6346666812896729, 0.640333354473114, 0.6416666507720947, 0.643666684627533, 0.6463333368301392, 0.6496666669845581, 0.6549999713897705, 0.6583333611488342, 0.6589999794960022, 0.6616666913032532, 0.6646666526794434, 0.6669999957084656, 0.668666660785675, 0.6729999780654907, 0.675000011920929, 0.6766666769981384, 0.6793333292007446, 0.6790000200271606, 0.6823333501815796, 0.6840000152587891, 0.6856666803359985, 0.687666654586792]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0], [1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [2, 9, 6, 6, 0, 5, 2, 2, 5, 6, 1, 8], [2, 2, 0, 1, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 85, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [8, 3, 2, 9, 2, 9], [2, 1, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [2, 9, 2, 6, 9, 3, 8, 2, 1, 6, 1, 8], [1, 1, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 85, 73, 46], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 0, 1, 1], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 1, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 9, 6, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), alpha)), beta)", "other_info": {"loss": [2.30350363939477, 2.304842678783529, 2.304871315937851, 2.306320095515727, 2.3068105931358254, 2.3077763785555097, 2.3080822574684507], "accuracy": [0.09232597798109055, 0.09681680053472519, 0.09932637959718704, 0.09800554811954498, 0.09615638852119446, 0.10091137140989304, 0.09945846349000931], "val_loss": [1.973871844155448, 1.9740575381687708, 1.9756110055106026, 1.9760960170200892, 1.9765522820608956, 1.9785857200622559, 1.9792143276759557], "val_accuracy": [0.09833333641290665, 0.10233332961797714, 0.09733333438634872, 0.09966666996479034, 0.0976666659116745, 0.09700000286102295, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 9, 4, 2, 5, 6, 1, 8], [2, 2, 0, 1, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [5, 3, 2, 9, 2, 9], [1, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 6, 2, 2, 8, 8, 4, 4, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), grad))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.3002931659783132, 2.301478992599963, 2.3023413963731034, 2.3025712377091976, 2.30258524151778, 2.3025850442894664, 2.302585336463232, 2.3025858937914596, 2.3025849315515834], "accuracy": [0.09668471664190292, 0.10368511080741882, 0.10011887550354004, 0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9719371795654297, 1.9734702110290527, 1.9736450740269251, 1.973644188472203, 1.9736440522330148, 1.9736449377877372, 1.9736451421465193, 1.9736450740269251, 1.973644733428955], "val_accuracy": [0.10133333504199982, 0.06066666543483734, 0.10366666316986084, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [0, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [84, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [20, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07489103078842163, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [2, 0, 0, 1, 2, 2, 2, 2, 0, 0, 0, 3, 2, 2], [10, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [2, 3, 2, 9, 2, 9], [2, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 10, 6, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(alpha, grad)))), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07489103078842163, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0], [9, 0, 6, 6, 0, 3, 3, 2, 1, 1, 1, 8, 4, 5, 2, 4, 9], [2, 2, 0, 1, 2, 0, 0, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0], [3, 3, 2, 8], [4, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 1, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 8, 5, 4, 1, 0, 5, 2, 3, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))), tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.sqrt(sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, alpha), beta)", "other_info": {"loss": [3.7522768895891536, 2.303861677780474, 2.450110826730382, 2.302898231136517, 2.3029833062922305, 2.3036488371597006, 2.3034513852284837], "accuracy": [0.15215955674648285, 0.14330999553203583, 0.09694888442754745, 0.09681680053472519, 0.10117553919553757, 0.0936468094587326, 0.09457138925790787], "val_loss": [1.9747986112322127, 2.714226313999721, 1.9739034516470773, 1.9738712310791016, 1.9738105365208216, 1.9737814494541712, 1.973691190992083], "val_accuracy": [0.09833333641290665, 0.10400000214576721, 0.10233332961797714, 0.09733333438634872, 0.09700000286102295, 0.09733333438634872, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 8, 6, 6, 0, 3, 8, 4, 5, 6, 1, 8], [0, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 8, 8, 4, 4, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [6, 9, 5, 6, 0, 3, 8, 2, 1, 8, 2, 8, 4, 8, 0, 2], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [57, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [41, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 9, 5, 4, 3], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1841346.3773763778, 2.312209977512866, 2.3056003970240777, 2.303596642983824, 2.3030662033394456, 2.302950490467332], "accuracy": [0.1010434553027153, 0.0948355570435524, 0.09615638852119446, 0.09338264167308807, 0.09708096832036972, 0.0940430611371994], "val_loss": [1.9874149050031389, 1.9781648772103446, 1.9751793997628349, 1.9742592402866908, 1.9738617624555315, 1.973729201725551], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.09733333438634872, 0.09700000286102295, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [2, 9, 8, 6, 0, 3, 8, 2, 0, 6, 1, 8], [2, 1, 0, 0, 2, 0, 2, 1, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 80], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07489103078842163, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1], [2, 6, 6, 6, 0, 3, 8, 2, 9, 2, 1, 8, 8, 6, 9, 0], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 1, 0, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 8, 7, 3, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 5, 2, 3, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(grad)), tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))))), grad)), tf.math.add(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, alpha), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 2, 9, 6, 1, 8, 8, 6, 9, 0], [2, 1, 0, 0, 2, 0, 2, 1, 0, 0, 0, 3, 2, 2], [26, 98, 68, 20, 80], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 0, 1], [1, 0, 1, 0], [3, 5, 0], [5, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 10, 5, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 9, 5, 4, 3], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))))), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [976113.6372997834, 2.306136779529449, 2.304652955160165, 2.3037987282845824, 2.303352122954909, 2.303072078809636], "accuracy": [0.10091137140989304, 0.09655263274908066, 0.09576013684272766, 0.09325055778026581, 0.09628847241401672, 0.09311848133802414], "val_loss": [1.9780376298086983, 1.9762963567461287, 1.975275993347168, 1.9746983391898019, 1.9742849894932337, 1.974048478262765], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1], [2, 9, 6, 5, 0, 3, 8, 2, 9, 6, 1, 8, 8, 6, 9, 0], [2, 1, 0, 0, 2, 0, 2, 1, 0, 0, 0, 3, 2, 2], [26, 61, 68, 73, 80], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 8, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 9, 3, 3, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 4, 2, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))))), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.sqrt(beta), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0], [2, 0, 6, 6, 6, 3, 3, 2, 1, 6, 1, 8, 4, 8, 9, 8, 9], [2, 2, 0, 1, 2, 2, 2, 2, 2, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 0, 0, 1], [0, 0, 1, 0], [1, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [1, 9, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 27, 27, 17, 10, 4, 1, 1, 0, 1, 0, 6, 4, 3, 1, 0, 5, 3, 2, 2], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.sqrt(grad)))), tf.math.pow(tf.math.add(alpha, grad), grad)), tf.math.add(alpha, tf.math.sqrt(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302712201221886, 2.3029698900432636, 2.302883039832729, 2.30290122971228, 2.3028760952421106, 2.3029726342344956], "accuracy": [0.09457138925790787, 0.0936468094587326, 0.10091137140989304, 0.09708096832036972, 0.09681680053472519, 0.0940430611371994], "val_loss": [1.973637580871582, 1.9736648287091936, 1.973689351763044, 1.9737234115600586, 1.9736922809055872, 1.9736577442714147], "val_accuracy": [0.10233332961797714, 0.0976666659116745, 0.09733333438634872, 0.09733333438634872, 0.09700000286102295, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [6, 9, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [2, 0, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [57, 18, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [69, 25, 50, 71, 34]], "fitness": -0.0974285677075386, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 9, 5, 4, 3], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [331148.9004941554, 743590092.607474, 2.302650299369541, 2.3026475892516016, 2.3026468618718186, 2.3026455175827807], "accuracy": [0.09774138033390045, 0.09509972482919693, 0.09549596905708313, 0.09655263274908066, 0.09628847241401672, 0.09972262382507324], "val_loss": [1.9737047467912947, 1.9738054956708635, 1.9738024302891322, 1.9738004548209054, 1.9737968444824219, 1.9737936428615026], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 1, 6, 0, 3, 8, 2, 1, 8, 2, 8, 4, 8, 0, 2], [2, 1, 0, 2, 0, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 90, 68, 73, 46], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.3009346397466914, 2.3034469653051355, 2.302617456651304, 2.303344682758479, 2.3021887384464303, 2.302536358466128], "accuracy": [0.09126931428909302, 0.09060890227556229, 0.0882314071059227, 0.08585391938686371, 0.09325055778026581, 0.08625016361474991], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [2, 9, 6, 1, 9, 5, 2, 2, 5, 6, 1, 8], [0, 2, 0, 1, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 8, 8, 6, 2, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.3009346397466914, 2.3034469653051355, 2.302617456651304, 2.303344682758479, 2.3021887384464303, 2.302536358466128], "accuracy": [0.09126931428909302, 0.09060890227556229, 0.0882314071059227, 0.08585391938686371, 0.09325055778026581, 0.08625016361474991], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]