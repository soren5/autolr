[{"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.8157142996788025, "mapping_values": [1, 16, 16, 10, 6, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), grad))))), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.075397765096373, 1.7988266715000745, 1.3123310935054835, 1.1942724622771284, 0.8886827544419048, 0.8177640547589886, 0.7536083970717341, 0.7110008030535444, 0.6803693342060855, 0.6515674848897252, 0.6158300530499534, 0.604130498115271, 0.5550396298184418, 0.5723827011108776, 0.55408481169276, 0.5338145829525606, 0.5344974107950781, 0.5097739569633203, 0.5121717466032343, 0.5019093338390777, 0.46995812863516945, 0.4725702434380639, 0.4669530171767643, 0.4434267586177571, 0.4341188934477266, 0.4285486267739126, 0.46051363681427415, 0.4156516991696416, 0.42948099199681, 0.41646899926727, 0.39566794636148456, 0.4171671309349575], "accuracy": [0.31303659081459045, 0.4360058009624481, 0.5350680351257324, 0.5674283504486084, 0.6757363677024841, 0.6864351034164429, 0.7084929347038269, 0.7360982894897461, 0.7395324110984802, 0.7514199018478394, 0.7642319202423096, 0.7648923397064209, 0.7938185334205627, 0.7791573405265808, 0.7887993454933167, 0.7981772422790527, 0.8012151718139648, 0.8090080618858337, 0.8063663840293884, 0.809140145778656, 0.830669641494751, 0.8208954930305481, 0.8251221776008606, 0.8363492488861084, 0.8387266993522644, 0.8426892161369324, 0.829216718673706, 0.8425571322441101, 0.8374059200286865, 0.8450667262077332, 0.8541803956031799, 0.8407079577445984], "val_loss": [1.308225359235491, 1.1363948753901891, 1.30403470993042, 0.7043503863470895, 0.602642127445766, 0.6142148290361676, 0.5457696914672852, 0.5442071642194476, 0.5259751422064645, 0.470839262008667, 0.46322723797389437, 0.46709528991154264, 0.4814130408423288, 0.4415361966405596, 0.446926942893437, 0.44616563831056866, 0.43328401872089933, 0.4222264119556972, 0.40006566047668457, 0.3935126321656363, 0.3995733686855861, 0.4014738712991987, 0.37890165192740305, 0.3834182024002075, 0.3719839198248727, 0.3917715208871024, 0.3648637958935329, 0.42626144204820904, 0.42659640312194824, 0.3677332656724112, 0.37089877469199045, 0.36993086338043213], "val_accuracy": [0.49933332204818726, 0.4830000102519989, 0.3946666717529297, 0.6819999814033508, 0.734333336353302, 0.7283333539962769, 0.7609999775886536, 0.7326666712760925, 0.7689999938011169, 0.7976666688919067, 0.7919999957084656, 0.8056666851043701, 0.7683333158493042, 0.8133333325386047, 0.79666668176651, 0.8016666769981384, 0.8206666707992554, 0.8240000009536743, 0.828000009059906, 0.8396666646003723, 0.831333339214325, 0.8240000009536743, 0.8399999737739563, 0.8413333296775818, 0.8410000205039978, 0.8256666660308838, 0.8483333587646484, 0.8136666417121887, 0.812666654586792, 0.8456666469573975, 0.8433333039283752, 0.8429999947547913]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 5, 2, 2, 5, 6, 1, 8], [2, 2, 0, 1, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.8157142996788025, "mapping_values": [1, 11, 11, 7, 4, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.square(grad))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), alpha))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.075397765096373, 1.7988266715000745, 1.3123310935054835, 1.1942724622771284, 0.8886827544419048, 0.8177640547589886, 0.7536083970717341, 0.7110008030535444, 0.6803693342060855, 0.6515674848897252, 0.6158300530499534, 0.604130498115271, 0.5550396298184418, 0.5723827011108776, 0.55408481169276, 0.5338145829525606, 0.5344974107950781, 0.5097739569633203, 0.5121717466032343, 0.5019093338390777, 0.46995812863516945, 0.4725702434380639, 0.4669530171767643, 0.4434267586177571, 0.4341188934477266, 0.4285486267739126, 0.46051363681427415, 0.4156516991696416, 0.42948099199681, 0.41646899926727, 0.39566794636148456, 0.4171671309349575], "accuracy": [0.31303659081459045, 0.4360058009624481, 0.5350680351257324, 0.5674283504486084, 0.6757363677024841, 0.6864351034164429, 0.7084929347038269, 0.7360982894897461, 0.7395324110984802, 0.7514199018478394, 0.7642319202423096, 0.7648923397064209, 0.7938185334205627, 0.7791573405265808, 0.7887993454933167, 0.7981772422790527, 0.8012151718139648, 0.8090080618858337, 0.8063663840293884, 0.809140145778656, 0.830669641494751, 0.8208954930305481, 0.8251221776008606, 0.8363492488861084, 0.8387266993522644, 0.8426892161369324, 0.829216718673706, 0.8425571322441101, 0.8374059200286865, 0.8450667262077332, 0.8541803956031799, 0.8407079577445984], "val_loss": [1.308225359235491, 1.1363948753901891, 1.30403470993042, 0.7043503863470895, 0.602642127445766, 0.6142148290361676, 0.5457696914672852, 0.5442071642194476, 0.5259751422064645, 0.470839262008667, 0.46322723797389437, 0.46709528991154264, 0.4814130408423288, 0.4415361966405596, 0.446926942893437, 0.44616563831056866, 0.43328401872089933, 0.4222264119556972, 0.40006566047668457, 0.3935126321656363, 0.3995733686855861, 0.4014738712991987, 0.37890165192740305, 0.3834182024002075, 0.3719839198248727, 0.3917715208871024, 0.3648637958935329, 0.42626144204820904, 0.42659640312194824, 0.3677332656724112, 0.37089877469199045, 0.36993086338043213], "val_accuracy": [0.49933332204818726, 0.4830000102519989, 0.3946666717529297, 0.6819999814033508, 0.734333336353302, 0.7283333539962769, 0.7609999775886536, 0.7326666712760925, 0.7689999938011169, 0.7976666688919067, 0.7919999957084656, 0.8056666851043701, 0.7683333158493042, 0.8133333325386047, 0.79666668176651, 0.8016666769981384, 0.8206666707992554, 0.8240000009536743, 0.828000009059906, 0.8396666646003723, 0.831333339214325, 0.8240000009536743, 0.8399999737739563, 0.8413333296775818, 0.8410000205039978, 0.8256666660308838, 0.8483333587646484, 0.8136666417121887, 0.812666654586792, 0.8456666469573975, 0.8433333039283752, 0.8429999947547913]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [2, 9, 5, 6, 0, 3, 8, 2, 1, 8, 2, 8, 4, 8, 0, 2], [2, 1, 0, 2, 0, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 90, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.8157142996788025, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.square(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.075397765096373, 1.7988266715000745, 1.3123310935054835, 1.1942724622771284, 0.8886827544419048, 0.8177640547589886, 0.7536083970717341, 0.7110008030535444, 0.6803693342060855, 0.6515674848897252, 0.6158300530499534, 0.604130498115271, 0.5550396298184418, 0.5723827011108776, 0.55408481169276, 0.5338145829525606, 0.5344974107950781, 0.5097739569633203, 0.5121717466032343, 0.5019093338390777, 0.46995812863516945, 0.4725702434380639, 0.4669530171767643, 0.4434267586177571, 0.4341188934477266, 0.4285486267739126, 0.46051363681427415, 0.4156516991696416, 0.42948099199681, 0.41646899926727, 0.39566794636148456, 0.4171671309349575], "accuracy": [0.31303659081459045, 0.4360058009624481, 0.5350680351257324, 0.5674283504486084, 0.6757363677024841, 0.6864351034164429, 0.7084929347038269, 0.7360982894897461, 0.7395324110984802, 0.7514199018478394, 0.7642319202423096, 0.7648923397064209, 0.7938185334205627, 0.7791573405265808, 0.7887993454933167, 0.7981772422790527, 0.8012151718139648, 0.8090080618858337, 0.8063663840293884, 0.809140145778656, 0.830669641494751, 0.8208954930305481, 0.8251221776008606, 0.8363492488861084, 0.8387266993522644, 0.8426892161369324, 0.829216718673706, 0.8425571322441101, 0.8374059200286865, 0.8450667262077332, 0.8541803956031799, 0.8407079577445984], "val_loss": [1.308225359235491, 1.1363948753901891, 1.30403470993042, 0.7043503863470895, 0.602642127445766, 0.6142148290361676, 0.5457696914672852, 0.5442071642194476, 0.5259751422064645, 0.470839262008667, 0.46322723797389437, 0.46709528991154264, 0.4814130408423288, 0.4415361966405596, 0.446926942893437, 0.44616563831056866, 0.43328401872089933, 0.4222264119556972, 0.40006566047668457, 0.3935126321656363, 0.3995733686855861, 0.4014738712991987, 0.37890165192740305, 0.3834182024002075, 0.3719839198248727, 0.3917715208871024, 0.3648637958935329, 0.42626144204820904, 0.42659640312194824, 0.3677332656724112, 0.37089877469199045, 0.36993086338043213], "val_accuracy": [0.49933332204818726, 0.4830000102519989, 0.3946666717529297, 0.6819999814033508, 0.734333336353302, 0.7283333539962769, 0.7609999775886536, 0.7326666712760925, 0.7689999938011169, 0.7976666688919067, 0.7919999957084656, 0.8056666851043701, 0.7683333158493042, 0.8133333325386047, 0.79666668176651, 0.8016666769981384, 0.8206666707992554, 0.8240000009536743, 0.828000009059906, 0.8396666646003723, 0.831333339214325, 0.8240000009536743, 0.8399999737739563, 0.8413333296775818, 0.8410000205039978, 0.8256666660308838, 0.8483333587646484, 0.8136666417121887, 0.812666654586792, 0.8456666469573975, 0.8433333039283752, 0.8429999947547913]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1], [2, 9, 6, 6, 0, 3, 8, 2, 9, 6, 1, 8, 8, 6, 9, 0], [2, 1, 0, 0, 2, 0, 2, 1, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 80], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.8157142996788025, "mapping_values": [1, 15, 15, 10, 5, 4, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 5, 2, 3, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))))), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.075397765096373, 1.7988266715000745, 1.3123310935054835, 1.1942724622771284, 0.8886827544419048, 0.8177640547589886, 0.7536083970717341, 0.7110008030535444, 0.6803693342060855, 0.6515674848897252, 0.6158300530499534, 0.604130498115271, 0.5550396298184418, 0.5723827011108776, 0.55408481169276, 0.5338145829525606, 0.5344974107950781, 0.5097739569633203, 0.5121717466032343, 0.5019093338390777, 0.46995812863516945, 0.4725702434380639, 0.4669530171767643, 0.4434267586177571, 0.4341188934477266, 0.4285486267739126, 0.46051363681427415, 0.4156516991696416, 0.42948099199681, 0.41646899926727, 0.39566794636148456, 0.4171671309349575], "accuracy": [0.31303659081459045, 0.4360058009624481, 0.5350680351257324, 0.5674283504486084, 0.6757363677024841, 0.6864351034164429, 0.7084929347038269, 0.7360982894897461, 0.7395324110984802, 0.7514199018478394, 0.7642319202423096, 0.7648923397064209, 0.7938185334205627, 0.7791573405265808, 0.7887993454933167, 0.7981772422790527, 0.8012151718139648, 0.8090080618858337, 0.8063663840293884, 0.809140145778656, 0.830669641494751, 0.8208954930305481, 0.8251221776008606, 0.8363492488861084, 0.8387266993522644, 0.8426892161369324, 0.829216718673706, 0.8425571322441101, 0.8374059200286865, 0.8450667262077332, 0.8541803956031799, 0.8407079577445984], "val_loss": [1.308225359235491, 1.1363948753901891, 1.30403470993042, 0.7043503863470895, 0.602642127445766, 0.6142148290361676, 0.5457696914672852, 0.5442071642194476, 0.5259751422064645, 0.470839262008667, 0.46322723797389437, 0.46709528991154264, 0.4814130408423288, 0.4415361966405596, 0.446926942893437, 0.44616563831056866, 0.43328401872089933, 0.4222264119556972, 0.40006566047668457, 0.3935126321656363, 0.3995733686855861, 0.4014738712991987, 0.37890165192740305, 0.3834182024002075, 0.3719839198248727, 0.3917715208871024, 0.3648637958935329, 0.42626144204820904, 0.42659640312194824, 0.3677332656724112, 0.37089877469199045, 0.36993086338043213], "val_accuracy": [0.49933332204818726, 0.4830000102519989, 0.3946666717529297, 0.6819999814033508, 0.734333336353302, 0.7283333539962769, 0.7609999775886536, 0.7326666712760925, 0.7689999938011169, 0.7976666688919067, 0.7919999957084656, 0.8056666851043701, 0.7683333158493042, 0.8133333325386047, 0.79666668176651, 0.8016666769981384, 0.8206666707992554, 0.8240000009536743, 0.828000009059906, 0.8396666646003723, 0.831333339214325, 0.8240000009536743, 0.8399999737739563, 0.8413333296775818, 0.8410000205039978, 0.8256666660308838, 0.8483333587646484, 0.8136666417121887, 0.812666654586792, 0.8456666469573975, 0.8433333039283752, 0.8429999947547913]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0], [2, 0, 6, 6, 0, 3, 3, 2, 1, 6, 1, 8, 4, 8, 9, 8, 9], [2, 2, 0, 1, 2, 2, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 0, 0, 1], [0, 0, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.8157142996788025, "mapping_values": [1, 26, 26, 17, 9, 4, 1, 1, 0, 1, 0, 6, 4, 3, 1, 0, 5, 2, 3, 1], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), alpha)))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))), tf.math.pow(grad, tf.math.add(alpha, grad)))))), tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.sqrt(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.075397765096373, 1.7988266715000745, 1.3123310935054835, 1.1942724622771284, 0.8886827544419048, 0.8177640547589886, 0.7536083970717341, 0.7110008030535444, 0.6803693342060855, 0.6515674848897252, 0.6158300530499534, 0.604130498115271, 0.5550396298184418, 0.5723827011108776, 0.55408481169276, 0.5338145829525606, 0.5344974107950781, 0.5097739569633203, 0.5121717466032343, 0.5019093338390777, 0.46995812863516945, 0.4725702434380639, 0.4669530171767643, 0.4434267586177571, 0.4341188934477266, 0.4285486267739126, 0.46051363681427415, 0.4156516991696416, 0.42948099199681, 0.41646899926727, 0.39566794636148456, 0.4171671309349575], "accuracy": [0.31303659081459045, 0.4360058009624481, 0.5350680351257324, 0.5674283504486084, 0.6757363677024841, 0.6864351034164429, 0.7084929347038269, 0.7360982894897461, 0.7395324110984802, 0.7514199018478394, 0.7642319202423096, 0.7648923397064209, 0.7938185334205627, 0.7791573405265808, 0.7887993454933167, 0.7981772422790527, 0.8012151718139648, 0.8090080618858337, 0.8063663840293884, 0.809140145778656, 0.830669641494751, 0.8208954930305481, 0.8251221776008606, 0.8363492488861084, 0.8387266993522644, 0.8426892161369324, 0.829216718673706, 0.8425571322441101, 0.8374059200286865, 0.8450667262077332, 0.8541803956031799, 0.8407079577445984], "val_loss": [1.308225359235491, 1.1363948753901891, 1.30403470993042, 0.7043503863470895, 0.602642127445766, 0.6142148290361676, 0.5457696914672852, 0.5442071642194476, 0.5259751422064645, 0.470839262008667, 0.46322723797389437, 0.46709528991154264, 0.4814130408423288, 0.4415361966405596, 0.446926942893437, 0.44616563831056866, 0.43328401872089933, 0.4222264119556972, 0.40006566047668457, 0.3935126321656363, 0.3995733686855861, 0.4014738712991987, 0.37890165192740305, 0.3834182024002075, 0.3719839198248727, 0.3917715208871024, 0.3648637958935329, 0.42626144204820904, 0.42659640312194824, 0.3677332656724112, 0.37089877469199045, 0.36993086338043213], "val_accuracy": [0.49933332204818726, 0.4830000102519989, 0.3946666717529297, 0.6819999814033508, 0.734333336353302, 0.7283333539962769, 0.7609999775886536, 0.7326666712760925, 0.7689999938011169, 0.7976666688919067, 0.7919999957084656, 0.8056666851043701, 0.7683333158493042, 0.8133333325386047, 0.79666668176651, 0.8016666769981384, 0.8206666707992554, 0.8240000009536743, 0.828000009059906, 0.8396666646003723, 0.831333339214325, 0.8240000009536743, 0.8399999737739563, 0.8413333296775818, 0.8410000205039978, 0.8256666660308838, 0.8483333587646484, 0.8136666417121887, 0.812666654586792, 0.8456666469573975, 0.8433333039283752, 0.8429999947547913]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [57, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [60, 25, 50, 71, 34]], "fitness": -0.7845714092254639, "mapping_values": [1, 11, 11, 7, 4, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, grad)), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.1800542502686047, 1.5049376663609328, 1.1801002331145956, 0.9956605055974286, 0.9275075475443089, 0.8314886033306693, 0.7913022727431591, 0.7492943651498883, 0.7506295335039314, 0.7278347553641269, 0.7086324693898105, 0.6896094413418354, 0.6903572216750041, 0.6695673525640442, 0.6488220095870643, 0.65572673191783, 0.6336205961949569, 0.6235445531100141, 0.6232829085115618, 0.6073515223411285, 0.6039998090230967, 0.5904609803762324], "accuracy": [0.2817329168319702, 0.5032360553741455, 0.5885615944862366, 0.6497160196304321, 0.6605468392372131, 0.696209192276001, 0.703209638595581, 0.7301545143127441, 0.718399167060852, 0.7290979027748108, 0.7378153204917908, 0.7498348951339722, 0.7452120184898376, 0.7483819723129272, 0.7547219395637512, 0.7559106945991516, 0.7626469135284424, 0.7631752490997314, 0.7689869403839111, 0.7751948237419128, 0.7670056819915771, 0.7827235460281372], "val_loss": [1.5228241852351598, 1.1145633629390173, 0.7312800373349871, 0.6731175354548863, 0.6447362729481289, 0.625961354800633, 0.5520732743399483, 0.5371441159929548, 0.5865620034081596, 0.5202930314200265, 0.5159410067967006, 0.5192130633762905, 0.5139406238283429, 0.4853624105453491, 0.5134113345827375, 0.4945434842790876, 0.471015317099435, 0.4719811167035784, 0.4780205488204956, 0.48765030929020475, 0.4553476742335728, 0.4608860356467111], "val_accuracy": [0.5666666626930237, 0.515333354473114, 0.7080000042915344, 0.6863333582878113, 0.718666672706604, 0.7089999914169312, 0.7546666860580444, 0.7643333077430725, 0.7289999723434448, 0.7773333191871643, 0.7756666541099548, 0.7606666684150696, 0.7739999890327454, 0.7886666655540466, 0.7720000147819519, 0.7746666669845581, 0.8100000023841858, 0.8066666722297668, 0.7950000166893005, 0.7713333368301392, 0.8096666932106018, 0.8026666641235352]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 5, 4, 2, 5, 6, 1, 8], [2, 2, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [75, 25, 50, 71, 34]], "fitness": -0.7474285960197449, "mapping_values": [1, 14, 14, 9, 5, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.pow(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.square(grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.2969139332091726, 2.285408528914557, 2.2743435044566387, 2.2611504623587924, 2.2488484877353456, 2.233117424690681, 2.2166786957190197, 2.197897827337132, 2.174328224549692, 2.1509890615538585, 2.120816081443467, 2.091160334301285, 2.0501960352380055, 2.0044203498627704, 1.9565360834884795, 1.9075826571491872, 1.8531757428929192, 1.7904649064871834, 1.7286211427932465, 1.6669376908418068, 1.6129953089548912, 1.5516921164667947, 1.5096246152899726, 1.4590707980977105, 1.4131294898920055, 1.376433219529886, 1.3391508536331878, 1.303948912260287, 1.2782162813037503, 1.2494461039164126, 1.2287496536981948, 1.1979864885494962, 1.1754922363752103, 1.166791748959611, 1.1438969025412224, 1.1186186245104672, 1.1166064291109954, 1.0893324607745327, 1.0681734217030419, 1.0660200600516385, 1.0407250358318025, 1.0361040724172506, 1.022616685601966, 1.01510962114484, 1.0066297072555568, 0.9984192476532698, 0.9912690098385502, 0.9566176984099475, 0.9694825992639653, 0.9631193403271227, 0.9528983036020979, 0.947924598577142, 0.9336627653057329, 0.9328898212236105, 0.9232010534489553, 0.9089883793897758, 0.913088123764675, 0.8982522006378734, 0.8955976738827088, 0.8915062836841144, 0.8883647335880956, 0.884657776280165, 0.877441206156003, 0.8778464159221068, 0.8727131300535593, 0.8667582345833915, 0.853742516665899, 0.8529806189045158, 0.8589221807424309, 0.8473410031200637, 0.826856816748681, 0.8483443037944935, 0.8289379118975553, 0.8336279894524341, 0.8320807649112727, 0.8217630252043301, 0.8229546608343541, 0.8241570760875945, 0.8177959955111785, 0.8069129260681277, 0.8067263908012117, 0.8051405612346345, 0.8106333095210811, 0.7989150195341572, 0.7965139214310113, 0.7959224415760723, 0.7949461183606547, 0.7864838315117644, 0.7861217058975588], "accuracy": [0.10381719470024109, 0.12759213149547577, 0.16536785662174225, 0.19521859288215637, 0.21991810202598572, 0.2595430016517639, 0.28318583965301514, 0.30801743268966675, 0.33060362935066223, 0.34367984533309937, 0.3707568347454071, 0.3723418414592743, 0.3959846794605255, 0.41289129853248596, 0.4235900044441223, 0.43204331398010254, 0.44564786553382874, 0.4589882493019104, 0.47047945857048035, 0.48566898703575134, 0.4900277256965637, 0.5116893649101257, 0.5138026475906372, 0.5227842926979065, 0.5283318161964417, 0.5414080023765564, 0.5484083890914917, 0.5580504536628723, 0.5684850215911865, 0.5753533244132996, 0.5791836977005005, 0.5848633050918579, 0.591731607913971, 0.5972790718078613, 0.6015057563781738, 0.6089023947715759, 0.6102232336997986, 0.6180161237716675, 0.6247523427009583, 0.6243560910224915, 0.6362435817718506, 0.6373002529144287, 0.6380926966667175, 0.6446968913078308, 0.6497160196304321, 0.6473385095596313, 0.6538106203079224, 0.6629242897033691, 0.6590939164161682, 0.6609430909156799, 0.6610751748085022, 0.6643772125244141, 0.6760005354881287, 0.6729626059532166, 0.6717738509178162, 0.6808875799179077, 0.6740192770957947, 0.6774534583091736, 0.6831330060958862, 0.6791704893112183, 0.6828688383102417, 0.6826046705245972, 0.6886804699897766, 0.6886804699897766, 0.6894729733467102, 0.6901333928108215, 0.6951525807380676, 0.6999075412750244, 0.6960771083831787, 0.696209192276001, 0.7088891863822937, 0.6977941989898682, 0.7042662501335144, 0.7041342258453369, 0.7058512568473816, 0.6995112895965576, 0.7012283802032471, 0.7119271159172058, 0.7058512568473816, 0.7120591998100281, 0.7083608508110046, 0.7119271159172058, 0.7079645991325378, 0.7148329019546509, 0.7086250185966492, 0.7112666964530945, 0.7117950320243835, 0.7219653725624084, 0.7168141603469849], "val_loss": [1.9593123027256556, 1.9481497492109026, 1.936615330832345, 1.924363340650286, 1.9111168725149972, 1.8961695262363978, 1.879131589617048, 1.8598459788731165, 1.837014607020787, 1.8109358378819056, 1.7805871282305037, 1.746267591203962, 1.7070508343832833, 1.6623143809182304, 1.6128594194139754, 1.5592796461922782, 1.5021581649780273, 1.441709314073835, 1.379995243889945, 1.3183275972093855, 1.259018795830863, 1.2015158448900496, 1.1496571472712926, 1.1027865750449044, 1.059577805655343, 1.0207131930759974, 0.9857890605926514, 0.954312767301287, 0.9270071302141462, 0.9015099661690849, 0.8785133361816406, 0.8570558513913836, 0.8378583703722272, 0.8210868154253278, 0.8052760192326137, 0.7903864894594465, 0.7769378423690796, 0.764901842389788, 0.7530090808868408, 0.7421070677893502, 0.7309820652008057, 0.7227264131818499, 0.714885984148298, 0.7069177627563477, 0.6989724295479911, 0.6919586828776768, 0.6861130510057721, 0.6783196244921003, 0.6734645026070731, 0.6675983497074672, 0.6625680753162929, 0.6576542173113141, 0.6524689367839268, 0.6479964256286621, 0.6439098460333688, 0.6391242572239467, 0.6348566668374198, 0.6304544040134975, 0.6262938465390887, 0.622286149433681, 0.6201432602746146, 0.615970322063991, 0.6118163040706089, 0.6082520484924316, 0.6057779278073993, 0.6030867780957904, 0.6002984728131976, 0.5976945161819458, 0.5952949183327811, 0.5930838925497872, 0.5901212181363787, 0.5876581498554775, 0.5848329067230225, 0.5825403417859759, 0.5804555586406163, 0.5785224437713623, 0.5768307277134487, 0.5753333738871983, 0.572394711630685, 0.5703606946127755, 0.5687193359647479, 0.5662572383880615, 0.5650690112795148, 0.5627533027103969, 0.5618051290512085, 0.5602431127003261, 0.558824862752642, 0.556475043296814, 0.5552281992776054], "val_accuracy": [0.13066667318344116, 0.23899999260902405, 0.3216666579246521, 0.3723333477973938, 0.398333340883255, 0.421999990940094, 0.437333345413208, 0.46033334732055664, 0.4779999852180481, 0.49300000071525574, 0.5113333463668823, 0.5266666412353516, 0.5373333096504211, 0.5479999780654907, 0.5536666512489319, 0.5606666803359985, 0.5746666789054871, 0.5753333568572998, 0.5786666870117188, 0.5910000205039978, 0.5983333587646484, 0.6100000143051147, 0.6206666827201843, 0.6320000290870667, 0.6466666460037231, 0.659333348274231, 0.6660000085830688, 0.6733333468437195, 0.6806666851043701, 0.6866666674613953, 0.6840000152587891, 0.6930000185966492, 0.6940000057220459, 0.6959999799728394, 0.7013333439826965, 0.703000009059906, 0.7016666531562805, 0.7053333520889282, 0.7096666693687439, 0.7089999914169312, 0.7146666646003723, 0.7163333296775818, 0.7143333554267883, 0.7213333249092102, 0.721666693687439, 0.7210000157356262, 0.7203333377838135, 0.7263333201408386, 0.7213333249092102, 0.7266666889190674, 0.7296666502952576, 0.7326666712760925, 0.734000027179718, 0.7363333106040955, 0.7369999885559082, 0.7360000014305115, 0.7386666536331177, 0.7406666874885559, 0.7429999709129333, 0.7426666617393494, 0.7450000047683716, 0.7473333477973938, 0.749666690826416, 0.749666690826416, 0.7526666522026062, 0.7519999742507935, 0.7546666860580444, 0.753333330154419, 0.7553333044052124, 0.7583333253860474, 0.7570000290870667, 0.7586666941642761, 0.7593333125114441, 0.7613333463668823, 0.7616666555404663, 0.7630000114440918, 0.7613333463668823, 0.762666642665863, 0.7636666893959045, 0.7630000114440918, 0.7643333077430725, 0.765666663646698, 0.7643333077430725, 0.7693333625793457, 0.7663333415985107, 0.7689999938011169, 0.7689999938011169, 0.7689999938011169, 0.7676666378974915]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [2, 4, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 2, 1, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 9, 2, 9, 2, 9], [2, 0, 1, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 18, 10, 8, 2, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 3, 2, 1, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.pow(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.square(grad))))), tf.math.divide_no_nan(tf.math.add(alpha, alpha), grad))), grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), beta)", "other_info": {"loss": [2.3028058024791758, 2.3030605081553945, 2.303050731387609, 2.3030946247802198, 2.3029327016575243, 2.3030674378507565, 2.3028438219446565], "accuracy": [0.09457138925790787, 0.09774138033390045, 0.0940430611371994, 0.09285431355237961, 0.09338264167308807, 0.09589222073554993, 0.09879804402589798], "val_loss": [1.9736146926879883, 1.973616600036621, 1.973639828818185, 1.9735749108450753, 1.9737065179007394, 1.973691667829241, 1.9738316535949707], "val_accuracy": [0.10233332961797714, 0.10400000214576721, 0.10233332961797714, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09733333438634872]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 0, 0, 5, 4, 2, 5, 6, 1, 8], [2, 1, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 0, 1, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 2, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [97, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 10, 5, 3, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 5, 2, 3, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.add(beta, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.3024313048978824, 2.3025827452554175, 2.302582569818896, 2.3025825383278673, 2.3025825383278673, 2.3025825383278673], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642144884382, 1.973642144884382, 1.973642144884382, 1.973642144884382], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [2, 9, 2, 6, 9, 3, 8, 2, 1, 6, 1, 8], [1, 1, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 85, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 0, 0, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [8, 3, 2, 9, 2, 9], [2, 1, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], [2, 9, 6, 5, 0, 3, 4, 2, 5, 5, 1, 8], [2, 3, 1, 0, 2, 1, 2, 2, 0, 0, 0, 3, 2, 2], [77, 55, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 11, 6, 2, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), grad), tf.math.add(alpha, tf.math.subtract(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))), grad))))), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.3024313048978824, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 2, 1, 6, 1, 8], [2, 0, 0, 0, 0, 2, 1, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 6, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 0, 0, 0, 1], [0, 0, 1, 0], [3, 1, 0], [5, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [1, 1, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 8, 5, 2, 1, 0, 0, 0, 0, 5, 2, 3, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(grad)), grad))), grad), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.math.multiply(alpha, beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1], [2, 1, 3, 6, 0, 3, 0, 2, 5, 6, 1, 8, 9], [2, 3, 0, 0, 2, 1, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 49, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 1, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [97, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 21, 13, 8, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(grad, grad)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))))), alpha)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), grad), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07792893797159195, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 8, 2, 6, 1, 8, 4, 8, 9, 8], [2, 1, 0, 0, 2, 1, 2, 2, 0, 0, 0, 3, 2, 2], [28, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 4, 0], [5, 3], [], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [83, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 7, 4, 3, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 9, 5, 4, 3], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(alpha, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [15427723.300144363, 66095.62193423095, 110388.6078601737, 132719012.53117158, 7628181538542519.0, 2.302637326797679], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09959053993225098, 0.09998679161071777], "val_loss": [40417.091517857145, 78015.63169642857, 115563.89285714286, 4.912376575741133e+16, 1.9738024302891322, 1.9738024302891322], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.09966666996479034, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 0, 2, 5, 6, 1, 8], [3, 2, 0, 0, 1, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 5, 68, 73, 46], [0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [5, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 5, 1, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [4, 3, 2, 9, 2, 9], [2, 3, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 0, 1, 0, 0, 0, 0, 5, 2, 3, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(grad, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, grad)), alpha)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(beta, sigma), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [2, 9, 6, 6, 0, 5, 4, 2, 5, 6, 1, 8], [2, 2, 0, 1, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [4, 9, 6, 0, 0, 5, 4, 2, 5, 6, 1, 8], [2, 1, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 73, 68, 73, 46], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [97, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07634394615888596, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [2, 9, 6, 6, 0, 3, 0, 2, 5, 6, 1, 8], [2, 3, 0, 0, 2, 1, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [5, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07792893797159195, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 6, 5, 4, 2, 5, 6, 1, 8], [1, 2, 2, 1, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [19, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [1, 1, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 7, 5, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 9, 5, 4, 3], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)))))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.subtract(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [125364200321.36699, 1225546051349.742, 3577979296302.0537, 8588735185592.823, 15714363820163.195, 20956018880909.645], "accuracy": [0.09906221181154251, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [522443723337.1429, 1987051894491.4285, 5299119175387.429, 10833609509156.572, 16676746840356.572, 20032240372004.57], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [1, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [5, 3, 2, 9, 2, 9], [2, 0, 0, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.07457143068313599, "mapping_values": [1, 16, 16, 10, 6, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), grad))))), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.301686980453197, 2.3015154525352237, 2.3020873911203474, 2.30102065598031, 2.3017810116889943, 2.300458201327895, 2.3010886795626906, 2.3003515560770897, 2.299848596008305, 2.3002182197860517, 2.300159193001655, 2.300629709375029, 2.2995660866823147, 2.3004301621252283, 2.2995314360011316, 2.3002835404304482, 2.300897864554741, 2.3002682433168036, 2.2995388453678447, 2.2995534354764016, 2.299756654328233, 2.299617994226847, 2.3007451754204586, 2.299548999776048, 2.2999372208327853, 2.300101698539229, 2.300216407540326, 2.2995950294255803, 2.299918482411004, 2.299810697531357], "accuracy": [0.09153348207473755, 0.0886276587843895, 0.09259014576673508, 0.0956280529499054, 0.08545766770839691, 0.09734513610601425, 0.09760929644107819, 0.09391097724437714, 0.09232597798109055, 0.09140139818191528, 0.09774138033390045, 0.09298639744520187, 0.09694888442754745, 0.0952318087220192, 0.0952318087220192, 0.0952318087220192, 0.09734513610601425, 0.09774138033390045, 0.09840179979801178, 0.09694888442754745, 0.09179764986038208, 0.09536388516426086, 0.09879804402589798, 0.10276053100824356, 0.09642054885625839, 0.0936468094587326, 0.09615638852119446, 0.09628847241401672, 0.1010434553027153, 0.09879804402589798], "val_loss": [1.9702839170183455, 1.9699861662728446, 1.9696989740644182, 1.9694833074297224, 1.9692848750523158, 1.9691686630249023, 1.9690724781581335, 1.9690329687935966, 1.9690042223249162, 1.9689557892935616, 1.9690194129943848, 1.9689906665257044, 1.9690207072666712, 1.9691059248788017, 1.9691974094935827, 1.9692366463797433, 1.969212600163051, 1.9692096710205078, 1.9691856248038155, 1.9691756112234933, 1.9691386222839355, 1.9691439356122697, 1.9691438674926758, 1.9691996574401855, 1.9692367826189314, 1.9692883491516113, 1.9693771771022253, 1.969456672668457, 1.9695467267717635, 1.969641889844622], "val_accuracy": [0.04233333468437195, 0.04699999839067459, 0.04699999839067459, 0.04933333396911621, 0.05166666582226753, 0.05366666615009308, 0.0560000017285347, 0.059333331882953644, 0.06133333221077919, 0.06066666543483734, 0.06366666406393051, 0.06433333456516266, 0.06666667014360428, 0.06599999964237213, 0.0689999982714653, 0.0689999982714653, 0.070333331823349, 0.07066666334867477, 0.0716666653752327, 0.07433333247900009, 0.07533333450555801, 0.07533333450555801, 0.07500000298023224, 0.07500000298023224, 0.07633333653211594, 0.07599999755620956, 0.07366666942834854, 0.07400000095367432, 0.07400000095367432, 0.07466666400432587]}}]