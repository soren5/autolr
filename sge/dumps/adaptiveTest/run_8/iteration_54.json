[{"genotype": [[0], [1, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 3, 2, 3], [48, 57], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1], [7, 2, 6, 6, 0, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.8022857308387756, "mapping_values": [1, 3, 3, 1, 2, 1, 18, 18, 9, 9, 1, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, alpha), tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), grad))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, sigma)))", "other_info": {"loss": [2.0168588544241963, 1.3570536048011441, 1.001600522202051, 0.8699395540856163, 0.7678877284120276, 0.7647424503686547, 0.7136399072111873, 0.702423299851592, 0.6504137864155052, 0.6395882933587919, 0.6195324174779329, 0.5976734851187939, 0.5976401806554743, 0.5749164044565733, 0.5519886739564814, 0.5605617310739134, 0.5132689736129081, 0.517657898987415, 0.4981425734259717, 0.5090477112072995, 0.48994663418748546, 0.49606096539452027, 0.482111970939184, 0.4489230534711046, 0.4561984429954931, 0.4424597814397695, 0.44212545027995487, 0.4356139169715856, 0.42221019365185714, 0.44055933174345674, 0.4184300397932254, 0.4056030168052772, 0.4118502989594396, 0.39879695767062673, 0.38897786364736747, 0.38637625476341236, 0.396107177070859, 0.38169202609242325, 0.3815498543319418, 0.3727869727411259, 0.35887210917211465, 0.356587309197916, 0.36339973486205135, 0.34433822465878217, 0.35850222136177295, 0.335907321847929, 0.3293874146498709, 0.34769212990593773], "accuracy": [0.34143441915512085, 0.5214634537696838, 0.6400739550590515, 0.6686038970947266, 0.7153612375259399, 0.7161537408828735, 0.7271166443824768, 0.7358341217041016, 0.748249888420105, 0.7567031979560852, 0.7633073329925537, 0.767401933670044, 0.7766477465629578, 0.7803460359573364, 0.7881389260292053, 0.7845727205276489, 0.8059701323509216, 0.8058380484580994, 0.8128384351730347, 0.8100647330284119, 0.816008448600769, 0.8178576231002808, 0.8186501264572144, 0.8285563588142395, 0.8296129703521729, 0.8363492488861084, 0.8342359066009521, 0.8348963260650635, 0.8416325449943542, 0.8335754871368408, 0.8459912538528442, 0.8532558679580688, 0.8469158411026001, 0.8506141901016235, 0.8570862412452698, 0.8594637513160706, 0.8498216867446899, 0.8569541573524475, 0.8557654023170471, 0.8628978729248047, 0.868049144744873, 0.8691058158874512, 0.8658037185668945, 0.8730682730674744, 0.8656716346740723, 0.8765024542808533, 0.8774270415306091, 0.8702945709228516], "val_loss": [1.3206315721784319, 0.8699959516525269, 0.7636553730283465, 0.6597357647759574, 0.6372403417314801, 0.5606376273291451, 0.587084174156189, 0.5125319617135184, 0.5467894758496966, 0.5032632010323661, 0.480761000088283, 0.4801616839000157, 0.46981961386544363, 0.48420958859579905, 0.5030098812920707, 0.4319739852632795, 0.46628970759255545, 0.4181597914014544, 0.41653919219970703, 0.40543127059936523, 0.43183200699942453, 0.39420446327754427, 0.3842559797423227, 0.3998655506542751, 0.3773313845906939, 0.3855310082435608, 0.3894832559994289, 0.37382499660764423, 0.3643126402582441, 0.3664348466055734, 0.35923822437013897, 0.4252110889979771, 0.3469821129526411, 0.3491965276854379, 0.35185993569237844, 0.4473569989204407, 0.34953669139317106, 0.35754354510988506, 0.34345539127077374, 0.34421453305653166, 0.3472073333603995, 0.3461810691016061, 0.3351181745529175, 0.33929714134761263, 0.3396897145680019, 0.33491688115256174, 0.3298309700829642, 0.34731525182724], "val_accuracy": [0.5016666650772095, 0.6443333625793457, 0.5876666903495789, 0.7369999885559082, 0.7279999852180481, 0.7419999837875366, 0.7269999980926514, 0.7586666941642761, 0.7490000128746033, 0.7793333530426025, 0.7733333110809326, 0.7953333258628845, 0.7893333435058594, 0.7910000085830688, 0.7793333530426025, 0.8203333616256714, 0.7853333353996277, 0.8246666789054871, 0.8226666450500488, 0.8306666612625122, 0.8136666417121887, 0.8330000042915344, 0.8339999914169312, 0.8293333053588867, 0.8393333554267883, 0.8399999737739563, 0.8236666917800903, 0.8446666598320007, 0.8489999771118164, 0.8416666388511658, 0.846666693687439, 0.8163333535194397, 0.8560000061988831, 0.8460000157356262, 0.8523333072662354, 0.8040000200271606, 0.8579999804496765, 0.8460000157356262, 0.8586666584014893, 0.8539999723434448, 0.846666693687439, 0.8516666889190674, 0.8610000014305115, 0.8576666712760925, 0.8583333492279053, 0.8583333492279053, 0.8586666584014893, 0.8519999980926514]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9, 0], [1, 0, 0, 3, 1, 0], [48, 57, 47], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 6, 6, 0, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.7911428809165955, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.0878078808259843, 1.3626737333228953, 1.0859952023268344, 0.9601193457908792, 0.8405716203191513, 0.8247897054588224, 0.7548704460989514, 0.7404733332251168, 0.7120827993602171, 0.6945560955100638, 0.66644464283414, 0.6734821745244315, 0.6606155424747233, 0.6401112299742653, 0.6397405289041682, 0.6148132966604246, 0.6101943150786613, 0.6174630403455694, 0.5948472984195181, 0.5843221877528503, 0.5590542828276204, 0.5500170148957313, 0.5773713768370919], "accuracy": [0.310130774974823, 0.5140668153762817, 0.6181482076644897, 0.6441685557365417, 0.6882842183113098, 0.6959450244903564, 0.7197200059890747, 0.7186633348464966, 0.7326641082763672, 0.7401928305625916, 0.755118191242218, 0.7506273984909058, 0.7485140562057495, 0.7600052952766418, 0.7625148296356201, 0.7730814814567566, 0.7717606425285339, 0.7695152759552002, 0.7771760821342468, 0.7791573405265808, 0.7885351777076721, 0.7944789528846741, 0.7832518815994263], "val_loss": [1.2093095779418945, 0.9589102949414935, 0.7232157502855573, 0.630107947758266, 0.6789511101586478, 0.5889641216823033, 0.5396095514297485, 0.5376448290688651, 0.5396685940878732, 0.5286787407738822, 0.5180582659585136, 0.5102037872586932, 0.5077840770993914, 0.5393333775656564, 0.482443060193743, 0.4652777910232544, 0.5064080102103097, 0.4484473637172154, 0.46890740735190256, 0.4437511989048549, 0.4323062981878008, 0.47713472161974224, 0.43807004179273334], "val_accuracy": [0.5950000286102295, 0.5763333439826965, 0.6426666378974915, 0.7260000109672546, 0.6980000138282776, 0.75, 0.7696666717529297, 0.7620000243186951, 0.7453333139419556, 0.7723333239555359, 0.7743333578109741, 0.7710000276565552, 0.7676666378974915, 0.7506666779518127, 0.7866666913032532, 0.8009999990463257, 0.7733333110809326, 0.8216666579246521, 0.7963333129882812, 0.8096666932106018, 0.8193333148956299, 0.7860000133514404, 0.8143333196640015]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 1, 2, 3], [48, 57], [1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [7, 1, 6, 6, 0, 2, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [83, 38]], "fitness": -0.7911428809165955, "mapping_values": [1, 3, 3, 1, 2, 1, 18, 18, 10, 8, 2, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.subtract(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), grad))), tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, grad))), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.add(beta, grad), beta)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.331213953756086, 2.3551687326697057, 2.298475145648074, 2.19763002998998, 2.2838395882622757, 1.9970154010577208, 1.9041754406803177, 1.3554437652066904, 1.233277218405754, 1.0655361977566375, 0.9675345624111993, 0.9642195556425478, 0.889974257217312, 0.8420753486089387, 0.8359878584614614, 0.7770103841976734, 0.7399022053922755, 0.6560313940489092, 0.6620333287552473, 0.6320549446467978, 0.6168439431890221, 0.6126948284151815, 0.6158869004662105, 0.5607591949402302, 0.532338808264951, 0.5299401063378052, 0.5298474421944869, 0.5077064517954826, 0.4878105588435434], "accuracy": [0.21899352967739105, 0.09774138033390045, 0.11940298229455948, 0.240919291973114, 0.16351869702339172, 0.3365473449230194, 0.3419627547264099, 0.5132743120193481, 0.5539559125900269, 0.6079778075218201, 0.6399418711662292, 0.6489235162734985, 0.669792652130127, 0.6818121671676636, 0.6877558827400208, 0.7106062769889832, 0.7240787148475647, 0.7466648817062378, 0.7494386434555054, 0.7576277852058411, 0.7684586048126221, 0.7729493975639343, 0.7611940503120422, 0.7876105904579163, 0.7956677079200745, 0.8041210174560547, 0.7968564033508301, 0.809140145778656, 0.8132346868515015], "val_loss": [2.252396651676723, 1.9738639422825404, 1.9258687836783273, 1.9773047992161341, 1.5351829528808594, 1.2606046880994524, 1.242286307471139, 0.8686798981257847, 0.7135413544518607, 0.6880195481436593, 0.7295587233134678, 0.6188081332615444, 0.6081522532871791, 0.6502818380083356, 0.5772934130259922, 0.5377668823514666, 0.5243817397526332, 0.5026363985879081, 0.5048418045043945, 0.46059052433286396, 0.5542798723493304, 0.5137229306357247, 0.4284383569444929, 0.4168619768960135, 0.4277186393737793, 0.4408895032746451, 0.41902072940553936, 0.4094354340008327, 0.4077808516366141], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.2150000035762787, 0.20000000298023224, 0.30399999022483826, 0.5733333230018616, 0.4636666774749756, 0.6223333477973938, 0.6813333630561829, 0.7066666483879089, 0.6729999780654907, 0.7210000157356262, 0.7173333168029785, 0.7170000076293945, 0.7556666731834412, 0.7723333239555359, 0.7506666779518127, 0.765333354473114, 0.7923333048820496, 0.79666668176651, 0.749666690826416, 0.7536666393280029, 0.8083333373069763, 0.8270000219345093, 0.8143333196640015, 0.7990000247955322, 0.8176666498184204, 0.8263333439826965, 0.8243333101272583]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [2, 6, 9, 9, 0], [0, 1, 1, 3], [5, 57], [1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [8, 2, 6, 6, 1, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 1, 1, 3, 1, 3, 2, 3, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.3977142870426178, "mapping_values": [1, 5, 5, 3, 2, 2, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.318383150773986, 2.2486745330557105, 2.380483167172423, 2.2418015662469033, 2.2348994550262824, 2.203093175008832, 2.296384144452868, 2.2123308462977582, 2.218456925685773, 2.3202005417402694, 2.307597001215187, 2.3313922473641435, 2.313046215106751], "accuracy": [0.22097477316856384, 0.1958790123462677, 0.12376172095537186, 0.1640470176935196, 0.17593449354171753, 0.21304979920387268, 0.19270901381969452, 0.16972659528255463, 0.22823932766914368, 0.17897239327430725, 0.09100515395402908, 0.13036586344242096, 0.09972262382507324], "val_loss": [2.061449868338449, 2.2954956463405063, 1.9715984208243233, 1.5756073679242815, 1.9697133472987585, 1.7373101370675224, 1.6997747421264648, 1.6526107447487968, 1.9714719227382116, 1.9764722415379115, 1.9665137699672155, 1.9831913539341517, 1.9748787198747908], "val_accuracy": [0.09966666996479034, 0.2953333258628845, 0.10400000214576721, 0.20733332633972168, 0.10966666787862778, 0.3050000071525574, 0.30000001192092896, 0.41499999165534973, 0.09933333098888397, 0.10466666519641876, 0.10199999809265137, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [0, 1, 0, 1, 0, 1, 0], [6, 6, 4, 9], [1, 2, 1, 3], [48, 57], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 6, 1, 0, 1, 0, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 1, 3, 1, 3, 2, 3, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [7, 3], [], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.3977142870426178, "mapping_values": [1, 7, 7, 4, 3, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.318383150773986, 2.2486745330557105, 2.380483167172423, 2.2418015662469033, 2.2348994550262824, 2.203093175008832, 2.296384144452868, 2.2123308462977582, 2.218456925685773, 2.3202005417402694, 2.307597001215187, 2.3313922473641435, 2.313046215106751], "accuracy": [0.22097477316856384, 0.1958790123462677, 0.12376172095537186, 0.1640470176935196, 0.17593449354171753, 0.21304979920387268, 0.19270901381969452, 0.16972659528255463, 0.22823932766914368, 0.17897239327430725, 0.09100515395402908, 0.13036586344242096, 0.09972262382507324], "val_loss": [2.061449868338449, 2.2954956463405063, 1.9715984208243233, 1.5756073679242815, 1.9697133472987585, 1.7373101370675224, 1.6997747421264648, 1.6526107447487968, 1.9714719227382116, 1.9764722415379115, 1.9665137699672155, 1.9831913539341517, 1.9748787198747908], "val_accuracy": [0.09966666996479034, 0.2953333258628845, 0.10400000214576721, 0.20733332633972168, 0.10966666787862778, 0.3050000071525574, 0.30000001192092896, 0.41499999165534973, 0.09933333098888397, 0.10466666519641876, 0.10199999809265137, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 3, 2, 3], [48, 57], [1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1], [2, 2, 6, 6, 0, 2, 3, 3, 0, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 1, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.3977142870426178, "mapping_values": [1, 3, 3, 1, 2, 1, 12, 12, 6, 6, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.negative(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)))), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.318383150773986, 2.2486745330557105, 2.380483167172423, 2.2418015662469033, 2.2348994550262824, 2.203093175008832, 2.296384144452868, 2.2123308462977582, 2.218456925685773, 2.3202005417402694, 2.307597001215187, 2.3313922473641435, 2.313046215106751], "accuracy": [0.22097477316856384, 0.1958790123462677, 0.12376172095537186, 0.1640470176935196, 0.17593449354171753, 0.21304979920387268, 0.19270901381969452, 0.16972659528255463, 0.22823932766914368, 0.17897239327430725, 0.09100515395402908, 0.13036586344242096, 0.09972262382507324], "val_loss": [2.061449868338449, 2.2954956463405063, 1.9715984208243233, 1.5756073679242815, 1.9697133472987585, 1.7373101370675224, 1.6997747421264648, 1.6526107447487968, 1.9714719227382116, 1.9764722415379115, 1.9665137699672155, 1.9831913539341517, 1.9748787198747908], "val_accuracy": [0.09966666996479034, 0.2953333258628845, 0.10400000214576721, 0.20733332633972168, 0.10966666787862778, 0.3050000071525574, 0.30000001192092896, 0.41499999165534973, 0.09933333098888397, 0.10466666519641876, 0.10199999809265137, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 3, 2, 3], [48, 57], [1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 6, 6, 0, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0], [0, 6, 9, 2, 9], [3, 3, 3, 1], [44, 38]], "fitness": -0.3977142870426178, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.318383150773986, 2.2486745330557105, 2.380483167172423, 2.2418015662469033, 2.2348994550262824, 2.203093175008832, 2.296384144452868, 2.2123308462977582, 2.218456925685773, 2.3202005417402694, 2.307597001215187, 2.3313922473641435, 2.313046215106751], "accuracy": [0.22097477316856384, 0.1958790123462677, 0.12376172095537186, 0.1640470176935196, 0.17593449354171753, 0.21304979920387268, 0.19270901381969452, 0.16972659528255463, 0.22823932766914368, 0.17897239327430725, 0.09100515395402908, 0.13036586344242096, 0.09972262382507324], "val_loss": [2.061449868338449, 2.2954956463405063, 1.9715984208243233, 1.5756073679242815, 1.9697133472987585, 1.7373101370675224, 1.6997747421264648, 1.6526107447487968, 1.9714719227382116, 1.9764722415379115, 1.9665137699672155, 1.9831913539341517, 1.9748787198747908], "val_accuracy": [0.09966666996479034, 0.2953333258628845, 0.10400000214576721, 0.20733332633972168, 0.10966666787862778, 0.3050000071525574, 0.30000001192092896, 0.41499999165534973, 0.09933333098888397, 0.10466666519641876, 0.10199999809265137, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [0, 1, 0, 1, 0, 1, 0], [2, 2, 4, 9], [1, 2, 1, 3], [48, 57], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 6, 1, 0, 1, 0, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 1, 3, 1, 3, 2, 3, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [7, 3], [], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [1, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.3531428575515747, "mapping_values": [1, 7, 7, 4, 3, 1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 5, 2, 3, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(sigma, sigma), sigma)", "other_info": {"loss": [2.2946757309000017, 2.3035712485237205, 2.3044413505622723, 2.3103076772698636, 2.303619035152223, 2.302337583502317, 2.188506426765241], "accuracy": [0.22295601665973663, 0.1542728841304779, 0.17791573703289032, 0.09945846349000931, 0.10157178342342377, 0.10566636174917221, 0.1842557191848755], "val_loss": [2.0248949187142506, 1.7048442363739014, 1.9948625564575195, 1.9741248403276717, 1.9732440539768763, 1.970315388270787, 1.9762496267046248], "val_accuracy": [0.09966666996479034, 0.27133333683013916, 0.09833333641290665, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [0, 1, 0, 1, 0, 1, 0], [5, 6, 4, 9], [0, 3, 2, 3], [5, 57], [1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 2, 6, 6, 0, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [7, 38]], "fitness": -0.3345714211463928, "mapping_values": [1, 2, 2, 1, 1, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.subtract(alpha, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3025472613216125, 2.301079716995455, 2.3007857894632937, 2.301235957436038, 2.3000228816586525, 2.299441319950473, 2.2987085517056474, 2.29925364198434, 2.299608203886428, 2.299047292294425, 2.299507618800697, 2.297524316924013, 2.297632074847339, 2.2985815778305785, 2.296929025001309, 2.296151487157487, 2.2959592479677595, 2.295508718068621, 2.2961469831530916, 2.2953202282952563, 2.2933951143134523, 2.293271026622665, 2.2952890670090116, 2.2925489652961426, 2.2934756899679876, 2.2926220492349247, 2.2917502230625457, 2.2917191009826317, 2.2917010076545754, 2.2902774742455483, 2.2896021784824105, 2.2903406192692373, 2.289144110197814, 2.288578633036454, 2.2867076334904812, 2.2889310136494494, 2.289167118173281, 2.2880448475647377, 2.286215251667656, 2.2864939487211897, 2.2860355125583944, 2.2867868200442447, 2.2871858481922485, 2.2849671055911287, 2.2854252294573913, 2.283310113282582, 2.2843488932065266, 2.284415625341816, 2.283561809613106, 2.2838991706743847, 2.2827114677542566, 2.2828756971539383, 2.281469545722118, 2.281806922686366, 2.2818484631637777, 2.279784844740743, 2.2809676007666466, 2.28084843660374, 2.2812901260893437, 2.2791259947895073, 2.279354248033019, 2.279972546577076, 2.278401731736215, 2.2766596715148917, 2.277318964733849, 2.2763779904974326, 2.2762015435547953, 2.2746939366566994, 2.2749338840937585, 2.274402841270214, 2.2745276281248232, 2.273933498976867, 2.2754850082740083, 2.2734810850009657, 2.2739359303677102, 2.2738945596269438, 2.2727558843652726, 2.271029849267198, 2.272355219848939, 2.270571285502754, 2.2701910052238405, 2.2711294318675175, 2.269468752274408, 2.270934995107836, 2.2691617877397396, 2.2699705696282306, 2.2694076826039904, 2.2683038267524345, 2.266460402325837, 2.2664464828502298, 2.2674168444832383, 2.2666697935452786, 2.265191273808306, 2.2658848029715966, 2.266243079020095, 2.263154440142806, 2.2634905774627048, 2.263172483903983, 2.2629773149148993, 2.262496210911239], "accuracy": [0.09060890227556229, 0.09589222073554993, 0.09602430462837219, 0.09417514503002167, 0.09166556596755981, 0.09549596905708313, 0.10421344637870789, 0.10540219396352768, 0.09377889335155487, 0.1006472036242485, 0.09681680053472519, 0.1014397069811821, 0.10130762308835983, 0.09787346422672272, 0.10381719470024109, 0.10302469879388809, 0.10460969805717468, 0.10989301651716232, 0.10249637067317963, 0.1072513535618782, 0.11187426000833511, 0.11266675591468811, 0.11015717685222626, 0.11266675591468811, 0.10738343745470047, 0.11411966383457184, 0.11517632752656937, 0.12072381377220154, 0.11834631860256195, 0.12072381377220154, 0.11887465417385101, 0.12059172987937927, 0.12059172987937927, 0.1224408894777298, 0.13036586344242096, 0.11861048638820648, 0.1224408894777298, 0.1278562992811203, 0.1302337795495987, 0.1274600476026535, 0.1274600476026535, 0.13115836679935455, 0.12759213149547577, 0.13089419901371002, 0.1332716941833496, 0.13829085230827332, 0.13657376170158386, 0.137630432844162, 0.13551710546016693, 0.14014001190662384, 0.14330999553203583, 0.1426495909690857, 0.14529123902320862, 0.14912164211273193, 0.14251750707626343, 0.14251750707626343, 0.14159291982650757, 0.1484612375497818, 0.14674416184425354, 0.14555540680885315, 0.15176330506801605, 0.1476687341928482, 0.1558578759431839, 0.15731078386306763, 0.15902787446975708, 0.15889579057693481, 0.16074495017528534, 0.15691454708576202, 0.16483952105045319, 0.1674811840057373, 0.16021661460399628, 0.16483952105045319, 0.16061286628246307, 0.16774533689022064, 0.15915995836257935, 0.16642451286315918, 0.16999074816703796, 0.1682736724615097, 0.16682076454162598, 0.17302866280078888, 0.1764628142118454, 0.17144367098808289, 0.17910447716712952, 0.17593449354171753, 0.1784440577030182, 0.17421740293502808, 0.1710474193096161, 0.17976489663124084, 0.18676528334617615, 0.1880861222743988, 0.18359529972076416, 0.18161405622959137, 0.18478403985500336, 0.1884823739528656, 0.19323734939098358, 0.1888786107301712, 0.19191652536392212, 0.18663319945335388, 0.19680359959602356, 0.19601109623908997], "val_loss": [1.9702202933175224, 1.9698503358023507, 1.9694781984601701, 1.9691026551382882, 1.9687303134373255, 1.9683592660086495, 1.967989104134696, 1.9676158087594169, 1.9672446250915527, 1.9668753487723214, 1.9665052550179618, 1.9661342075892858, 1.9657646587916784, 1.9653988565717424, 1.9650323050362724, 1.9646598952157157, 1.9642962728227888, 1.9639319692339217, 1.9635655539376395, 1.9631993430001395, 1.9628321102687292, 1.962465558733259, 1.9621007783072335, 1.961736066000802, 1.961369514465332, 1.9610027585710799, 1.9606377056666784, 1.9602759225027901, 1.959906918661935, 1.9595443180629186, 1.9591810362679618, 1.9588166645595007, 1.9584499767848425, 1.9580844470432825, 1.957716805594308, 1.9573535237993513, 1.9569892202104842, 1.956627300807408, 1.956259318760463, 1.9558935165405273, 1.955529008592878, 1.9551633426121302, 1.954793861934117, 1.9544316700526647, 1.9540694100516183, 1.9537040165492467, 1.9533378737313407, 1.9529698235648019, 1.952603544507708, 1.9522346087864466, 1.9518675122942244, 1.9515021187918526, 1.9511337280273438, 1.950767993927002, 1.9504032135009766, 1.9500324385506767, 1.949667045048305, 1.9493002891540527, 1.9489353043692452, 1.948566096169608, 1.9482014519827706, 1.9478370121547155, 1.9474670546395438, 1.9470960072108678, 1.946725572858538, 1.9463541848318917, 1.9459854534694128, 1.9456158365522112, 1.9452412469046456, 1.944873469216483, 1.944502353668213, 1.9441261291503906, 1.9437567165919714, 1.9433815138680595, 1.9430065155029297, 1.942633833203997, 1.9422552926199776, 1.9418775694710868, 1.941502366747175, 1.9411219188145228, 1.9407439913068498, 1.940363952091762, 1.9399853433881487, 1.9396063259669714, 1.9392259461539132, 1.9388431821550642, 1.9384590557643346, 1.9380793571472168, 1.9376920291355677, 1.9373053823198592, 1.9369206428527832, 1.936534813472203, 1.9361485072544642, 1.9357602936880929, 1.9353726250784737, 1.9349775314331055, 1.9345834595816476, 1.934194564819336, 1.9337991986955916, 1.9334040369306291], "val_accuracy": [0.0403333343565464, 0.04266666620969772, 0.04600000008940697, 0.04933333396911621, 0.05000000074505806, 0.0533333346247673, 0.05533333495259285, 0.05966666713356972, 0.06133333221077919, 0.06199999898672104, 0.06499999761581421, 0.06599999964237213, 0.07066666334867477, 0.0729999989271164, 0.07566666603088379, 0.07800000160932541, 0.08166666328907013, 0.08566666394472122, 0.08799999952316284, 0.09133332967758179, 0.09433333575725555, 0.10000000149011612, 0.10433333367109299, 0.10866666585206985, 0.1120000034570694, 0.1133333370089531, 0.11766666918992996, 0.12200000137090683, 0.12700000405311584, 0.12866666913032532, 0.1316666603088379, 0.13500000536441803, 0.13899999856948853, 0.14233332872390747, 0.1459999978542328, 0.1483333259820938, 0.1536666601896286, 0.15800000727176666, 0.16200000047683716, 0.16466666758060455, 0.1693333387374878, 0.1720000058412552, 0.1756666600704193, 0.17933332920074463, 0.18566666543483734, 0.18766666948795319, 0.1913333386182785, 0.19633333384990692, 0.20033332705497742, 0.20333333313465118, 0.2070000022649765, 0.20933333039283752, 0.21433334052562714, 0.21833333373069763, 0.2199999988079071, 0.22200000286102295, 0.22333332896232605, 0.22733333706855774, 0.2293333262205124, 0.23333333432674408, 0.234333336353302, 0.23733332753181458, 0.23899999260902405, 0.24500000476837158, 0.24766667187213898, 0.25, 0.25200000405311584, 0.25733333826065063, 0.2606666684150696, 0.2626666724681854, 0.265666663646698, 0.27033331990242004, 0.2723333239555359, 0.2759999930858612, 0.2776666581630707, 0.28200000524520874, 0.2853333353996277, 0.28966665267944336, 0.2919999957084656, 0.2933333218097687, 0.2966666519641876, 0.29733332991600037, 0.2993333339691162, 0.30133333802223206, 0.30533334612846375, 0.30799999833106995, 0.3109999895095825, 0.31200000643730164, 0.31433331966400146, 0.31700000166893005, 0.3173333406448364, 0.31966665387153625, 0.3230000138282776, 0.3240000009536743, 0.3266666531562805, 0.3306666612625122, 0.3319999873638153, 0.33266666531562805, 0.33533334732055664, 0.3386666774749756]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 0], [7, 6, 4, 9], [1, 2, 1, 3], [48, 57], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 6, 6, 0, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [0, 3], [96], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 6, 4, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, sigma)))", "other_info": {"loss": [2.3022565296880004, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0], [7, 6, 4, 9, 0], [1, 0, 0, 3, 1, 0], [48, 57, 34], [1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 9, 6, 6, 9, 0, 9, 1, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 1, 1, 3, 1, 3, 2, 3, 3, 0], [99, 71, 43, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [0, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), tf.math.divide_no_nan(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [3354.247403388829, 60568.00179756637, 280880.61380184256, 777643.0199445252, 1675111.934090609, 3044124.8628318585], "accuracy": [0.09721305221319199, 0.10091137140989304, 0.10077928751707077, 0.10051512718200684, 0.09866596013307571, 0.10289261490106583], "val_loss": [12472.231863839286, 97010.84151785714, 324657.6339285714, 766444.8214285715, 1493408.4285714286, 2576581.3571428573], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1], [2, 6, 4, 9, 0], [1, 0, 0, 3, 1, 0], [48, 57, 47], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 2, 6, 6, 0, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 1, 1, 3, 1, 3, 2, 3, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [2, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 5, 3, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(sigma, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0812310129404068, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 3, 2, 3], [48, 57], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], [7, 2, 6, 1, 5, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [0, 3], [44], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 16, 16, 8, 8, 1, 1, 1, 0, 1, 1, 6, 4, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, alpha), tf.math.add(tf.math.divide_no_nan(tf.math.subtract(tf.math.add(beta, grad), tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, tf.math.pow(grad, beta))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, sigma)))", "other_info": {"loss": [2.3022565296880004, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 1, 0, 3], [49, 57], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [6, 2, 6, 6, 2, 1, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 30, 57, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 9, 2, 2, 9], [3, 2, 3, 1], [64, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 2, 2, 0, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), alpha), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1048404625.1184933, 20018756102.55977, 94094956113.08414, 261994566692.92404, 566118723691.6614, 1030743777092.8099], "accuracy": [0.09747721254825592, 0.1006472036242485, 0.10077928751707077, 0.10051512718200684, 0.09866596013307571, 0.10302469879388809], "val_loss": [4044588324.571429, 32346406912.0, 109157126729.14285, 258729340342.85715, 505312856356.5714, 873159477540.5714], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 3, 2, 3], [48, 57], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 6, 6, 1, 0, 1, 0, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 1, 3, 1, 3, 2, 3, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [7, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [2, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.divide_no_nan(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(sigma, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0812310129404068, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1], [7, 6, 8, 9, 0], [1, 0, 0, 3, 1, 0], [48, 57, 47], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [8, 2, 6, 6, 1, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 1, 1, 3, 1, 3, 2, 3, 3, 0], [42, 30, 57, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [2, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 4, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.0108421540786723e+19, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.055210672318935394, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1], [7, 6, 4, 5, 0, 9], [0, 3, 2, 3], [48, 57], [1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [8, 2, 6, 6, 1, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 30, 57, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 0, 2, 9], [3, 3, 3, 1], [44, 38]], "fitness": -0.07742857187986374, "mapping_values": [1, 9, 9, 6, 3, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.negative(tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.negative(sigma)))", "other_info": {"loss": [2.302269953998671, 2.3006226076756673, 2.30015680103758, 2.3009771877795697, 2.300319623040202, 2.2999412471497647, 2.2994119320815156, 2.299984061785693, 2.30032588166174, 2.300218674705454, 2.3008601239108297, 2.29944982860602, 2.300319455791348, 2.30092636050329, 2.3006071552482688, 2.300269686519163], "accuracy": [0.09060890227556229, 0.09747721254825592, 0.09457138925790787, 0.09377889335155487, 0.09549596905708313, 0.09417514503002167, 0.09853387624025345, 0.10276053100824356, 0.09298639744520187, 0.09509972482919693, 0.09906221181154251, 0.1006472036242485, 0.09721305221319199, 0.09576013684272766, 0.09959053993225098, 0.09853387624025345], "val_loss": [1.9698851449148995, 1.9694257463727678, 1.9692545618329729, 1.9692555155072893, 1.9693766321454729, 1.9694735663277763, 1.9694115093776159, 1.9692944117954798, 1.9692576272147042, 1.969332558768136, 1.969517367226737, 1.969775949205671, 1.9700297628130232, 1.9702578272138322, 1.970423357827323, 1.970567226409912], "val_accuracy": [0.044333335012197495, 0.04899999871850014, 0.05233333259820938, 0.05666666850447655, 0.05533333495259285, 0.05900000035762787, 0.06599999964237213, 0.0689999982714653, 0.070333331823349, 0.0716666653752327, 0.0729999989271164, 0.0689999982714653, 0.06700000166893005, 0.06433333456516266, 0.06700000166893005, 0.0676666647195816]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 3, 2, 3], [48, 57], [1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1], [7, 2, 6, 6, 0, 1, 5, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 0, 0], [42, 16, 43, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 1, 3, 1], [41, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3027074151208544, 2.301631071343634, 2.301728169207308, 2.3025928601423793, 2.301766520619723, 2.3015732557042052], "accuracy": [0.09034473448991776, 0.09509972482919693, 0.09298639744520187, 0.09087307006120682, 0.08889182657003403, 0.08981640636920929], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 3, 2, 3], [48, 57], [1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 9, 6, 6, 9, 0, 9, 1, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [82, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 2, 1, 1, 5, 4, 2, 2, 0, 6, 4, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, sigma)))", "other_info": {"loss": [2.3027074151208544, 2.301631071343634, 2.301728169207308, 2.3025928601423793, 2.301766520619723, 2.3015732557042052], "accuracy": [0.09034473448991776, 0.09509972482919693, 0.09298639744520187, 0.09087307006120682, 0.08889182657003403, 0.08981640636920929], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 3, 2, 3], [31, 57], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 2, 6, 6, 0, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [44, 38]], "fitness": -0.037142857909202576, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, alpha), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, sigma))", "other_info": {"loss": [2.303255879096446, 2.303461179064407, 2.3054922926679438, 2.308461539387278, 2.3102299179210166, 2.313276896466039], "accuracy": [0.08942015469074249, 0.09206181764602661, 0.08928807079792023, 0.08017434924840927, 0.07938185334205627, 0.07991018146276474], "val_loss": [1.9716999871390206, 1.9730613572256905, 1.9747019495282854, 1.976761954171317, 1.9791179384504045, 1.9814122063773019], "val_accuracy": [0.03533333167433739, 0.028999999165534973, 0.027666667476296425, 0.02500000037252903, 0.028333334252238274, 0.03033333271741867]}}]