[{"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0], [2, 6, 9, 9, 0], [0, 1, 1, 3], [5, 57], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 4, 2, 2, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 2, 2, 3, 3, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.7945713996887207, "mapping_values": [1, 3, 3, 1, 2, 1, 17, 17, 8, 9, 2, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.pow(tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), tf.math.add(beta, beta))), beta), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, sigma)))", "other_info": {"loss": [2.059644275353396, 1.636961222356258, 1.0658720040507148, 0.9464604089430467, 0.8213932984509189, 0.7494063680245341, 0.730739994843276, 0.7100965662985713, 0.6521348276347406, 0.657702048149847, 0.6417460786731031, 0.5973886950786608, 0.6100013263945755, 0.5873754421607489, 0.5735331357840172, 0.5422093828498191, 0.5489759332137636, 0.5306785383307624, 0.5129807549279679, 0.5163833238209055, 0.49614313507376095], "accuracy": [0.30801743268966675, 0.46308282017707825, 0.6015057563781738, 0.6532822847366333, 0.6864351034164429, 0.7094175219535828, 0.7172104120254517, 0.7224937081336975, 0.7520803213119507, 0.7469290494918823, 0.7569673657417297, 0.7708360552787781, 0.763967752456665, 0.7683265209197998, 0.7862898111343384, 0.7991018295288086, 0.7911768555641174, 0.7961959838867188, 0.8033285140991211, 0.8061022162437439, 0.8168009519577026], "val_loss": [1.786658763885498, 0.8297096150262016, 0.852079084941319, 0.60394058908735, 0.6021777902330671, 0.5531090838568551, 0.5814353397914341, 0.5510538475854057, 0.51784234387534, 0.5038403272628784, 0.4789912870952061, 0.5125896079199654, 0.4747229814529419, 0.47240868636540007, 0.4427786299160549, 0.4422837495803833, 0.44965446846825735, 0.47035179819379536, 0.4272331510271345, 0.42841908761433195, 0.44192393336977276], "val_accuracy": [0.5396666526794434, 0.6340000033378601, 0.653333306312561, 0.7386666536331177, 0.7306666374206543, 0.753000020980835, 0.7173333168029785, 0.7403333187103271, 0.7519999742507935, 0.7553333044052124, 0.7773333191871643, 0.7543333172798157, 0.7893333435058594, 0.7946666479110718, 0.8109999895095825, 0.8136666417121887, 0.8016666769981384, 0.7893333435058594, 0.8066666722297668, 0.8076666593551636, 0.8103333115577698]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [2, 6, 9, 9, 0], [1, 3, 2, 3, 1, 2], [5, 57], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 4, 2, 0, 5, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 2, 2, 3, 3, 0], [42, 63, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [1, 3, 3, 1], [41, 38]], "fitness": -0.7545714378356934, "mapping_values": [1, 3, 3, 1, 2, 0, 11, 11, 7, 4, 2, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.pow(tf.math.add(tf.math.add(beta, grad), tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, sigma)))", "other_info": {"loss": [2.1161970890366626, 1.7253964037360485, 1.585023227605239, 1.5299372130759152, 1.5708902477666986, 1.5344504194016533, 1.7336331814854231, 1.6993364703622178, 1.6552115557074405, 1.5735379453222467, 1.4780737104480135, 1.4384064948979212, 1.4154460977459344, 1.3657061755775288, 1.4377271651969752, 1.450785144476638, 1.4709308699468155, 1.7805069158609754, 1.5918993982955716], "accuracy": [0.27737417817115784, 0.38660678267478943, 0.4119667112827301, 0.4221371114253998, 0.42226919531822205, 0.433760404586792, 0.378549724817276, 0.39228636026382446, 0.39043718576431274, 0.4015321731567383, 0.43547746539115906, 0.46664905548095703, 0.4674415588378906, 0.4850085973739624, 0.4589882493019104, 0.47589486837387085, 0.48527276515960693, 0.4006075859069824, 0.40826839208602905], "val_loss": [1.589730637414115, 1.024040971483503, 0.8013802937098912, 0.8657817499978202, 0.7199429103306362, 0.9204810687473842, 0.9092194352831159, 0.7910177196775164, 0.7102647168295724, 0.6664783103125436, 0.5954814979008266, 0.6728193419320243, 0.6093777929033551, 0.6172469343457904, 0.793951255934579, 1.0371119976043701, 0.78391546862466, 1.0540900911603654, 0.6308207852499825], "val_accuracy": [0.41066667437553406, 0.5669999718666077, 0.656333327293396, 0.6430000066757202, 0.6759999990463257, 0.6340000033378601, 0.6079999804496765, 0.6696666479110718, 0.656333327293396, 0.6813333630561829, 0.7133333086967468, 0.7059999704360962, 0.7256666421890259, 0.7286666631698608, 0.6320000290870667, 0.6546666622161865, 0.643666684627533, 0.4663333296775818, 0.7076666951179504]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [7, 6, 4, 4, 1, 3], [0, 3, 2, 0, 1], [5, 57], [1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [7, 8, 4, 2, 0, 1, 9, 0, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 1, 2, 3, 2, 0], [42, 14, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.22942857444286346, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.3793100824508495, 2.3061410803852174, 2.303569743598945, 2.301514860063008, 2.651346715874975, 2.305310152021334, 2.3039399471580233, 2.3029111112822096, 2.303039885719832], "accuracy": [0.15863162279129028, 0.09509972482919693, 0.1010434553027153, 0.11068551242351532, 0.2102760523557663, 0.11398758739233017, 0.10091137140989304, 0.0952318087220192, 0.09734513610601425], "val_loss": [1.9792445727757044, 1.974484579903739, 1.9734970501491003, 1.9661991255623954, 1.980053288596017, 1.9745702062334334, 1.9735362189156669, 1.973503793988909, 1.9734768867492676], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.1120000034570694, 0.2293333262205124, 0.1326666623353958, 0.09966666996479034, 0.10566666722297668, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [6, 6, 4, 6, 4, 7], [2, 0, 0, 3, 1, 0], [5, 57, 85], [1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0], [7, 2, 4, 2, 0, 1, 5, 4, 2, 8, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 1, 3, 1, 0, 2, 3, 2, 0], [97, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 1, 3, 1], [48, 38]], "fitness": -0.22942857444286346, "mapping_values": [1, 9, 9, 4, 5, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), grad)), alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.3793100824508495, 2.3061410803852174, 2.303569743598945, 2.301514860063008, 2.651346715874975, 2.305310152021334, 2.3039399471580233, 2.3029111112822096, 2.303039885719832], "accuracy": [0.15863162279129028, 0.09509972482919693, 0.1010434553027153, 0.11068551242351532, 0.2102760523557663, 0.11398758739233017, 0.10091137140989304, 0.0952318087220192, 0.09734513610601425], "val_loss": [1.9792445727757044, 1.974484579903739, 1.9734970501491003, 1.9661991255623954, 1.980053288596017, 1.9745702062334334, 1.9735362189156669, 1.973503793988909, 1.9734768867492676], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.1120000034570694, 0.2293333262205124, 0.1326666623353958, 0.09966666996479034, 0.10566666722297668, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [6, 6, 4, 2, 4, 7], [2, 0, 0, 3, 1, 0], [5, 57, 85], [1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0], [7, 2, 4, 2, 0, 8, 5, 4, 2, 8, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 1, 3, 0, 3, 2, 3, 2, 0], [97, 16, 23, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 1, 3, 1], [48, 38]], "fitness": -0.22942857444286346, "mapping_values": [1, 9, 9, 4, 5, 2, 17, 17, 10, 7, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))), grad)), alpha), lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(alpha)))))), tf.math.add(beta, tf.math.square(grad))), tf.math.add(beta, tf.math.pow(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(beta))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.3793100824508495, 2.3061410803852174, 2.303569743598945, 2.301514860063008, 2.651346715874975, 2.305310152021334, 2.3039399471580233, 2.3029111112822096, 2.303039885719832], "accuracy": [0.15863162279129028, 0.09509972482919693, 0.1010434553027153, 0.11068551242351532, 0.2102760523557663, 0.11398758739233017, 0.10091137140989304, 0.0952318087220192, 0.09734513610601425], "val_loss": [1.9792445727757044, 1.974484579903739, 1.9734970501491003, 1.9661991255623954, 1.980053288596017, 1.9745702062334334, 1.9735362189156669, 1.973503793988909, 1.9734768867492676], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.1120000034570694, 0.2293333262205124, 0.1326666623353958, 0.09966666996479034, 0.10566666722297668, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 1, 0, 1, 0, 1, 0], [6, 6, 4, 2, 4, 7], [2, 0, 0, 3, 1, 0], [5, 57, 85], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0], [9, 2, 4, 3, 0, 1, 5, 4, 2, 8, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 1, 3, 3, 0, 2, 3, 2, 0], [97, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [48, 38]], "fitness": -0.22942857444286346, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.3793100824508495, 2.3061410803852174, 2.303569743598945, 2.301514860063008, 2.651346715874975, 2.305310152021334, 2.3039399471580233, 2.3029111112822096, 2.303039885719832], "accuracy": [0.15863162279129028, 0.09509972482919693, 0.1010434553027153, 0.11068551242351532, 0.2102760523557663, 0.11398758739233017, 0.10091137140989304, 0.0952318087220192, 0.09734513610601425], "val_loss": [1.9792445727757044, 1.974484579903739, 1.9734970501491003, 1.9661991255623954, 1.980053288596017, 1.9745702062334334, 1.9735362189156669, 1.973503793988909, 1.9734768867492676], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.1120000034570694, 0.2293333262205124, 0.1326666623353958, 0.09966666996479034, 0.10566666722297668, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0], [2, 6, 9, 9, 0], [0, 1, 2, 3], [5, 57], [1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 5, 9, 2, 0, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 0, 2, 3, 0, 2, 3, 3, 2, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.22942857444286346, "mapping_values": [1, 3, 3, 1, 2, 1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.square(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.3793100824508495, 2.3061410803852174, 2.303569743598945, 2.301514860063008, 2.651346715874975, 2.305310152021334, 2.3039399471580233, 2.3029111112822096, 2.303039885719832], "accuracy": [0.15863162279129028, 0.09509972482919693, 0.1010434553027153, 0.11068551242351532, 0.2102760523557663, 0.11398758739233017, 0.10091137140989304, 0.0952318087220192, 0.09734513610601425], "val_loss": [1.9792445727757044, 1.974484579903739, 1.9734970501491003, 1.9661991255623954, 1.980053288596017, 1.9745702062334334, 1.9735362189156669, 1.973503793988909, 1.9734768867492676], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.1120000034570694, 0.2293333262205124, 0.1326666623353958, 0.09966666996479034, 0.10566666722297668, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 1, 0, 1, 0, 1, 0], [7, 6, 4, 4, 1, 3], [0, 3, 2, 3], [5, 57], [1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [7, 8, 4, 2, 0, 1, 9, 0, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 3, 3, 0, 1, 2, 3, 2, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [1, 3, 3, 1], [84, 38]], "fitness": -0.1428571492433548, "mapping_values": [1, 1, 1, 0, 1, 1, 18, 18, 11, 7, 2, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta)))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.pow(grad, tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), alpha), tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, sigma)))", "other_info": {"loss": [2.7274566871646595, 2.302330971740382, 2.303624351247269, 2.30318508675983, 2.303033107590792, 2.302938727906761], "accuracy": [0.17117950320243835, 0.10949676483869553, 0.09813763201236725, 0.09615638852119446, 0.09866596013307571, 0.09576013684272766], "val_loss": [1.9574335643223353, 1.974937915802002, 1.9739336286272322, 1.9737555640084403, 1.9737639427185059, 1.9736152376447404], "val_accuracy": [0.17466667294502258, 0.09833333641290665, 0.10233332961797714, 0.09833333641290665, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1], [7, 6, 4, 2, 3, 3, 5, 7, 3, 2, 7, 0, 1, 4, 4, 0, 0, 1, 4, 1, 3, 0, 9, 0], [2, 0, 2, 3, 1, 0, 2, 3, 1, 3, 0, 1, 2, 2, 2, 0, 1], [13, 57, 85, 14, 17], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [7, 2, 3, 2, 0, 1, 1, 1, 4, 8, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 3, 0, 3, 2, 3, 2, 0], [42, 68, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 1, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 41, 41, 24, 17, 5, 27, 27, 17, 10, 4, 1, 1, 0, 1, 0, 6, 5, 1, 2], "tree_depth": 44, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.multiply(grad, tf.math.add(alpha, grad)), tf.math.add(alpha, alpha)))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.add(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.pow(grad, tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.math.subtract(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), alpha), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), grad)))))))))), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))))), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.sqrt(tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.add(beta, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))), grad)), tf.math.add(beta, tf.math.subtract(tf.math.subtract(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), grad)))))))))), tf.math.add(beta, beta)), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [14.095193417505927, 2.378551075502929, 2.6145185650520792, 17854.57434992248, 15.247013822601392, 2.3184257769203613], "accuracy": [0.09457138925790787, 0.09906221181154251, 0.09945846349000931, 0.10645885765552521, 0.09536388516426086, 0.09998679161071777], "val_loss": [2.0501077515738353, 2.0351158550807407, 2.0660325459071567, 51.378523690359934, 1.9877228055681502, 1.9851976803370885], "val_accuracy": [0.10400000214576721, 0.10300000011920929, 0.10400000214576721, 0.09733333438634872, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [7, 6, 4, 9, 1, 2], [0, 1, 0, 3, 1], [5, 57, 10], [1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [7, 2, 4, 2, 0, 1, 5, 4, 2, 8, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 1, 3, 0, 0, 2, 3, 2, 0], [0, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [0, 1, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 6, 5, 3, 20, 20, 11, 9, 2, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)))), tf.math.add(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha))))), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta)))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, beta))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 4, 9, 9, 0], [0, 3, 0, 3, 1], [5, 57, 2], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1], [7, 8, 4, 8, 0, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 3, 0, 3, 2, 3, 2, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [2, 3, 9, 4, 9], [2, 3, 3, 1], [97, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 10, 10, 7, 3, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.sqrt(tf.math.pow(tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.subtract(grad, tf.math.add(beta, grad))))), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.math.multiply(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0874389111995697, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0], [2, 6, 9, 9, 0], [0, 1, 1, 3], [5, 57], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 4, 2, 5, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 3, 3, 0, 0, 2, 1, 2, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 1, 9, 8, 9], [3, 3, 3, 1], [1, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 14, 14, 7, 7, 2, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.pow(tf.math.add(tf.math.add(beta, beta), tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.subtract(sigma, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.sqrt(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [8, 6, 1, 9, 1, 3], [0, 3, 0, 3, 1], [5, 57, 57], [1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1], [7, 1, 9, 2, 0, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 3, 0, 3, 2, 3, 2, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0], [0, 3, 2, 2, 9], [3, 3, 3, 1], [84, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 4, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07449477910995483, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [0, 3, 2, 0, 1], [5, 57], [1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 8, 4, 2, 0, 5, 9, 0, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 2, 2, 3, 3, 0], [42, 14, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [1, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 10, 10, 7, 3, 2, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.math.add(tf.math.add(beta, grad), tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, sigma)))", "other_info": {"loss": [2.340660346576236, 4.841890811605256, 24.30002340806269, 98.20325575276703, 319.6040176151766, 907.4838729493606, 2297.532536776846], "accuracy": [0.08889182657003403, 0.10011887550354004, 0.10130762308835983, 0.09813763201236725, 0.09430722147226334, 0.09893012791872025, 0.09642054885625839], "val_loss": [2.1420937265668596, 7.295737402779715, 33.400438581194194, 120.03142438616071, 362.42669677734375, 962.8487723214286, 2281.9085518973216], "val_accuracy": [0.0989999994635582, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [7, 3, 1, 9, 1, 3], [0, 3, 2, 0, 1], [5, 57, 88], [1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1], [8, 1, 7, 8, 0, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 5, 3, 0, 3, 2, 3, 2, 0], [42, 14, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [9, 3, 9, 2, 9], [1, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 2, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302761645790073, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [7, 6, 4, 9, 1, 6], [0, 0, 1, 3, 3], [5, 57, 32], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0], [7, 2, 4, 2, 2, 1, 0, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 3, 0, 3, 2, 3, 2, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 5, 8, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 5, 4, 3, 22, 22, 12, 10, 3, 1, 1, 0, 1, 0, 6, 4, 2, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.subtract(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), grad)))), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), grad))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(beta, tf.math.add(beta, grad))), tf.math.add(beta, beta)))), tf.math.add(beta, tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.square(tf.math.sqrt(sigma)), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 1, 0, 1, 0, 1, 0], [5, 6, 4, 9], [0, 3, 2, 3], [91, 57], [1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [7, 5, 9, 2, 0, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 0, 2, 3, 0, 2, 3, 3, 2, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [6, 3, 9, 2, 9], [3, 3, 3, 1], [84, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 19, 19, 11, 8, 3, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.negative(tf.math.add(beta, alpha)), tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), beta)))))), grad)))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), sigma), sigma)", "other_info": {"loss": [2.302761645790073, 2.3025829521829677, 2.3025830151650255, 2.3025830151650255, 2.3025830151650255, 2.3025830151650255], "accuracy": [0.09893012791872025, 0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.9736424854823522, 1.9736425536019462, 1.9736425536019462, 1.9736425536019462, 1.9736425536019462], "val_accuracy": [0.10400000214576721, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1], [7, 6, 4, 9, 4, 6, 7, 7, 6, 8, 0, 7, 7, 3, 5, 4, 1, 3, 0, 7, 2, 8, 0, 9, 1, 5], [0, 3, 2, 0, 1, 0, 2, 0, 1, 0, 1, 0, 3, 0, 3, 1], [5, 2, 18, 12, 17, 16, 87, 67, 25], [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [7, 8, 4, 2, 0, 1, 9, 0, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 1, 3, 0, 3, 2, 1, 2, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0], [3, 3, 0, 3], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 42, 42, 26, 16, 9, 3, 3, 1, 2, 0, 8, 5, 4, 1, 0, 4, 3, 1, 1], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), alpha), tf.math.add(alpha, tf.math.sqrt(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)))))), tf.math.negative(grad))), tf.math.add(tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), alpha), tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.math.add(alpha, grad)))), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))), grad)))))), alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.multiply(sigma, sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3029786747491685, 2.3016791457056667, 2.302536728454225, 2.302783688502525, 2.30120246820698, 2.302038917137159], "accuracy": [0.08968432247638702, 0.08796724677085876, 0.09259014576673508, 0.08730682730674744, 0.09721305221319199, 0.09470347315073013], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [5, 6, 4, 9], [0, 3, 2, 0, 1], [5, 57], [1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1], [7, 5, 9, 2, 0, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 2, 2, 3, 0, 2, 3, 3, 2, 0], [42, 14, 43, 84, 1, 78], [0, 0, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0], [3, 3, 0, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 1, 17, 17, 10, 7, 2, 7, 5, 4, 1, 0, 4, 3, 1, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), beta)), tf.math.add(beta, beta)), grad))), tf.math.add(beta, tf.math.add(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.negative(sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.3029786747491685, 2.3016791457056667, 2.302536728454225, 2.302783688502525, 2.30120246820698, 2.302038917137159], "accuracy": [0.08968432247638702, 0.08796724677085876, 0.09259014576673508, 0.08730682730674744, 0.09721305221319199, 0.09470347315073013], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [7, 6, 4, 9, 1, 3], [0, 3, 0, 3, 1], [5, 57, 10], [1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1], [7, 1, 4, 8, 0, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 1, 3, 0, 3, 2, 1, 2, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [4, 3], [], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 1, 11, 11, 7, 4, 1, 6, 4, 3, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.subtract(tf.math.pow(tf.math.sqrt(tf.math.add(beta, beta)), tf.math.negative(tf.math.subtract(alpha, tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3029786747491685, 2.3016791457056667, 2.302536728454225, 2.302783688502525, 2.30120246820698, 2.302038917137159], "accuracy": [0.08968432247638702, 0.08796724677085876, 0.09259014576673508, 0.08730682730674744, 0.09721305221319199, 0.09470347315073013], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]