[{"genotype": [[0], [1, 0, 0, 1, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0], [7, 6, 4, 9], [0, 1, 2], [44, 57], [0, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6], [3], [1, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 0, 1, 1], [0, 3], [3, 0], [45]], "fitness": -0.8111428618431091, "mapping_values": [1, 7, 7, 4, 3, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.9761981011192797, 1.5001383936872823, 1.086506177185234, 0.8928432554349042, 0.8054853725930908, 0.7654400954172832, 0.7282798553202776, 0.6996312062927068, 0.669738017659319, 0.6248064382815358, 0.6571858919071499, 0.6112148125236848, 0.6140552061014424, 0.5678608567644466, 0.5839209156013704, 0.5589308091252944, 0.5352395301828169, 0.5318786978658636, 0.5101251080405867, 0.5103889684541083, 0.49124532072787525, 0.5043873596681092, 0.48981706758516025, 0.4747984945624496, 0.46512874892800005, 0.4523697542264052, 0.4573221033621836], "accuracy": [0.3307357132434845, 0.5193501710891724, 0.609959065914154, 0.6627922058105469, 0.7021529674530029, 0.7152291536331177, 0.7252674698829651, 0.735569953918457, 0.7470611333847046, 0.7663452625274658, 0.7464007139205933, 0.7677981853485107, 0.7650244235992432, 0.787082314491272, 0.7738739848136902, 0.7874785661697388, 0.7951393723487854, 0.8016114234924316, 0.8090080618858337, 0.8070268034934998, 0.8123101592063904, 0.8096684813499451, 0.8129705190658569, 0.8197067975997925, 0.828292191028595, 0.8333113193511963, 0.828820526599884], "val_loss": [1.2133177348545618, 0.9725775718688965, 0.7118114914212909, 0.6096825769969395, 0.5785958426339286, 0.5605153867176601, 0.553529007094247, 0.5439332553318569, 0.49994073595319477, 0.5235155309949603, 0.4928164482116699, 0.4821843590055193, 0.4701375109808786, 0.4921170813696725, 0.476413403238569, 0.4610287717410496, 0.43374191011701313, 0.4865760462624686, 0.43279156514576506, 0.4235440833227975, 0.40364839349474224, 0.39743987151554655, 0.39877366168158396, 0.4281086581093924, 0.4152108260563442, 0.4198223352432251, 0.3980129531451634], "val_accuracy": [0.5216666460037231, 0.6003333330154419, 0.6610000133514404, 0.7229999899864197, 0.7333333492279053, 0.7620000243186951, 0.7506666779518127, 0.7559999823570251, 0.7860000133514404, 0.7559999823570251, 0.7836666703224182, 0.7846666574478149, 0.7916666865348816, 0.7776666879653931, 0.793666660785675, 0.7916666865348816, 0.8216666579246521, 0.7786666750907898, 0.8136666417121887, 0.8213333487510681, 0.8246666789054871, 0.8346666693687439, 0.8240000009536743, 0.8016666769981384, 0.8176666498184204, 0.8076666593551636, 0.8323333263397217]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 0, 1, 1], [7, 4, 3, 9], [0, 1, 2], [44, 57], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1], [3, 1, 6, 8, 3, 3, 3, 3, 7, 0, 2, 2, 1, 3, 3, 7], [3, 2, 4, 2, 5, 3, 1, 1, 1, 0, 3, 5, 1, 4], [58, 70, 33, 54], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 0, 1, 1], [0, 3], [3, 0], [45]], "fitness": -0.8111428618431091, "mapping_values": [1, 7, 7, 4, 3, 2, 27, 27, 14, 13, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.pow(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.divide_no_nan(grad, tf.math.add(beta, beta)), tf.math.add(beta, tf.math.sqrt(grad)))), tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, tf.math.multiply(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha))), tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.multiply(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), grad))), grad))))))))), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.9761981011192797, 1.5001383936872823, 1.086506177185234, 0.8928432554349042, 0.8054853725930908, 0.7654400954172832, 0.7282798553202776, 0.6996312062927068, 0.669738017659319, 0.6248064382815358, 0.6571858919071499, 0.6112148125236848, 0.6140552061014424, 0.5678608567644466, 0.5839209156013704, 0.5589308091252944, 0.5352395301828169, 0.5318786978658636, 0.5101251080405867, 0.5103889684541083, 0.49124532072787525, 0.5043873596681092, 0.48981706758516025, 0.4747984945624496, 0.46512874892800005, 0.4523697542264052, 0.4573221033621836], "accuracy": [0.3307357132434845, 0.5193501710891724, 0.609959065914154, 0.6627922058105469, 0.7021529674530029, 0.7152291536331177, 0.7252674698829651, 0.735569953918457, 0.7470611333847046, 0.7663452625274658, 0.7464007139205933, 0.7677981853485107, 0.7650244235992432, 0.787082314491272, 0.7738739848136902, 0.7874785661697388, 0.7951393723487854, 0.8016114234924316, 0.8090080618858337, 0.8070268034934998, 0.8123101592063904, 0.8096684813499451, 0.8129705190658569, 0.8197067975997925, 0.828292191028595, 0.8333113193511963, 0.828820526599884], "val_loss": [1.2133177348545618, 0.9725775718688965, 0.7118114914212909, 0.6096825769969395, 0.5785958426339286, 0.5605153867176601, 0.553529007094247, 0.5439332553318569, 0.49994073595319477, 0.5235155309949603, 0.4928164482116699, 0.4821843590055193, 0.4701375109808786, 0.4921170813696725, 0.476413403238569, 0.4610287717410496, 0.43374191011701313, 0.4865760462624686, 0.43279156514576506, 0.4235440833227975, 0.40364839349474224, 0.39743987151554655, 0.39877366168158396, 0.4281086581093924, 0.4152108260563442, 0.4198223352432251, 0.3980129531451634], "val_accuracy": [0.5216666460037231, 0.6003333330154419, 0.6610000133514404, 0.7229999899864197, 0.7333333492279053, 0.7620000243186951, 0.7506666779518127, 0.7559999823570251, 0.7860000133514404, 0.7559999823570251, 0.7836666703224182, 0.7846666574478149, 0.7916666865348816, 0.7776666879653931, 0.793666660785675, 0.7916666865348816, 0.8216666579246521, 0.7786666750907898, 0.8136666417121887, 0.8213333487510681, 0.8246666789054871, 0.8346666693687439, 0.8240000009536743, 0.8016666769981384, 0.8176666498184204, 0.8076666593551636, 0.8323333263397217]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0], [7, 6, 4, 9], [0, 1, 2], [44, 57], [0, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6], [3], [1, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 0, 1, 1], [0, 3], [3, 0], [45]], "fitness": -0.8111428618431091, "mapping_values": [1, 7, 7, 4, 3, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.9761981011192797, 1.5001383936872823, 1.086506177185234, 0.8928432554349042, 0.8054853725930908, 0.7654400954172832, 0.7282798553202776, 0.6996312062927068, 0.669738017659319, 0.6248064382815358, 0.6571858919071499, 0.6112148125236848, 0.6140552061014424, 0.5678608567644466, 0.5839209156013704, 0.5589308091252944, 0.5352395301828169, 0.5318786978658636, 0.5101251080405867, 0.5103889684541083, 0.49124532072787525, 0.5043873596681092, 0.48981706758516025, 0.4747984945624496, 0.46512874892800005, 0.4523697542264052, 0.4573221033621836], "accuracy": [0.3307357132434845, 0.5193501710891724, 0.609959065914154, 0.6627922058105469, 0.7021529674530029, 0.7152291536331177, 0.7252674698829651, 0.735569953918457, 0.7470611333847046, 0.7663452625274658, 0.7464007139205933, 0.7677981853485107, 0.7650244235992432, 0.787082314491272, 0.7738739848136902, 0.7874785661697388, 0.7951393723487854, 0.8016114234924316, 0.8090080618858337, 0.8070268034934998, 0.8123101592063904, 0.8096684813499451, 0.8129705190658569, 0.8197067975997925, 0.828292191028595, 0.8333113193511963, 0.828820526599884], "val_loss": [1.2133177348545618, 0.9725775718688965, 0.7118114914212909, 0.6096825769969395, 0.5785958426339286, 0.5605153867176601, 0.553529007094247, 0.5439332553318569, 0.49994073595319477, 0.5235155309949603, 0.4928164482116699, 0.4821843590055193, 0.4701375109808786, 0.4921170813696725, 0.476413403238569, 0.4610287717410496, 0.43374191011701313, 0.4865760462624686, 0.43279156514576506, 0.4235440833227975, 0.40364839349474224, 0.39743987151554655, 0.39877366168158396, 0.4281086581093924, 0.4152108260563442, 0.4198223352432251, 0.3980129531451634], "val_accuracy": [0.5216666460037231, 0.6003333330154419, 0.6610000133514404, 0.7229999899864197, 0.7333333492279053, 0.7620000243186951, 0.7506666779518127, 0.7559999823570251, 0.7860000133514404, 0.7559999823570251, 0.7836666703224182, 0.7846666574478149, 0.7916666865348816, 0.7776666879653931, 0.793666660785675, 0.7916666865348816, 0.8216666579246521, 0.7786666750907898, 0.8136666417121887, 0.8213333487510681, 0.8246666789054871, 0.8346666693687439, 0.8240000009536743, 0.8016666769981384, 0.8176666498184204, 0.8076666593551636, 0.8323333263397217]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 0, 1, 0], [3, 6, 4, 9], [0, 1, 2], [44, 57], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0], [2, 0, 0, 2, 5, 7, 0, 0, 9, 4, 5, 9], [3, 2, 0, 0], [1, 91, 89], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 0, 1, 1], [0, 3], [3, 0], [45]], "fitness": -0.8111428618431091, "mapping_values": [1, 7, 7, 4, 3, 2, 14, 14, 10, 4, 3, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(beta, tf.math.negative(beta))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))))))), tf.math.add(beta, tf.math.pow(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.9761981011192797, 1.5001383936872823, 1.086506177185234, 0.8928432554349042, 0.8054853725930908, 0.7654400954172832, 0.7282798553202776, 0.6996312062927068, 0.669738017659319, 0.6248064382815358, 0.6571858919071499, 0.6112148125236848, 0.6140552061014424, 0.5678608567644466, 0.5839209156013704, 0.5589308091252944, 0.5352395301828169, 0.5318786978658636, 0.5101251080405867, 0.5103889684541083, 0.49124532072787525, 0.5043873596681092, 0.48981706758516025, 0.4747984945624496, 0.46512874892800005, 0.4523697542264052, 0.4573221033621836], "accuracy": [0.3307357132434845, 0.5193501710891724, 0.609959065914154, 0.6627922058105469, 0.7021529674530029, 0.7152291536331177, 0.7252674698829651, 0.735569953918457, 0.7470611333847046, 0.7663452625274658, 0.7464007139205933, 0.7677981853485107, 0.7650244235992432, 0.787082314491272, 0.7738739848136902, 0.7874785661697388, 0.7951393723487854, 0.8016114234924316, 0.8090080618858337, 0.8070268034934998, 0.8123101592063904, 0.8096684813499451, 0.8129705190658569, 0.8197067975997925, 0.828292191028595, 0.8333113193511963, 0.828820526599884], "val_loss": [1.2133177348545618, 0.9725775718688965, 0.7118114914212909, 0.6096825769969395, 0.5785958426339286, 0.5605153867176601, 0.553529007094247, 0.5439332553318569, 0.49994073595319477, 0.5235155309949603, 0.4928164482116699, 0.4821843590055193, 0.4701375109808786, 0.4921170813696725, 0.476413403238569, 0.4610287717410496, 0.43374191011701313, 0.4865760462624686, 0.43279156514576506, 0.4235440833227975, 0.40364839349474224, 0.39743987151554655, 0.39877366168158396, 0.4281086581093924, 0.4152108260563442, 0.4198223352432251, 0.3980129531451634], "val_accuracy": [0.5216666460037231, 0.6003333330154419, 0.6610000133514404, 0.7229999899864197, 0.7333333492279053, 0.7620000243186951, 0.7506666779518127, 0.7559999823570251, 0.7860000133514404, 0.7559999823570251, 0.7836666703224182, 0.7846666574478149, 0.7916666865348816, 0.7776666879653931, 0.793666660785675, 0.7916666865348816, 0.8216666579246521, 0.7786666750907898, 0.8136666417121887, 0.8213333487510681, 0.8246666789054871, 0.8346666693687439, 0.8240000009536743, 0.8016666769981384, 0.8176666498184204, 0.8076666593551636, 0.8323333263397217]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 0], [7, 6, 4, 9], [0, 1, 2], [44, 57], [0, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6], [2], [1, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 1, 1, 1], [0, 3], [3, 0], [45]], "fitness": -0.11828571557998657, "mapping_values": [1, 7, 7, 4, 3, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(alpha, grad)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.7527206760308744, 2.236215814119474, 3.814921644086363, 2.3049023442689722, 2.3032568538697515, 2.303091401452984], "accuracy": [0.1822744756937027, 0.16074495017528534, 0.10540219396352768, 0.09998679161071777, 0.09826971590518951, 0.09417514503002167], "val_loss": [1.9358210563659668, 8.554919106619698, 1.9771919250488281, 1.9743706158229284, 1.9737813813345773, 1.973672730582101], "val_accuracy": [0.19033333659172058, 0.14366666972637177, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [7, 6, 8, 9, 5], [0, 1, 2], [66, 57], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1], [2, 0, 0, 2, 5, 7, 0, 0, 3, 4, 5, 9, 9, 0, 1, 4, 3, 5, 8, 4, 6, 3, 4, 8, 8, 5], [0, 5, 3, 0, 5, 3, 3, 0, 1, 5, 0], [1, 70, 89, 59, 17, 31], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 1, 1], [0, 3], [3, 0], [45]], "fitness": -0.11828571557998657, "mapping_values": [1, 6, 6, 4, 2, 2, 37, 37, 26, 11, 6, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(alpha), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.negative(grad))))))))))), tf.math.subtract(tf.math.add(beta, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), grad)), tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.pow(tf.math.add(beta, tf.math.sqrt(grad)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))))))))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.7527206760308744, 2.236215814119474, 3.814921644086363, 2.3049023442689722, 2.3032568538697515, 2.303091401452984], "accuracy": [0.1822744756937027, 0.16074495017528534, 0.10540219396352768, 0.09998679161071777, 0.09826971590518951, 0.09417514503002167], "val_loss": [1.9358210563659668, 8.554919106619698, 1.9771919250488281, 1.9743706158229284, 1.9737813813345773, 1.973672730582101], "val_accuracy": [0.19033333659172058, 0.14366666972637177, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [7, 4, 3, 9, 7, 8], [2, 1, 2, 3], [44, 57], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0], [2, 0, 0, 2, 9, 7, 2, 0, 9, 4, 5, 9], [3, 0, 1, 0, 1, 4], [1, 70, 89, 32], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 1, 1], [0, 3], [3, 0], [45]], "fitness": -0.11828571557998657, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 12, 3, 4, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), tf.math.add(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.square(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.7527206760308744, 2.236215814119474, 3.814921644086363, 2.3049023442689722, 2.3032568538697515, 2.303091401452984], "accuracy": [0.1822744756937027, 0.16074495017528534, 0.10540219396352768, 0.09998679161071777, 0.09826971590518951, 0.09417514503002167], "val_loss": [1.9358210563659668, 8.554919106619698, 1.9771919250488281, 1.9743706158229284, 1.9737813813345773, 1.973672730582101], "val_accuracy": [0.19033333659172058, 0.14366666972637177, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 0, 1, 1], [7, 6, 4, 9, 0], [2, 2, 2], [44, 57], [1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0], [4, 6, 6, 2, 5, 7, 0, 0, 9, 4, 5, 9], [3, 3, 3, 1, 0, 1], [28, 70, 83], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 1, 1, 1], [0, 3], [3, 0], [45]], "fitness": -0.11828571557998657, "mapping_values": [1, 7, 7, 4, 3, 1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(grad, tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), grad)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, grad), tf.math.divide_no_nan(grad, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.7527206760308744, 2.236215814119474, 3.814921644086363, 2.3049023442689722, 2.3032568538697515, 2.303091401452984], "accuracy": [0.1822744756937027, 0.16074495017528534, 0.10540219396352768, 0.09998679161071777, 0.09826971590518951, 0.09417514503002167], "val_loss": [1.9358210563659668, 8.554919106619698, 1.9771919250488281, 1.9743706158229284, 1.9737813813345773, 1.973672730582101], "val_accuracy": [0.19033333659172058, 0.14366666972637177, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 0, 1, 1], [7, 4, 3, 9], [2, 1, 2], [44, 57], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0], [4, 6, 6, 4, 3, 5, 7, 2, 9, 5, 0, 9], [3, 1, 1, 0, 3, 4], [1, 70, 33, 54], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 1, 1, 1], [0, 3], [3, 0], [45]], "fitness": -0.11828571557998657, "mapping_values": [1, 7, 7, 4, 3, 1, 18, 18, 12, 6, 3, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.add(beta, alpha)), tf.math.pow(tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, grad)), tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))))))), tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.7527206760308744, 2.236215814119474, 3.814921644086363, 2.3049023442689722, 2.3032568538697515, 2.303091401452984], "accuracy": [0.1822744756937027, 0.16074495017528534, 0.10540219396352768, 0.09998679161071777, 0.09826971590518951, 0.09417514503002167], "val_loss": [1.9358210563659668, 8.554919106619698, 1.9771919250488281, 1.9743706158229284, 1.9737813813345773, 1.973672730582101], "val_accuracy": [0.19033333659172058, 0.14366666972637177, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 1], [7, 1, 4, 9, 0], [3, 2, 1, 1, 3, 1], [44, 57], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1], [4, 9, 6, 2, 5, 1, 0, 0, 9, 4, 5, 9], [3, 5, 5, 1, 1, 1], [28, 70, 83], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 1, 1], [0, 3], [3, 0], [45]], "fitness": -0.11828571557998657, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.7527206760308744, 2.236215814119474, 3.814921644086363, 2.3049023442689722, 2.3032568538697515, 2.303091401452984], "accuracy": [0.1822744756937027, 0.16074495017528534, 0.10540219396352768, 0.09998679161071777, 0.09826971590518951, 0.09417514503002167], "val_loss": [1.9358210563659668, 8.554919106619698, 1.9771919250488281, 1.9743706158229284, 1.9737813813345773, 1.973672730582101], "val_accuracy": [0.19033333659172058, 0.14366666972637177, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [7, 6, 4, 9, 2], [0, 2, 2], [66, 79], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0], [2, 0, 0, 2, 5, 7, 0, 4, 9, 4, 5, 9], [0, 5, 2, 0, 5, 3, 3, 0], [1, 70, 89, 30], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 1, 1], [9, 3], [3, 0], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 2, 16, 16, 12, 4, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.pow(grad, tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad)))))), tf.math.add(beta, tf.math.square(tf.math.add(tf.math.negative(tf.math.pow(tf.math.add(beta, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.square(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3033931983728073, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [7, 6, 4, 6, 2, 1, 5, 2, 1, 1, 3, 3, 9, 3, 0], [1, 2, 3, 0, 3, 1, 2, 0, 0, 1, 3, 2], [61, 42, 66, 20], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 1, 1, 0, 1, 1, 1], [4, 6, 6], [0, 5, 2, 0, 5, 3, 3, 0], [1, 70, 89], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5, 4], [], [0, 0, 1, 1], [0, 3], [1, 0], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 27, 27, 15, 12, 4, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(alpha, tf.math.add(grad, alpha))))))), tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))), alpha)))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [7, 6, 4, 9, 0, 0, 7, 2, 3], [3, 0, 0, 1, 3, 1], [44, 57, 39], [0, 0, 0, 0, 0], [1, 0, 1, 1, 0], [4, 9, 7], [2, 5], [28, 70, 83], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [20], [0, 0, 1, 0], [0, 7, 9], [3, 0], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 9, 6, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))), tf.math.add(alpha, alpha))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [207963.2258724085, 2.313925376578943, 2.3057394193667684, 2.303551463497597, 2.3030388766527965, 2.3030512855667338, 2.3030054189777487], "accuracy": [0.09576013684272766, 0.09721305221319199, 0.0952318087220192, 0.09668471664190292, 0.09813763201236725, 0.09259014576673508, 0.09589222073554993], "val_loss": [1.9905916622706823, 1.9787264551435197, 1.9750239508492606, 1.9740144184657507, 1.9737426894051688, 1.9736819948468889, 1.9736580167497908], "val_accuracy": [0.09966666996479034, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10233332961797714, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 1], [0, 1, 0, 1, 0, 1, 0, 1], [2, 2, 6, 5, 4, 9, 2, 0, 6, 9, 3, 0, 2, 4, 2], [0, 1, 2, 0], [44, 57], [0, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6], [3], [64, 19], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [0], [78], [0, 1, 1, 1], [0, 6], [3, 0], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.square(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3033931983728073, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0], [7, 6, 4, 9], [0, 1, 2], [32, 57], [0, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6], [3], [1, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [6], [], [0, 0, 1, 1], [0, 6], [3, 0], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.11900673806667328, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 0, 1, 0, 1, 0, 1], [2, 2, 1, 5, 4, 9, 2, 0, 6, 9, 3, 0, 2, 4, 2], [0, 1, 2, 0], [44, 78, 81, 73], [0, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6], [3], [1, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 0, 1, 1, 1], [6, 6], [3, 0, 0], [38, 72]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(sigma, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09153348207473755, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 1], [7, 6, 4, 9, 0], [3, 2, 1, 1, 3, 1], [44, 57], [1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [4, 1, 6, 2, 3, 7, 0, 0, 9, 4, 5, 9], [3, 5, 5, 1, 0, 1, 0], [28, 70, 83], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 0, 1, 0, 1], [0, 3, 8], [1, 0], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 0, 18, 18, 11, 7, 3, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.divide_no_nan(grad, tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.add(tf.math.multiply(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha))), tf.math.negative(tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))))), tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))), tf.math.add(beta, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.sqrt(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.12508255243301392, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1], [2, 7, 6, 5, 4, 9, 2, 0, 6, 9, 3, 0, 2, 4, 2], [3, 2, 0, 2, 0, 0, 0, 2, 1, 1], [44, 78, 81, 73], [1, 0, 1, 1, 0, 0, 0], [0, 0, 0, 1, 1, 1, 1], [4, 6, 6], [3, 0, 3, 2], [38, 70], [0, 0, 0, 1, 0], [0, 1, 1, 1], [3, 3], [1, 4], [], [0, 0, 1, 1], [0, 3], [3, 0], [18]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 8, 5, 3, 7, 7, 3, 4, 1, 3, 3, 1, 2, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.square(grad)), tf.math.pow(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1], [7, 6, 4, 2, 8, 4, 4, 0, 2, 7, 8], [0, 1, 2, 3, 2, 2, 3, 2, 2], [44, 57], [0, 0, 1, 0, 1, 0, 0], [0, 0, 0, 1, 1, 1, 1], [4, 6, 6, 4, 3, 5, 7, 2, 9, 5, 0, 9], [3, 2, 4, 3], [1, 70, 33, 54], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 0, 1, 1], [0, 5], [3, 1], [45]], "fitness": -0.08171428740024567, "mapping_values": [1, 20, 20, 11, 9, 1, 7, 7, 3, 4, 0, 1, 1, 0, 1, 0, 3, 2, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.pow(tf.math.pow(tf.math.negative(tf.math.add(alpha, grad)), grad), tf.math.add(alpha, tf.math.add(grad, tf.math.add(tf.math.add(alpha, tf.math.sqrt(grad)), grad))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, grad), beta), tf.math.add(beta, grad))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(sigma))", "other_info": {"loss": [2.3048457189904323, 2.303415575866387, 2.306933394921942, 2.3086820949637077, 2.311372562784324, 2.314867667770184, 2.318778114201701, 2.3257767320576757, 2.332504500204058, 2.345929930474953, 2.371678365865608, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08532558381557465, 0.08506141602993011, 0.08215559273958206, 0.0796460211277008, 0.07779685407876968, 0.07898560166358948, 0.07555144280195236, 0.0758156105875969, 0.07079645991325378, 0.0758156105875969, 0.08294808864593506, 0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9716729436601912, 1.9730417387826102, 1.9748154367719377, 1.9769241469247, 1.979473318372454, 1.9821863174438477, 1.9855577605111259, 1.9896623747689384, 1.9957689557756697, 2.0088043212890625, 2.056227343423026, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03266666829586029, 0.027000000700354576, 0.026000000536441803, 0.0273333340883255, 0.028333334252238274, 0.03500000014901161, 0.04066666588187218, 0.055666666477918625, 0.0806666687130928, 0.09666666388511658, 0.10000000149011612, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 1], [0, 1, 0, 1, 1, 1, 1], [7, 2, 4, 9], [3, 0, 0, 2, 0, 0, 0, 2, 1, 1], [44, 78, 81, 73], [0, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6], [3], [64, 19], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 1, 1, 1], [5, 3], [3, 0], [45]], "fitness": -0.07914285361766815, "mapping_values": [1, 5, 5, 2, 3, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(sigma)", "other_info": {"loss": [2.3039183620732016, 2.300454586094806, 2.3012641315147815, 2.3006416949865574, 2.3000523326671227, 2.3005650113082723, 2.29929264642622, 2.3001661788455214, 2.3000059278334737, 2.300012443547771, 2.298483695053012, 2.3001277397305913, 2.300866488027314, 2.300619312611868, 2.299758233099471], "accuracy": [0.0866464152932167, 0.08928807079792023, 0.09285431355237961, 0.09047681838274002, 0.09417514503002167, 0.09655263274908066, 0.1006472036242485, 0.09153348207473755, 0.0936468094587326, 0.09932637959718704, 0.10460969805717468, 0.09853387624025345, 0.09325055778026581, 0.09747721254825592, 0.09642054885625839], "val_loss": [1.9698382105146135, 1.9694841929844447, 1.9691719327654158, 1.9691096033368791, 1.9691170964922224, 1.9691698891775948, 1.9690377371651786, 1.9689032690865653, 1.9688730239868164, 1.9689451626368932, 1.9692201614379883, 1.9694879395621163, 1.9696769714355469, 1.9699433190482003, 1.9701931817190987], "val_accuracy": [0.046666666865348816, 0.050333332270383835, 0.05766666680574417, 0.05966666713356972, 0.06266666948795319, 0.06366666406393051, 0.0663333311676979, 0.07133333384990692, 0.07400000095367432, 0.07566666603088379, 0.07333333045244217, 0.06966666877269745, 0.070333331823349, 0.06800000369548798, 0.06466666609048843]}}]