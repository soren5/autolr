[{"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [1, 3, 2, 3], [48, 57], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 2, 6, 6, 0, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.7928571701049805, "mapping_values": [1, 3, 3, 1, 2, 0, 18, 18, 10, 8, 2, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.negative(tf.math.subtract(tf.math.add(beta, grad), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(grad, tf.math.add(beta, tf.math.add(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), beta)))))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.081135637992251, 1.4182816871074464, 1.0862326084221232, 0.9193396908952544, 0.8216452062909377, 0.8017018304808328, 0.7871639527475923, 0.7047145704173803, 0.7362204475913616, 0.6903423498162126, 0.7012389863502584, 0.6536711631449789, 0.6377946409677171, 0.6610612539787807, 0.6254913075142501, 0.6231560740551503, 0.6064927714486023, 0.5993661157380415, 0.5946576003904875, 0.5713797247310624, 0.5725451403951538], "accuracy": [0.3156782388687134, 0.5077268481254578, 0.6221106648445129, 0.6667547225952148, 0.6980583667755127, 0.705058753490448, 0.705058753490448, 0.7358341217041016, 0.7152291536331177, 0.7416457533836365, 0.7322678565979004, 0.7481178045272827, 0.7655527591705322, 0.7497028112411499, 0.7574957013130188, 0.7635715007781982, 0.7746664881706238, 0.7700436115264893, 0.774270236492157, 0.7840443849563599, 0.780610203742981], "val_loss": [1.1380813462393624, 0.8751273325511387, 0.6579874583653041, 0.6170534576688494, 0.5973793608801705, 0.6632679189954486, 0.523045471736363, 0.5494210379464286, 0.5139959539685931, 0.5095939806529454, 0.5018215349742344, 0.49302637577056885, 0.5654704911368233, 0.4728832074574062, 0.4826191323144095, 0.467380200113569, 0.46293554987226215, 0.4681642992155893, 0.4598417282104492, 0.47128387859889437, 0.45197503907339914], "val_accuracy": [0.5986666679382324, 0.640999972820282, 0.7096666693687439, 0.7226666808128357, 0.7273333072662354, 0.7056666612625122, 0.7756666541099548, 0.7516666650772095, 0.7586666941642761, 0.7786666750907898, 0.7803333401679993, 0.7926666736602783, 0.7296666502952576, 0.7990000247955322, 0.7926666736602783, 0.8196666836738586, 0.8013333082199097, 0.7929999828338623, 0.8029999732971191, 0.7786666750907898, 0.8130000233650208]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [2, 3, 2, 3], [48, 57], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [1, 2, 6, 6, 0, 1, 9, 1, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 2, 3, 3, 1, 3, 2, 3, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.7928571701049805, "mapping_values": [1, 3, 3, 1, 2, 0, 20, 20, 11, 9, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.negative(tf.math.subtract(tf.math.add(beta, grad), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.add(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), grad)))), tf.math.add(beta, beta)), tf.math.add(beta, grad))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.081135637992251, 1.4182816871074464, 1.0862326084221232, 0.9193396908952544, 0.8216452062909377, 0.8017018304808328, 0.7871639527475923, 0.7047145704173803, 0.7362204475913616, 0.6903423498162126, 0.7012389863502584, 0.6536711631449789, 0.6377946409677171, 0.6610612539787807, 0.6254913075142501, 0.6231560740551503, 0.6064927714486023, 0.5993661157380415, 0.5946576003904875, 0.5713797247310624, 0.5725451403951538], "accuracy": [0.3156782388687134, 0.5077268481254578, 0.6221106648445129, 0.6667547225952148, 0.6980583667755127, 0.705058753490448, 0.705058753490448, 0.7358341217041016, 0.7152291536331177, 0.7416457533836365, 0.7322678565979004, 0.7481178045272827, 0.7655527591705322, 0.7497028112411499, 0.7574957013130188, 0.7635715007781982, 0.7746664881706238, 0.7700436115264893, 0.774270236492157, 0.7840443849563599, 0.780610203742981], "val_loss": [1.1380813462393624, 0.8751273325511387, 0.6579874583653041, 0.6170534576688494, 0.5973793608801705, 0.6632679189954486, 0.523045471736363, 0.5494210379464286, 0.5139959539685931, 0.5095939806529454, 0.5018215349742344, 0.49302637577056885, 0.5654704911368233, 0.4728832074574062, 0.4826191323144095, 0.467380200113569, 0.46293554987226215, 0.4681642992155893, 0.4598417282104492, 0.47128387859889437, 0.45197503907339914], "val_accuracy": [0.5986666679382324, 0.640999972820282, 0.7096666693687439, 0.7226666808128357, 0.7273333072662354, 0.7056666612625122, 0.7756666541099548, 0.7516666650772095, 0.7586666941642761, 0.7786666750907898, 0.7803333401679993, 0.7926666736602783, 0.7296666502952576, 0.7990000247955322, 0.7926666736602783, 0.8196666836738586, 0.8013333082199097, 0.7929999828338623, 0.8029999732971191, 0.7786666750907898, 0.8130000233650208]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [2, 3, 2, 3], [48, 57], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 2, 6, 6, 0, 1, 9, 4, 4, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 1, 0, 3, 0, 2, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [15, 38]], "fitness": -0.5671428442001343, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303824413280918, 2.299686703620853, 2.298213096830776, 2.2960928215436995, 2.2939963611267213, 2.2921068420845994, 2.2893042293254333, 2.2876868409849727, 2.2860636838029453, 2.283088170085459, 2.2823020736413184, 2.2799781631595186, 2.2782871160430362, 2.275456504137792, 2.2730782135303516, 2.2710155111183625, 2.270493827460071, 2.2670516917702703, 2.267762406910604, 2.2621710221717986, 2.2607399969840363, 2.2597015142724217, 2.2581204886544164, 2.255212067266607, 2.252452095060962, 2.2516882971623917, 2.2489554538797347, 2.2458980192739446, 2.245377031567389, 2.241499213778096, 2.2385083633627416, 2.2367813688274922, 2.235084636383651, 2.231900397859875, 2.228495470143234, 2.2261841732985497, 2.224234410186312, 2.2228291817880375, 2.218426490645635, 2.215715982249195, 2.2131405741137726, 2.2102860661230666, 2.205008153319595, 2.2040659458000174, 2.199201379894911, 2.197683451686159, 2.1922095950568403, 2.1913627340903514, 2.1867169360474605, 2.1831182886533544, 2.17882352567478, 2.1777493044243923, 2.1719258858495936, 2.167868597317586, 2.1641421528729183, 2.1588770230653154, 2.1556006532539826, 2.1494629324513843, 2.1454057604361836, 2.1431595960140166, 2.1378886994747455, 2.1312563991534033, 2.129483966936981, 2.121083299796563, 2.1152992539197353, 2.1122115751094412, 2.1035124127261153, 2.0970948745766336, 2.09557106658342, 2.0879105329671006, 2.080951201870079, 2.0750249577803053, 2.0725545241706453, 2.06121195743522, 2.056345255619594, 2.0467320203686654, 2.0430215262875437, 2.0347024639914646, 2.032413505245083, 2.019793758208426, 2.0130583657375682, 2.0091773396107686, 2.00260810914403, 1.9946736662442328, 1.9851842397365587, 1.9777135793732268, 1.973022794758151, 1.9594989471652204, 1.951612280533377, 1.9442620585701957, 1.9286158732010026, 1.9312279121262632, 1.9182432613447122, 1.9088365187687157, 1.9000133760790106, 1.890308864821123, 1.8852106570378744, 1.8718104086468925, 1.8666332792911422, 1.8527444980683312], "accuracy": [0.08598599582910538, 0.09430722147226334, 0.10302469879388809, 0.1072513535618782, 0.11055342853069305, 0.11530841141939163, 0.11808215826749802, 0.12376172095537186, 0.13380002975463867, 0.13921542465686798, 0.1418570876121521, 0.1476687341928482, 0.1508387327194214, 0.16642451286315918, 0.16800950467586517, 0.17395325005054474, 0.1736890822649002, 0.18412363529205322, 0.1826707124710083, 0.19574692845344543, 0.19653943181037903, 0.19693566858768463, 0.2114647924900055, 0.21635186672210693, 0.22255976498126984, 0.22097477316856384, 0.22480517625808716, 0.23339056968688965, 0.22639016807079315, 0.23986263573169708, 0.24725927412509918, 0.2522784173488617, 0.25003302097320557, 0.2576938271522522, 0.2697133719921112, 0.27261921763420105, 0.2716946303844452, 0.2748646140098572, 0.2775062620639801, 0.2896578907966614, 0.28741249442100525, 0.2925637364387512, 0.3015453815460205, 0.30220577120780945, 0.30960243940353394, 0.3085457682609558, 0.31898030638694763, 0.3185840845108032, 0.32505613565444946, 0.32162198424339294, 0.31845200061798096, 0.32333904504776, 0.33443403244018555, 0.3358869254589081, 0.3420948386192322, 0.34103816747665405, 0.34962356090545654, 0.35068023204803467, 0.3595297932624817, 0.3537181317806244, 0.3572843670845032, 0.3609826862812042, 0.36045435070991516, 0.3687755763530731, 0.3797384798526764, 0.3663980960845947, 0.37841764092445374, 0.38449347019195557, 0.37366265058517456, 0.38621053099632263, 0.39202219247817993, 0.39149385690689087, 0.3933430314064026, 0.3928146958351135, 0.39664509892463684, 0.40404173731803894, 0.3999471664428711, 0.4065513014793396, 0.4033813178539276, 0.40985339879989624, 0.4107779562473297, 0.40364548563957214, 0.4107779562473297, 0.41606128215789795, 0.41487252712249756, 0.4209483563899994, 0.41011756658554077, 0.4313828945159912, 0.4279487431049347, 0.42385417222976685, 0.4367983043193817, 0.43072250485420227, 0.43349623680114746, 0.43125081062316895, 0.4325716495513916, 0.4407607913017273, 0.43811914324760437, 0.45344075560569763, 0.4367983043193817, 0.45370492339134216], "val_loss": [1.9687187331063407, 1.9668668338230677, 1.9650214059012276, 1.9631882395063127, 1.9613477161952428, 1.9594977923801966, 1.9576770237513952, 1.9558232852390833, 1.9540050370352608, 1.9521850177219935, 1.9503424508231026, 1.948493548801967, 1.9466541835239954, 1.9447929518563407, 1.9429146221705846, 1.9410231454031808, 1.9391367776053292, 1.937194892338344, 1.9352622032165527, 1.9332863262721471, 1.931290830884661, 1.9292921338762556, 1.9272633280072893, 1.9251883370535714, 1.9230884143284388, 1.9209544318062919, 1.9187863894871302, 1.9165793827601842, 1.9143449919564384, 1.9120589665004186, 1.9097207614353724, 1.9073730196271623, 1.9049739156450545, 1.9025036948067802, 1.9000013215201241, 1.8974359376089913, 1.8948401723589217, 1.8921990394592285, 1.8894844055175781, 1.886735439300537, 1.8839176041739327, 1.8810363497052873, 1.8780606814793177, 1.8750287464686803, 1.8718972887311662, 1.8687126295907157, 1.8654324667794364, 1.8621015548706055, 1.8586803844996862, 1.855149269104004, 1.851543698992048, 1.8478572028023856, 1.8440701620919364, 1.8402041026524134, 1.8362297330583846, 1.8321326800755091, 1.827960423060826, 1.8236855098179408, 1.8193142073495048, 1.8148651123046875, 1.8103081158229284, 1.8055968284606934, 1.8008264814104353, 1.7959190096173967, 1.790858336857387, 1.7857370376586914, 1.780461243220738, 1.7750511850629533, 1.7695481436593192, 1.763925348009382, 1.7581419944763184, 1.7522493771144323, 1.7462904793875558, 1.740119252886091, 1.7338506834847587, 1.7273573875427246, 1.7207948139735632, 1.7140578201838903, 1.7072933401380266, 1.700307846069336, 1.6931590012141637, 1.685957602092198, 1.67865674836295, 1.6712135587419783, 1.6635607310703822, 1.6557744571140833, 1.6479429176875524, 1.6398927824837821, 1.6317097118922643, 1.6234468732561385, 1.6148836953299386, 1.6064812796456474, 1.597846303667341, 1.5890724658966064, 1.5801647050040108, 1.5711479527609689, 1.5621138640812464, 1.5528912884848458, 1.5436337334769112, 1.5342716148921423], "val_accuracy": [0.050333332270383835, 0.06266666948795319, 0.07599999755620956, 0.09200000017881393, 0.11233333498239517, 0.1289999932050705, 0.14733333885669708, 0.16599999368190765, 0.1850000023841858, 0.20499999821186066, 0.22033333778381348, 0.234333336353302, 0.24766667187213898, 0.2639999985694885, 0.2809999883174896, 0.29466667771339417, 0.3086666762828827, 0.31833332777023315, 0.32866665720939636, 0.3386666774749756, 0.3499999940395355, 0.3569999933242798, 0.3623333275318146, 0.36800000071525574, 0.37066665291786194, 0.3766666650772095, 0.3799999952316284, 0.3843333423137665, 0.3880000114440918, 0.39100000262260437, 0.39533331990242004, 0.40033334493637085, 0.4050000011920929, 0.4090000092983246, 0.41066667437553406, 0.4169999957084656, 0.42100000381469727, 0.4266666769981384, 0.43033334612846375, 0.4333333373069763, 0.43700000643730164, 0.4399999976158142, 0.44333332777023315, 0.445333331823349, 0.4480000138282776, 0.4516666531562805, 0.45366665720939636, 0.45766666531562805, 0.4593333303928375, 0.46166667342185974, 0.4663333296775818, 0.468666672706604, 0.4726666808128357, 0.4749999940395355, 0.4776666760444641, 0.48100000619888306, 0.4833333194255829, 0.48633334040641785, 0.4869999885559082, 0.4893333315849304, 0.49033331871032715, 0.492333322763443, 0.49533334374427795, 0.4963333308696747, 0.4986666738986969, 0.5016666650772095, 0.5070000290870667, 0.5113333463668823, 0.512666642665863, 0.515999972820282, 0.5180000066757202, 0.5210000276565552, 0.5253333449363708, 0.5273333191871643, 0.5289999842643738, 0.5299999713897705, 0.5333333611488342, 0.534333348274231, 0.5370000004768372, 0.5376666784286499, 0.5406666398048401, 0.5433333516120911, 0.5429999828338623, 0.5429999828338623, 0.5450000166893005, 0.546999990940094, 0.5490000247955322, 0.5496666431427002, 0.5509999990463257, 0.5529999732971191, 0.5533333420753479, 0.5553333163261414, 0.5553333163261414, 0.5559999942779541, 0.5586666464805603, 0.5606666803359985, 0.5613333582878113, 0.562666654586792, 0.5659999847412109, 0.5673333406448364]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [2, 6, 4, 9], [2, 3, 2, 3], [79, 57], [1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 0, 6, 6, 0, 5, 6, 2, 2, 3, 4, 9, 8, 1, 1, 8, 9, 0], [2, 1, 3, 3, 0, 3, 3, 1, 3, 0], [58, 45, 43, 93, 81, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 4, 2, 9], [3, 1, 3, 1], [41, 38]], "fitness": -0.5394285917282104, "mapping_values": [1, 3, 3, 1, 2, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.1719756635298832, 2.463569546640195, 2.328283582648833, 2.4076508399344645, 2.324074444848281, 2.271664178287978, 2.307257922381269], "accuracy": [0.23735305666923523, 0.1640470176935196, 0.13908334076404572, 0.16431118547916412, 0.12812046706676483, 0.1460837423801422, 0.09893012791872025], "val_loss": [3.335216317858015, 1.2964773178100586, 1.9728642872401647, 1.9973138400486536, 1.979567323412214, 1.9823643820626395, 1.97425719669887], "val_accuracy": [0.09733333438634872, 0.5406666398048401, 0.09966666996479034, 0.09733333438634872, 0.10000000149011612, 0.10000000149011612, 0.10400000214576721]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [1, 0, 2, 3], [79, 57], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [6, 4, 6, 2, 2, 3, 9, 0, 2, 1, 5, 9, 8, 9, 1, 0, 9, 0, 0, 5, 1, 7, 8, 6], [2, 3, 3, 3, 0, 3, 3, 3, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [1, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.23342856764793396, "mapping_values": [1, 3, 3, 1, 2, 1, 19, 19, 12, 7, 3, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.pow(tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), tf.math.negative(tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.square(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)), tf.math.add(beta, grad))))), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(sigma, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.2052948459138517, 2.251025408014346, 2.1756628454636906, 2.204825017304547, 2.184419516448914, 2.1980079064012092, 2.2675559834372083, 2.307586145092389, 2.3042148459526084], "accuracy": [0.2242768406867981, 0.218465194106102, 0.21754062175750732, 0.21516312658786774, 0.23854179680347443, 0.20261524617671967, 0.15717871487140656, 0.10355303436517715, 0.10051512718200684], "val_loss": [2.0142880167279924, 1.9480444363185339, 1.9744556971958704, 1.6330921309334892, 1.9665450368608748, 1.9803943634033203, 1.982693876538958, 1.9742037228175573, 1.9739185741969518], "val_accuracy": [0.13099999725818634, 0.20866666734218597, 0.10400000214576721, 0.2709999978542328, 0.09733333438634872, 0.09733333438634872, 0.10400000214576721, 0.09733333438634872, 0.10400000214576721]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [2, 6, 4, 9], [2, 3, 2, 3], [48, 57], [1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [3, 7, 0, 6, 0, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 3, 3, 3, 0, 3, 3, 3, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [90, 38]], "fitness": -0.16200000047683716, "mapping_values": [1, 3, 3, 1, 2, 0, 17, 17, 10, 7, 2, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(beta, tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.divide_no_nan(grad, tf.math.negative(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))))), tf.math.pow(grad, tf.math.add(beta, tf.math.add(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), grad)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, sigma)))", "other_info": {"loss": [4.791344767847491, 3.420980171646503, 2.3551901470101693, 2.557286659425134, 8.372536142913814, 2.307516920127259, 2.303455073930143], "accuracy": [0.1508387327194214, 0.10540219396352768, 0.1274600476026535, 0.19402985274791718, 0.09668471664190292, 0.09074098616838455, 0.09787346422672272], "val_loss": [3.7872987474714006, 1.9766246931893485, 1.9688782010759627, 2.2706797463553294, 1.9811100959777832, 1.9739533833095007, 1.973727021898542], "val_accuracy": [0.10000000149011612, 0.19833333790302277, 0.12566666305065155, 0.013333333656191826, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0], [1, 1, 0, 1, 0, 1, 0], [7, 6, 4, 9], [2, 3, 2, 3], [79, 57], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 7, 0, 6, 1, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 3, 3, 3, 0, 3, 3, 3, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [1, 3], [], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 3, 9, 2, 9], [2, 3, 3, 1], [43, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 19, 19, 11, 8, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.divide_no_nan(beta, tf.math.add(beta, grad))), tf.math.add(beta, tf.math.subtract(tf.math.subtract(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), grad), tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), grad)))), tf.math.add(beta, grad)), tf.math.add(beta, grad)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [1, 1, 0, 1, 0, 1, 0], [7, 6, 4, 9], [0, 3, 2, 3], [8, 57], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [0, 7, 0, 6, 0, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [8, 3, 2, 4, 9], [2, 3, 0, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [1, 1, 0, 1, 0, 1, 0], [7, 6, 4, 9], [2, 3, 2, 3], [79, 57], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [6, 7, 0, 6, 0, 5, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 2, 3, 3, 1, 3, 2, 3, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [9, 3, 2, 6, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 7, 3, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(alpha, beta))), tf.math.add(beta, tf.math.negative(tf.math.square(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0730418711900711, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [1, 3, 2, 3], [48, 57], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1], [6, 2, 6, 6, 0, 1, 4, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 3, 3, 2, 3, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [2, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 22, 22, 12, 10, 2, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.negative(tf.math.subtract(tf.math.add(beta, grad), tf.math.pow(tf.math.pow(grad, tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), beta))))), grad))))), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.pow(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [2, 6, 4, 9], [1, 3, 2, 3], [48, 57], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1], [3, 0, 8, 2, 0, 5, 6, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 3, 1, 3, 0, 3, 3, 3, 3, 0], [52, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [8, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 9, 9, 6, 3, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, tf.math.negative(tf.math.sqrt(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.square(tf.math.add(beta, alpha)))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(sigma, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [1, 0, 2, 3], [79, 57], [1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1], [1, 2, 6, 6, 0, 1, 1, 4, 2, 8, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [2, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 22, 22, 13, 9, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.negative(tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.subtract(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, beta))))), tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), tf.math.sqrt(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [1, 1, 1, 1, 0, 1, 0], [2, 4, 4, 9], [0, 3, 2, 3], [79, 57], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1], [1, 3, 5, 5, 2, 3, 9, 3, 2, 6, 4, 9, 8, 9, 1, 0, 9, 0, 0, 5, 1, 7, 8, 6], [3, 3, 1, 1, 0, 3, 2, 3, 3, 0, 0, 0, 5], [58, 45, 43, 93, 81, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 4, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 11, 11, 7, 4, 1, 1, 1, 0, 1, 0, 6, 3, 3, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.square(tf.math.add(grad, tf.math.multiply(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)))))), tf.math.add(beta, alpha))), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.pow(sigma, sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 3, 2, 3], [48, 57], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0], [1, 2, 6, 6, 0, 1, 9, 4, 2, 8, 9, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 3, 0, 3, 2, 2, 3, 0], [42, 22, 43, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 6, 9, 2, 9], [1, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 17, 17, 10, 7, 2, 5, 4, 2, 2, 0, 4, 3, 1, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, grad), grad), tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.sqrt(grad)), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), grad))))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3063300606313555, 2.3060503660994844, 2.306498948215509, 2.3055805548417365, 2.3063631130483535, 2.3058111522459415, 2.3043065800438183, 2.3053765537527497], "accuracy": [0.0940430611371994, 0.0956280529499054, 0.09642054885625839, 0.0944393053650856, 0.09140139818191528, 0.09826971590518951, 0.09906221181154251, 0.09747721254825592], "val_loss": [1.9764272826058524, 1.977111748286656, 1.9760187694004603, 1.9761889321463448, 1.9761809621538435, 1.9754832812717982, 1.9751081466674805, 1.9785194396972656], "val_accuracy": [0.09733333438634872, 0.09966666996479034, 0.10400000214576721, 0.09833333641290665, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [2, 3, 2, 3], [79, 73], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [5, 8, 6, 6, 0, 1, 8, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 1, 5, 3, 0, 3, 2, 3, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 3, 9, 2, 9], [2, 3, 3, 1], [43, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 3, 3, 1, 2, 0, 10, 10, 6, 4, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(alpha, alpha)), tf.math.negative(tf.math.add(beta, tf.math.subtract(grad, grad)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3046345626673346, 2.3024801690234264, 2.3029432662678686, 2.3027738657578376, 2.3026729250754094, 2.302782833332147], "accuracy": [0.08466517180204391, 0.0882314071059227, 0.09192973375320435, 0.0870426595211029, 0.09008057415485382, 0.09100515395402908], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [1, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [2, 3, 2, 3], [79, 57], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [3, 2, 1, 6, 0, 9, 9, 4, 2, 8, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 13, 43, 84, 1, 78], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [4, 3], [], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 7, 3, 2, 6, 4, 3, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.divide_no_nan(grad, tf.math.negative(grad)), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3046345626673346, 2.3024801690234264, 2.3029432662678686, 2.3027738657578376, 2.3026729250754094, 2.302782833332147], "accuracy": [0.08466517180204391, 0.0882314071059227, 0.09192973375320435, 0.0870426595211029, 0.09008057415485382, 0.09100515395402908], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0], [1, 1, 0, 1, 0, 1, 0], [7, 6, 4, 9], [1, 3, 2, 3], [48, 57], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 2, 6, 6, 0, 1, 9, 4, 2, 8, 4, 9, 8, 1, 1, 8, 9, 0], [1, 4, 3, 3, 0, 3, 2, 3, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 1], [3, 3, 0, 8], [4, 3], [], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 7, 6, 4, 2, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, sigma))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3046345626673346, 2.3024801690234264, 2.3029432662678686, 2.3027738657578376, 2.3026729250754094, 2.302782833332147], "accuracy": [0.08466517180204391, 0.0882314071059227, 0.09192973375320435, 0.0870426595211029, 0.09008057415485382, 0.09100515395402908], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [1, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [1, 3, 2, 3], [79, 57], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [6, 5, 6, 2, 2, 3, 9, 8, 2, 1, 5, 9, 8, 9, 1, 0, 9, 0, 0, 5, 1, 7, 8, 6], [1, 2, 3, 3, 1, 3, 2, 3, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [4, 3], [], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 0, 2, 9], [3, 3, 3, 1], [13, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 6, 4, 3, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.square(alpha), tf.math.divide_no_nan(beta, tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3046345626673346, 2.3024801690234264, 2.3029432662678686, 2.3027738657578376, 2.3026729250754094, 2.302782833332147], "accuracy": [0.08466517180204391, 0.0882314071059227, 0.09192973375320435, 0.0870426595211029, 0.09008057415485382, 0.09100515395402908], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [2, 6, 4, 9], [1, 3, 2, 3], [48, 57], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [8, 2, 6, 9, 0, 1, 9, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [60, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 3, 3, 1, 2, 0, 9, 9, 7, 2, 2, 5, 4, 2, 2, 0, 4, 3, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(beta, alpha))), tf.math.subtract(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3046345626673346, 2.3024801690234264, 2.3029432662678686, 2.3027738657578376, 2.3026729250754094, 2.302782833332147], "accuracy": [0.08466517180204391, 0.0882314071059227, 0.09192973375320435, 0.0870426595211029, 0.09008057415485382, 0.09100515395402908], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [1, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [1, 2, 2, 3], [79, 57], [1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [1, 2, 6, 6, 0, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 1, 3, 4, 0, 3, 0, 1, 3, 0, 0, 0, 5], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 3, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.03857142850756645, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 9, 7, 3, 1, 1, 0, 1, 0, 8, 5, 3, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, grad), tf.math.add(tf.math.divide_no_nan(alpha, tf.math.add(beta, grad)), tf.math.divide_no_nan(tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.add(beta, tf.math.add(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))))))), tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.add(sigma, sigma), sigma), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3048172259390585, 2.3031103844026046, 2.30400221729795, 2.304262700286823, 2.304623537500694, 2.305348128910944], "accuracy": [0.08413683623075485, 0.08677849918603897, 0.09008057415485382, 0.08374059200286865, 0.08757099509239197, 0.08308017253875732], "val_loss": [1.9709431103297643, 1.9713256018502372, 1.971705436706543, 1.9720733506338937, 1.9724884714399065, 1.9729869025094169], "val_accuracy": [0.038333334028720856, 0.03633333370089531, 0.03400000184774399, 0.03033333271741867, 0.029333332553505898, 0.02866666577756405]}}]