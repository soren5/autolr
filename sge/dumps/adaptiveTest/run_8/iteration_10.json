[{"genotype": [[0], [1, 0, 0, 1, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0], [7, 6, 4, 9], [0, 1, 2], [44, 57], [0, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6], [3], [1, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 0, 1, 1], [0, 3], [3, 0], [45]], "fitness": -0.7642857432365417, "mapping_values": [1, 7, 7, 4, 3, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1482998682381598, 1.7382416281607551, 1.3017939780886147, 1.0451379203210653, 0.8870186571116933, 0.875772326653266, 0.828834413529513, 0.7670768787438575, 0.703988124823227, 0.6930674205382487, 0.6674270724277171, 0.6752390043059392, 0.6408449332900823], "accuracy": [0.3053757846355438, 0.45647865533828735, 0.550521731376648, 0.6239598393440247, 0.6712455153465271, 0.6616035103797913, 0.681547999382019, 0.7020208835601807, 0.7288337349891663, 0.733060359954834, 0.7456082701683044, 0.739928662776947, 0.750759482383728], "val_loss": [1.557425090244838, 1.1468394824436732, 0.8190003974097115, 0.8005104575838361, 0.871535164969308, 0.7418521983282906, 0.5948606899806431, 0.5232620750154767, 0.5195153440747943, 0.6176785741533551, 0.5764210394450596, 0.5075656516211373, 0.49950786999293734], "val_accuracy": [0.5063333511352539, 0.5206666588783264, 0.687666654586792, 0.6880000233650208, 0.6269999742507935, 0.6673333048820496, 0.7363333106040955, 0.7720000147819519, 0.7643333077430725, 0.7120000123977661, 0.7206666469573975, 0.7523333430290222, 0.765333354473114]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [7, 6, 4, 9, 5], [0, 1, 2], [66, 57], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0], [2, 0, 0, 2, 5, 7, 0, 0, 9, 4, 5, 9], [0, 5, 2, 0, 5, 3, 3, 0], [1, 70, 89], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 1, 1], [0, 3], [3, 0], [45]], "fitness": -0.24371428787708282, "mapping_values": [1, 8, 8, 5, 3, 2, 14, 14, 10, 4, 3, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.negative(grad)), tf.math.add(beta, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))))))))))), tf.math.pow(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.1764878400045062, 2.2984942318567776, 2.3236968134372558, 2.359645159741151, 2.3050210056146216, 2.2954205392200904, 2.349412615273087, 2.3050656870072466, 2.3036910183220933, 2.3031726089750126, 2.303094807806079], "accuracy": [0.16853784024715424, 0.16893409192562103, 0.18201030790805817, 0.11028926074504852, 0.0956280529499054, 0.11676132678985596, 0.13234710693359375, 0.09668471664190292, 0.09945846349000931, 0.1006472036242485, 0.10328886657953262], "val_loss": [1.9463831356593542, 1.9213495254516602, 1.9111757959638322, 1.9754046031406947, 1.9729479381016322, 1.8372626304626465, 1.976156302860805, 1.9743473870413644, 1.9741715022495814, 1.9737390109470911, 1.97352477482387], "val_accuracy": [0.3283333480358124, 0.25600001215934753, 0.20766666531562805, 0.09066666662693024, 0.10233332961797714, 0.3610000014305115, 0.09966666996479034, 0.0976666659116745, 0.0976666659116745, 0.09700000286102295, 0.10400000214576721]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 0, 1, 1], [7, 4, 3, 9], [2, 1, 2], [44, 57], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0], [4, 6, 6, 4, 3, 5, 7, 2, 9, 5, 0, 9], [3, 0, 1, 0, 1, 4], [1, 70, 33, 54], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 1, 1, 1], [0, 3], [3, 0], [45]], "fitness": -0.24371428787708282, "mapping_values": [1, 7, 7, 4, 3, 1, 18, 18, 12, 6, 4, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.multiply(grad, tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.pow(tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, alpha)), tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))))))), tf.math.add(beta, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.1764878400045062, 2.2984942318567776, 2.3236968134372558, 2.359645159741151, 2.3050210056146216, 2.2954205392200904, 2.349412615273087, 2.3050656870072466, 2.3036910183220933, 2.3031726089750126, 2.303094807806079], "accuracy": [0.16853784024715424, 0.16893409192562103, 0.18201030790805817, 0.11028926074504852, 0.0956280529499054, 0.11676132678985596, 0.13234710693359375, 0.09668471664190292, 0.09945846349000931, 0.1006472036242485, 0.10328886657953262], "val_loss": [1.9463831356593542, 1.9213495254516602, 1.9111757959638322, 1.9754046031406947, 1.9729479381016322, 1.8372626304626465, 1.976156302860805, 1.9743473870413644, 1.9741715022495814, 1.9737390109470911, 1.97352477482387], "val_accuracy": [0.3283333480358124, 0.25600001215934753, 0.20766666531562805, 0.09066666662693024, 0.10233332961797714, 0.3610000014305115, 0.09966666996479034, 0.0976666659116745, 0.0976666659116745, 0.09700000286102295, 0.10400000214576721]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 1], [7, 6, 4, 9, 0], [3, 2, 1, 1, 3, 1], [44, 57], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1], [4, 6, 6, 2, 5, 7, 0, 0, 9, 4, 5, 9], [3, 5, 5, 1, 0, 1], [28, 70, 83], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 1, 1], [0, 3], [3, 0], [45]], "fitness": -0.24371428787708282, "mapping_values": [1, 5, 5, 2, 3, 0, 14, 14, 8, 6, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.divide_no_nan(grad, tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.add(beta, grad)), grad)), tf.math.add(alpha, tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha)))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.1764878400045062, 2.2984942318567776, 2.3236968134372558, 2.359645159741151, 2.3050210056146216, 2.2954205392200904, 2.349412615273087, 2.3050656870072466, 2.3036910183220933, 2.3031726089750126, 2.303094807806079], "accuracy": [0.16853784024715424, 0.16893409192562103, 0.18201030790805817, 0.11028926074504852, 0.0956280529499054, 0.11676132678985596, 0.13234710693359375, 0.09668471664190292, 0.09945846349000931, 0.1006472036242485, 0.10328886657953262], "val_loss": [1.9463831356593542, 1.9213495254516602, 1.9111757959638322, 1.9754046031406947, 1.9729479381016322, 1.8372626304626465, 1.976156302860805, 1.9743473870413644, 1.9741715022495814, 1.9737390109470911, 1.97352477482387], "val_accuracy": [0.3283333480358124, 0.25600001215934753, 0.20766666531562805, 0.09066666662693024, 0.10233332961797714, 0.3610000014305115, 0.09966666996479034, 0.0976666659116745, 0.0976666659116745, 0.09700000286102295, 0.10400000214576721]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 0, 1, 0, 1, 0, 1], [2, 2, 6, 5, 4, 9, 2, 0, 6, 9, 3, 0, 2, 4, 2], [3, 2, 0, 2, 0, 0, 0, 2, 1, 1], [44, 78, 81, 73], [0, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6], [3], [64, 19], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 1, 1, 1], [0, 6], [3, 0], [38]], "fitness": -0.24371428787708282, "mapping_values": [1, 8, 8, 4, 4, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.1764878400045062, 2.2984942318567776, 2.3236968134372558, 2.359645159741151, 2.3050210056146216, 2.2954205392200904, 2.349412615273087, 2.3050656870072466, 2.3036910183220933, 2.3031726089750126, 2.303094807806079], "accuracy": [0.16853784024715424, 0.16893409192562103, 0.18201030790805817, 0.11028926074504852, 0.0956280529499054, 0.11676132678985596, 0.13234710693359375, 0.09668471664190292, 0.09945846349000931, 0.1006472036242485, 0.10328886657953262], "val_loss": [1.9463831356593542, 1.9213495254516602, 1.9111757959638322, 1.9754046031406947, 1.9729479381016322, 1.8372626304626465, 1.976156302860805, 1.9743473870413644, 1.9741715022495814, 1.9737390109470911, 1.97352477482387], "val_accuracy": [0.3283333480358124, 0.25600001215934753, 0.20766666531562805, 0.09066666662693024, 0.10233332961797714, 0.3610000014305115, 0.09966666996479034, 0.0976666659116745, 0.0976666659116745, 0.09700000286102295, 0.10400000214576721]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0], [7, 6, 4, 6, 2, 1, 1], [1, 2, 3, 0, 3, 1], [44, 42, 66], [1, 0, 1, 1, 1, 0, 0, 0, 0], [1, 0, 0, 1, 1, 0, 1, 1, 1], [4, 6, 6], [5, 4, 3, 3, 4], [38, 70], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3], [5, 4], [], [0, 0, 1, 1], [0, 3], [0, 2], [45]], "fitness": -0.11571428924798965, "mapping_values": [1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 5, 4, 2, 2, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3891545838809614, 2.629188703492396, 2.61948239200261, 3.5615031096945033, 2.4663471957050405, 2.3968878027281475, 2.437569992212556, 2.4196160657452146, 2.3458885848955187, 2.3751862412824165], "accuracy": [0.2973187267780304, 0.1698586642742157, 0.1935015171766281, 0.10777968913316727, 0.09840179979801178, 0.1014397069811821, 0.09959053993225098, 0.09681680053472519, 0.09628847241401672, 0.1010434553027153], "val_loss": [1.9933502333504813, 2.306869779314314, 2.0883731842041016, 2.0871802057538713, 2.0057007925851003, 2.0687922750200545, 2.0061099188668385, 2.045757566179548, 1.9903204781668526, 2.082054001944406], "val_accuracy": [0.10233332961797714, 0.09966666996479034, 0.10400000214576721, 0.09466666728258133, 0.12200000137090683, 0.10400000214576721, 0.09833333641290665, 0.09700000286102295, 0.10400000214576721, 0.09733333438634872]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0], [0, 1, 0, 1, 1, 1, 1], [7, 2, 4, 9], [0, 1, 2], [44, 57], [0, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6], [0], [1, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 1, 1, 1], [0, 3], [2, 0], [45]], "fitness": -0.10085714608430862, "mapping_values": [1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3010468148851375, 2.302325260779326, 2.302568057020815, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.10434553027153015, 0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9730000495910645, 1.9736430985586983, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09033333510160446, 0.10000000149011612, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [1, 0, 0, 1, 0, 1, 1], [2, 1, 3, 7], [2, 1, 2], [69], [0, 0, 1], [1, 0, 0, 1, 1], [4, 9, 1, 7], [3], [1, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [7], [], [1, 1, 1, 1], [6, 3], [3, 0], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07898560166358948, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1], [0, 1, 0, 1, 0, 1, 0, 1], [2, 2, 6, 5, 4, 9, 2, 0, 6, 9, 3, 0, 2, 4, 2], [3, 1, 0, 2, 0, 0, 0, 2, 1, 1], [44, 57], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [4, 6, 6, 5, 7], [2, 0, 5, 3, 2], [64, 19], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 3, 7, 7, 9, 6], [1, 0, 1, 2], [45, 99]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 1, 10, 10, 5, 5, 1, 1, 1, 0, 1, 0, 10, 6, 4, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)))))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, beta)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1], [7, 4, 4, 9], [1, 1, 2, 0], [44, 57], [1, 1, 1, 1, 1, 0, 0, 0], [1, 0, 0, 1, 1], [4, 9, 1, 7], [5, 4, 0, 2], [1, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [1, 1, 1, 1], [0, 3], [3, 0], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 3, 4, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07898560166358948, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [2, 2, 6, 5, 4, 9, 2, 0, 6, 9, 3, 0, 2, 4, 2], [2, 2, 0, 2, 0, 0, 0, 2, 1, 1], [44, 78, 81, 73], [0, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6], [3], [64, 19], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 1, 1, 0], [1, 3], [3, 0], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 5, 5, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.pow(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [7, 6, 4, 9, 0, 0, 7, 2, 7], [3, 1, 0, 1, 3, 1], [44, 57], [0, 0, 0, 0, 0], [0, 1, 1, 1, 0], [4, 9, 7], [2, 5], [28, 70, 83], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [20], [0, 0, 1, 0], [0, 7, 9], [3, 0], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 9, 6, 2, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), tf.math.negative(tf.math.add(alpha, tf.math.negative(alpha))))), tf.math.add(alpha, tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))), alpha)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [199812.9357403342, 2.314367847671882, 2.3061717051902955, 2.3037976577785493, 2.3032117753752535, 2.302988831582181], "accuracy": [0.0956280529499054, 0.09760929644107819, 0.09470347315073013, 0.09285431355237961, 0.09800554811954498, 0.09615638852119446], "val_loss": [1.9912142072405135, 1.9790567670549666, 1.9753152302333288, 1.974163327898298, 1.973897933959961, 1.9737370354788644], "val_accuracy": [0.10400000214576721, 0.09700000286102295, 0.09966666996479034, 0.09966666996479034, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 1], [1, 1, 1, 1, 0, 1, 1, 1], [2, 2, 6, 5, 4, 9, 2, 0, 6, 9, 3, 0, 2, 4, 2], [3, 2, 0, 2, 0, 0, 0, 2, 1, 1], [44, 57], [0, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6], [3], [1, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [2], [], [0, 0, 1, 1], [0, 3], [3, 0], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0676264688372612, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1], [0, 1, 0, 1, 1, 1, 1], [7, 3, 1, 6], [0, 1, 2], [20, 57], [0, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6], [3], [1, 70], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 0, 0, 1, 1], [0, 3, 8], [3, 0], [45]], "fitness": -0.03999999910593033, "mapping_values": [1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.sqrt(sigma), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.30199001399423, 2.3037856237653096, 2.3012097101988744, 2.3020849545649753, 2.3006002811975548, 2.3014548117726186], "accuracy": [0.09774138033390045, 0.0882314071059227, 0.09430722147226334, 0.08968432247638702, 0.09272222965955734, 0.0866464152932167], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 1, 1, 1, 0], [7, 6, 4, 9], [3, 0, 3, 0, 1, 0, 0, 2, 1, 1], [44, 78, 81, 73], [0, 0, 1, 1, 1], [0, 0, 1, 1, 1], [4, 6, 6], [3, 1, 4], [64, 19], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [1, 1], [0, 3], [3, 0], [45]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(grad, alpha)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.30199001399423, 2.3037856237653096, 2.3012097101988744, 2.3020849545649753, 2.3006002811975548, 2.3014548117726186], "accuracy": [0.09774138033390045, 0.0882314071059227, 0.09430722147226334, 0.08968432247638702, 0.09272222965955734, 0.0866464152932167], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0], [7, 6, 4, 9], [0, 1, 2], [44, 57], [0, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6], [3], [1, 70], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3], [5, 5], [], [1, 0, 1, 1], [0, 3], [3, 0], [45]], "fitness": -0.03999999910593033, "mapping_values": [1, 7, 7, 4, 3, 2, 1, 1, 0, 1, 0, 5, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.30199001399423, 2.3037856237653096, 2.3012097101988744, 2.3020849545649753, 2.3006002811975548, 2.3014548117726186], "accuracy": [0.09774138033390045, 0.0882314071059227, 0.09430722147226334, 0.08968432247638702, 0.09272222965955734, 0.0866464152932167], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [2, 0, 6, 5, 4, 9, 2, 0, 6, 9, 3, 0, 2, 4, 2], [1, 2, 0, 2, 0, 0, 0, 2, 1, 1], [44, 57], [0, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6], [3], [1, 70], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3], [5, 4], [], [1, 1, 1, 1], [9, 3], [3, 0], [45]], "fitness": -0.03999999910593033, "mapping_values": [1, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 5, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.negative(tf.math.divide_no_nan(alpha, tf.math.square(tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.30199001399423, 2.3037856237653096, 2.3012097101988744, 2.3020849545649753, 2.3006002811975548, 2.3014548117726186], "accuracy": [0.09774138033390045, 0.0882314071059227, 0.09430722147226334, 0.08968432247638702, 0.09272222965955734, 0.0866464152932167], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [7, 6, 4, 9, 3, 9], [3, 1, 1, 1, 3, 1], [44, 57], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [4, 0, 6, 1, 1, 6, 2, 2, 8, 8, 4, 3, 7, 9, 8], [3, 3, 1, 2, 1, 0, 2, 0, 5, 5, 0], [28, 70, 83], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 0, 1, 1], [0, 3], [3, 0], [77]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 25, 25, 15, 10, 3, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(grad, tf.math.add(beta, grad)))), tf.math.subtract(tf.math.subtract(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(tf.math.sqrt(beta), tf.math.add(beta, alpha))))), tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(beta, tf.math.add(beta, tf.math.add(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))))))))), grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.30199001399423, 2.3037856237653096, 2.3012097101988744, 2.3020849545649753, 2.3006002811975548, 2.3014548117726186], "accuracy": [0.09774138033390045, 0.0882314071059227, 0.09430722147226334, 0.08968432247638702, 0.09272222965955734, 0.0866464152932167], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1], [2, 1, 3, 9, 6, 4, 6, 2], [1, 1, 3, 0, 0, 2, 0], [11, 50, 49, 14], [1, 1, 1, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [4, 6, 6, 3, 8, 9], [3, 3, 5, 1], [1, 70], [1, 0, 0, 1, 0], [0, 0, 1], [3, 3], [4], [], [0, 1, 1, 1], [0, 3], [3, 0], [45]], "fitness": -0.03999999910593033, "mapping_values": [1, 15, 15, 8, 7, 4, 10, 10, 6, 4, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha))))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.divide_no_nan(tf.math.divide_no_nan(grad, grad), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.30199001399423, 2.3037856237653096, 2.3012097101988744, 2.3020849545649753, 2.3006002811975548, 2.3014548117726186], "accuracy": [0.09774138033390045, 0.0882314071059227, 0.09430722147226334, 0.08968432247638702, 0.09272222965955734, 0.0866464152932167], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0], [3, 2, 6, 5, 4, 9, 2, 0, 6, 9, 3, 0, 2, 4, 2, 6, 6, 0, 4, 9], [1, 2, 0, 1, 0, 0, 0, 2, 1, 1, 1], [44, 57, 15, 64, 28, 94, 67], [1, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6], [4], [1, 70], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 0, 1, 0], [0, 8], [3, 0], [45]], "fitness": -0.03999999910593033, "mapping_values": [1, 31, 31, 20, 11, 7, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 2, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.square(tf.math.pow(alpha, grad)), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), alpha)), tf.math.multiply(tf.math.negative(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), alpha)))))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(sigma))", "other_info": {"loss": [2.30199001399423, 2.3037856237653096, 2.3012097101988744, 2.3020849545649753, 2.3006002811975548, 2.3014548117726186], "accuracy": [0.09774138033390045, 0.0882314071059227, 0.09430722147226334, 0.08968432247638702, 0.09272222965955734, 0.0866464152932167], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]