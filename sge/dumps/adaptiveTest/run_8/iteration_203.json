[{"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [8, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 95, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [45, 47, 50]], "fitness": -0.7997142672538757, "mapping_values": [1, 5, 5, 4, 1, 2, 19, 19, 12, 7, 3, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.negative(alpha), tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(grad), tf.math.add(tf.math.subtract(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), tf.math.pow(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad))), tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))))), beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.9652228275263046, 1.305267269616712, 1.0324359589626981, 0.879248966866512, 0.8291374345607352, 0.7344006160703459, 0.7078175345085647, 0.6680903189517031, 0.6593440940603368, 0.6491891641532426, 0.6544764216124752, 0.621641979225717, 0.5830907882354232, 0.5875903079853302, 0.5798697722444697, 0.5476062024006549, 0.533840398841357, 0.5364051238420758, 0.5422194453908185, 0.5254432995715209, 0.523491243932068, 0.4909257209689909, 0.49862091328883296, 0.48761186441803933, 0.4743621225141972, 0.4658708767159708], "accuracy": [0.3459252417087555, 0.5267468094825745, 0.6259410977363586, 0.6798309087753296, 0.6935675740242004, 0.7209087014198303, 0.7289658188819885, 0.7454761862754822, 0.7504953145980835, 0.7592127919197083, 0.7530049085617065, 0.76106196641922, 0.7819310426712036, 0.7827235460281372, 0.7792893648147583, 0.7922335267066956, 0.8038568496704102, 0.7960638999938965, 0.8010830879211426, 0.8005547523498535, 0.8084797263145447, 0.8173292875289917, 0.8117818236351013, 0.8136309385299683, 0.8211596608161926, 0.8235371708869934], "val_loss": [1.3609892640795027, 1.0537749017987932, 0.631210378238133, 0.6671938385282244, 0.5472700766154698, 0.57008011000497, 0.5710423333304269, 0.5139463118144444, 0.5178849697113037, 0.48355993202754427, 0.4864308663776943, 0.5182010616574969, 0.46275666781834196, 0.5130670411246163, 0.4424265963690622, 0.4283114842006138, 0.4353770613670349, 0.42621091433933805, 0.41803703137806486, 0.4930062975202288, 0.41313532420567106, 0.4357039417539324, 0.41286979402814594, 0.41331729718617033, 0.40464069162096294, 0.43541390555245535], "val_accuracy": [0.41200000047683716, 0.5823333263397217, 0.7266666889190674, 0.7103333473205566, 0.7639999985694885, 0.7459999918937683, 0.7419999837875366, 0.7739999890327454, 0.768666684627533, 0.7926666736602783, 0.7820000052452087, 0.7639999985694885, 0.8003333210945129, 0.7730000019073486, 0.8096666932106018, 0.8236666917800903, 0.8090000152587891, 0.8183333277702332, 0.8223333358764648, 0.7910000085830688, 0.8266666531562805, 0.8009999990463257, 0.8130000233650208, 0.8080000281333923, 0.8246666789054871, 0.8029999732971191]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [8, 5, 3, 2, 0, 6, 3, 8, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 1, 0, 3, 2, 3, 3, 0], [86, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [45, 47, 50]], "fitness": -0.7997142672538757, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.9652228275263046, 1.305267269616712, 1.0324359589626981, 0.879248966866512, 0.8291374345607352, 0.7344006160703459, 0.7078175345085647, 0.6680903189517031, 0.6593440940603368, 0.6491891641532426, 0.6544764216124752, 0.621641979225717, 0.5830907882354232, 0.5875903079853302, 0.5798697722444697, 0.5476062024006549, 0.533840398841357, 0.5364051238420758, 0.5422194453908185, 0.5254432995715209, 0.523491243932068, 0.4909257209689909, 0.49862091328883296, 0.48761186441803933, 0.4743621225141972, 0.4658708767159708], "accuracy": [0.3459252417087555, 0.5267468094825745, 0.6259410977363586, 0.6798309087753296, 0.6935675740242004, 0.7209087014198303, 0.7289658188819885, 0.7454761862754822, 0.7504953145980835, 0.7592127919197083, 0.7530049085617065, 0.76106196641922, 0.7819310426712036, 0.7827235460281372, 0.7792893648147583, 0.7922335267066956, 0.8038568496704102, 0.7960638999938965, 0.8010830879211426, 0.8005547523498535, 0.8084797263145447, 0.8173292875289917, 0.8117818236351013, 0.8136309385299683, 0.8211596608161926, 0.8235371708869934], "val_loss": [1.3609892640795027, 1.0537749017987932, 0.631210378238133, 0.6671938385282244, 0.5472700766154698, 0.57008011000497, 0.5710423333304269, 0.5139463118144444, 0.5178849697113037, 0.48355993202754427, 0.4864308663776943, 0.5182010616574969, 0.46275666781834196, 0.5130670411246163, 0.4424265963690622, 0.4283114842006138, 0.4353770613670349, 0.42621091433933805, 0.41803703137806486, 0.4930062975202288, 0.41313532420567106, 0.4357039417539324, 0.41286979402814594, 0.41331729718617033, 0.40464069162096294, 0.43541390555245535], "val_accuracy": [0.41200000047683716, 0.5823333263397217, 0.7266666889190674, 0.7103333473205566, 0.7639999985694885, 0.7459999918937683, 0.7419999837875366, 0.7739999890327454, 0.768666684627533, 0.7926666736602783, 0.7820000052452087, 0.7639999985694885, 0.8003333210945129, 0.7730000019073486, 0.8096666932106018, 0.8236666917800903, 0.8090000152587891, 0.8183333277702332, 0.8223333358764648, 0.7910000085830688, 0.8266666531562805, 0.8009999990463257, 0.8130000233650208, 0.8080000281333923, 0.8246666789054871, 0.8029999732971191]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [8, 5, 3, 4, 0, 6, 6, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 95, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [90, 47, 50]], "fitness": -0.2842857241630554, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 10, 7, 2, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.negative(alpha), tf.math.add(beta, grad)), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), tf.math.subtract(tf.math.add(beta, grad), beta)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2647969279983937, 2.20985607876675, 2.3960325607707427, 2.3036351956239134, 2.303033277044018, 2.3031983655819475, 2.302626943323732], "accuracy": [0.2238806039094925, 0.20195482671260834, 0.1290450394153595, 0.1006472036242485, 0.09655263274908066, 0.09272222965955734, 0.10038304328918457], "val_loss": [1.9045424461364746, 2.0896568298339844, 1.974198273250035, 1.9737015451703752, 1.97364228112357, 1.9736336980547224, 1.973174980708531], "val_accuracy": [0.23233333230018616, 0.27900001406669617, 0.09833333641290665, 0.09833333641290665, 0.10000000149011612, 0.09733333438634872, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [8, 57], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 0, 1, 3, 2], [90, 47, 50]], "fitness": -0.2842857241630554, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2647969279983937, 2.20985607876675, 2.3960325607707427, 2.3036351956239134, 2.303033277044018, 2.3031983655819475, 2.302626943323732], "accuracy": [0.2238806039094925, 0.20195482671260834, 0.1290450394153595, 0.1006472036242485, 0.09655263274908066, 0.09272222965955734, 0.10038304328918457], "val_loss": [1.9045424461364746, 2.0896568298339844, 1.974198273250035, 1.9737015451703752, 1.97364228112357, 1.9736336980547224, 1.973174980708531], "val_accuracy": [0.23233333230018616, 0.27900001406669617, 0.09833333641290665, 0.09833333641290665, 0.10000000149011612, 0.09733333438634872, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [8, 57], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [5, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0], [0, 4, 9, 3, 9], [1, 1, 0, 1, 3, 2], [90, 47, 50]], "fitness": -0.28028571605682373, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2669615730586195, 2.138031655298862, 2.483040402200417, 2.3054124296553904, 2.303574052768345, 2.3032591834186076, 2.3023759041165066], "accuracy": [0.22322018444538116, 0.22784309089183807, 0.16193369030952454, 0.09893012791872025, 0.09325055778026581, 0.10091137140989304, 0.10289261490106583], "val_loss": [1.9719356809343611, 1.6733958380562919, 1.9773176738194056, 1.9743317876543318, 1.9737554277692522, 1.9735665321350098, 1.9720627239772253], "val_accuracy": [0.1836666613817215, 0.2759999930858612, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.10233332961797714, 0.11699999868869781]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [3, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 0, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [1, 5, 9, 3, 9], [3, 1, 3, 1], [90, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 6, 5, 1, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.square(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.3026371635796767, 2.3027423021422084, 2.3027204916446027, 2.3027219475378464, 2.302729318265067, 2.3027938575225657], "accuracy": [0.09549596905708313, 0.09325055778026581, 0.09589222073554993, 0.0948355570435524, 0.09232597798109055, 0.09721305221319199], "val_loss": [1.97362334387643, 1.9736608096531458, 1.9736546788896834, 1.9736619676862444, 1.973653725215367, 1.973665714263916], "val_accuracy": [0.10400000214576721, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [3, 0, 0, 3, 1, 0], [5, 57], [0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [8, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1], [0, 3, 9, 3, 7, 2, 0, 7, 4, 8, 2], [3, 1, 3, 1, 2, 0, 3], [90, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 1, 1, 0, 0, 0, 0, 18, 11, 7, 2], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.square(tf.math.add(beta, tf.math.multiply(alpha, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.math.negative(tf.math.add(tf.math.pow(tf.math.sqrt(tf.math.add(alpha, beta)), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), sigma))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [8, 57], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [8, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0, 0, 0], [3, 3, 0, 7, 5, 6], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 8, 9, 3, 9], [3, 1, 0, 1, 3, 2], [90, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 11, 7, 6, 1, 0, 3, 3, 0, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1248957770.46704, 23494205630.43614, 109534453858.46414, 305091390353.49835, 651563636495.5203, 1194674432346.518], "accuracy": [0.09615638852119446, 0.10011887550354004, 0.09866596013307571, 0.10130762308835983, 0.09972262382507324, 0.1006472036242485], "val_loss": [4726068662.857142, 37797281792.0, 127554706285.71428, 302336732598.8571, 590470877769.1428, 1020346349275.4286], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [8, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 0, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 95, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 9, 3, 9], [3, 1, 3, 1, 3, 2], [45, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 2, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08255184441804886, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [0, 0, 0, 3, 1, 0], [5, 57, 84], [0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [8, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 9, 3, 9], [1, 1, 3, 1], [45, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 3, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.square(tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [31476935187.994976, 454146983160.45966, 1944464443609.7573, 5207926830217.552, 10881013097306.045, 19670513516115.52], "accuracy": [0.09615638852119446, 0.10011887550354004, 0.09866596013307571, 0.10130762308835983, 0.09972262382507324, 0.10077928751707077], "val_loss": [101833537243.42857, 692667510198.8572, 2210264065170.2856, 5092456679716.571, 9776385153901.715, 16699672906020.572], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 6, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [90, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 9, 8, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(grad, tf.math.pow(grad, tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.square(grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))))), tf.math.add(beta, grad))), tf.math.add(tf.math.add(beta, beta), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08255184441804886, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [8, 2, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [5, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [8, 3, 5, 3, 4, 6, 7, 9, 6, 3, 9], [3, 1, 3, 1, 1, 3], [90, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 17, 11, 6, 2], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(tf.math.square(tf.math.multiply(tf.math.pow(tf.math.divide_no_nan(sigma, tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(sigma, alpha)), tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), alpha))), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [9, 6, 2, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [8, 9, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 95, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 8, 9, 3, 9], [3, 1, 3, 1], [90, 17, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 0, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1248957770.46704, 23494205630.43614, 109534453858.46414, 305091390353.49835, 651563636495.5203, 1194674432346.518], "accuracy": [0.09615638852119446, 0.10011887550354004, 0.09866596013307571, 0.10130762308835983, 0.09972262382507324, 0.1006472036242485], "val_loss": [4726068662.857142, 37797281792.0, 127554706285.71428, 302336732598.8571, 590470877769.1428, 1020346349275.4286], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [74, 57], [0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [8, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 1, 3, 1], [45, 99, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 4, 0, 2, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.square(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.30250055367023, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [8, 57], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [8, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [7, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 5, 3, 9], [3, 1, 0, 1, 3, 2], [90, 25, 50]], "fitness": -0.05000000074505806, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 7, 5, 2, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.square(tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), sigma)), alpha))", "other_info": {"loss": [2.302762811210067, 2.302937777129619, 2.302190491520513, 2.300469887995087, 2.3002771098993837, 2.301962596707891, 2.301412247962735, 2.3026314864084942, 2.3019068370232603, 2.3018736553985715, 2.3013796291457127, 2.3019645364293018, 2.3015163329614072, 2.3017594025135355, 2.3007864067504404, 2.3018579200872606, 2.301000021546666, 2.3010840119624008, 2.3007813358760356, 2.30135423745682, 2.3016324499893845, 2.3009000971112283, 2.299147513942192, 2.3010687695486736, 2.300862586194372, 2.301594610306187, 2.3001327369789704, 2.2986428621753396, 2.30005914956162, 2.3002021097000074, 2.299849138693204, 2.2997377849352625, 2.2990949609575333, 2.2997919766815693, 2.299261527621373, 2.299476610088487, 2.299592563363114, 2.2999696777859193, 2.299122194367755, 2.2985031300248595, 2.3005999871028364, 2.2989989629495318, 2.2995655539800715, 2.2998905707155126, 2.2994162968010903, 2.299665525557579, 2.2983161590953056, 2.2981980054480227, 2.2975302603518437, 2.298669822022994, 2.2982574194146186, 2.299665687578922, 2.2975523273438796, 2.2978899760442153, 2.298273288310873], "accuracy": [0.0874389111995697, 0.08902391046285629, 0.09021265059709549, 0.09496764093637466, 0.09087307006120682, 0.09509972482919693, 0.09140139818191528, 0.08994849026203156, 0.08981640636920929, 0.0886276587843895, 0.09126931428909302, 0.09232597798109055, 0.09126931428909302, 0.09259014576673508, 0.09245806187391281, 0.09338264167308807, 0.09457138925790787, 0.09457138925790787, 0.09338264167308807, 0.09311848133802414, 0.09074098616838455, 0.09047681838274002, 0.09734513610601425, 0.09893012791872025, 0.09734513610601425, 0.09126931428909302, 0.0940430611371994, 0.10051512718200684, 0.09721305221319199, 0.09377889335155487, 0.09747721254825592, 0.09602430462837219, 0.09311848133802414, 0.09628847241401672, 0.09919429570436478, 0.09642054885625839, 0.09602430462837219, 0.09800554811954498, 0.10460969805717468, 0.10038304328918457, 0.09721305221319199, 0.10170386731624603, 0.0952318087220192, 0.0956280529499054, 0.09998679161071777, 0.09681680053472519, 0.1022322028875351, 0.10038304328918457, 0.10553427785634995, 0.09536388516426086, 0.10355303436517715, 0.09972262382507324, 0.1010434553027153, 0.10196803510189056, 0.1006472036242485], "val_loss": [1.9705001967293876, 1.9704121862139021, 1.9703279903956823, 1.970252173287528, 1.9701792853219169, 1.9700981548854284, 1.9700279235839844, 1.9699604851858956, 1.969883646283831, 1.9698044231959753, 1.9697294235229492, 1.9696581023080009, 1.969580854688372, 1.969505991254534, 1.9694287436349052, 1.9693454333714075, 1.9692690031869071, 1.9691895076206751, 1.969118254525321, 1.969043459211077, 1.9689679145812988, 1.9688895089285714, 1.9688116482325964, 1.9687413488115584, 1.9686705044337682, 1.9686056545802526, 1.9685326984950475, 1.9684609004429408, 1.968395505632673, 1.9683346067156111, 1.9682660102844238, 1.9682107652936662, 1.968144416809082, 1.9680835178920202, 1.9680210522242956, 1.9679600170680456, 1.9678921699523926, 1.9678302492414201, 1.967766489301409, 1.9677003451756068, 1.9676342691693987, 1.9675771849496024, 1.9675145830426897, 1.9674559320722307, 1.9674008914402552, 1.967348643711635, 1.967294488634382, 1.967235769544329, 1.9671872002737862, 1.96713011605399, 1.9670773914882116, 1.9670280047825404, 1.9669720104762487, 1.9669184684753418, 1.9668634278433663], "val_accuracy": [0.039000000804662704, 0.03966666758060455, 0.0403333343565464, 0.041333332657814026, 0.0416666679084301, 0.04266666620969772, 0.04333333298563957, 0.04333333298563957, 0.043666668236255646, 0.044333335012197495, 0.04466666653752327, 0.04533333331346512, 0.045666664838790894, 0.045666664838790894, 0.045666664838790894, 0.04600000008940697, 0.04600000008940697, 0.047333333641290665, 0.04800000041723251, 0.04899999871850014, 0.04899999871850014, 0.049666665494441986, 0.05000000074505806, 0.050333332270383835, 0.05233333259820938, 0.05233333259820938, 0.05366666615009308, 0.05366666615009308, 0.05433333292603493, 0.05433333292603493, 0.054666668176651, 0.054999999701976776, 0.05533333495259285, 0.055666666477918625, 0.055666666477918625, 0.055666666477918625, 0.055666666477918625, 0.056333333253860474, 0.05700000002980232, 0.057999998331069946, 0.059333331882953644, 0.059333331882953644, 0.059333331882953644, 0.05966666713356972, 0.05966666713356972, 0.060333333909511566, 0.060333333909511566, 0.060333333909511566, 0.06066666543483734, 0.061666667461395264, 0.061666667461395264, 0.06133333221077919, 0.06133333221077919, 0.06133333221077919, 0.061666667461395264]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 6, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 1, 0, 3, 2, 3, 3, 0], [46, 16, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 3, 3, 9, 3, 9], [3, 1, 3, 1], [90, 47, 50]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 1, 1, 0, 0, 0, 0, 10, 7, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(beta, grad))), tf.math.multiply(tf.math.add(beta, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), sigma), alpha), tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.302796470396208, 2.303068883761344, 2.302414878704891, 2.3007653304976623, 2.300646299163915, 2.3024349444420458], "accuracy": [0.08730682730674744, 0.08889182657003403, 0.08981640636920929, 0.0948355570435524, 0.09008057415485382, 0.09430722147226334], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [8, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [90, 47, 50]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302796470396208, 2.303068883761344, 2.302414878704891, 2.3007653304976623, 2.300646299163915, 2.3024349444420458], "accuracy": [0.08730682730674744, 0.08889182657003403, 0.08981640636920929, 0.0948355570435524, 0.09008057415485382, 0.09430722147226334], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [76, 57], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1], [8, 5, 3, 4, 2, 6, 6, 5, 2, 0, 4, 9, 8, 1, 1, 8, 9, 0], [1, 0, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 95, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [0, 3], [], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [45, 47, 50]], "fitness": -0.03999999910593033, "mapping_values": [1, 5, 5, 4, 1, 2, 26, 26, 18, 8, 5, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.square(tf.math.add(tf.math.negative(tf.math.pow(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))))), grad), tf.math.add(beta, tf.math.subtract(tf.math.subtract(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad))))), tf.math.add(beta, beta)), tf.math.negative(tf.math.add(beta, grad)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302796470396208, 2.303068883761344, 2.302414878704891, 2.3007653304976623, 2.300646299163915, 2.3024349444420458], "accuracy": [0.08730682730674744, 0.08889182657003403, 0.08981640636920929, 0.0948355570435524, 0.09008057415485382, 0.09430722147226334], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 7, 0, 9], [1, 0, 0, 3, 1, 0], [5, 57, 98], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [8, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [5, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 9, 9], [3, 1, 3, 1], [45, 47, 50]], "fitness": -0.03999999910593033, "mapping_values": [1, 8, 8, 6, 2, 3, 3, 3, 2, 1, 0, 5, 4, 2, 2, 0, 4, 3, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), tf.math.add(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302796470396208, 2.303068883761344, 2.302414878704891, 2.3007653304976623, 2.300646299163915, 2.3024349444420458], "accuracy": [0.08730682730674744, 0.08889182657003403, 0.08981640636920929, 0.0948355570435524, 0.09008057415485382, 0.09430722147226334], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 0, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [3, 3], [], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [90, 47, 50]], "fitness": -0.03999999910593033, "mapping_values": [1, 5, 5, 4, 1, 2, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.add(beta, beta)), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.302796470396208, 2.303068883761344, 2.302414878704891, 2.3007653304976623, 2.300646299163915, 2.3024349444420458], "accuracy": [0.08730682730674744, 0.08889182657003403, 0.08981640636920929, 0.0948355570435524, 0.09008057415485382, 0.09430722147226334], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]