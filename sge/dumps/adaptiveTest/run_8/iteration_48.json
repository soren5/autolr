[{"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [1, 3, 2, 3], [48, 57], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 2, 6, 6, 0, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.7928571701049805, "mapping_values": [1, 3, 3, 1, 2, 0, 18, 18, 10, 8, 2, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.negative(tf.math.subtract(tf.math.add(beta, grad), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(grad, tf.math.add(beta, tf.math.add(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), beta)))))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.093708647870432, 1.3599316199631062, 1.0848264110212738, 0.9058015751974096, 0.8394863675724262, 0.7960367211103911, 0.7655653639665416, 0.7037890793987159, 0.6964283071772266, 0.6720694524264685, 0.675798752524865, 0.6214045812157497, 0.6192776741541891, 0.616332233857485, 0.643576495368105, 0.5776698344797112, 0.6006896194528674, 0.5819491167361978, 0.5797485135660007, 0.5692298561905385, 0.5545019197378963], "accuracy": [0.31264033913612366, 0.5317659378051758, 0.6160348653793335, 0.665830135345459, 0.691850483417511, 0.695813000202179, 0.7103421092033386, 0.7351737022399902, 0.7384757399559021, 0.7446836829185486, 0.7416457533836365, 0.7667415142059326, 0.7626469135284424, 0.7689869403839111, 0.7584202885627747, 0.7812706232070923, 0.7714964747428894, 0.7876105904579163, 0.7794214487075806, 0.7878747582435608, 0.7903843522071838], "val_loss": [1.159824984414237, 1.0716063635689872, 0.6681200776781354, 0.6033351080758231, 0.6526196002960205, 0.6359524726867676, 0.5407070943287441, 0.5506234169006348, 0.5204177243368966, 0.5063557284218925, 0.49407449790409635, 0.4885267700467791, 0.5135234934943063, 0.5962683813912528, 0.4707202570778983, 0.46177382128579275, 0.48354693821498324, 0.4699428251811436, 0.46256991795131136, 0.49823055948529926, 0.45522795404706684], "val_accuracy": [0.6066666841506958, 0.5479999780654907, 0.7023333311080933, 0.7369999885559082, 0.7053333520889282, 0.7039999961853027, 0.7723333239555359, 0.7586666941642761, 0.7573333382606506, 0.781333327293396, 0.7933333516120911, 0.79666668176651, 0.7590000033378601, 0.7233333587646484, 0.8003333210945129, 0.8056666851043701, 0.7956666946411133, 0.7990000247955322, 0.7993333339691162, 0.7746666669845581, 0.8036666512489319]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [1, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [2, 3, 2, 3], [48, 57], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 2, 6, 6, 0, 1, 9, 1, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 3, 3, 1, 3, 2, 3, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [15, 38]], "fitness": -0.6797142624855042, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.add(sigma, sigma)))", "other_info": {"loss": [2.3009017358098944, 2.296895297668582, 2.2919973358108447, 2.2899509815255867, 2.285152503543794, 2.2803564234463893, 2.27607206623741, 2.2727507121527375, 2.269045131963242, 2.2659428319627457, 2.2621230591620436, 2.2571071638737874, 2.2519078558903045, 2.247861660703015, 2.2432682934280996, 2.2380491064177717, 2.2336906762942506, 2.229278499014767, 2.2235991355529188, 2.216564995344084, 2.2099336702054315, 2.202341219500591, 2.1988267501772607, 2.190224166968873, 2.1851835920353766, 2.1783826310542342, 2.1695705183178062, 2.1613406082264675, 2.154396490854846, 2.1432795138202243, 2.1342990848728696, 2.1252715354267444, 2.112285122249766, 2.104016910375873, 2.0899573599956827, 2.0817769031010727, 2.068721560124377, 2.0552200803730263, 2.0413365251966646, 2.0238859824784097, 2.015502335168367, 1.998024560976589, 1.980637522563171, 1.967793786498959, 1.948898846667598, 1.9339954495949594, 1.911984450466613, 1.8913736848499891, 1.876760666412275, 1.8589225018643243, 1.840855446993604, 1.8211893837575694, 1.8051177639420226, 1.7772431415951626, 1.7579850607292449, 1.7428752059996986, 1.7268311290252225, 1.7034425721932491, 1.6879821401057447, 1.6585404635294474, 1.6450509924253123, 1.6257960386657917, 1.6063292302538643, 1.5884695627024585, 1.5710236024327517, 1.5551117826147385, 1.5274901603427404, 1.5196388308650168, 1.5051504010301398, 1.4849450080276023, 1.4697148469555348, 1.4563005176501866, 1.4383371669728726, 1.4321539000182528, 1.4094450689498947, 1.3919070665752253, 1.3865799797272496, 1.3771992740598353, 1.3566444092706336, 1.3474888095388386, 1.347105725172756, 1.3258265521091446, 1.3199536429420202, 1.302771528509425, 1.2914111763022407, 1.2890771887856955, 1.2857293026432495, 1.2699660816685148, 1.2586568257024873, 1.2592350392687386, 1.2348837682583926, 1.2269059322167224, 1.221673946764176, 1.2129761293626906, 1.2092858828951607, 1.1992315631327832, 1.1918308884948552, 1.1869301706997317, 1.1876033927786225, 1.179834483983321], "accuracy": [0.0936468094587326, 0.10645885765552521, 0.1154404953122139, 0.1212521493434906, 0.13538502156734467, 0.15031039714813232, 0.15572579205036163, 0.16814158856868744, 0.17936864495277405, 0.18782195448875427, 0.19310526549816132, 0.2040681540966034, 0.2218993455171585, 0.22586184740066528, 0.24197596311569214, 0.24659886956214905, 0.2620525658130646, 0.2673358917236328, 0.26720380783081055, 0.2818650007247925, 0.2985074520111084, 0.308149516582489, 0.3032624423503876, 0.3199048936367035, 0.3206973969936371, 0.32122573256492615, 0.33786818385124207, 0.3427552580833435, 0.34843480587005615, 0.35424646735191345, 0.3564918637275696, 0.3556993901729584, 0.36903974413871765, 0.3711530864238739, 0.38581427931785583, 0.38053098320961, 0.39043718576431274, 0.39506009221076965, 0.4010038375854492, 0.41368380188941956, 0.4041738212108612, 0.40707963705062866, 0.4177783727645874, 0.4241183400154114, 0.43204331398010254, 0.4275524914264679, 0.4367983043193817, 0.4449874460697174, 0.44010037183761597, 0.45489367842674255, 0.4501386880874634, 0.45608243346214294, 0.46044114232063293, 0.46651697158813477, 0.4683661460876465, 0.47127196192741394, 0.4694227874279022, 0.4791969358921051, 0.4799894392490387, 0.4924052357673645, 0.4935939908027649, 0.49412229657173157, 0.4962356388568878, 0.5007264614105225, 0.5048210024833679, 0.5095760226249695, 0.5160480737686157, 0.5177651643753052, 0.5163122415542603, 0.5275393128395081, 0.5159159898757935, 0.5275393128395081, 0.5300488471984863, 0.5295205116271973, 0.5355963706970215, 0.5423325896263123, 0.5418042540550232, 0.5424646735191345, 0.5455026030540466, 0.5525029897689819, 0.5507858991622925, 0.5604279637336731, 0.5522388219833374, 0.5624092221260071, 0.5633337497711182, 0.5650508403778076, 0.5604279637336731, 0.5672962665557861, 0.5786554217338562, 0.5698058605194092, 0.574560821056366, 0.5824857950210571, 0.583410382270813, 0.5836745500564575, 0.5769383311271667, 0.5908070206642151, 0.5921278595924377, 0.5915995240211487, 0.587769091129303, 0.5983357429504395], "val_loss": [1.9668701035635812, 1.963153907230922, 1.9594920703342982, 1.9558109555925642, 1.9520835876464844, 1.9483951841081892, 1.9446586200169154, 1.940920625414167, 1.9371134213038854, 1.9331906182425362, 1.9291801452636719, 1.9250919478280204, 1.9209034102303642, 1.9165201868329729, 1.9120279720851354, 1.9072895050048828, 1.902480125427246, 1.897486618586949, 1.8922626631600517, 1.8867731775556291, 1.8810326712472099, 1.8749966621398926, 1.8686982563563757, 1.8620422227042062, 1.8551215444292342, 1.8479101317269462, 1.8402295112609863, 1.8321740967886788, 1.8238005638122559, 1.8149522372654505, 1.805741446358817, 1.7961158071245467, 1.7858917372567313, 1.7752784320286341, 1.764134338923863, 1.7525324821472168, 1.7404145513262068, 1.7277943747384208, 1.7145771980285645, 1.7007615566253662, 1.6866517407553536, 1.6718663147517614, 1.6564240115029472, 1.6406099115099226, 1.6242034435272217, 1.6072991916111536, 1.5897841453552246, 1.5717412403651647, 1.5534170695713587, 1.5347539356776647, 1.515667404447283, 1.4962939534868513, 1.4768978187016077, 1.4569691249302454, 1.4368410451071603, 1.4169156551361084, 1.3969618252345495, 1.377023151942662, 1.357011352266584, 1.3367279597691126, 1.3169111864907401, 1.2971933569226946, 1.277808598109654, 1.2588215555463518, 1.2400386333465576, 1.2218524728502547, 1.203702415738787, 1.18608934538705, 1.1691341059548515, 1.1523411614554269, 1.136256217956543, 1.1207037312643868, 1.1053473268236433, 1.0910349914005824, 1.0767154012407576, 1.0626461165291923, 1.0493132046290807, 1.0363845143999373, 1.0240836484091622, 1.0119747434343611, 1.0006913798195975, 0.9893980707441058, 0.978686911719186, 0.9682575634547642, 0.9580245358603341, 0.9485094206673759, 0.9393937587738037, 0.930257763181414, 0.9217126710074288, 0.9135174410683768, 0.9050595419747489, 0.8968473161969867, 0.8889662878853934, 0.8815929549080985, 0.8744309289114816, 0.8672951459884644, 0.860533595085144, 0.8540326186588832, 0.8480390650885445, 0.8419419016156878], "val_accuracy": [0.06266666948795319, 0.09066666662693024, 0.12966667115688324, 0.1653333306312561, 0.20466665923595428, 0.2303333282470703, 0.2630000114440918, 0.2953333258628845, 0.3166666626930237, 0.34200000762939453, 0.3566666543483734, 0.36800000071525574, 0.3773333430290222, 0.38366666436195374, 0.3916666805744171, 0.40033334493637085, 0.406333327293396, 0.41499999165534973, 0.41999998688697815, 0.42633333802223206, 0.4346666634082794, 0.43966665863990784, 0.4480000138282776, 0.4533333480358124, 0.45899999141693115, 0.46533334255218506, 0.4703333377838135, 0.476666659116745, 0.48233333230018616, 0.4880000054836273, 0.49133333563804626, 0.4963333308696747, 0.503000020980835, 0.5080000162124634, 0.5143333077430725, 0.5199999809265137, 0.5253333449363708, 0.531000018119812, 0.5356666445732117, 0.5403333306312561, 0.5423333048820496, 0.5456666946411133, 0.5479999780654907, 0.550000011920929, 0.5550000071525574, 0.5583333373069763, 0.5600000023841858, 0.562666654586792, 0.5663333535194397, 0.5709999799728394, 0.5726666450500488, 0.5753333568572998, 0.57833331823349, 0.5773333311080933, 0.5766666531562805, 0.578000009059906, 0.5839999914169312, 0.5853333473205566, 0.5870000123977661, 0.5893333554267883, 0.5910000205039978, 0.5923333168029785, 0.593999981880188, 0.5979999899864197, 0.6013333201408386, 0.6050000190734863, 0.609000027179718, 0.612333357334137, 0.6169999837875366, 0.6209999918937683, 0.625333309173584, 0.628000020980835, 0.6336666941642761, 0.6389999985694885, 0.6430000066757202, 0.6446666717529297, 0.6489999890327454, 0.6526666879653931, 0.6583333611488342, 0.6613333225250244, 0.6626666784286499, 0.6656666398048401, 0.6679999828338623, 0.6706666946411133, 0.6729999780654907, 0.6756666898727417, 0.6786666512489319, 0.6783333420753479, 0.6813333630561829, 0.684333324432373, 0.6856666803359985, 0.6869999766349792, 0.6893333196640015, 0.6886666417121887, 0.6913333535194397, 0.6913333535194397, 0.6933333277702332, 0.6946666836738586, 0.6936666369438171, 0.6946666836738586]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [1, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [2, 3, 2, 3], [48, 57], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 2, 6, 6, 0, 1, 9, 1, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 3, 0, 1, 0, 3, 0, 2, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [15, 38]], "fitness": -0.5691428780555725, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.301703210677516, 2.2996588034510785, 2.2966621510970864, 2.296592979446268, 2.2937946684876014, 2.2908776366967314, 2.2885326893574307, 2.2871229489875304, 2.285594997184309, 2.2845850480845136, 2.283028663031382, 2.280214473918098, 2.277441533958718, 2.2760611072649115, 2.2740721747922765, 2.2721275728392234, 2.270058777322544, 2.2690168624036993, 2.2666305871829224, 2.263456513742808, 2.260662993860755, 2.257326539449877, 2.2577541848813634, 2.2544289719804937, 2.253826963714148, 2.2513195058185, 2.248886645950299, 2.246659643661707, 2.2454846770677426, 2.241245922836346, 2.2392458271404, 2.237345490835409, 2.233317582079165, 2.232829814731264, 2.2283417288936787, 2.2281747006973207, 2.2246094287866773, 2.2210794863463423, 2.2186065000738875, 2.2135664276742286, 2.2133101374639135, 2.2089539760170895, 2.2054068225643433, 2.203683890214355, 2.199929103560341, 2.197214970452013, 2.1909270456296706, 2.186978176175139, 2.185375004774544, 2.181259703154357, 2.1789721822883505, 2.1741034447666583, 2.171818464596856, 2.1652242105713517, 2.160981190722648, 2.158190860850322, 2.156076843397508, 2.149226577731329, 2.146516709106631, 2.138625608317494, 2.135392264509875, 2.1309809626180103, 2.124873655063759, 2.120306998447987, 2.1157382238086, 2.110740607582488, 2.101883446803387, 2.09954877479784, 2.0953107719423905, 2.086748742660464, 2.0802447672108175, 2.0753623625826227, 2.0690207654584936, 2.0627431068689974, 2.0548612462405154, 2.047530037521324, 2.041863663258601, 2.037580258464297, 2.0255677743185436, 2.0200133041824726, 2.0184805603264158, 2.0063542315453238, 1.999697411033566, 1.9893736379053049, 1.981000384508485, 1.9756114856520695, 1.9704024111353853, 1.9610492671721678, 1.9494891540800434, 1.9447424299823075, 1.9316982749808718, 1.922770518227465, 1.9180231875180411, 1.9044214972195104, 1.8977250164966888, 1.8903809261517266, 1.8783863733756685, 1.8698585914693189, 1.865226997376244, 1.8550749899547145], "accuracy": [0.09206181764602661, 0.09932637959718704, 0.10170386731624603, 0.10474177449941635, 0.11517632752656937, 0.12072381377220154, 0.12032756209373474, 0.13313961029052734, 0.13313961029052734, 0.1372341811656952, 0.13802668452262878, 0.14449875056743622, 0.15189538896083832, 0.15678246319293976, 0.1620657742023468, 0.1690661758184433, 0.17580240964889526, 0.18016114830970764, 0.18002906441688538, 0.19402985274791718, 0.20974771678447723, 0.21093647181987762, 0.20499274134635925, 0.21357811987400055, 0.21265354752540588, 0.2110685557126999, 0.23061682283878326, 0.23022057116031647, 0.23101307451725006, 0.24039097130298615, 0.244485542178154, 0.2502971887588501, 0.258090078830719, 0.26258090138435364, 0.2666754722595215, 0.26641130447387695, 0.27460044622421265, 0.2782987654209137, 0.2814687490463257, 0.29560163617134094, 0.2884691655635834, 0.29018622636795044, 0.29903578758239746, 0.3055078685283661, 0.30986660718917847, 0.3059041202068329, 0.31581032276153564, 0.32003697752952576, 0.3222824037075043, 0.3353586196899414, 0.3259807229042053, 0.3327169418334961, 0.3357548415660858, 0.3407739996910095, 0.3423590064048767, 0.34460440278053284, 0.3415665030479431, 0.3477744162082672, 0.3537181317806244, 0.3621714413166046, 0.3609826862812042, 0.36705851554870605, 0.3626997768878937, 0.36705851554870605, 0.3679831027984619, 0.3741909861564636, 0.38343679904937744, 0.38422930240631104, 0.37339848279953003, 0.37841764092445374, 0.38924846053123474, 0.3899088501930237, 0.3929467797279358, 0.39624884724617004, 0.3941355049610138, 0.4072117209434509, 0.39968299865722656, 0.4061550796031952, 0.41143837571144104, 0.4093250632286072, 0.4091929793357849, 0.4099854826927185, 0.40774005651474, 0.42306166887283325, 0.4157971143722534, 0.4177783727645874, 0.41566503047943115, 0.42306166887283325, 0.42742040753364563, 0.42966583371162415, 0.4313828945159912, 0.43864747881889343, 0.43323206901550293, 0.44128912687301636, 0.44327038526535034, 0.43891164660453796, 0.45449742674827576, 0.4465724527835846, 0.44485536217689514, 0.4485536813735962], "val_loss": [1.9687252044677734, 1.96684844153268, 1.965005806514195, 1.9631445748465401, 1.9612738745553153, 1.959439822605678, 1.9575978006635393, 1.9557793481009347, 1.9539485658918108, 1.9521046366010393, 1.9502577781677246, 1.9484098298209054, 1.9465630395071847, 1.9446969713483537, 1.9428159168788366, 1.9409049579075404, 1.9390185219900948, 1.9370989799499512, 1.935163974761963, 1.9331978389195033, 1.9312058176313127, 1.9291789191109794, 1.9271413939339774, 1.9250561850411552, 1.922964232308524, 1.9208605630057198, 1.9187030792236328, 1.9165136473519462, 1.9142749650137765, 1.9119955471583776, 1.9096794809613908, 1.907327720097133, 1.9049035481044225, 1.9024393899100167, 1.8999136516026087, 1.8973663193838937, 1.8947402409144811, 1.8920785358973913, 1.8893463271004813, 1.88653530393328, 1.8837248257228307, 1.8808252470833915, 1.8778362955365862, 1.8748070171901159, 1.8716929299490792, 1.8685102462768555, 1.8652120317731584, 1.8618168830871582, 1.8583616529192244, 1.8548500878470284, 1.8512375695364816, 1.8475074086870467, 1.8437444823128837, 1.8398231097630091, 1.835773263658796, 1.8316882678440638, 1.8275340625217982, 1.823244844164167, 1.8188790593828474, 1.8143463134765625, 1.8097412245614188, 1.8050293241228377, 1.8002220562526159, 1.7952858379908971, 1.7902470997401647, 1.7850957598005022, 1.7797795023236955, 1.7743940353393555, 1.7689057077680315, 1.7632261684962682, 1.7574268749782018, 1.7515403202601842, 1.745478630065918, 1.7393465042114258, 1.7330368586948939, 1.7265844345092773, 1.7199986321585519, 1.713326862880162, 1.7064027105058943, 1.6994139466966902, 1.6924309389931815, 1.685150248663766, 1.6777806622641427, 1.67024108341762, 1.6625260966164725, 1.6547212941305978, 1.646862506866455, 1.6388293675013952, 1.630617925098964, 1.6223540646689278, 1.61383775302342, 1.605210304260254, 1.5965395995548792, 1.5877347333090646, 1.578841277531215, 1.5698362759181432, 1.5607162884303503, 1.5515014444078719, 1.5422449793134416, 1.5329382419586182], "val_accuracy": [0.050333332270383835, 0.06266666948795319, 0.07599999755620956, 0.09066666662693024, 0.11266666650772095, 0.12966667115688324, 0.1469999998807907, 0.1653333306312561, 0.18666666746139526, 0.20499999821186066, 0.2199999988079071, 0.23233333230018616, 0.24799999594688416, 0.2643333375453949, 0.2783333361148834, 0.29366666078567505, 0.30533334612846375, 0.3173333406448364, 0.32766667008399963, 0.3370000123977661, 0.3486666679382324, 0.35466668009757996, 0.3616666793823242, 0.36633333563804626, 0.37033334374427795, 0.37833333015441895, 0.3803333342075348, 0.38466668128967285, 0.38866665959358215, 0.39399999380111694, 0.398333340883255, 0.4013333320617676, 0.406333327293396, 0.4090000092983246, 0.41366666555404663, 0.4156666696071625, 0.4193333387374878, 0.4256666600704193, 0.42899999022483826, 0.43166667222976685, 0.4333333373069763, 0.437333345413208, 0.43933331966400146, 0.4426666796207428, 0.4466666579246521, 0.44999998807907104, 0.4519999921321869, 0.45533332228660583, 0.45766666531562805, 0.46133333444595337, 0.46399998664855957, 0.4676666557788849, 0.4699999988079071, 0.47433334589004517, 0.4763333201408386, 0.47833332419395447, 0.4803333282470703, 0.4806666672229767, 0.4846666753292084, 0.4866666793823242, 0.4883333444595337, 0.492333322763443, 0.4959999918937683, 0.4976666569709778, 0.5, 0.5040000081062317, 0.5086666941642761, 0.5099999904632568, 0.5136666893959045, 0.5170000195503235, 0.5213333368301392, 0.5233333110809326, 0.5239999890327454, 0.5276666879653931, 0.5306666493415833, 0.531333327293396, 0.534333348274231, 0.5370000004768372, 0.5389999747276306, 0.5389999747276306, 0.5403333306312561, 0.5406666398048401, 0.5440000295639038, 0.543666660785675, 0.5456666946411133, 0.550000011920929, 0.5509999990463257, 0.5523333549499512, 0.5523333549499512, 0.5563333630561829, 0.5563333630561829, 0.5580000281333923, 0.559333324432373, 0.5590000152587891, 0.5600000023841858, 0.562666654586792, 0.5636666417121887, 0.565666675567627, 0.5673333406448364, 0.5699999928474426]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [1, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [2, 3, 2, 3], [48, 57], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [1, 2, 6, 6, 0, 1, 9, 1, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 3, 3, 3, 0, 3, 3, 3, 3, 0], [43, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [92, 38]], "fitness": -0.24657142162322998, "mapping_values": [1, 1, 1, 0, 1, 0, 21, 21, 13, 8, 3, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))))), tf.math.subtract(tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), grad))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [4.9411583489997595, 2.3143179223301575, 2.330693325897517, 2.3037544060786326, 2.3031469742068684, 2.303414571397041], "accuracy": [0.1526878923177719, 0.11266675591468811, 0.13789460062980652, 0.09866596013307571, 0.10091137140989304, 0.09959053993225098], "val_loss": [1.9678926467895508, 1.9691457067217146, 1.9749619620186942, 1.9737849916730608, 1.973670550755092, 1.973733629499163], "val_accuracy": [0.1523333340883255, 0.09966666996479034, 0.09966666996479034, 0.10400000214576721, 0.10400000214576721, 0.09700000286102295]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [0, 0, 1, 1, 0, 1, 0], [0, 6, 4, 9], [1, 0, 2, 3], [4, 57], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [1, 1, 4, 6, 0, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 3, 3, 2, 0, 3, 3, 3, 3, 0], [42, 69, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [1, 1, 2, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.23399999737739563, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 7, 3, 4, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.subtract(sigma, tf.math.add(sigma, sigma)), alpha)", "other_info": {"loss": [4.97137381075994, 2.3247788573741093, 2.3032963035632874, 2.3029743074473292, 2.3031668483526038, 2.30297648990159], "accuracy": [0.15189538896083832, 0.120459645986557, 0.09813763201236725, 0.09932637959718704, 0.09813763201236725, 0.10117553919553757], "val_loss": [1.9705360957554408, 1.9750610760280065, 1.974011012486049, 1.9737090383257185, 1.9736730711800712, 1.9737695966448103], "val_accuracy": [0.1446666717529297, 0.09966666996479034, 0.09966666996479034, 0.10000000149011612, 0.10400000214576721, 0.09733333438634872]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [1, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [2, 3, 2, 3], [48, 57], [1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 2, 6, 6, 0, 1, 9, 1, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 1, 0, 3, 0, 2, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [15, 38]], "fitness": -0.23399999737739563, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, grad), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [4.97137381075994, 2.3247788573741093, 2.3032963035632874, 2.3029743074473292, 2.3031668483526038, 2.30297648990159], "accuracy": [0.15189538896083832, 0.120459645986557, 0.09813763201236725, 0.09932637959718704, 0.09813763201236725, 0.10117553919553757], "val_loss": [1.9705360957554408, 1.9750610760280065, 1.974011012486049, 1.9737090383257185, 1.9736730711800712, 1.9737695966448103], "val_accuracy": [0.1446666717529297, 0.09966666996479034, 0.09966666996479034, 0.10000000149011612, 0.10400000214576721, 0.09733333438634872]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [2, 6, 4, 9], [2, 3, 2, 3], [56, 57], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [1, 2, 6, 6, 0, 1, 9, 1, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 1, 3, 3, 0, 3, 3, 1, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 4, 2, 9], [3, 1, 3, 1], [15, 38]], "fitness": -0.23399999737739563, "mapping_values": [1, 3, 3, 1, 2, 0, 20, 20, 11, 9, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.negative(tf.math.subtract(tf.math.add(beta, grad), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(grad, tf.math.add(beta, tf.math.add(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, grad))), tf.math.add(beta, alpha))))))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [4.97137381075994, 2.3247788573741093, 2.3032963035632874, 2.3029743074473292, 2.3031668483526038, 2.30297648990159], "accuracy": [0.15189538896083832, 0.120459645986557, 0.09813763201236725, 0.09932637959718704, 0.09813763201236725, 0.10117553919553757], "val_loss": [1.9705360957554408, 1.9750610760280065, 1.974011012486049, 1.9737090383257185, 1.9736730711800712, 1.9737695966448103], "val_accuracy": [0.1446666717529297, 0.09966666996479034, 0.09966666996479034, 0.10000000149011612, 0.10400000214576721, 0.09733333438634872]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [7, 6, 4, 9, 5, 4, 0, 2, 0, 5, 1, 4, 7, 1, 7, 3, 7, 7, 2, 9, 4, 6, 4, 8], [2, 3, 2, 3, 2, 2, 3, 3, 0, 1, 3, 3, 2, 0, 1, 2], [48, 57, 46, 52], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 2, 6, 6, 0, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 4, 9, 2, 9], [3, 3, 3, 1], [15, 38]], "fitness": -0.23399999737739563, "mapping_values": [1, 40, 40, 24, 16, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 49, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.square(tf.math.pow(grad, tf.math.negative(tf.math.add(tf.math.negative(tf.math.square(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, grad))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), alpha))))), grad), tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), alpha)), tf.math.add(alpha, grad))))))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [4.97137381075994, 2.3247788573741093, 2.3032963035632874, 2.3029743074473292, 2.3031668483526038, 2.30297648990159], "accuracy": [0.15189538896083832, 0.120459645986557, 0.09813763201236725, 0.09932637959718704, 0.09813763201236725, 0.10117553919553757], "val_loss": [1.9705360957554408, 1.9750610760280065, 1.974011012486049, 1.9737090383257185, 1.9736730711800712, 1.9737695966448103], "val_accuracy": [0.1446666717529297, 0.09966666996479034, 0.09966666996479034, 0.10000000149011612, 0.10400000214576721, 0.09733333438634872]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [1, 0, 2, 3], [79, 57], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [4, 2, 4, 2, 2, 3, 1, 2, 2, 1, 4, 9, 8, 9, 1, 0, 9, 0, 0, 5, 1, 7, 8, 6], [2, 3, 3, 3, 1, 3, 3, 3, 3, 0, 1], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [1, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.22428570687770844, "mapping_values": [1, 1, 1, 0, 1, 0, 23, 23, 12, 11, 2, 1, 1, 0, 1, 0, 5, 2, 3, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.multiply(tf.math.add(beta, grad), grad), tf.math.subtract(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, alpha), tf.math.pow(grad, tf.math.add(beta, grad))), tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), grad))), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(sigma, sigma), sigma)", "other_info": {"loss": [4.023747671392096, 2.3691150007813504, 2.30959330831993, 2.3064695263992228, 2.304462306109937, 2.305831384791076, 2.30513771435903, 2.304000930668986, 2.3037947783333483, 2.3029364437679685, 2.300718888599072, 2.3147261261451892, 2.3032407048922865, 3.4610584210159128, 2.3110397436741303], "accuracy": [0.15532954037189484, 0.1018359512090683, 0.10051512718200684, 0.09972262382507324, 0.09840179979801178, 0.09998679161071777, 0.09681680053472519, 0.09245806187391281, 0.09866596013307571, 0.10170386731624603, 0.11015717685222626, 0.16457535326480865, 0.09813763201236725, 0.1732928305864334, 0.09549596905708313], "val_loss": [2.2642262322562083, 1.9757052149091447, 1.9742279052734375, 1.9739412580217635, 1.9737481389726912, 1.975358486175537, 1.9736415318080358, 1.9740606035505022, 1.9736311776297433, 1.973011084965297, 1.9660988535199846, 1.974724224635533, 1.9724108151027135, 1.9969607761928014, 1.97434173311506], "val_accuracy": [0.09966666996479034, 0.10000000149011612, 0.09833333641290665, 0.10000000149011612, 0.0976666659116745, 0.10400000214576721, 0.09733333438634872, 0.10400000214576721, 0.09966666996479034, 0.1120000034570694, 0.10233332961797714, 0.10400000214576721, 0.09700000286102295, 0.09833333641290665, 0.09733333438634872]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [1, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [1, 3, 2, 3], [48, 57], [0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 2, 6, 6, 0, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [0, 3], [34], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [15, 38]], "fitness": -0.1168571412563324, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 7, 5, 2, 1, 1, 0, 1, 1, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(alpha, tf.math.add(tf.math.divide_no_nan(grad, grad), tf.math.divide_no_nan(tf.math.negative(tf.math.add(beta, grad)), tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3009690869643373, 2.301455439388823, 2.3024481159742276, 2.3025891064432367, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09377889335155487, 0.09747721254825592, 0.10315678268671036, 0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9721277781895228, 1.9735396930149622, 1.973642417362758, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.10333333164453506, 0.1133333370089531, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [2, 2, 2, 3], [48, 57], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 2, 6, 6, 0, 1, 9, 1, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 1, 0, 3, 0, 2, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [99, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07766477018594742, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [2, 6, 4, 9], [1, 3, 2, 3], [48, 57], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 2, 6, 6, 0, 1, 9, 4, 3, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 3, 0, 3, 2, 2, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 2, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 18, 18, 10, 8, 2, 1, 1, 0, 1, 0, 6, 3, 3, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.negative(tf.math.subtract(tf.math.add(beta, grad), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(grad, tf.math.add(beta, tf.math.multiply(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), beta)))))), tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.add(sigma, sigma)))", "other_info": {"loss": [2.3036835287162387, 2.3070420165182246, 2.310517516354717, 2.3210732241537215, 2.333816868643861, 2.3871292971884492, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09021265059709549, 0.08611807972192764, 0.07991018146276474, 0.07594769448041916, 0.0750231146812439, 0.0796460211277008, 0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9732178960527693, 1.976736341203962, 1.9814070292881556, 1.987982886178153, 2.0024893624441966, 2.5690526962280273, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.027666667476296425, 0.026000000536441803, 0.02433333359658718, 0.03533333167433739, 0.07999999821186066, 0.10000000149011612, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [2, 3, 2, 3], [79, 57], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 2, 6, 3, 0, 1, 2, 1, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 3, 3, 1, 1, 2, 3, 3, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [1, 3, 9, 2, 9], [3, 0, 3, 1], [15, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 22, 22, 12, 10, 2, 1, 1, 0, 1, 0, 5, 3, 2, 2], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.math.add(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.math.negative(grad)), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, alpha), beta), grad))), tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), grad))), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(sigma, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [2, 0, 2, 3], [4, 57], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [2, 2, 8, 6, 0, 6, 9, 6, 4, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 3, 3, 2, 0, 3, 3, 3, 3, 0], [42, 63, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [1, 2, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 19, 19, 11, 8, 2, 1, 1, 0, 1, 0, 5, 2, 3, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.divide_no_nan(beta, tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))))))), tf.math.divide_no_nan(tf.math.pow(grad, tf.math.subtract(tf.math.pow(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), grad)), tf.math.add(beta, grad)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.add(sigma, sigma), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07766477018594742, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0], [1, 1, 0, 1, 0, 1, 0], [7, 6, 4, 9], [3, 0, 2, 3], [56, 57], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [4, 4, 4, 2, 2, 3, 9, 2, 2, 1, 5, 9, 8, 9, 1, 0, 9, 0, 0, 5, 1, 7, 8, 6], [2, 3, 3, 3, 1, 3, 3, 3, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [1, 3, 9, 2, 9], [3, 2, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07766477018594742, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [2, 3, 2, 3], [4, 57], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 2, 6, 6, 0, 1, 9, 1, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 3, 3, 2, 0, 3, 3, 3, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07766477018594742, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [1, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [2, 3, 2, 3], [48, 57], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [7, 2, 6, 6, 0, 1, 9, 1, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 1, 0, 3, 0, 2, 3, 0], [42, 71, 43, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [5, 3, 9, 2, 9], [3, 3, 3, 1], [15, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(sigma, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3025078611004828, 2.3024555806076963, 2.3013880554837103, 2.303354497378481, 2.302587100685139, 2.3015368035472283], "accuracy": [0.08994849026203156, 0.09470347315073013, 0.09245806187391281, 0.08770307898521423, 0.09219389408826828, 0.09192973375320435], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [1, 1, 1, 1, 0, 1, 0], [5, 6, 4, 9], [2, 3, 2, 3], [48, 57], [1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 2, 6, 6, 0, 1, 9, 1, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 1, 0, 3, 0, 2, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [15, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 6, 4, 3, 1, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(grad, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3025078611004828, 2.3024555806076963, 2.3013880554837103, 2.303354497378481, 2.302587100685139, 2.3015368035472283], "accuracy": [0.08994849026203156, 0.09470347315073013, 0.09245806187391281, 0.08770307898521423, 0.09219389408826828, 0.09192973375320435], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [1, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [3, 3, 2, 3], [48, 57], [1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [1, 2, 6, 6, 0, 1, 9, 1, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 1, 0, 3, 0, 2, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [3, 3, 9, 2, 9], [0, 3, 3, 1], [15, 38]], "fitness": -0.03971428424119949, "mapping_values": [1, 1, 1, 0, 1, 0, 20, 20, 11, 9, 4, 1, 1, 0, 1, 0, 7, 4, 3, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, grad), tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(alpha, tf.math.add(beta, tf.math.add(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, beta))))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)), sigma)", "other_info": {"loss": [2.302579314496775, 2.3027050873984782, 2.301810595274696, 2.303962221046118, 2.303375569915318, 2.3024966886503004], "accuracy": [0.08942015469074249, 0.09417514503002167, 0.09192973375320435, 0.08677849918603897, 0.09021265059709549, 0.08889182657003403], "val_loss": [1.9707559858049666, 1.9709241730826241, 1.9710899080548967, 1.9712585040501185, 1.9714278493608748, 1.9715943336486816], "val_accuracy": [0.03799999877810478, 0.03799999877810478, 0.03799999877810478, 0.03733333200216293, 0.036666665226221085, 0.03533333167433739]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [1, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [1, 0, 2, 3], [48, 57], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 2, 6, 6, 2, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 3, 3, 1, 3, 3, 3, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 22, 22, 13, 9, 3, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(tf.math.subtract(tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)), alpha), tf.math.add(beta, grad))), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.sqrt(grad))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, sigma))", "other_info": {"loss": [2.3030731016697428, 2.304388710378955, 2.3047520817388962, 2.3091930920783916, 2.3115431894605436, 2.3133923680223982], "accuracy": [0.08902391046285629, 0.09021265059709549, 0.08809932321310043, 0.08413683623075485, 0.08241976052522659, 0.07607977837324142], "val_loss": [1.971801825932094, 1.9731159210205078, 1.9744977269853865, 1.976571696145194, 1.9792263167245048, 1.9818789618355888], "val_accuracy": [0.03166666626930237, 0.02866666577756405, 0.026000000536441803, 0.026333333924412727, 0.026000000536441803, 0.03099999949336052]}}]