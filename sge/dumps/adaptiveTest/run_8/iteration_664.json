[{"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 5, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.7725714445114136, "mapping_values": [1, 7, 7, 5, 2, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.285953839000631, 2.24610127100241, 2.186221650531342, 2.0966892859970714, 1.9553961373118676, 1.7746091620356195, 1.5718506382063095, 1.4224157447214092, 1.3057249518842777, 1.2116753603599295, 1.1354923896691298, 1.0902067407121308, 1.0422111170686483, 1.0093252551144676, 0.9843770309666664, 0.9565288958973369, 0.9299466774574187, 0.904016699954393, 0.8879318093469414, 0.8734940293285243, 0.8554078146388203, 0.8426651734607316, 0.8327377586080698, 0.8241654703283606, 0.820081622223293, 0.8008084968017817, 0.7893950182291589, 0.7860497787266107, 0.7820735039602039, 0.7813691945832403, 0.7693604300712094, 0.7601651051544857, 0.7430115165869164, 0.7491511150972167, 0.7479370013676488, 0.7333402131621265, 0.7286218081278304, 0.724347377442224, 0.7148248976358034, 0.715592572174493, 0.7179361603531178, 0.7011727519857885, 0.7014653606736633, 0.7015248897714607, 0.7013609642444616, 0.6872754185159744, 0.691194661045276, 0.6815245436198676, 0.6755493564093039, 0.6716256914767355, 0.6672776624070277, 0.6710115006146036, 0.6706918869130662, 0.6705463737497366], "accuracy": [0.1356491893529892, 0.22916391491889954, 0.3203011453151703, 0.37643641233444214, 0.4212125241756439, 0.4620261490345001, 0.5060097575187683, 0.533350944519043, 0.557390034198761, 0.5766741633415222, 0.6087703108787537, 0.6145819425582886, 0.6316206455230713, 0.6425835490226746, 0.6535464525222778, 0.6654338836669922, 0.6693964004516602, 0.6841896772384644, 0.685510516166687, 0.6944921612739563, 0.698718786239624, 0.6993792057037354, 0.7004358768463135, 0.7017567157745361, 0.703209638595581, 0.7143045663833618, 0.7201162576675415, 0.7117950320243835, 0.7124554514884949, 0.7127195596694946, 0.7185312509536743, 0.7243428826332092, 0.7296261787414551, 0.7290979027748108, 0.7293620109558105, 0.7318716049194336, 0.7334566116333008, 0.7382115721702576, 0.7357020378112793, 0.7405890822410583, 0.7349095344543457, 0.7481178045272827, 0.7386078238487244, 0.7450799345970154, 0.7434949278831482, 0.7506273984909058, 0.7493065595626831, 0.7534011602401733, 0.7510236501693726, 0.7543256878852844, 0.7572315335273743, 0.7578919529914856, 0.7548540234565735, 0.7547219395637512], "val_loss": [1.9333243370056152, 1.8884224210466658, 1.8177258627755302, 1.7057322434016637, 1.5399586473192488, 1.3432892050061906, 1.1544160502297538, 1.013258695602417, 0.9107998439243862, 0.8416084902627128, 0.7880144459860665, 0.7493128095354352, 0.7213892255510602, 0.6948076656886509, 0.6769110645566668, 0.6589646850313459, 0.6412188155310494, 0.628362877028329, 0.6138177769524711, 0.6080795696803502, 0.5984122923442295, 0.5894267559051514, 0.5797441346304757, 0.5742852347237724, 0.5677001816885812, 0.5606248378753662, 0.557174835886274, 0.5491211754935128, 0.550072159085955, 0.5418103592736381, 0.5399574211665562, 0.5350207771573748, 0.5301422391619001, 0.5277085815157209, 0.5223161322729928, 0.5206637212208339, 0.5150755814143589, 0.5157994202205113, 0.509699855531965, 0.5078111886978149, 0.5067099843706403, 0.5038404635020665, 0.4986170530319214, 0.4995126894542149, 0.498374342918396, 0.49348207882472445, 0.4931069442204067, 0.49149170943668913, 0.48859494073050364, 0.4862839664731707, 0.48473662989480154, 0.4845966781888689, 0.48017309393201557, 0.4783472844532558], "val_accuracy": [0.320333331823349, 0.406333327293396, 0.46399998664855957, 0.5216666460037231, 0.5576666593551636, 0.5876666903495789, 0.6129999756813049, 0.6713333129882812, 0.6846666932106018, 0.6919999718666077, 0.7093333601951599, 0.7056666612625122, 0.7066666483879089, 0.7170000076293945, 0.7179999947547913, 0.7353333234786987, 0.737666666507721, 0.734333336353302, 0.7459999918937683, 0.7490000128746033, 0.7436666488647461, 0.7576666474342346, 0.7570000290870667, 0.7613333463668823, 0.7590000033378601, 0.7683333158493042, 0.7693333625793457, 0.7706666588783264, 0.7680000066757202, 0.7689999938011169, 0.7739999890327454, 0.7770000100135803, 0.7763333320617676, 0.7826666831970215, 0.7799999713897705, 0.7846666574478149, 0.7853333353996277, 0.7733333110809326, 0.7836666703224182, 0.7863333225250244, 0.7900000214576721, 0.7873333096504211, 0.7919999957084656, 0.7916666865348816, 0.7913333177566528, 0.7956666946411133, 0.7943333387374878, 0.7956666946411133, 0.7976666688919067, 0.79666668176651, 0.793666660785675, 0.7896666526794434, 0.7976666688919067, 0.7963333129882812]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [9, 1, 5, 2, 9, 4, 5, 2, 1, 4, 9, 2, 3, 8, 2, 3, 3, 8, 0, 8, 5, 2, 0, 2, 8, 8], [2, 2, 0, 2, 1, 2, 1, 2, 0, 0, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [0, 65, 54, 52, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [4, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [36, 25, 50, 71, 34]], "fitness": -0.7331428527832031, "mapping_values": [1, 1, 1, 1, 0, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(grad, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.square(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.2989160182248995, 2.2920007888966265, 2.282507387150422, 2.27520114332221, 2.2671759835229244, 2.25927132168907, 2.2491825202578615, 2.240974500273449, 2.2323920725201574, 2.220769938697054, 2.2075046518333616, 2.196042764078215, 2.182019311140053, 2.164975092190919, 2.1489801420086585, 2.1302867221983433, 2.1106316933400753, 2.0858755691759088, 2.063319583720755, 2.0369647360118845, 2.0060427732250994, 1.9759243562976996, 1.9411665743620106, 1.9068969027902536, 1.8683876580628958, 1.8332574357760973, 1.7923354042551032, 1.7548690106591307, 1.7141635645933282, 1.6806154021056667, 1.6475274665181536, 1.5969939938846156, 1.5557863395668496, 1.530083613388763, 1.4981718753008022, 1.4701231905749885, 1.4393084870195973, 1.408601577980108, 1.3753321334875144, 1.3544488577968046, 1.3413828562720262, 1.3094857389648844, 1.2921220283498223, 1.2752276143031334, 1.2576203253826272, 1.2471469872505783, 1.221500084006854, 1.2112363431400486, 1.1925369808938697, 1.1718890872440633, 1.1573996256056274, 1.1518647714990744, 1.1398603033474675, 1.1339394393740014, 1.1233602857010287, 1.0943578273361039, 1.0830377386293675, 1.0846677556911464, 1.0738648715162196, 1.0626147701251838, 1.057491429288862, 1.050386485800279, 1.0370529328260472, 1.026981252909746, 1.0212060838028456, 1.0175988724864375, 1.0075042723286751, 0.9993046534658186, 0.9952657427596945, 0.9901310210340705, 0.9896806833168078, 0.9820197246896907, 0.9777940284180808, 0.9606008740259341, 0.9606577979260275, 0.9590476394849069, 0.9519432147008049, 0.951750895177463, 0.9508516597961941, 0.9392202372768882, 0.9280164862400222, 0.9346791715937488, 0.9226615178413426, 0.9128292589029537, 0.9108379419296173, 0.9096601838527685, 0.8974193983373389, 0.9070346015020211, 0.916393145657077, 0.9040184047212375, 0.8965545900194574, 0.8800214634374967, 0.889608343555124, 0.8808604011115554, 0.8846553104381363, 0.8781755521800997, 0.8726474747225089, 0.8745646709857946, 0.8735646530306806, 0.8597550390812511], "accuracy": [0.10196803510189056, 0.1162329912185669, 0.13961167633533478, 0.160084530711174, 0.18399155139923096, 0.20538897812366486, 0.23022057116031647, 0.24184387922286987, 0.25822216272354126, 0.27777042984962463, 0.29665830731391907, 0.3063003420829773, 0.31739532947540283, 0.33839651942253113, 0.34724608063697815, 0.3646810054779053, 0.37828555703163147, 0.38581427931785583, 0.39268261194229126, 0.4115704596042633, 0.4072117209434509, 0.42425042390823364, 0.4309866726398468, 0.43706247210502625, 0.44485536217689514, 0.4523840844631195, 0.46123364567756653, 0.469819039106369, 0.47470611333847046, 0.471800297498703, 0.48329150676727295, 0.5044247508049011, 0.5071985125541687, 0.5169726610183716, 0.5152555704116821, 0.5176330804824829, 0.529388427734375, 0.5439175963401794, 0.5449742674827576, 0.5469554662704468, 0.5531634092330933, 0.5643904209136963, 0.5629374980926514, 0.5630695819854736, 0.573107898235321, 0.5775987505912781, 0.5847312211990356, 0.585391640663147, 0.5921278595924377, 0.5978074073791504, 0.6022982597351074, 0.5995244979858398, 0.6041474342346191, 0.6007132530212402, 0.6100911498069763, 0.6209219098091125, 0.6194690465927124, 0.6203936338424683, 0.6209219098091125, 0.6280544400215149, 0.628582775592804, 0.6341302394866943, 0.6361114978790283, 0.6371681690216064, 0.6441685557365417, 0.6420552134513855, 0.6387531161308289, 0.6485272645950317, 0.6453573107719421, 0.6532822847366333, 0.6494518518447876, 0.6523576974868774, 0.6560559868812561, 0.6602826714515686, 0.6635847091674805, 0.6602826714515686, 0.6655659675598145, 0.6598864197731018, 0.665830135345459, 0.6654338836669922, 0.6715096831321716, 0.6653017997741699, 0.6750759482383728, 0.6763967871665955, 0.6762647032737732, 0.6745476126670837, 0.6799629926681519, 0.6827367544174194, 0.6783780455589294, 0.6775855422019958, 0.6852463483810425, 0.6881521344184875, 0.6865671873092651, 0.6889446377754211, 0.6876237988471985, 0.6822084188461304, 0.6905296444892883, 0.6966054439544678, 0.6816800832748413, 0.6917183995246887], "val_loss": [1.9631376947675432, 1.9558546883719308, 1.9485130991254533, 1.940990652356829, 1.9331978389195033, 1.925187655857631, 1.9165746825081962, 1.9074414116995675, 1.8976798738752092, 1.8869774682181222, 1.8752052443368095, 1.8622820717947823, 1.848083768572126, 1.832463332584926, 1.8151775768824987, 1.7962848799569267, 1.7756524767194475, 1.7526587077549525, 1.7276233264378138, 1.7007390771593367, 1.6715340954916817, 1.6401209490639823, 1.606581653867449, 1.57123521396092, 1.5341124194008964, 1.4957856110164098, 1.4564531190054757, 1.4165569714137487, 1.376319169998169, 1.336557422365461, 1.2975896767207555, 1.2585651874542236, 1.2206503663744246, 1.185337850025722, 1.151855707168579, 1.1206549916948592, 1.09026871408735, 1.0626679147992815, 1.035905054637364, 1.01112699508667, 0.9892678601401192, 0.9675823620387486, 0.9473255021231515, 0.9290640013558524, 0.911787578037807, 0.8961912563868931, 0.8814715317317418, 0.8677616119384766, 0.8544623681477138, 0.841929725238255, 0.829682639666966, 0.8188456126621791, 0.8078394617353167, 0.7981946638652256, 0.7887641532080514, 0.7796775443213326, 0.7706022943769183, 0.7629504033497402, 0.7550778388977051, 0.7480069398880005, 0.741448027747018, 0.7350000313350132, 0.7285152333123344, 0.7222526754651751, 0.7163772753306797, 0.7109477690287999, 0.7056785311017718, 0.7005738701139178, 0.6956060443605695, 0.6911207607814244, 0.6868651253836495, 0.6828667606626239, 0.6790063892092023, 0.6748721088681903, 0.671011209487915, 0.6673080750874111, 0.6636499847684588, 0.660149199622018, 0.6575617790222168, 0.6540149961199079, 0.650497589792524, 0.6473660128457206, 0.644356233733041, 0.6413121393748692, 0.6384984765733991, 0.635670372417995, 0.6325707605906895, 0.630230358668736, 0.6282839434487479, 0.6258898462568011, 0.6239022527422223, 0.6215830019542149, 0.6195610080446515, 0.6175860507147652, 0.6156593901770455, 0.6135529960904803, 0.6115714311599731, 0.6097480399268014, 0.6076929228646415, 0.6058709962027413], "val_accuracy": [0.09300000220537186, 0.16833333671092987, 0.23333333432674408, 0.29366666078567505, 0.3343333303928375, 0.3623333275318146, 0.3799999952316284, 0.3956666588783264, 0.40799999237060547, 0.42633333802223206, 0.437666654586792, 0.4476666748523712, 0.4580000042915344, 0.46966665983200073, 0.48233333230018616, 0.49166667461395264, 0.5016666650772095, 0.5163333415985107, 0.5293333530426025, 0.5353333353996277, 0.5416666865348816, 0.5493333339691162, 0.5556666851043701, 0.5600000023841858, 0.5669999718666077, 0.5756666660308838, 0.5743333101272583, 0.5776666402816772, 0.5806666612625122, 0.5856666564941406, 0.5910000205039978, 0.5986666679382324, 0.6039999723434448, 0.6140000224113464, 0.6206666827201843, 0.6353333592414856, 0.6423333287239075, 0.6506666541099548, 0.6573333144187927, 0.6636666655540466, 0.6690000295639038, 0.6733333468437195, 0.6769999861717224, 0.6809999942779541, 0.6853333115577698, 0.6896666884422302, 0.6913333535194397, 0.6919999718666077, 0.6943333148956299, 0.6946666836738586, 0.6953333616256714, 0.6973333358764648, 0.6973333358764648, 0.699999988079071, 0.703000009059906, 0.70333331823349, 0.7053333520889282, 0.706333339214325, 0.7073333263397217, 0.7086666822433472, 0.7066666483879089, 0.7076666951179504, 0.7099999785423279, 0.7123333215713501, 0.7126666903495789, 0.7179999947547913, 0.7166666388511658, 0.7179999947547913, 0.7210000157356262, 0.721666693687439, 0.7239999771118164, 0.7233333587646484, 0.7250000238418579, 0.7269999980926514, 0.7283333539962769, 0.7300000190734863, 0.7289999723434448, 0.7289999723434448, 0.7319999933242798, 0.7336666584014893, 0.734333336353302, 0.7350000143051147, 0.7360000014305115, 0.7369999885559082, 0.734333336353302, 0.7379999756813049, 0.7379999756813049, 0.7403333187103271, 0.7416666746139526, 0.7419999837875366, 0.7423333525657654, 0.7443333268165588, 0.7440000176429749, 0.7453333139419556, 0.7483333349227905, 0.7480000257492065, 0.7483333349227905, 0.750333309173584, 0.7523333430290222, 0.753333330154419]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [9, 1, 5, 2, 9, 4, 5, 4, 2, 4, 9, 5, 3, 8, 1, 3, 3, 8, 0, 8, 5, 2, 0, 2, 8, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [0, 65, 76, 52, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.41514286398887634, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.square(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.301859892401886, 2.301910595194129, 2.2994406407519636, 2.2992687651100505, 2.2987249932032787, 2.297794317037139, 2.2961700416086783, 2.296248855560589, 2.296145142502458, 2.295196811079963, 2.2932246654985633, 2.293625577282455, 2.292798705561412, 2.289993472339266, 2.2912561181450974, 2.2910170237370266, 2.289116165121832, 2.2885543057443347, 2.289688660468345, 2.286842113157793, 2.2865935800381307, 2.2857423888347435, 2.284663009070418, 2.2849541000796503, 2.2833488549003356, 2.283511153931442, 2.281756884764214, 2.2820294419488794, 2.280964724848441, 2.2811815870625387, 2.281407036029935, 2.279340507206018, 2.2773408415515615, 2.2779646846895694, 2.276126091553629, 2.276754386011541, 2.274459130885878, 2.2738190188210763, 2.27300383392468, 2.272931255070509, 2.2709932206659866, 2.269804623715551, 2.2711478791862287, 2.269946483336955, 2.269427077015393, 2.2682446961421157, 2.2664868287154634, 2.266124093190885, 2.265304704683017, 2.2636413993364344, 2.2628818015853223, 2.2626302628673978, 2.262056610760924, 2.2610325362027015, 2.261777319660623, 2.2588921149393286, 2.256949837402094, 2.256864769394844, 2.256389199246694, 2.255474222869984, 2.2556501136180698, 2.254314329142048, 2.253394246243089, 2.252748576106176, 2.2515308161012375, 2.2513190145269597, 2.249631613504775, 2.248523360812795, 2.2477630437121117, 2.247861624519823, 2.2468824588769083, 2.243794303764804, 2.244554788303287, 2.2424028988574807, 2.244030030553745, 2.2421767319261185, 2.241238075177494, 2.2408789943127725, 2.240542648679718, 2.2383653072711893, 2.2368643080097037, 2.2387694201811414, 2.2368555517716886, 2.23546944853652, 2.2321528210033437, 2.2312922792317544, 2.2307331094400458, 2.231143419343593, 2.2299558427024904, 2.2298208698541764, 2.227155714459533, 2.225822595321208, 2.2266509686604685, 2.2237156576499992, 2.2225530654243144, 2.2216314328203364, 2.2215210601968884, 2.2220352372441705, 2.218350421231358, 2.2192611356437197], "accuracy": [0.09694888442754745, 0.09259014576673508, 0.09840179979801178, 0.09655263274908066, 0.09879804402589798, 0.10342095047235489, 0.10619468986988068, 0.10249637067317963, 0.109232597053051, 0.10566636174917221, 0.109232597053051, 0.11028926074504852, 0.11636507511138916, 0.11557257920503616, 0.11636507511138916, 0.11874257028102875, 0.1274600476026535, 0.12402588874101639, 0.12429005652666092, 0.13472460210323334, 0.12878087162971497, 0.13551710546016693, 0.13261127471923828, 0.1348566859960556, 0.14053626358509064, 0.13868708908557892, 0.1406683325767517, 0.14317791163921356, 0.14542332291603088, 0.14991414546966553, 0.14674416184425354, 0.1508387327194214, 0.15414080023765564, 0.15493330359458923, 0.16232994198799133, 0.15295206010341644, 0.15612204372882843, 0.16536785662174225, 0.17078325152397156, 0.16721701622009277, 0.1632545292377472, 0.18240654468536377, 0.1736890822649002, 0.17712323367595673, 0.17580240964889526, 0.175670325756073, 0.18531237542629242, 0.18940694630146027, 0.18584071099758148, 0.1954827606678009, 0.19336943328380585, 0.19759608805179596, 0.19733192026615143, 0.1978602558374405, 0.1970677524805069, 0.20631356537342072, 0.2075023055076599, 0.20657773315906525, 0.204860657453537, 0.21674811840057373, 0.21344605088233948, 0.21674811840057373, 0.21952186524868011, 0.21859727799892426, 0.22018226981163025, 0.21555937826633453, 0.22823932766914368, 0.23312640190124512, 0.2277110069990158, 0.2300885021686554, 0.23352265357971191, 0.24144762754440308, 0.23114515841007233, 0.2510896921157837, 0.23418307304382324, 0.23933430016040802, 0.244485542178154, 0.2487121969461441, 0.24144762754440308, 0.24382512271404266, 0.24897634983062744, 0.25016510486602783, 0.2533350884914398, 0.2546559274196625, 0.26297715306282043, 0.26099589467048645, 0.26059964299201965, 0.2650904655456543, 0.2674679756164551, 0.25756174325942993, 0.27103421092033386, 0.2767137885093689, 0.2677321434020996, 0.2818650007247925, 0.27460044622421265, 0.2822612524032593, 0.272090882062912, 0.27499669790267944, 0.2859595715999603, 0.272090882062912], "val_loss": [1.9698645046779089, 1.969141960144043, 1.968418802533831, 1.9676870618547713, 1.9669583865574427, 1.9662461280822754, 1.9655235154288155, 1.964806011744908, 1.96409729548863, 1.963383606501988, 1.9626688957214355, 1.9619481904166085, 1.9612387929643904, 1.9605325290134974, 1.9598168645586287, 1.959094796861921, 1.958387783595494, 1.9576707567487444, 1.9569612911769323, 1.9562582969665527, 1.9555543490818568, 1.95484801701137, 1.9541401863098145, 1.9534288133893694, 1.952720778329032, 1.9520046370370048, 1.9512884957449776, 1.9505679266793388, 1.9498535564967565, 1.949136393410819, 1.9484293801443917, 1.9477184159415108, 1.946995803288051, 1.9462853159223283, 1.9455625670296806, 1.9448347772870744, 1.9441183635166712, 1.9433809689113073, 1.9426466396876745, 1.9419139453342982, 1.9411802973066057, 1.9404401779174805, 1.939706802368164, 1.9389615058898926, 1.9382175718035017, 1.937472207205636, 1.9367237772260393, 1.935974189213344, 1.9352142470223563, 1.9344549179077148, 1.9336885043552943, 1.9329259055001395, 1.9321612630571638, 1.9313905579703194, 1.930619444165911, 1.929830483027867, 1.929037366594587, 1.9282379831586565, 1.927445616040911, 1.9266455514090401, 1.9258480072021484, 1.925046716417585, 1.9242314611162459, 1.9234138897487096, 1.9225965227399553, 1.9217748641967773, 1.9209441457475935, 1.9201068196977888, 1.91926452091762, 1.9184139115469796, 1.917560304914202, 1.91670138495309, 1.915848663875035, 1.9149736676897322, 1.9140988758632116, 1.9132257189069475, 1.9123377799987793, 1.9114418029785156, 1.9105384690420968, 1.9096343857901437, 1.9087140219552177, 1.9077958379473006, 1.9068701607840401, 1.905939987727574, 1.905001095363072, 1.9040426526750838, 1.903074060167585, 1.9021121433803014, 1.901162828717913, 1.900195802961077, 1.8992066383361816, 1.898209571838379, 1.8972213608878, 1.8962127821786063, 1.8951987539018904, 1.8941730090550013, 1.8931428364345007, 1.8921213831220354, 1.8910816737583704, 1.890035765511649], "val_accuracy": [0.04233333468437195, 0.04933333396911621, 0.0533333346247673, 0.059333331882953644, 0.061666667461395264, 0.06499999761581421, 0.07199999690055847, 0.07699999958276749, 0.0833333358168602, 0.08933333307504654, 0.09733333438634872, 0.10633333027362823, 0.11266666650772095, 0.12033333629369736, 0.12800000607967377, 0.13366666436195374, 0.14033333957195282, 0.14666666090488434, 0.15466666221618652, 0.16200000047683716, 0.1693333387374878, 0.17533333599567413, 0.1850000023841858, 0.19099999964237213, 0.20000000298023224, 0.20600000023841858, 0.21400000154972076, 0.2199999988079071, 0.2226666659116745, 0.22833333909511566, 0.23333333432674408, 0.2396666705608368, 0.24699999392032623, 0.2516666650772095, 0.25733333826065063, 0.26366665959358215, 0.2720000147819519, 0.2776666581630707, 0.2826666533946991, 0.28966665267944336, 0.29366666078567505, 0.29866665601730347, 0.30266666412353516, 0.3096666634082794, 0.31433331966400146, 0.3173333406448364, 0.31966665387153625, 0.32366666197776794, 0.32866665720939636, 0.3323333263397217, 0.3373333215713501, 0.34166666865348816, 0.3466666638851166, 0.34833332896232605, 0.3499999940395355, 0.3543333411216736, 0.35600000619888306, 0.35899999737739563, 0.3610000014305115, 0.36133334040641785, 0.3633333444595337, 0.36533331871032715, 0.367333322763443, 0.3683333396911621, 0.37166666984558105, 0.37533333897590637, 0.3773333430290222, 0.37933334708213806, 0.3813333213329315, 0.382999986410141, 0.38333332538604736, 0.3840000033378601, 0.3843333423137665, 0.3863333463668823, 0.3876666724681854, 0.3903333246707916, 0.3919999897480011, 0.39366665482521057, 0.3959999978542328, 0.39766666293144226, 0.39899998903274536, 0.40033334493637085, 0.4020000100135803, 0.4033333361148834, 0.4036666750907898, 0.40533334016799927, 0.406333327293396, 0.4073333442211151, 0.4090000092983246, 0.4103333353996277, 0.4126666784286499, 0.4143333435058594, 0.41600000858306885, 0.41733333468437195, 0.4193333387374878, 0.4230000078678131, 0.4243333339691162, 0.4259999990463257, 0.4266666769981384, 0.4283333420753479]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 6, 5, 0, 9, 9, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 2, 2, 1, 2, 0, 0, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 65, 59, 9, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [79, 25, 50, 71, 34]], "fitness": -0.4000000059604645, "mapping_values": [1, 2, 2, 1, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.284071800746875, 4.32869895193256, 2.3062469938789865, 2.302551124357607, 2.2858372307126045, 2.2887303172605167], "accuracy": [0.20182274281978607, 0.1488574892282486, 0.09787346422672272, 0.10698718577623367, 0.15453705191612244, 0.13129045069217682], "val_loss": [1.77632965360369, 1.9787255695887975, 1.9742509296962194, 1.9715020997183663, 1.7454351697649275, 1.9755947249276298], "val_accuracy": [0.34700000286102295, 0.09966666996479034, 0.09966666996479034, 0.1236666664481163, 0.31066668033599854, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 5, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [97, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.37942856550216675, "mapping_values": [1, 6, 6, 3, 3, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.277606960458369, 2.6062927889140557, 2.1777143964457584, 2.1451372437079694, 2.2611385933270527, 2.2663168641696156, 2.3064207715160574, 2.303869513693172], "accuracy": [0.21040813624858856, 0.1768590658903122, 0.1846519559621811, 0.22295601665973663, 0.1488574892282486, 0.1674811840057373, 0.09694888442754745, 0.09985470771789551], "val_loss": [1.677337305886405, 1.9740899630955286, 1.660397938319615, 1.9768826620919364, 1.9453868184770857, 1.97766079221453, 1.9741674150739397, 1.973898478916713], "val_accuracy": [0.34200000762939453, 0.09966666996479034, 0.4046666622161865, 0.09733333438634872, 0.17733334004878998, 0.10000000149011612, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 9, 2, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.37942856550216675, "mapping_values": [1, 3, 3, 1, 2, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.277606960458369, 2.6062927889140557, 2.1777143964457584, 2.1451372437079694, 2.2611385933270527, 2.2663168641696156, 2.3064207715160574, 2.303869513693172], "accuracy": [0.21040813624858856, 0.1768590658903122, 0.1846519559621811, 0.22295601665973663, 0.1488574892282486, 0.1674811840057373, 0.09694888442754745, 0.09985470771789551], "val_loss": [1.677337305886405, 1.9740899630955286, 1.660397938319615, 1.9768826620919364, 1.9453868184770857, 1.97766079221453, 1.9741674150739397, 1.973898478916713], "val_accuracy": [0.34200000762939453, 0.09966666996479034, 0.4046666622161865, 0.09733333438634872, 0.17733334004878998, 0.10000000149011612, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 1, 6, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 90, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [4, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [5, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.37942856550216675, "mapping_values": [1, 25, 25, 19, 6, 5, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.square(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.square(tf.math.add(grad, tf.math.sqrt(tf.math.add(tf.math.negative(tf.math.square(tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.pow(grad, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.277606960458369, 2.6062927889140557, 2.1777143964457584, 2.1451372437079694, 2.2611385933270527, 2.2663168641696156, 2.3064207715160574, 2.303869513693172], "accuracy": [0.21040813624858856, 0.1768590658903122, 0.1846519559621811, 0.22295601665973663, 0.1488574892282486, 0.1674811840057373, 0.09694888442754745, 0.09985470771789551], "val_loss": [1.677337305886405, 1.9740899630955286, 1.660397938319615, 1.9768826620919364, 1.9453868184770857, 1.97766079221453, 1.9741674150739397, 1.973898478916713], "val_accuracy": [0.34200000762939453, 0.09966666996479034, 0.4046666622161865, 0.09733333438634872, 0.17733334004878998, 0.10000000149011612, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 5, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [3, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [6, 3, 5, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, grad), grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3023641660244647, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 1, 5, 2, 9, 4, 5, 4, 2, 4, 9, 5, 3, 8, 1, 3, 3, 8, 9, 8, 3, 2, 0, 2, 8, 8], [0, 2, 0, 2, 1, 1, 1, 2, 0, 0, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [0, 65, 76, 52, 8, 55, 86, 52, 44], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 2, 2, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [49, 44, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 34, 34, 23, 11, 7, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 46, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))))), grad), tf.math.pow(tf.math.square(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.subtract(tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), alpha)), tf.math.add(alpha, tf.math.sqrt(tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), alpha), tf.math.add(alpha, grad))))), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(sigma, tf.math.add(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [6237257.093790411, 2.314293699808691, 2.305556549450914, 2.3034840899215414, 2.3030860526072683, 2.302968816136199], "accuracy": [0.09787346422672272, 0.09787346422672272, 0.1002509593963623, 0.09906221181154251, 0.09919429570436478, 0.09311848133802414], "val_loss": [1.9885951450892858, 1.9769782338823592, 1.974400315965925, 1.9739454133169991, 1.9736738886151994, 1.9737746374947684], "val_accuracy": [0.10400000214576721, 0.09833333641290665, 0.10400000214576721, 0.09700000286102295, 0.09966666996479034, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 3, 5, 5, 3, 6, 2, 0, 8, 1, 5, 2, 9, 8, 9, 2, 6, 8, 3, 5, 0, 2, 0, 2, 8, 8], [3, 2, 0, 1, 2, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 52, 59, 56, 35, 79, 86, 52, 44], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [2, 3], [], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1], [2, 3, 5, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [35, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 8, 6, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.square(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), sigma), tf.math.add(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3039530685249967, 4.383514845927063, 4269770.34473672, 14200430604610.207, 4.78019749854464e+19, 1.537438438383591e+26], "accuracy": [0.10593052208423615, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0006411416190013, 82.66810607910156, 239910893.7142857, 803552755861796.6, 2.695621112713309e+21, 8.660980015419563e+27], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 3, 5, 5, 3, 6, 2, 0, 8, 1, 5, 2, 9, 8, 9, 2, 6, 8, 3, 5, 0, 2, 0, 2, 8, 8], [2, 2, 0, 1, 2, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 52, 59, 56, 35, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [6, 3, 5, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 8, 4, 5, 1, 1, 0, 1, 0, 6, 3, 3, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(sigma, tf.math.multiply(tf.math.square(beta), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 1, 8, 2, 9, 4, 5, 4, 2, 4, 9, 5, 3, 8, 1, 3, 3, 8, 0, 8, 5, 2, 0, 2, 8, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [49, 38, 76, 52, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 5, 3, 2, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.subtract(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08228767663240433, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 3, 5, 5, 3, 6, 2, 6, 8, 1, 5, 5, 3, 8, 9, 2, 6, 8, 3, 5, 0, 2, 0, 2, 8, 8], [1, 2, 0, 2, 0, 2, 0, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 52, 59, 56, 35, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [2, 3, 5, 9, 2, 9], [2, 0, 1, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [35, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 32, 32, 21, 11, 5, 12, 12, 8, 4, 4, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(alpha, grad)), tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))), tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.sqrt(grad)))))))), tf.math.add(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.square(tf.math.add(alpha, tf.math.negative(grad))), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.pow(grad, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))))), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 5, 5, 9, 2, 4, 0, 8, 4, 0, 5, 3, 9, 5, 9, 3, 8, 2, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 2, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 58, 59, 53, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 5, 2, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08228767663240433, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 3, 5, 5, 3, 6, 2, 0, 8, 1, 5, 2, 9, 8, 9, 2, 6, 8, 3, 5, 0, 2, 0, 2, 8, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [2, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 32, 32, 22, 10, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.multiply(tf.math.add(alpha, alpha), tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), tf.math.multiply(tf.math.divide_no_nan(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), grad)), tf.math.add(alpha, grad)))))))), tf.math.multiply(tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad)))), tf.math.add(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), alpha)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.square(sigma), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302365155661536, 2.3025848100591944, 2.3025853948790904, 2.3025856108445657, 2.3025855297866578, 2.3025849360233095], "accuracy": [0.10487385839223862, 0.09998679161071777, 0.10328886657953262, 0.09589222073554993, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644529070173, 1.9736443247113908, 1.9736450740269251, 1.9736448696681432, 1.973644529070173, 1.9736441203526087], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.09700000286102295, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 6, 5, 5, 9, 9, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [0, 2, 0, 2, 2, 2, 1, 2, 0, 0, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 65, 59, 9, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [2, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 2, 2, 9, 2, 9], [0, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [36, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 2, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))))), tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 4, 0, 9, 9, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 2, 2, 1, 2, 0, 0, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [2, 3], [], [1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1], [0, 2, 2, 9, 2, 9], [2, 1, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [79, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 6, 1, 2, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.pow(tf.math.negative(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [29374.16297422194, 540216.6943765685, 2496300.7970215296, 6950342.7660810985, 14892445.198256506, 27480452.563730024], "accuracy": [0.0940430611371994, 0.09906221181154251, 0.10091137140989304, 0.09760929644107819, 0.09747721254825592, 0.1080438494682312], "val_loss": [109846.75223214286, 868353.5178571428, 2919665.5714285714, 6907928.285714285, 13477320.857142856, 23271981.714285713], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 1, 5, 2, 9, 4, 3, 9, 2, 4, 9, 5, 3, 8, 1, 1, 3, 8, 0, 8, 2, 2, 0, 2, 8, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [0, 65, 76, 62, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [54, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [2, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [35, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 8, 4, 3, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.subtract(tf.math.square(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.add(alpha, tf.math.multiply(grad, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(sigma, tf.math.square(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3023648229588165, 2.3025842748061778, 2.302584175861365, 2.3025840768220798, 2.302584243315149, 2.302583869894529, 2.3025836720993773, 2.302583843064173], "accuracy": [0.10302469879388809, 0.10659094154834747, 0.1006472036242485, 0.10355303436517715, 0.107647605240345, 0.10249637067317963, 0.10487385839223862, 0.10460969805717468], "val_loss": [1.973644392830985, 1.9736449377877372, 1.9736440522330148, 1.9736435072762626, 1.9736435072762626, 1.9736439159938268, 1.9736440522330148, 1.9736437797546387], "val_accuracy": [0.0976666659116745, 0.10000000149011612, 0.10233332961797714, 0.10233332961797714, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 6, 5, 5, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [50, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, alpha), grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.square(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3021764481906892, 2.3029905607230816, 2.3012957413592408, 2.301902132924868, 2.3021498640939906, 2.3019067191208484], "accuracy": [0.09589222073554993, 0.09060890227556229, 0.09417514503002167, 0.09060890227556229, 0.09206181764602661, 0.09457138925790787], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 1, 5, 2, 9, 4, 5, 4, 2, 4, 9, 5, 3, 8, 1, 3, 3, 8, 0, 8, 5, 2, 0, 2, 8, 8], [1, 2, 0, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [0, 65, 76, 52, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 4, 3, 2, 6, 6, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 83, 82, 91, 78], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], [0, 3, 5, 9, 2, 9], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [22, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 8, 8, 5, 3, 2, 3, 3, 1, 2, 1, 3, 1, 1, 0, 0, 5, 4, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.subtract(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.square(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3021764481906892, 2.3029905607230816, 2.3012957413592408, 2.301902132924868, 2.3021498640939906, 2.3019067191208484], "accuracy": [0.09589222073554993, 0.09060890227556229, 0.09417514503002167, 0.09060890227556229, 0.09206181764602661, 0.09457138925790787], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]