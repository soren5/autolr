[{"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.803428590297699, "mapping_values": [1, 16, 16, 10, 6, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), grad))))), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.048328227260566, 1.6954558903688233, 1.3003026061621104, 0.9675165474958046, 0.8586094848011557, 0.7853753429126148, 0.7030169200494132, 0.712111219879879, 0.6654453352772722, 0.6165057162897792, 0.6041048244320879, 0.570090600118787, 0.5827127344903378, 0.5711840006968506, 0.5428817419328111, 0.5356413461528733, 0.5162606415747336, 0.5269371750781155, 0.48461656015169, 0.4952179460501265, 0.4454657605744277, 0.4744330798913585, 0.46080536043497516, 0.448302596008395, 0.4544804642906184, 0.44199498838374424, 0.4095049330689384, 0.4181478004870618, 0.40570112941224484, 0.40914826864469417, 0.3981115464340064, 0.39740474208581245, 0.3854528433729267, 0.3891597954690921, 0.3787352330357785, 0.3594386402122443, 0.3602154875798327, 0.3763484923657866, 0.34416274544726966, 0.36290792969507296, 0.3561994498904355, 0.32125788961718377, 0.3358661658523609, 0.33027346398946617, 0.33622224084327346, 0.3188387634944387], "accuracy": [0.3123761713504791, 0.3937392830848694, 0.5457667708396912, 0.6411306262016296, 0.6804913282394409, 0.7078325152397156, 0.7312111854553223, 0.7334566116333008, 0.7475894689559937, 0.7676661014556885, 0.7730814814567566, 0.7880068421363831, 0.7769119143486023, 0.7825914621353149, 0.793950617313385, 0.7975168228149414, 0.8035926818847656, 0.8035926818847656, 0.8152159452438354, 0.8119139075279236, 0.8374059200286865, 0.8182538747787476, 0.8302733898162842, 0.8358209133148193, 0.8297450542449951, 0.8403117060661316, 0.8515387773513794, 0.8403117060661316, 0.8495575189590454, 0.8428213000297546, 0.8540483713150024, 0.8514066934585571, 0.8551049828529358, 0.8545766472816467, 0.8589354157447815, 0.8692378997802734, 0.8642187118530273, 0.8589354157447815, 0.8733324408531189, 0.8661999702453613, 0.8684453964233398, 0.8771628737449646, 0.8741249442100525, 0.8746532797813416, 0.8702945709228516, 0.8819178342819214], "val_loss": [1.5071138995034354, 0.986687319619315, 0.741938727242606, 0.6453217778887067, 0.5821752037320819, 0.5475531986781529, 0.5827122245516095, 0.5631301743643624, 0.49125715664454866, 0.4606914690562657, 0.4540386199951172, 0.4551085318837847, 0.44906576190676006, 0.42750524623053415, 0.4424266985484532, 0.4570369635309492, 0.5262811354228428, 0.41374437298093525, 0.38869643211364746, 0.3847985097340175, 0.38667626891817364, 0.3852186458451407, 0.3942022749355861, 0.40394859654562815, 0.36793677295957294, 0.36367444481168476, 0.3970101475715637, 0.3598941309111459, 0.36187744140625, 0.34358196599142893, 0.3810984662600926, 0.3604243653161185, 0.3738296457699367, 0.33556944131851196, 0.3504076429775783, 0.33928436040878296, 0.3879804526056562, 0.3493301953588213, 0.33676245382853914, 0.36993877376828876, 0.3215920925140381, 0.35611359562192646, 0.32866402183260235, 0.32512409346444265, 0.3312610983848572, 0.32672388213021414], "val_accuracy": [0.35866665840148926, 0.6010000109672546, 0.6443333625793457, 0.6956666707992554, 0.7316666841506958, 0.7386666536331177, 0.7269999980926514, 0.737333357334137, 0.7893333435058594, 0.7956666946411133, 0.7926666736602783, 0.7943333387374878, 0.8116666674613953, 0.8083333373069763, 0.8033333420753479, 0.7889999747276306, 0.7666666507720947, 0.8183333277702332, 0.8289999961853027, 0.8370000123977661, 0.8366666436195374, 0.8343333601951599, 0.8296666741371155, 0.8159999847412109, 0.8503333330154419, 0.8506666421890259, 0.8243333101272583, 0.8510000109672546, 0.8423333168029785, 0.8566666841506958, 0.8356666564941406, 0.843999981880188, 0.8353333473205566, 0.8646666407585144, 0.8506666421890259, 0.8606666922569275, 0.8353333473205566, 0.8569999933242798, 0.8659999966621399, 0.8349999785423279, 0.8726666569709778, 0.8460000157356262, 0.862666666507721, 0.8700000047683716, 0.8640000224113464, 0.8586666584014893]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [2, 8, 6, 2, 0, 2, 8, 2, 5, 6, 1, 8], [2, 0, 1, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [36, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.803428590297699, "mapping_values": [1, 17, 17, 10, 7, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))))))))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.048328227260566, 1.6954558903688233, 1.3003026061621104, 0.9675165474958046, 0.8586094848011557, 0.7853753429126148, 0.7030169200494132, 0.712111219879879, 0.6654453352772722, 0.6165057162897792, 0.6041048244320879, 0.570090600118787, 0.5827127344903378, 0.5711840006968506, 0.5428817419328111, 0.5356413461528733, 0.5162606415747336, 0.5269371750781155, 0.48461656015169, 0.4952179460501265, 0.4454657605744277, 0.4744330798913585, 0.46080536043497516, 0.448302596008395, 0.4544804642906184, 0.44199498838374424, 0.4095049330689384, 0.4181478004870618, 0.40570112941224484, 0.40914826864469417, 0.3981115464340064, 0.39740474208581245, 0.3854528433729267, 0.3891597954690921, 0.3787352330357785, 0.3594386402122443, 0.3602154875798327, 0.3763484923657866, 0.34416274544726966, 0.36290792969507296, 0.3561994498904355, 0.32125788961718377, 0.3358661658523609, 0.33027346398946617, 0.33622224084327346, 0.3188387634944387], "accuracy": [0.3123761713504791, 0.3937392830848694, 0.5457667708396912, 0.6411306262016296, 0.6804913282394409, 0.7078325152397156, 0.7312111854553223, 0.7334566116333008, 0.7475894689559937, 0.7676661014556885, 0.7730814814567566, 0.7880068421363831, 0.7769119143486023, 0.7825914621353149, 0.793950617313385, 0.7975168228149414, 0.8035926818847656, 0.8035926818847656, 0.8152159452438354, 0.8119139075279236, 0.8374059200286865, 0.8182538747787476, 0.8302733898162842, 0.8358209133148193, 0.8297450542449951, 0.8403117060661316, 0.8515387773513794, 0.8403117060661316, 0.8495575189590454, 0.8428213000297546, 0.8540483713150024, 0.8514066934585571, 0.8551049828529358, 0.8545766472816467, 0.8589354157447815, 0.8692378997802734, 0.8642187118530273, 0.8589354157447815, 0.8733324408531189, 0.8661999702453613, 0.8684453964233398, 0.8771628737449646, 0.8741249442100525, 0.8746532797813416, 0.8702945709228516, 0.8819178342819214], "val_loss": [1.5071138995034354, 0.986687319619315, 0.741938727242606, 0.6453217778887067, 0.5821752037320819, 0.5475531986781529, 0.5827122245516095, 0.5631301743643624, 0.49125715664454866, 0.4606914690562657, 0.4540386199951172, 0.4551085318837847, 0.44906576190676006, 0.42750524623053415, 0.4424266985484532, 0.4570369635309492, 0.5262811354228428, 0.41374437298093525, 0.38869643211364746, 0.3847985097340175, 0.38667626891817364, 0.3852186458451407, 0.3942022749355861, 0.40394859654562815, 0.36793677295957294, 0.36367444481168476, 0.3970101475715637, 0.3598941309111459, 0.36187744140625, 0.34358196599142893, 0.3810984662600926, 0.3604243653161185, 0.3738296457699367, 0.33556944131851196, 0.3504076429775783, 0.33928436040878296, 0.3879804526056562, 0.3493301953588213, 0.33676245382853914, 0.36993877376828876, 0.3215920925140381, 0.35611359562192646, 0.32866402183260235, 0.32512409346444265, 0.3312610983848572, 0.32672388213021414], "val_accuracy": [0.35866665840148926, 0.6010000109672546, 0.6443333625793457, 0.6956666707992554, 0.7316666841506958, 0.7386666536331177, 0.7269999980926514, 0.737333357334137, 0.7893333435058594, 0.7956666946411133, 0.7926666736602783, 0.7943333387374878, 0.8116666674613953, 0.8083333373069763, 0.8033333420753479, 0.7889999747276306, 0.7666666507720947, 0.8183333277702332, 0.8289999961853027, 0.8370000123977661, 0.8366666436195374, 0.8343333601951599, 0.8296666741371155, 0.8159999847412109, 0.8503333330154419, 0.8506666421890259, 0.8243333101272583, 0.8510000109672546, 0.8423333168029785, 0.8566666841506958, 0.8356666564941406, 0.843999981880188, 0.8353333473205566, 0.8646666407585144, 0.8506666421890259, 0.8606666922569275, 0.8353333473205566, 0.8569999933242798, 0.8659999966621399, 0.8349999785423279, 0.8726666569709778, 0.8460000157356262, 0.862666666507721, 0.8700000047683716, 0.8640000224113464, 0.8586666584014893]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [0, 3, 0, 0, 2, 1, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.803428590297699, "mapping_values": [1, 16, 16, 10, 6, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), grad)))))), tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.048328227260566, 1.6954558903688233, 1.3003026061621104, 0.9675165474958046, 0.8586094848011557, 0.7853753429126148, 0.7030169200494132, 0.712111219879879, 0.6654453352772722, 0.6165057162897792, 0.6041048244320879, 0.570090600118787, 0.5827127344903378, 0.5711840006968506, 0.5428817419328111, 0.5356413461528733, 0.5162606415747336, 0.5269371750781155, 0.48461656015169, 0.4952179460501265, 0.4454657605744277, 0.4744330798913585, 0.46080536043497516, 0.448302596008395, 0.4544804642906184, 0.44199498838374424, 0.4095049330689384, 0.4181478004870618, 0.40570112941224484, 0.40914826864469417, 0.3981115464340064, 0.39740474208581245, 0.3854528433729267, 0.3891597954690921, 0.3787352330357785, 0.3594386402122443, 0.3602154875798327, 0.3763484923657866, 0.34416274544726966, 0.36290792969507296, 0.3561994498904355, 0.32125788961718377, 0.3358661658523609, 0.33027346398946617, 0.33622224084327346, 0.3188387634944387], "accuracy": [0.3123761713504791, 0.3937392830848694, 0.5457667708396912, 0.6411306262016296, 0.6804913282394409, 0.7078325152397156, 0.7312111854553223, 0.7334566116333008, 0.7475894689559937, 0.7676661014556885, 0.7730814814567566, 0.7880068421363831, 0.7769119143486023, 0.7825914621353149, 0.793950617313385, 0.7975168228149414, 0.8035926818847656, 0.8035926818847656, 0.8152159452438354, 0.8119139075279236, 0.8374059200286865, 0.8182538747787476, 0.8302733898162842, 0.8358209133148193, 0.8297450542449951, 0.8403117060661316, 0.8515387773513794, 0.8403117060661316, 0.8495575189590454, 0.8428213000297546, 0.8540483713150024, 0.8514066934585571, 0.8551049828529358, 0.8545766472816467, 0.8589354157447815, 0.8692378997802734, 0.8642187118530273, 0.8589354157447815, 0.8733324408531189, 0.8661999702453613, 0.8684453964233398, 0.8771628737449646, 0.8741249442100525, 0.8746532797813416, 0.8702945709228516, 0.8819178342819214], "val_loss": [1.5071138995034354, 0.986687319619315, 0.741938727242606, 0.6453217778887067, 0.5821752037320819, 0.5475531986781529, 0.5827122245516095, 0.5631301743643624, 0.49125715664454866, 0.4606914690562657, 0.4540386199951172, 0.4551085318837847, 0.44906576190676006, 0.42750524623053415, 0.4424266985484532, 0.4570369635309492, 0.5262811354228428, 0.41374437298093525, 0.38869643211364746, 0.3847985097340175, 0.38667626891817364, 0.3852186458451407, 0.3942022749355861, 0.40394859654562815, 0.36793677295957294, 0.36367444481168476, 0.3970101475715637, 0.3598941309111459, 0.36187744140625, 0.34358196599142893, 0.3810984662600926, 0.3604243653161185, 0.3738296457699367, 0.33556944131851196, 0.3504076429775783, 0.33928436040878296, 0.3879804526056562, 0.3493301953588213, 0.33676245382853914, 0.36993877376828876, 0.3215920925140381, 0.35611359562192646, 0.32866402183260235, 0.32512409346444265, 0.3312610983848572, 0.32672388213021414], "val_accuracy": [0.35866665840148926, 0.6010000109672546, 0.6443333625793457, 0.6956666707992554, 0.7316666841506958, 0.7386666536331177, 0.7269999980926514, 0.737333357334137, 0.7893333435058594, 0.7956666946411133, 0.7926666736602783, 0.7943333387374878, 0.8116666674613953, 0.8083333373069763, 0.8033333420753479, 0.7889999747276306, 0.7666666507720947, 0.8183333277702332, 0.8289999961853027, 0.8370000123977661, 0.8366666436195374, 0.8343333601951599, 0.8296666741371155, 0.8159999847412109, 0.8503333330154419, 0.8506666421890259, 0.8243333101272583, 0.8510000109672546, 0.8423333168029785, 0.8566666841506958, 0.8356666564941406, 0.843999981880188, 0.8353333473205566, 0.8646666407585144, 0.8506666421890259, 0.8606666922569275, 0.8353333473205566, 0.8569999933242798, 0.8659999966621399, 0.8349999785423279, 0.8726666569709778, 0.8460000157356262, 0.862666666507721, 0.8700000047683716, 0.8640000224113464, 0.8586666584014893]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0], [7, 9, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [16, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.803428590297699, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.048328227260566, 1.6954558903688233, 1.3003026061621104, 0.9675165474958046, 0.8586094848011557, 0.7853753429126148, 0.7030169200494132, 0.712111219879879, 0.6654453352772722, 0.6165057162897792, 0.6041048244320879, 0.570090600118787, 0.5827127344903378, 0.5711840006968506, 0.5428817419328111, 0.5356413461528733, 0.5162606415747336, 0.5269371750781155, 0.48461656015169, 0.4952179460501265, 0.4454657605744277, 0.4744330798913585, 0.46080536043497516, 0.448302596008395, 0.4544804642906184, 0.44199498838374424, 0.4095049330689384, 0.4181478004870618, 0.40570112941224484, 0.40914826864469417, 0.3981115464340064, 0.39740474208581245, 0.3854528433729267, 0.3891597954690921, 0.3787352330357785, 0.3594386402122443, 0.3602154875798327, 0.3763484923657866, 0.34416274544726966, 0.36290792969507296, 0.3561994498904355, 0.32125788961718377, 0.3358661658523609, 0.33027346398946617, 0.33622224084327346, 0.3188387634944387], "accuracy": [0.3123761713504791, 0.3937392830848694, 0.5457667708396912, 0.6411306262016296, 0.6804913282394409, 0.7078325152397156, 0.7312111854553223, 0.7334566116333008, 0.7475894689559937, 0.7676661014556885, 0.7730814814567566, 0.7880068421363831, 0.7769119143486023, 0.7825914621353149, 0.793950617313385, 0.7975168228149414, 0.8035926818847656, 0.8035926818847656, 0.8152159452438354, 0.8119139075279236, 0.8374059200286865, 0.8182538747787476, 0.8302733898162842, 0.8358209133148193, 0.8297450542449951, 0.8403117060661316, 0.8515387773513794, 0.8403117060661316, 0.8495575189590454, 0.8428213000297546, 0.8540483713150024, 0.8514066934585571, 0.8551049828529358, 0.8545766472816467, 0.8589354157447815, 0.8692378997802734, 0.8642187118530273, 0.8589354157447815, 0.8733324408531189, 0.8661999702453613, 0.8684453964233398, 0.8771628737449646, 0.8741249442100525, 0.8746532797813416, 0.8702945709228516, 0.8819178342819214], "val_loss": [1.5071138995034354, 0.986687319619315, 0.741938727242606, 0.6453217778887067, 0.5821752037320819, 0.5475531986781529, 0.5827122245516095, 0.5631301743643624, 0.49125715664454866, 0.4606914690562657, 0.4540386199951172, 0.4551085318837847, 0.44906576190676006, 0.42750524623053415, 0.4424266985484532, 0.4570369635309492, 0.5262811354228428, 0.41374437298093525, 0.38869643211364746, 0.3847985097340175, 0.38667626891817364, 0.3852186458451407, 0.3942022749355861, 0.40394859654562815, 0.36793677295957294, 0.36367444481168476, 0.3970101475715637, 0.3598941309111459, 0.36187744140625, 0.34358196599142893, 0.3810984662600926, 0.3604243653161185, 0.3738296457699367, 0.33556944131851196, 0.3504076429775783, 0.33928436040878296, 0.3879804526056562, 0.3493301953588213, 0.33676245382853914, 0.36993877376828876, 0.3215920925140381, 0.35611359562192646, 0.32866402183260235, 0.32512409346444265, 0.3312610983848572, 0.32672388213021414], "val_accuracy": [0.35866665840148926, 0.6010000109672546, 0.6443333625793457, 0.6956666707992554, 0.7316666841506958, 0.7386666536331177, 0.7269999980926514, 0.737333357334137, 0.7893333435058594, 0.7956666946411133, 0.7926666736602783, 0.7943333387374878, 0.8116666674613953, 0.8083333373069763, 0.8033333420753479, 0.7889999747276306, 0.7666666507720947, 0.8183333277702332, 0.8289999961853027, 0.8370000123977661, 0.8366666436195374, 0.8343333601951599, 0.8296666741371155, 0.8159999847412109, 0.8503333330154419, 0.8506666421890259, 0.8243333101272583, 0.8510000109672546, 0.8423333168029785, 0.8566666841506958, 0.8356666564941406, 0.843999981880188, 0.8353333473205566, 0.8646666407585144, 0.8506666421890259, 0.8606666922569275, 0.8353333473205566, 0.8569999933242798, 0.8659999966621399, 0.8349999785423279, 0.8726666569709778, 0.8460000157356262, 0.862666666507721, 0.8700000047683716, 0.8640000224113464, 0.8586666584014893]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 9, 0, 3, 8, 2, 5, 6, 1, 8], [0, 3, 1, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [5, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [21, 25, 50, 71, 34]], "fitness": -0.7202857136726379, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2991994149050994, 2.2923192847532414, 2.285602391970676, 2.2799315717415234, 2.274509313320361, 2.266243049387037, 2.259650784775786, 2.251374700081709, 2.2444077449751223, 2.235750860746558, 2.227369008173229, 2.2193871879023392, 2.209784377032204, 2.1990065048115994, 2.1873044202419365, 2.174221751082449, 2.156862609059882, 2.1460337597916643, 2.1290496107357653, 2.1126703640032503, 2.0913477894998795, 2.073691312332415, 2.0485822126267372, 2.0292430385984623, 2.0069212313923996, 1.9765447945469454, 1.9481060325729376, 1.9275329194568356, 1.890102627664399, 1.8647605306547017, 1.832992105577852, 1.7942875021122167, 1.7667231757202169, 1.7258689253636639, 1.6991813235893194, 1.6596732151239082, 1.6300241166196558, 1.603439341871856, 1.5720714065518755, 1.544664275581653, 1.5144989748263105, 1.4875089578845198, 1.449260689909621, 1.4451937071163232, 1.4141546745089932, 1.4003144243940968, 1.3734691878508867, 1.3502941652295959, 1.326279756824779, 1.311999925343966, 1.2892509730358828, 1.2827616556051968, 1.2668504444300428, 1.2483159290596384, 1.2403003291494228, 1.2195045873237371, 1.200010302343609, 1.1948973039641686, 1.1841622214543428, 1.1756956338756481, 1.1527836208314535, 1.151039919155999, 1.146985676168624, 1.132343975796345, 1.1189241703742878, 1.1188353432986746, 1.1057543022883582, 1.0872010063139392, 1.095738844864593, 1.0911583038069836, 1.0658948304961464, 1.065185089971663, 1.0657595538223865, 1.052562545980555, 1.0483485587190218, 1.0328858751331764, 1.031650350235866, 1.028928219272224, 1.0135162381952023, 1.013113198074383, 1.0084552704744714, 0.9984058057784783, 0.9948055790462955, 0.9878088039665993, 0.9841816546721402, 0.9771366637176007, 0.9751223447599652, 0.9702484898831094, 0.9697152783117746, 0.9628391278623007, 0.9566398946962745, 0.9512199242164462, 0.941143561206269, 0.9466075994287894, 0.9388751513087881, 0.9396024464994075, 0.9328332683350731, 0.9288624505230842, 0.9266584318752664, 0.910842006492451], "accuracy": [0.09972262382507324, 0.11728965491056442, 0.12917712330818176, 0.14714039862155914, 0.16232994198799133, 0.18663319945335388, 0.1990489959716797, 0.2230881005525589, 0.23761722445487976, 0.2502971887588501, 0.27024170756340027, 0.27420419454574585, 0.2938845455646515, 0.30682867765426636, 0.3199048936367035, 0.33218860626220703, 0.35583147406578064, 0.35107648372650146, 0.3629639446735382, 0.37564390897750854, 0.38304054737091064, 0.38687095046043396, 0.39506009221076965, 0.4029850661754608, 0.4138158857822418, 0.42226919531822205, 0.4241183400154114, 0.43164706230163574, 0.4399682879447937, 0.44010037183761597, 0.4484215974807739, 0.46625280380249023, 0.468630313873291, 0.4707436263561249, 0.48527276515960693, 0.4858010709285736, 0.49148064851760864, 0.5027077198028564, 0.505349338054657, 0.5036323070526123, 0.5214634537696838, 0.5213313698768616, 0.5342755317687988, 0.5256901383399963, 0.5340113639831543, 0.5299167633056641, 0.5468233823776245, 0.5468233823776245, 0.5555408596992493, 0.5543521046638489, 0.5641262531280518, 0.5674283504486084, 0.568220853805542, 0.5723153948783875, 0.5778629183769226, 0.5772024989128113, 0.587769091129303, 0.5890899300575256, 0.5925241112709045, 0.590278685092926, 0.6062607169151306, 0.5975432395935059, 0.6021661758422852, 0.6065248847007751, 0.6136573553085327, 0.6122044920921326, 0.6140536069869995, 0.6164311170578003, 0.6129969358444214, 0.6193369626998901, 0.6321489810943604, 0.6235635876655579, 0.6254127621650696, 0.6259410977363586, 0.6338660717010498, 0.637828528881073, 0.6369040012359619, 0.6404702067375183, 0.6465460062026978, 0.6432439684867859, 0.6454893946647644, 0.6440364718437195, 0.6518293619155884, 0.6502443552017212, 0.6556597352027893, 0.6516972780227661, 0.654999315738678, 0.655527651309967, 0.6585655808448792, 0.659490168094635, 0.6626601219177246, 0.6621318459510803, 0.663848876953125, 0.6687359809875488, 0.6670188903808594, 0.6660943031311035, 0.6713775992393494, 0.6712455153465271, 0.6711134314537048, 0.6753401160240173], "val_loss": [1.964338983808245, 1.958193029676165, 1.9520888328552246, 1.9458341598510742, 1.9395276478358678, 1.9329964092799596, 1.926318645477295, 1.919091088431222, 1.9115841048104423, 1.9035654749189104, 1.8950424194335938, 1.8859616007123674, 1.8762116432189941, 1.8656845773969377, 1.85428558077131, 1.8416758946010046, 1.8279186657496862, 1.81317138671875, 1.7972081048148019, 1.7800572259085519, 1.76137147630964, 1.7413585526602608, 1.7196519034249442, 1.6966497216905867, 1.6723816394805908, 1.646198000226702, 1.6184637887137276, 1.5898504938398088, 1.5596273286002023, 1.5286191531590052, 1.4966623783111572, 1.4636616706848145, 1.4306707041604179, 1.396918501172747, 1.3635500499180384, 1.3296644006456648, 1.2968769754682268, 1.264845882143293, 1.2337731293269567, 1.2035259178706579, 1.1744016919817244, 1.1465284824371338, 1.119628804070609, 1.0951381410871233, 1.0715836116245814, 1.0498346601213728, 1.0285719122205461, 1.0083515984671456, 0.9890378543308803, 0.9711876937321254, 0.9537843295506069, 0.9383355549403599, 0.9233354159763881, 0.9090148040226528, 0.89604994228908, 0.8832642691476005, 0.8704516547066825, 0.8595972912652152, 0.8488227639879499, 0.8385415247508458, 0.828575577054705, 0.8197412490844727, 0.8109191996710641, 0.8026437759399414, 0.7942684207643781, 0.786814774785723, 0.7796877111707415, 0.77223311151777, 0.7661298172814506, 0.7600258248192924, 0.7533714771270752, 0.7477774620056152, 0.7421449593135289, 0.7367269311632428, 0.7316463334219796, 0.7263964414596558, 0.7213378974369594, 0.7168759448187692, 0.712387033871242, 0.7079356057303292, 0.703717759677342, 0.6997075080871582, 0.6951364619391305, 0.6912635224206107, 0.6880272797175816, 0.6842029435294015, 0.6807028225490025, 0.6770695958818708, 0.6736606359481812, 0.670595645904541, 0.6678001369748797, 0.6645962170192173, 0.6614184209278652, 0.6592873505183628, 0.6564870050975254, 0.6538236822400775, 0.650806018284389, 0.6483715091432843, 0.646198000226702, 0.6437164374760219], "val_accuracy": [0.07999999821186066, 0.1420000046491623, 0.2056666612625122, 0.2523333430290222, 0.3050000071525574, 0.34200000762939453, 0.36633333563804626, 0.3816666603088379, 0.3973333239555359, 0.4090000092983246, 0.4233333468437195, 0.4336666762828827, 0.4413333237171173, 0.4546666741371155, 0.46166667342185974, 0.4723333418369293, 0.4856666624546051, 0.4906666576862335, 0.4946666657924652, 0.5053333044052124, 0.5166666507720947, 0.5256666541099548, 0.5353333353996277, 0.5403333306312561, 0.5460000038146973, 0.5516666769981384, 0.5540000200271606, 0.5590000152587891, 0.5630000233650208, 0.5683333277702332, 0.5743333101272583, 0.5759999752044678, 0.5766666531562805, 0.5826666951179504, 0.5843333601951599, 0.5923333168029785, 0.5926666855812073, 0.5983333587646484, 0.6023333072662354, 0.6086666584014893, 0.6169999837875366, 0.621666669845581, 0.6299999952316284, 0.6380000114440918, 0.6439999938011169, 0.6499999761581421, 0.6576666831970215, 0.6636666655540466, 0.6676666736602783, 0.6700000166893005, 0.675000011920929, 0.6773333549499512, 0.6796666383743286, 0.6850000023841858, 0.6890000104904175, 0.6886666417121887, 0.690666675567627, 0.6933333277702332, 0.6946666836738586, 0.6946666836738586, 0.6970000267028809, 0.6973333358764648, 0.6996666789054871, 0.7009999752044678, 0.7009999752044678, 0.7016666531562805, 0.703000009059906, 0.7046666741371155, 0.7056666612625122, 0.7039999961853027, 0.7059999704360962, 0.7059999704360962, 0.7066666483879089, 0.7080000042915344, 0.7073333263397217, 0.7099999785423279, 0.7099999785423279, 0.7120000123977661, 0.7133333086967468, 0.7123333215713501, 0.7143333554267883, 0.7160000205039978, 0.7206666469573975, 0.7203333377838135, 0.7206666469573975, 0.7229999899864197, 0.7243333458900452, 0.7243333458900452, 0.7283333539962769, 0.7269999980926514, 0.7279999852180481, 0.7283333539962769, 0.7306666374206543, 0.7303333282470703, 0.7326666712760925, 0.7323333621025085, 0.7329999804496765, 0.7336666584014893, 0.7326666712760925, 0.7360000014305115]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [2, 8, 6, 8, 0, 3, 8, 9, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [51, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [6, 3, 2, 9, 2, 9], [2, 3, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 8, 3, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(grad, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07687227427959442, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [2, 8, 2, 1, 0, 3, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1], [1, 3, 2, 6, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07687227427959442, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 8, 6, 9, 0, 3, 8, 2, 5, 6, 1, 8], [0, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [0, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 3, 1, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0], [2, 0, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [2, 3, 1, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 6, 5, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.negative(alpha))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [2, 1, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [95, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [1, 2, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 10, 6, 4, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 9, 5, 4, 3], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), grad)))), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.303113684001112, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [2, 0, 2, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 13, 44, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 10, 6, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))))), tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 9, 0, 3, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [36, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 1, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [64, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 5, 6, 6, 0, 8, 8, 2, 5, 6, 1, 8], [2, 1, 2, 0, 1, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 4, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 6, 2, 9, 2, 9], [3, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 9, 5, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 5, 2, 3, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.negative(alpha))), tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.divide_no_nan(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0870426595211029, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [2, 8, 6, 6, 0, 3, 2, 2, 5, 8, 1, 8], [1, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [0, 78, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 0, 1], [0, 0, 0, 0], [3, 3, 0], [0, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 1, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 3, 3, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07449477910995483, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 9, 0, 3, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [0, 98, 68, 73, 46], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [9, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 1, 1], [0, 0, 1, 0], [3, 3, 0], [2, 3], [], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 1, 0, 1, 5, 2, 2, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.303113684001112, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [2, 0, 2, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 13, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 5, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 10, 6, 4, 1, 1, 0, 1, 0, 6, 4, 3, 1, 0, 4, 2, 2, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), grad))))))))), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.square(beta), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0], [2, 9, 5, 6, 0, 3, 8, 2, 8, 6, 1, 8], [0, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1], [4, 3, 2, 9, 2, 9], [2, 3, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [21, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 2, 8, 8, 4, 4, 1, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(beta, sigma)", "other_info": {"loss": [2.303113684001112, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [9, 9, 6, 9, 0, 3, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [0, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [1, 0, 1, 0], [6, 3, 0], [5, 3], [], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [9, 3, 2, 9, 2, 9], [2, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 8, 8, 4, 4, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303113684001112, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0], [2, 8, 6, 3, 0, 3, 8, 2, 5, 6, 1, 8], [2, 3, 2, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [5, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1], [0, 3, 2, 9, 2, 9], [2, 3, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [21, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.divide_no_nan(tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(grad)), tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07687227427959442, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0], [2, 0, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [35, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1], [5, 3, 2, 9, 2, 9], [2, 3, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [10, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 11, 11, 6, 5, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.negative(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(beta, sigma))", "other_info": {"loss": [2.3019231592328744, 2.301605689259505, 2.3012630942947654, 2.3022295614637325, 2.303445513820636, 2.3019354857977716], "accuracy": [0.0940430611371994, 0.0940430611371994, 0.09219389408826828, 0.09087307006120682, 0.0874389111995697, 0.09285431355237961], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]