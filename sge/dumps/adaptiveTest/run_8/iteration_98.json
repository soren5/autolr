[{"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.7854285836219788, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 6, 6, 2, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(grad, tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta))), tf.math.add(beta, tf.math.pow(tf.math.negative(grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.23491282630606, 1.843174675404986, 1.300162275170354, 1.0882969678684296, 0.9808359239174154, 0.9378875080211178, 0.8641764554821851, 0.8123913833635548, 0.8022665075732417, 0.7602611919199518, 0.7526445385487387, 0.727503484722929, 0.7246680535408547, 0.7170550063175689, 0.7057745134148694, 0.6797828999225096, 0.685699227581785, 0.6662539222441676, 0.6624184174544586, 0.6444543568748824, 0.6396700239310632, 0.6427971422554181, 0.634637498813078, 0.6259647324147902, 0.6181071894028088, 0.6127917338765418, 0.5987837883648603, 0.5970303196444755, 0.5964435396287672], "accuracy": [0.23959846794605255, 0.45225200057029724, 0.5569937825202942, 0.618280291557312, 0.6548672318458557, 0.6617355942726135, 0.6819442510604858, 0.7061154246330261, 0.7119271159172058, 0.7224937081336975, 0.7243428826332092, 0.7364945411682129, 0.7339849472045898, 0.7368907928466797, 0.7374191284179688, 0.7499669790267944, 0.7477215528488159, 0.7567031979560852, 0.7506273984909058, 0.7625148296356201, 0.7613261342048645, 0.7613261342048645, 0.7643640041351318, 0.7720248103141785, 0.7725531458854675, 0.769911527633667, 0.780610203742981, 0.7781006693840027, 0.7775723338127136], "val_loss": [1.767068862915039, 1.1365276745387487, 0.8318766014916557, 0.7630869490759713, 0.7358941010066441, 0.6380876473018101, 0.611615811075483, 0.5668144566672189, 0.5621928317206246, 0.5541507516588483, 0.5401250975472587, 0.5236924035208566, 0.5436714376722064, 0.5206422294889178, 0.5153967142105103, 0.5189209665570941, 0.5061779362814767, 0.49106947013310026, 0.4789487293788365, 0.4761896814618792, 0.4772331033434187, 0.4823604481560843, 0.47709650652749197, 0.4617861679622105, 0.4654707057135446, 0.4553990364074707, 0.4647211347307478, 0.4593882475580488, 0.464258006640843], "val_accuracy": [0.518666684627533, 0.6203333139419556, 0.6613333225250244, 0.6946666836738586, 0.6840000152587891, 0.7133333086967468, 0.7210000157356262, 0.7639999985694885, 0.7676666378974915, 0.7566666603088379, 0.7666666507720947, 0.7703333497047424, 0.7576666474342346, 0.7696666717529297, 0.7710000276565552, 0.7726666927337646, 0.7816666960716248, 0.7906666398048401, 0.7923333048820496, 0.7943333387374878, 0.7990000247955322, 0.7743333578109741, 0.8026666641235352, 0.8046666383743286, 0.8019999861717224, 0.8013333082199097, 0.8006666898727417, 0.8026666641235352, 0.7963333129882812]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [0, 6, 5, 4, 9, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 2, 3, 5, 0, 2, 3, 3, 0], [28, 29, 20, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9, 6, 4, 5, 3, 4, 4, 0, 5, 6, 8, 0, 1, 1, 4, 6, 1, 3, 3, 8, 1, 6], [1, 1, 3, 1], [56, 38]], "fitness": -0.23199999332427979, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3319627099332556, 2.5231930481491625, 2.3035555300601107, 2.3030338473465495, 2.3029487056817834, 2.302954432199408], "accuracy": [0.23022057116031647, 0.1146479994058609, 0.10011887550354004, 0.09602430462837219, 0.09430722147226334, 0.09391097724437714], "val_loss": [2.4216903959001814, 1.9746403694152832, 1.9737821987697057, 1.9736603328159876, 1.9736501148768835, 1.973611286708287], "val_accuracy": [0.22733333706855774, 0.09966666996479034, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10400000214576721]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [8, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 2, 0, 2, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [1, 3], [], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0], [0, 3, 4, 3, 9], [3, 2, 3, 1], [56, 38]], "fitness": -0.21571429073810577, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta)))))))))), alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.378585998487038, 3.1974409588292416, 2.17033261075673, 2.475347469133582, NaN, NaN, NaN, NaN], "accuracy": [0.21899352967739105, 0.15968827903270721, 0.22031435370445251, 0.15070664882659912, 0.09589222073554993, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.8652734075273787, 1.9637346267700195, 1.9701738357543945, 10.239837101527623, NaN, NaN, NaN, NaN], "val_accuracy": [0.26866665482521057, 0.10766666382551193, 0.38466668128967285, 0.12600000202655792, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [7, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [3, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 1, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0], [5, 3, 9, 3, 9], [2, 1, 3, 1], [56, 38]], "fitness": -0.14714285731315613, "mapping_values": [1, 5, 5, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(beta)", "other_info": {"loss": [2.3001597906384, 2.3010008835820885, 2.302930640821617, 2.3033398014285766, 2.309257235399185, 2.411898484933551, 3.4451452995162235, 7.340860218435561, 15.897609981768136], "accuracy": [0.10196803510189056, 0.0886276587843895, 0.08426892012357712, 0.1010434553027153, 0.11200633645057678, 0.1018359512090683, 0.09298639744520187, 0.10038304328918457, 0.10130762308835983], "val_loss": [1.969637734549386, 1.9735900333949499, 1.9739699363708496, 1.9756434304373605, 1.9954239300319128, 2.3274533408028737, 4.39747987474714, 9.847688947405134, 20.376422882080078], "val_accuracy": [0.11299999803304672, 0.05900000035762787, 0.09233333170413971, 0.1146666631102562, 0.10233332961797714, 0.09966666996479034, 0.10400000214576721, 0.10233332961797714, 0.09733333438634872]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [8, 4, 2, 4, 0, 2, 1, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 2, 0, 2, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [0, 3, 4, 3, 9], [2, 2, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 1, 1, 1, 0, 1, 0, 8, 5, 3, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta)))))), alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.math.pow(beta, tf.math.multiply(sigma, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 5, 3, 0, 0, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 0, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 0, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302462921890805, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 2], [2, 3, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 6, 6, 2, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta))), tf.math.pow(grad, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [0, 6, 5, 4, 9, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 0, 1, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 2], [2, 1, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(alpha)), tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [5, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [3, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 1, 0, 1, 2, 3, 3, 0], [28, 29, 20, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [7, 3, 9, 3, 9], [0, 1, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [2.3024263499104634, 2.302546739294828, 2.3025498945384593, 2.302549857284572, 2.302561439244093, 2.3025597025453455], "accuracy": [0.10381719470024109, 0.1010434553027153, 0.10711926966905594, 0.10685510188341141, 0.10355303436517715, 0.10236428678035736], "val_loss": [1.9736438478742326, 1.973644801548549, 1.9736505917140417, 1.973653861454555, 1.973655836922782, 1.9736591066632951], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 2, 2, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 9, 9, 3, 9], [0, 3, 3, 1], [30, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 2, 0, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [8984.87084193816, 169528.13015123497, 778658.0792332585, 2143802.1766279223, 4604833.92160877, 8419939.605600316], "accuracy": [0.1006472036242485, 0.10368511080741882, 0.09972262382507324, 0.10051512718200684, 0.10038304328918457, 0.10196803510189056], "val_loss": [34048.11607142857, 267336.4464285714, 897062.2142857143, 2120419.3571428573, 4134597.5714285714, 7136788.142857143], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [0, 0, 0, 3, 1, 0], [5, 57], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 8, 3, 5, 8, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 0, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0], [8, 3, 9, 6, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 13, 13, 7, 6, 3, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.pow(tf.math.add(tf.math.pow(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(tf.math.sqrt(tf.math.add(beta, beta))))), tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302462921890805, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 2, 1, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 5, 9, 3, 2], [3, 1, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 0, 1, 1, 0, 1, 0, 3, 3, 0, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(grad, tf.math.add(beta, grad)), tf.math.add(beta, beta))), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [292317648.51243895, 5710936178.964998, 26465048913.861843, 73141759472.51353, 157436934971.47748, 288254352878.8905], "accuracy": [0.10011887550354004, 0.10342095047235489, 0.09972262382507324, 0.10038304328918457, 0.10038304328918457, 0.10196803510189056], "val_loss": [1132711131.4285715, 9057408438.857143, 30563763346.285713, 72440950198.85715, 141479112118.85715, 244467321124.57144], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [0, 6, 5, 4, 9, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 0, 1, 3, 0, 1, 2, 3, 3, 0], [25, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [0, 3, 8, 4, 9, 7, 1, 9, 9, 4, 0, 4, 9, 1, 2, 9], [3, 3, 3, 1, 2, 3, 3, 0, 2, 0, 2, 3, 3, 2, 2, 0], [56, 38, 83, 68, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 2, 1, 1, 0, 1, 0, 5, 4, 2, 2, 0, 20, 16, 4, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.pow(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.negative(tf.math.pow(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), sigma)))), alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [8, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 2, 0, 2, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0], [4, 3, 9, 3, 9], [0, 3, 3, 1], [56, 39]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.3024757231514705, 2.302596083280669, 2.3025949524693154, 2.302595345382882, 2.3025918370303446, 2.302592159939354, 2.30259724769295, 2.302594215421786], "accuracy": [0.09259014576673508, 0.09232597798109055, 0.09391097724437714, 0.09351472556591034, 0.09787346422672272, 0.09760929644107819, 0.09906221181154251, 0.09602430462837219], "val_loss": [1.973644392830985, 1.9736443247113908, 1.9736430985586983, 1.973642349243164, 1.973641804286412, 1.9736407143729073, 1.9736414636884416, 1.9736428260803223], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.10400000214576721, 0.10400000214576721, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 4, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 2, 0, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [0, 5, 9, 3, 2], [3, 1, 3, 1], [58, 38]], "fitness": -0.09371428936719894, "mapping_values": [1, 5, 5, 4, 1, 2, 12, 12, 6, 6, 3, 1, 1, 0, 1, 0, 3, 2, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), tf.math.add(beta, beta))), tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(sigma))", "other_info": {"loss": [2.3028737548288496, 2.303505293303603, 2.304100436998034, 2.3079742733765554, 2.312211620462821, 2.3154299197778285, 2.3189358010882195, 2.322921054836561, 2.3300472254671867, 2.3461823487688034, 2.380881553029403, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09377889335155487, 0.09126931428909302, 0.09430722147226334, 0.07951393723487854, 0.07700435817241669, 0.07753269374370575, 0.0758156105875969, 0.07674019038677216, 0.07740060985088348, 0.07409853488206863, 0.08215559273958206, 0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9717211042131697, 1.9732700756617956, 1.9744936398097448, 1.9766454696655273, 1.9789098330906458, 1.9816285542079382, 1.9846762929643904, 1.988525118146624, 1.9945430755615234, 2.0085203988211497, 2.0714257785252164, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03233333304524422, 0.028333334252238274, 0.028999999165534973, 0.02800000086426735, 0.03333333507180214, 0.03633333370089531, 0.03799999877810478, 0.05833333358168602, 0.08100000023841858, 0.09700000286102295, 0.10000000149011612, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 2, 3, 9, 5], [0, 3, 3, 1], [29, 38]], "fitness": -0.056857142597436905, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 9, 6, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), sigma), tf.math.square(sigma)))", "other_info": {"loss": [2.302314091509737, 2.3013375924956514, 2.300490841936709, 2.3014988002051546, 2.3029007842716775, 2.302737848082585, 2.3018311026105476, 2.3015942047962095, 2.301054136486353, 2.3029810927878156, 2.3019590681066227, 2.301408274298756, 2.3022229532602836, 2.301208622687686, 2.30119754074272, 2.2993999431634293, 2.300564357334077, 2.3000081303160282, 2.3021413624924345, 2.300171179557914, 2.3016442771695464, 2.30083859550986, 2.302395161667898, 2.300489145011131, 2.3005397468746267, 2.3021883518310697, 2.301446785055777, 2.3004527251009677, 2.3001788317204594, 2.300712951123045, 2.3008356151674025, 2.300853436192533, 2.298085698740058, 2.300413280288541, 2.29943313555805, 2.3012270091342386, 2.2997652029773863, 2.300337937655718, 2.2990266959649257, 2.299527499622531, 2.2991818334637157, 2.298812412267757, 2.297582953629036, 2.2993537623884497, 2.299300281111244, 2.2986038577334598, 2.2996262688410676, 2.2991829852795855, 2.2979549349511634, 2.2979077606342253, 2.298206517126708, 2.298017881801808, 2.298816041199444, 2.2990270774157575, 2.2990932568205094, 2.297860819382391, 2.298631966342354, 2.2979753215189196, 2.298758640832212, 2.2981134922182274, 2.2983056274875593, 2.2973455352679912, 2.298769946331991, 2.2983338490862653, 2.298857026804928, 2.297556500535017, 2.2983114204512547, 2.297383685736152, 2.299578070309908, 2.2969666004747746, 2.2982034650161958, 2.298530306404828, 2.2977139603712176, 2.297042539264264, 2.296714401138048, 2.2965405513235386, 2.2968008847300245, 2.2970287824083298, 2.2961663361223006, 2.298419282137521, 2.297491008358987, 2.2969020244987366, 2.296622948986019, 2.2963394348442816, 2.2956114546214397, 2.2975378295670192, 2.297449099342065, 2.296909562254374, 2.2973292281110886, 2.296434347639939, 2.2962879697172127, 2.294957881055063, 2.2971573162544923, 2.2953742115079705, 2.2969040196758486, 2.295752275070384, 2.2958354175586773, 2.2962762384587245, 2.296021126296306, 2.29620483428291], "accuracy": [0.09509972482919693, 0.09470347315073013, 0.09985470771789551, 0.08889182657003403, 0.08994849026203156, 0.09126931428909302, 0.09549596905708313, 0.09100515395402908, 0.0940430611371994, 0.0886276587843895, 0.0956280529499054, 0.09034473448991776, 0.08849557489156723, 0.09285431355237961, 0.09932637959718704, 0.09272222965955734, 0.08717474341392517, 0.09893012791872025, 0.08994849026203156, 0.09681680053472519, 0.09153348207473755, 0.09655263274908066, 0.09800554811954498, 0.09470347315073013, 0.09760929644107819, 0.09140139818191528, 0.08981640636920929, 0.09800554811954498, 0.09576013684272766, 0.08770307898521423, 0.09140139818191528, 0.09509972482919693, 0.09708096832036972, 0.09391097724437714, 0.0936468094587326, 0.09589222073554993, 0.09866596013307571, 0.09391097724437714, 0.09774138033390045, 0.10249637067317963, 0.09866596013307571, 0.09430722147226334, 0.09721305221319199, 0.09655263274908066, 0.09509972482919693, 0.09628847241401672, 0.09866596013307571, 0.10210011899471283, 0.10632677376270294, 0.10434553027153015, 0.10130762308835983, 0.09972262382507324, 0.10579843819141388, 0.09708096832036972, 0.0952318087220192, 0.10328886657953262, 0.09628847241401672, 0.09642054885625839, 0.10500594228506088, 0.09615638852119446, 0.10289261490106583, 0.1018359512090683, 0.0952318087220192, 0.10091137140989304, 0.10513802617788315, 0.10632677376270294, 0.10368511080741882, 0.09972262382507324, 0.09721305221319199, 0.10527011007070541, 0.10487385839223862, 0.09787346422672272, 0.10117553919553757, 0.10249637067317963, 0.10553427785634995, 0.10236428678035736, 0.10355303436517715, 0.10500594228506088, 0.10355303436517715, 0.1026284471154213, 0.10421344637870789, 0.09945846349000931, 0.10196803510189056, 0.10738343745470047, 0.10606260597705841, 0.10619468986988068, 0.10540219396352768, 0.10447761416435242, 0.10355303436517715, 0.10447761416435242, 0.10302469879388809, 0.10355303436517715, 0.10408136248588562, 0.10500594228506088, 0.11002509295940399, 0.10962884873151779, 0.10791176557540894, 0.109232597053051, 0.11134592443704605, 0.10249637067317963], "val_loss": [1.9704980850219727, 1.9704080309186662, 1.9703258786882674, 1.970250470297677, 1.9701760155814034, 1.9701034000941686, 1.9700175012860979, 1.969946997506278, 1.969867365700858, 1.9697988373892648, 1.9697257450648717, 1.9696486336844308, 1.9695748601640974, 1.969494410923549, 1.9694276537214006, 1.9693540164402552, 1.9692840576171875, 1.9692091941833496, 1.9691363743373327, 1.969060284750802, 1.9689818109784807, 1.9689085142953056, 1.968834672655378, 1.9687698909214564, 1.9687081745692663, 1.9686367171151298, 1.9685700961521693, 1.9684884207589286, 1.96842622756958, 1.9683564731052943, 1.968301841190883, 1.9682365826198034, 1.968174593789237, 1.9681198937552316, 1.9680609021868025, 1.9679985046386719, 1.9679388999938965, 1.9678771155221122, 1.9678126743861608, 1.9677535465785436, 1.967696189880371, 1.9676272528512138, 1.96756683077131, 1.9675030027117049, 1.967449528830392, 1.9673974854605538, 1.9673425129481725, 1.9672885622297014, 1.9672343390328544, 1.9671805245535714, 1.9671248708452498, 1.9670780045645577, 1.9670235088893346, 1.9669677189418249, 1.9669154712132044, 1.9668643133980888, 1.9668144498552596, 1.966766084943499, 1.9667129516601562, 1.9666651317051478, 1.9666150638035365, 1.9665677206856864, 1.9665214674813407, 1.9664688110351562, 1.9664219447544642, 1.96636996950422, 1.9663188116891044, 1.966266291482108, 1.9662181990487235, 1.966167790549142, 1.9661191531590052, 1.9660662242344447, 1.9660186767578125, 1.9659716742379325, 1.9659203120640345, 1.9658705166407995, 1.9658228329249792, 1.965773378099714, 1.9657226971217565, 1.9656716074262346, 1.9656244686671667, 1.9655739239283971, 1.9655264445713587, 1.9654756954738073, 1.9654265812465124, 1.9653769901820592, 1.965329578944615, 1.9652790342058455, 1.9652290344238281, 1.9651778084891183, 1.9651330539158411, 1.9650832584926061, 1.9650357791355677, 1.964987073625837, 1.9649391855512346, 1.9648938860212053, 1.964846406664167, 1.9647969518389021, 1.96475008555821, 1.964704922267369], "val_accuracy": [0.039000000804662704, 0.03966666758060455, 0.03999999910593033, 0.041333332657814026, 0.0416666679084301, 0.0430000014603138, 0.043666668236255646, 0.04333333298563957, 0.043666668236255646, 0.04500000178813934, 0.04500000178813934, 0.045666664838790894, 0.045666664838790894, 0.045666664838790894, 0.04600000008940697, 0.04600000008940697, 0.047333333641290665, 0.047333333641290665, 0.04766666516661644, 0.04899999871850014, 0.049666665494441986, 0.05066666752099991, 0.05066666752099991, 0.05133333429694176, 0.052000001072883606, 0.05299999937415123, 0.05366666615009308, 0.05366666615009308, 0.05400000140070915, 0.05433333292603493, 0.054666668176651, 0.054999999701976776, 0.05533333495259285, 0.055666666477918625, 0.0560000017285347, 0.0560000017285347, 0.0560000017285347, 0.0560000017285347, 0.05766666680574417, 0.05833333358168602, 0.058666665107011795, 0.05966666713356972, 0.05966666713356972, 0.05966666713356972, 0.05999999865889549, 0.060333333909511566, 0.06066666543483734, 0.06066666543483734, 0.06066666543483734, 0.061000000685453415, 0.06066666543483734, 0.061000000685453415, 0.06133333221077919, 0.06133333221077919, 0.061666667461395264, 0.061666667461395264, 0.06199999898672104, 0.06266666948795319, 0.06266666948795319, 0.06266666948795319, 0.06300000101327896, 0.06300000101327896, 0.06366666406393051, 0.06366666406393051, 0.06400000303983688, 0.06400000303983688, 0.06466666609048843, 0.06466666609048843, 0.06466666609048843, 0.06499999761581421, 0.06499999761581421, 0.0663333311676979, 0.06666667014360428, 0.0663333311676979, 0.06666667014360428, 0.06700000166893005, 0.06800000369548798, 0.06866666674613953, 0.06866666674613953, 0.06933332979679108, 0.06966666877269745, 0.06966666877269745, 0.07000000029802322, 0.07066666334867477, 0.07066666334867477, 0.07100000232458115, 0.07100000232458115, 0.07100000232458115, 0.0716666653752327, 0.07233333587646484, 0.0729999989271164, 0.07333333045244217, 0.07466666400432587, 0.07533333450555801, 0.07566666603088379, 0.07566666603088379, 0.07599999755620956, 0.07633333653211594, 0.07633333653211594, 0.07666666805744171]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [3, 3], [], [1, 1, 1, 0, 1, 0, 1, 0, 1, 0], [0, 3, 4, 3, 9], [3, 2, 3, 1], [56, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3023545034746404, 2.3014727325613284, 2.3007136522078198, 2.3018044885028983, 2.3032849008821934, 2.3031954030319213], "accuracy": [0.09496764093637466, 0.09417514503002167, 0.09932637959718704, 0.08770307898521423, 0.08889182657003403, 0.09008057415485382], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [0, 6, 5, 4, 9, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 2, 0, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [0, 3, 9, 1, 9], [3, 1, 3, 1], [56, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3023545034746404, 2.3014727325613284, 2.3007136522078198, 2.3018044885028983, 2.3032849008821934, 2.3031954030319213], "accuracy": [0.09496764093637466, 0.09417514503002167, 0.09932637959718704, 0.08770307898521423, 0.08889182657003403, 0.09008057415485382], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0], [3, 3, 9, 3, 9], [3, 2, 3, 1], [56, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, beta)", "other_info": {"loss": [2.3023545034746404, 2.3014727325613284, 2.3007136522078198, 2.3018044885028983, 2.3032849008821934, 2.3031954030319213], "accuracy": [0.09496764093637466, 0.09417514503002167, 0.09932637959718704, 0.08770307898521423, 0.08889182657003403, 0.09008057415485382], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [0, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 8, 9, 3, 0, 0, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 0, 3, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0], [0, 7, 4, 3, 2], [3, 1, 3, 1], [56, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3023545034746404, 2.3014727325613284, 2.3007136522078198, 2.3018044885028983, 2.3032849008821934, 2.3031954030319213], "accuracy": [0.09496764093637466, 0.09417514503002167, 0.09932637959718704, 0.08770307898521423, 0.08889182657003403, 0.09008057415485382], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]