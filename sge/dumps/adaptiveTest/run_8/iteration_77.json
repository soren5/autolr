[{"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.798285722732544, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 6, 6, 2, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(grad, tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta))), tf.math.add(beta, tf.math.pow(tf.math.negative(grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.2350754168181295, 1.8521355668457036, 1.3152690768761484, 1.1113931876226517, 0.9938735376102199, 0.8959133065041298, 0.8698718591908485, 0.8216236441237122, 0.8013476362994886, 0.7840979303807913, 0.7522549987736789, 0.7419769838029179, 0.7215288332456201, 0.7006793738891577, 0.6875726686823307, 0.6771222886124685, 0.6810018399435342, 0.6609072884658639, 0.657593991423894, 0.6466194033197613, 0.6531700380505698, 0.6359736483567238, 0.6388599823148197, 0.6263935042331404, 0.6183957361022416, 0.620051055536483, 0.606603409061185, 0.6093043024986176, 0.5967527662270168, 0.5886266063532226, 0.5861577042782579, 0.5843730793889204, 0.5730785185067945, 0.575095220122906, 0.5826861007559049, 0.5687807781931558, 0.5641927067803008, 0.5512019713021634, 0.5561506079959831, 0.5575347328663124, 0.555026578345807, 0.5411341235606488, 0.5478714903694307, 0.5388432435702182, 0.5554597984333678, 0.5312248692457718, 0.5321965609889824, 0.5281000483730418, 0.532763929178749, 0.5255404141962946, 0.5197264837661297, 0.5228277695665522], "accuracy": [0.23656055331230164, 0.4441949427127838, 0.5523709058761597, 0.6066569685935974, 0.6432439684867859, 0.6824725866317749, 0.6827367544174194, 0.7040021419525146, 0.7086250185966492, 0.7104741930961609, 0.7201162576675415, 0.72672039270401, 0.7367587089538574, 0.7417778372764587, 0.7378153204917908, 0.750231146812439, 0.7442874312400818, 0.7547219395637512, 0.7493065595626831, 0.7588165402412415, 0.7564390301704407, 0.7592127919197083, 0.7605336308479309, 0.7668735980987549, 0.770439863204956, 0.7684586048126221, 0.7770439982414246, 0.7740060687065125, 0.7774402499198914, 0.7807422876358032, 0.7796856164932251, 0.7807422876358032, 0.7873464822769165, 0.7895918488502502, 0.7853652238845825, 0.7845727205276489, 0.7907806038856506, 0.7994980812072754, 0.7973847389221191, 0.7881389260292053, 0.7957997918128967, 0.7996301651000977, 0.8001585006713867, 0.7942147850990295, 0.7932901978492737, 0.8000264167785645, 0.8005547523498535, 0.8024039268493652, 0.798309326171875, 0.8041210174560547, 0.8068947196006775, 0.8063663840293884], "val_loss": [1.7684372493198939, 1.1572552408490862, 0.8526996544429234, 0.7107996600014823, 0.6665075847080776, 0.6085774898529053, 0.6119827542986188, 0.5774173395974296, 0.5823385374886649, 0.536674005644662, 0.5481044054031372, 0.5379504816872733, 0.533863731792995, 0.5106968879699707, 0.5108171701431274, 0.5046812125614711, 0.49438677515302387, 0.4963407005582537, 0.48926385811397005, 0.481487648827689, 0.4868930237633841, 0.4855389084134783, 0.4833692823137556, 0.46692943572998047, 0.472498961857387, 0.4645803826195853, 0.46417830671582905, 0.46158809321267263, 0.468315635408674, 0.45659526756831575, 0.4487839256014143, 0.4401057021958487, 0.4502001830509731, 0.4759360892432077, 0.43570343937192646, 0.44275578430720736, 0.42887623820986065, 0.43017083406448364, 0.44064319133758545, 0.4301775097846985, 0.4313245415687561, 0.4213147929736546, 0.4297244037900652, 0.43213361501693726, 0.42016903843198505, 0.420753470488957, 0.41531479358673096, 0.43051103183201384, 0.4174405676977975, 0.4131971682821001, 0.4106877786772592, 0.41617174659456524], "val_accuracy": [0.49000000953674316, 0.5776666402816772, 0.6526666879653931, 0.699999988079071, 0.6996666789054871, 0.7396666407585144, 0.7400000095367432, 0.7406666874885559, 0.7393333315849304, 0.7696666717529297, 0.7513333559036255, 0.7749999761581421, 0.7706666588783264, 0.7773333191871643, 0.7786666750907898, 0.7833333611488342, 0.7916666865348816, 0.7876666784286499, 0.7833333611488342, 0.7929999828338623, 0.781333327293396, 0.7823333144187927, 0.7919999957084656, 0.8013333082199097, 0.8029999732971191, 0.7923333048820496, 0.8073333501815796, 0.7993333339691162, 0.79666668176651, 0.8040000200271606, 0.8106666803359985, 0.8236666917800903, 0.8073333501815796, 0.7856666445732117, 0.8246666789054871, 0.8146666884422302, 0.8190000057220459, 0.8193333148956299, 0.8056666851043701, 0.8276666402816772, 0.8193333148956299, 0.8270000219345093, 0.8190000057220459, 0.812666654586792, 0.8296666741371155, 0.8246666789054871, 0.8333333134651184, 0.8140000104904175, 0.828000009059906, 0.8309999704360962, 0.828000009059906, 0.82833331823349]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [50, 57], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [6, 4, 2, 8, 8, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 1, 1, 2, 3, 3, 0], [15, 52, 72, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [9, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.798285722732544, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 8, 6, 2, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.pow(tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)))), alpha), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.2350754168181295, 1.8521355668457036, 1.3152690768761484, 1.1113931876226517, 0.9938735376102199, 0.8959133065041298, 0.8698718591908485, 0.8216236441237122, 0.8013476362994886, 0.7840979303807913, 0.7522549987736789, 0.7419769838029179, 0.7215288332456201, 0.7006793738891577, 0.6875726686823307, 0.6771222886124685, 0.6810018399435342, 0.6609072884658639, 0.657593991423894, 0.6466194033197613, 0.6531700380505698, 0.6359736483567238, 0.6388599823148197, 0.6263935042331404, 0.6183957361022416, 0.620051055536483, 0.606603409061185, 0.6093043024986176, 0.5967527662270168, 0.5886266063532226, 0.5861577042782579, 0.5843730793889204, 0.5730785185067945, 0.575095220122906, 0.5826861007559049, 0.5687807781931558, 0.5641927067803008, 0.5512019713021634, 0.5561506079959831, 0.5575347328663124, 0.555026578345807, 0.5411341235606488, 0.5478714903694307, 0.5388432435702182, 0.5554597984333678, 0.5312248692457718, 0.5321965609889824, 0.5281000483730418, 0.532763929178749, 0.5255404141962946, 0.5197264837661297, 0.5228277695665522], "accuracy": [0.23656055331230164, 0.4441949427127838, 0.5523709058761597, 0.6066569685935974, 0.6432439684867859, 0.6824725866317749, 0.6827367544174194, 0.7040021419525146, 0.7086250185966492, 0.7104741930961609, 0.7201162576675415, 0.72672039270401, 0.7367587089538574, 0.7417778372764587, 0.7378153204917908, 0.750231146812439, 0.7442874312400818, 0.7547219395637512, 0.7493065595626831, 0.7588165402412415, 0.7564390301704407, 0.7592127919197083, 0.7605336308479309, 0.7668735980987549, 0.770439863204956, 0.7684586048126221, 0.7770439982414246, 0.7740060687065125, 0.7774402499198914, 0.7807422876358032, 0.7796856164932251, 0.7807422876358032, 0.7873464822769165, 0.7895918488502502, 0.7853652238845825, 0.7845727205276489, 0.7907806038856506, 0.7994980812072754, 0.7973847389221191, 0.7881389260292053, 0.7957997918128967, 0.7996301651000977, 0.8001585006713867, 0.7942147850990295, 0.7932901978492737, 0.8000264167785645, 0.8005547523498535, 0.8024039268493652, 0.798309326171875, 0.8041210174560547, 0.8068947196006775, 0.8063663840293884], "val_loss": [1.7684372493198939, 1.1572552408490862, 0.8526996544429234, 0.7107996600014823, 0.6665075847080776, 0.6085774898529053, 0.6119827542986188, 0.5774173395974296, 0.5823385374886649, 0.536674005644662, 0.5481044054031372, 0.5379504816872733, 0.533863731792995, 0.5106968879699707, 0.5108171701431274, 0.5046812125614711, 0.49438677515302387, 0.4963407005582537, 0.48926385811397005, 0.481487648827689, 0.4868930237633841, 0.4855389084134783, 0.4833692823137556, 0.46692943572998047, 0.472498961857387, 0.4645803826195853, 0.46417830671582905, 0.46158809321267263, 0.468315635408674, 0.45659526756831575, 0.4487839256014143, 0.4401057021958487, 0.4502001830509731, 0.4759360892432077, 0.43570343937192646, 0.44275578430720736, 0.42887623820986065, 0.43017083406448364, 0.44064319133758545, 0.4301775097846985, 0.4313245415687561, 0.4213147929736546, 0.4297244037900652, 0.43213361501693726, 0.42016903843198505, 0.420753470488957, 0.41531479358673096, 0.43051103183201384, 0.4174405676977975, 0.4131971682821001, 0.4106877786772592, 0.41617174659456524], "val_accuracy": [0.49000000953674316, 0.5776666402816772, 0.6526666879653931, 0.699999988079071, 0.6996666789054871, 0.7396666407585144, 0.7400000095367432, 0.7406666874885559, 0.7393333315849304, 0.7696666717529297, 0.7513333559036255, 0.7749999761581421, 0.7706666588783264, 0.7773333191871643, 0.7786666750907898, 0.7833333611488342, 0.7916666865348816, 0.7876666784286499, 0.7833333611488342, 0.7929999828338623, 0.781333327293396, 0.7823333144187927, 0.7919999957084656, 0.8013333082199097, 0.8029999732971191, 0.7923333048820496, 0.8073333501815796, 0.7993333339691162, 0.79666668176651, 0.8040000200271606, 0.8106666803359985, 0.8236666917800903, 0.8073333501815796, 0.7856666445732117, 0.8246666789054871, 0.8146666884422302, 0.8190000057220459, 0.8193333148956299, 0.8056666851043701, 0.8276666402816772, 0.8193333148956299, 0.8270000219345093, 0.8190000057220459, 0.812666654586792, 0.8296666741371155, 0.8246666789054871, 0.8333333134651184, 0.8140000104904175, 0.828000009059906, 0.8309999704360962, 0.828000009059906, 0.82833331823349]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [50, 57], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 1, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1, 1, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.798285722732544, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.2350754168181295, 1.8521355668457036, 1.3152690768761484, 1.1113931876226517, 0.9938735376102199, 0.8959133065041298, 0.8698718591908485, 0.8216236441237122, 0.8013476362994886, 0.7840979303807913, 0.7522549987736789, 0.7419769838029179, 0.7215288332456201, 0.7006793738891577, 0.6875726686823307, 0.6771222886124685, 0.6810018399435342, 0.6609072884658639, 0.657593991423894, 0.6466194033197613, 0.6531700380505698, 0.6359736483567238, 0.6388599823148197, 0.6263935042331404, 0.6183957361022416, 0.620051055536483, 0.606603409061185, 0.6093043024986176, 0.5967527662270168, 0.5886266063532226, 0.5861577042782579, 0.5843730793889204, 0.5730785185067945, 0.575095220122906, 0.5826861007559049, 0.5687807781931558, 0.5641927067803008, 0.5512019713021634, 0.5561506079959831, 0.5575347328663124, 0.555026578345807, 0.5411341235606488, 0.5478714903694307, 0.5388432435702182, 0.5554597984333678, 0.5312248692457718, 0.5321965609889824, 0.5281000483730418, 0.532763929178749, 0.5255404141962946, 0.5197264837661297, 0.5228277695665522], "accuracy": [0.23656055331230164, 0.4441949427127838, 0.5523709058761597, 0.6066569685935974, 0.6432439684867859, 0.6824725866317749, 0.6827367544174194, 0.7040021419525146, 0.7086250185966492, 0.7104741930961609, 0.7201162576675415, 0.72672039270401, 0.7367587089538574, 0.7417778372764587, 0.7378153204917908, 0.750231146812439, 0.7442874312400818, 0.7547219395637512, 0.7493065595626831, 0.7588165402412415, 0.7564390301704407, 0.7592127919197083, 0.7605336308479309, 0.7668735980987549, 0.770439863204956, 0.7684586048126221, 0.7770439982414246, 0.7740060687065125, 0.7774402499198914, 0.7807422876358032, 0.7796856164932251, 0.7807422876358032, 0.7873464822769165, 0.7895918488502502, 0.7853652238845825, 0.7845727205276489, 0.7907806038856506, 0.7994980812072754, 0.7973847389221191, 0.7881389260292053, 0.7957997918128967, 0.7996301651000977, 0.8001585006713867, 0.7942147850990295, 0.7932901978492737, 0.8000264167785645, 0.8005547523498535, 0.8024039268493652, 0.798309326171875, 0.8041210174560547, 0.8068947196006775, 0.8063663840293884], "val_loss": [1.7684372493198939, 1.1572552408490862, 0.8526996544429234, 0.7107996600014823, 0.6665075847080776, 0.6085774898529053, 0.6119827542986188, 0.5774173395974296, 0.5823385374886649, 0.536674005644662, 0.5481044054031372, 0.5379504816872733, 0.533863731792995, 0.5106968879699707, 0.5108171701431274, 0.5046812125614711, 0.49438677515302387, 0.4963407005582537, 0.48926385811397005, 0.481487648827689, 0.4868930237633841, 0.4855389084134783, 0.4833692823137556, 0.46692943572998047, 0.472498961857387, 0.4645803826195853, 0.46417830671582905, 0.46158809321267263, 0.468315635408674, 0.45659526756831575, 0.4487839256014143, 0.4401057021958487, 0.4502001830509731, 0.4759360892432077, 0.43570343937192646, 0.44275578430720736, 0.42887623820986065, 0.43017083406448364, 0.44064319133758545, 0.4301775097846985, 0.4313245415687561, 0.4213147929736546, 0.4297244037900652, 0.43213361501693726, 0.42016903843198505, 0.420753470488957, 0.41531479358673096, 0.43051103183201384, 0.4174405676977975, 0.4131971682821001, 0.4106877786772592, 0.41617174659456524], "val_accuracy": [0.49000000953674316, 0.5776666402816772, 0.6526666879653931, 0.699999988079071, 0.6996666789054871, 0.7396666407585144, 0.7400000095367432, 0.7406666874885559, 0.7393333315849304, 0.7696666717529297, 0.7513333559036255, 0.7749999761581421, 0.7706666588783264, 0.7773333191871643, 0.7786666750907898, 0.7833333611488342, 0.7916666865348816, 0.7876666784286499, 0.7833333611488342, 0.7929999828338623, 0.781333327293396, 0.7823333144187927, 0.7919999957084656, 0.8013333082199097, 0.8029999732971191, 0.7923333048820496, 0.8073333501815796, 0.7993333339691162, 0.79666668176651, 0.8040000200271606, 0.8106666803359985, 0.8236666917800903, 0.8073333501815796, 0.7856666445732117, 0.8246666789054871, 0.8146666884422302, 0.8190000057220459, 0.8193333148956299, 0.8056666851043701, 0.8276666402816772, 0.8193333148956299, 0.8270000219345093, 0.8190000057220459, 0.812666654586792, 0.8296666741371155, 0.8246666789054871, 0.8333333134651184, 0.8140000104904175, 0.828000009059906, 0.8309999704360962, 0.828000009059906, 0.82833331823349]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 2, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 0, 2, 3, 0, 1, 2, 3, 3, 0], [85, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.798285722732544, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 8, 8, 2, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), alpha)), tf.math.add(beta, beta))))))), tf.math.square(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.2350754168181295, 1.8521355668457036, 1.3152690768761484, 1.1113931876226517, 0.9938735376102199, 0.8959133065041298, 0.8698718591908485, 0.8216236441237122, 0.8013476362994886, 0.7840979303807913, 0.7522549987736789, 0.7419769838029179, 0.7215288332456201, 0.7006793738891577, 0.6875726686823307, 0.6771222886124685, 0.6810018399435342, 0.6609072884658639, 0.657593991423894, 0.6466194033197613, 0.6531700380505698, 0.6359736483567238, 0.6388599823148197, 0.6263935042331404, 0.6183957361022416, 0.620051055536483, 0.606603409061185, 0.6093043024986176, 0.5967527662270168, 0.5886266063532226, 0.5861577042782579, 0.5843730793889204, 0.5730785185067945, 0.575095220122906, 0.5826861007559049, 0.5687807781931558, 0.5641927067803008, 0.5512019713021634, 0.5561506079959831, 0.5575347328663124, 0.555026578345807, 0.5411341235606488, 0.5478714903694307, 0.5388432435702182, 0.5554597984333678, 0.5312248692457718, 0.5321965609889824, 0.5281000483730418, 0.532763929178749, 0.5255404141962946, 0.5197264837661297, 0.5228277695665522], "accuracy": [0.23656055331230164, 0.4441949427127838, 0.5523709058761597, 0.6066569685935974, 0.6432439684867859, 0.6824725866317749, 0.6827367544174194, 0.7040021419525146, 0.7086250185966492, 0.7104741930961609, 0.7201162576675415, 0.72672039270401, 0.7367587089538574, 0.7417778372764587, 0.7378153204917908, 0.750231146812439, 0.7442874312400818, 0.7547219395637512, 0.7493065595626831, 0.7588165402412415, 0.7564390301704407, 0.7592127919197083, 0.7605336308479309, 0.7668735980987549, 0.770439863204956, 0.7684586048126221, 0.7770439982414246, 0.7740060687065125, 0.7774402499198914, 0.7807422876358032, 0.7796856164932251, 0.7807422876358032, 0.7873464822769165, 0.7895918488502502, 0.7853652238845825, 0.7845727205276489, 0.7907806038856506, 0.7994980812072754, 0.7973847389221191, 0.7881389260292053, 0.7957997918128967, 0.7996301651000977, 0.8001585006713867, 0.7942147850990295, 0.7932901978492737, 0.8000264167785645, 0.8005547523498535, 0.8024039268493652, 0.798309326171875, 0.8041210174560547, 0.8068947196006775, 0.8063663840293884], "val_loss": [1.7684372493198939, 1.1572552408490862, 0.8526996544429234, 0.7107996600014823, 0.6665075847080776, 0.6085774898529053, 0.6119827542986188, 0.5774173395974296, 0.5823385374886649, 0.536674005644662, 0.5481044054031372, 0.5379504816872733, 0.533863731792995, 0.5106968879699707, 0.5108171701431274, 0.5046812125614711, 0.49438677515302387, 0.4963407005582537, 0.48926385811397005, 0.481487648827689, 0.4868930237633841, 0.4855389084134783, 0.4833692823137556, 0.46692943572998047, 0.472498961857387, 0.4645803826195853, 0.46417830671582905, 0.46158809321267263, 0.468315635408674, 0.45659526756831575, 0.4487839256014143, 0.4401057021958487, 0.4502001830509731, 0.4759360892432077, 0.43570343937192646, 0.44275578430720736, 0.42887623820986065, 0.43017083406448364, 0.44064319133758545, 0.4301775097846985, 0.4313245415687561, 0.4213147929736546, 0.4297244037900652, 0.43213361501693726, 0.42016903843198505, 0.420753470488957, 0.41531479358673096, 0.43051103183201384, 0.4174405676977975, 0.4131971682821001, 0.4106877786772592, 0.41617174659456524], "val_accuracy": [0.49000000953674316, 0.5776666402816772, 0.6526666879653931, 0.699999988079071, 0.6996666789054871, 0.7396666407585144, 0.7400000095367432, 0.7406666874885559, 0.7393333315849304, 0.7696666717529297, 0.7513333559036255, 0.7749999761581421, 0.7706666588783264, 0.7773333191871643, 0.7786666750907898, 0.7833333611488342, 0.7916666865348816, 0.7876666784286499, 0.7833333611488342, 0.7929999828338623, 0.781333327293396, 0.7823333144187927, 0.7919999957084656, 0.8013333082199097, 0.8029999732971191, 0.7923333048820496, 0.8073333501815796, 0.7993333339691162, 0.79666668176651, 0.8040000200271606, 0.8106666803359985, 0.8236666917800903, 0.8073333501815796, 0.7856666445732117, 0.8246666789054871, 0.8146666884422302, 0.8190000057220459, 0.8193333148956299, 0.8056666851043701, 0.8276666402816772, 0.8193333148956299, 0.8270000219345093, 0.8190000057220459, 0.812666654586792, 0.8296666741371155, 0.8246666789054871, 0.8333333134651184, 0.8140000104904175, 0.828000009059906, 0.8309999704360962, 0.828000009059906, 0.82833331823349]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [50, 57], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 8, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 1, 1, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [2, 3, 0], [2, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [2, 2, 3, 1], [41, 38]], "fitness": -0.6391428709030151, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [1.9687544981628093, 1.1844649991465126, 0.923698588739281, 0.7815768485528414, 0.7145500651849432, 0.6773772775268732, 0.6405620000003713, 0.6266659790215287, 0.6240510162250981, 0.6414561477303898, 0.600147206754008, 0.655503917001793, 0.6687623183756551, 0.7167043820301051, 0.7129997306448861], "accuracy": [0.3399814963340759, 0.5968828201293945, 0.6527539491653442, 0.7047945857048035, 0.7314753532409668, 0.7446836829185486, 0.7580240368843079, 0.7549861073493958, 0.7621186375617981, 0.7629110813140869, 0.7681944370269775, 0.7547219395637512, 0.7497028112411499, 0.7434949278831482, 0.7384757399559021], "val_loss": [0.9488147326878139, 0.7893787622451782, 0.5917121512549264, 0.531634909766061, 0.49493491649627686, 0.48133679798671175, 0.4740471158708845, 0.45909995692116873, 0.4819925682885306, 0.4705081582069397, 0.546107258115496, 0.4826580967221941, 0.5486211947032383, 0.4946657248905727, 0.5216805253710065], "val_accuracy": [0.5933333039283752, 0.6443333625793457, 0.721666693687439, 0.7609999775886536, 0.7796666622161865, 0.7863333225250244, 0.7833333611488342, 0.7950000166893005, 0.793666660785675, 0.7986666560173035, 0.79666668176651, 0.7856666445732117, 0.7649999856948853, 0.7900000214576721, 0.7793333530426025]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [3, 0, 0, 3, 1, 0], [50, 57], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 8, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 0, 0, 3, 1, 1, 2, 3, 3, 0], [15, 2, 72, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1, 1, 1], [2, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 2, 9, 3, 9], [0, 3, 3, 1], [39, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 4, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [1563784.3524628924, 28994046.03302074, 136508192.76925108, 381012275.6328094, 804453452.8659358, 1486890084.036455], "accuracy": [0.1014397069811821, 0.10011887550354004, 0.09800554811954498, 0.10289261490106583, 0.09919429570436478, 0.09760929644107819], "val_loss": [5830167.142857143, 46507157.71428572, 156813421.7142857, 371531931.4285714, 725445321.1428572, 1253336027.4285715], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [50, 57], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1, 1, 1], [2, 3, 0], [4, 3], [], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0], [0, 7, 9, 3, 9], [0, 2, 3, 1], [25, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302627116115007, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [50, 57], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 8, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 1, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1, 1, 1], [2, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [9, 3, 9, 3, 9], [0, 3, 3, 1], [46, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))), tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302627116115007, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0], [6, 9, 6, 2, 9, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [60, 96, 84, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [2, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [56, 38, 84]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 5, 2, 3, 1, 1, 0, 1, 0, 6, 5, 1, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [443842.4443642472, 8206482.105930524, 38606299.91124026, 107717156.87967244, 227385759.81402722, 420229837.23788136], "accuracy": [0.10117553919553757, 0.10011887550354004, 0.09800554811954498, 0.10289261490106583, 0.09919429570436478, 0.09760929644107819], "val_loss": [1651951.5714285714, 13156610.285714285, 44339049.14285714, 105024118.85714285, 205037097.14285713, 354202962.28571427], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 8, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 1, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1, 1, 1], [3, 3, 0], [4, 3], [], [1, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302627116115007, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 8, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 0, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1, 1, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 3, 3, 9], [3, 3, 3, 1], [76, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(grad, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta)))), tf.math.add(beta, tf.math.negative(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))))))), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07951393723487854, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 8, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [5, 0, 5, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1, 1, 1], [2, 3, 0], [4, 3], [], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0], [9, 3, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302627116115007, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [0, 0, 0, 3, 1, 0], [5, 57], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 1, 4, 4, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 5, 3, 0, 3, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [9, 3, 9, 3, 9], [1, 3, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.pow(tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302627116115007, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [0, 0, 0, 3, 1, 0], [5, 57, 30], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [8, 9, 6, 2, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 1, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 6, 9, 3, 9], [0, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 3, 2, 2, 2, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302627116115007, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [3, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 8, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [2, 3, 0], [0, 3], [97], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 2, 3, 9], [0, 3, 3, 1], [56, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 2, 1, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [619118731.1053914, 11527895608.062344, 54344302388.57958, 151769128363.80505, 320537703723.8558, 592577515858.1323], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09800554811954498, 0.10289261490106583, 0.09906221181154251, 0.09760929644107819], "val_loss": [2314153472.0, 18506183241.142857, 62450293613.71429, 148022624256.0, 289093170907.4286, 499543591204.5714], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [6, 9, 6, 2, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [92, 21, 43, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 6, 9, 3, 9], [0, 2, 3, 1], [83, 88]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, grad), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1260466774.3958418, 23472879010.878353, 110659942022.10329, 309049740494.53125, 652717500134.9443, 1206689991447.2297], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09800554811954498, 0.10289261490106583, 0.09919429570436478, 0.09760929644107819], "val_loss": [4711779035.428572, 37682899236.57143, 127168390290.28572, 301418910281.1429, 588703334400.0, 1017234737444.5714], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [50, 57], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0], [6, 9, 6, 2, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 1, 1, 2, 3, 3, 0], [60, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 1, 3, 1], [24, 23]], "fitness": -0.07828571647405624, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [2.301289289949624, 2.301904673967474, 2.301668606603056, 2.302029157185583, 2.3015073336441407, 2.3005995477714936, 2.3005173864806756, 2.301158467965308, 2.3024737907044877, 2.3018274697424825, 2.3020442347437746, 2.3006383521508673, 2.3026474273877136, 2.300779382991375, 2.3016863492470154, 2.2996866865527155, 2.3015822034706575, 2.3003303337059378, 2.301705379244233, 2.301237837544931, 2.302197500856687, 2.300531956371992, 2.301744406926492, 2.302685642538447, 2.301071857527467, 2.3024298539172388, 2.3006718818458975, 2.301165387363104, 2.301332041823932, 2.3011890458802444, 2.300548727517713, 2.302088298849253, 2.300393564952064, 2.299983901244428, 2.300397816650336, 2.300753107758687, 2.301788121387077, 2.3001301920944597, 2.3001000693193627, 2.3002135644042814, 2.3014017573248173, 2.2999944134851913, 2.2994270446577314, 2.299947438254537, 2.2994165657974586, 2.3001492821765597, 2.2978998758474503, 2.298485733687744, 2.298881198846275, 2.298522108471263, 2.2988643251027825, 2.2982498939404823, 2.3001882729198417, 2.2983623842726355, 2.3004997695174123, 2.299282354465203, 2.2989571935638318, 2.2979704620437915, 2.2983892632828193, 2.2987486026573962, 2.298562415665513, 2.298361758325456, 2.2987190241732414, 2.299920537641508, 2.3002243933818125, 2.2984960217753643, 2.2980278278338737, 2.2980902028389263, 2.2992612721661474, 2.2966182865187665, 2.298629911017377, 2.299303162886781, 2.2983885609069126, 2.2978456127739633, 2.2973800549779853, 2.2976831079174924, 2.2978212443545605, 2.29784918905265, 2.297872357159999, 2.297684324510408, 2.296642600521672, 2.298696358568239, 2.295778709679169, 2.2979190227393667, 2.297594024016794, 2.2980264741605096, 2.297299839013981, 2.296397064434712, 2.296981145141777, 2.296516301467859, 2.2971182788729965, 2.298339728303888, 2.297133983543536, 2.2961079039515098, 2.295711182489875, 2.2963613884686134, 2.2964562962886883, 2.2973327115857134, 2.295872661903975, 2.2969998115750667], "accuracy": [0.09100515395402908, 0.08875974267721176, 0.09708096832036972, 0.09232597798109055, 0.09259014576673508, 0.09589222073554993, 0.0936468094587326, 0.09311848133802414, 0.09470347315073013, 0.09192973375320435, 0.0882314071059227, 0.0952318087220192, 0.08691058307886124, 0.0952318087220192, 0.0952318087220192, 0.09734513610601425, 0.08994849026203156, 0.09760929644107819, 0.09245806187391281, 0.09417514503002167, 0.09100515395402908, 0.09615638852119446, 0.09338264167308807, 0.09430722147226334, 0.09272222965955734, 0.08809932321310043, 0.09747721254825592, 0.09615638852119446, 0.08849557489156723, 0.09021265059709549, 0.0952318087220192, 0.09126931428909302, 0.09985470771789551, 0.09655263274908066, 0.09708096832036972, 0.09417514503002167, 0.0944393053650856, 0.0944393053650856, 0.08942015469074249, 0.09602430462837219, 0.0956280529499054, 0.09655263274908066, 0.09787346422672272, 0.09536388516426086, 0.09972262382507324, 0.09681680053472519, 0.10170386731624603, 0.09721305221319199, 0.09681680053472519, 0.09655263274908066, 0.1006472036242485, 0.09351472556591034, 0.09589222073554993, 0.09906221181154251, 0.09496764093637466, 0.09708096832036972, 0.09721305221319199, 0.09945846349000931, 0.1022322028875351, 0.09813763201236725, 0.09721305221319199, 0.09826971590518951, 0.09893012791872025, 0.09615638852119446, 0.0948355570435524, 0.09853387624025345, 0.10236428678035736, 0.10302469879388809, 0.09866596013307571, 0.11002509295940399, 0.09800554811954498, 0.10091137140989304, 0.1026284471154213, 0.10487385839223862, 0.10474177449941635, 0.10355303436517715, 0.09959053993225098, 0.09959053993225098, 0.10236428678035736, 0.09259014576673508, 0.1022322028875351, 0.1002509593963623, 0.10487385839223862, 0.09906221181154251, 0.10236428678035736, 0.10460969805717468, 0.10566636174917221, 0.10157178342342377, 0.1014397069811821, 0.1018359512090683, 0.09985470771789551, 0.09879804402589798, 0.10487385839223862, 0.10645885765552521, 0.10553427785634995, 0.10210011899471283, 0.1002509593963623, 0.10328886657953262, 0.10553427785634995, 0.10553427785634995], "val_loss": [1.9705360276358468, 1.9704811232430595, 1.9704266275678362, 1.9703724724905831, 1.9703178405761719, 1.9702634811401367, 1.970210007258824, 1.9701556478227888, 1.9701016971043177, 1.9700475420270647, 1.969993727547782, 1.9699397768293108, 1.9698856217520577, 1.9698314666748047, 1.9697768347603934, 1.9697226796831404, 1.969668184007917, 1.9696143695286341, 1.969560214451381, 1.9695062637329102, 1.9694516999380929, 1.9693975448608398, 1.9693433897835868, 1.969289779663086, 1.969235828944615, 1.9691818782261439, 1.9691276550292969, 1.9690736361912318, 1.9690197535923548, 1.96896573475429, 1.968911920275007, 1.9688581739153181, 1.9688047000340052, 1.9687504768371582, 1.9686970710754395, 1.9686428478785925, 1.9685887609209334, 1.9685348783220564, 1.9684817450387138, 1.968428066798619, 1.9683735711233956, 1.9683198247637068, 1.9682658740452357, 1.9682121276855469, 1.968158449445452, 1.968104430607387, 1.9680503436497279, 1.9679968016488212, 1.9679433958871024, 1.9678893089294434, 1.9678353582109724, 1.9677819524492537, 1.9677277973720007, 1.9676741191319056, 1.967620917728969, 1.967566694532122, 1.967513152531215, 1.967458724975586, 1.9674046380179269, 1.967350959777832, 1.9672974858965193, 1.9672438757760184, 1.9671906062534876, 1.9671375410897392, 1.9670837266104562, 1.9670301164899553, 1.9669760976518904, 1.9669227600097656, 1.966869286128453, 1.9668153354099818, 1.966761793409075, 1.9667085238865443, 1.9666550500052316, 1.9666015080043249, 1.9665476935250419, 1.966494355882917, 1.9664405414036341, 1.9663869994027274, 1.9663333892822266, 1.9662799835205078, 1.9662258284432548, 1.9661728995186942, 1.9661196981157576, 1.9660662923540388, 1.966012954711914, 1.9659592083522253, 1.9659053257533483, 1.9658518518720354, 1.9657985142299108, 1.9657453809465681, 1.9656920433044434, 1.9656389781406947, 1.965585708618164, 1.9655325753348214, 1.9654796464102608, 1.9654263768877303, 1.9653732436043876, 1.9653194972446986, 1.9652659552437919, 1.965212685721261], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03966666758060455, 0.03999999910593033, 0.0403333343565464, 0.0403333343565464, 0.04066666588187218, 0.04066666588187218, 0.04100000113248825, 0.041333332657814026, 0.041999999433755875, 0.041999999433755875, 0.04233333468437195, 0.043666668236255646, 0.04399999976158142, 0.044333335012197495, 0.044333335012197495, 0.04466666653752327, 0.04533333331346512, 0.04600000008940697, 0.04699999839067459, 0.04699999839067459, 0.04766666516661644, 0.04833333194255829, 0.04899999871850014, 0.04899999871850014, 0.04899999871850014, 0.04933333396911621, 0.049666665494441986, 0.049666665494441986, 0.049666665494441986, 0.04933333396911621, 0.049666665494441986, 0.05000000074505806, 0.050333332270383835, 0.050333332270383835, 0.05066666752099991, 0.052000001072883606, 0.05233333259820938, 0.052666667848825455, 0.0533333346247673, 0.0533333346247673, 0.05366666615009308, 0.05366666615009308, 0.054666668176651, 0.054999999701976776, 0.05533333495259285, 0.055666666477918625, 0.056333333253860474, 0.05666666850447655, 0.05700000002980232, 0.0573333315551281, 0.057999998331069946, 0.058666665107011795, 0.059333331882953644, 0.05966666713356972, 0.060333333909511566, 0.06066666543483734, 0.061000000685453415, 0.061000000685453415, 0.061000000685453415, 0.06133333221077919, 0.06133333221077919, 0.06133333221077919, 0.06133333221077919, 0.061666667461395264, 0.061666667461395264, 0.06199999898672104, 0.06266666948795319, 0.06300000101327896, 0.06333333253860474, 0.06400000303983688, 0.06433333456516266, 0.06433333456516266, 0.06466666609048843, 0.06466666609048843, 0.06499999761581421, 0.06499999761581421, 0.06533333659172058, 0.06533333659172058, 0.06566666811704636, 0.06599999964237213, 0.06599999964237213, 0.06700000166893005, 0.06866666674613953, 0.06933332979679108, 0.07000000029802322, 0.07000000029802322, 0.07000000029802322, 0.070333331823349, 0.070333331823349, 0.070333331823349, 0.07133333384990692, 0.07266666740179062, 0.07333333045244217, 0.07400000095367432, 0.07400000095367432, 0.07433333247900009, 0.07433333247900009, 0.07466666400432587]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 3, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [7, 3], [], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0], [5, 3, 9, 3, 9], [1, 2, 3, 1], [69, 38]], "fitness": -0.05428571254014969, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 5, 4, 2, 2, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.multiply(grad, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.2996278125312997, 2.3014631337493463, 2.3024304310848147, 2.3037381170605626, 2.3130005060673833, 2.4595771338158374, 3.741163813757654, 8.035567695407064, 17.414537078873547, 33.331835961282025, 58.37064996935263, 94.22992582753224, 142.4411268676387], "accuracy": [0.09853387624025345, 0.08453308790922165, 0.08770307898521423, 0.09325055778026581, 0.10170386731624603, 0.09496764093637466, 0.09945846349000931, 0.09747721254825592, 0.09721305221319199, 0.09457138925790787, 0.09787346422672272, 0.1010434553027153, 0.09800554811954498], "val_loss": [1.9699987002781458, 1.9732398986816406, 1.9740071296691895, 1.97674104145595, 2.0056629862104143, 2.46183443069458, 4.846383912222726, 10.899420874459404, 22.180200849260604, 40.51409912109375, 67.45703125, 104.66011265345982, 153.814937046596], "val_accuracy": [0.09466666728258133, 0.06466666609048843, 0.0846666693687439, 0.09966666996479034, 0.10233332961797714, 0.09933333098888397, 0.09700000286102295, 0.10400000214576721, 0.09966666996479034, 0.09733333438634872, 0.10233332961797714, 0.09966666996479034, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 0, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [7, 4, 4, 4, 2, 2, 3, 2, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0, 4, 3], [28, 16, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [3, 3, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 6, 6, 4, 2, 2, 29, 29, 17, 12, 5, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, grad))))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, alpha))))), tf.math.add(tf.math.add(beta, beta), grad)), tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.pow(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.sqrt(grad)))), tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))))))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)), sigma)", "other_info": {"loss": [2.301312743460167, 2.3019866167105514, 2.3018088764628524, 2.3022245596806448, 2.3017631148334665, 2.300914206918614], "accuracy": [0.09100515395402908, 0.08836349099874496, 0.09681680053472519, 0.09192973375320435, 0.09232597798109055, 0.09536388516426086], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 3, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [11, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 9, 8, 2, 1, 0, 0, 0, 0, 6, 4, 2, 2], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(beta, tf.math.square(beta)), grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, alpha))), tf.math.add(tf.math.add(beta, beta), grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.301312743460167, 2.3019866167105514, 2.3018088764628524, 2.3022245596806448, 2.3017631148334665, 2.300914206918614], "accuracy": [0.09100515395402908, 0.08836349099874496, 0.09681680053472519, 0.09192973375320435, 0.09232597798109055, 0.09536388516426086], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]