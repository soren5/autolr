[{"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 8, 2, 4, 5, 3, 2, 1, 2, 1, 5, 2, 9, 3, 2, 6, 9, 5, 0, 2, 8, 2, 0, 9, 2], [0, 0, 2, 2, 2, 2, 1, 2, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 10, 35, 27, 57, 79, 53, 52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.8045714497566223, "mapping_values": [1, 24, 24, 14, 10, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(tf.math.subtract(tf.math.add(alpha, grad), grad), grad))))), tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), alpha)))), tf.math.multiply(tf.math.add(alpha, grad), grad)))))), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1328871083879957, 2.0449645075233085, 1.6354184950410477, 1.065738007802186, 0.8872277329957181, 0.794626999414671, 0.7227442850447475, 0.673097669739749, 0.6377442260034774, 0.6543063905890655, 0.5946648419966173, 0.5745448024438876, 0.5718148732859272, 0.5533618134766396, 0.545688229029315, 0.521482415258168, 0.49701503751741155, 0.5177412625742217, 0.5033182231324334, 0.4812787388412157, 0.4925841398683789, 0.49312231244191895, 0.4711802946916582, 0.4579773688549379, 0.4537134969892629, 0.4395799545280654, 0.4475005867655692, 0.4236591233277853, 0.42214802755435316, 0.4255655714667563, 0.4198464770610574, 0.4033098898236589, 0.40005819470166626, 0.3901100547959886, 0.4002944915018471, 0.3991356543097372, 0.3745179012222943, 0.3892953717721184, 0.39589948831154387, 0.3654978772188143, 0.3723248954163157, 0.3660497295897414, 0.3763524293190988, 0.3505667889429956, 0.34775796761728156], "accuracy": [0.2887333333492279, 0.349359393119812, 0.45766741037368774, 0.6219785809516907, 0.6762647032737732, 0.7028133869171143, 0.7297582626342773, 0.7512878179550171, 0.7543256878852844, 0.7510236501693726, 0.7730814814567566, 0.7869502305984497, 0.7783648371696472, 0.7954035401344299, 0.7917051911354065, 0.8018755912780762, 0.8158763647079468, 0.811649739742279, 0.8152159452438354, 0.8168009519577026, 0.8183859586715698, 0.817989706993103, 0.82683926820755, 0.8305375576019287, 0.8327829837799072, 0.8359529972076416, 0.8359529972076416, 0.8403117060661316, 0.845859169960022, 0.8360850811004639, 0.8405758738517761, 0.8487650156021118, 0.8515387773513794, 0.8536521196365356, 0.848368763923645, 0.8508783578872681, 0.8615770936012268, 0.856689989566803, 0.8524633646011353, 0.8601241707801819, 0.8541803956031799, 0.8658037185668945, 0.8597279191017151, 0.869502067565918, 0.8689737319946289], "val_loss": [1.2760594572339738, 1.851431233542306, 0.8197567462921143, 0.7278808866228376, 0.6011664526803153, 0.5958296230861119, 0.5347192457744053, 0.5031003100531442, 0.5070134401321411, 0.46386517797197613, 0.46776858397892546, 0.4306992547852652, 0.47573464257376535, 0.4438991802079337, 0.4262673429080418, 0.4237207514899118, 0.46048927307128906, 0.42348594324929373, 0.40013989380427767, 0.3870537451335362, 0.4337743691035679, 0.38909307547977995, 0.3875356486865452, 0.37926552976880756, 0.3795929891722543, 0.4116501212120056, 0.3805805444717407, 0.3663659521511623, 0.37881522519247873, 0.42983515773500713, 0.3757798245974949, 0.3539702466556004, 0.3578547579901559, 0.4158112406730652, 0.36376129729407175, 0.35397341421672274, 0.3461267948150635, 0.39062035935265677, 0.3585689067840576, 0.3324769565037319, 0.3606842075075422, 0.36380129201071604, 0.34849982602255686, 0.33928658281053814, 0.3397538321358817], "val_accuracy": [0.4556666612625122, 0.4180000126361847, 0.671999990940094, 0.7016666531562805, 0.731333315372467, 0.7233333587646484, 0.7766666412353516, 0.781333327293396, 0.7699999809265137, 0.8069999814033508, 0.7986666560173035, 0.8053333163261414, 0.7756666541099548, 0.8059999942779541, 0.8136666417121887, 0.8220000267028809, 0.8046666383743286, 0.828000009059906, 0.8389999866485596, 0.840666651725769, 0.8023333549499512, 0.8330000042915344, 0.8403333425521851, 0.8426666855812073, 0.8446666598320007, 0.8220000267028809, 0.8346666693687439, 0.8479999899864197, 0.8356666564941406, 0.8036666512489319, 0.8500000238418579, 0.8569999933242798, 0.8506666421890259, 0.8183333277702332, 0.8539999723434448, 0.8513333201408386, 0.8579999804496765, 0.8293333053588867, 0.8493333458900452, 0.8636666536331177, 0.8553333282470703, 0.8453333377838135, 0.8533333539962769, 0.8616666793823242, 0.859000027179718]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [3, 8, 2, 0, 5, 3, 2, 5, 8, 3, 5, 2, 9, 3, 2, 6, 9, 5, 0, 2, 8, 2, 0, 9, 2], [0, 0, 2, 2, 2, 2, 1, 2, 2, 0, 0, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [67, 83, 91, 29, 57, 79, 53, 52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.8045714497566223, "mapping_values": [1, 13, 13, 8, 5, 2, 13, 13, 8, 5, 3, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.multiply(tf.math.add(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(grad))), grad)))), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.multiply(beta, tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1328871083879957, 2.0449645075233085, 1.6354184950410477, 1.065738007802186, 0.8872277329957181, 0.794626999414671, 0.7227442850447475, 0.673097669739749, 0.6377442260034774, 0.6543063905890655, 0.5946648419966173, 0.5745448024438876, 0.5718148732859272, 0.5533618134766396, 0.545688229029315, 0.521482415258168, 0.49701503751741155, 0.5177412625742217, 0.5033182231324334, 0.4812787388412157, 0.4925841398683789, 0.49312231244191895, 0.4711802946916582, 0.4579773688549379, 0.4537134969892629, 0.4395799545280654, 0.4475005867655692, 0.4236591233277853, 0.42214802755435316, 0.4255655714667563, 0.4198464770610574, 0.4033098898236589, 0.40005819470166626, 0.3901100547959886, 0.4002944915018471, 0.3991356543097372, 0.3745179012222943, 0.3892953717721184, 0.39589948831154387, 0.3654978772188143, 0.3723248954163157, 0.3660497295897414, 0.3763524293190988, 0.3505667889429956, 0.34775796761728156], "accuracy": [0.2887333333492279, 0.349359393119812, 0.45766741037368774, 0.6219785809516907, 0.6762647032737732, 0.7028133869171143, 0.7297582626342773, 0.7512878179550171, 0.7543256878852844, 0.7510236501693726, 0.7730814814567566, 0.7869502305984497, 0.7783648371696472, 0.7954035401344299, 0.7917051911354065, 0.8018755912780762, 0.8158763647079468, 0.811649739742279, 0.8152159452438354, 0.8168009519577026, 0.8183859586715698, 0.817989706993103, 0.82683926820755, 0.8305375576019287, 0.8327829837799072, 0.8359529972076416, 0.8359529972076416, 0.8403117060661316, 0.845859169960022, 0.8360850811004639, 0.8405758738517761, 0.8487650156021118, 0.8515387773513794, 0.8536521196365356, 0.848368763923645, 0.8508783578872681, 0.8615770936012268, 0.856689989566803, 0.8524633646011353, 0.8601241707801819, 0.8541803956031799, 0.8658037185668945, 0.8597279191017151, 0.869502067565918, 0.8689737319946289], "val_loss": [1.2760594572339738, 1.851431233542306, 0.8197567462921143, 0.7278808866228376, 0.6011664526803153, 0.5958296230861119, 0.5347192457744053, 0.5031003100531442, 0.5070134401321411, 0.46386517797197613, 0.46776858397892546, 0.4306992547852652, 0.47573464257376535, 0.4438991802079337, 0.4262673429080418, 0.4237207514899118, 0.46048927307128906, 0.42348594324929373, 0.40013989380427767, 0.3870537451335362, 0.4337743691035679, 0.38909307547977995, 0.3875356486865452, 0.37926552976880756, 0.3795929891722543, 0.4116501212120056, 0.3805805444717407, 0.3663659521511623, 0.37881522519247873, 0.42983515773500713, 0.3757798245974949, 0.3539702466556004, 0.3578547579901559, 0.4158112406730652, 0.36376129729407175, 0.35397341421672274, 0.3461267948150635, 0.39062035935265677, 0.3585689067840576, 0.3324769565037319, 0.3606842075075422, 0.36380129201071604, 0.34849982602255686, 0.33928658281053814, 0.3397538321358817], "val_accuracy": [0.4556666612625122, 0.4180000126361847, 0.671999990940094, 0.7016666531562805, 0.731333315372467, 0.7233333587646484, 0.7766666412353516, 0.781333327293396, 0.7699999809265137, 0.8069999814033508, 0.7986666560173035, 0.8053333163261414, 0.7756666541099548, 0.8059999942779541, 0.8136666417121887, 0.8220000267028809, 0.8046666383743286, 0.828000009059906, 0.8389999866485596, 0.840666651725769, 0.8023333549499512, 0.8330000042915344, 0.8403333425521851, 0.8426666855812073, 0.8446666598320007, 0.8220000267028809, 0.8346666693687439, 0.8479999899864197, 0.8356666564941406, 0.8036666512489319, 0.8500000238418579, 0.8569999933242798, 0.8506666421890259, 0.8183333277702332, 0.8539999723434448, 0.8513333201408386, 0.8579999804496765, 0.8293333053588867, 0.8493333458900452, 0.8636666536331177, 0.8553333282470703, 0.8453333377838135, 0.8533333539962769, 0.8616666793823242, 0.859000027179718]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 8, 2, 4, 5, 3, 2, 5, 2, 3, 5, 2, 9, 3, 2, 6, 9, 5, 0, 2, 8, 2, 0, 9, 2], [0, 0, 2, 2, 2, 2, 1, 2, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [67, 83, 91, 29, 57, 79, 53, 52], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 3, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.8045714497566223, "mapping_values": [1, 1, 1, 0, 1, 1, 17, 17, 9, 8, 2, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(beta, tf.math.subtract(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha))), tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.math.multiply(tf.math.divide_no_nan(grad, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), beta), tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, grad))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.1328871083879957, 2.0449645075233085, 1.6354184950410477, 1.065738007802186, 0.8872277329957181, 0.794626999414671, 0.7227442850447475, 0.673097669739749, 0.6377442260034774, 0.6543063905890655, 0.5946648419966173, 0.5745448024438876, 0.5718148732859272, 0.5533618134766396, 0.545688229029315, 0.521482415258168, 0.49701503751741155, 0.5177412625742217, 0.5033182231324334, 0.4812787388412157, 0.4925841398683789, 0.49312231244191895, 0.4711802946916582, 0.4579773688549379, 0.4537134969892629, 0.4395799545280654, 0.4475005867655692, 0.4236591233277853, 0.42214802755435316, 0.4255655714667563, 0.4198464770610574, 0.4033098898236589, 0.40005819470166626, 0.3901100547959886, 0.4002944915018471, 0.3991356543097372, 0.3745179012222943, 0.3892953717721184, 0.39589948831154387, 0.3654978772188143, 0.3723248954163157, 0.3660497295897414, 0.3763524293190988, 0.3505667889429956, 0.34775796761728156], "accuracy": [0.2887333333492279, 0.349359393119812, 0.45766741037368774, 0.6219785809516907, 0.6762647032737732, 0.7028133869171143, 0.7297582626342773, 0.7512878179550171, 0.7543256878852844, 0.7510236501693726, 0.7730814814567566, 0.7869502305984497, 0.7783648371696472, 0.7954035401344299, 0.7917051911354065, 0.8018755912780762, 0.8158763647079468, 0.811649739742279, 0.8152159452438354, 0.8168009519577026, 0.8183859586715698, 0.817989706993103, 0.82683926820755, 0.8305375576019287, 0.8327829837799072, 0.8359529972076416, 0.8359529972076416, 0.8403117060661316, 0.845859169960022, 0.8360850811004639, 0.8405758738517761, 0.8487650156021118, 0.8515387773513794, 0.8536521196365356, 0.848368763923645, 0.8508783578872681, 0.8615770936012268, 0.856689989566803, 0.8524633646011353, 0.8601241707801819, 0.8541803956031799, 0.8658037185668945, 0.8597279191017151, 0.869502067565918, 0.8689737319946289], "val_loss": [1.2760594572339738, 1.851431233542306, 0.8197567462921143, 0.7278808866228376, 0.6011664526803153, 0.5958296230861119, 0.5347192457744053, 0.5031003100531442, 0.5070134401321411, 0.46386517797197613, 0.46776858397892546, 0.4306992547852652, 0.47573464257376535, 0.4438991802079337, 0.4262673429080418, 0.4237207514899118, 0.46048927307128906, 0.42348594324929373, 0.40013989380427767, 0.3870537451335362, 0.4337743691035679, 0.38909307547977995, 0.3875356486865452, 0.37926552976880756, 0.3795929891722543, 0.4116501212120056, 0.3805805444717407, 0.3663659521511623, 0.37881522519247873, 0.42983515773500713, 0.3757798245974949, 0.3539702466556004, 0.3578547579901559, 0.4158112406730652, 0.36376129729407175, 0.35397341421672274, 0.3461267948150635, 0.39062035935265677, 0.3585689067840576, 0.3324769565037319, 0.3606842075075422, 0.36380129201071604, 0.34849982602255686, 0.33928658281053814, 0.3397538321358817], "val_accuracy": [0.4556666612625122, 0.4180000126361847, 0.671999990940094, 0.7016666531562805, 0.731333315372467, 0.7233333587646484, 0.7766666412353516, 0.781333327293396, 0.7699999809265137, 0.8069999814033508, 0.7986666560173035, 0.8053333163261414, 0.7756666541099548, 0.8059999942779541, 0.8136666417121887, 0.8220000267028809, 0.8046666383743286, 0.828000009059906, 0.8389999866485596, 0.840666651725769, 0.8023333549499512, 0.8330000042915344, 0.8403333425521851, 0.8426666855812073, 0.8446666598320007, 0.8220000267028809, 0.8346666693687439, 0.8479999899864197, 0.8356666564941406, 0.8036666512489319, 0.8500000238418579, 0.8569999933242798, 0.8506666421890259, 0.8183333277702332, 0.8539999723434448, 0.8513333201408386, 0.8579999804496765, 0.8293333053588867, 0.8493333458900452, 0.8636666536331177, 0.8553333282470703, 0.8453333377838135, 0.8533333539962769, 0.8616666793823242, 0.859000027179718]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 8, 2, 4, 5, 2, 2, 5, 2, 3, 5, 2, 9, 4, 2, 6, 9, 5, 0, 2, 8, 2, 0, 9, 2], [0, 0, 2, 2, 2, 2, 1, 2, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [46, 83, 3, 29, 57, 79, 53, 52], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 4, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 1, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.8045714497566223, "mapping_values": [1, 4, 4, 2, 2, 2, 8, 8, 4, 4, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha))))), tf.math.add(beta, alpha)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.1328871083879957, 2.0449645075233085, 1.6354184950410477, 1.065738007802186, 0.8872277329957181, 0.794626999414671, 0.7227442850447475, 0.673097669739749, 0.6377442260034774, 0.6543063905890655, 0.5946648419966173, 0.5745448024438876, 0.5718148732859272, 0.5533618134766396, 0.545688229029315, 0.521482415258168, 0.49701503751741155, 0.5177412625742217, 0.5033182231324334, 0.4812787388412157, 0.4925841398683789, 0.49312231244191895, 0.4711802946916582, 0.4579773688549379, 0.4537134969892629, 0.4395799545280654, 0.4475005867655692, 0.4236591233277853, 0.42214802755435316, 0.4255655714667563, 0.4198464770610574, 0.4033098898236589, 0.40005819470166626, 0.3901100547959886, 0.4002944915018471, 0.3991356543097372, 0.3745179012222943, 0.3892953717721184, 0.39589948831154387, 0.3654978772188143, 0.3723248954163157, 0.3660497295897414, 0.3763524293190988, 0.3505667889429956, 0.34775796761728156], "accuracy": [0.2887333333492279, 0.349359393119812, 0.45766741037368774, 0.6219785809516907, 0.6762647032737732, 0.7028133869171143, 0.7297582626342773, 0.7512878179550171, 0.7543256878852844, 0.7510236501693726, 0.7730814814567566, 0.7869502305984497, 0.7783648371696472, 0.7954035401344299, 0.7917051911354065, 0.8018755912780762, 0.8158763647079468, 0.811649739742279, 0.8152159452438354, 0.8168009519577026, 0.8183859586715698, 0.817989706993103, 0.82683926820755, 0.8305375576019287, 0.8327829837799072, 0.8359529972076416, 0.8359529972076416, 0.8403117060661316, 0.845859169960022, 0.8360850811004639, 0.8405758738517761, 0.8487650156021118, 0.8515387773513794, 0.8536521196365356, 0.848368763923645, 0.8508783578872681, 0.8615770936012268, 0.856689989566803, 0.8524633646011353, 0.8601241707801819, 0.8541803956031799, 0.8658037185668945, 0.8597279191017151, 0.869502067565918, 0.8689737319946289], "val_loss": [1.2760594572339738, 1.851431233542306, 0.8197567462921143, 0.7278808866228376, 0.6011664526803153, 0.5958296230861119, 0.5347192457744053, 0.5031003100531442, 0.5070134401321411, 0.46386517797197613, 0.46776858397892546, 0.4306992547852652, 0.47573464257376535, 0.4438991802079337, 0.4262673429080418, 0.4237207514899118, 0.46048927307128906, 0.42348594324929373, 0.40013989380427767, 0.3870537451335362, 0.4337743691035679, 0.38909307547977995, 0.3875356486865452, 0.37926552976880756, 0.3795929891722543, 0.4116501212120056, 0.3805805444717407, 0.3663659521511623, 0.37881522519247873, 0.42983515773500713, 0.3757798245974949, 0.3539702466556004, 0.3578547579901559, 0.4158112406730652, 0.36376129729407175, 0.35397341421672274, 0.3461267948150635, 0.39062035935265677, 0.3585689067840576, 0.3324769565037319, 0.3606842075075422, 0.36380129201071604, 0.34849982602255686, 0.33928658281053814, 0.3397538321358817], "val_accuracy": [0.4556666612625122, 0.4180000126361847, 0.671999990940094, 0.7016666531562805, 0.731333315372467, 0.7233333587646484, 0.7766666412353516, 0.781333327293396, 0.7699999809265137, 0.8069999814033508, 0.7986666560173035, 0.8053333163261414, 0.7756666541099548, 0.8059999942779541, 0.8136666417121887, 0.8220000267028809, 0.8046666383743286, 0.828000009059906, 0.8389999866485596, 0.840666651725769, 0.8023333549499512, 0.8330000042915344, 0.8403333425521851, 0.8426666855812073, 0.8446666598320007, 0.8220000267028809, 0.8346666693687439, 0.8479999899864197, 0.8356666564941406, 0.8036666512489319, 0.8500000238418579, 0.8569999933242798, 0.8506666421890259, 0.8183333277702332, 0.8539999723434448, 0.8513333201408386, 0.8579999804496765, 0.8293333053588867, 0.8493333458900452, 0.8636666536331177, 0.8553333282470703, 0.8453333377838135, 0.8533333539962769, 0.8616666793823242, 0.859000027179718]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [3, 8, 2, 4, 5, 3, 2, 5, 2, 3, 5, 2, 9, 3, 2, 6, 9, 5, 0, 2, 8, 2, 0, 9, 2], [0, 0, 2, 2, 2, 0, 0, 1, 2, 1, 2, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [34, 20, 50, 41, 57, 79, 83, 52, 48], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 1, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.8045714497566223, "mapping_values": [1, 4, 4, 2, 2, 2, 7, 7, 3, 4, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, alpha)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1328871083879957, 2.0449645075233085, 1.6354184950410477, 1.065738007802186, 0.8872277329957181, 0.794626999414671, 0.7227442850447475, 0.673097669739749, 0.6377442260034774, 0.6543063905890655, 0.5946648419966173, 0.5745448024438876, 0.5718148732859272, 0.5533618134766396, 0.545688229029315, 0.521482415258168, 0.49701503751741155, 0.5177412625742217, 0.5033182231324334, 0.4812787388412157, 0.4925841398683789, 0.49312231244191895, 0.4711802946916582, 0.4579773688549379, 0.4537134969892629, 0.4395799545280654, 0.4475005867655692, 0.4236591233277853, 0.42214802755435316, 0.4255655714667563, 0.4198464770610574, 0.4033098898236589, 0.40005819470166626, 0.3901100547959886, 0.4002944915018471, 0.3991356543097372, 0.3745179012222943, 0.3892953717721184, 0.39589948831154387, 0.3654978772188143, 0.3723248954163157, 0.3660497295897414, 0.3763524293190988, 0.3505667889429956, 0.34775796761728156], "accuracy": [0.2887333333492279, 0.349359393119812, 0.45766741037368774, 0.6219785809516907, 0.6762647032737732, 0.7028133869171143, 0.7297582626342773, 0.7512878179550171, 0.7543256878852844, 0.7510236501693726, 0.7730814814567566, 0.7869502305984497, 0.7783648371696472, 0.7954035401344299, 0.7917051911354065, 0.8018755912780762, 0.8158763647079468, 0.811649739742279, 0.8152159452438354, 0.8168009519577026, 0.8183859586715698, 0.817989706993103, 0.82683926820755, 0.8305375576019287, 0.8327829837799072, 0.8359529972076416, 0.8359529972076416, 0.8403117060661316, 0.845859169960022, 0.8360850811004639, 0.8405758738517761, 0.8487650156021118, 0.8515387773513794, 0.8536521196365356, 0.848368763923645, 0.8508783578872681, 0.8615770936012268, 0.856689989566803, 0.8524633646011353, 0.8601241707801819, 0.8541803956031799, 0.8658037185668945, 0.8597279191017151, 0.869502067565918, 0.8689737319946289], "val_loss": [1.2760594572339738, 1.851431233542306, 0.8197567462921143, 0.7278808866228376, 0.6011664526803153, 0.5958296230861119, 0.5347192457744053, 0.5031003100531442, 0.5070134401321411, 0.46386517797197613, 0.46776858397892546, 0.4306992547852652, 0.47573464257376535, 0.4438991802079337, 0.4262673429080418, 0.4237207514899118, 0.46048927307128906, 0.42348594324929373, 0.40013989380427767, 0.3870537451335362, 0.4337743691035679, 0.38909307547977995, 0.3875356486865452, 0.37926552976880756, 0.3795929891722543, 0.4116501212120056, 0.3805805444717407, 0.3663659521511623, 0.37881522519247873, 0.42983515773500713, 0.3757798245974949, 0.3539702466556004, 0.3578547579901559, 0.4158112406730652, 0.36376129729407175, 0.35397341421672274, 0.3461267948150635, 0.39062035935265677, 0.3585689067840576, 0.3324769565037319, 0.3606842075075422, 0.36380129201071604, 0.34849982602255686, 0.33928658281053814, 0.3397538321358817], "val_accuracy": [0.4556666612625122, 0.4180000126361847, 0.671999990940094, 0.7016666531562805, 0.731333315372467, 0.7233333587646484, 0.7766666412353516, 0.781333327293396, 0.7699999809265137, 0.8069999814033508, 0.7986666560173035, 0.8053333163261414, 0.7756666541099548, 0.8059999942779541, 0.8136666417121887, 0.8220000267028809, 0.8046666383743286, 0.828000009059906, 0.8389999866485596, 0.840666651725769, 0.8023333549499512, 0.8330000042915344, 0.8403333425521851, 0.8426666855812073, 0.8446666598320007, 0.8220000267028809, 0.8346666693687439, 0.8479999899864197, 0.8356666564941406, 0.8036666512489319, 0.8500000238418579, 0.8569999933242798, 0.8506666421890259, 0.8183333277702332, 0.8539999723434448, 0.8513333201408386, 0.8579999804496765, 0.8293333053588867, 0.8493333458900452, 0.8636666536331177, 0.8553333282470703, 0.8453333377838135, 0.8533333539962769, 0.8616666793823242, 0.859000027179718]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [3, 8, 2, 4, 5, 3, 2, 5, 2, 3, 5, 2, 9, 3, 2, 6, 9, 5, 0, 2, 8, 2, 0, 9, 2], [0, 0, 2, 2, 2, 2, 1, 2, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [67, 83, 91, 29, 57, 79, 53, 52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.8045714497566223, "mapping_values": [1, 4, 4, 2, 2, 2, 13, 13, 8, 5, 3, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.1328871083879957, 2.0449645075233085, 1.6354184950410477, 1.065738007802186, 0.8872277329957181, 0.794626999414671, 0.7227442850447475, 0.673097669739749, 0.6377442260034774, 0.6543063905890655, 0.5946648419966173, 0.5745448024438876, 0.5718148732859272, 0.5533618134766396, 0.545688229029315, 0.521482415258168, 0.49701503751741155, 0.5177412625742217, 0.5033182231324334, 0.4812787388412157, 0.4925841398683789, 0.49312231244191895, 0.4711802946916582, 0.4579773688549379, 0.4537134969892629, 0.4395799545280654, 0.4475005867655692, 0.4236591233277853, 0.42214802755435316, 0.4255655714667563, 0.4198464770610574, 0.4033098898236589, 0.40005819470166626, 0.3901100547959886, 0.4002944915018471, 0.3991356543097372, 0.3745179012222943, 0.3892953717721184, 0.39589948831154387, 0.3654978772188143, 0.3723248954163157, 0.3660497295897414, 0.3763524293190988, 0.3505667889429956, 0.34775796761728156], "accuracy": [0.2887333333492279, 0.349359393119812, 0.45766741037368774, 0.6219785809516907, 0.6762647032737732, 0.7028133869171143, 0.7297582626342773, 0.7512878179550171, 0.7543256878852844, 0.7510236501693726, 0.7730814814567566, 0.7869502305984497, 0.7783648371696472, 0.7954035401344299, 0.7917051911354065, 0.8018755912780762, 0.8158763647079468, 0.811649739742279, 0.8152159452438354, 0.8168009519577026, 0.8183859586715698, 0.817989706993103, 0.82683926820755, 0.8305375576019287, 0.8327829837799072, 0.8359529972076416, 0.8359529972076416, 0.8403117060661316, 0.845859169960022, 0.8360850811004639, 0.8405758738517761, 0.8487650156021118, 0.8515387773513794, 0.8536521196365356, 0.848368763923645, 0.8508783578872681, 0.8615770936012268, 0.856689989566803, 0.8524633646011353, 0.8601241707801819, 0.8541803956031799, 0.8658037185668945, 0.8597279191017151, 0.869502067565918, 0.8689737319946289], "val_loss": [1.2760594572339738, 1.851431233542306, 0.8197567462921143, 0.7278808866228376, 0.6011664526803153, 0.5958296230861119, 0.5347192457744053, 0.5031003100531442, 0.5070134401321411, 0.46386517797197613, 0.46776858397892546, 0.4306992547852652, 0.47573464257376535, 0.4438991802079337, 0.4262673429080418, 0.4237207514899118, 0.46048927307128906, 0.42348594324929373, 0.40013989380427767, 0.3870537451335362, 0.4337743691035679, 0.38909307547977995, 0.3875356486865452, 0.37926552976880756, 0.3795929891722543, 0.4116501212120056, 0.3805805444717407, 0.3663659521511623, 0.37881522519247873, 0.42983515773500713, 0.3757798245974949, 0.3539702466556004, 0.3578547579901559, 0.4158112406730652, 0.36376129729407175, 0.35397341421672274, 0.3461267948150635, 0.39062035935265677, 0.3585689067840576, 0.3324769565037319, 0.3606842075075422, 0.36380129201071604, 0.34849982602255686, 0.33928658281053814, 0.3397538321358817], "val_accuracy": [0.4556666612625122, 0.4180000126361847, 0.671999990940094, 0.7016666531562805, 0.731333315372467, 0.7233333587646484, 0.7766666412353516, 0.781333327293396, 0.7699999809265137, 0.8069999814033508, 0.7986666560173035, 0.8053333163261414, 0.7756666541099548, 0.8059999942779541, 0.8136666417121887, 0.8220000267028809, 0.8046666383743286, 0.828000009059906, 0.8389999866485596, 0.840666651725769, 0.8023333549499512, 0.8330000042915344, 0.8403333425521851, 0.8426666855812073, 0.8446666598320007, 0.8220000267028809, 0.8346666693687439, 0.8479999899864197, 0.8356666564941406, 0.8036666512489319, 0.8500000238418579, 0.8569999933242798, 0.8506666421890259, 0.8183333277702332, 0.8539999723434448, 0.8513333201408386, 0.8579999804496765, 0.8293333053588867, 0.8493333458900452, 0.8636666536331177, 0.8553333282470703, 0.8453333377838135, 0.8533333539962769, 0.8616666793823242, 0.859000027179718]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [3, 3, 3, 6, 6, 2, 2, 5, 9, 1, 4, 2, 6, 2, 2, 5, 9, 5, 6, 9, 8, 2, 0, 9, 2], [0, 0, 2, 2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [29, 10, 50, 27, 57, 91, 53, 52, 57, 21], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.8045714497566223, "mapping_values": [1, 16, 16, 9, 7, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.add(alpha, tf.math.add(grad, grad)))), tf.math.square(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, grad)), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1328871083879957, 2.0449645075233085, 1.6354184950410477, 1.065738007802186, 0.8872277329957181, 0.794626999414671, 0.7227442850447475, 0.673097669739749, 0.6377442260034774, 0.6543063905890655, 0.5946648419966173, 0.5745448024438876, 0.5718148732859272, 0.5533618134766396, 0.545688229029315, 0.521482415258168, 0.49701503751741155, 0.5177412625742217, 0.5033182231324334, 0.4812787388412157, 0.4925841398683789, 0.49312231244191895, 0.4711802946916582, 0.4579773688549379, 0.4537134969892629, 0.4395799545280654, 0.4475005867655692, 0.4236591233277853, 0.42214802755435316, 0.4255655714667563, 0.4198464770610574, 0.4033098898236589, 0.40005819470166626, 0.3901100547959886, 0.4002944915018471, 0.3991356543097372, 0.3745179012222943, 0.3892953717721184, 0.39589948831154387, 0.3654978772188143, 0.3723248954163157, 0.3660497295897414, 0.3763524293190988, 0.3505667889429956, 0.34775796761728156], "accuracy": [0.2887333333492279, 0.349359393119812, 0.45766741037368774, 0.6219785809516907, 0.6762647032737732, 0.7028133869171143, 0.7297582626342773, 0.7512878179550171, 0.7543256878852844, 0.7510236501693726, 0.7730814814567566, 0.7869502305984497, 0.7783648371696472, 0.7954035401344299, 0.7917051911354065, 0.8018755912780762, 0.8158763647079468, 0.811649739742279, 0.8152159452438354, 0.8168009519577026, 0.8183859586715698, 0.817989706993103, 0.82683926820755, 0.8305375576019287, 0.8327829837799072, 0.8359529972076416, 0.8359529972076416, 0.8403117060661316, 0.845859169960022, 0.8360850811004639, 0.8405758738517761, 0.8487650156021118, 0.8515387773513794, 0.8536521196365356, 0.848368763923645, 0.8508783578872681, 0.8615770936012268, 0.856689989566803, 0.8524633646011353, 0.8601241707801819, 0.8541803956031799, 0.8658037185668945, 0.8597279191017151, 0.869502067565918, 0.8689737319946289], "val_loss": [1.2760594572339738, 1.851431233542306, 0.8197567462921143, 0.7278808866228376, 0.6011664526803153, 0.5958296230861119, 0.5347192457744053, 0.5031003100531442, 0.5070134401321411, 0.46386517797197613, 0.46776858397892546, 0.4306992547852652, 0.47573464257376535, 0.4438991802079337, 0.4262673429080418, 0.4237207514899118, 0.46048927307128906, 0.42348594324929373, 0.40013989380427767, 0.3870537451335362, 0.4337743691035679, 0.38909307547977995, 0.3875356486865452, 0.37926552976880756, 0.3795929891722543, 0.4116501212120056, 0.3805805444717407, 0.3663659521511623, 0.37881522519247873, 0.42983515773500713, 0.3757798245974949, 0.3539702466556004, 0.3578547579901559, 0.4158112406730652, 0.36376129729407175, 0.35397341421672274, 0.3461267948150635, 0.39062035935265677, 0.3585689067840576, 0.3324769565037319, 0.3606842075075422, 0.36380129201071604, 0.34849982602255686, 0.33928658281053814, 0.3397538321358817], "val_accuracy": [0.4556666612625122, 0.4180000126361847, 0.671999990940094, 0.7016666531562805, 0.731333315372467, 0.7233333587646484, 0.7766666412353516, 0.781333327293396, 0.7699999809265137, 0.8069999814033508, 0.7986666560173035, 0.8053333163261414, 0.7756666541099548, 0.8059999942779541, 0.8136666417121887, 0.8220000267028809, 0.8046666383743286, 0.828000009059906, 0.8389999866485596, 0.840666651725769, 0.8023333549499512, 0.8330000042915344, 0.8403333425521851, 0.8426666855812073, 0.8446666598320007, 0.8220000267028809, 0.8346666693687439, 0.8479999899864197, 0.8356666564941406, 0.8036666512489319, 0.8500000238418579, 0.8569999933242798, 0.8506666421890259, 0.8183333277702332, 0.8539999723434448, 0.8513333201408386, 0.8579999804496765, 0.8293333053588867, 0.8493333458900452, 0.8636666536331177, 0.8553333282470703, 0.8453333377838135, 0.8533333539962769, 0.8616666793823242, 0.859000027179718]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [3, 8, 2, 4, 5, 3, 2, 1, 0, 1, 5, 2, 9, 3, 2, 6, 9, 5, 0, 2, 8, 2, 0, 9, 2, 2, 8, 2], [0, 0, 2, 2, 2, 2, 1, 2, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 10, 35, 43, 57, 79, 53, 52, 73], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.8045714497566223, "mapping_values": [1, 42, 42, 28, 14, 9, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 46, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.add(alpha, grad), grad))))))), tf.math.square(tf.math.add(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad)), tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)))), tf.math.negative(grad))))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(tf.math.add(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), alpha)))))))), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1328871083879957, 2.0449645075233085, 1.6354184950410477, 1.065738007802186, 0.8872277329957181, 0.794626999414671, 0.7227442850447475, 0.673097669739749, 0.6377442260034774, 0.6543063905890655, 0.5946648419966173, 0.5745448024438876, 0.5718148732859272, 0.5533618134766396, 0.545688229029315, 0.521482415258168, 0.49701503751741155, 0.5177412625742217, 0.5033182231324334, 0.4812787388412157, 0.4925841398683789, 0.49312231244191895, 0.4711802946916582, 0.4579773688549379, 0.4537134969892629, 0.4395799545280654, 0.4475005867655692, 0.4236591233277853, 0.42214802755435316, 0.4255655714667563, 0.4198464770610574, 0.4033098898236589, 0.40005819470166626, 0.3901100547959886, 0.4002944915018471, 0.3991356543097372, 0.3745179012222943, 0.3892953717721184, 0.39589948831154387, 0.3654978772188143, 0.3723248954163157, 0.3660497295897414, 0.3763524293190988, 0.3505667889429956, 0.34775796761728156], "accuracy": [0.2887333333492279, 0.349359393119812, 0.45766741037368774, 0.6219785809516907, 0.6762647032737732, 0.7028133869171143, 0.7297582626342773, 0.7512878179550171, 0.7543256878852844, 0.7510236501693726, 0.7730814814567566, 0.7869502305984497, 0.7783648371696472, 0.7954035401344299, 0.7917051911354065, 0.8018755912780762, 0.8158763647079468, 0.811649739742279, 0.8152159452438354, 0.8168009519577026, 0.8183859586715698, 0.817989706993103, 0.82683926820755, 0.8305375576019287, 0.8327829837799072, 0.8359529972076416, 0.8359529972076416, 0.8403117060661316, 0.845859169960022, 0.8360850811004639, 0.8405758738517761, 0.8487650156021118, 0.8515387773513794, 0.8536521196365356, 0.848368763923645, 0.8508783578872681, 0.8615770936012268, 0.856689989566803, 0.8524633646011353, 0.8601241707801819, 0.8541803956031799, 0.8658037185668945, 0.8597279191017151, 0.869502067565918, 0.8689737319946289], "val_loss": [1.2760594572339738, 1.851431233542306, 0.8197567462921143, 0.7278808866228376, 0.6011664526803153, 0.5958296230861119, 0.5347192457744053, 0.5031003100531442, 0.5070134401321411, 0.46386517797197613, 0.46776858397892546, 0.4306992547852652, 0.47573464257376535, 0.4438991802079337, 0.4262673429080418, 0.4237207514899118, 0.46048927307128906, 0.42348594324929373, 0.40013989380427767, 0.3870537451335362, 0.4337743691035679, 0.38909307547977995, 0.3875356486865452, 0.37926552976880756, 0.3795929891722543, 0.4116501212120056, 0.3805805444717407, 0.3663659521511623, 0.37881522519247873, 0.42983515773500713, 0.3757798245974949, 0.3539702466556004, 0.3578547579901559, 0.4158112406730652, 0.36376129729407175, 0.35397341421672274, 0.3461267948150635, 0.39062035935265677, 0.3585689067840576, 0.3324769565037319, 0.3606842075075422, 0.36380129201071604, 0.34849982602255686, 0.33928658281053814, 0.3397538321358817], "val_accuracy": [0.4556666612625122, 0.4180000126361847, 0.671999990940094, 0.7016666531562805, 0.731333315372467, 0.7233333587646484, 0.7766666412353516, 0.781333327293396, 0.7699999809265137, 0.8069999814033508, 0.7986666560173035, 0.8053333163261414, 0.7756666541099548, 0.8059999942779541, 0.8136666417121887, 0.8220000267028809, 0.8046666383743286, 0.828000009059906, 0.8389999866485596, 0.840666651725769, 0.8023333549499512, 0.8330000042915344, 0.8403333425521851, 0.8426666855812073, 0.8446666598320007, 0.8220000267028809, 0.8346666693687439, 0.8479999899864197, 0.8356666564941406, 0.8036666512489319, 0.8500000238418579, 0.8569999933242798, 0.8506666421890259, 0.8183333277702332, 0.8539999723434448, 0.8513333201408386, 0.8579999804496765, 0.8293333053588867, 0.8493333458900452, 0.8636666536331177, 0.8553333282470703, 0.8453333377838135, 0.8533333539962769, 0.8616666793823242, 0.859000027179718]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [1, 2, 2, 9, 6, 1, 2, 1, 2, 0, 5, 6, 1, 8, 2, 6, 9, 6, 0, 1, 1, 2, 6, 9, 2, 8], [0, 2, 0, 2, 1, 2, 1, 2, 0, 0, 0, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [34, 10, 19, 41, 30, 79, 83, 52, 48, 54, 42], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.8045714497566223, "mapping_values": [1, 39, 39, 24, 15, 11, 13, 13, 8, 5, 3, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), grad)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(tf.math.negative(grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha)))), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, grad), tf.math.sqrt(alpha)), grad))), tf.math.add(tf.math.divide_no_nan(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))))), tf.math.subtract(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1328871083879957, 2.0449645075233085, 1.6354184950410477, 1.065738007802186, 0.8872277329957181, 0.794626999414671, 0.7227442850447475, 0.673097669739749, 0.6377442260034774, 0.6543063905890655, 0.5946648419966173, 0.5745448024438876, 0.5718148732859272, 0.5533618134766396, 0.545688229029315, 0.521482415258168, 0.49701503751741155, 0.5177412625742217, 0.5033182231324334, 0.4812787388412157, 0.4925841398683789, 0.49312231244191895, 0.4711802946916582, 0.4579773688549379, 0.4537134969892629, 0.4395799545280654, 0.4475005867655692, 0.4236591233277853, 0.42214802755435316, 0.4255655714667563, 0.4198464770610574, 0.4033098898236589, 0.40005819470166626, 0.3901100547959886, 0.4002944915018471, 0.3991356543097372, 0.3745179012222943, 0.3892953717721184, 0.39589948831154387, 0.3654978772188143, 0.3723248954163157, 0.3660497295897414, 0.3763524293190988, 0.3505667889429956, 0.34775796761728156], "accuracy": [0.2887333333492279, 0.349359393119812, 0.45766741037368774, 0.6219785809516907, 0.6762647032737732, 0.7028133869171143, 0.7297582626342773, 0.7512878179550171, 0.7543256878852844, 0.7510236501693726, 0.7730814814567566, 0.7869502305984497, 0.7783648371696472, 0.7954035401344299, 0.7917051911354065, 0.8018755912780762, 0.8158763647079468, 0.811649739742279, 0.8152159452438354, 0.8168009519577026, 0.8183859586715698, 0.817989706993103, 0.82683926820755, 0.8305375576019287, 0.8327829837799072, 0.8359529972076416, 0.8359529972076416, 0.8403117060661316, 0.845859169960022, 0.8360850811004639, 0.8405758738517761, 0.8487650156021118, 0.8515387773513794, 0.8536521196365356, 0.848368763923645, 0.8508783578872681, 0.8615770936012268, 0.856689989566803, 0.8524633646011353, 0.8601241707801819, 0.8541803956031799, 0.8658037185668945, 0.8597279191017151, 0.869502067565918, 0.8689737319946289], "val_loss": [1.2760594572339738, 1.851431233542306, 0.8197567462921143, 0.7278808866228376, 0.6011664526803153, 0.5958296230861119, 0.5347192457744053, 0.5031003100531442, 0.5070134401321411, 0.46386517797197613, 0.46776858397892546, 0.4306992547852652, 0.47573464257376535, 0.4438991802079337, 0.4262673429080418, 0.4237207514899118, 0.46048927307128906, 0.42348594324929373, 0.40013989380427767, 0.3870537451335362, 0.4337743691035679, 0.38909307547977995, 0.3875356486865452, 0.37926552976880756, 0.3795929891722543, 0.4116501212120056, 0.3805805444717407, 0.3663659521511623, 0.37881522519247873, 0.42983515773500713, 0.3757798245974949, 0.3539702466556004, 0.3578547579901559, 0.4158112406730652, 0.36376129729407175, 0.35397341421672274, 0.3461267948150635, 0.39062035935265677, 0.3585689067840576, 0.3324769565037319, 0.3606842075075422, 0.36380129201071604, 0.34849982602255686, 0.33928658281053814, 0.3397538321358817], "val_accuracy": [0.4556666612625122, 0.4180000126361847, 0.671999990940094, 0.7016666531562805, 0.731333315372467, 0.7233333587646484, 0.7766666412353516, 0.781333327293396, 0.7699999809265137, 0.8069999814033508, 0.7986666560173035, 0.8053333163261414, 0.7756666541099548, 0.8059999942779541, 0.8136666417121887, 0.8220000267028809, 0.8046666383743286, 0.828000009059906, 0.8389999866485596, 0.840666651725769, 0.8023333549499512, 0.8330000042915344, 0.8403333425521851, 0.8426666855812073, 0.8446666598320007, 0.8220000267028809, 0.8346666693687439, 0.8479999899864197, 0.8356666564941406, 0.8036666512489319, 0.8500000238418579, 0.8569999933242798, 0.8506666421890259, 0.8183333277702332, 0.8539999723434448, 0.8513333201408386, 0.8579999804496765, 0.8293333053588867, 0.8493333458900452, 0.8636666536331177, 0.8553333282470703, 0.8453333377838135, 0.8533333539962769, 0.8616666793823242, 0.859000027179718]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [3, 2, 2, 1, 5, 1, 2, 8, 2, 1, 5, 8, 1, 8, 2, 0, 9, 5, 0, 1, 1, 2, 6, 9, 2, 8], [0, 0, 2, 2, 2, 0, 0, 1, 2, 1, 2, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [41, 10, 50, 41, 57, 79, 83, 52, 48], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.8045714497566223, "mapping_values": [1, 20, 20, 11, 9, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.math.subtract(grad, grad))), tf.math.add(tf.math.sqrt(tf.math.add(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, alpha)))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1328871083879957, 2.0449645075233085, 1.6354184950410477, 1.065738007802186, 0.8872277329957181, 0.794626999414671, 0.7227442850447475, 0.673097669739749, 0.6377442260034774, 0.6543063905890655, 0.5946648419966173, 0.5745448024438876, 0.5718148732859272, 0.5533618134766396, 0.545688229029315, 0.521482415258168, 0.49701503751741155, 0.5177412625742217, 0.5033182231324334, 0.4812787388412157, 0.4925841398683789, 0.49312231244191895, 0.4711802946916582, 0.4579773688549379, 0.4537134969892629, 0.4395799545280654, 0.4475005867655692, 0.4236591233277853, 0.42214802755435316, 0.4255655714667563, 0.4198464770610574, 0.4033098898236589, 0.40005819470166626, 0.3901100547959886, 0.4002944915018471, 0.3991356543097372, 0.3745179012222943, 0.3892953717721184, 0.39589948831154387, 0.3654978772188143, 0.3723248954163157, 0.3660497295897414, 0.3763524293190988, 0.3505667889429956, 0.34775796761728156], "accuracy": [0.2887333333492279, 0.349359393119812, 0.45766741037368774, 0.6219785809516907, 0.6762647032737732, 0.7028133869171143, 0.7297582626342773, 0.7512878179550171, 0.7543256878852844, 0.7510236501693726, 0.7730814814567566, 0.7869502305984497, 0.7783648371696472, 0.7954035401344299, 0.7917051911354065, 0.8018755912780762, 0.8158763647079468, 0.811649739742279, 0.8152159452438354, 0.8168009519577026, 0.8183859586715698, 0.817989706993103, 0.82683926820755, 0.8305375576019287, 0.8327829837799072, 0.8359529972076416, 0.8359529972076416, 0.8403117060661316, 0.845859169960022, 0.8360850811004639, 0.8405758738517761, 0.8487650156021118, 0.8515387773513794, 0.8536521196365356, 0.848368763923645, 0.8508783578872681, 0.8615770936012268, 0.856689989566803, 0.8524633646011353, 0.8601241707801819, 0.8541803956031799, 0.8658037185668945, 0.8597279191017151, 0.869502067565918, 0.8689737319946289], "val_loss": [1.2760594572339738, 1.851431233542306, 0.8197567462921143, 0.7278808866228376, 0.6011664526803153, 0.5958296230861119, 0.5347192457744053, 0.5031003100531442, 0.5070134401321411, 0.46386517797197613, 0.46776858397892546, 0.4306992547852652, 0.47573464257376535, 0.4438991802079337, 0.4262673429080418, 0.4237207514899118, 0.46048927307128906, 0.42348594324929373, 0.40013989380427767, 0.3870537451335362, 0.4337743691035679, 0.38909307547977995, 0.3875356486865452, 0.37926552976880756, 0.3795929891722543, 0.4116501212120056, 0.3805805444717407, 0.3663659521511623, 0.37881522519247873, 0.42983515773500713, 0.3757798245974949, 0.3539702466556004, 0.3578547579901559, 0.4158112406730652, 0.36376129729407175, 0.35397341421672274, 0.3461267948150635, 0.39062035935265677, 0.3585689067840576, 0.3324769565037319, 0.3606842075075422, 0.36380129201071604, 0.34849982602255686, 0.33928658281053814, 0.3397538321358817], "val_accuracy": [0.4556666612625122, 0.4180000126361847, 0.671999990940094, 0.7016666531562805, 0.731333315372467, 0.7233333587646484, 0.7766666412353516, 0.781333327293396, 0.7699999809265137, 0.8069999814033508, 0.7986666560173035, 0.8053333163261414, 0.7756666541099548, 0.8059999942779541, 0.8136666417121887, 0.8220000267028809, 0.8046666383743286, 0.828000009059906, 0.8389999866485596, 0.840666651725769, 0.8023333549499512, 0.8330000042915344, 0.8403333425521851, 0.8426666855812073, 0.8446666598320007, 0.8220000267028809, 0.8346666693687439, 0.8479999899864197, 0.8356666564941406, 0.8036666512489319, 0.8500000238418579, 0.8569999933242798, 0.8506666421890259, 0.8183333277702332, 0.8539999723434448, 0.8513333201408386, 0.8579999804496765, 0.8293333053588867, 0.8493333458900452, 0.8636666536331177, 0.8553333282470703, 0.8453333377838135, 0.8533333539962769, 0.8616666793823242, 0.859000027179718]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [3, 2, 2, 9, 6, 1, 2, 1, 2, 1, 5, 8, 1, 8, 2, 6, 9, 5, 0, 1, 1, 2, 6, 9, 2, 8, 1, 7, 0, 6, 1, 6, 1, 8, 2, 3, 5, 1, 4], [0, 1, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [34, 16, 50, 41, 57, 79, 83, 52, 48, 48, 66], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.26828572154045105, "mapping_values": [1, 64, 64, 39, 25, 11, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 44, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), alpha)), tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(tf.math.subtract(tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.sqrt(tf.math.subtract(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.divide_no_nan(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), grad), grad))))))), tf.math.square(tf.math.negative(tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))))))))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha)), grad)), grad)), tf.math.sqrt(tf.math.add(alpha, alpha))))))), tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha)))), tf.math.add(alpha, grad))), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.289060946862459, 3.6599947740814045, 2.3100714224708425, 2.3028358138390126, 2.2479458776652113, 2.5639643939636354, 2.2979395627943973, 2.2941469448338, 2.3039175936291167, 2.3033689046816157], "accuracy": [0.19112402200698853, 0.16074495017528534, 0.0952318087220192, 0.11372341960668564, 0.21899352967739105, 0.1266675442457199, 0.11028926074504852, 0.11108175665140152, 0.10130762308835983, 0.10038304328918457], "val_loss": [1.9701227460588728, 1.9826641082763672, 1.9745418003627233, 1.9689179147992815, 2.8085276739937917, 1.976215158190046, 1.8715466090611048, 1.9752302850995744, 1.9740095819745744, 1.9737663950238908], "val_accuracy": [0.14433333277702332, 0.09966666996479034, 0.11566666513681412, 0.23933333158493042, 0.24199999868869781, 0.09700000286102295, 0.18000000715255737, 0.09700000286102295, 0.09700000286102295, 0.09733333438634872]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 3, 2, 6, 3, 2, 2, 1, 9, 1, 4, 2, 6, 2, 2, 5, 9, 5, 4, 9, 8, 2, 0, 9, 2], [0, 0, 2, 2, 2, 2, 1, 2, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [67, 83, 91, 29, 57, 79, 53, 52], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [54, 25, 50, 71, 34]], "fitness": -0.26828572154045105, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.289060946862459, 3.6599947740814045, 2.3100714224708425, 2.3028358138390126, 2.2479458776652113, 2.5639643939636354, 2.2979395627943973, 2.2941469448338, 2.3039175936291167, 2.3033689046816157], "accuracy": [0.19112402200698853, 0.16074495017528534, 0.0952318087220192, 0.11372341960668564, 0.21899352967739105, 0.1266675442457199, 0.11028926074504852, 0.11108175665140152, 0.10130762308835983, 0.10038304328918457], "val_loss": [1.9701227460588728, 1.9826641082763672, 1.9745418003627233, 1.9689179147992815, 2.8085276739937917, 1.976215158190046, 1.8715466090611048, 1.9752302850995744, 1.9740095819745744, 1.9737663950238908], "val_accuracy": [0.14433333277702332, 0.09966666996479034, 0.11566666513681412, 0.23933333158493042, 0.24199999868869781, 0.09700000286102295, 0.18000000715255737, 0.09700000286102295, 0.09700000286102295, 0.09733333438634872]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 8, 2, 4, 5, 3, 2, 5, 2, 3, 5, 2, 9, 4, 2, 6, 9, 8, 0, 2, 8, 2, 0, 9, 2], [0, 0, 2, 2, 2, 2, 1, 2, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [87, 10, 35, 27, 57, 79, 53, 52], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [76, 25, 50, 71, 34]], "fitness": -0.2514285743236542, "mapping_values": [1, 4, 4, 2, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.2929161098796644, 4.939784268818952, 2.3076327778895958, 2.314994209021499, 2.2535907481844397, 2.3051693996559943, 2.3032245987111297, 2.303733661993226], "accuracy": [0.19033153355121613, 0.16814158856868744, 0.1010434553027153, 0.1850482076406479, 0.1604807823896408, 0.09998679161071777, 0.10038304328918457, 0.09972262382507324], "val_loss": [1.9688891683306013, 1.9814420427594865, 1.9612874303545271, 1.8319580214364188, 1.9762464932032995, 1.9741843768528529, 1.9736881937299455, 1.9736734798976354], "val_accuracy": [0.140666663646698, 0.09966666996479034, 0.2720000147819519, 0.1589999943971634, 0.10233332961797714, 0.09700000286102295, 0.09833333641290665, 0.10400000214576721]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [3, 8, 2, 4, 5, 3, 2, 5, 2, 3, 5, 2, 9, 3, 2, 6, 9, 5, 0, 2, 8, 2, 0, 9, 2], [0, 3, 2, 2, 2, 0, 0, 1, 2, 1, 2, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [34, 10, 50, 41, 57, 79, 83, 52, 48], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [2, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 13, 13, 8, 5, 3, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [3, 3, 5, 6, 3, 2, 4, 0, 9, 1, 4, 2, 1, 2, 2, 5, 9, 5, 4, 9, 0, 2, 0, 9, 2], [0, 0, 2, 2, 2, 2, 1, 2, 2, 0, 0, 2, 1, 2, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 10, 29, 88, 57, 79, 53, 52, 21], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 32, 32, 21, 11, 7, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.pow(tf.math.negative(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), grad)))), tf.math.add(alpha, grad))), tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.math.add(grad, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)))), tf.math.add(alpha, grad)), tf.math.square(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))))))), tf.math.negative(tf.math.add(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07660810649394989, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [3, 3, 2, 6, 3, 2, 2, 1, 9, 1, 4, 2, 6, 2, 2, 5, 9, 5, 4, 9, 8, 2, 0, 9, 2], [0, 0, 2, 2, 2, 0, 0, 1, 2, 1, 2, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [0, 10, 31, 88, 28, 91, 53, 52, 57, 21], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [2, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06538105756044388, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [3, 8, 2, 4, 4, 2, 2, 1, 2, 1, 5, 2, 9, 3, 2, 6, 9, 5, 0, 2, 8, 2, 0, 9, 2], [0, 2, 2, 2, 2, 0, 1, 2, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 10, 50, 27, 96, 79, 83, 52, 48], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [4, 3, 7, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07660810649394989, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 8, 9, 4, 5, 3, 2, 2, 2, 1, 8, 2, 9, 5, 2, 6, 9, 5, 0, 2, 8, 2, 0, 9, 2], [0, 0, 0, 2, 2, 2, 1, 0, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [67, 83, 91, 29, 57, 79, 53, 52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 0, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.05885714292526245, "mapping_values": [1, 4, 4, 3, 1, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, beta))", "other_info": {"loss": [2.3030486909893795, 2.3046174795085004, 2.3058946341445434, 2.3093099753775728, 2.3093443362468173, 2.313478321557378, 2.3164890397257887, 2.3203306317786025, 2.326691160396011, 2.3378678439488865, 2.3576619166267263, 23.061857960652745, NaN, NaN, NaN, NaN], "accuracy": [0.08585391938686371, 0.08968432247638702, 0.08466517180204391, 0.08215559273958206, 0.08294808864593506, 0.07858935743570328, 0.07357019931077957, 0.08109892904758453, 0.07885351777076721, 0.07700435817241669, 0.07647603005170822, 0.09179764986038208, 0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.971764155796596, 1.9732654435294015, 1.9747816494532995, 1.9766546658107214, 1.9786097662789481, 1.9808472224644251, 1.9833790234157018, 1.9867798260280065, 1.991560595376151, 2.0008348056248257, 2.027406692504883, 7859650258459502.0, NaN, NaN, NaN, NaN], "val_accuracy": [0.033666666597127914, 0.028333334252238274, 0.02800000086426735, 0.02866666577756405, 0.033666666597127914, 0.03766666725277901, 0.04800000041723251, 0.06400000303983688, 0.08266666531562805, 0.09533333033323288, 0.10000000149011612, 0.10000000149011612, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [3, 8, 2, 4, 4, 2, 2, 1, 3, 1, 5, 3, 9, 3, 6, 6, 9, 8, 0, 2, 8, 2, 0, 9, 2], [0, 2, 2, 2, 2, 0, 2, 0, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [87, 10, 35, 27, 57, 79, 53, 52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 4, 4, 2, 2, 1, 13, 13, 8, 5, 3, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.multiply(alpha, tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3025751793782914, 2.3024999761247615, 2.302085260153919, 2.3033971156048625, 2.3010660354345704, 2.3026554522150935], "accuracy": [0.0866464152932167, 0.09298639744520187, 0.0936468094587326, 0.08928807079792023, 0.09800554811954498, 0.08968432247638702], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0], [5, 3, 2, 6, 3, 2, 6, 3, 9, 2, 4, 2, 6, 1, 0, 5, 9, 5, 9, 5, 8, 2, 0, 9, 2], [2, 0, 2, 2, 2, 2, 1, 2, 2, 0, 0, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [91, 2, 35, 29, 41, 79, 53, 52, 96], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [54, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 27, 27, 15, 12, 5, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))))), grad), tf.math.add(grad, tf.math.add(alpha, grad)))), tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.subtract(grad, grad))), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))), tf.math.negative(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))))), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3025751793782914, 2.3024999761247615, 2.302085260153919, 2.3033971156048625, 2.3010660354345704, 2.3026554522150935], "accuracy": [0.0866464152932167, 0.09298639744520187, 0.0936468094587326, 0.08928807079792023, 0.09800554811954498, 0.08968432247638702], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]