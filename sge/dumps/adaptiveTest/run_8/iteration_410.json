[{"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [0, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [8, 2, 3, 5, 2, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [1, 3, 2, 3, 6, 9], [3, 3, 0, 0, 3, 2], [39, 47, 50, 41, 34]], "fitness": -0.7962856888771057, "mapping_values": [1, 1, 1, 0, 1, 1, 9, 9, 5, 4, 2, 1, 1, 0, 1, 0, 11, 6, 5, 3], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [1.9703765307057253, 1.3996037473421623, 1.0556446303780902, 0.8873598074018679, 0.8330615772122106, 0.7653799331687334, 0.7541973089907289, 0.6914511414141687, 0.6830870525601707, 0.648213686196402, 0.6685282004948667, 0.6574123307005636, 0.6081082044481019, 0.6086496148268781, 0.5701935436306471, 0.5855989110483989, 0.5920590697388529, 0.5719818172122918, 0.5470773549584381], "accuracy": [0.34684982895851135, 0.5127459764480591, 0.6078457236289978, 0.667811393737793, 0.6865671873092651, 0.7084929347038269, 0.7152291536331177, 0.7388719916343689, 0.7362303733825684, 0.7461365461349487, 0.7479857206344604, 0.750759482383728, 0.7677981853485107, 0.7648923397064209, 0.7799497842788696, 0.7773081660270691, 0.7732135653495789, 0.7759873270988464, 0.7972526550292969], "val_loss": [1.4503576755523682, 0.7801482677459717, 0.8293692214148385, 0.6636356626238141, 0.5783706392560687, 0.5743305853434971, 0.5807503121239799, 0.5575920002801078, 0.5359835965292794, 0.5142978259495327, 0.5108387299946376, 0.4976121868406023, 0.4726599965776716, 0.45340930564062937, 0.509957092148917, 0.47601565292903353, 0.4804605075291225, 0.4528458459036691, 0.4372935891151428], "val_accuracy": [0.4256666600704193, 0.6583333611488342, 0.6309999823570251, 0.6913333535194397, 0.750333309173584, 0.7360000014305115, 0.7250000238418579, 0.7463333606719971, 0.7416666746139526, 0.7753333449363708, 0.7829999923706055, 0.7786666750907898, 0.7886666655540466, 0.8116666674613953, 0.768666684627533, 0.7963333129882812, 0.777999997138977, 0.8040000200271606, 0.8096666932106018]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 8, 2, 5, 2, 6, 6, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 0, 0, 3, 3, 2, 3, 3, 0, 0], [42, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [1, 3, 2, 3, 6, 9], [1, 3, 0, 0, 3, 2], [39, 47, 74, 41, 34]], "fitness": -0.7917143106460571, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 9, 4, 5, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.add(alpha, tf.math.multiply(sigma, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.349569493469986, 2.1354440038608224, 1.98267743134338, 1.9045134121951899, 1.4363888526526518, 1.0333252403210529, 0.8752940278704519, 0.7780076934755628, 0.706961327862856, 0.6938949503273208, 0.7058429567962826, 0.673481504505557, 0.6001219916668047, 0.6225091685645411, 0.5787120790466451, 0.5879541603864822, 0.55152107472307, 0.5556013143498743], "accuracy": [0.21820102632045746, 0.26376965641975403, 0.31765949726104736, 0.342491090297699, 0.49953770637512207, 0.6383568644523621, 0.67666095495224, 0.7111346125602722, 0.7296261787414551, 0.739400327205658, 0.7424382567405701, 0.7396644949913025, 0.7815347909927368, 0.7643640041351318, 0.7887993454933167, 0.7774402499198914, 0.7936864495277405, 0.7862898111343384], "val_loss": [1.9532310622079032, 1.831132139478411, 1.8402866636003767, 1.4319890907832555, 0.9588437080383301, 0.7285776138305664, 0.7741492305483136, 0.5397423846381051, 0.5894489969526019, 0.6566414151872907, 0.5575930220740182, 0.4682387965066092, 0.43569087982177734, 0.4692808304514204, 0.44520068168640137, 0.4804180860519409, 0.46587068693978445, 0.4882567950657436], "val_accuracy": [0.23266667127609253, 0.2966666519641876, 0.20633333921432495, 0.4180000126361847, 0.6370000243186951, 0.6506666541099548, 0.6759999990463257, 0.7693333625793457, 0.7350000143051147, 0.7250000238418579, 0.7443333268165588, 0.7896666526794434, 0.8090000152587891, 0.7833333611488342, 0.8029999732971191, 0.7696666717529297, 0.781333327293396, 0.7910000085830688]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 3, 9, 2, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 3, 0, 2, 1, 3, 0, 0], [42, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [1, 3, 2, 3, 6, 9], [1, 3, 0, 0, 3, 2], [39, 47, 98, 41, 34]], "fitness": -0.7914285659790039, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 4, 1, 2, 1, 1, 0, 1, 0, 11, 6, 5, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.add(alpha, tf.math.multiply(sigma, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.35030802813157, 2.1228766919851396, 2.0647354737217434, 2.002318985064457, 2.1757233368486006, 1.9361164686056633, 1.7459952222861634, 1.4198421394946221, 1.057156938800187, 0.9442467408299273, 0.8373819011990672, 0.7634714816256191, 0.708823430445279, 0.7025509494296658, 0.6728389843611464, 0.6619876113471386, 0.6383118605364929, 0.6156182528612809, 0.6167870824599326, 0.5984578624204354, 0.5829232843119659, 0.5461797108739642], "accuracy": [0.21820102632045746, 0.26403382420539856, 0.282129168510437, 0.3090741038322449, 0.19402985274791718, 0.3225465714931488, 0.4251750111579895, 0.5062739253044128, 0.622639000415802, 0.6580372452735901, 0.6944921612739563, 0.7166820764541626, 0.7392682433128357, 0.7388719916343689, 0.7457403540611267, 0.7557786107063293, 0.767401933670044, 0.7617223858833313, 0.772288978099823, 0.7744023203849792, 0.7828556299209595, 0.7935543656349182], "val_loss": [1.9528939383370536, 1.5532899924686976, 1.9542492457798548, 1.9692051751273019, 1.5093779904501778, 1.3096710273197718, 1.2525950159345354, 0.7979336125510079, 0.6851039784295219, 0.6818737643105643, 0.5738471916743687, 0.6135475976126534, 0.5656442471912929, 0.515805891581944, 0.4981469767434256, 0.5454505852290562, 0.45192127568381174, 0.4800623655319214, 0.4483541079929897, 0.4721758025033133, 0.4485595226287842, 0.44092277118137907], "val_accuracy": [0.23733332753181458, 0.36133334040641785, 0.19566667079925537, 0.09733333438634872, 0.4090000092983246, 0.5233333110809326, 0.42500001192092896, 0.6499999761581421, 0.7229999899864197, 0.703000009059906, 0.7310000061988831, 0.7396666407585144, 0.7486666440963745, 0.7580000162124634, 0.7703333497047424, 0.7630000114440918, 0.8026666641235352, 0.7820000052452087, 0.7979999780654907, 0.7950000166893005, 0.7829999923706055, 0.7983333468437195]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [1, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1], [8, 2, 3, 5, 2, 8, 2, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 3, 3, 2, 3, 1, 0, 0], [42, 47, 35, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1], [1, 3, 2, 3, 6, 9], [1, 3, 0, 0, 3, 2], [91, 47, 50, 41, 34]], "fitness": -0.34228572249412537, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 7, 3, 4, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.math.multiply(sigma, tf.math.add(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3470560670166662, 2.313479146559351, 2.3031595738619672, 2.302902894517009, 2.7246323294407184, 2.357747712769544, 2.3283466519680887, 2.089866367880348, 2.077904802571041, 1.9094180798785656, 2.29817837932563, 2.307056434591291, 2.3067782187836596], "accuracy": [0.19112402200698853, 0.09708096832036972, 0.09470347315073013, 0.1006472036242485, 0.16734910011291504, 0.09642054885625839, 0.13380002975463867, 0.27763834595680237, 0.2690529525279999, 0.36045435070991516, 0.20420023798942566, 0.10434553027153015, 0.09826971590518951], "val_loss": [2.0081050055367604, 1.9738431658063615, 1.9735950061253138, 1.9722842488970076, 2.2196497235979353, 1.9768390655517578, 1.8614826202392578, 1.6689043726239885, 1.773442200251988, 1.9012547901698522, 1.97714478628976, 1.9767353875296456, 1.9738747051783971], "val_accuracy": [0.09833333641290665, 0.10000000149011612, 0.0976666659116745, 0.10233332961797714, 0.10400000214576721, 0.11966666579246521, 0.21400000154972076, 0.34566667675971985, 0.3319999873638153, 0.17633333802223206, 0.09833333641290665, 0.10400000214576721, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [1, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 8, 5, 5, 2, 8, 2, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 3, 2, 2, 1, 3, 0, 0], [60, 85, 93, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [9, 3, 2, 3, 3, 2, 6], [1, 3, 0, 0, 3, 2, 2, 1, 3, 3, 1, 0], [4, 47, 50, 41, 34]], "fitness": -0.10257142782211304, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 10, 7, 2, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.sqrt(tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), grad), beta), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, alpha))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3023726520694527, 2.3025786514216726, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.0948355570435524, 0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973639896937779, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.10133333504199982, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 3, 5, 2, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 3, 2, 2, 1, 3, 0, 0], [42, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [9, 3, 2, 3, 3, 2, 6], [1, 3, 0, 0, 3, 2], [4, 47, 50, 41, 34]], "fitness": -0.10257142782211304, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 6, 3, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), beta)))), tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3023726520694527, 2.3025786514216726, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.0948355570435524, 0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973639896937779, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.10133333504199982, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 3, 5, 4, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 2, 1, 3, 0, 0], [42, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [1, 3, 2, 6, 6, 9], [1, 1, 0, 0, 3, 2], [39, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 5, 3, 1, 1, 1, 0, 1, 0, 11, 6, 5, 3], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.square(tf.math.pow(grad, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08691058307886124, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [8, 8, 1, 5, 2, 8, 2, 1, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 0, 0, 3, 3, 2, 3, 3, 0, 0], [42, 86, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [0, 3], [], [0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [1, 4, 2, 3, 6, 9], [1, 3, 2, 0, 3, 2], [39, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 19, 19, 12, 7, 4, 1, 0, 0, 0, 0, 7, 3, 4, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.math.add(beta, grad), beta), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))))))))), grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.math.pow(sigma, tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1], [8, 2, 3, 5, 2, 8, 2, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 1, 0, 3, 0, 2, 1, 2, 0, 0], [42, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [1, 3, 2, 3, 6, 9], [1, 3, 0, 0, 0, 2], [39, 4, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 9, 7, 3, 1, 1, 0, 1, 0, 11, 6, 5, 4], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(tf.math.sqrt(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), grad), tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)))))))), beta)), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.add(alpha, tf.math.multiply(sigma, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [0, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 3, 9, 2, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 3, 0, 2, 1, 3, 0, 0], [42, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 3, 3, 3, 6, 9], [2, 3, 0, 0, 3, 2], [90, 47, 5, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, sigma)", "other_info": {"loss": [34180.312543150365, 2.313877974046519, 2.305313900524457, 2.3034951825734566, 2.303168563952362, 2.3030903023216056], "accuracy": [0.09919429570436478, 0.0944393053650856, 0.09576013684272766, 0.09734513610601425, 0.0944393053650856, 0.09192973375320435], "val_loss": [1.990760394505092, 1.9779964174543108, 1.9747537885393416, 1.9740031106131417, 1.9738399641854423, 1.9737499100821358], "val_accuracy": [0.10400000214576721, 0.09833333641290665, 0.09833333641290665, 0.09700000286102295, 0.09966666996479034, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 1, 5, 2, 8, 2, 2, 2, 9, 4, 9, 8, 1, 1, 8, 9, 0], [0, 1, 0, 3, 0, 2, 1, 3, 0, 0], [42, 16, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [1, 6, 0, 3, 6, 5], [1, 3, 0, 0, 3, 2], [18, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 6, 3, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), alpha)))), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0754193663597107, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 3, 5, 2, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 3, 3, 0, 2, 1, 3, 0, 0], [42, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0, 4], [4, 3], [], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1], [1, 3, 2, 3, 6, 5, 8, 5, 4], [1, 1, 0, 0, 3, 2, 0], [39, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 16, 9, 7, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.add(alpha, tf.math.multiply(alpha, tf.math.divide_no_nan(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))), sigma), tf.math.sqrt(tf.math.square(tf.math.pow(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [8, 5, 1, 5, 2, 0, 2, 2, 3, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 3, 0, 3, 0, 3, 0, 0], [42, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1], [1, 3, 2, 3, 6, 9, 8], [1, 2, 0, 1, 3, 2], [39, 47, 98, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 12, 7, 5, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.add(alpha, tf.math.multiply(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1], [6, 8, 2, 5, 2, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 3, 2, 3, 1, 0, 0], [54, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [1, 2, 2, 3, 6, 9, 3], [1, 3, 0, 0, 3, 2], [39, 47, 95, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 9, 5, 3, 1, 1, 0, 1, 0, 13, 7, 6, 3], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)))), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad)))), tf.math.divide_no_nan(tf.math.add(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.multiply(sigma, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), sigma))), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10315678268671036, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 3, 5, 2, 8, 8, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 3, 0, 2, 1, 3, 0, 0], [42, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0, 0], [0, 0, 1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [1, 8, 2, 3, 6, 9], [2, 3, 0, 0, 3, 2], [46, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 9, 5, 3, 6, 5, 3, 2, 0, 4, 2, 2, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.add(beta, beta)))))), tf.math.divide_no_nan(tf.math.add(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, sigma))))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.math.sqrt(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [8, 6, 2, 3, 2, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 3, 0, 2, 1, 3, 0, 0], [42, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [1, 3, 2, 3, 6, 9, 1], [1, 3, 0, 0, 3, 2], [39, 88, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 13, 7, 6, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.add(alpha, tf.math.multiply(sigma, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), sigma))), beta)", "other_info": {"loss": [2.3022187784001216, 2.311789907941162, 2.5091791692080516, 4.7338075669308415, 10.926292937398035, 17.836840546315358], "accuracy": [0.10711926966905594, 0.10513802617788315, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9749233382088798, 2.009751183646066, 2.668896879468645, 6.8966971806117465, 12.783493859427315, 18.679824829101562], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [1, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 5, 6, 2, 8, 2, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 2, 0, 3, 2, 2, 1, 3, 0, 0], [60, 85, 93, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [9, 3, 2, 3, 3, 2, 6], [1, 3, 0, 0, 3, 2, 2, 1, 3, 3, 1, 0], [39, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 10, 7, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, beta)), tf.math.subtract(tf.math.add(beta, beta), alpha)))))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302732831498714, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1], [8, 8, 1, 5, 8, 4, 2, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 0, 0, 3, 3, 3, 3, 3, 0, 0], [92, 63, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [1, 3, 2, 3, 6, 9], [1, 3, 0, 0, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 9, 6, 3, 1, 0, 0, 0, 0, 11, 6, 5, 3], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.math.add(beta, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(beta, grad)))))))), grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.add(alpha, tf.math.multiply(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07555144280195236, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [8, 3, 3, 5, 2, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 3, 0, 2, 1, 3, 0, 0], [42, 9, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 2, 3, 6, 9, 8], [1, 3, 0, 0, 3, 2], [39, 47, 50, 41, 34]], "fitness": -0.07457143068313599, "mapping_values": [1, 3, 3, 2, 1, 1, 14, 14, 9, 5, 4, 1, 1, 0, 1, 0, 12, 7, 5, 3], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, beta))), tf.math.divide_no_nan(tf.math.add(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(alpha, tf.math.multiply(sigma, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), sigma)", "other_info": {"loss": [68195092291729.56, 1.3216446601565686e+19, 2.4617326149712334e+20, 4.635737519730524e+20, 6.179652991362375e+20, 2.3260836744736523e+21, 1.0522351693787277e+22, 1.1578624922120391e+22], "accuracy": [0.11015717685222626, 0.09325055778026581, 0.09153348207473755, 0.0742306187748909, 0.07806102186441422, 0.0816272646188736, 0.09470347315073013, 0.09179764986038208], "val_loss": [633881779315858.2, 5.817174734153554e+19, 2.6899766849526527e+20, 3.6104197128350335e+20, 4.911575188641232e+20, 4.564492315403641e+21, 5.465671286354044e+21, 5.419343561201503e+21], "val_accuracy": [0.0976666659116745, 0.1146666631102562, 0.11766666918992996, 0.07266666740179062, 0.05999999865889549, 0.10533333569765091, 0.10499999672174454, 0.11733333021402359]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [0, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [8, 8, 1, 5, 2, 8, 2, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 0, 0, 2, 3, 2, 3, 3, 0, 0], [42, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 3, 2, 3, 1, 9], [1, 3, 0, 0, 3, 2], [39, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 1, 9, 9, 6, 3, 3, 1, 1, 0, 1, 0, 10, 6, 4, 3], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))))), tf.math.sqrt(tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.math.multiply(sigma, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3043069117703157, 2.3020185304119476, 2.303509710077848, 2.302540113865786, 2.3038823249994755, 2.3022561448676284], "accuracy": [0.08836349099874496, 0.09430722147226334, 0.08796724677085876, 0.0878351628780365, 0.08453308790922165, 0.09021265059709549], "val_loss": [1.970588207244873, 1.9705862998962402, 1.9705843244280135, 1.9705826214381628, 1.970580782209124, 1.970579011099679], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]