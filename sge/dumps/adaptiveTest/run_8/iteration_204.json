[{"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [8, 57], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 0, 1, 3, 2], [90, 47, 50]], "fitness": -0.7985714077949524, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 6, 5, 1, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.129615268309229, 1.800601896860533, 1.4633611860433984, 1.072597097160164, 0.9506316224597527, 0.7902728531811263, 0.7764907821436222, 0.7060000277182776, 0.6778919804270997, 0.6520623661240157, 0.6355549113279038, 0.5960185055908447, 0.5891865766705019, 0.5921251291391667, 0.5693107624064032, 0.5361511294773431, 0.5226372796326203, 0.5269568549871854, 0.5350024758620017, 0.5036643233557166], "accuracy": [0.30418702960014343, 0.42385417222976685, 0.4803856909275055, 0.6180161237716675, 0.6445648074150085, 0.6993792057037354, 0.7037379741668701, 0.7372870445251465, 0.7434949278831482, 0.7532690763473511, 0.755118191242218, 0.7769119143486023, 0.7784969210624695, 0.780610203742981, 0.7884030938148499, 0.8018755912780762, 0.8000264167785645, 0.8072909712791443, 0.802271842956543, 0.8132346868515015], "val_loss": [1.7809067453656877, 0.8880335262843541, 0.7677947112492153, 0.780094998223441, 0.6150093419211251, 0.5823342629841396, 0.5850246122905186, 0.512400644166129, 0.5446824857166835, 0.47723729269845144, 0.4728000504629953, 0.4488293869154794, 0.4767757313592093, 0.46463474205562044, 0.41637682914733887, 0.43924310377665926, 0.4119876027107239, 0.43127025025231497, 0.44178361552102224, 0.4089524320193699], "val_accuracy": [0.46833333373069763, 0.5849999785423279, 0.6626666784286499, 0.6603333353996277, 0.7163333296775818, 0.7326666712760925, 0.7699999809265137, 0.7703333497047424, 0.7393333315849304, 0.7870000004768372, 0.7906666398048401, 0.79666668176651, 0.7950000166893005, 0.7929999828338623, 0.8276666402816772, 0.8046666383743286, 0.824999988079071, 0.8073333501815796, 0.7919999957084656, 0.8259999752044678]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [8, 57], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 0, 1, 3, 2], [90, 47, 50]], "fitness": -0.7985714077949524, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 5, 1, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.129615268309229, 1.800601896860533, 1.4633611860433984, 1.072597097160164, 0.9506316224597527, 0.7902728531811263, 0.7764907821436222, 0.7060000277182776, 0.6778919804270997, 0.6520623661240157, 0.6355549113279038, 0.5960185055908447, 0.5891865766705019, 0.5921251291391667, 0.5693107624064032, 0.5361511294773431, 0.5226372796326203, 0.5269568549871854, 0.5350024758620017, 0.5036643233557166], "accuracy": [0.30418702960014343, 0.42385417222976685, 0.4803856909275055, 0.6180161237716675, 0.6445648074150085, 0.6993792057037354, 0.7037379741668701, 0.7372870445251465, 0.7434949278831482, 0.7532690763473511, 0.755118191242218, 0.7769119143486023, 0.7784969210624695, 0.780610203742981, 0.7884030938148499, 0.8018755912780762, 0.8000264167785645, 0.8072909712791443, 0.802271842956543, 0.8132346868515015], "val_loss": [1.7809067453656877, 0.8880335262843541, 0.7677947112492153, 0.780094998223441, 0.6150093419211251, 0.5823342629841396, 0.5850246122905186, 0.512400644166129, 0.5446824857166835, 0.47723729269845144, 0.4728000504629953, 0.4488293869154794, 0.4767757313592093, 0.46463474205562044, 0.41637682914733887, 0.43924310377665926, 0.4119876027107239, 0.43127025025231497, 0.44178361552102224, 0.4089524320193699], "val_accuracy": [0.46833333373069763, 0.5849999785423279, 0.6626666784286499, 0.6603333353996277, 0.7163333296775818, 0.7326666712760925, 0.7699999809265137, 0.7703333497047424, 0.7393333315849304, 0.7870000004768372, 0.7906666398048401, 0.79666668176651, 0.7950000166893005, 0.7929999828338623, 0.8276666402816772, 0.8046666383743286, 0.824999988079071, 0.8073333501815796, 0.7919999957084656, 0.8259999752044678]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [8, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 95, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [45, 47, 50]], "fitness": -0.7702857255935669, "mapping_values": [1, 5, 5, 4, 1, 2, 19, 19, 12, 7, 3, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.negative(alpha), tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(grad), tf.math.add(tf.math.subtract(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), tf.math.pow(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad))), tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))))), beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0935140247468413, 1.7530471633028881, 1.2620662648554066, 1.0151429482265912, 0.8550621615172913, 0.7999326069246997, 0.7568629151007219, 0.7287003184038776, 0.6900067395852809, 0.6706894831713464, 0.6538100251825872, 0.6350911595581734, 0.6192026824180271, 0.6098966286592102, 0.5886862504641299], "accuracy": [0.2996962070465088, 0.404570072889328, 0.5625412464141846, 0.6067890524864197, 0.6769251227378845, 0.6930392384529114, 0.7022850513458252, 0.7197200059890747, 0.7383436560630798, 0.7450799345970154, 0.750759482383728, 0.7543256878852844, 0.7647602558135986, 0.7666094303131104, 0.774798572063446], "val_loss": [1.8654378482273646, 0.9098783561161586, 0.9686411448887416, 0.7499494552612305, 0.6302154404776437, 0.5490678548812866, 0.545908910887582, 0.5508059092930385, 0.5279419592448643, 0.49577573367527555, 0.5579791920525687, 0.5450695582798549, 0.5015329463141305, 0.47170153685978483, 0.465411867414202], "val_accuracy": [0.320333331823349, 0.6343333125114441, 0.5809999704360962, 0.6610000133514404, 0.7166666388511658, 0.7593333125114441, 0.762333333492279, 0.7433333396911621, 0.7593333125114441, 0.7829999923706055, 0.731333315372467, 0.7456666827201843, 0.7730000019073486, 0.7806666493415833, 0.7826666831970215]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1], [5, 5, 2, 5, 0, 6, 6, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 72, 95, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0], [0, 2, 9, 3, 9], [3, 1, 3, 1], [45, 47, 50]], "fitness": -0.4957142770290375, "mapping_values": [1, 5, 5, 4, 1, 2, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.2053940985826626, 2.429910739588306, 2.303450314313067, 2.300422722558619, 2.2033758718009167, 2.269113617109632], "accuracy": [0.23920221626758575, 0.13921542465686798, 0.09853387624025345, 0.11596883088350296, 0.1970677524805069, 0.15070664882659912], "val_loss": [1.6740876606532507, 1.9743537221636092, 1.973125730242048, 1.9655460630144392, 1.9811224256243025, 1.9812890461512975], "val_accuracy": [0.5106666684150696, 0.10233332961797714, 0.10000000149011612, 0.1850000023841858, 0.09799999743700027, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [8, 5, 3, 2, 0, 6, 3, 8, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 1, 0, 3, 2, 3, 3, 0], [86, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [45, 47, 50]], "fitness": -0.4957142770290375, "mapping_values": [1, 1, 1, 0, 1, 0, 19, 19, 12, 7, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.negative(grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(grad), tf.math.add(beta, tf.math.add(tf.math.subtract(grad, tf.math.add(beta, alpha)), tf.math.pow(tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), grad)))), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.2053940985826626, 2.429910739588306, 2.303450314313067, 2.300422722558619, 2.2033758718009167, 2.269113617109632], "accuracy": [0.23920221626758575, 0.13921542465686798, 0.09853387624025345, 0.11596883088350296, 0.1970677524805069, 0.15070664882659912], "val_loss": [1.6740876606532507, 1.9743537221636092, 1.973125730242048, 1.9655460630144392, 1.9811224256243025, 1.9812890461512975], "val_accuracy": [0.5106666684150696, 0.10233332961797714, 0.10000000149011612, 0.1850000023841858, 0.09799999743700027, 0.10400000214576721]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 8, 9, 9, 0], [2, 0, 0, 3, 1, 0], [95, 57], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1], [5, 5, 3, 9, 0, 6, 3, 5, 2, 1, 5, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 50, 95, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [96, 47, 50]], "fitness": -0.49057143926620483, "mapping_values": [1, 4, 4, 3, 1, 1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2011163174090465, 2.47524466484356, 2.3035845487597375, 2.3017458973024123, 2.267680268198854, 2.305405970089597], "accuracy": [0.24039097130298615, 0.14080041646957397, 0.09972262382507324, 0.10698718577623367, 0.16642451286315918, 0.09496764093637466], "val_loss": [1.7924089431762695, 1.974485192980085, 1.9733155114310128, 1.9684318133762904, 1.9762930188860213, 1.9740347181047713], "val_accuracy": [0.49133333563804626, 0.10233332961797714, 0.10000000149011612, 0.19066666066646576, 0.10000000149011612, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [9, 6, 2, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [8, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 95, 84, 1, 78], [1, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0], [3, 8, 0], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 8, 9, 3, 9], [3, 1, 0, 1, 3, 2], [90, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 3, 0, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1220425480.208946, 23767135828.87122, 110209612097.09047, 304982880772.6662, 649758677491.6244, 1206539769068.0164], "accuracy": [0.1022322028875351, 0.10368511080741882, 0.10038304328918457, 0.10210011899471283, 0.10698718577623367, 0.10117553919553757], "val_loss": [4726068662.857142, 37797281792.0, 127554706285.71428, 302336732598.8571, 590470877769.1428, 1020346349275.4286], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [8, 57], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 0, 1, 3, 2], [90, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07911768555641174, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [8, 57], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [5, 3, 0, 3, 0, 3, 2, 3, 3, 0], [86, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [2, 3], [], [1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 3, 2, 3, 9], [3, 1, 3, 1], [90, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3024965858006, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [8, 57], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 95, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [1, 3], [], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 0, 1, 3, 2], [90, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 2, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [3.924225691014408e+17, 1.5670338960565294e+27, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.11451591551303864, 0.11147800832986832, 0.1154404953122139, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.813580607321464e+18, 1.731623449879054e+28, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09266666322946548, 0.09233333170413971, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 1, 0, 2], [2, 0, 0, 3, 1, 0], [48, 57, 80], [0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [8, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 1, 0, 3, 2, 3, 3, 0], [18, 16, 95, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0], [7, 3, 9, 3, 9], [3, 1, 3, 1], [45, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 6, 4, 3, 3, 3, 2, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.math.subtract(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.add(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.square(tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(sigma, alpha), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3024965858006, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [8, 39], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 95, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 0, 1, 3, 2], [90, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10249637067317963, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [8, 57], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [5, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 95, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0], [3, 4, 9, 3, 9], [3, 1, 3, 1], [90, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 7, 5, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.pow(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07911768555641174, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [8, 1, 3, 2, 0, 6, 3, 8, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 1, 0, 3, 2, 3, 3, 0], [86, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0], [7, 2, 9, 3, 9], [3, 1, 3, 1], [45, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(sigma, alpha), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3020467009007137, 2.305362701667944, 2.4091933571257846, 8.244892207402533, 22.458849273951706, 36.84292472594481], "accuracy": [0.10659094154834747, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9746829441615514, 1.9890313148498535, 2.762510231563023, 14.168130057198661, 26.50025177001953, 38.85307856968471], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [0, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [8, 5, 3, 4, 0, 6, 6, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 1, 0, 3, 2, 3, 3, 0], [18, 16, 95, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0], [2, 3, 2, 3, 9], [3, 1, 3, 1], [90, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08387266844511032, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [8, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 95, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [2, 3], [], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 5, 9, 3, 9], [3, 1, 3, 1], [45, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 19, 19, 12, 7, 3, 1, 1, 0, 1, 0, 3, 2, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.negative(alpha), tf.math.divide_no_nan(tf.math.multiply(tf.math.square(grad), tf.math.add(tf.math.subtract(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)))), tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))), beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [8, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 0, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 95, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 6, 9, 3, 9], [3, 1, 3, 1, 3, 2], [45, 47, 50]], "fitness": -0.03999999910593033, "mapping_values": [1, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302567973947481, 2.304030336204411, 2.3022503597766906, 2.30114556621677, 2.300302270129215, 2.3028452978661944], "accuracy": [0.09060890227556229, 0.09113723784685135, 0.0948355570435524, 0.09034473448991776, 0.0944393053650856, 0.09232597798109055], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [8, 57], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [5, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0], [0, 4, 9, 3, 9], [1, 1, 0, 1, 3, 2], [90, 47, 50]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.302567973947481, 2.304030336204411, 2.3022503597766906, 2.30114556621677, 2.300302270129215, 2.3028452978661944], "accuracy": [0.09060890227556229, 0.09113723784685135, 0.0948355570435524, 0.09034473448991776, 0.0944393053650856, 0.09232597798109055], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 2, 0, 0], [0, 0, 0, 3, 1, 0], [5, 41, 89, 0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [8, 3, 3, 2, 0, 6, 3, 8, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 1, 0, 3, 2, 3, 3, 0], [18, 16, 95, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [45, 47, 50]], "fitness": -0.03999999910593033, "mapping_values": [1, 9, 9, 6, 3, 4, 1, 1, 0, 1, 0, 5, 4, 2, 2, 0, 4, 2, 2, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, alpha))", "other_info": {"loss": [2.302567973947481, 2.304030336204411, 2.3022503597766906, 2.30114556621677, 2.300302270129215, 2.3028452978661944], "accuracy": [0.09060890227556229, 0.09113723784685135, 0.0948355570435524, 0.09034473448991776, 0.0944393053650856, 0.09232597798109055], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [8, 5, 3, 2, 0, 6, 3, 8, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 1, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 3, 9, 3, 9, 4, 9], [1, 1, 0, 1, 3, 2], [90, 47, 50]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 4, 2, 2, 0, 8, 7, 1, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.302567973947481, 2.304030336204411, 2.3022503597766906, 2.30114556621677, 2.300302270129215, 2.3028452978661944], "accuracy": [0.09060890227556229, 0.09113723784685135, 0.0948355570435524, 0.09034473448991776, 0.0944393053650856, 0.09232597798109055], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]