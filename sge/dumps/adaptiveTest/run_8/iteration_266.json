[{"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [2, 6, 9, 4, 0, 3, 4], [2, 3, 2, 0, 1, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.805142879486084, "mapping_values": [1, 10, 10, 6, 4, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), grad)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.225889564269034, 2.032534994674066, 1.4784185514316552, 1.3402168060164679, 1.1084605328725896, 0.9395471920568426, 0.812597623299362, 0.7497026600920844, 0.7734192107505078, 0.7252374525398327, 0.6569877896625699, 0.6870294511672481, 0.653781548545912, 0.6153391181690472, 0.6082275256961328, 0.5871343331692194, 0.5747741493393386, 0.5681785054494046, 0.551240069597562, 0.5418133199600701, 0.5325600097145088, 0.5088965304381875, 0.5241902494285683], "accuracy": [0.23722097277641296, 0.3218861520290375, 0.4799894392490387, 0.5283318161964417, 0.5999207496643066, 0.6543388962745667, 0.6903975605964661, 0.7153612375259399, 0.7143045663833618, 0.7250033020973206, 0.7512878179550171, 0.7424382567405701, 0.752212405204773, 0.7640998363494873, 0.765949010848999, 0.7741381525993347, 0.7817989587783813, 0.7835160493850708, 0.7946110367774963, 0.7932901978492737, 0.7987055778503418, 0.8076872229576111, 0.8006868362426758], "val_loss": [1.9275116239275252, 1.025160823549543, 1.2194791521344865, 0.8919676882880074, 0.722701004573277, 0.6188228130340576, 0.6002701010022845, 0.6733557496752057, 0.541983927999224, 0.526586753981454, 0.636347804750715, 0.5225762980324882, 0.5197585821151733, 0.49816226959228516, 0.507380519594465, 0.46710928848811556, 0.45579023020608084, 0.43061396905354093, 0.43286372082574026, 0.44733069624219624, 0.44184575762067524, 0.43143645354679655, 0.4233011943953378], "val_accuracy": [0.2280000001192093, 0.5556666851043701, 0.5109999775886536, 0.6223333477973938, 0.6516666412353516, 0.7239999771118164, 0.7256666421890259, 0.6806666851043701, 0.7386666536331177, 0.7699999809265137, 0.7296666502952576, 0.7570000290870667, 0.7559999823570251, 0.7793333530426025, 0.7636666893959045, 0.7950000166893005, 0.8050000071525574, 0.8199999928474426, 0.8180000185966492, 0.793666660785675, 0.8136666417121887, 0.8193333148956299, 0.8029999732971191]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [2, 6, 9, 4, 0, 3, 4, 1], [2, 0, 0, 2, 2, 0], [8, 60, 18, 27], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.805142879486084, "mapping_values": [1, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.225889564269034, 2.032534994674066, 1.4784185514316552, 1.3402168060164679, 1.1084605328725896, 0.9395471920568426, 0.812597623299362, 0.7497026600920844, 0.7734192107505078, 0.7252374525398327, 0.6569877896625699, 0.6870294511672481, 0.653781548545912, 0.6153391181690472, 0.6082275256961328, 0.5871343331692194, 0.5747741493393386, 0.5681785054494046, 0.551240069597562, 0.5418133199600701, 0.5325600097145088, 0.5088965304381875, 0.5241902494285683], "accuracy": [0.23722097277641296, 0.3218861520290375, 0.4799894392490387, 0.5283318161964417, 0.5999207496643066, 0.6543388962745667, 0.6903975605964661, 0.7153612375259399, 0.7143045663833618, 0.7250033020973206, 0.7512878179550171, 0.7424382567405701, 0.752212405204773, 0.7640998363494873, 0.765949010848999, 0.7741381525993347, 0.7817989587783813, 0.7835160493850708, 0.7946110367774963, 0.7932901978492737, 0.7987055778503418, 0.8076872229576111, 0.8006868362426758], "val_loss": [1.9275116239275252, 1.025160823549543, 1.2194791521344865, 0.8919676882880074, 0.722701004573277, 0.6188228130340576, 0.6002701010022845, 0.6733557496752057, 0.541983927999224, 0.526586753981454, 0.636347804750715, 0.5225762980324882, 0.5197585821151733, 0.49816226959228516, 0.507380519594465, 0.46710928848811556, 0.45579023020608084, 0.43061396905354093, 0.43286372082574026, 0.44733069624219624, 0.44184575762067524, 0.43143645354679655, 0.4233011943953378], "val_accuracy": [0.2280000001192093, 0.5556666851043701, 0.5109999775886536, 0.6223333477973938, 0.6516666412353516, 0.7239999771118164, 0.7256666421890259, 0.6806666851043701, 0.7386666536331177, 0.7699999809265137, 0.7296666502952576, 0.7570000290870667, 0.7559999823570251, 0.7793333530426025, 0.7636666893959045, 0.7950000166893005, 0.8050000071525574, 0.8199999928474426, 0.8180000185966492, 0.793666660785675, 0.8136666417121887, 0.8193333148956299, 0.8029999732971191]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [2, 6, 9, 4, 0, 3, 4], [0, 3, 0, 1, 1, 0], [8, 57, 18], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.805142879486084, "mapping_values": [1, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.225889564269034, 2.032534994674066, 1.4784185514316552, 1.3402168060164679, 1.1084605328725896, 0.9395471920568426, 0.812597623299362, 0.7497026600920844, 0.7734192107505078, 0.7252374525398327, 0.6569877896625699, 0.6870294511672481, 0.653781548545912, 0.6153391181690472, 0.6082275256961328, 0.5871343331692194, 0.5747741493393386, 0.5681785054494046, 0.551240069597562, 0.5418133199600701, 0.5325600097145088, 0.5088965304381875, 0.5241902494285683], "accuracy": [0.23722097277641296, 0.3218861520290375, 0.4799894392490387, 0.5283318161964417, 0.5999207496643066, 0.6543388962745667, 0.6903975605964661, 0.7153612375259399, 0.7143045663833618, 0.7250033020973206, 0.7512878179550171, 0.7424382567405701, 0.752212405204773, 0.7640998363494873, 0.765949010848999, 0.7741381525993347, 0.7817989587783813, 0.7835160493850708, 0.7946110367774963, 0.7932901978492737, 0.7987055778503418, 0.8076872229576111, 0.8006868362426758], "val_loss": [1.9275116239275252, 1.025160823549543, 1.2194791521344865, 0.8919676882880074, 0.722701004573277, 0.6188228130340576, 0.6002701010022845, 0.6733557496752057, 0.541983927999224, 0.526586753981454, 0.636347804750715, 0.5225762980324882, 0.5197585821151733, 0.49816226959228516, 0.507380519594465, 0.46710928848811556, 0.45579023020608084, 0.43061396905354093, 0.43286372082574026, 0.44733069624219624, 0.44184575762067524, 0.43143645354679655, 0.4233011943953378], "val_accuracy": [0.2280000001192093, 0.5556666851043701, 0.5109999775886536, 0.6223333477973938, 0.6516666412353516, 0.7239999771118164, 0.7256666421890259, 0.6806666851043701, 0.7386666536331177, 0.7699999809265137, 0.7296666502952576, 0.7570000290870667, 0.7559999823570251, 0.7793333530426025, 0.7636666893959045, 0.7950000166893005, 0.8050000071525574, 0.8199999928474426, 0.8180000185966492, 0.793666660785675, 0.8136666417121887, 0.8193333148956299, 0.8029999732971191]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [2, 2, 7, 0, 5, 2, 1, 8, 4, 0, 8], [3, 0, 0, 1, 1, 2, 3], [8, 31, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [38, 47, 50, 41, 34]], "fitness": -0.7845714092254639, "mapping_values": [1, 5, 5, 2, 3, 2, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.2071379239706235, 1.6425795453556178, 1.1864919664837412, 1.0126482883086687, 0.9887952365108122, 0.8480314931077823, 0.8123906601405871, 0.8026928253744445, 0.7538108780808878, 0.7520228188980399, 0.7328771034629826, 0.7216694858552537, 0.6854377658989734, 0.6865723280701356, 0.6656303940400661, 0.661328834092943, 0.6504265114442626, 0.6395416956347182, 0.6406355438892474, 0.6198033610071725, 0.6246302242308025, 0.618965777266279, 0.6140999062154838], "accuracy": [0.25742965936660767, 0.474970281124115, 0.583938717842102, 0.6432439684867859, 0.6450931429862976, 0.6995112895965576, 0.7037379741668701, 0.702681303024292, 0.7251353859901428, 0.7199841737747192, 0.7292299270629883, 0.7331924438476562, 0.743891179561615, 0.7397965788841248, 0.7518161535263062, 0.7547219395637512, 0.7530049085617065, 0.7646281719207764, 0.7594769597053528, 0.7677981853485107, 0.7672698497772217, 0.7629110813140869, 0.7705719470977783], "val_loss": [1.65701539175851, 0.9340298516409737, 0.7799116032464164, 0.6735168865748814, 0.6452653237751552, 0.586944580078125, 0.5992133447102138, 0.5787905284336635, 0.5474460976464408, 0.5408787046160016, 0.5931742531912667, 0.5075427293777466, 0.5035182748522077, 0.49776460443224224, 0.5230798551014492, 0.4826288904462542, 0.49713073457990375, 0.4710917813437326, 0.4757091488157, 0.46943087237221853, 0.4587538582938058, 0.48028983388628277, 0.463020988873073], "val_accuracy": [0.5316666960716248, 0.684333324432373, 0.6439999938011169, 0.7196666598320007, 0.7080000042915344, 0.7416666746139526, 0.7379999756813049, 0.737666666507721, 0.7693333625793457, 0.7749999761581421, 0.7206666469573975, 0.7713333368301392, 0.7820000052452087, 0.7816666960716248, 0.7609999775886536, 0.7896666526794434, 0.7746666669845581, 0.8066666722297668, 0.7986666560173035, 0.8066666722297668, 0.8046666383743286, 0.8016666769981384, 0.8019999861717224]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [2, 6, 3, 6, 0, 3, 4, 8, 5], [2, 0, 0, 1, 1, 0, 2], [8, 31, 93], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [38, 47, 50, 41, 34]], "fitness": -0.7845714092254639, "mapping_values": [1, 15, 15, 8, 7, 3, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), tf.math.add(alpha, alpha))), tf.math.sqrt(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.2071379239706235, 1.6425795453556178, 1.1864919664837412, 1.0126482883086687, 0.9887952365108122, 0.8480314931077823, 0.8123906601405871, 0.8026928253744445, 0.7538108780808878, 0.7520228188980399, 0.7328771034629826, 0.7216694858552537, 0.6854377658989734, 0.6865723280701356, 0.6656303940400661, 0.661328834092943, 0.6504265114442626, 0.6395416956347182, 0.6406355438892474, 0.6198033610071725, 0.6246302242308025, 0.618965777266279, 0.6140999062154838], "accuracy": [0.25742965936660767, 0.474970281124115, 0.583938717842102, 0.6432439684867859, 0.6450931429862976, 0.6995112895965576, 0.7037379741668701, 0.702681303024292, 0.7251353859901428, 0.7199841737747192, 0.7292299270629883, 0.7331924438476562, 0.743891179561615, 0.7397965788841248, 0.7518161535263062, 0.7547219395637512, 0.7530049085617065, 0.7646281719207764, 0.7594769597053528, 0.7677981853485107, 0.7672698497772217, 0.7629110813140869, 0.7705719470977783], "val_loss": [1.65701539175851, 0.9340298516409737, 0.7799116032464164, 0.6735168865748814, 0.6452653237751552, 0.586944580078125, 0.5992133447102138, 0.5787905284336635, 0.5474460976464408, 0.5408787046160016, 0.5931742531912667, 0.5075427293777466, 0.5035182748522077, 0.49776460443224224, 0.5230798551014492, 0.4826288904462542, 0.49713073457990375, 0.4710917813437326, 0.4757091488157, 0.46943087237221853, 0.4587538582938058, 0.48028983388628277, 0.463020988873073], "val_accuracy": [0.5316666960716248, 0.684333324432373, 0.6439999938011169, 0.7196666598320007, 0.7080000042915344, 0.7416666746139526, 0.7379999756813049, 0.737666666507721, 0.7693333625793457, 0.7749999761581421, 0.7206666469573975, 0.7713333368301392, 0.7820000052452087, 0.7816666960716248, 0.7609999775886536, 0.7896666526794434, 0.7746666669845581, 0.8066666722297668, 0.7986666560173035, 0.8066666722297668, 0.8046666383743286, 0.8016666769981384, 0.8019999861717224]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1], [6, 1, 6, 6, 9, 3, 4, 9, 1, 5, 4, 2, 9, 5, 6, 0], [3, 0, 0, 1, 1, 0, 2, 3], [8, 57, 18, 76, 42, 77], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [38, 47, 50, 41, 34]], "fitness": -0.3571428656578064, "mapping_values": [1, 11, 11, 6, 5, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))), tf.math.multiply(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.6084727479986087, 2.294126308857096, 2.21531553042327, 2.299961749824944, 2.308636836718417, 2.303441776118935, 2.3029290593736413], "accuracy": [0.2242768406867981, 0.16074495017528534, 0.19099193811416626, 0.15889579057693481, 0.09694888442754745, 0.09311848133802414, 0.09853387624025345], "val_loss": [1.7689198766435896, 1.8516599110194616, 1.9737301553998674, 1.9831987108503069, 1.973883969443185, 1.9735589708600725, 1.9736548151288713], "val_accuracy": [0.2616666555404663, 0.3583333194255829, 0.10400000214576721, 0.09833333641290665, 0.10233332961797714, 0.10400000214576721, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [2, 6, 0, 4, 0, 3, 4], [3, 0, 0, 1, 1, 2, 3], [8, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [51, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [74, 47, 50, 41, 34]], "fitness": -0.3571428656578064, "mapping_values": [1, 9, 9, 5, 4, 2, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.pow(tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.6084727479986087, 2.294126308857096, 2.21531553042327, 2.299961749824944, 2.308636836718417, 2.303441776118935, 2.3029290593736413], "accuracy": [0.2242768406867981, 0.16074495017528534, 0.19099193811416626, 0.15889579057693481, 0.09694888442754745, 0.09311848133802414, 0.09853387624025345], "val_loss": [1.7689198766435896, 1.8516599110194616, 1.9737301553998674, 1.9831987108503069, 1.973883969443185, 1.9735589708600725, 1.9736548151288713], "val_accuracy": [0.2616666555404663, 0.3583333194255829, 0.10400000214576721, 0.09833333641290665, 0.10233332961797714, 0.10400000214576721, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [8, 6, 9, 0, 2, 3, 4], [2, 3, 2, 0, 1, 0, 2, 2, 0, 0, 0, 3, 2, 2], [34, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [7, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [2, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.17571428418159485, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.240730067726612, 8.362703164617981, 4.1341323320970496, 2.451794028329402, 2.464626218066192, 2.5499337799655226], "accuracy": [0.19640734791755676, 0.11966715008020401, 0.10381719470024109, 0.1006472036242485, 0.09721305221319199, 0.09893012791872025], "val_loss": [2.3874169758387973, 9.21220861162458, 2.190218652997698, 2.1067610468183244, 2.0869812965393066, 2.244005407605852], "val_accuracy": [0.17266666889190674, 0.14433333277702332, 0.10400000214576721, 0.09833333641290665, 0.09966666996479034, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0], [8, 6, 9, 0, 2, 3, 4], [0, 3, 2, 0, 1, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 57, 18], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [0, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 9, 9, 5, 4, 1, 1, 0, 0, 0, 0, 2, 1, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))))), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [131617798.60752165, 2539589560.1806893, 11822605542.335754, 32811236550.41606, 70652171687.20645, 129804106693.97649], "accuracy": [0.09906221181154251, 0.10408136248588562, 0.09945846349000931, 0.10117553919553757, 0.09708096832036972, 0.1006472036242485], "val_loss": [506310692.5714286, 4047932562.285714, 13658874733.714285, 32373108150.857143, 63224643584.0, 109248359862.85715], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [2, 2, 7, 0, 5, 2, 1, 8, 4, 0, 8], [3, 0, 0, 1, 1, 0, 3], [66, 53, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [3, 3, 8, 3, 6], [3, 1, 0, 1, 3, 2], [38, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 18, 11, 7, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.subtract(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.pow(tf.math.negative(tf.math.sqrt(alpha)), tf.math.add(alpha, alpha))))))))), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.sqrt(sigma), alpha), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [2, 2, 3, 0, 0, 3, 9, 4, 7, 6, 5], [3, 0, 0, 1, 1, 0, 0], [8, 57, 46, 25, 20], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [2, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 18, 11, 7, 5, 1, 1, 0, 1, 0, 5, 4, 2, 2, 0, 5, 3, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.math.square(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))))), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), sigma), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 6, 9, 4, 0, 3, 4], [3, 0, 0, 1, 1, 0], [8, 57, 18], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [7, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 6, 4, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))))))))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.multiply(sigma, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [2, 6, 9, 4, 0, 3, 6, 7, 9], [0, 0, 0, 1, 0, 0], [8, 57, 18, 40, 59], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0, 0], [0, 0, 1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0], [0, 3, 2, 3, 6], [3, 1, 0, 1, 3, 2], [38, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 7, 5, 5, 1, 1, 0, 1, 0, 6, 5, 3, 2, 0, 4, 2, 2, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), alpha))), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, sigma))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [8, 6, 9, 0, 2, 3, 4], [2, 3, 2, 0, 1, 0, 2, 2, 0, 0, 0, 3, 2, 2], [5, 0, 28, 77], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [0, 0, 1], [3, 3, 0], [7, 3], [], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 3, 9, 3, 6], [2, 1, 0, 1, 3, 2], [22, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 4, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [7, 6, 9, 0, 2, 3, 4], [2, 3, 2, 0, 1, 0, 2, 2, 0, 0, 0, 3, 2, 2], [34, 57, 18], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [7, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [2, 3, 9, 3, 6], [2, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 7, 5, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(beta, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [0, 2, 7, 0, 5, 2, 1, 8, 4, 0, 8], [0, 0, 1, 1, 1, 2, 3], [68, 31, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 10, 6, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, alpha), tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.negative(tf.math.add(alpha, alpha)), grad)))))))))))))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07607977837324142, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [2, 2, 7, 0, 6, 2, 1, 8, 4, 2, 8, 3], [2, 3, 2, 0, 1, 0, 2, 2, 0, 0, 0, 3, 2, 2], [34, 57, 18, 75], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 4, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 22, 22, 12, 10, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.subtract(grad, tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha))))))), tf.math.sqrt(tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(grad)))), tf.math.multiply(tf.math.add(alpha, grad), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [8, 6, 9, 0, 2, 3, 4], [2, 3, 2, 0, 1, 0, 2, 2, 0, 0, 0, 3, 2, 2], [23, 57, 18], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [9, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302842136859705, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0], [3, 6, 9, 0, 5, 3, 4, 4, 4], [0, 0, 1, 1, 1, 0], [8, 61, 18, 0], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 0, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 13, 13, 8, 5, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), alpha))), tf.math.add(alpha, alpha))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(sigma), alpha))", "other_info": {"loss": [2.300967928881753, 2.3006348031749027, 2.302360384172342, 2.302772991787315, 2.3024272331078572, 2.3021580515725346], "accuracy": [0.09100515395402908, 0.09668471664190292, 0.09391097724437714, 0.09206181764602661, 0.09074098616838455, 0.09060890227556229], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [2, 6, 9, 0, 0, 3, 4], [3, 0, 0, 1, 1, 0], [10, 46, 18], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [1, 3], [], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 6, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 5, 5, 3, 2, 2, 1, 1, 1, 0, 1, 5, 4, 2, 2, 0, 4, 2, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(sigma, alpha))", "other_info": {"loss": [2.300967928881753, 2.3006348031749027, 2.302360384172342, 2.302772991787315, 2.3024272331078572, 2.3021580515725346], "accuracy": [0.09100515395402908, 0.09668471664190292, 0.09391097724437714, 0.09206181764602661, 0.09074098616838455, 0.09060890227556229], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]