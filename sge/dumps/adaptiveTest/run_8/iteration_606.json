[{"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 8, 2, 4, 5, 3, 2, 1, 2, 1, 5, 2, 9, 3, 2, 6, 9, 5, 0, 2, 8, 2, 0, 9, 2], [0, 0, 2, 2, 2, 2, 1, 2, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 10, 35, 27, 57, 79, 53, 52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.8168571591377258, "mapping_values": [1, 24, 24, 14, 10, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(tf.math.subtract(tf.math.add(alpha, grad), grad), grad))))), tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), alpha)))), tf.math.multiply(tf.math.add(alpha, grad), grad)))))), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3922388182340155, 2.0872008994018962, 1.5766483201263854, 1.2537613873783435, 1.1500502747630306, 0.905485213613781, 0.8067015299959552, 0.7382904209276279, 0.7052513848379571, 0.6834382751771818, 0.6434012889751842, 0.6225719123295411, 0.622413862532534, 0.5693224319424753, 0.5699453858210662, 0.5545461294736372, 0.5542706804835423, 0.526568234919431, 0.5345312521804388, 0.5173885744277119, 0.5007734101454123, 0.5063006589834984, 0.484062442705852, 0.49105007405436, 0.4655655645431387, 0.4544836800718163, 0.4621514424104984, 0.44161210543034557, 0.4520232191198868, 0.42614763142992995, 0.42030588223430004, 0.4335741241925176, 0.410607628665029, 0.4056804289891499, 0.4244706768873676], "accuracy": [0.23854179680347443, 0.28820499777793884, 0.4566107392311096, 0.5488046407699585, 0.5955620408058167, 0.6446968913078308, 0.6976621150970459, 0.719852089881897, 0.7215691208839417, 0.741909921169281, 0.7532690763473511, 0.7660810947418213, 0.7648923397064209, 0.7836481332778931, 0.7810064554214478, 0.7869502305984497, 0.7938185334205627, 0.7959318161010742, 0.7965922355651855, 0.805177628993988, 0.8082155585289001, 0.8095363974571228, 0.8175934553146362, 0.8150838613510132, 0.8273676037788391, 0.8277638554573059, 0.8272355198860168, 0.8350284099578857, 0.8309338092803955, 0.8403117060661316, 0.8421608805656433, 0.837537944316864, 0.8491612672805786, 0.8485008478164673, 0.8381983637809753], "val_loss": [1.9570471218654089, 1.3479600974491663, 0.9965647288731166, 1.071528502873012, 0.7802083662578038, 0.6748438732964652, 0.6006973300661359, 0.5483791487557548, 0.5265166589191982, 0.5031291587012154, 0.5122390644890922, 0.5641931976590838, 0.4633231333323887, 0.45861456223896574, 0.4754822254180908, 0.4269413266863142, 0.47589019366673063, 0.4414173790386745, 0.41618084056036814, 0.42897267852510723, 0.40208652189799715, 0.4031700917652675, 0.405045075075967, 0.3979748913219997, 0.37052279710769653, 0.3902948924473354, 0.3816903233528137, 0.3841344543865749, 0.3601724760872977, 0.3589417338371277, 0.3828797766140529, 0.35440670592444284, 0.3790423018591745, 0.37646052667072843, 0.3804732731410435], "val_accuracy": [0.17866666615009308, 0.3216666579246521, 0.574999988079071, 0.5376666784286499, 0.6413333415985107, 0.6976666450500488, 0.7143333554267883, 0.7450000047683716, 0.762333333492279, 0.7746666669845581, 0.7806666493415833, 0.7360000014305115, 0.7826666831970215, 0.7913333177566528, 0.7916666865348816, 0.8183333277702332, 0.781333327293396, 0.7983333468437195, 0.8173333406448364, 0.8090000152587891, 0.8303333520889282, 0.8333333134651184, 0.8163333535194397, 0.8243333101272583, 0.8489999771118164, 0.8306666612625122, 0.8306666612625122, 0.8263333439826965, 0.8516666889190674, 0.8573333621025085, 0.8303333520889282, 0.8533333539962769, 0.8399999737739563, 0.8306666612625122, 0.8320000171661377]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 4, 2, 4, 5, 3, 2, 1, 2, 1, 5, 2, 9, 3, 2, 6, 9, 5, 0, 2, 8, 2, 0, 9, 2], [0, 1, 2, 2, 2, 2, 1, 2, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 52, 35, 7, 57, 79, 53, 52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.8168571591377258, "mapping_values": [1, 29, 29, 17, 12, 6, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.add(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(tf.math.subtract(tf.math.add(alpha, grad), grad), grad))), alpha)), tf.math.square(tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(alpha, grad), grad))))))), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.divide_no_nan(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3922388182340155, 2.0872008994018962, 1.5766483201263854, 1.2537613873783435, 1.1500502747630306, 0.905485213613781, 0.8067015299959552, 0.7382904209276279, 0.7052513848379571, 0.6834382751771818, 0.6434012889751842, 0.6225719123295411, 0.622413862532534, 0.5693224319424753, 0.5699453858210662, 0.5545461294736372, 0.5542706804835423, 0.526568234919431, 0.5345312521804388, 0.5173885744277119, 0.5007734101454123, 0.5063006589834984, 0.484062442705852, 0.49105007405436, 0.4655655645431387, 0.4544836800718163, 0.4621514424104984, 0.44161210543034557, 0.4520232191198868, 0.42614763142992995, 0.42030588223430004, 0.4335741241925176, 0.410607628665029, 0.4056804289891499, 0.4244706768873676], "accuracy": [0.23854179680347443, 0.28820499777793884, 0.4566107392311096, 0.5488046407699585, 0.5955620408058167, 0.6446968913078308, 0.6976621150970459, 0.719852089881897, 0.7215691208839417, 0.741909921169281, 0.7532690763473511, 0.7660810947418213, 0.7648923397064209, 0.7836481332778931, 0.7810064554214478, 0.7869502305984497, 0.7938185334205627, 0.7959318161010742, 0.7965922355651855, 0.805177628993988, 0.8082155585289001, 0.8095363974571228, 0.8175934553146362, 0.8150838613510132, 0.8273676037788391, 0.8277638554573059, 0.8272355198860168, 0.8350284099578857, 0.8309338092803955, 0.8403117060661316, 0.8421608805656433, 0.837537944316864, 0.8491612672805786, 0.8485008478164673, 0.8381983637809753], "val_loss": [1.9570471218654089, 1.3479600974491663, 0.9965647288731166, 1.071528502873012, 0.7802083662578038, 0.6748438732964652, 0.6006973300661359, 0.5483791487557548, 0.5265166589191982, 0.5031291587012154, 0.5122390644890922, 0.5641931976590838, 0.4633231333323887, 0.45861456223896574, 0.4754822254180908, 0.4269413266863142, 0.47589019366673063, 0.4414173790386745, 0.41618084056036814, 0.42897267852510723, 0.40208652189799715, 0.4031700917652675, 0.405045075075967, 0.3979748913219997, 0.37052279710769653, 0.3902948924473354, 0.3816903233528137, 0.3841344543865749, 0.3601724760872977, 0.3589417338371277, 0.3828797766140529, 0.35440670592444284, 0.3790423018591745, 0.37646052667072843, 0.3804732731410435], "val_accuracy": [0.17866666615009308, 0.3216666579246521, 0.574999988079071, 0.5376666784286499, 0.6413333415985107, 0.6976666450500488, 0.7143333554267883, 0.7450000047683716, 0.762333333492279, 0.7746666669845581, 0.7806666493415833, 0.7360000014305115, 0.7826666831970215, 0.7913333177566528, 0.7916666865348816, 0.8183333277702332, 0.781333327293396, 0.7983333468437195, 0.8173333406448364, 0.8090000152587891, 0.8303333520889282, 0.8333333134651184, 0.8163333535194397, 0.8243333101272583, 0.8489999771118164, 0.8306666612625122, 0.8306666612625122, 0.8263333439826965, 0.8516666889190674, 0.8573333621025085, 0.8303333520889282, 0.8533333539962769, 0.8399999737739563, 0.8306666612625122, 0.8320000171661377]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [6, 4, 2, 4, 5, 6, 2, 1, 2, 1, 5, 2, 9, 5, 0, 6, 9, 5, 0, 2, 8, 2, 0, 9, 2], [1, 0, 2, 0, 2, 2, 0, 2, 2, 2, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [55, 10, 35, 27, 57, 79, 12, 74], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.8168571591377258, "mapping_values": [1, 24, 24, 14, 10, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.pow(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.add(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(tf.math.add(alpha, grad), grad), tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), tf.math.square(tf.math.add(alpha, grad)))))))))))), grad), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3922388182340155, 2.0872008994018962, 1.5766483201263854, 1.2537613873783435, 1.1500502747630306, 0.905485213613781, 0.8067015299959552, 0.7382904209276279, 0.7052513848379571, 0.6834382751771818, 0.6434012889751842, 0.6225719123295411, 0.622413862532534, 0.5693224319424753, 0.5699453858210662, 0.5545461294736372, 0.5542706804835423, 0.526568234919431, 0.5345312521804388, 0.5173885744277119, 0.5007734101454123, 0.5063006589834984, 0.484062442705852, 0.49105007405436, 0.4655655645431387, 0.4544836800718163, 0.4621514424104984, 0.44161210543034557, 0.4520232191198868, 0.42614763142992995, 0.42030588223430004, 0.4335741241925176, 0.410607628665029, 0.4056804289891499, 0.4244706768873676], "accuracy": [0.23854179680347443, 0.28820499777793884, 0.4566107392311096, 0.5488046407699585, 0.5955620408058167, 0.6446968913078308, 0.6976621150970459, 0.719852089881897, 0.7215691208839417, 0.741909921169281, 0.7532690763473511, 0.7660810947418213, 0.7648923397064209, 0.7836481332778931, 0.7810064554214478, 0.7869502305984497, 0.7938185334205627, 0.7959318161010742, 0.7965922355651855, 0.805177628993988, 0.8082155585289001, 0.8095363974571228, 0.8175934553146362, 0.8150838613510132, 0.8273676037788391, 0.8277638554573059, 0.8272355198860168, 0.8350284099578857, 0.8309338092803955, 0.8403117060661316, 0.8421608805656433, 0.837537944316864, 0.8491612672805786, 0.8485008478164673, 0.8381983637809753], "val_loss": [1.9570471218654089, 1.3479600974491663, 0.9965647288731166, 1.071528502873012, 0.7802083662578038, 0.6748438732964652, 0.6006973300661359, 0.5483791487557548, 0.5265166589191982, 0.5031291587012154, 0.5122390644890922, 0.5641931976590838, 0.4633231333323887, 0.45861456223896574, 0.4754822254180908, 0.4269413266863142, 0.47589019366673063, 0.4414173790386745, 0.41618084056036814, 0.42897267852510723, 0.40208652189799715, 0.4031700917652675, 0.405045075075967, 0.3979748913219997, 0.37052279710769653, 0.3902948924473354, 0.3816903233528137, 0.3841344543865749, 0.3601724760872977, 0.3589417338371277, 0.3828797766140529, 0.35440670592444284, 0.3790423018591745, 0.37646052667072843, 0.3804732731410435], "val_accuracy": [0.17866666615009308, 0.3216666579246521, 0.574999988079071, 0.5376666784286499, 0.6413333415985107, 0.6976666450500488, 0.7143333554267883, 0.7450000047683716, 0.762333333492279, 0.7746666669845581, 0.7806666493415833, 0.7360000014305115, 0.7826666831970215, 0.7913333177566528, 0.7916666865348816, 0.8183333277702332, 0.781333327293396, 0.7983333468437195, 0.8173333406448364, 0.8090000152587891, 0.8303333520889282, 0.8333333134651184, 0.8163333535194397, 0.8243333101272583, 0.8489999771118164, 0.8306666612625122, 0.8306666612625122, 0.8263333439826965, 0.8516666889190674, 0.8573333621025085, 0.8303333520889282, 0.8533333539962769, 0.8399999737739563, 0.8306666612625122, 0.8320000171661377]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1], [3, 4, 2, 4, 5, 2, 2, 1, 2, 1, 5, 2, 6, 3, 2, 6, 9, 5, 0, 2, 8, 2, 0, 9, 2], [0, 0, 2, 2, 2, 2, 1, 2, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [55, 10, 35, 27, 57, 79, 58, 52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.8168571591377258, "mapping_values": [1, 39, 39, 24, 15, 8, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 50, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.add(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(tf.math.subtract(tf.math.add(alpha, grad), grad), tf.math.square(tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(tf.math.add(alpha, alpha), tf.math.divide_no_nan(grad, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))))), tf.math.square(tf.math.negative(tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.math.negative(alpha), tf.math.add(alpha, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3922388182340155, 2.0872008994018962, 1.5766483201263854, 1.2537613873783435, 1.1500502747630306, 0.905485213613781, 0.8067015299959552, 0.7382904209276279, 0.7052513848379571, 0.6834382751771818, 0.6434012889751842, 0.6225719123295411, 0.622413862532534, 0.5693224319424753, 0.5699453858210662, 0.5545461294736372, 0.5542706804835423, 0.526568234919431, 0.5345312521804388, 0.5173885744277119, 0.5007734101454123, 0.5063006589834984, 0.484062442705852, 0.49105007405436, 0.4655655645431387, 0.4544836800718163, 0.4621514424104984, 0.44161210543034557, 0.4520232191198868, 0.42614763142992995, 0.42030588223430004, 0.4335741241925176, 0.410607628665029, 0.4056804289891499, 0.4244706768873676], "accuracy": [0.23854179680347443, 0.28820499777793884, 0.4566107392311096, 0.5488046407699585, 0.5955620408058167, 0.6446968913078308, 0.6976621150970459, 0.719852089881897, 0.7215691208839417, 0.741909921169281, 0.7532690763473511, 0.7660810947418213, 0.7648923397064209, 0.7836481332778931, 0.7810064554214478, 0.7869502305984497, 0.7938185334205627, 0.7959318161010742, 0.7965922355651855, 0.805177628993988, 0.8082155585289001, 0.8095363974571228, 0.8175934553146362, 0.8150838613510132, 0.8273676037788391, 0.8277638554573059, 0.8272355198860168, 0.8350284099578857, 0.8309338092803955, 0.8403117060661316, 0.8421608805656433, 0.837537944316864, 0.8491612672805786, 0.8485008478164673, 0.8381983637809753], "val_loss": [1.9570471218654089, 1.3479600974491663, 0.9965647288731166, 1.071528502873012, 0.7802083662578038, 0.6748438732964652, 0.6006973300661359, 0.5483791487557548, 0.5265166589191982, 0.5031291587012154, 0.5122390644890922, 0.5641931976590838, 0.4633231333323887, 0.45861456223896574, 0.4754822254180908, 0.4269413266863142, 0.47589019366673063, 0.4414173790386745, 0.41618084056036814, 0.42897267852510723, 0.40208652189799715, 0.4031700917652675, 0.405045075075967, 0.3979748913219997, 0.37052279710769653, 0.3902948924473354, 0.3816903233528137, 0.3841344543865749, 0.3601724760872977, 0.3589417338371277, 0.3828797766140529, 0.35440670592444284, 0.3790423018591745, 0.37646052667072843, 0.3804732731410435], "val_accuracy": [0.17866666615009308, 0.3216666579246521, 0.574999988079071, 0.5376666784286499, 0.6413333415985107, 0.6976666450500488, 0.7143333554267883, 0.7450000047683716, 0.762333333492279, 0.7746666669845581, 0.7806666493415833, 0.7360000014305115, 0.7826666831970215, 0.7913333177566528, 0.7916666865348816, 0.8183333277702332, 0.781333327293396, 0.7983333468437195, 0.8173333406448364, 0.8090000152587891, 0.8303333520889282, 0.8333333134651184, 0.8163333535194397, 0.8243333101272583, 0.8489999771118164, 0.8306666612625122, 0.8306666612625122, 0.8263333439826965, 0.8516666889190674, 0.8573333621025085, 0.8303333520889282, 0.8533333539962769, 0.8399999737739563, 0.8306666612625122, 0.8320000171661377]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1], [3, 4, 2, 4, 5, 3, 2, 2, 2, 1, 5, 2, 9, 3, 2, 6, 3, 5, 0, 2, 8, 2, 0, 9, 2], [0, 0, 2, 0, 2, 2, 2, 2, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [55, 10, 22, 27, 64, 79, 53, 52, 22], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 0, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.7837142944335938, "mapping_values": [1, 39, 39, 24, 15, 9, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.square(tf.math.multiply(tf.math.add(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), grad)), tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(tf.math.add(alpha, grad), grad))))))), grad)), tf.math.divide_no_nan(tf.math.multiply(tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))))), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.math.negative(alpha), tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.1935701914719146, 2.3350727621747867, 2.227585981960042, 2.0930323503776673, 2.5783201272949614, 2.350633289646778, 2.1156601445581367, 2.127449912811393, 2.3415020235840354, 2.3009612548935445, 1.9739920125267745, 1.2784448796889376, 1.106814491144182, 0.9223008448295684, 0.9595923017454091, 0.8343342591459411, 0.7660528040832895, 0.7566163844483451, 0.7191611287332781, 0.6856935277842984, 0.6620855312762464, 0.6781348588365558, 0.6357477446667443, 0.6429619246926747, 0.6023281248978432, 0.6130373277337937, 0.5843223081351807], "accuracy": [0.216880202293396, 0.1328754425048828, 0.19019944965839386, 0.26601505279541016, 0.13393211364746094, 0.19310526549816132, 0.2678642272949219, 0.23854179680347443, 0.13195087015628815, 0.10698718577623367, 0.3271694481372833, 0.5900145173072815, 0.6408664584159851, 0.6800950765609741, 0.6832650899887085, 0.7055870890617371, 0.7218332886695862, 0.7304186820983887, 0.7300224304199219, 0.7483819723129272, 0.7605336308479309, 0.7544577717781067, 0.7724210619926453, 0.7651565074920654, 0.7792893648147583, 0.7786290049552917, 0.7861577272415161], "val_loss": [1.9735351290021623, 1.940948554447719, 1.8774969918387276, 3.471840109143938, 1.739100115639823, 1.9192657470703125, 1.4155987671443395, 1.84979704448155, 1.975107261112758, 1.9497479711260115, 0.9420474597385952, 0.8933737618582589, 0.6919247593198504, 0.843954256602696, 0.7667446477072579, 0.6164091144289289, 0.5274805682046073, 0.5775695868900844, 0.5177346297672817, 0.48386100360325407, 0.5095584051949638, 0.4976316349846976, 0.4976166657039097, 0.49334985869271414, 0.5176680769239154, 0.4893306493759155, 0.5159614597048078], "val_accuracy": [0.16366666555404663, 0.30433332920074463, 0.3553333282470703, 0.16099999845027924, 0.31566667556762695, 0.19033333659172058, 0.4816666543483734, 0.34166666865348816, 0.10000000149011612, 0.17633333802223206, 0.6613333225250244, 0.6806666851043701, 0.7269999980926514, 0.6946666836738586, 0.640333354473114, 0.7453333139419556, 0.7736666798591614, 0.7490000128746033, 0.7733333110809326, 0.7886666655540466, 0.7713333368301392, 0.7916666865348816, 0.7763333320617676, 0.7863333225250244, 0.7879999876022339, 0.7829999923706055, 0.7666666507720947]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [3, 8, 0, 4, 5, 1, 0, 5, 2, 1, 8, 2, 9, 3, 2, 1, 0, 5, 0, 2, 3, 2, 0, 8, 2, 9, 2, 1, 0, 4, 6, 9], [3, 0, 2, 2, 2, 2, 1, 2, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 10, 35, 27, 57, 79, 53, 52], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 3, 5, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [20, 25, 50, 71, 34]], "fitness": -0.7837142944335938, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.multiply(alpha, tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.1935701914719146, 2.3350727621747867, 2.227585981960042, 2.0930323503776673, 2.5783201272949614, 2.350633289646778, 2.1156601445581367, 2.127449912811393, 2.3415020235840354, 2.3009612548935445, 1.9739920125267745, 1.2784448796889376, 1.106814491144182, 0.9223008448295684, 0.9595923017454091, 0.8343342591459411, 0.7660528040832895, 0.7566163844483451, 0.7191611287332781, 0.6856935277842984, 0.6620855312762464, 0.6781348588365558, 0.6357477446667443, 0.6429619246926747, 0.6023281248978432, 0.6130373277337937, 0.5843223081351807], "accuracy": [0.216880202293396, 0.1328754425048828, 0.19019944965839386, 0.26601505279541016, 0.13393211364746094, 0.19310526549816132, 0.2678642272949219, 0.23854179680347443, 0.13195087015628815, 0.10698718577623367, 0.3271694481372833, 0.5900145173072815, 0.6408664584159851, 0.6800950765609741, 0.6832650899887085, 0.7055870890617371, 0.7218332886695862, 0.7304186820983887, 0.7300224304199219, 0.7483819723129272, 0.7605336308479309, 0.7544577717781067, 0.7724210619926453, 0.7651565074920654, 0.7792893648147583, 0.7786290049552917, 0.7861577272415161], "val_loss": [1.9735351290021623, 1.940948554447719, 1.8774969918387276, 3.471840109143938, 1.739100115639823, 1.9192657470703125, 1.4155987671443395, 1.84979704448155, 1.975107261112758, 1.9497479711260115, 0.9420474597385952, 0.8933737618582589, 0.6919247593198504, 0.843954256602696, 0.7667446477072579, 0.6164091144289289, 0.5274805682046073, 0.5775695868900844, 0.5177346297672817, 0.48386100360325407, 0.5095584051949638, 0.4976316349846976, 0.4976166657039097, 0.49334985869271414, 0.5176680769239154, 0.4893306493759155, 0.5159614597048078], "val_accuracy": [0.16366666555404663, 0.30433332920074463, 0.3553333282470703, 0.16099999845027924, 0.31566667556762695, 0.19033333659172058, 0.4816666543483734, 0.34166666865348816, 0.10000000149011612, 0.17633333802223206, 0.6613333225250244, 0.6806666851043701, 0.7269999980926514, 0.6946666836738586, 0.640333354473114, 0.7453333139419556, 0.7736666798591614, 0.7490000128746033, 0.7733333110809326, 0.7886666655540466, 0.7713333368301392, 0.7916666865348816, 0.7763333320617676, 0.7863333225250244, 0.7879999876022339, 0.7829999923706055, 0.7666666507720947]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [3, 1, 3, 4, 8, 1, 0, 5, 2, 1, 5, 2, 9, 3, 2, 1, 0, 5, 0, 2, 3, 2, 0, 8, 2, 9, 2, 1, 0, 4, 6, 9], [0, 3, 0, 2, 2, 0, 1, 2, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [55, 10, 35, 27, 57, 79, 53, 52], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.7837142944335938, "mapping_values": [1, 10, 10, 5, 5, 2, 13, 13, 8, 5, 3, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(grad, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))), grad)))), tf.math.sqrt(grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.multiply(alpha, tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.1935701914719146, 2.3350727621747867, 2.227585981960042, 2.0930323503776673, 2.5783201272949614, 2.350633289646778, 2.1156601445581367, 2.127449912811393, 2.3415020235840354, 2.3009612548935445, 1.9739920125267745, 1.2784448796889376, 1.106814491144182, 0.9223008448295684, 0.9595923017454091, 0.8343342591459411, 0.7660528040832895, 0.7566163844483451, 0.7191611287332781, 0.6856935277842984, 0.6620855312762464, 0.6781348588365558, 0.6357477446667443, 0.6429619246926747, 0.6023281248978432, 0.6130373277337937, 0.5843223081351807], "accuracy": [0.216880202293396, 0.1328754425048828, 0.19019944965839386, 0.26601505279541016, 0.13393211364746094, 0.19310526549816132, 0.2678642272949219, 0.23854179680347443, 0.13195087015628815, 0.10698718577623367, 0.3271694481372833, 0.5900145173072815, 0.6408664584159851, 0.6800950765609741, 0.6832650899887085, 0.7055870890617371, 0.7218332886695862, 0.7304186820983887, 0.7300224304199219, 0.7483819723129272, 0.7605336308479309, 0.7544577717781067, 0.7724210619926453, 0.7651565074920654, 0.7792893648147583, 0.7786290049552917, 0.7861577272415161], "val_loss": [1.9735351290021623, 1.940948554447719, 1.8774969918387276, 3.471840109143938, 1.739100115639823, 1.9192657470703125, 1.4155987671443395, 1.84979704448155, 1.975107261112758, 1.9497479711260115, 0.9420474597385952, 0.8933737618582589, 0.6919247593198504, 0.843954256602696, 0.7667446477072579, 0.6164091144289289, 0.5274805682046073, 0.5775695868900844, 0.5177346297672817, 0.48386100360325407, 0.5095584051949638, 0.4976316349846976, 0.4976166657039097, 0.49334985869271414, 0.5176680769239154, 0.4893306493759155, 0.5159614597048078], "val_accuracy": [0.16366666555404663, 0.30433332920074463, 0.3553333282470703, 0.16099999845027924, 0.31566667556762695, 0.19033333659172058, 0.4816666543483734, 0.34166666865348816, 0.10000000149011612, 0.17633333802223206, 0.6613333225250244, 0.6806666851043701, 0.7269999980926514, 0.6946666836738586, 0.640333354473114, 0.7453333139419556, 0.7736666798591614, 0.7490000128746033, 0.7733333110809326, 0.7886666655540466, 0.7713333368301392, 0.7916666865348816, 0.7763333320617676, 0.7863333225250244, 0.7879999876022339, 0.7829999923706055, 0.7666666507720947]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 8, 2, 4, 5, 3, 2, 1, 2, 1, 5, 2, 9, 3, 2, 6, 9, 5, 0, 2, 8, 2, 0, 9, 2], [2, 2, 2, 2, 2, 2, 1, 2, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 72, 35, 27, 57, 79, 53, 52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [5, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.46314287185668945, "mapping_values": [1, 15, 15, 8, 7, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(grad, tf.math.square(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))))))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.2063141779231357, 2.1912067162598508, 2.3509851713788947, 2.2973901623700823, 2.104607309065065, 2.278737750870283, 2.305500834955909, 2.3035368612020117, 2.3035979001056943, 2.3034076676187953], "accuracy": [0.21529521048069, 0.21238937973976135, 0.16893409192562103, 0.13010171055793762, 0.2615242302417755, 0.2118610441684723, 0.1022322028875351, 0.09338264167308807, 0.1002509593963623, 0.09615638852119446], "val_loss": [1.782115868159703, 1.9095448085239954, 1.9760684967041016, 1.914055483681815, 1.277867078781128, 1.976503917149135, 1.974123818533761, 1.9737141472952706, 1.9736958231244768, 1.9736714363098145], "val_accuracy": [0.2770000100135803, 0.12800000607967377, 0.10166666656732559, 0.30666667222976685, 0.45133334398269653, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 8, 1, 4, 5, 3, 2, 1, 2, 1, 5, 2, 9, 3, 2, 6, 9, 5, 0, 2, 8, 2, 0, 9, 2], [0, 2, 2, 2, 2, 2, 1, 2, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [57, 10, 35, 63, 57, 79, 53, 52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.46314287185668945, "mapping_values": [1, 24, 24, 14, 10, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(grad, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), grad)))), tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), alpha)))), tf.math.multiply(tf.math.add(alpha, grad), grad)))))), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.2063141779231357, 2.1912067162598508, 2.3509851713788947, 2.2973901623700823, 2.104607309065065, 2.278737750870283, 2.305500834955909, 2.3035368612020117, 2.3035979001056943, 2.3034076676187953], "accuracy": [0.21529521048069, 0.21238937973976135, 0.16893409192562103, 0.13010171055793762, 0.2615242302417755, 0.2118610441684723, 0.1022322028875351, 0.09338264167308807, 0.1002509593963623, 0.09615638852119446], "val_loss": [1.782115868159703, 1.9095448085239954, 1.9760684967041016, 1.914055483681815, 1.277867078781128, 1.976503917149135, 1.974123818533761, 1.9737141472952706, 1.9736958231244768, 1.9736714363098145], "val_accuracy": [0.2770000100135803, 0.12800000607967377, 0.10166666656732559, 0.30666667222976685, 0.45133334398269653, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 8, 2, 1, 5, 3, 2, 1, 8, 1, 5, 2, 9, 5, 2, 6, 9, 5, 0, 2, 8, 2, 0, 9, 2], [0, 0, 2, 2, 2, 2, 1, 2, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 10, 35, 27, 57, 79, 53, 52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.36485713720321655, "mapping_values": [1, 24, 24, 15, 9, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(grad, tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, grad), tf.math.square(grad))))))), tf.math.add(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(grad))))), tf.math.add(tf.math.add(alpha, alpha), grad)))))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.4715344299021145, 2.225712005315188, 2.1021083355453807, 2.329448102031008, 2.138609562614858, 2.0875901357136573, 2.1869439074801353, 2.311714302484212, 2.3040167305369055, 2.303492588090575], "accuracy": [0.2226918488740921, 0.16193369030952454, 0.2506934404373169, 0.10606260597705841, 0.228899747133255, 0.23457930982112885, 0.2654867172241211, 0.09959053993225098, 0.09589222073554993, 0.09721305221319199], "val_loss": [1.855510984148298, 1.9640983172825404, 2.130840642111642, 1.94011504309518, 1.4238849367414201, 1.9655471529279436, 1.9904861450195312, 1.9742603983197893, 1.9739875793457031, 1.9737987518310547], "val_accuracy": [0.296999990940094, 0.09833333641290665, 0.09833333641290665, 0.19733333587646484, 0.3333333432674408, 0.10333333164453506, 0.10233332961797714, 0.09833333641290665, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 2, 2, 3, 5, 3, 2, 1, 0, 1, 8, 1, 9, 5, 2, 6, 9, 5, 0, 2, 8, 2, 0, 9, 2], [0, 3, 0, 2, 2, 0, 1, 2, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 10, 35, 27, 57, 79, 53, 52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [0, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [64673837.230534986, 1278367697.16867, 5986611120.87703, 16347910635.779686, 35039005398.8493, 64785534395.494385], "accuracy": [0.10289261490106583, 0.1006472036242485, 0.09694888442754745, 0.0948355570435524, 0.09932637959718704, 0.09787346422672272], "val_loss": [252293065.14285713, 2016736256.0, 6804672073.142858, 16127298998.857143, 31496456484.57143, 54422684818.28571], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [3, 2, 2, 4, 5, 8, 5, 1, 2, 1, 5, 2, 9, 2, 2, 6, 9, 5, 0, 2, 8, 2, 0, 9, 2], [0, 0, 2, 0, 2, 2, 2, 2, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [55, 10, 24, 27, 57, 79, 53, 52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [0, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [4, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 9, 7, 3, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 5, 3, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))))), tf.math.subtract(grad, tf.math.add(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))), grad), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [3, 8, 0, 4, 5, 1, 0, 5, 2, 1, 8, 2, 9, 3, 2, 1, 0, 5, 0, 2, 3, 2, 0, 8, 2, 9, 2, 1, 0, 4, 6, 9], [0, 0, 2, 2, 2, 2, 1, 2, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 10, 35, 27, 57, 79, 53, 52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 9, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [20, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 2, 0, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [44.693881227954066, 533.452245516532, 2190.4074464212745, 5704.850346021208, 11948.743679624555, 21796.65450506043], "accuracy": [0.10289261490106583, 0.10038304328918457, 0.09734513610601425, 0.0948355570435524, 0.09945846349000931, 0.09787346422672272], "val_loss": [128.20268903459822, 770.7821568080357, 2415.0963309151784, 5546.330915178572, 10651.378348214286, 18212.44754464286], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 8, 3, 2, 5, 1, 0, 5, 2, 1, 5, 2, 9, 3, 2, 1, 0, 5, 0, 2, 3, 2, 0, 8, 2, 9, 2, 1, 0, 4, 6, 9], [0, 0, 2, 0, 2, 2, 2, 2, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [55, 10, 35, 27, 57, 79, 53, 52], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [6, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [51, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07607977837324142, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 8, 0, 4, 5, 1, 0, 5, 2, 1, 8, 2, 9, 3, 2, 1, 0, 5, 0, 2, 3, 2, 0, 8, 2, 9, 2, 1, 0, 4, 6, 9], [3, 0, 2, 2, 0, 2, 1, 2, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [22, 10, 35, 27, 57, 79, 53, 52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [6, 2, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.09914285689592361, "mapping_values": [1, 11, 11, 7, 4, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)))), grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [1.1999868472614424e+23, 1.3934137047809996e+23, 1.3676700264376367e+23, 1.3865887236252307e+23, 1.3628976437874893e+23, 1.3632149114062788e+23], "accuracy": [0.09655263274908066, 0.09008057415485382, 0.09615638852119446, 0.09628847241401672, 0.09311848133802414, 0.09774138033390045], "val_loss": [7.51096474765999e+22, 7.478551183073329e+22, 7.445992731252942e+22, 7.4133426633487065e+22, 7.381890038248251e+22, 7.350363296765357e+22], "val_accuracy": [0.09600000083446503, 0.0949999988079071, 0.0949999988079071, 0.09433333575725555, 0.09333333373069763, 0.09300000220537186]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 8, 2, 4, 5, 3, 2, 1, 2, 1, 5, 2, 9, 3, 2, 6, 9, 5, 0, 2, 8, 2, 0, 9, 2], [0, 0, 2, 1, 2, 2, 1, 2, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [60, 10, 31, 27, 57, 79, 53, 52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 0, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.08085714280605316, "mapping_values": [1, 24, 24, 14, 10, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(tf.math.subtract(tf.math.add(alpha, alpha), grad), grad))))), tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), alpha))))), tf.math.multiply(tf.math.add(alpha, grad), grad))))), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.negative(beta)))", "other_info": {"loss": [2.301897635974463, 2.301807031907331, 2.30213784444066, 2.300151567921395, 2.3009853892086394, 2.3002699100739763, 2.298958669516861, 2.2992133640452557, 2.2989068117596454, 2.3002843942152214, 2.298933913222456, 2.299396267688002, 2.298685176261365, 2.2998685001020087, 2.3005947845959316, 2.2998992485093748, 2.300473822263789], "accuracy": [0.09417514503002167, 0.08928807079792023, 0.09245806187391281, 0.09166556596755981, 0.09813763201236725, 0.09549596905708313, 0.1014397069811821, 0.09787346422672272, 0.09813763201236725, 0.10157178342342377, 0.09945846349000931, 0.09813763201236725, 0.10091137140989304, 0.09853387624025345, 0.09906221181154251, 0.10381719470024109, 0.09932637959718704], "val_loss": [1.9697456359863281, 1.9692505427769251, 1.96879243850708, 1.9687301090785436, 1.9688213212149483, 1.9688053131103516, 1.9687772478376115, 1.9687785421098982, 1.9688231604439872, 1.9688923699515206, 1.969130175454276, 1.9693364415849959, 1.9696243831089564, 1.9699664797101701, 1.9701965195792062, 1.9704501288277763, 1.9706942694527763], "val_accuracy": [0.046666666865348816, 0.05299999937415123, 0.05666666850447655, 0.06266666948795319, 0.06666667014360428, 0.07233333587646484, 0.07699999958276749, 0.07699999958276749, 0.07866666465997696, 0.07999999821186066, 0.07833333313465118, 0.08100000023841858, 0.08100000023841858, 0.07900000363588333, 0.07633333653211594, 0.07433333247900009, 0.0729999989271164]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [3, 8, 2, 4, 5, 3, 2, 1, 2, 1, 5, 2, 9, 3, 2, 6, 9, 5, 0, 2, 8, 2, 0, 9, 2], [3, 0, 2, 2, 2, 2, 1, 2, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 10, 35, 27, 57, 79, 53, 52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 9, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [49, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3024026731915086, 2.3032424452754845, 2.304473966828521, 2.3025771100932677, 2.303434410839663, 2.303074912813283], "accuracy": [0.09192973375320435, 0.08598599582910538, 0.08981640636920929, 0.08413683623075485, 0.09021265059709549, 0.08625016361474991], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [3, 2, 2, 3, 5, 3, 2, 1, 0, 1, 8, 1, 9, 5, 2, 6, 9, 5, 0, 2, 8, 2, 0, 9, 2], [0, 1, 2, 2, 2, 2, 1, 2, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 52, 35, 7, 57, 79, 53, 52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [8, 1, 6, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [3, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 5, 2, 3, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.multiply(beta, beta))", "other_info": {"loss": [2.3024026731915086, 2.3032424452754845, 2.304473966828521, 2.3025771100932677, 2.303434410839663, 2.303074912813283], "accuracy": [0.09192973375320435, 0.08598599582910538, 0.08981640636920929, 0.08413683623075485, 0.09021265059709549, 0.08625016361474991], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [3, 1, 3, 4, 8, 1, 0, 5, 2, 1, 5, 2, 9, 3, 2, 1, 0, 5, 0, 2, 3, 2, 0, 8, 2, 9, 2, 1, 0, 4, 6, 9], [1, 0, 2, 2, 2, 2, 1, 2, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 52, 35, 7, 57, 79, 53, 52], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 6, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.subtract(grad, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3024026731915086, 2.3032424452754845, 2.304473966828521, 2.3025771100932677, 2.303434410839663, 2.303074912813283], "accuracy": [0.09192973375320435, 0.08598599582910538, 0.08981640636920929, 0.08413683623075485, 0.09021265059709549, 0.08625016361474991], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 2, 2, 3, 5, 3, 2, 1, 0, 1, 8, 1, 9, 5, 2, 6, 9, 5, 0, 2, 8, 2, 0, 9, 2], [0, 0, 2, 2, 2, 2, 1, 2, 2, 0, 0, 0, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [90, 52, 35, 7, 57, 79, 53, 52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 3, 0, 8, 4, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 0, 1, 3, 0, 2, 1, 3, 0, 0], [95, 17, 93, 84, 1, 78], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 9, 9, 2, 9], [3, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 23, 23, 14, 9, 3, 13, 13, 8, 5, 3, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.multiply(grad, tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.negative(tf.math.subtract(tf.math.add(alpha, grad), grad)), grad), alpha))))), tf.math.sqrt(tf.math.subtract(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(alpha, grad)))))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.multiply(beta, tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3024026731915086, 2.3032424452754845, 2.304473966828521, 2.3025771100932677, 2.303434410839663, 2.303074912813283], "accuracy": [0.09192973375320435, 0.08598599582910538, 0.08981640636920929, 0.08413683623075485, 0.09021265059709549, 0.08625016361474991], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]