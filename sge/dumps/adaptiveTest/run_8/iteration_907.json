[{"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 0, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [95, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [1, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [1, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 3, 6, 7, 4], [3, 0, 3, 2, 1, 1, 3, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [47, 25, 61, 71, 34]], "fitness": -0.8257142901420593, "mapping_values": [1, 2, 2, 1, 1, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.subtract(alpha, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.237546851905487, 1.7685891054152434, 1.4061102026788361, 1.0618506676611286, 1.0185580229667892, 0.9253645499053963, 0.8428381487378795, 0.7779992612959796, 0.7511888372348583, 0.7372410879033101, 0.6850341117896928, 0.7023924389346526, 0.6569278518899463, 0.5983228505626095, 0.6278951873931713, 0.5832960211353657, 0.5887469727884997, 0.5714754134105606, 0.5589559066092507, 0.5327886454244378, 0.5323173238648211, 0.5301393265453989, 0.5101253000925624, 0.49355378701718033, 0.49518516239725036, 0.49158600610418246, 0.47719625951339695, 0.47257518003078547, 0.459287432430915, 0.45739164134420346, 0.4601594223841983, 0.4414604287326391, 0.45681136918578086, 0.42743100107637266, 0.4104391213035571, 0.40627710180527593, 0.4053902343090704, 0.3990492121796362, 0.40913797918327766, 0.3978942009113437, 0.3796896847908948, 0.38825273320911396, 0.39635400131803383, 0.37097864757754373, 0.36052241943862223, 0.3619412178565577, 0.3522350146486743, 0.3848870147126399, 0.3552220975560692, 0.3354985629484055, 0.3317380373811111, 0.32523735514516605, 0.32796495623828525, 0.34982480432505086], "accuracy": [0.2977149784564972, 0.47087571024894714, 0.5255580544471741, 0.6132611036300659, 0.6255448460578918, 0.6610751748085022, 0.683000922203064, 0.7104741930961609, 0.7177387475967407, 0.7244749665260315, 0.7448157668113708, 0.7293620109558105, 0.7555144429206848, 0.7711002230644226, 0.7630431652069092, 0.7786290049552917, 0.7725531458854675, 0.7786290049552917, 0.7869502305984497, 0.802271842956543, 0.7981772422790527, 0.8031964302062988, 0.806630551815033, 0.8149517774581909, 0.819442629814148, 0.8109893202781677, 0.821820080280304, 0.8271034359931946, 0.8276317715644836, 0.826310932636261, 0.8321225643157959, 0.834632158279419, 0.8271034359931946, 0.8405758738517761, 0.8438779711723328, 0.8454629778862, 0.8475762605667114, 0.8491612672805786, 0.8521991968154907, 0.8494254350662231, 0.8607845902442932, 0.8560295701026917, 0.8529917001724243, 0.8585391640663147, 0.863029956817627, 0.8644828796386719, 0.8636903762817383, 0.852331280708313, 0.8676528930664062, 0.871879518032074, 0.8787478804588318, 0.8722757697105408, 0.8749174475669861, 0.8717474341392517], "val_loss": [1.7154358455113001, 0.9402497155325753, 0.8735356841768537, 0.9368839945111956, 0.6783565623419625, 0.617395418030875, 0.6723786081586566, 0.5553457226072039, 0.6497349057878766, 0.5451578412737165, 0.5590457745960781, 0.5588980402265277, 0.46772035530635286, 0.48754712513514925, 0.46069587979997906, 0.4877875702721732, 0.4331402693475996, 0.4423185246331351, 0.4229344640459333, 0.43771025112697054, 0.45089893681662424, 0.40615356819970266, 0.3973837409700666, 0.43177484614508493, 0.40346449613571167, 0.3912103516714914, 0.42788394008363995, 0.3798966663224356, 0.37657097407749723, 0.3917874438422067, 0.3627984949520656, 0.3796141232763018, 0.3857369082314627, 0.4012884667941502, 0.3926061051232474, 0.3488760505403791, 0.3754307116780962, 0.36328320843832834, 0.3943988340241568, 0.3420793669564383, 0.36602366822106497, 0.37879774400166105, 0.3358274187360491, 0.35247825724737986, 0.34465514762060984, 0.32983646222523283, 0.3283605234963553, 0.3470745342118399, 0.3264842373984201, 0.3305785059928894, 0.33623598303113666, 0.3409706609589713, 0.330753539289747, 0.32878752265657696], "val_accuracy": [0.4463333189487457, 0.621666669845581, 0.6166666746139526, 0.5703333616256714, 0.6933333277702332, 0.7210000157356262, 0.7080000042915344, 0.7379999756813049, 0.7146666646003723, 0.7570000290870667, 0.737666666507721, 0.7433333396911621, 0.8036666512489319, 0.7703333497047424, 0.8053333163261414, 0.7796666622161865, 0.8033333420753479, 0.8096666932106018, 0.815666675567627, 0.8169999718666077, 0.8013333082199097, 0.8266666531562805, 0.8303333520889282, 0.8059999942779541, 0.8243333101272583, 0.828000009059906, 0.8140000104904175, 0.8420000076293945, 0.8339999914169312, 0.831333339214325, 0.8443333506584167, 0.8413333296775818, 0.831333339214325, 0.8226666450500488, 0.8263333439826965, 0.8579999804496765, 0.8399999737739563, 0.8399999737739563, 0.8246666789054871, 0.8613333106040955, 0.8420000076293945, 0.8349999785423279, 0.8616666793823242, 0.8516666889190674, 0.862333357334137, 0.8650000095367432, 0.8673333525657654, 0.8583333492279053, 0.8713333606719971, 0.8676666617393494, 0.8646666407585144, 0.8640000224113464, 0.8640000224113464, 0.8659999966621399]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [7, 3, 5, 7, 9, 9, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [3, 0, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [95, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [1, 0, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [1, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 3, 6, 7, 4], [3, 0, 3, 2, 1, 1, 3, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [47, 25, 61, 71, 34]], "fitness": -0.8257142901420593, "mapping_values": [1, 8, 8, 5, 3, 2, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, tf.math.multiply(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(alpha, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.237546851905487, 1.7685891054152434, 1.4061102026788361, 1.0618506676611286, 1.0185580229667892, 0.9253645499053963, 0.8428381487378795, 0.7779992612959796, 0.7511888372348583, 0.7372410879033101, 0.6850341117896928, 0.7023924389346526, 0.6569278518899463, 0.5983228505626095, 0.6278951873931713, 0.5832960211353657, 0.5887469727884997, 0.5714754134105606, 0.5589559066092507, 0.5327886454244378, 0.5323173238648211, 0.5301393265453989, 0.5101253000925624, 0.49355378701718033, 0.49518516239725036, 0.49158600610418246, 0.47719625951339695, 0.47257518003078547, 0.459287432430915, 0.45739164134420346, 0.4601594223841983, 0.4414604287326391, 0.45681136918578086, 0.42743100107637266, 0.4104391213035571, 0.40627710180527593, 0.4053902343090704, 0.3990492121796362, 0.40913797918327766, 0.3978942009113437, 0.3796896847908948, 0.38825273320911396, 0.39635400131803383, 0.37097864757754373, 0.36052241943862223, 0.3619412178565577, 0.3522350146486743, 0.3848870147126399, 0.3552220975560692, 0.3354985629484055, 0.3317380373811111, 0.32523735514516605, 0.32796495623828525, 0.34982480432505086], "accuracy": [0.2977149784564972, 0.47087571024894714, 0.5255580544471741, 0.6132611036300659, 0.6255448460578918, 0.6610751748085022, 0.683000922203064, 0.7104741930961609, 0.7177387475967407, 0.7244749665260315, 0.7448157668113708, 0.7293620109558105, 0.7555144429206848, 0.7711002230644226, 0.7630431652069092, 0.7786290049552917, 0.7725531458854675, 0.7786290049552917, 0.7869502305984497, 0.802271842956543, 0.7981772422790527, 0.8031964302062988, 0.806630551815033, 0.8149517774581909, 0.819442629814148, 0.8109893202781677, 0.821820080280304, 0.8271034359931946, 0.8276317715644836, 0.826310932636261, 0.8321225643157959, 0.834632158279419, 0.8271034359931946, 0.8405758738517761, 0.8438779711723328, 0.8454629778862, 0.8475762605667114, 0.8491612672805786, 0.8521991968154907, 0.8494254350662231, 0.8607845902442932, 0.8560295701026917, 0.8529917001724243, 0.8585391640663147, 0.863029956817627, 0.8644828796386719, 0.8636903762817383, 0.852331280708313, 0.8676528930664062, 0.871879518032074, 0.8787478804588318, 0.8722757697105408, 0.8749174475669861, 0.8717474341392517], "val_loss": [1.7154358455113001, 0.9402497155325753, 0.8735356841768537, 0.9368839945111956, 0.6783565623419625, 0.617395418030875, 0.6723786081586566, 0.5553457226072039, 0.6497349057878766, 0.5451578412737165, 0.5590457745960781, 0.5588980402265277, 0.46772035530635286, 0.48754712513514925, 0.46069587979997906, 0.4877875702721732, 0.4331402693475996, 0.4423185246331351, 0.4229344640459333, 0.43771025112697054, 0.45089893681662424, 0.40615356819970266, 0.3973837409700666, 0.43177484614508493, 0.40346449613571167, 0.3912103516714914, 0.42788394008363995, 0.3798966663224356, 0.37657097407749723, 0.3917874438422067, 0.3627984949520656, 0.3796141232763018, 0.3857369082314627, 0.4012884667941502, 0.3926061051232474, 0.3488760505403791, 0.3754307116780962, 0.36328320843832834, 0.3943988340241568, 0.3420793669564383, 0.36602366822106497, 0.37879774400166105, 0.3358274187360491, 0.35247825724737986, 0.34465514762060984, 0.32983646222523283, 0.3283605234963553, 0.3470745342118399, 0.3264842373984201, 0.3305785059928894, 0.33623598303113666, 0.3409706609589713, 0.330753539289747, 0.32878752265657696], "val_accuracy": [0.4463333189487457, 0.621666669845581, 0.6166666746139526, 0.5703333616256714, 0.6933333277702332, 0.7210000157356262, 0.7080000042915344, 0.7379999756813049, 0.7146666646003723, 0.7570000290870667, 0.737666666507721, 0.7433333396911621, 0.8036666512489319, 0.7703333497047424, 0.8053333163261414, 0.7796666622161865, 0.8033333420753479, 0.8096666932106018, 0.815666675567627, 0.8169999718666077, 0.8013333082199097, 0.8266666531562805, 0.8303333520889282, 0.8059999942779541, 0.8243333101272583, 0.828000009059906, 0.8140000104904175, 0.8420000076293945, 0.8339999914169312, 0.831333339214325, 0.8443333506584167, 0.8413333296775818, 0.831333339214325, 0.8226666450500488, 0.8263333439826965, 0.8579999804496765, 0.8399999737739563, 0.8399999737739563, 0.8246666789054871, 0.8613333106040955, 0.8420000076293945, 0.8349999785423279, 0.8616666793823242, 0.8516666889190674, 0.862333357334137, 0.8650000095367432, 0.8673333525657654, 0.8583333492279053, 0.8713333606719971, 0.8676666617393494, 0.8646666407585144, 0.8640000224113464, 0.8640000224113464, 0.8659999966621399]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 0, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [95, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [1, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [1, 0, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 3, 6, 7, 4], [3, 0, 3, 2, 1, 1, 3, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [47, 25, 61, 71, 34]], "fitness": -0.8257142901420593, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.237546851905487, 1.7685891054152434, 1.4061102026788361, 1.0618506676611286, 1.0185580229667892, 0.9253645499053963, 0.8428381487378795, 0.7779992612959796, 0.7511888372348583, 0.7372410879033101, 0.6850341117896928, 0.7023924389346526, 0.6569278518899463, 0.5983228505626095, 0.6278951873931713, 0.5832960211353657, 0.5887469727884997, 0.5714754134105606, 0.5589559066092507, 0.5327886454244378, 0.5323173238648211, 0.5301393265453989, 0.5101253000925624, 0.49355378701718033, 0.49518516239725036, 0.49158600610418246, 0.47719625951339695, 0.47257518003078547, 0.459287432430915, 0.45739164134420346, 0.4601594223841983, 0.4414604287326391, 0.45681136918578086, 0.42743100107637266, 0.4104391213035571, 0.40627710180527593, 0.4053902343090704, 0.3990492121796362, 0.40913797918327766, 0.3978942009113437, 0.3796896847908948, 0.38825273320911396, 0.39635400131803383, 0.37097864757754373, 0.36052241943862223, 0.3619412178565577, 0.3522350146486743, 0.3848870147126399, 0.3552220975560692, 0.3354985629484055, 0.3317380373811111, 0.32523735514516605, 0.32796495623828525, 0.34982480432505086], "accuracy": [0.2977149784564972, 0.47087571024894714, 0.5255580544471741, 0.6132611036300659, 0.6255448460578918, 0.6610751748085022, 0.683000922203064, 0.7104741930961609, 0.7177387475967407, 0.7244749665260315, 0.7448157668113708, 0.7293620109558105, 0.7555144429206848, 0.7711002230644226, 0.7630431652069092, 0.7786290049552917, 0.7725531458854675, 0.7786290049552917, 0.7869502305984497, 0.802271842956543, 0.7981772422790527, 0.8031964302062988, 0.806630551815033, 0.8149517774581909, 0.819442629814148, 0.8109893202781677, 0.821820080280304, 0.8271034359931946, 0.8276317715644836, 0.826310932636261, 0.8321225643157959, 0.834632158279419, 0.8271034359931946, 0.8405758738517761, 0.8438779711723328, 0.8454629778862, 0.8475762605667114, 0.8491612672805786, 0.8521991968154907, 0.8494254350662231, 0.8607845902442932, 0.8560295701026917, 0.8529917001724243, 0.8585391640663147, 0.863029956817627, 0.8644828796386719, 0.8636903762817383, 0.852331280708313, 0.8676528930664062, 0.871879518032074, 0.8787478804588318, 0.8722757697105408, 0.8749174475669861, 0.8717474341392517], "val_loss": [1.7154358455113001, 0.9402497155325753, 0.8735356841768537, 0.9368839945111956, 0.6783565623419625, 0.617395418030875, 0.6723786081586566, 0.5553457226072039, 0.6497349057878766, 0.5451578412737165, 0.5590457745960781, 0.5588980402265277, 0.46772035530635286, 0.48754712513514925, 0.46069587979997906, 0.4877875702721732, 0.4331402693475996, 0.4423185246331351, 0.4229344640459333, 0.43771025112697054, 0.45089893681662424, 0.40615356819970266, 0.3973837409700666, 0.43177484614508493, 0.40346449613571167, 0.3912103516714914, 0.42788394008363995, 0.3798966663224356, 0.37657097407749723, 0.3917874438422067, 0.3627984949520656, 0.3796141232763018, 0.3857369082314627, 0.4012884667941502, 0.3926061051232474, 0.3488760505403791, 0.3754307116780962, 0.36328320843832834, 0.3943988340241568, 0.3420793669564383, 0.36602366822106497, 0.37879774400166105, 0.3358274187360491, 0.35247825724737986, 0.34465514762060984, 0.32983646222523283, 0.3283605234963553, 0.3470745342118399, 0.3264842373984201, 0.3305785059928894, 0.33623598303113666, 0.3409706609589713, 0.330753539289747, 0.32878752265657696], "val_accuracy": [0.4463333189487457, 0.621666669845581, 0.6166666746139526, 0.5703333616256714, 0.6933333277702332, 0.7210000157356262, 0.7080000042915344, 0.7379999756813049, 0.7146666646003723, 0.7570000290870667, 0.737666666507721, 0.7433333396911621, 0.8036666512489319, 0.7703333497047424, 0.8053333163261414, 0.7796666622161865, 0.8033333420753479, 0.8096666932106018, 0.815666675567627, 0.8169999718666077, 0.8013333082199097, 0.8266666531562805, 0.8303333520889282, 0.8059999942779541, 0.8243333101272583, 0.828000009059906, 0.8140000104904175, 0.8420000076293945, 0.8339999914169312, 0.831333339214325, 0.8443333506584167, 0.8413333296775818, 0.831333339214325, 0.8226666450500488, 0.8263333439826965, 0.8579999804496765, 0.8399999737739563, 0.8399999737739563, 0.8246666789054871, 0.8613333106040955, 0.8420000076293945, 0.8349999785423279, 0.8616666793823242, 0.8516666889190674, 0.862333357334137, 0.8650000095367432, 0.8673333525657654, 0.8583333492279053, 0.8713333606719971, 0.8676666617393494, 0.8646666407585144, 0.8640000224113464, 0.8640000224113464, 0.8659999966621399]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [3, 0, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [34, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [1, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [0, 3, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 3, 6, 7, 4], [3, 0, 3, 2, 1, 1, 3, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [47, 25, 61, 71, 34]], "fitness": -0.8257142901420593, "mapping_values": [1, 3, 3, 2, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.237546851905487, 1.7685891054152434, 1.4061102026788361, 1.0618506676611286, 1.0185580229667892, 0.9253645499053963, 0.8428381487378795, 0.7779992612959796, 0.7511888372348583, 0.7372410879033101, 0.6850341117896928, 0.7023924389346526, 0.6569278518899463, 0.5983228505626095, 0.6278951873931713, 0.5832960211353657, 0.5887469727884997, 0.5714754134105606, 0.5589559066092507, 0.5327886454244378, 0.5323173238648211, 0.5301393265453989, 0.5101253000925624, 0.49355378701718033, 0.49518516239725036, 0.49158600610418246, 0.47719625951339695, 0.47257518003078547, 0.459287432430915, 0.45739164134420346, 0.4601594223841983, 0.4414604287326391, 0.45681136918578086, 0.42743100107637266, 0.4104391213035571, 0.40627710180527593, 0.4053902343090704, 0.3990492121796362, 0.40913797918327766, 0.3978942009113437, 0.3796896847908948, 0.38825273320911396, 0.39635400131803383, 0.37097864757754373, 0.36052241943862223, 0.3619412178565577, 0.3522350146486743, 0.3848870147126399, 0.3552220975560692, 0.3354985629484055, 0.3317380373811111, 0.32523735514516605, 0.32796495623828525, 0.34982480432505086], "accuracy": [0.2977149784564972, 0.47087571024894714, 0.5255580544471741, 0.6132611036300659, 0.6255448460578918, 0.6610751748085022, 0.683000922203064, 0.7104741930961609, 0.7177387475967407, 0.7244749665260315, 0.7448157668113708, 0.7293620109558105, 0.7555144429206848, 0.7711002230644226, 0.7630431652069092, 0.7786290049552917, 0.7725531458854675, 0.7786290049552917, 0.7869502305984497, 0.802271842956543, 0.7981772422790527, 0.8031964302062988, 0.806630551815033, 0.8149517774581909, 0.819442629814148, 0.8109893202781677, 0.821820080280304, 0.8271034359931946, 0.8276317715644836, 0.826310932636261, 0.8321225643157959, 0.834632158279419, 0.8271034359931946, 0.8405758738517761, 0.8438779711723328, 0.8454629778862, 0.8475762605667114, 0.8491612672805786, 0.8521991968154907, 0.8494254350662231, 0.8607845902442932, 0.8560295701026917, 0.8529917001724243, 0.8585391640663147, 0.863029956817627, 0.8644828796386719, 0.8636903762817383, 0.852331280708313, 0.8676528930664062, 0.871879518032074, 0.8787478804588318, 0.8722757697105408, 0.8749174475669861, 0.8717474341392517], "val_loss": [1.7154358455113001, 0.9402497155325753, 0.8735356841768537, 0.9368839945111956, 0.6783565623419625, 0.617395418030875, 0.6723786081586566, 0.5553457226072039, 0.6497349057878766, 0.5451578412737165, 0.5590457745960781, 0.5588980402265277, 0.46772035530635286, 0.48754712513514925, 0.46069587979997906, 0.4877875702721732, 0.4331402693475996, 0.4423185246331351, 0.4229344640459333, 0.43771025112697054, 0.45089893681662424, 0.40615356819970266, 0.3973837409700666, 0.43177484614508493, 0.40346449613571167, 0.3912103516714914, 0.42788394008363995, 0.3798966663224356, 0.37657097407749723, 0.3917874438422067, 0.3627984949520656, 0.3796141232763018, 0.3857369082314627, 0.4012884667941502, 0.3926061051232474, 0.3488760505403791, 0.3754307116780962, 0.36328320843832834, 0.3943988340241568, 0.3420793669564383, 0.36602366822106497, 0.37879774400166105, 0.3358274187360491, 0.35247825724737986, 0.34465514762060984, 0.32983646222523283, 0.3283605234963553, 0.3470745342118399, 0.3264842373984201, 0.3305785059928894, 0.33623598303113666, 0.3409706609589713, 0.330753539289747, 0.32878752265657696], "val_accuracy": [0.4463333189487457, 0.621666669845581, 0.6166666746139526, 0.5703333616256714, 0.6933333277702332, 0.7210000157356262, 0.7080000042915344, 0.7379999756813049, 0.7146666646003723, 0.7570000290870667, 0.737666666507721, 0.7433333396911621, 0.8036666512489319, 0.7703333497047424, 0.8053333163261414, 0.7796666622161865, 0.8033333420753479, 0.8096666932106018, 0.815666675567627, 0.8169999718666077, 0.8013333082199097, 0.8266666531562805, 0.8303333520889282, 0.8059999942779541, 0.8243333101272583, 0.828000009059906, 0.8140000104904175, 0.8420000076293945, 0.8339999914169312, 0.831333339214325, 0.8443333506584167, 0.8413333296775818, 0.831333339214325, 0.8226666450500488, 0.8263333439826965, 0.8579999804496765, 0.8399999737739563, 0.8399999737739563, 0.8246666789054871, 0.8613333106040955, 0.8420000076293945, 0.8349999785423279, 0.8616666793823242, 0.8516666889190674, 0.862333357334137, 0.8650000095367432, 0.8673333525657654, 0.8583333492279053, 0.8713333606719971, 0.8676666617393494, 0.8646666407585144, 0.8640000224113464, 0.8640000224113464, 0.8659999966621399]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [3, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 0, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [74, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [1, 0, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [1, 0, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 3, 6, 7, 4], [3, 0, 3, 2, 1, 1, 3, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [47, 25, 61, 71, 34]], "fitness": -0.8257142901420593, "mapping_values": [1, 3, 3, 1, 2, 1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(alpha, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.subtract(alpha, tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.237546851905487, 1.7685891054152434, 1.4061102026788361, 1.0618506676611286, 1.0185580229667892, 0.9253645499053963, 0.8428381487378795, 0.7779992612959796, 0.7511888372348583, 0.7372410879033101, 0.6850341117896928, 0.7023924389346526, 0.6569278518899463, 0.5983228505626095, 0.6278951873931713, 0.5832960211353657, 0.5887469727884997, 0.5714754134105606, 0.5589559066092507, 0.5327886454244378, 0.5323173238648211, 0.5301393265453989, 0.5101253000925624, 0.49355378701718033, 0.49518516239725036, 0.49158600610418246, 0.47719625951339695, 0.47257518003078547, 0.459287432430915, 0.45739164134420346, 0.4601594223841983, 0.4414604287326391, 0.45681136918578086, 0.42743100107637266, 0.4104391213035571, 0.40627710180527593, 0.4053902343090704, 0.3990492121796362, 0.40913797918327766, 0.3978942009113437, 0.3796896847908948, 0.38825273320911396, 0.39635400131803383, 0.37097864757754373, 0.36052241943862223, 0.3619412178565577, 0.3522350146486743, 0.3848870147126399, 0.3552220975560692, 0.3354985629484055, 0.3317380373811111, 0.32523735514516605, 0.32796495623828525, 0.34982480432505086], "accuracy": [0.2977149784564972, 0.47087571024894714, 0.5255580544471741, 0.6132611036300659, 0.6255448460578918, 0.6610751748085022, 0.683000922203064, 0.7104741930961609, 0.7177387475967407, 0.7244749665260315, 0.7448157668113708, 0.7293620109558105, 0.7555144429206848, 0.7711002230644226, 0.7630431652069092, 0.7786290049552917, 0.7725531458854675, 0.7786290049552917, 0.7869502305984497, 0.802271842956543, 0.7981772422790527, 0.8031964302062988, 0.806630551815033, 0.8149517774581909, 0.819442629814148, 0.8109893202781677, 0.821820080280304, 0.8271034359931946, 0.8276317715644836, 0.826310932636261, 0.8321225643157959, 0.834632158279419, 0.8271034359931946, 0.8405758738517761, 0.8438779711723328, 0.8454629778862, 0.8475762605667114, 0.8491612672805786, 0.8521991968154907, 0.8494254350662231, 0.8607845902442932, 0.8560295701026917, 0.8529917001724243, 0.8585391640663147, 0.863029956817627, 0.8644828796386719, 0.8636903762817383, 0.852331280708313, 0.8676528930664062, 0.871879518032074, 0.8787478804588318, 0.8722757697105408, 0.8749174475669861, 0.8717474341392517], "val_loss": [1.7154358455113001, 0.9402497155325753, 0.8735356841768537, 0.9368839945111956, 0.6783565623419625, 0.617395418030875, 0.6723786081586566, 0.5553457226072039, 0.6497349057878766, 0.5451578412737165, 0.5590457745960781, 0.5588980402265277, 0.46772035530635286, 0.48754712513514925, 0.46069587979997906, 0.4877875702721732, 0.4331402693475996, 0.4423185246331351, 0.4229344640459333, 0.43771025112697054, 0.45089893681662424, 0.40615356819970266, 0.3973837409700666, 0.43177484614508493, 0.40346449613571167, 0.3912103516714914, 0.42788394008363995, 0.3798966663224356, 0.37657097407749723, 0.3917874438422067, 0.3627984949520656, 0.3796141232763018, 0.3857369082314627, 0.4012884667941502, 0.3926061051232474, 0.3488760505403791, 0.3754307116780962, 0.36328320843832834, 0.3943988340241568, 0.3420793669564383, 0.36602366822106497, 0.37879774400166105, 0.3358274187360491, 0.35247825724737986, 0.34465514762060984, 0.32983646222523283, 0.3283605234963553, 0.3470745342118399, 0.3264842373984201, 0.3305785059928894, 0.33623598303113666, 0.3409706609589713, 0.330753539289747, 0.32878752265657696], "val_accuracy": [0.4463333189487457, 0.621666669845581, 0.6166666746139526, 0.5703333616256714, 0.6933333277702332, 0.7210000157356262, 0.7080000042915344, 0.7379999756813049, 0.7146666646003723, 0.7570000290870667, 0.737666666507721, 0.7433333396911621, 0.8036666512489319, 0.7703333497047424, 0.8053333163261414, 0.7796666622161865, 0.8033333420753479, 0.8096666932106018, 0.815666675567627, 0.8169999718666077, 0.8013333082199097, 0.8266666531562805, 0.8303333520889282, 0.8059999942779541, 0.8243333101272583, 0.828000009059906, 0.8140000104904175, 0.8420000076293945, 0.8339999914169312, 0.831333339214325, 0.8443333506584167, 0.8413333296775818, 0.831333339214325, 0.8226666450500488, 0.8263333439826965, 0.8579999804496765, 0.8399999737739563, 0.8399999737739563, 0.8246666789054871, 0.8613333106040955, 0.8420000076293945, 0.8349999785423279, 0.8616666793823242, 0.8516666889190674, 0.862333357334137, 0.8650000095367432, 0.8673333525657654, 0.8583333492279053, 0.8713333606719971, 0.8676666617393494, 0.8646666407585144, 0.8640000224113464, 0.8640000224113464, 0.8659999966621399]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [7, 3, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 0, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [95, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [1, 0, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [0, 2, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 3, 6, 7, 4], [3, 0, 3, 2, 1, 1, 3, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [47, 25, 61, 71, 34]], "fitness": -0.8257142901420593, "mapping_values": [1, 6, 6, 3, 3, 1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.237546851905487, 1.7685891054152434, 1.4061102026788361, 1.0618506676611286, 1.0185580229667892, 0.9253645499053963, 0.8428381487378795, 0.7779992612959796, 0.7511888372348583, 0.7372410879033101, 0.6850341117896928, 0.7023924389346526, 0.6569278518899463, 0.5983228505626095, 0.6278951873931713, 0.5832960211353657, 0.5887469727884997, 0.5714754134105606, 0.5589559066092507, 0.5327886454244378, 0.5323173238648211, 0.5301393265453989, 0.5101253000925624, 0.49355378701718033, 0.49518516239725036, 0.49158600610418246, 0.47719625951339695, 0.47257518003078547, 0.459287432430915, 0.45739164134420346, 0.4601594223841983, 0.4414604287326391, 0.45681136918578086, 0.42743100107637266, 0.4104391213035571, 0.40627710180527593, 0.4053902343090704, 0.3990492121796362, 0.40913797918327766, 0.3978942009113437, 0.3796896847908948, 0.38825273320911396, 0.39635400131803383, 0.37097864757754373, 0.36052241943862223, 0.3619412178565577, 0.3522350146486743, 0.3848870147126399, 0.3552220975560692, 0.3354985629484055, 0.3317380373811111, 0.32523735514516605, 0.32796495623828525, 0.34982480432505086], "accuracy": [0.2977149784564972, 0.47087571024894714, 0.5255580544471741, 0.6132611036300659, 0.6255448460578918, 0.6610751748085022, 0.683000922203064, 0.7104741930961609, 0.7177387475967407, 0.7244749665260315, 0.7448157668113708, 0.7293620109558105, 0.7555144429206848, 0.7711002230644226, 0.7630431652069092, 0.7786290049552917, 0.7725531458854675, 0.7786290049552917, 0.7869502305984497, 0.802271842956543, 0.7981772422790527, 0.8031964302062988, 0.806630551815033, 0.8149517774581909, 0.819442629814148, 0.8109893202781677, 0.821820080280304, 0.8271034359931946, 0.8276317715644836, 0.826310932636261, 0.8321225643157959, 0.834632158279419, 0.8271034359931946, 0.8405758738517761, 0.8438779711723328, 0.8454629778862, 0.8475762605667114, 0.8491612672805786, 0.8521991968154907, 0.8494254350662231, 0.8607845902442932, 0.8560295701026917, 0.8529917001724243, 0.8585391640663147, 0.863029956817627, 0.8644828796386719, 0.8636903762817383, 0.852331280708313, 0.8676528930664062, 0.871879518032074, 0.8787478804588318, 0.8722757697105408, 0.8749174475669861, 0.8717474341392517], "val_loss": [1.7154358455113001, 0.9402497155325753, 0.8735356841768537, 0.9368839945111956, 0.6783565623419625, 0.617395418030875, 0.6723786081586566, 0.5553457226072039, 0.6497349057878766, 0.5451578412737165, 0.5590457745960781, 0.5588980402265277, 0.46772035530635286, 0.48754712513514925, 0.46069587979997906, 0.4877875702721732, 0.4331402693475996, 0.4423185246331351, 0.4229344640459333, 0.43771025112697054, 0.45089893681662424, 0.40615356819970266, 0.3973837409700666, 0.43177484614508493, 0.40346449613571167, 0.3912103516714914, 0.42788394008363995, 0.3798966663224356, 0.37657097407749723, 0.3917874438422067, 0.3627984949520656, 0.3796141232763018, 0.3857369082314627, 0.4012884667941502, 0.3926061051232474, 0.3488760505403791, 0.3754307116780962, 0.36328320843832834, 0.3943988340241568, 0.3420793669564383, 0.36602366822106497, 0.37879774400166105, 0.3358274187360491, 0.35247825724737986, 0.34465514762060984, 0.32983646222523283, 0.3283605234963553, 0.3470745342118399, 0.3264842373984201, 0.3305785059928894, 0.33623598303113666, 0.3409706609589713, 0.330753539289747, 0.32878752265657696], "val_accuracy": [0.4463333189487457, 0.621666669845581, 0.6166666746139526, 0.5703333616256714, 0.6933333277702332, 0.7210000157356262, 0.7080000042915344, 0.7379999756813049, 0.7146666646003723, 0.7570000290870667, 0.737666666507721, 0.7433333396911621, 0.8036666512489319, 0.7703333497047424, 0.8053333163261414, 0.7796666622161865, 0.8033333420753479, 0.8096666932106018, 0.815666675567627, 0.8169999718666077, 0.8013333082199097, 0.8266666531562805, 0.8303333520889282, 0.8059999942779541, 0.8243333101272583, 0.828000009059906, 0.8140000104904175, 0.8420000076293945, 0.8339999914169312, 0.831333339214325, 0.8443333506584167, 0.8413333296775818, 0.831333339214325, 0.8226666450500488, 0.8263333439826965, 0.8579999804496765, 0.8399999737739563, 0.8399999737739563, 0.8246666789054871, 0.8613333106040955, 0.8420000076293945, 0.8349999785423279, 0.8616666793823242, 0.8516666889190674, 0.862333357334137, 0.8650000095367432, 0.8673333525657654, 0.8583333492279053, 0.8713333606719971, 0.8676666617393494, 0.8646666407585144, 0.8640000224113464, 0.8640000224113464, 0.8659999966621399]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 0, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [95, 52, 59, 56, 8, 79, 86, 52, 44], [1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [1, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [4, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 3, 6, 7, 4], [3, 0, 3, 2, 1, 1, 3, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [47, 25, 61, 71, 34]], "fitness": -0.29742857813835144, "mapping_values": [1, 3, 3, 1, 2, 1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.040453780297322, 2.1916387838190574, 2.3006179225348746, 2.305961279081174, 2.3033177875619066, 2.303217195831569], "accuracy": [0.18518029153347015, 0.17870822548866272, 0.1872936189174652, 0.09959053993225098, 0.09602430462837219, 0.09430722147226334], "val_loss": [1.8032584190368652, 1.9709251267569405, 1.9797799927847726, 1.9743189811706543, 1.9742050170898438, 1.9739180292401994], "val_accuracy": [0.30566665530204773, 0.09833333641290665, 0.09700000286102295, 0.09733333438634872, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 0, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [34, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [1, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [0, 3, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 3, 6, 7, 4], [3, 0, 3, 2, 1, 1, 3, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [2, 25, 61, 71, 34]], "fitness": -0.29742857813835144, "mapping_values": [1, 3, 3, 2, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.negative(alpha)), lambda shape,  alpha, beta, grad: tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.040453780297322, 2.1916387838190574, 2.3006179225348746, 2.305961279081174, 2.3033177875619066, 2.303217195831569], "accuracy": [0.18518029153347015, 0.17870822548866272, 0.1872936189174652, 0.09959053993225098, 0.09602430462837219, 0.09430722147226334], "val_loss": [1.8032584190368652, 1.9709251267569405, 1.9797799927847726, 1.9743189811706543, 1.9742050170898438, 1.9739180292401994], "val_accuracy": [0.30566665530204773, 0.09833333641290665, 0.09700000286102295, 0.09733333438634872, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 0, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [34, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [1, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [1, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [1, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], [0, 4, 3, 6, 7, 4], [3, 0, 3, 2, 1, 1, 3, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [47, 25, 61, 71, 34]], "fitness": -0.14485713839530945, "mapping_values": [1, 3, 3, 2, 1, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 12, 6, 6, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.subtract(alpha, tf.math.add(beta, tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(sigma, beta), tf.math.pow(alpha, alpha))))", "other_info": {"loss": [2.554764946768895, 2.588062440525539, 2.5842980570119876, 2.58904966579342, 2.600176376232681, 2.5970005742185043], "accuracy": [0.12415797263383865, 0.1262712925672531, 0.12679962813854218, 0.12349755316972733, 0.11834631860256195, 0.120459645986557], "val_loss": [2.132224832262312, 2.132224900381906, 2.1322250366210938, 2.1322250366210938, 2.1322250366210938, 2.1322250366210938], "val_accuracy": [0.140666663646698, 0.140666663646698, 0.140666663646698, 0.140666663646698, 0.140666663646698, 0.140666663646698]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 0, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [95, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [1, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [0, 3, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 3, 6, 7, 4], [3, 0, 3, 2, 1, 1, 3, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [47, 25, 61, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 4, 4, 3, 1, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.square(tf.math.add(beta, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08281600475311279, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 0, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [95, 52, 59, 56, 8, 79, 86, 52, 44], [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [1, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [1, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 3, 6, 7, 4], [0, 0, 3, 2, 1, 1, 3, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [47, 25, 61, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [68668387.29048544, 1250989935.9218068, 5896752230.115969, 16274150722.848764, 35084219816.28847, 64347273804.35028], "accuracy": [0.09959053993225098, 0.1006472036242485, 0.09681680053472519, 0.10091137140989304, 0.09681680053472519, 0.09787346422672272], "val_loss": [252293065.14285713, 2016736256.0, 6804672073.142858, 16127298998.857143, 31496456484.57143, 54422684818.28571], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [7, 3, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 0, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [44, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [1, 0, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [0, 3, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [8, 3, 3, 6, 7, 4], [3, 0, 3, 2, 1, 1, 3, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [47, 25, 61, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 0, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [34, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [5, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [0, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], [0, 1, 3, 6, 7, 4], [3, 0, 3, 2, 1, 1, 3, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [47, 25, 61, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 0, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 12, 6, 6, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.square(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(sigma, beta), tf.math.pow(alpha, alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 7, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 3, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [16, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [1, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [5, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 3, 6, 7, 4], [3, 0, 3, 2, 1, 1, 3, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [47, 25, 61, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 32, 32, 24, 8, 4, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(alpha)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.square(grad), grad))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.square(grad))))), tf.math.add(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))))), tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(tf.math.add(alpha, grad), grad))))))), lambda shape,  alpha, beta, grad: tf.math.subtract(grad, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08281600475311279, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [0, 0, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [34, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [1, 9, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [1, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 3, 6, 7, 4], [0, 0, 3, 2, 1, 1, 3, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [87, 25, 61, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.subtract(alpha, tf.math.add(beta, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [551.7768687015322, 8750.557472850764, 40005.929295378744, 109092.23973674218, 233716.73770803065, 426953.7150310395], "accuracy": [0.09932637959718704, 0.1002509593963623, 0.09668471664190292, 0.10091137140989304, 0.09668471664190292, 0.09787346422672272], "val_loss": [1849.420689174107, 13827.840122767857, 45817.79352678572, 107682.09821428571, 209283.96875, 360488.33928571426], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 0, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [16, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [1, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [1, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 3, 6, 7, 4], [3, 2, 3, 2, 1, 1, 3, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [21, 25, 61, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 7, 3, 2, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.square(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), grad)))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.square(tf.math.add(beta, alpha)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08281600475311279, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 0, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [95, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [1, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [0, 3], [68], [1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 3, 6, 7, 4], [3, 2, 3, 2, 1, 1, 3, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [47, 25, 61, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 4, 4, 2, 2, 1, 3, 3, 1, 2, 0, 3, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.negative(tf.math.add(alpha, alpha)), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(alpha, tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3021464540564454, 2.3016723955406597, 2.301018857842565, 2.3009246782525308, 2.3031795973696525, 2.303594264970275], "accuracy": [0.09377889335155487, 0.09192973375320435, 0.08942015469074249, 0.09470347315073013, 0.08902391046285629, 0.09153348207473755], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 0, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [95, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [2, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [0, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 6, 3, 6, 7, 4], [3, 0, 3, 2, 1, 1, 3, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [47, 25, 61, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 1, 3, 2, 1, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3021464540564454, 2.3016723955406597, 2.301018857842565, 2.3009246782525308, 2.3031795973696525, 2.303594264970275], "accuracy": [0.09377889335155487, 0.09192973375320435, 0.08942015469074249, 0.09470347315073013, 0.08902391046285629, 0.09153348207473755], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [3, 0, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [34, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [1, 8, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [0, 0, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 3, 6, 7, 4], [3, 0, 3, 2, 1, 1, 3, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [47, 25, 61, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 4, 4, 3, 1, 0, 4, 4, 3, 1, 2, 3, 2, 1, 1, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(grad))))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3021464540564454, 2.3016723955406597, 2.301018857842565, 2.3009246782525308, 2.3031795973696525, 2.303594264970275], "accuracy": [0.09377889335155487, 0.09192973375320435, 0.08942015469074249, 0.09470347315073013, 0.08902391046285629, 0.09153348207473755], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 0, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [34, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [1, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [1, 0, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [1, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 3, 3, 6, 7, 4], [3, 0, 3, 2, 1, 1, 3, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [47, 25, 61, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3021464540564454, 2.3016723955406597, 2.301018857842565, 2.3009246782525308, 2.3031795973696525, 2.303594264970275], "accuracy": [0.09377889335155487, 0.09192973375320435, 0.08942015469074249, 0.09470347315073013, 0.08902391046285629, 0.09153348207473755], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]