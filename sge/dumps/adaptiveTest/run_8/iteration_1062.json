[{"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [88, 74, 59, 56, 8, 79, 86, 52, 44], [1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], [9, 4, 9, 6, 4, 1, 9, 4, 3, 0, 4, 8, 8, 1, 1, 8, 9, 0], [2, 2, 3, 1, 0, 3, 2, 0, 0, 0], [53, 32, 50, 14, 35, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [42, 9, 43, 71, 34]], "fitness": -0.75685715675354, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0156280994415283, 1.4931219816207886, 1.090240478515625, 0.8936613202095032, 0.8337047100067139, 0.7738480567932129, 0.766257107257843, 0.7224713563919067, 0.7380833029747009, 0.6954688429832458, 0.6784238219261169, 0.6399783492088318, 0.64168781042099], "accuracy": [0.33958524465560913, 0.483819842338562, 0.6136573553085327, 0.6650376319885254, 0.6919825673103333, 0.715889573097229, 0.7160216569900513, 0.7318716049194336, 0.7218332886695862, 0.7363624572753906, 0.746268630027771, 0.759609043598175, 0.7569673657417297], "val_loss": [1.396235704421997, 1.1155471801757812, 0.8194957971572876, 0.7554038166999817, 0.7203285098075867, 0.6958202123641968, 0.679952085018158, 0.624173641204834, 0.6192361116409302, 0.6228406429290771, 0.6164854168891907, 0.5867714285850525, 0.603937029838562], "val_accuracy": [0.5193333625793457, 0.5723333358764648, 0.703000009059906, 0.7193333506584167, 0.7400000095367432, 0.7436666488647461, 0.7253333330154419, 0.7720000147819519, 0.7453333139419556, 0.75, 0.762666642665863, 0.7633333206176758, 0.762666642665863]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [88, 74, 59, 56, 8, 79, 86, 52, 44], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1], [9, 4, 9, 6, 4, 1, 9, 4, 3, 0, 4, 8, 8, 1, 1, 8, 9, 0], [2, 2, 3, 1, 0, 3, 2, 0, 0, 0], [53, 32, 50, 35, 35, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [25, 9, 43, 71, 34]], "fitness": -0.7565714120864868, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.296752452850342, 2.282552719116211, 2.266777992248535, 2.250525712966919, 2.2349419593811035, 2.214961290359497, 2.1880605220794678, 2.1595263481140137, 2.1240603923797607, 2.0840911865234375, 2.0381057262420654, 1.981222152709961, 1.9175879955291748, 1.8516422510147095, 1.7767482995986938, 1.7033023834228516, 1.6245062351226807, 1.5588794946670532, 1.4921939373016357, 1.4421275854110718, 1.3919248580932617, 1.3405739068984985, 1.3055617809295654, 1.2667033672332764, 1.2249515056610107, 1.2016576528549194, 1.1770182847976685, 1.1432652473449707, 1.1425209045410156, 1.115001916885376, 1.0923045873641968, 1.0791151523590088, 1.0487723350524902, 1.04703950881958, 1.0240294933319092, 1.0174436569213867, 1.0117441415786743, 0.9847804307937622, 0.9832236766815186, 0.9706330299377441, 0.9603310823440552, 0.9425559639930725, 0.9391608238220215, 0.9298748970031738, 0.9215983152389526, 0.9182273745536804, 0.9076615571975708, 0.8946033716201782, 0.8907214403152466, 0.8826541304588318, 0.8700157403945923, 0.8742213845252991, 0.8698158264160156, 0.857222855091095, 0.8597179651260376, 0.8487116098403931, 0.8346896171569824, 0.8419034481048584, 0.8379313349723816, 0.8305484056472778, 0.8343402743339539, 0.8204107284545898, 0.8223830461502075, 0.8176420331001282, 0.8040142059326172, 0.8147571086883545, 0.8072832226753235, 0.8008525967597961, 0.7985323667526245, 0.7990666031837463, 0.7848107814788818, 0.7804533839225769, 0.7837470173835754, 0.7828272581100464, 0.7723938822746277, 0.7781480550765991, 0.7688125371932983, 0.7694566249847412, 0.7684940695762634, 0.7581606507301331, 0.768332302570343, 0.7633548974990845, 0.7615675330162048, 0.7599690556526184, 0.7570092678070068, 0.7513225674629211, 0.7467716932296753, 0.7462464570999146, 0.7375012040138245, 0.7452352643013, 0.7365522980690002, 0.7329295873641968, 0.737605094909668, 0.7357445955276489, 0.7327104210853577, 0.7198588848114014, 0.7266477346420288, 0.733176052570343], "accuracy": [0.10130762308835983, 0.13855500519275665, 0.18478403985500336, 0.22784309089183807, 0.25782591104507446, 0.2826575040817261, 0.3125082552433014, 0.3354906737804413, 0.3653414249420166, 0.38462555408477783, 0.390569269657135, 0.4167217016220093, 0.428609162569046, 0.4367983043193817, 0.4600449204444885, 0.47047945857048035, 0.4967639744281769, 0.50350022315979, 0.5145951509475708, 0.5256901383399963, 0.5410117506980896, 0.5488046407699585, 0.5552766919136047, 0.5698058605194092, 0.5809007883071899, 0.5762779116630554, 0.594241201877594, 0.6020340919494629, 0.6016378402709961, 0.6087703108787537, 0.6089023947715759, 0.6238277554512024, 0.6322810649871826, 0.6316206455230713, 0.6379606127738953, 0.6428477168083191, 0.6473385095596313, 0.6577730774879456, 0.6535464525222778, 0.6551313996315002, 0.6622639298439026, 0.6642451286315918, 0.6625280380249023, 0.6716417670249939, 0.6729626059532166, 0.6672830581665039, 0.6791704893112183, 0.6757363677024841, 0.6837934255599976, 0.6824725866317749, 0.6910579800605774, 0.6905296444892883, 0.684982180595398, 0.6950204968452454, 0.691850483417511, 0.6996433734893799, 0.7020208835601807, 0.7030775547027588, 0.6960771083831787, 0.6984546184539795, 0.702681303024292, 0.7055870890617371, 0.705058753490448, 0.7049266695976257, 0.7099458575248718, 0.7082287669181824, 0.707568347454071, 0.713908314704895, 0.7087571024894714, 0.709549605846405, 0.7180029153823853, 0.7170783281326294, 0.7036058902740479, 0.7145687341690063, 0.7152291536331177, 0.7187954187393188, 0.7150970697402954, 0.7186633348464966, 0.7231541275978088, 0.72672039270401, 0.7223616242408752, 0.7219653725624084, 0.7276449799537659, 0.719852089881897, 0.7253995537757874, 0.7312111854553223, 0.7306828498840332, 0.7285695672035217, 0.7358341217041016, 0.7310791015625, 0.7308149337768555, 0.7331924438476562, 0.7362303733825684, 0.7325320243835449, 0.733060359954834, 0.7412495017051697, 0.7368907928466797, 0.7351737022399902], "val_loss": [2.284231185913086, 2.26859712600708, 2.2519936561584473, 2.23378586769104, 2.213027000427246, 2.1887521743774414, 2.159548282623291, 2.1249349117279053, 2.083298444747925, 2.034217119216919, 1.9773752689361572, 1.9112422466278076, 1.8366115093231201, 1.7560036182403564, 1.6714454889297485, 1.5864094495773315, 1.5014957189559937, 1.4208556413650513, 1.34754478931427, 1.283318281173706, 1.225170373916626, 1.1730655431747437, 1.127941370010376, 1.0881667137145996, 1.0533902645111084, 1.0216989517211914, 0.9951653480529785, 0.9697835445404053, 0.950036883354187, 0.9299452900886536, 0.9126585125923157, 0.8956931233406067, 0.8812057971954346, 0.8687904477119446, 0.8561471104621887, 0.8438056111335754, 0.8334464430809021, 0.8234550952911377, 0.8154737949371338, 0.8055569529533386, 0.7961084246635437, 0.7896186709403992, 0.7814451456069946, 0.7744163274765015, 0.7667102813720703, 0.7611587047576904, 0.7551860213279724, 0.7495028376579285, 0.7433629631996155, 0.7383091449737549, 0.7323089241981506, 0.7281160354614258, 0.7246830463409424, 0.7186040878295898, 0.7148478031158447, 0.7100950479507446, 0.7060800790786743, 0.7026607990264893, 0.6992208361625671, 0.6958065629005432, 0.6933098435401917, 0.6888705492019653, 0.6861109733581543, 0.6828802227973938, 0.6790049076080322, 0.6775000691413879, 0.6756256818771362, 0.6724640130996704, 0.6681395769119263, 0.6653403043746948, 0.6624873280525208, 0.6615028977394104, 0.6576805114746094, 0.6558305621147156, 0.6537378430366516, 0.6510586738586426, 0.6486178040504456, 0.6472477912902832, 0.6452524662017822, 0.642586350440979, 0.6414879560470581, 0.6385412812232971, 0.636812686920166, 0.6343888640403748, 0.6330395340919495, 0.6328386068344116, 0.6296210885047913, 0.6274986863136292, 0.6248559951782227, 0.6246839761734009, 0.6229304075241089, 0.6212730407714844, 0.6180616021156311, 0.6181220412254333, 0.6163880825042725, 0.6141060590744019, 0.6136577725410461, 0.6124925017356873], "val_accuracy": [0.14800000190734863, 0.273333340883255, 0.3440000116825104, 0.3843333423137665, 0.40966665744781494, 0.4413333237171173, 0.4583333432674408, 0.47866666316986084, 0.5006666779518127, 0.5223333239555359, 0.5356666445732117, 0.5496666431427002, 0.5556666851043701, 0.5676666498184204, 0.5770000219345093, 0.5889999866485596, 0.6023333072662354, 0.6100000143051147, 0.6320000290870667, 0.640999972820282, 0.656333327293396, 0.6620000004768372, 0.6676666736602783, 0.6743333339691162, 0.6779999732971191, 0.6806666851043701, 0.6869999766349792, 0.6903333067893982, 0.6899999976158142, 0.6946666836738586, 0.6973333358764648, 0.7013333439826965, 0.7049999833106995, 0.7086666822433472, 0.7106666564941406, 0.7139999866485596, 0.7170000076293945, 0.7136666774749756, 0.7176666855812073, 0.7173333168029785, 0.7210000157356262, 0.7206666469573975, 0.7260000109672546, 0.7239999771118164, 0.7269999980926514, 0.7293333411216736, 0.7286666631698608, 0.7289999723434448, 0.734000027179718, 0.7360000014305115, 0.7379999756813049, 0.7383333444595337, 0.7393333315849304, 0.7393333315849304, 0.7429999709129333, 0.7436666488647461, 0.7440000176429749, 0.7446666955947876, 0.7459999918937683, 0.746666669845581, 0.7453333139419556, 0.75, 0.7509999871253967, 0.7509999871253967, 0.7526666522026062, 0.753000020980835, 0.7536666393280029, 0.7549999952316284, 0.7563333511352539, 0.7573333382606506, 0.7590000033378601, 0.7593333125114441, 0.7599999904632568, 0.7620000243186951, 0.7620000243186951, 0.7633333206176758, 0.7636666893959045, 0.765333354473114, 0.7670000195503235, 0.765666663646698, 0.7649999856948853, 0.765999972820282, 0.7683333158493042, 0.7706666588783264, 0.7699999809265137, 0.7703333497047424, 0.7733333110809326, 0.7733333110809326, 0.7736666798591614, 0.7736666798591614, 0.7736666798591614, 0.7743333578109741, 0.781333327293396, 0.7753333449363708, 0.7770000100135803, 0.7756666541099548, 0.7739999890327454, 0.7753333449363708]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [2, 74, 59, 56, 8, 79, 86, 52, 44], [1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1], [9, 4, 9, 6, 4, 1, 9, 4, 3, 0, 4, 8, 8, 1, 1, 8, 9, 0], [2, 2, 3, 1, 0, 3, 2, 0, 0, 0], [68, 32, 50, 14, 35, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [23, 9, 43, 71, 34]], "fitness": -0.7394285798072815, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.298753023147583, 2.2892866134643555, 2.278625249862671, 2.2683143615722656, 2.2602076530456543, 2.2494380474090576, 2.235018730163574, 2.2220802307128906, 2.2066550254821777, 2.191002607345581, 2.173572063446045, 2.1521737575531006, 2.128302812576294, 2.103898286819458, 2.0730645656585693, 2.039458751678467, 1.9993786811828613, 1.962468147277832, 1.9185459613800049, 1.8751349449157715, 1.8292487859725952, 1.7780826091766357, 1.7338286638259888, 1.6814943552017212, 1.6273828744888306, 1.5895004272460938, 1.5404640436172485, 1.4948071241378784, 1.4713956117630005, 1.4274893999099731, 1.3933236598968506, 1.3682916164398193, 1.3254902362823486, 1.3079161643981934, 1.2780508995056152, 1.2615519762039185, 1.2463282346725464, 1.211557149887085, 1.1989068984985352, 1.180072546005249, 1.1669859886169434, 1.1397465467453003, 1.1318646669387817, 1.11906898021698, 1.1066974401474, 1.0931882858276367, 1.0812026262283325, 1.0621520280838013, 1.0512720346450806, 1.0401748418807983, 1.0266386270523071, 1.0281343460083008, 1.0198557376861572, 1.006133794784546, 1.002830982208252, 0.9864436388015747, 0.972550630569458, 0.9738017916679382, 0.9724293351173401, 0.9596682786941528, 0.9617891311645508, 0.9443939924240112, 0.9447129964828491, 0.9388312697410583, 0.9230045676231384, 0.9305148720741272, 0.9204658269882202, 0.9138310551643372, 0.9091697335243225, 0.908681333065033, 0.8927863240242004, 0.8854422569274902, 0.8878536820411682, 0.8848299384117126, 0.8741025328636169, 0.8776923418045044, 0.8686342835426331, 0.8680728673934937, 0.8670181035995483, 0.8543558716773987, 0.8645986318588257, 0.8580755591392517, 0.8537975549697876, 0.853778600692749, 0.8467090129852295, 0.8421144485473633, 0.838109016418457, 0.8320424556732178, 0.8267524242401123, 0.832958996295929, 0.8221118450164795, 0.8178684711456299, 0.8230141997337341, 0.8203375339508057, 0.8192803263664246, 0.8015884160995483, 0.8092607855796814, 0.8164539933204651, 0.7930198907852173, 0.8020699620246887], "accuracy": [0.09642054885625839, 0.120459645986557, 0.15361246466636658, 0.18201030790805817, 0.20221899449825287, 0.2215031087398529, 0.252938836812973, 0.27182671427726746, 0.2969224750995636, 0.31303659081459045, 0.3280940353870392, 0.34460440278053284, 0.3619072735309601, 0.3675868511199951, 0.3827763795852661, 0.3932109475135803, 0.4209483563899994, 0.42570334672927856, 0.43164706230163574, 0.44406285881996155, 0.45185577869415283, 0.4547615945339203, 0.4651961326599121, 0.47589486837387085, 0.4951789677143097, 0.4884427487850189, 0.509311854839325, 0.523048460483551, 0.5194822549819946, 0.5315017700195312, 0.5328226089477539, 0.5411438345909119, 0.5509179830551147, 0.5546162724494934, 0.5628054141998291, 0.5678246021270752, 0.5740324854850769, 0.5823537111282349, 0.5830141305923462, 0.5842028856277466, 0.5906749367713928, 0.607449471950531, 0.6012415885925293, 0.6122044920921326, 0.6123365759849548, 0.6098269820213318, 0.6199973821640015, 0.6205257177352905, 0.6313564777374268, 0.6313564777374268, 0.640338122844696, 0.6409985423088074, 0.6367719173431396, 0.6454893946647644, 0.6509047746658325, 0.6527539491653442, 0.6571126580238342, 0.6597543358802795, 0.6485272645950317, 0.6571126580238342, 0.6641130447387695, 0.6626601219177246, 0.6670188903808594, 0.6675472259521484, 0.672698438167572, 0.6672830581665039, 0.672698438167572, 0.6781138777732849, 0.6725663542747498, 0.6730946898460388, 0.6818121671676636, 0.6856426000595093, 0.6725663542747498, 0.6831330060958862, 0.6836613416671753, 0.6872276067733765, 0.6851142644882202, 0.6892088055610657, 0.685510516166687, 0.6968696117401123, 0.6947563290596008, 0.6925109028816223, 0.6993792057037354, 0.6914542317390442, 0.6993792057037354, 0.7017567157745361, 0.7017567157745361, 0.7025492191314697, 0.707568347454071, 0.7005679607391357, 0.7013604640960693, 0.7099458575248718, 0.7037379741668701, 0.7034738063812256, 0.7038700580596924, 0.7129837274551392, 0.709021270275116, 0.7046625018119812, 0.7104741930961609, 0.7102100253105164], "val_loss": [2.289428949356079, 2.2790257930755615, 2.268395185470581, 2.257371664047241, 2.2457549571990967, 2.233260154724121, 2.2195255756378174, 2.2043936252593994, 2.187382459640503, 2.168314218521118, 2.146980047225952, 2.122744083404541, 2.095362663269043, 2.064710855484009, 2.030550718307495, 1.992571234703064, 1.9501765966415405, 1.9041075706481934, 1.854244351387024, 1.801770806312561, 1.7470853328704834, 1.6903409957885742, 1.633364200592041, 1.5760414600372314, 1.5192816257476807, 1.4643478393554688, 1.4125816822052002, 1.3629151582717896, 1.3187130689620972, 1.2767421007156372, 1.2380532026290894, 1.202568531036377, 1.1693719625473022, 1.1401457786560059, 1.111950397491455, 1.086206316947937, 1.0634492635726929, 1.0413978099822998, 1.0225439071655273, 1.0036373138427734, 0.9858891367912292, 0.9699806571006775, 0.9555839896202087, 0.9417763948440552, 0.9281511902809143, 0.9160779714584351, 0.9049192667007446, 0.8941375613212585, 0.883547842502594, 0.8743215203285217, 0.8645128607749939, 0.8565221428871155, 0.8489229083061218, 0.8410921096801758, 0.8338021039962769, 0.8262444138526917, 0.8192306160926819, 0.8125742077827454, 0.8071661591529846, 0.8013817667961121, 0.7964880466461182, 0.7908595204353333, 0.7858276963233948, 0.7811326384544373, 0.7756407856941223, 0.7713778614997864, 0.7676030993461609, 0.763089656829834, 0.7583440542221069, 0.7544113993644714, 0.7502787113189697, 0.7468762397766113, 0.742685079574585, 0.7393245697021484, 0.7360451817512512, 0.7325696349143982, 0.7288722991943359, 0.7261428236961365, 0.7235597372055054, 0.7198843359947205, 0.7180130481719971, 0.7146923542022705, 0.7121038436889648, 0.7091174125671387, 0.7063142657279968, 0.7047999501228333, 0.7012324333190918, 0.6988133788108826, 0.6959052681922913, 0.6937812566757202, 0.6918756365776062, 0.6894293427467346, 0.6864432692527771, 0.6850691437721252, 0.6833688020706177, 0.6806545257568359, 0.6791456937789917, 0.6772348880767822, 0.6751505136489868, 0.6731926798820496], "val_accuracy": [0.10199999809265137, 0.19066666066646576, 0.27566665410995483, 0.32600000500679016, 0.3636666536331177, 0.3883333206176758, 0.40566667914390564, 0.42399999499320984, 0.44066667556762695, 0.4556666612625122, 0.4726666808128357, 0.48266667127609253, 0.49566665291786194, 0.5083333253860474, 0.5230000019073486, 0.5320000052452087, 0.5419999957084656, 0.5506666898727417, 0.5580000281333923, 0.565666675567627, 0.5663333535194397, 0.5726666450500488, 0.5820000171661377, 0.5910000205039978, 0.596666693687439, 0.6029999852180481, 0.6110000014305115, 0.6226666569709778, 0.637666642665863, 0.643666684627533, 0.6520000100135803, 0.6553333401679993, 0.6606666445732117, 0.6656666398048401, 0.6706666946411133, 0.671999990940094, 0.6790000200271606, 0.6793333292007446, 0.6830000281333923, 0.6866666674613953, 0.6866666674613953, 0.6883333325386047, 0.6916666626930237, 0.6970000267028809, 0.6976666450500488, 0.6993333101272583, 0.699999988079071, 0.7023333311080933, 0.7056666612625122, 0.7070000171661377, 0.7093333601951599, 0.7116666436195374, 0.7113333344459534, 0.7149999737739563, 0.7160000205039978, 0.7176666855812073, 0.7176666855812073, 0.7170000076293945, 0.7210000157356262, 0.721666693687439, 0.7196666598320007, 0.7236666679382324, 0.7250000238418579, 0.7239999771118164, 0.7266666889190674, 0.7279999852180481, 0.7263333201408386, 0.7269999980926514, 0.7303333282470703, 0.731333315372467, 0.7303333282470703, 0.7310000061988831, 0.734333336353302, 0.7333333492279053, 0.7350000143051147, 0.7383333444595337, 0.7400000095367432, 0.7393333315849304, 0.7416666746139526, 0.7409999966621399, 0.7406666874885559, 0.7419999837875366, 0.7423333525657654, 0.7416666746139526, 0.7416666746139526, 0.7429999709129333, 0.7473333477973938, 0.746666669845581, 0.7473333477973938, 0.7486666440963745, 0.7473333477973938, 0.75, 0.7509999871253967, 0.7516666650772095, 0.7513333559036255, 0.7506666779518127, 0.7523333430290222, 0.7519999742507935, 0.7543333172798157, 0.7549999952316284]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [88, 74, 59, 56, 8, 79, 86, 52, 44], [1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1], [1, 4, 3, 6, 2, 6, 2, 5, 3, 3, 5, 8, 0, 2, 1, 3, 9, 0, 5], [2, 1, 3, 3, 0, 3, 3, 3, 0, 0, 0, 1], [53, 32, 50, 14, 35, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 2, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [42, 9, 43, 71, 34]], "fitness": -0.7260000109672546, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 11, 6, 5, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, beta), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.math.multiply(beta, tf.math.multiply(tf.math.add(sigma, beta), tf.math.square(beta)))))", "other_info": {"loss": [2.3028488159179688, 2.303041458129883, 2.3019580841064453, 2.3009703159332275, 2.3012163639068604, 2.2983875274658203, 2.292860746383667, 2.2904303073883057, 2.287426471710205, 2.2863779067993164, 2.2840328216552734, 2.281383514404297, 2.277672290802002, 2.277147054672241, 2.2738232612609863, 2.269335985183716, 2.2622275352478027, 2.258140802383423, 2.251654863357544, 2.2417633533477783, 2.2310407161712646, 2.207667112350464, 2.189697027206421, 2.138249635696411, 2.0557644367218018, 1.9236310720443726, 1.7192541360855103, 1.5251809358596802, 1.403422236442566, 1.3091609477996826, 1.2098536491394043, 1.1430824995040894, 1.0789886713027954, 1.0616040229797363, 1.0150867700576782, 0.9915845990180969, 0.9788677096366882, 0.9353604316711426, 0.9306069016456604, 0.9087147116661072, 0.8988590836524963, 0.8612048029899597, 0.8661933541297913, 0.8426749110221863, 0.8260487914085388, 0.8300561308860779, 0.8178073763847351, 0.8001563549041748, 0.7947152256965637, 0.7888005971908569, 0.7775463461875916, 0.7773334980010986, 0.7781045436859131, 0.7562331557273865, 0.7464413046836853, 0.7507140636444092, 0.7443861961364746, 0.7403156757354736, 0.7351937890052795, 0.7289057374000549, 0.7165248990058899, 0.7258636951446533, 0.723621666431427, 0.7125242948532104, 0.7060339450836182, 0.7022964358329773, 0.7051393389701843, 0.6974335312843323, 0.6923947930335999], "accuracy": [0.08572183549404144, 0.08902391046285629, 0.09391097724437714, 0.09391097724437714, 0.09760929644107819, 0.09879804402589798, 0.11411966383457184, 0.12230881303548813, 0.1306300312280655, 0.13274335861206055, 0.13472460210323334, 0.13776251673698425, 0.14581957459449768, 0.1476687341928482, 0.14951789379119873, 0.16391493380069733, 0.1810857206583023, 0.1802932173013687, 0.189274862408638, 0.19363360106945038, 0.19931316375732422, 0.2262580841779709, 0.21740853786468506, 0.24580636620521545, 0.27077004313468933, 0.3140932619571686, 0.3796063959598541, 0.4353454113006592, 0.472989022731781, 0.4970281422138214, 0.5336151123046875, 0.564258337020874, 0.5939770340919495, 0.6029586791992188, 0.6218464970588684, 0.6281865239143372, 0.6333377361297607, 0.6507726907730103, 0.6516972780227661, 0.6641130447387695, 0.6656980514526367, 0.6832650899887085, 0.6728305220603943, 0.6790384650230408, 0.6933034062385559, 0.6840575933456421, 0.6939638257026672, 0.6942279934883118, 0.7065116763114929, 0.700700044631958, 0.7098137736320496, 0.7119271159172058, 0.7121912837028503, 0.7219653725624084, 0.7185312509536743, 0.7165499925613403, 0.7220974564552307, 0.7268524765968323, 0.7246070504188538, 0.7298903465270996, 0.7301545143127441, 0.7312111854553223, 0.7327961921691895, 0.7346453666687012, 0.7392682433128357, 0.7437590956687927, 0.7375511527061462, 0.7417778372764587, 0.7416457533836365], "val_loss": [2.300055742263794, 2.2999706268310547, 2.2994964122772217, 2.2982211112976074, 2.2953782081604004, 2.29187273979187, 2.288649320602417, 2.2861242294311523, 2.28353214263916, 2.2808377742767334, 2.2780349254608154, 2.2751855850219727, 2.2721331119537354, 2.268542528152466, 2.2646398544311523, 2.2598814964294434, 2.2532575130462646, 2.245598077774048, 2.2358317375183105, 2.2222256660461426, 2.2037453651428223, 2.1722750663757324, 2.127501964569092, 2.0458295345306396, 1.890523076057434, 1.6305060386657715, 1.3444304466247559, 1.1554566621780396, 1.0487092733383179, 0.9479467868804932, 0.9166665077209473, 0.8866578936576843, 0.8428982496261597, 0.8325831890106201, 0.8016228675842285, 0.7725954055786133, 0.759486973285675, 0.748683750629425, 0.7346085906028748, 0.7230542898178101, 0.7097627520561218, 0.7044374942779541, 0.6897874474525452, 0.68326336145401, 0.6949387192726135, 0.6791675686836243, 0.6780509948730469, 0.6530413627624512, 0.6542988419532776, 0.6583091616630554, 0.6427343487739563, 0.6313523054122925, 0.6317140460014343, 0.6270449757575989, 0.614086925983429, 0.612792432308197, 0.6205647587776184, 0.6232289671897888, 0.6205125451087952, 0.5935518145561218, 0.6052323579788208, 0.5989929437637329, 0.5823028683662415, 0.5793187022209167, 0.5815767645835876, 0.5768183469772339, 0.5820319652557373, 0.5725452303886414, 0.5730546712875366], "val_accuracy": [0.03733333200216293, 0.03766666725277901, 0.04066666588187218, 0.04333333298563957, 0.06533333659172058, 0.09700000286102295, 0.12099999934434891, 0.13300000131130219, 0.14666666090488434, 0.14666666090488434, 0.16699999570846558, 0.1860000044107437, 0.2016666680574417, 0.22100000083446503, 0.2433333396911621, 0.26766666769981384, 0.2966666519641876, 0.320333331823349, 0.3310000002384186, 0.3383333384990692, 0.35233333706855774, 0.36000001430511475, 0.38733333349227905, 0.406333327293396, 0.4676666557788849, 0.531333327293396, 0.5600000023841858, 0.5963333249092102, 0.6033333539962769, 0.6316666603088379, 0.6610000133514404, 0.6713333129882812, 0.6806666851043701, 0.6890000104904175, 0.6966666579246521, 0.7123333215713501, 0.7160000205039978, 0.7160000205039978, 0.7229999899864197, 0.7336666584014893, 0.7356666922569275, 0.7273333072662354, 0.7416666746139526, 0.7443333268165588, 0.7453333139419556, 0.7276666760444641, 0.7416666746139526, 0.7459999918937683, 0.7543333172798157, 0.7549999952316284, 0.7506666779518127, 0.7630000114440918, 0.7583333253860474, 0.7696666717529297, 0.7676666378974915, 0.7736666798591614, 0.7720000147819519, 0.7590000033378601, 0.7666666507720947, 0.7789999842643738, 0.7553333044052124, 0.7736666798591614, 0.7886666655540466, 0.7950000166893005, 0.7876666784286499, 0.7883333563804626, 0.7833333611488342, 0.7839999794960022, 0.7916666865348816]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [88, 74, 59, 56, 8, 79, 86, 52, 44], [1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1], [1, 4, 0, 6, 5, 6, 2, 5, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0, 5], [3, 2, 3, 0, 0, 3, 2, 3, 0, 0], [53, 32, 50, 14, 35, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [11, 9, 43, 71, 34]], "fitness": -0.43314287066459656, "mapping_values": [1, 1, 1, 0, 1, 0, 21, 21, 12, 9, 3, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.square(tf.math.add(beta, beta))))), grad)), tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), grad))), tf.math.add(beta, beta)))), grad)), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302480936050415, 2.301814079284668, 2.300044059753418, 2.29886531829834, 2.300128221511841, 2.2993505001068115, 2.2961978912353516, 2.2960422039031982, 2.2942874431610107, 2.2943594455718994, 2.293916702270508, 2.2925727367401123, 2.2914018630981445, 2.292267084121704, 2.2907397747039795, 2.2895004749298096, 2.2867345809936523, 2.2865655422210693, 2.286101818084717, 2.285806655883789, 2.285712480545044, 2.2835371494293213, 2.2836761474609375, 2.2824509143829346, 2.2805936336517334, 2.2816600799560547, 2.278583288192749, 2.2781810760498047, 2.2785778045654297, 2.2768654823303223, 2.2761385440826416, 2.276543140411377, 2.274233102798462, 2.2730844020843506, 2.271763801574707, 2.2724034786224365, 2.270944595336914, 2.270695447921753, 2.268667459487915, 2.268676280975342, 2.267879009246826, 2.265207290649414, 2.265087604522705, 2.2650668621063232, 2.2644670009613037, 2.262077808380127, 2.261718511581421, 2.2598536014556885, 2.2580389976501465, 2.2590160369873047, 2.257530450820923, 2.2564351558685303, 2.2564399242401123, 2.2551236152648926, 2.2569286823272705, 2.252210855484009, 2.2508599758148193, 2.2523484230041504, 2.250471830368042, 2.2498905658721924, 2.248457670211792, 2.2470571994781494, 2.246006965637207, 2.2437002658843994, 2.243999719619751, 2.2432162761688232, 2.2433032989501953, 2.2428691387176514, 2.2388134002685547, 2.240172863006592, 2.23713755607605, 2.235950231552124, 2.2361416816711426, 2.2337594032287598, 2.2318103313446045, 2.2319793701171875, 2.230283737182617, 2.2294137477874756, 2.2283172607421875, 2.225470542907715, 2.226499319076538, 2.2231318950653076, 2.2225606441497803, 2.222940444946289, 2.2221240997314453, 2.219275712966919, 2.218470335006714, 2.216195821762085, 2.216045379638672, 2.2140793800354004, 2.2128751277923584, 2.2104878425598145, 2.2103912830352783, 2.2111101150512695, 2.2092254161834717, 2.2052693367004395, 2.205819606781006, 2.203580141067505, 2.2020561695098877, 2.2012293338775635], "accuracy": [0.0866464152932167, 0.09232597798109055, 0.09866596013307571, 0.09919429570436478, 0.10091137140989304, 0.09087307006120682, 0.10276053100824356, 0.10817593336105347, 0.10777968913316727, 0.11121384054422379, 0.11491216719150543, 0.11081759631633759, 0.11662924289703369, 0.11676132678985596, 0.11821424216032028, 0.1220446452498436, 0.12812046706676483, 0.1266675442457199, 0.13076211512088776, 0.13247919082641602, 0.13472460210323334, 0.14436666667461395, 0.13710209727287292, 0.1356491893529892, 0.1484612375497818, 0.14251750707626343, 0.1554616242647171, 0.14819706976413727, 0.14780081808567047, 0.15414080023765564, 0.15717871487140656, 0.1542728841304779, 0.16114120185375214, 0.16457535326480865, 0.17236824333667755, 0.16972659528255463, 0.175670325756073, 0.17117950320243835, 0.18293488025665283, 0.17712323367595673, 0.1822744756937027, 0.18874652683734894, 0.18663319945335388, 0.19270901381969452, 0.19244486093521118, 0.1966715157032013, 0.19878484308719635, 0.19574692845344543, 0.204860657453537, 0.2001056671142578, 0.20657773315906525, 0.20974771678447723, 0.21133272349834442, 0.21621978282928467, 0.21080438792705536, 0.2234843522310257, 0.22559767961502075, 0.2226918488740921, 0.21621978282928467, 0.2207106053829193, 0.2351076453924179, 0.2250693440437317, 0.23497556149959564, 0.23405098915100098, 0.23563598096370697, 0.23893804848194122, 0.23286223411560059, 0.2362964004278183, 0.2522784173488617, 0.25056135654449463, 0.2561088502407074, 0.2572975754737854, 0.25082552433013916, 0.25637298822402954, 0.25941091775894165, 0.2542596757411957, 0.2620525658130646, 0.2592788338661194, 0.2654867172241211, 0.27420419454574585, 0.2654867172241211, 0.27737417817115784, 0.2759212851524353, 0.26918503642082214, 0.2859595715999603, 0.2826575040817261, 0.2829216718673706, 0.2903183102607727, 0.2801479399204254, 0.2880729138851166, 0.2911108136177063, 0.2937524616718292, 0.2911108136177063, 0.28622373938560486, 0.29480913281440735, 0.2999603748321533, 0.2953374683856964, 0.2965262234210968, 0.3069607615470886, 0.3027341067790985], "val_loss": [2.299100160598755, 2.298151731491089, 2.2972025871276855, 2.2962496280670166, 2.2953057289123535, 2.294363260269165, 2.293423891067505, 2.2924840450286865, 2.2915468215942383, 2.2906086444854736, 2.289663076400757, 2.2887258529663086, 2.287785291671753, 2.2868471145629883, 2.285914659500122, 2.2849833965301514, 2.284050703048706, 2.2831223011016846, 2.2821950912475586, 2.2812604904174805, 2.280315637588501, 2.2793827056884766, 2.2784574031829834, 2.2775189876556396, 2.276578187942505, 2.2756454944610596, 2.2746999263763428, 2.2737555503845215, 2.272804021835327, 2.2718513011932373, 2.2708916664123535, 2.269955635070801, 2.268998861312866, 2.2680397033691406, 2.267077684402466, 2.2661192417144775, 2.26516056060791, 2.2641983032226562, 2.2632272243499756, 2.2622499465942383, 2.2612717151641846, 2.2602829933166504, 2.2592933177948, 2.2583014965057373, 2.2573091983795166, 2.2563090324401855, 2.255298137664795, 2.254279613494873, 2.253253698348999, 2.2522263526916504, 2.2511954307556152, 2.250149726867676, 2.2491190433502197, 2.248061418533325, 2.2470099925994873, 2.245945453643799, 2.2448694705963135, 2.2437853813171387, 2.242706060409546, 2.241612195968628, 2.240509033203125, 2.2393853664398193, 2.2382652759552, 2.2371275424957275, 2.2359941005706787, 2.2348439693450928, 2.233696222305298, 2.232548475265503, 2.231375217437744, 2.2301981449127197, 2.2289927005767822, 2.2277731895446777, 2.226552963256836, 2.225327968597412, 2.2240846157073975, 2.2228386402130127, 2.221571207046509, 2.2203001976013184, 2.219017267227173, 2.217714786529541, 2.21641206741333, 2.215085029602051, 2.213754653930664, 2.212423324584961, 2.2110776901245117, 2.209705352783203, 2.208317756652832, 2.2069103717803955, 2.2055015563964844, 2.2040703296661377, 2.202629327774048, 2.201169490814209, 2.1997008323669434, 2.1982128620147705, 2.196734666824341, 2.1952173709869385, 2.1937005519866943, 2.192147731781006, 2.1905930042266846, 2.1890084743499756], "val_accuracy": [0.041999999433755875, 0.04833333194255829, 0.05066666752099991, 0.0573333315551281, 0.061000000685453415, 0.06700000166893005, 0.07433333247900009, 0.0820000022649765, 0.08733333647251129, 0.09566666930913925, 0.10133333504199982, 0.109333336353302, 0.11733333021402359, 0.12733332812786102, 0.1353333294391632, 0.14233332872390747, 0.1509999930858612, 0.1599999964237213, 0.16733333468437195, 0.17599999904632568, 0.18166667222976685, 0.1886666715145111, 0.19599999487400055, 0.20233333110809326, 0.21033333241939545, 0.218666672706604, 0.22699999809265137, 0.23633334040641785, 0.24133333563804626, 0.24699999392032623, 0.25333333015441895, 0.26366665959358215, 0.27133333683013916, 0.27666667103767395, 0.28166666626930237, 0.28833332657814026, 0.2913333475589752, 0.29766666889190674, 0.30399999022483826, 0.3089999854564667, 0.3140000104904175, 0.31700000166893005, 0.32233333587646484, 0.32600000500679016, 0.3283333480358124, 0.3319999873638153, 0.33666667342185974, 0.34066668152809143, 0.3449999988079071, 0.3466666638851166, 0.34966665506362915, 0.35366666316986084, 0.3569999933242798, 0.36033332347869873, 0.3630000054836273, 0.36633333563804626, 0.3696666657924652, 0.3720000088214874, 0.3736666738986969, 0.3766666650772095, 0.3776666522026062, 0.3786666691303253, 0.38066667318344116, 0.382999986410141, 0.38366666436195374, 0.3866666555404663, 0.3893333375453949, 0.39100000262260437, 0.39366665482521057, 0.39366665482521057, 0.3956666588783264, 0.39666667580604553, 0.3986666798591614, 0.4009999930858612, 0.4026666581630707, 0.40433332324028015, 0.4073333442211151, 0.40933331847190857, 0.4099999964237213, 0.4116666615009308, 0.41366666555404663, 0.41499999165534973, 0.4163333475589752, 0.41733333468437195, 0.41999998688697815, 0.421999990940094, 0.4256666600704193, 0.4283333420753479, 0.43033334612846375, 0.4313333332538605, 0.4323333203792572, 0.4336666762828827, 0.4350000023841858, 0.437666654586792, 0.4399999976158142, 0.44066667556762695, 0.4423333406448364, 0.4429999887943268, 0.4429999887943268, 0.44433334469795227]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [88, 74, 59, 56, 8, 79, 86, 52, 44], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1], [9, 4, 9, 6, 4, 1, 9, 4, 3, 0, 4, 8, 8, 1, 1, 8, 9, 0], [2, 2, 3, 1, 0, 3, 2, 0, 0, 0], [53, 32, 50, 35, 35, 78], [1, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [42, 9, 43, 71, 34]], "fitness": -0.1062857136130333, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 3, 1, 2, 2], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3014163970947266, 2.302060604095459, 2.3025522232055664, 2.3025853633880615, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09430722147226334, 0.1006472036242485, 0.10170386731624603, 0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3016164302825928, 2.302577257156372, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.08900000154972076, 0.10400000214576721, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [88, 74, 59, 56, 8, 79, 86, 52, 44], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], [4, 4, 9, 6, 4, 1, 9, 4, 3, 0, 4, 8, 8, 1, 1, 8, 9, 0], [2, 2, 3, 3, 1, 2, 1, 0, 0, 0], [53, 32, 50, 14, 35, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [3, 3], [], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [25, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 20, 20, 13, 7, 2, 1, 1, 0, 1, 0, 11, 6, 5, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.pow(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.divide_no_nan(tf.math.pow(tf.math.subtract(beta, beta), tf.math.add(beta, grad)), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))), tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.negative(tf.math.add(beta, grad)), tf.math.pow(tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(alpha))), beta))), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.multiply(sigma, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.add(sigma, beta), tf.math.square(beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [88, 74, 59, 56, 8, 79, 86, 52, 44], [1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1], [9, 4, 9, 6, 4, 1, 9, 4, 3, 0, 4, 8, 8, 1, 1, 8, 9, 0], [2, 2, 3, 1, 0, 3, 2, 0, 0, 0], [53, 32, 50, 35, 35, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [83, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09060890227556229, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [88, 74, 59, 56, 8, 79, 86, 52, 44], [1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], [9, 4, 9, 6, 4, 1, 9, 4, 3, 0, 4, 8, 8, 1, 1, 8, 9, 0], [2, 2, 3, 1, 0, 3, 2, 0, 0, 0], [87, 32, 50, 14, 35, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [42, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09060890227556229, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [88, 74, 59, 56, 8, 79, 86, 52, 44], [1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1], [1, 4, 2, 6, 5, 6, 2, 5, 3, 3, 4, 8, 8, 4, 1, 8, 9, 0, 5], [3, 2, 3, 3, 1, 2, 1, 0, 0, 0, 5, 1], [53, 64, 50, 35, 35, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [25, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 22, 22, 12, 10, 3, 1, 1, 0, 1, 0, 11, 6, 5, 1], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.pow(grad, beta)), tf.math.add(tf.math.divide_no_nan(grad, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.multiply(tf.math.add(beta, grad), tf.math.pow(tf.math.sqrt(tf.math.add(beta, alpha)), tf.math.add(beta, beta))), alpha))), tf.math.add(beta, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))))), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(sigma, beta), tf.math.square(beta)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09589222073554993, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [2, 74, 59, 56, 8, 79, 86, 52, 44], [1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], [9, 4, 9, 6, 4, 1, 9, 4, 3, 0, 4, 8, 8, 1, 1, 8, 9, 0], [2, 3, 3, 3, 3, 3, 3, 3, 0, 0], [53, 32, 50, 14, 35, 78], [0, 0, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [0, 3], [92], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [1, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [23, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 3, 2, 1, 1, 1, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.315197706222534, 2.4147820472717285, 3.2128238677978516, 261627936768.0, 3.3403962303611976e+30, 2.344520092010498, 2.4109089374542236, 2.5382003784179688, 2.772273063659668], "accuracy": [0.06789063662290573, 0.019416192546486855, 0.00977413821965456, 0.0866464152932167, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3513073921203613, 2.564769983291626, 7.948944568634033, 2.4853880383568657e+31, 2.3289151191711426, 2.378857374191284, 2.4760518074035645, 2.6575233936309814, 2.9889349937438965], "val_accuracy": [0.004333333112299442, 0.004666666500270367, 0.04233333468437195, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [88, 74, 59, 56, 8, 79, 86, 52, 44], [1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], [9, 4, 9, 6, 4, 1, 9, 4, 3, 0, 4, 8, 8, 1, 1, 8, 9, 0], [2, 2, 3, 1, 0, 3, 2, 0, 0, 0], [53, 32, 50, 14, 35, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [42, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09060890227556229, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [88, 74, 59, 56, 8, 79, 86, 52, 44], [1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1], [1, 4, 6, 8, 2, 6, 2, 5, 3, 3, 5, 9, 8, 2, 1, 3, 9, 0, 5], [3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 1, 1, 0], [53, 56, 50, 35, 35, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 4, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [23, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 28, 28, 18, 10, 4, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)))))), tf.math.add(beta, grad)))), tf.math.add(beta, grad)), grad))))), grad)), tf.math.subtract(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.add(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.pow(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09074098616838455, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [88, 74, 59, 56, 8, 79, 86, 52, 44], [1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [8, 1, 2, 3, 3, 3, 9, 5, 3, 3, 4, 3, 8, 2, 1, 3, 9, 0, 5], [2, 3, 3, 3, 0, 3, 3, 3, 0, 0, 4], [53, 32, 50, 14, 35, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [2, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 1, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [91, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 28, 28, 17, 11, 5, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.multiply(tf.math.add(beta, beta), grad), tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))), tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.pow(tf.math.multiply(tf.math.sqrt(tf.math.add(beta, grad)), grad), tf.math.add(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))))))))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09509972482919693, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [88, 74, 59, 56, 8, 79, 86, 52, 44], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], [9, 4, 9, 6, 4, 1, 9, 4, 3, 0, 4, 8, 8, 1, 1, 8, 9, 0], [2, 2, 3, 1, 0, 3, 2, 0, 0, 0], [87, 32, 50, 14, 35, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [3, 2, 3, 3, 7, 5, 3, 1, 4, 0, 9, 2, 0, 2, 8, 6, 1, 6, 8, 8, 6, 8, 9, 6, 2, 0, 8, 2, 9, 5, 4, 3, 0], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [50, 9, 21, 42, 34, 97, 88]], "fitness": -0.044857144355773926, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 50, 33, 17, 7], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.add(tf.math.multiply(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.square(sigma), tf.math.multiply(beta, tf.math.subtract(tf.math.pow(beta, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, alpha))), tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.divide_no_nan(tf.math.subtract(tf.math.divide_no_nan(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), sigma), tf.math.sqrt(tf.math.sqrt(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), beta)))), beta)), tf.math.divide_no_nan(tf.math.add(tf.math.negative(tf.math.sqrt(tf.math.add(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), sigma))), sigma), tf.math.square(tf.math.pow(beta, tf.math.multiply(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma)))))))))", "other_info": {"loss": [2.3028483390808105, 2.3030574321746826, 2.3021671772003174, 2.301879644393921, 2.303987979888916, 2.3040482997894287, 2.3017399311065674, 2.3024837970733643, 2.3015012741088867, 2.3024332523345947, 2.3028740882873535, 2.3022570610046387, 2.3019297122955322, 2.303600311279297, 2.302828311920166, 2.3024942874908447, 2.3005576133728027, 2.301102638244629, 2.301426649093628, 2.3019940853118896, 2.302837610244751, 2.301419734954834, 2.302076578140259, 2.3018083572387695, 2.3011012077331543, 2.302525520324707, 2.3006513118743896, 2.3007991313934326, 2.302407741546631, 2.301259994506836], "accuracy": [0.08572183549404144, 0.08902391046285629, 0.09325055778026581, 0.09192973375320435, 0.09166556596755981, 0.08136309683322906, 0.08796724677085876, 0.09259014576673508, 0.09285431355237961, 0.09166556596755981, 0.09338264167308807, 0.08849557489156723, 0.09206181764602661, 0.09087307006120682, 0.08994849026203156, 0.09100515395402908, 0.09140139818191528, 0.09100515395402908, 0.09087307006120682, 0.09192973375320435, 0.09113723784685135, 0.09642054885625839, 0.0874389111995697, 0.08915598690509796, 0.09681680053472519, 0.08875974267721176, 0.0944393053650856, 0.0878351628780365, 0.08955223858356476, 0.09087307006120682], "val_loss": [2.300056219100952, 2.3000481128692627, 2.3000404834747314, 2.300032377243042, 2.3000121116638184, 2.2999939918518066, 2.299968957901001, 2.2999353408813477, 2.299896240234375, 2.2998552322387695, 2.2998130321502686, 2.2997491359710693, 2.299699544906616, 2.299635887145996, 2.2995522022247314, 2.2995095252990723, 2.2994840145111084, 2.299445867538452, 2.2994205951690674, 2.299365520477295, 2.2993180751800537, 2.299297571182251, 2.2992546558380127, 2.2991809844970703, 2.2991549968719482, 2.299090623855591, 2.2990763187408447, 2.299030303955078, 2.299006938934326, 2.298997640609741], "val_accuracy": [0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03766666725277901, 0.03799999877810478, 0.03766666725277901, 0.038333334028720856, 0.03933333232998848, 0.039000000804662704, 0.039000000804662704, 0.039000000804662704, 0.03966666758060455, 0.03999999910593033, 0.03966666758060455, 0.03999999910593033, 0.03999999910593033, 0.03999999910593033, 0.0403333343565464, 0.0403333343565464, 0.0403333343565464, 0.03999999910593033, 0.04100000113248825, 0.041333332657814026, 0.041999999433755875, 0.04100000113248825, 0.041333332657814026, 0.041333332657814026, 0.04100000113248825, 0.0416666679084301]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [88, 74, 59, 56, 8, 79, 86, 52, 44], [1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [2, 4, 9, 6, 4, 1, 9, 4, 3, 0, 4, 8, 8, 1, 1, 8, 9, 0], [2, 2, 3, 1, 0, 3, 2, 0, 0, 0], [53, 32, 0, 35, 35, 78], [0, 0, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [4, 3], [], [1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 7, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 2, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [23, 9, 43, 71, 34]], "fitness": -0.04114285856485367, "mapping_values": [1, 1, 1, 0, 1, 0, 26, 26, 18, 8, 5, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.pow(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), grad)), tf.math.add(beta, alpha)))))), tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)))), tf.math.sqrt(grad))), tf.math.add(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.negative(beta))), tf.math.add(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302849292755127, 2.3030636310577393, 2.302180528640747, 2.301898241043091, 2.304023265838623, 2.3041014671325684], "accuracy": [0.08572183549404144, 0.08902391046285629, 0.09325055778026581, 0.09219389408826828, 0.09153348207473755, 0.08096684515476227], "val_loss": [2.300058603286743, 2.300058603286743, 2.300058603286743, 2.300058603286743, 2.300058603286743, 2.300058603286743], "val_accuracy": [0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [88, 74, 59, 56, 8, 79, 86, 52, 44], [1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], [9, 4, 9, 6, 4, 1, 9, 4, 3, 0, 4, 8, 8, 1, 1, 8, 9, 0], [2, 2, 3, 1, 0, 3, 2, 0, 0, 0], [53, 32, 50, 14, 35, 78], [1, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [42, 9, 43, 71, 34]], "fitness": -0.04114285856485367, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302849292755127, 2.3030636310577393, 2.302180528640747, 2.301898241043091, 2.304023265838623, 2.3041014671325684], "accuracy": [0.08572183549404144, 0.08902391046285629, 0.09325055778026581, 0.09219389408826828, 0.09153348207473755, 0.08096684515476227], "val_loss": [2.300058603286743, 2.300058603286743, 2.300058603286743, 2.300058603286743, 2.300058603286743, 2.300058603286743], "val_accuracy": [0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [88, 74, 59, 56, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], [9, 4, 9, 6, 4, 1, 9, 4, 3, 0, 4, 8, 8, 1, 1, 8, 9, 0], [2, 2, 3, 1, 0, 3, 2, 0, 0, 0], [53, 32, 50, 14, 35, 78], [1, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [16, 9, 43, 71, 34]], "fitness": -0.04114285856485367, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302849292755127, 2.3030636310577393, 2.302180528640747, 2.301898241043091, 2.304023265838623, 2.3041014671325684], "accuracy": [0.08572183549404144, 0.08902391046285629, 0.09325055778026581, 0.09219389408826828, 0.09153348207473755, 0.08096684515476227], "val_loss": [2.300058603286743, 2.300058603286743, 2.300058603286743, 2.300058603286743, 2.300058603286743, 2.300058603286743], "val_accuracy": [0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [88, 74, 59, 56, 8, 79, 86, 52, 44], [1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], [9, 4, 9, 6, 4, 1, 9, 4, 3, 0, 4, 8, 8, 1, 1, 8, 9, 0], [2, 2, 3, 1, 0, 3, 2, 0, 0, 0], [53, 32, 50, 14, 35, 78], [0, 0, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 0, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [23, 9, 43, 71, 34]], "fitness": -0.04114285856485367, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 9, 5, 4, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.multiply(sigma, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.add(sigma, beta)))", "other_info": {"loss": [2.302849292755127, 2.3030636310577393, 2.302180528640747, 2.301898241043091, 2.304023265838623, 2.3041014671325684], "accuracy": [0.08572183549404144, 0.08902391046285629, 0.09325055778026581, 0.09219389408826828, 0.09153348207473755, 0.08096684515476227], "val_loss": [2.300058603286743, 2.300058603286743, 2.300058603286743, 2.300058603286743, 2.300058603286743, 2.300058603286743], "val_accuracy": [0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [88, 74, 59, 56, 8, 79, 86, 52, 44], [0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1], [1, 4, 9, 6, 4, 1, 9, 4, 3, 0, 4, 8, 8, 1, 1, 8, 9, 0], [2, 2, 3, 3, 1, 2, 1, 0, 0, 0, 0, 1], [53, 32, 50, 14, 35, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 3, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [42, 9, 43, 71, 34]], "fitness": -0.03771428391337395, "mapping_values": [1, 1, 1, 0, 1, 0, 20, 20, 13, 7, 2, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))), tf.math.divide_no_nan(tf.math.pow(beta, tf.math.subtract(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.add(beta, grad), tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, grad)))))), tf.math.add(beta, alpha)), beta)))), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(sigma))", "other_info": {"loss": [2.3034634590148926, 2.305615186691284, 2.306595802307129, 2.3084158897399902, 2.3144664764404297, 2.3175649642944336, 2.3185031414031982, 2.3249714374542236, 2.3307602405548096, 2.347339153289795, 2.401437997817993, 137594453098496.0, 3.7738986015319824, 8.492155075073242, 14.2433443069458], "accuracy": [0.08572183549404144, 0.08413683623075485, 0.08347642421722412, 0.08730682730674744, 0.08057060092687607, 0.07198520749807358, 0.07158895581960678, 0.07568352669477463, 0.07832518965005875, 0.0742306187748909, 0.08479725569486618, 0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3014261722564697, 2.303457260131836, 2.3053336143493652, 2.3076372146606445, 2.3106346130371094, 2.3138139247894287, 2.317180871963501, 2.322291135787964, 2.330319404602051, 2.3496153354644775, 2.5437557697296143, 2.872608184814453, 6.16713809967041, 11.902549743652344, 17.671688079833984], "val_accuracy": [0.033666666597127914, 0.029333332553505898, 0.02666666731238365, 0.026333333924412727, 0.03200000151991844, 0.03999999910593033, 0.05766666680574417, 0.07533333450555801, 0.08966666460037231, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}]