[{"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 1, 0, 5, 4, 4, 9, 3, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [3, 4, 0, 1, 1, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [4, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 0, 1, 0, 1, 1], [0, 0, 0, 0], [2, 3, 0, 0], [1, 0], [12], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 1, 2, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 9, 45, 71, 34, 14, 2]], "fitness": -0.8299999833106995, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 7, 4, 2, 7, 4, 4, 0, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.subtract(tf.math.add(beta, grad), grad), tf.math.add(beta, tf.math.negative(tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.negative(sigma)), tf.math.add(sigma, tf.math.negative(sigma)))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.189535140991211, 2.1757144927978516, 2.0330145359039307, 1.6895370483398438, 1.2622380256652832, 1.0042251348495483, 0.8156862854957581, 0.7672954201698303, 0.7335515022277832, 0.658334493637085, 0.6487258672714233, 0.6107226014137268, 0.6046630144119263, 0.5948398113250732, 0.5674867630004883, 0.5517812967300415, 0.5522890090942383, 0.5394563674926758, 0.5424818396568298, 0.5243293046951294, 0.5105805397033691, 0.5268796682357788, 0.5056478381156921, 0.4796946346759796, 0.48418596386909485, 0.4726865589618683, 0.46695342659950256, 0.452712744474411, 0.4374901056289673, 0.43419793248176575, 0.4341929852962494, 0.4337068796157837, 0.41874203085899353, 0.43637022376060486], "accuracy": [0.27763834595680237, 0.2678642272949219, 0.32043322920799255, 0.42002376914024353, 0.5614846348762512, 0.646149754524231, 0.6939638257026672, 0.7083608508110046, 0.72672039270401, 0.7506273984909058, 0.7581561207771301, 0.772288978099823, 0.7684586048126221, 0.7771760821342468, 0.7858935594558716, 0.7936864495277405, 0.7935543656349182, 0.8006868362426758, 0.7984414100646973, 0.8072909712791443, 0.8098005652427673, 0.8074230551719666, 0.8129705190658569, 0.8186501264572144, 0.8214238286018372, 0.8212917447090149, 0.8236692547798157, 0.834632158279419, 0.8405758738517761, 0.8446704745292664, 0.8388587832450867, 0.8384625315666199, 0.8454629778862, 0.8352925777435303], "val_loss": [2.2945563793182373, 2.3715837001800537, 1.9126747846603394, 1.3484687805175781, 1.002721905708313, 0.6921448707580566, 0.7255759835243225, 0.6962119340896606, 0.5836041569709778, 0.5769974589347839, 0.5654386878013611, 0.569073498249054, 0.5326076745986938, 0.5370681881904602, 0.48265066742897034, 0.5506400465965271, 0.48605287075042725, 0.49724364280700684, 0.4695096015930176, 0.4600451588630676, 0.4727928042411804, 0.4716918468475342, 0.44218310713768005, 0.4463973939418793, 0.44757112860679626, 0.448110431432724, 0.452385812997818, 0.4686250686645508, 0.423725426197052, 0.4447271227836609, 0.43061530590057373, 0.42024216055870056, 0.4502318203449249, 0.44593584537506104], "val_accuracy": [0.109333336353302, 0.09866666793823242, 0.2669999897480011, 0.527999997138977, 0.640333354473114, 0.737333357334137, 0.7043333053588867, 0.7360000014305115, 0.7643333077430725, 0.7826666831970215, 0.7850000262260437, 0.7826666831970215, 0.7953333258628845, 0.7923333048820496, 0.8236666917800903, 0.777999997138977, 0.8199999928474426, 0.8140000104904175, 0.8266666531562805, 0.8253333568572998, 0.8343333601951599, 0.8286666870117188, 0.8423333168029785, 0.8333333134651184, 0.8450000286102295, 0.8389999866485596, 0.8293333053588867, 0.8230000138282776, 0.8493333458900452, 0.8293333053588867, 0.8416666388511658, 0.8443333506584167, 0.8323333263397217, 0.8343333601951599]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 7, 5, 8, 4, 8, 2, 2, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [3, 4, 0, 1, 1, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [4, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 0, 1, 0, 1, 1], [0, 0, 0, 1], [2, 3, 0, 0], [1, 0], [12], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 1, 2, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 9, 45, 71, 34, 14, 2]], "fitness": -0.8088571429252625, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 6, 4, 3, 1, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.add(beta, grad), grad), tf.math.add(beta, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.negative(sigma)), tf.math.add(sigma, alpha))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.189537525177002, 2.1743037700653076, 2.0539445877075195, 1.8417716026306152, 1.417283058166504, 1.1658273935317993, 0.8319564461708069, 0.7403574585914612, 0.7339397072792053, 0.6448447108268738, 0.6514308452606201, 0.6056129932403564, 0.6185271143913269, 0.5963643193244934, 0.5615853667259216, 0.5597780346870422, 0.542938768863678, 0.5336145162582397, 0.5103808045387268, 0.5262998342514038, 0.501823365688324, 0.5144543051719666], "accuracy": [0.27763834595680237, 0.26799631118774414, 0.3140932619571686, 0.40985339879989624, 0.5194822549819946, 0.6063928008079529, 0.6925109028816223, 0.7257958054542542, 0.7277770638465881, 0.7588165402412415, 0.7565711140632629, 0.7795535326004028, 0.7676661014556885, 0.7750627398490906, 0.7936864495277405, 0.7915731072425842, 0.7956677079200745, 0.8013472557067871, 0.8094043135643005, 0.8053097128868103, 0.8156121969223022, 0.8088759779930115], "val_loss": [2.2945263385772705, 2.3773446083068848, 2.0091259479522705, 1.272452473640442, 1.401973009109497, 0.7115535736083984, 0.7024405002593994, 0.5924267768859863, 0.5826334357261658, 0.5722885727882385, 0.5979794263839722, 0.5771582722663879, 0.5022609233856201, 0.5060776472091675, 0.494468092918396, 0.5444490313529968, 0.4764809310436249, 0.48153695464134216, 0.48540371656417847, 0.48680993914604187, 0.4745919108390808, 0.4814569056034088], "val_accuracy": [0.10966666787862778, 0.09866666793823242, 0.31066668033599854, 0.5856666564941406, 0.5690000057220459, 0.7289999723434448, 0.7253333330154419, 0.7670000195503235, 0.7559999823570251, 0.7803333401679993, 0.7716666460037231, 0.7716666460037231, 0.8203333616256714, 0.8056666851043701, 0.8116666674613953, 0.7870000004768372, 0.8289999961853027, 0.8256666660308838, 0.8109999895095825, 0.8159999847412109, 0.82833331823349, 0.8176666498184204]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 1, 0, 5, 5, 4, 9, 3, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [3, 4, 0, 1, 1, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [4, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 0, 1, 0, 1, 1], [0, 0, 0, 0], [2, 3, 0, 0], [1, 0], [12], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 1, 2, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [74, 9, 45, 71, 34, 14, 2]], "fitness": -0.3797142803668976, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 7, 3, 2, 7, 4, 4, 0, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.subtract(tf.math.add(beta, grad), tf.math.negative(tf.math.square(tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)))))))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.negative(sigma)), tf.math.add(sigma, tf.math.negative(sigma)))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [3.051017999649048, 2.2686502933502197, 2.342179298400879, 2.3249683380126953, 2.2233734130859375, 2.303915500640869, 2.3036046028137207, 2.303344964981079], "accuracy": [0.1768590658903122, 0.12719587981700897, 0.15770703554153442, 0.17183992266654968, 0.17038699984550476, 0.1002509593963623, 0.09813763201236725, 0.09549596905708313], "val_loss": [2.2618086338043213, 2.30003023147583, 2.239727258682251, 1.9327856302261353, 2.3047027587890625, 2.302853584289551, 2.3026585578918457, 2.302685260772705], "val_accuracy": [0.1926666647195816, 0.10166666656732559, 0.312666654586792, 0.29466667771339417, 0.10000000149011612, 0.10000000149011612, 0.10133333504199982, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [3, 0, 0, 5, 4, 4, 9, 3, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [3, 4, 5, 1, 1, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [4, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 0, 1, 0, 1, 1], [1, 0, 0, 0], [2, 3, 0, 0], [1, 0], [12], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [2, 1, 2, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 9, 45, 71, 34, 14, 2]], "fitness": -0.10457143187522888, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3013739585876465, 2.2999913692474365, 2.30008864402771, 2.300974130630493, 2.302011489868164, 2.3022525310516357, 2.3025989532470703], "accuracy": [0.09642054885625839, 0.10540219396352768, 0.09800554811954498, 0.09800554811954498, 0.09298639744520187, 0.10117553919553757, 0.1002509593963623], "val_loss": [2.296942710876465, 2.297668695449829, 2.300180435180664, 2.3016204833984375, 2.3021066188812256, 2.3024351596832275, 2.3026187419891357], "val_accuracy": [0.06733333319425583, 0.13633333146572113, 0.11966666579246521, 0.11033333092927933, 0.09666666388511658, 0.10233332961797714, 0.10400000214576721]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 8, 0, 5, 4, 9, 9, 3, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [3, 4, 0, 1, 1, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [4, 85, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1], [2, 2, 6, 5], [1, 0], [12], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1], [3, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6, 2, 0, 4, 4, 8, 6, 1, 3, 5, 5, 0, 3, 1, 1, 0, 2, 5, 8, 8, 8, 3, 9, 1, 3, 7, 9], [0, 1, 2, 2, 2, 0, 1, 0, 0, 3, 2, 3, 3, 3, 2, 0, 3, 2, 0, 3, 1, 3, 3, 3], [14, 9, 45, 66, 34, 14, 2, 6, 77, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.math.pow(grad, tf.math.add(beta, tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 8, 0, 5, 4, 9, 9, 3, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [3, 4, 0, 1, 1, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [4, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 0, 1, 0, 1, 1], [0, 0, 0, 0], [2, 3, 0, 0], [4, 1], [85], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 2, 2, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 9, 45, 71, 34, 14, 2]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 7, 4, 4, 0, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.negative(sigma)), tf.math.add(sigma, tf.math.negative(sigma)))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 1, 0, 5, 4, 4, 9, 3, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [3, 4, 0, 1, 1, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [4, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 0, 1, 1, 1, 1], [0, 0, 1, 0], [2, 3, 0, 0], [4, 1], [38], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 1, 2, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 9, 45, 71, 34, 14, 2]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 5, 3, 2, 1, 0, 3, 1, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06907938420772552, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 8, 0, 5, 4, 9, 9, 3, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [3, 4, 0, 3, 2, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [4, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 1, 1, 0, 0, 1, 1], [1, 0, 1, 0], [2, 3, 0, 0], [3, 0], [88], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [7, 3, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 2, 2, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [62, 9, 45, 71, 34, 14, 2]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 6, 2, 1, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.square(tf.math.add(beta, grad))))), tf.math.pow(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 1, 0, 5, 4, 3, 9, 3, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [3, 4, 0, 1, 1, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [4, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 0, 1, 0, 1, 1], [1, 0, 0, 0], [9, 3, 0, 0], [1, 0], [12], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [9, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 1, 2, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 9, 45, 71, 34, 14, 2]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302093744277954, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 7, 0, 8, 4, 2, 9, 8, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [3, 4, 4, 3, 0, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [4, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 1, 0, 0, 0, 1, 1], [1, 1, 1, 0], [8, 9, 0, 0], [3, 0], [88], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [2, 2, 2, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [25, 9, 45, 71, 34, 14, 2]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.negative(grad)), grad), tf.math.sqrt(tf.math.pow(tf.math.add(beta, grad), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 1, 0, 5, 4, 4, 9, 3, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [3, 4, 0, 3, 1, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [4, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 0, 1, 0, 1, 1], [0, 0, 0, 0], [3, 8, 0, 0], [1, 0], [12], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [2, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6, 1, 6, 5, 0, 9, 7, 9, 0, 3, 2, 0, 7, 2, 5, 2, 4, 0, 6, 2, 5, 1], [0, 1, 2, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [97, 9, 45, 71, 34, 14, 2, 30, 1, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 7, 4, 2, 6, 4, 4, 0, 0, 58, 37, 21, 10], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.subtract(tf.math.add(beta, grad), tf.math.negative(tf.math.square(tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.negative(sigma)))), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(tf.math.subtract(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.add(tf.math.add(tf.math.square(beta), beta), tf.math.multiply(tf.math.subtract(tf.math.pow(tf.math.multiply(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.divide_no_nan(alpha, tf.math.subtract(tf.math.divide_no_nan(tf.math.square(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), tf.math.negative(sigma)))))), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.multiply(tf.math.add(tf.math.negative(tf.math.add(tf.math.add(tf.math.square(tf.math.add(tf.math.pow(tf.math.negative(tf.math.divide_no_nan(beta, beta)), sigma), sigma)), tf.math.add(tf.math.square(beta), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), sigma)), beta), tf.math.subtract(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), sigma))))), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 7, 0, 0, 4, 2, 9, 2, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [3, 4, 0, 1, 1, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [1, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 0, 1, 0, 1, 1], [0, 1, 1, 0], [9, 3, 0, 0], [4, 3], [12], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 1, 2, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 9, 45, 71, 34, 14, 2]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.add(beta, tf.math.negative(grad)), tf.math.add(beta, grad)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.472795248031616, 14.677284240722656, 40.70212173461914, 84.28137969970703, 152.04930114746094, 246.386962890625], "accuracy": [0.09893012791872025, 0.09840179979801178, 0.10051512718200684, 0.10408136248588562, 0.10038304328918457, 0.10500594228506088], "val_loss": [5.859356880187988, 19.582523345947266, 45.21735382080078, 85.76872253417969, 144.84283447265625, 226.35690307617188], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 7, 5, 4, 4, 8, 2, 2, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [3, 4, 0, 1, 1, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [1, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 1, 0, 0, 0, 1, 1], [0, 1, 1, 0], [8, 9, 0, 0], [4, 1], [88], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 2, 2, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [25, 9, 45, 71, 34, 14, 2]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(grad, tf.math.add(beta, grad)), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha)), tf.math.add(beta, alpha))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.3029961585998535, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1010434553027153, 0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [9.098579406738281, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [9, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [75, 37, 51, 41, 8, 79, 86, 52, 44], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 8, 0, 4, 7, 9, 9, 3, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [0, 4, 0, 3, 2, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [4, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 0, 1, 0, 1, 1], [0, 1, 1, 0], [2, 3, 0, 0], [1, 0], [38], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1], [3, 4, 1, 5, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 1, 1, 1, 1, 9, 8, 8, 9, 5, 1, 8, 5, 7, 1, 0, 9], [0, 1, 2, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 0, 0, 3, 2, 0, 3, 0], [48, 9, 45, 71, 34, 44, 2, 81]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 5, 5, 3, 2, 1, 3, 3, 1, 2, 1, 8, 4, 4, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.pow(tf.math.subtract(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), alpha), beta), tf.math.square(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 8, 0, 5, 4, 9, 9, 3, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [0, 4, 0, 3, 2, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [36, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 0, 1, 0, 1, 1], [0, 0, 0, 0], [9, 8, 0, 0], [1, 0], [38], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [3, 0, 1, 7, 1, 2, 3, 1, 4, 1, 9, 2, 0, 2, 8, 6, 1, 1, 1, 9, 8, 8, 4, 5, 1, 6, 5, 7, 4, 0, 9, 7, 2, 1, 7, 1, 6, 9, 3, 7, 0, 0, 6, 6, 6, 1, 1, 5, 9], [0, 1, 2, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0, 2, 1, 3, 0, 2, 2, 1, 3], [70, 9, 45, 71, 34, 14, 2, 8, 78, 75, 7, 65, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 6, 2, 2, 1, 1, 1, 0, 1, 78, 49, 29, 13], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.square(tf.math.pow(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.subtract(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.add(tf.math.subtract(tf.math.add(tf.math.multiply(beta, tf.math.subtract(tf.math.pow(beta, tf.math.subtract(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.divide_no_nan(alpha, tf.math.subtract(tf.math.subtract(tf.math.subtract(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), sigma)))))), tf.math.sqrt(tf.math.sqrt(tf.math.pow(tf.math.square(tf.math.subtract(tf.math.divide_no_nan(tf.math.square(tf.math.add(tf.math.pow(tf.math.negative(beta), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, sigma), sigma))), tf.math.subtract(tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.divide_no_nan(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), sigma), tf.math.multiply(beta, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))))), sigma)), tf.math.add(tf.math.negative(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.divide_no_nan(beta, alpha)))))))), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.subtract(tf.math.subtract(sigma, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), beta), tf.math.square(beta)), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), alpha), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [6, 1, 0, 5, 4, 4, 3, 3, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [3, 4, 0, 1, 1, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [4, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 0, 1, 0, 1, 1], [0, 0, 0, 0], [2, 3, 0, 5], [1, 0], [12], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 4, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 1, 2, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 9, 45, 71, 34, 14, 2]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.add(beta, grad), grad), tf.math.negative(tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.multiply(alpha, beta)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.pow(alpha, beta))", "other_info": {"loss": [2.302093744277954, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 9, 0, 5, 4, 3, 9, 3, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [3, 4, 0, 1, 1, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [94, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 1, 0, 1, 0, 1, 1], [1, 0, 0, 0], [8, 9, 0, 0], [1, 0], [12], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 1, 2, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 9, 45, 71, 34, 14, 2]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302093744277954, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [6, 1, 0, 5, 4, 3, 0, 3, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [3, 4, 0, 1, 1, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [4, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 0, 1, 0, 1, 1], [1, 0, 0, 0], [9, 3, 0, 0], [2, 0], [12], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [0, 1, 2, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 9, 45, 71, 34, 14, 2]], "fitness": -0.036571428179740906, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.add(beta, grad), grad), tf.math.add(beta, tf.math.negative(tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.3019797801971436, 2.302812099456787, 2.3041257858276367, 2.3010361194610596, 2.301699161529541, 2.301873207092285], "accuracy": [0.0948355570435524, 0.09074098616838455, 0.09457138925790787, 0.08994849026203156, 0.09417514503002167, 0.09496764093637466], "val_loss": [2.297966480255127, 2.297966480255127, 2.297966480255127, 2.297966480255127, 2.297966480255127, 2.297966480255127], "val_accuracy": [0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 1, 0, 5, 4, 4, 9, 3, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [3, 4, 0, 1, 1, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [4, 65, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 0, 1, 0, 1, 1], [0, 0, 1, 0], [2, 3, 2, 0], [1, 0], [12], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [2, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [1, 1, 2, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [48, 9, 45, 71, 34, 14, 2]], "fitness": -0.036571428179740906, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 7, 4, 2, 7, 4, 3, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.subtract(tf.math.add(beta, grad), grad), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), sigma)), tf.math.add(sigma, tf.math.add(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3019797801971436, 2.302812099456787, 2.3041257858276367, 2.3010361194610596, 2.301699161529541, 2.301873207092285], "accuracy": [0.0948355570435524, 0.09074098616838455, 0.09457138925790787, 0.08994849026203156, 0.09417514503002167, 0.09496764093637466], "val_loss": [2.297966480255127, 2.297966480255127, 2.297966480255127, 2.297966480255127, 2.297966480255127, 2.297966480255127], "val_accuracy": [0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 9, 2, 7, 9, 0, 8, 2, 8, 2, 8, 4, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 3, 0, 0, 2, 1, 0, 0, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [94, 37, 51, 41, 8, 79, 86, 52, 44], [1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 8, 0, 5, 4, 9, 9, 3, 9, 8, 4, 1, 9, 6, 8, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [4, 4, 0, 3, 2, 2, 1, 3, 1, 0, 3, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [4, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0], [2, 3, 0, 0], [1, 0], [38], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 1, 7, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6, 1, 1, 1, 9, 8, 8, 9, 5, 1, 6, 5, 7, 1, 0, 9], [0, 3, 2, 2, 2, 0, 1, 0, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 3, 0], [25, 9, 45, 71, 34, 14, 2]], "fitness": -0.010571428574621677, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.308215379714966, 2.324932813644409, 2.345493793487549, 2.364426851272583, 2.393160581588745, 2.4315526485443115], "accuracy": [0.0820235088467598, 0.05666358396410942, 0.03751155734062195, 0.022322017699480057, 0.01822744682431221, 0.014132875017821789], "val_loss": [2.3149025440216064, 2.3336377143859863, 2.356027841567993, 2.382845640182495, 2.416785717010498, 2.4633333683013916], "val_accuracy": [0.006000000052154064, 0.0033333334140479565, 0.0033333334140479565, 0.0026666666381061077, 0.0026666666381061077, 0.004000000189989805]}}]