[{"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.7871428728103638, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 6, 6, 2, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(grad, tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta))), tf.math.add(beta, tf.math.pow(tf.math.negative(grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.23267135662945, 1.8535737959054703, 1.302233784363459, 1.0956071183477112, 0.9603743748091089, 0.9021832127817366, 0.8705998784546933, 0.8254806514917473, 0.8107320430130456, 0.7685473886982892, 0.7490806933942645, 0.7375838497075202, 0.7394647121886063, 0.7090320453557514, 0.6905708617978895, 0.6962018695883448, 0.6735671787387297, 0.6676489927387351, 0.6647926861536643, 0.6558399630921817, 0.6573864549000848, 0.6304778769472571, 0.6281789676498476, 0.623724618694644, 0.6193236576929825, 0.6158293251899318, 0.6055278090469558, 0.6123300584205594, 0.6011031338835059, 0.5876300838944336, 0.5876308642657457, 0.5789763546654451, 0.5751689976594704, 0.5792542210486209, 0.5693330467259013], "accuracy": [0.23695680499076843, 0.4325716495513916, 0.5577862858772278, 0.6112799048423767, 0.6618676781654358, 0.6782459616661072, 0.678642213344574, 0.69673752784729, 0.6991150379180908, 0.7259278893470764, 0.7302865982055664, 0.7244749665260315, 0.7300224304199219, 0.7375511527061462, 0.7404569983482361, 0.743891179561615, 0.7494386434555054, 0.7500990629196167, 0.7471932172775269, 0.759080708026886, 0.7535332441329956, 0.767401933670044, 0.767401933670044, 0.7675340175628662, 0.7691190242767334, 0.7700436115264893, 0.7717606425285339, 0.7662131786346436, 0.7765156626701355, 0.7878747582435608, 0.7829877138137817, 0.7869502305984497, 0.7860256433486938, 0.7815347909927368, 0.7849689722061157], "val_loss": [1.7674048968723841, 1.1580671242305212, 0.8284179142543248, 0.7183773687907627, 0.7206509624208722, 0.6443711519241333, 0.5871153048106602, 0.6074377298355103, 0.5574034622737339, 0.5436085973467145, 0.529086743082319, 0.5515218462262835, 0.5200741291046143, 0.5139175142560687, 0.535866243498666, 0.5025525774274554, 0.49484009402138845, 0.4948174101965768, 0.491006680897304, 0.4886273315974644, 0.48197981289454866, 0.48827554498400005, 0.4659128189086914, 0.46911868027278353, 0.47237612519945416, 0.46703394821711947, 0.4763563190187727, 0.489345840045384, 0.45984877007348196, 0.45006264959062847, 0.4497520497867039, 0.4545926707131522, 0.44148774657930645, 0.44960477522441317, 0.4580194779804775], "val_accuracy": [0.5233333110809326, 0.5696666836738586, 0.6600000262260437, 0.7133333086967468, 0.7026666402816772, 0.7163333296775818, 0.7483333349227905, 0.7203333377838135, 0.7546666860580444, 0.7683333158493042, 0.7726666927337646, 0.7666666507720947, 0.7763333320617676, 0.7670000195503235, 0.7620000243186951, 0.7766666412353516, 0.7900000214576721, 0.7786666750907898, 0.7913333177566528, 0.7933333516120911, 0.7893333435058594, 0.781000018119812, 0.8043333292007446, 0.7983333468437195, 0.79666668176651, 0.8066666722297668, 0.7760000228881836, 0.7836666703224182, 0.8016666769981384, 0.8133333325386047, 0.8056666851043701, 0.8036666512489319, 0.8113333582878113, 0.8033333420753479, 0.8029999732971191]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [5, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 47], [1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 4, 2, 6, 0, 2, 8, 0, 2, 4, 4, 9, 8, 8, 1, 5, 9, 4, 6, 2, 4, 8, 1, 7, 8], [3, 3, 3, 3, 2, 3, 2, 3, 3, 0, 1, 1, 5], [85, 54, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [56, 38]], "fitness": -0.42800000309944153, "mapping_values": [1, 4, 4, 4, 0, 2, 10, 10, 5, 5, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.divide_no_nan(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.pow(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(grad)))), tf.math.add(beta, grad))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.209539606366191, 2.5095063350172624, 2.2598177766944785, 2.221451191208728, 2.1934354889583374, 1.9717614759685278, 2.2661440322081394, 2.3070097147843716, 2.304192572631352, 2.304966932967386, 2.3035050497834773], "accuracy": [0.19614318013191223, 0.1352529376745224, 0.16682076454162598, 0.1942940205335617, 0.21371020376682281, 0.3261128067970276, 0.17210407555103302, 0.10051512718200684, 0.09655263274908066, 0.09470347315073013, 0.09325055778026581], "val_loss": [1.920323371887207, 1.9721274375915527, 1.9761487415858678, 1.819711480821882, 1.6687482765742712, 1.2422748293195451, 1.9767627034868513, 1.9741591726030623, 1.9738155092511858, 1.973696299961635, 1.9738469123840332], "val_accuracy": [0.23199999332427979, 0.09833333641290665, 0.09733333438634872, 0.3019999861717224, 0.3529999852180481, 0.5230000019073486, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.10400000214576721, 0.09733333438634872]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [5, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [69, 47], [1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [7, 4, 2, 6, 0, 2, 8, 0, 2, 4, 4, 9, 8, 8, 1, 5, 9, 4, 6, 2, 4, 8, 1, 7, 8], [3, 1, 2, 3, 2, 3, 2, 2, 3, 0, 1, 1, 5], [85, 54, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [56, 38]], "fitness": -0.42800000309944153, "mapping_values": [1, 2, 2, 1, 1, 0, 13, 13, 7, 6, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, grad)))))), tf.math.add(beta, beta))), tf.math.sqrt(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.209539606366191, 2.5095063350172624, 2.2598177766944785, 2.221451191208728, 2.1934354889583374, 1.9717614759685278, 2.2661440322081394, 2.3070097147843716, 2.304192572631352, 2.304966932967386, 2.3035050497834773], "accuracy": [0.19614318013191223, 0.1352529376745224, 0.16682076454162598, 0.1942940205335617, 0.21371020376682281, 0.3261128067970276, 0.17210407555103302, 0.10051512718200684, 0.09655263274908066, 0.09470347315073013, 0.09325055778026581], "val_loss": [1.920323371887207, 1.9721274375915527, 1.9761487415858678, 1.819711480821882, 1.6687482765742712, 1.2422748293195451, 1.9767627034868513, 1.9741591726030623, 1.9738155092511858, 1.973696299961635, 1.9738469123840332], "val_accuracy": [0.23199999332427979, 0.09833333641290665, 0.09733333438634872, 0.3019999861717224, 0.3529999852180481, 0.5230000019073486, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.10400000214576721, 0.09733333438634872]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 6, 0, 1], [2, 0, 0, 3, 1, 0], [5, 57, 79], [1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [7, 4, 2, 6, 0, 2, 8, 0, 2, 4, 6, 5, 3, 8, 1, 5, 9, 0, 6, 2, 4, 8, 1, 7, 8], [2, 0, 3, 3, 0, 1, 2, 3, 3, 0, 1, 2], [85, 54, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [56, 38]], "fitness": -0.42800000309944153, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 9, 7, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(tf.math.add(beta, beta), tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))))), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.negative(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.209539606366191, 2.5095063350172624, 2.2598177766944785, 2.221451191208728, 2.1934354889583374, 1.9717614759685278, 2.2661440322081394, 2.3070097147843716, 2.304192572631352, 2.304966932967386, 2.3035050497834773], "accuracy": [0.19614318013191223, 0.1352529376745224, 0.16682076454162598, 0.1942940205335617, 0.21371020376682281, 0.3261128067970276, 0.17210407555103302, 0.10051512718200684, 0.09655263274908066, 0.09470347315073013, 0.09325055778026581], "val_loss": [1.920323371887207, 1.9721274375915527, 1.9761487415858678, 1.819711480821882, 1.6687482765742712, 1.2422748293195451, 1.9767627034868513, 1.9741591726030623, 1.9738155092511858, 1.973696299961635, 1.9738469123840332], "val_accuracy": [0.23199999332427979, 0.09833333641290665, 0.09733333438634872, 0.3019999861717224, 0.3529999852180481, 0.5230000019073486, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.10400000214576721, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 5, 6, 0, 1], [1, 0, 0, 3, 1, 0], [41, 57, 79], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [7, 4, 2, 6, 0, 5, 8, 8, 2, 4, 4, 1, 3, 2, 0, 5, 9, 4, 6, 2, 4, 8, 1, 7, 8], [0, 3, 1, 0, 0, 1, 3, 3, 1, 0, 1, 1, 5], [17, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 1, 3, 3, 9], [3, 1, 3, 1], [56, 38]], "fitness": -0.42800000309944153, "mapping_values": [1, 11, 11, 6, 5, 2, 27, 27, 17, 10, 5, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, alpha)), tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), grad)))))), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.sqrt(grad))))), tf.math.add(beta, alpha))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.pow(tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, alpha), tf.math.negative(tf.math.square(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad))), grad))), tf.math.add(beta, alpha))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.209539606366191, 2.5095063350172624, 2.2598177766944785, 2.221451191208728, 2.1934354889583374, 1.9717614759685278, 2.2661440322081394, 2.3070097147843716, 2.304192572631352, 2.304966932967386, 2.3035050497834773], "accuracy": [0.19614318013191223, 0.1352529376745224, 0.16682076454162598, 0.1942940205335617, 0.21371020376682281, 0.3261128067970276, 0.17210407555103302, 0.10051512718200684, 0.09655263274908066, 0.09470347315073013, 0.09325055778026581], "val_loss": [1.920323371887207, 1.9721274375915527, 1.9761487415858678, 1.819711480821882, 1.6687482765742712, 1.2422748293195451, 1.9767627034868513, 1.9741591726030623, 1.9738155092511858, 1.973696299961635, 1.9738469123840332], "val_accuracy": [0.23199999332427979, 0.09833333641290665, 0.09733333438634872, 0.3019999861717224, 0.3529999852180481, 0.5230000019073486, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.10400000214576721, 0.09733333438634872]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 6, 9, 6, 0, 1], [1, 2, 0, 2, 1, 0], [5, 0], [1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [7, 4, 2, 6, 5, 2, 8, 0, 2, 4, 4, 1, 3, 8, 1, 5, 9, 4, 6, 2, 4, 8, 1, 7, 8], [3, 2, 3, 3, 2, 3, 2, 3, 3, 0, 1, 1, 5], [85, 54, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [56, 38]], "fitness": -0.42800000309944153, "mapping_values": [1, 7, 7, 4, 3, 2, 32, 32, 19, 13, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.sqrt(beta), tf.math.add(beta, grad))))), tf.math.add(beta, grad))), tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.pow(tf.math.add(beta, beta), tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.subtract(tf.math.square(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta)))), tf.math.pow(tf.math.add(beta, grad), tf.math.divide_no_nan(tf.math.add(beta, grad), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, alpha))), alpha)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.209539606366191, 2.5095063350172624, 2.2598177766944785, 2.221451191208728, 2.1934354889583374, 1.9717614759685278, 2.2661440322081394, 2.3070097147843716, 2.304192572631352, 2.304966932967386, 2.3035050497834773], "accuracy": [0.19614318013191223, 0.1352529376745224, 0.16682076454162598, 0.1942940205335617, 0.21371020376682281, 0.3261128067970276, 0.17210407555103302, 0.10051512718200684, 0.09655263274908066, 0.09470347315073013, 0.09325055778026581], "val_loss": [1.920323371887207, 1.9721274375915527, 1.9761487415858678, 1.819711480821882, 1.6687482765742712, 1.2422748293195451, 1.9767627034868513, 1.9741591726030623, 1.9738155092511858, 1.973696299961635, 1.9738469123840332], "val_accuracy": [0.23199999332427979, 0.09833333641290665, 0.09733333438634872, 0.3019999861717224, 0.3529999852180481, 0.5230000019073486, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.10400000214576721, 0.09733333438634872]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [5, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [7, 4, 2, 6, 0, 2, 8, 6, 6, 0, 4, 8, 4, 6, 4, 5, 9, 4, 6, 2, 4, 8, 1, 7, 8], [3, 3, 2, 3, 3, 3, 2, 3, 3, 3, 1, 1, 5], [85, 54, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [56, 38]], "fitness": -0.42800000309944153, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 8, 7, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(grad, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, grad))))), tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(beta, grad), beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.209539606366191, 2.5095063350172624, 2.2598177766944785, 2.221451191208728, 2.1934354889583374, 1.9717614759685278, 2.2661440322081394, 2.3070097147843716, 2.304192572631352, 2.304966932967386, 2.3035050497834773], "accuracy": [0.19614318013191223, 0.1352529376745224, 0.16682076454162598, 0.1942940205335617, 0.21371020376682281, 0.3261128067970276, 0.17210407555103302, 0.10051512718200684, 0.09655263274908066, 0.09470347315073013, 0.09325055778026581], "val_loss": [1.920323371887207, 1.9721274375915527, 1.9761487415858678, 1.819711480821882, 1.6687482765742712, 1.2422748293195451, 1.9767627034868513, 1.9741591726030623, 1.9738155092511858, 1.973696299961635, 1.9738469123840332], "val_accuracy": [0.23199999332427979, 0.09833333641290665, 0.09733333438634872, 0.3019999861717224, 0.3529999852180481, 0.5230000019073486, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.10400000214576721, 0.09733333438634872]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [2, 6, 2, 6, 0, 1], [1, 2, 0, 0, 1, 0], [5, 47, 85], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [7, 4, 2, 6, 0, 2, 8, 0, 2, 4, 4, 1, 3, 8, 1, 5, 9, 4, 6, 2, 4, 8, 1, 7, 8], [3, 3, 2, 3, 1, 3, 2, 3, 3, 0, 1, 1, 5], [85, 54, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [56, 38]], "fitness": -0.42800000309944153, "mapping_values": [1, 12, 12, 6, 6, 3, 13, 13, 7, 6, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(grad, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(beta, grad)))), tf.math.add(beta, alpha))), tf.math.add(beta, tf.math.sqrt(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.209539606366191, 2.5095063350172624, 2.2598177766944785, 2.221451191208728, 2.1934354889583374, 1.9717614759685278, 2.2661440322081394, 2.3070097147843716, 2.304192572631352, 2.304966932967386, 2.3035050497834773], "accuracy": [0.19614318013191223, 0.1352529376745224, 0.16682076454162598, 0.1942940205335617, 0.21371020376682281, 0.3261128067970276, 0.17210407555103302, 0.10051512718200684, 0.09655263274908066, 0.09470347315073013, 0.09325055778026581], "val_loss": [1.920323371887207, 1.9721274375915527, 1.9761487415858678, 1.819711480821882, 1.6687482765742712, 1.2422748293195451, 1.9767627034868513, 1.9741591726030623, 1.9738155092511858, 1.973696299961635, 1.9738469123840332], "val_accuracy": [0.23199999332427979, 0.09833333641290665, 0.09733333438634872, 0.3019999861717224, 0.3529999852180481, 0.5230000019073486, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.10400000214576721, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 4, 9, 9, 0], [3, 0, 0, 3, 1, 0], [5, 47], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [0, 4, 2, 8, 7, 9, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 2, 3, 0, 1, 2, 3, 3, 0, 1, 1, 5], [28, 26, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [0, 3], [78], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0], [3, 3, 9, 3, 9], [1, 3, 3, 1], [56, 38]], "fitness": -0.30399999022483826, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 1, 1, 0, 1, 1, 3, 1, 2, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, sigma)", "other_info": {"loss": [3.2003141149884407, 2.3457539048822817, 2.271722071489811, 2.2584366177712702, 2.231209723610274, 2.212877991712482, 2.306352597343577, 2.3041275512462027], "accuracy": [0.19601109623908997, 0.1394795924425125, 0.1258750557899475, 0.17223615944385529, 0.15968827903270721, 0.2281072586774826, 0.09285431355237961, 0.09919429570436478], "val_loss": [1.9153735297066825, 1.9737814494541712, 1.5900953497205461, 1.4925239426749093, 1.9575633321489607, 1.9777428082057409, 1.9741829463413783, 1.9738783836364746], "val_accuracy": [0.25966668128967285, 0.09833333641290665, 0.3996666669845581, 0.3853333294391632, 0.12099999934434891, 0.10400000214576721, 0.10000000149011612, 0.09733333438634872]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57, 79], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [7, 4, 2, 6, 0, 2, 8, 0, 2, 4, 5, 9, 3, 8, 1, 6, 9, 4, 6, 2, 4, 8, 1, 7, 8], [3, 2, 2, 3, 0, 0, 2, 3, 3, 0, 3, 2], [85, 54, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [56, 38]], "fitness": -0.3028571307659149, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(grad, beta)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(beta, tf.math.add(beta, tf.math.negative(grad)))), tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.423036665381725, 2.299428381294449, 2.2837824406420406, 2.2485312844594993, 2.221943886209835, 2.3049387074008107, 2.28823722588183, 2.3805404435279836, 2.292256508930374, 2.314739653714943, 2.3034723899651355, 2.300006319581872], "accuracy": [0.25822216272354126, 0.12468630075454712, 0.16074495017528534, 0.16061286628246307, 0.18716153502464294, 0.10289261490106583, 0.14238542318344116, 0.12362963706254959, 0.13129045069217682, 0.1002509593963623, 0.10394927859306335, 0.11266675591468811], "val_loss": [1.9741193907601493, 1.947298322405134, 1.9605840955461775, 1.944314820425851, 1.977707862854004, 1.972806658063616, 2.088150978088379, 1.973170621054513, 1.9793602398463659, 1.974139622279576, 1.9730801582336426, 1.9423206874302454], "val_accuracy": [0.10000000149011612, 0.2919999957084656, 0.17900000512599945, 0.23533333837985992, 0.09733333438634872, 0.10400000214576721, 0.3179999887943268, 0.09733333438634872, 0.10000000149011612, 0.10233332961797714, 0.16066665947437286, 0.1770000010728836]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1], [2, 6, 9, 4, 0, 4], [2, 0, 0, 3, 1, 0], [5, 57, 79], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [7, 4, 2, 6, 0, 2, 8, 2, 2, 4, 4, 9, 8, 8, 1, 9, 9, 4, 6, 2, 4, 8, 1, 7, 8], [2, 0, 2, 3, 0, 1, 2, 3, 0, 0], [85, 29, 99, 35, 1, 78, 2, 15], [0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0], [3, 3, 0, 3], [4, 3], [], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 5, 9], [2, 3, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 2, 25, 25, 16, 9, 5, 8, 5, 4, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta))))), grad), tf.math.add(tf.math.add(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), alpha), tf.math.add(beta, beta))))), tf.math.pow(tf.math.add(beta, tf.math.pow(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))))))))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.multiply(sigma, sigma)))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [0, 6, 2, 7, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 1, 2, 3, 3, 0], [66, 16, 37, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 4, 2, 2, 0, 4, 3, 1, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [439633.7840078208, 8383178.582485802, 37867569.5670321, 108051461.62779026, 231216958.13604543, 419191938.55289924], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.1006472036242485, 0.09694888442754745, 0.10276053100824356, 0.10513802617788315], "val_loss": [1656600.0, 13193702.857142856, 44464147.428571425, 105320571.42857143, 205615593.14285713, 355202157.71428573], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 2, 0, 3, 1, 0], [5, 57, 79], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 6, 0, 2, 8, 0, 2, 4, 4, 1, 3, 8, 1, 5, 9, 4, 6, 2, 4, 8, 1, 7, 8], [3, 0, 2, 1, 0, 1, 2, 3, 3, 0], [85, 54, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [9, 1, 3, 3, 6], [1, 1, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302426423788417, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [7, 3, 2, 3, 0, 2, 3, 5, 2, 1, 4, 9, 9, 1, 1, 8, 9, 0, 2, 0], [1, 0, 2, 3, 0, 1, 2, 3, 3, 3, 1], [64, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 2, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 30, 30, 20, 10, 5, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.multiply(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta)), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.add(beta, alpha))))))))))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))), grad)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302426423788417, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [8, 8, 3, 9, 0], [1, 2, 0, 3, 1, 0], [5, 57], [1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [5, 4, 2, 4, 0, 2, 3, 5, 6, 9, 9, 9, 8, 1, 6, 8, 9, 0], [3, 0, 3, 2, 2, 0, 2, 3, 3, 0], [81, 54, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0], [9, 3, 9, 3, 9], [0, 3, 3, 1], [85, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302426423788417, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [5, 2, 9, 9, 0], [0, 0, 0, 3, 1, 0], [15, 47], [1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 2, 2, 8, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 3, 2, 3, 2, 3, 3, 0, 1, 1, 5], [85, 54, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0], [4, 3, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 2, 7, 7, 3, 4, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, grad))), tf.math.add(beta, grad)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.302487589884365, 2.302679014149249, 2.3026956799259874, 2.3026861622348958, 2.3026734409929346, 2.3026412397154634], "accuracy": [0.0952318087220192, 0.09602430462837219, 0.09113723784685135, 0.09259014576673508, 0.09008057415485382, 0.09826971590518951], "val_loss": [1.973649501800537, 1.9736582892281669, 1.973665509905134, 1.973686354500907, 1.9736765452793665, 1.9736473900931222], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [7, 4, 0, 6, 0, 2, 8, 0, 2, 5, 4, 1, 8, 8, 1, 5, 9, 4, 6, 2, 4, 8, 1, 7, 8], [3, 0, 2, 3, 3, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [2, 3, 9, 3, 9], [3, 1, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 10, 6, 1, 1, 1, 0, 1, 0, 7, 4, 3, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.negative(tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.negative(grad))), tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, beta))), grad)), tf.math.add(tf.math.add(beta, grad), tf.math.square(tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(sigma, alpha)), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07396645098924637, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 6, 0, 1], [2, 0, 0, 3, 1, 0], [5, 57, 79], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [7, 4, 2, 6, 0, 2, 8, 0, 2, 4, 4, 1, 2, 8, 1, 5, 9, 1, 6, 2, 4, 8, 1, 7, 8], [1, 0, 2, 3, 0, 1, 2, 3, 0, 3, 1, 3, 3], [85, 54, 51, 86, 1, 78, 2, 15], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 1, 3, 3, 9], [3, 1, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 28, 28, 17, 11, 4, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(tf.math.add(beta, alpha), tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), beta)))), tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.sqrt(tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, alpha), tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(beta, beta), tf.math.sqrt(tf.math.subtract(grad, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))), tf.math.square(tf.math.add(beta, grad)))), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06960771232843399, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 1, 2, 1, 2, 3, 3, 0, 4], [28, 51, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 0, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.0771428570151329, "mapping_values": [1, 1, 1, 0, 1, 0, 27, 27, 16, 11, 3, 1, 1, 0, 1, 0, 7, 4, 3, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, beta))))), tf.math.subtract(tf.math.add(beta, alpha), beta)))))))), tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))))), tf.math.sqrt(tf.math.subtract(tf.math.subtract(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)))), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), sigma)), sigma))", "other_info": {"loss": [2.299635144587537, 2.300785544116688, 2.299787151374207, 2.3013192689051922, 2.3006031021639153, 2.3007283485671075, 2.3000853082460107, 2.3001831898899, 2.299821826020063, 2.2998470402885, 2.2997736698128466, 2.2999724280234295, 2.3000144089658607, 2.2991140038030906, 2.299736508540883, 2.300525912487779, 2.3004846310240796, 2.3002253356248854, 2.3012854144431816, 2.300791284175455], "accuracy": [0.09377889335155487, 0.0948355570435524, 0.10342095047235489, 0.09457138925790787, 0.0944393053650856, 0.09457138925790787, 0.09549596905708313, 0.09694888442754745, 0.1002509593963623, 0.10077928751707077, 0.09721305221319199, 0.09879804402589798, 0.10355303436517715, 0.10170386731624603, 0.09945846349000931, 0.0936468094587326, 0.09668471664190292, 0.09668471664190292, 0.09351472556591034, 0.0948355570435524], "val_loss": [1.9700939314705985, 1.9697282654898507, 1.9695347377232142, 1.9693525178091866, 1.9693359647478377, 1.96932738167899, 1.9694294248308455, 1.9694196837288993, 1.9693710463387626, 1.9692941393171037, 1.9692230905805315, 1.9692901883806502, 1.9693147795540946, 1.969445092337472, 1.9696274484906877, 1.9698032651628767, 1.97007383619036, 1.9702745846339635, 1.9704325539725167, 1.9706026485988073], "val_accuracy": [0.0430000014603138, 0.04933333396911621, 0.05066666752099991, 0.05700000002980232, 0.05833333358168602, 0.06199999898672104, 0.06700000166893005, 0.07000000029802322, 0.07100000232458115, 0.07500000298023224, 0.0729999989271164, 0.07833333313465118, 0.07800000160932541, 0.07699999958276749, 0.0793333351612091, 0.07800000160932541, 0.0729999989271164, 0.07066666334867477, 0.070333331823349, 0.07400000095367432]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [5, 6, 9, 9, 0], [0, 0, 0, 3, 1, 0], [5, 57], [1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [7, 4, 2, 6, 0, 2, 8, 0, 2, 4, 4, 9, 8, 8, 1, 5, 9, 4, 6, 2, 4, 8, 1, 7, 8], [0, 3, 4, 3, 0, 1, 3, 3, 3, 0], [85, 54, 99, 7, 1, 78, 2, 15], [1, 0, 0, 1, 1], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0], [1, 3, 9, 3, 9], [1, 3, 3, 1], [56, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 4, 4, 3, 1, 2, 14, 14, 8, 6, 2, 1, 0, 0, 0, 0, 5, 2, 3, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))))))), tf.math.negative(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(alpha, sigma), sigma)", "other_info": {"loss": [2.299873562127434, 2.3016408727688953, 2.300905498043106, 2.302912334078858, 2.302145590037088, 2.302653860878935], "accuracy": [0.09245806187391281, 0.09285431355237961, 0.09774138033390045, 0.08942015469074249, 0.09272222965955734, 0.09206181764602661], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]