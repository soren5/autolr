[{"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.7808571457862854, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [1.988414923213555, 1.3957917605093866, 1.0391380326182, 0.8978753131787853, 0.8077439580217501, 0.7662677374482548, 0.7196070460469542, 0.6931731161298438, 0.695020666117398, 0.6785949285256155, 0.6420274012360543, 0.6284202531722117, 0.6256467325654973, 0.590599258168656, 0.603832442857145, 0.5576544773891979, 0.5714421241731534, 0.5555911993605664], "accuracy": [0.3269053101539612, 0.5149914026260376, 0.6161669492721558, 0.6715096831321716, 0.6931713223457336, 0.7111346125602722, 0.72672039270401, 0.733060359954834, 0.7354378700256348, 0.7437590956687927, 0.7512878179550171, 0.7609298825263977, 0.7592127919197083, 0.778761088848114, 0.7720248103141785, 0.7905164361000061, 0.7803460359573364, 0.7882710099220276], "val_loss": [1.4519902978624617, 0.9312387193952288, 0.6870298555919102, 0.5903629575456891, 0.6190341711044312, 0.5411494289125715, 0.5283504724502563, 0.5207265104566302, 0.5379705258778164, 0.5206151008605957, 0.4817030940737043, 0.5320533343723842, 0.46703405891145977, 0.47176264013562885, 0.46406165191105436, 0.4808775356837681, 0.46791752747126986, 0.47711641447884695], "val_accuracy": [0.5166666507720947, 0.6473333239555359, 0.6836666464805603, 0.7429999709129333, 0.7233333587646484, 0.7559999823570251, 0.7789999842643738, 0.7866666913032532, 0.7416666746139526, 0.781000018119812, 0.7870000004768372, 0.7509999871253967, 0.8040000200271606, 0.7976666688919067, 0.8040000200271606, 0.7976666688919067, 0.7960000038146973, 0.7913333177566528]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1], [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [4, 8, 6, 6, 0, 3, 4, 1, 5, 4, 4, 8, 8], [3, 0, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [64, 86, 50, 99, 56, 21, 54], [1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.7808571457862854, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, grad), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [1.988414923213555, 1.3957917605093866, 1.0391380326182, 0.8978753131787853, 0.8077439580217501, 0.7662677374482548, 0.7196070460469542, 0.6931731161298438, 0.695020666117398, 0.6785949285256155, 0.6420274012360543, 0.6284202531722117, 0.6256467325654973, 0.590599258168656, 0.603832442857145, 0.5576544773891979, 0.5714421241731534, 0.5555911993605664], "accuracy": [0.3269053101539612, 0.5149914026260376, 0.6161669492721558, 0.6715096831321716, 0.6931713223457336, 0.7111346125602722, 0.72672039270401, 0.733060359954834, 0.7354378700256348, 0.7437590956687927, 0.7512878179550171, 0.7609298825263977, 0.7592127919197083, 0.778761088848114, 0.7720248103141785, 0.7905164361000061, 0.7803460359573364, 0.7882710099220276], "val_loss": [1.4519902978624617, 0.9312387193952288, 0.6870298555919102, 0.5903629575456891, 0.6190341711044312, 0.5411494289125715, 0.5283504724502563, 0.5207265104566302, 0.5379705258778164, 0.5206151008605957, 0.4817030940737043, 0.5320533343723842, 0.46703405891145977, 0.47176264013562885, 0.46406165191105436, 0.4808775356837681, 0.46791752747126986, 0.47711641447884695], "val_accuracy": [0.5166666507720947, 0.6473333239555359, 0.6836666464805603, 0.7429999709129333, 0.7233333587646484, 0.7559999823570251, 0.7789999842643738, 0.7866666913032532, 0.7416666746139526, 0.781000018119812, 0.7870000004768372, 0.7509999871253967, 0.8040000200271606, 0.7976666688919067, 0.8040000200271606, 0.7976666688919067, 0.7960000038146973, 0.7913333177566528]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [5, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.7808571457862854, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [1.988414923213555, 1.3957917605093866, 1.0391380326182, 0.8978753131787853, 0.8077439580217501, 0.7662677374482548, 0.7196070460469542, 0.6931731161298438, 0.695020666117398, 0.6785949285256155, 0.6420274012360543, 0.6284202531722117, 0.6256467325654973, 0.590599258168656, 0.603832442857145, 0.5576544773891979, 0.5714421241731534, 0.5555911993605664], "accuracy": [0.3269053101539612, 0.5149914026260376, 0.6161669492721558, 0.6715096831321716, 0.6931713223457336, 0.7111346125602722, 0.72672039270401, 0.733060359954834, 0.7354378700256348, 0.7437590956687927, 0.7512878179550171, 0.7609298825263977, 0.7592127919197083, 0.778761088848114, 0.7720248103141785, 0.7905164361000061, 0.7803460359573364, 0.7882710099220276], "val_loss": [1.4519902978624617, 0.9312387193952288, 0.6870298555919102, 0.5903629575456891, 0.6190341711044312, 0.5411494289125715, 0.5283504724502563, 0.5207265104566302, 0.5379705258778164, 0.5206151008605957, 0.4817030940737043, 0.5320533343723842, 0.46703405891145977, 0.47176264013562885, 0.46406165191105436, 0.4808775356837681, 0.46791752747126986, 0.47711641447884695], "val_accuracy": [0.5166666507720947, 0.6473333239555359, 0.6836666464805603, 0.7429999709129333, 0.7233333587646484, 0.7559999823570251, 0.7789999842643738, 0.7866666913032532, 0.7416666746139526, 0.781000018119812, 0.7870000004768372, 0.7509999871253967, 0.8040000200271606, 0.7976666688919067, 0.8040000200271606, 0.7976666688919067, 0.7960000038146973, 0.7913333177566528]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.7808571457862854, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [1.988414923213555, 1.3957917605093866, 1.0391380326182, 0.8978753131787853, 0.8077439580217501, 0.7662677374482548, 0.7196070460469542, 0.6931731161298438, 0.695020666117398, 0.6785949285256155, 0.6420274012360543, 0.6284202531722117, 0.6256467325654973, 0.590599258168656, 0.603832442857145, 0.5576544773891979, 0.5714421241731534, 0.5555911993605664], "accuracy": [0.3269053101539612, 0.5149914026260376, 0.6161669492721558, 0.6715096831321716, 0.6931713223457336, 0.7111346125602722, 0.72672039270401, 0.733060359954834, 0.7354378700256348, 0.7437590956687927, 0.7512878179550171, 0.7609298825263977, 0.7592127919197083, 0.778761088848114, 0.7720248103141785, 0.7905164361000061, 0.7803460359573364, 0.7882710099220276], "val_loss": [1.4519902978624617, 0.9312387193952288, 0.6870298555919102, 0.5903629575456891, 0.6190341711044312, 0.5411494289125715, 0.5283504724502563, 0.5207265104566302, 0.5379705258778164, 0.5206151008605957, 0.4817030940737043, 0.5320533343723842, 0.46703405891145977, 0.47176264013562885, 0.46406165191105436, 0.4808775356837681, 0.46791752747126986, 0.47711641447884695], "val_accuracy": [0.5166666507720947, 0.6473333239555359, 0.6836666464805603, 0.7429999709129333, 0.7233333587646484, 0.7559999823570251, 0.7789999842643738, 0.7866666913032532, 0.7416666746139526, 0.781000018119812, 0.7870000004768372, 0.7509999871253967, 0.8040000200271606, 0.7976666688919067, 0.8040000200271606, 0.7976666688919067, 0.7960000038146973, 0.7913333177566528]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 0, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [9, 86, 50, 99, 56, 21, 54], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [6, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [12, 47, 50, 41, 34]], "fitness": -0.46457141637802124, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.3014126726192585, 2.3013345923138457, 2.2994702932715274, 2.2984829483377367, 2.2972761476831884, 2.297578095004165, 2.29449205649858, 2.294866209819946, 2.2947366048694207, 2.293072254430065, 2.2908187094869676, 2.290630069154995, 2.2884830911130227, 2.289939029892879, 2.2854679232307507, 2.285825333716831, 2.285061662884562, 2.2830493233191604, 2.282356680628331, 2.2835809506162, 2.2794070176759558, 2.27857505678422, 2.278388817517229, 2.276717260041021, 2.2774241274500002, 2.275886336621229, 2.274592203061657, 2.273597509538839, 2.271465386476468, 2.2697467075252673, 2.269391934160921, 2.269110776146468, 2.268231822546557, 2.265743045318144, 2.2678317263488204, 2.263274864450721, 2.261589336011073, 2.2631665268405365, 2.2611348115694034, 2.260646397584717, 2.258367633964439, 2.259474597980538, 2.2570893318267973, 2.254931135515196, 2.2531003063979353, 2.252384191585365, 2.2502148009688074, 2.250864926110075, 2.2485670772573148, 2.24692347899656, 2.245473693406278, 2.244184663692218, 2.242231370467142, 2.2425195579090453, 2.242651095621464, 2.2396761784070454, 2.239757115987975, 2.2369376858227668, 2.2370187156724106, 2.2333998634452756, 2.2334049773049345, 2.2327121451640757, 2.229497338393109, 2.227482612059652, 2.227552896414482, 2.226802810402657, 2.224373352226879, 2.224711214341917, 2.221650262912503, 2.2214530714750764, 2.219159900772101, 2.216336351265414, 2.215791348122398, 2.213994785023403, 2.212411347003645, 2.211584689893963, 2.2077640246060137, 2.2068783010647297, 2.206328814827361, 2.2022041810612243, 2.2003782120174216, 2.200119946374869, 2.197639407168101, 2.196364757265507, 2.193100143118211, 2.1943510389283913, 2.1917185778032757, 2.1893861098233436, 2.187553070665681, 2.1849523539146993, 2.184601461662199, 2.179248536787233, 2.177047605732444, 2.17763757967064, 2.1726197476526212, 2.172235575743859, 2.1700703893056117, 2.1715925731805052, 2.1642830311393912, 2.1636394988969334], "accuracy": [0.09760929644107819, 0.09126931428909302, 0.10038304328918457, 0.09642054885625839, 0.10196803510189056, 0.10791176557540894, 0.11121384054422379, 0.10738343745470047, 0.10698718577623367, 0.1158367469906807, 0.1158367469906807, 0.11887465417385101, 0.11927089840173721, 0.1224408894777298, 0.13195087015628815, 0.13380002975463867, 0.1398758441209793, 0.14317791163921356, 0.14436666667461395, 0.1364416927099228, 0.151234969496727, 0.14938580989837646, 0.1546691358089447, 0.1608770340681076, 0.1504424810409546, 0.15915995836257935, 0.17078325152397156, 0.16166952252388, 0.1702549159526825, 0.175670325756073, 0.18042530119419098, 0.1744815707206726, 0.18372738361358643, 0.1904636174440384, 0.18372738361358643, 0.19535067677497864, 0.1990489959716797, 0.19191652536392212, 0.19838859140872955, 0.19984149932861328, 0.21080438792705536, 0.20036983489990234, 0.2122572958469391, 0.21120063960552216, 0.21991810202598572, 0.21820102632045746, 0.22137102484703064, 0.21661603450775146, 0.22982433438301086, 0.23286223411560059, 0.2366926372051239, 0.24039097130298615, 0.23840972781181335, 0.2347113937139511, 0.244485542178154, 0.24620261788368225, 0.2479196935892105, 0.2538634240627289, 0.2542596757411957, 0.25597676634788513, 0.26258090138435364, 0.26284506916999817, 0.2709021270275116, 0.2715625464916229, 0.2715625464916229, 0.2662792205810547, 0.26799631118774414, 0.26760005950927734, 0.2751287817955017, 0.275260865688324, 0.2845066785812378, 0.2817329168319702, 0.2884691655635834, 0.29084664583206177, 0.28622373938560486, 0.2954695522785187, 0.30022454261779785, 0.29863953590393066, 0.28978997468948364, 0.3008849620819092, 0.30299827456474304, 0.30762118101119995, 0.3063003420829773, 0.3057720363140106, 0.31541407108306885, 0.30762118101119995, 0.31158366799354553, 0.313300758600235, 0.31924447417259216, 0.32122573256492615, 0.31699907779693604, 0.3329811096191406, 0.3311319649219513, 0.3323206901550293, 0.33086779713630676, 0.3299432098865509, 0.3327169418334961, 0.33245277404785156, 0.33945319056510925, 0.3354906737804413], "val_loss": [1.9695602825709753, 1.9685379437037878, 1.967536381312779, 1.9665134974888392, 1.9655162947518485, 1.9645087378365653, 1.9634944370814733, 1.962479591369629, 1.9614737374441964, 1.9604745592389787, 1.959468160356794, 1.9584708895002092, 1.9574675559997559, 1.9564711025782995, 1.955470425742013, 1.9544709069388253, 1.9534614426749093, 1.9524528639657157, 1.9514460563659668, 1.9504502841404505, 1.949453898838588, 1.9484460694449288, 1.947437354496547, 1.946427890232631, 1.945413521357945, 1.9443940435137068, 1.9433554921831404, 1.942323889051165, 1.9412856101989746, 1.9402448109218053, 1.9392060552324568, 1.9381564685276575, 1.9371085166931152, 1.936042308807373, 1.9349782126290458, 1.9339047840663366, 1.9328304018293108, 1.9317628315516882, 1.9306787763323103, 1.9295753070286341, 1.9284734725952148, 1.9273759978158134, 1.9262569291251046, 1.9251307078770228, 1.9239790780203683, 1.9228215898786272, 1.9216596058436803, 1.9204862458365304, 1.9193008967808314, 1.9181020600455148, 1.9168970244271415, 1.9156884465898787, 1.9144481250217982, 1.9132069860185896, 1.9119655064174108, 1.9106942585536413, 1.9094231469290597, 1.9081380026681083, 1.9068401881626673, 1.9055188042776925, 1.9041874068123954, 1.902852943965367, 1.9014991351536341, 1.9001233918326241, 1.8987390654427665, 1.8973387309483118, 1.895926066807338, 1.8945036615644182, 1.893059594290597, 1.8915987695966447, 1.8901139668055944, 1.8886046409606934, 1.887094293321882, 1.8855724334716797, 1.8840205328805106, 1.8824541909354073, 1.8808491570608956, 1.8792243003845215, 1.8775993074689592, 1.8759350095476424, 1.874244553702218, 1.8725481033325195, 1.870828083583287, 1.8690714836120605, 1.8672993523733956, 1.8655123710632324, 1.863710812159947, 1.8618882043021066, 1.8600245884486608, 1.8581364495413644, 1.8562243325369698, 1.8542753628322057, 1.8523025512695312, 1.8503127779279436, 1.848271438053676, 1.846224648611886, 1.8441520418439592, 1.8420729637145996, 1.8399222918919154, 1.8377477100917272], "val_accuracy": [0.04500000178813934, 0.05233333259820938, 0.05999999865889549, 0.06433333456516266, 0.0729999989271164, 0.07900000363588333, 0.08933333307504654, 0.10000000149011612, 0.11133333295583725, 0.12099999934434891, 0.1289999932050705, 0.1393333375453949, 0.14766666293144226, 0.16033333539962769, 0.17100000381469727, 0.1809999942779541, 0.19099999964237213, 0.20200000703334808, 0.21266666054725647, 0.22200000286102295, 0.22599999606609344, 0.2356666624546051, 0.24266666173934937, 0.25066667795181274, 0.26100000739097595, 0.26866665482521057, 0.2770000100135803, 0.28700000047683716, 0.2926666736602783, 0.2996666729450226, 0.30799999833106995, 0.31333333253860474, 0.3199999928474426, 0.3240000009536743, 0.3306666612625122, 0.33500000834465027, 0.34200000762939453, 0.3466666638851166, 0.3499999940395355, 0.35333332419395447, 0.35766667127609253, 0.3610000014305115, 0.3646666705608368, 0.3659999966621399, 0.36766666173934937, 0.37066665291786194, 0.3736666738986969, 0.37700000405311584, 0.3799999952316284, 0.38233333826065063, 0.38333332538604736, 0.3856666684150696, 0.3880000114440918, 0.38999998569488525, 0.39233332872390747, 0.3946666717529297, 0.3970000147819519, 0.4000000059604645, 0.40166667103767395, 0.40299999713897705, 0.4036666750907898, 0.4076666533946991, 0.4086666703224182, 0.4103333353996277, 0.41366666555404663, 0.4153333306312561, 0.4169999957084656, 0.4216666519641876, 0.42399999499320984, 0.42766666412353516, 0.4286666810512543, 0.42933332920074463, 0.43066665530204773, 0.4346666634082794, 0.4359999895095825, 0.43799999356269836, 0.4390000104904175, 0.4390000104904175, 0.43966665863990784, 0.44200000166893005, 0.44466665387153625, 0.44566667079925537, 0.4483333230018616, 0.4503333270549774, 0.45233333110809326, 0.45266667008399963, 0.45500001311302185, 0.4560000002384186, 0.4573333263397217, 0.4593333303928375, 0.460999995470047, 0.46299999952316284, 0.4646666646003723, 0.46833333373069763, 0.46933332085609436, 0.4699999988079071, 0.47066667675971985, 0.47433334589004517, 0.4753333330154419, 0.47699999809265137]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [96, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [71, 47, 50, 41, 34]], "fitness": -0.28685712814331055, "mapping_values": [1, 3, 3, 2, 1, 1, 9, 9, 5, 4, 2, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))))), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [3.4203489902800164, 2.1309672957949273, 2.3704466763394243, 2.299963990821027, 2.275755201364159, 2.3039529065036533, 2.3035818706366835, 2.3030468483233197, 2.302984477569556], "accuracy": [0.17170783877372742, 0.2114647924900055, 0.11094967275857925, 0.11042134463787079, 0.146479994058609, 0.09589222073554993, 0.09615638852119446, 0.09959053993225098, 0.09668471664190292], "val_loss": [1.9591655731201172, 1.9540695462908064, 1.9739656448364258, 1.9348930631365096, 1.974491800580706, 1.9738217081342424, 1.9737342425755091, 1.9736501148768835, 1.9736268860953194], "val_accuracy": [0.18799999356269836, 0.21033333241939545, 0.10233332961797714, 0.36899998784065247, 0.09966666996479034, 0.09833333641290665, 0.10233332961797714, 0.10400000214576721, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 0, 6, 6, 0, 3, 4, 1, 5], [2, 0, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.13257142901420593, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.5115954134017406, 2.4796901208660653, 2.3080302710388914, 2.305058902611491, 2.3033063649784826, 2.303415497264779, 2.303068162994677, 2.3029348698778396, 2.3026319218664404, 2.301549639920391, 2.2805856668623194, 2.3058743314059056, 2.3034043816559033, 2.303183532614576, 2.3031209121999363], "accuracy": [0.1710474193096161, 0.15889579057693481, 0.09866596013307571, 0.09734513610601425, 0.10157178342342377, 0.09153348207473755, 0.10011887550354004, 0.09576013684272766, 0.1018359512090683, 0.11359133571386337, 0.17619864642620087, 0.09430722147226334, 0.09536388516426086, 0.0956280529499054, 0.09826971590518951], "val_loss": [1.927224976675851, 1.9805209977286202, 1.974344049181257, 1.973695891244071, 1.9736527034214564, 1.973599910736084, 1.9735266821725028, 1.9734550203595842, 1.973052978515625, 1.9684714589800154, 1.9781280245099748, 1.9741039276123047, 1.973675114767892, 1.9737368992396764, 1.9737371035984583], "val_accuracy": [0.09733333438634872, 0.09833333641290665, 0.10233332961797714, 0.09966666996479034, 0.09966666996479034, 0.09833333641290665, 0.10400000214576721, 0.09700000286102295, 0.10000000149011612, 0.17666666209697723, 0.10400000214576721, 0.10000000149011612, 0.0976666659116745, 0.09966666996479034, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [2, 2, 8, 6, 0, 8, 4, 1, 5, 5], [2, 0, 0, 2, 0, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 9, 50, 0], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 3, 0, 3, 2, 3, 3, 0], [91, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 0, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.13257142901420593, "mapping_values": [1, 12, 12, 7, 5, 3, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.sqrt(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.add(alpha, grad), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.5115954134017406, 2.4796901208660653, 2.3080302710388914, 2.305058902611491, 2.3033063649784826, 2.303415497264779, 2.303068162994677, 2.3029348698778396, 2.3026319218664404, 2.301549639920391, 2.2805856668623194, 2.3058743314059056, 2.3034043816559033, 2.303183532614576, 2.3031209121999363], "accuracy": [0.1710474193096161, 0.15889579057693481, 0.09866596013307571, 0.09734513610601425, 0.10157178342342377, 0.09153348207473755, 0.10011887550354004, 0.09576013684272766, 0.1018359512090683, 0.11359133571386337, 0.17619864642620087, 0.09430722147226334, 0.09536388516426086, 0.0956280529499054, 0.09826971590518951], "val_loss": [1.927224976675851, 1.9805209977286202, 1.974344049181257, 1.973695891244071, 1.9736527034214564, 1.973599910736084, 1.9735266821725028, 1.9734550203595842, 1.973052978515625, 1.9684714589800154, 1.9781280245099748, 1.9741039276123047, 1.973675114767892, 1.9737368992396764, 1.9737371035984583], "val_accuracy": [0.09733333438634872, 0.09833333641290665, 0.10233332961797714, 0.09966666996479034, 0.09966666996479034, 0.09833333641290665, 0.10400000214576721, 0.09700000286102295, 0.10000000149011612, 0.17666666209697723, 0.10400000214576721, 0.10000000149011612, 0.0976666659116745, 0.09966666996479034, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 0, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [6, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.13257142901420593, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.5115954134017406, 2.4796901208660653, 2.3080302710388914, 2.305058902611491, 2.3033063649784826, 2.303415497264779, 2.303068162994677, 2.3029348698778396, 2.3026319218664404, 2.301549639920391, 2.2805856668623194, 2.3058743314059056, 2.3034043816559033, 2.303183532614576, 2.3031209121999363], "accuracy": [0.1710474193096161, 0.15889579057693481, 0.09866596013307571, 0.09734513610601425, 0.10157178342342377, 0.09153348207473755, 0.10011887550354004, 0.09576013684272766, 0.1018359512090683, 0.11359133571386337, 0.17619864642620087, 0.09430722147226334, 0.09536388516426086, 0.0956280529499054, 0.09826971590518951], "val_loss": [1.927224976675851, 1.9805209977286202, 1.974344049181257, 1.973695891244071, 1.9736527034214564, 1.973599910736084, 1.9735266821725028, 1.9734550203595842, 1.973052978515625, 1.9684714589800154, 1.9781280245099748, 1.9741039276123047, 1.973675114767892, 1.9737368992396764, 1.9737371035984583], "val_accuracy": [0.09733333438634872, 0.09833333641290665, 0.10233332961797714, 0.09966666996479034, 0.09966666996479034, 0.09833333641290665, 0.10400000214576721, 0.09700000286102295, 0.10000000149011612, 0.17666666209697723, 0.10400000214576721, 0.10000000149011612, 0.0976666659116745, 0.09966666996479034, 0.09700000286102295]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 0, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50, 99, 56, 21, 54], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 3, 0, 3, 2, 3, 3, 0], [83, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [6, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 0, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.10514285415410995, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(sigma), alpha))", "other_info": {"loss": [2.301215235425843, 2.300881022113331, 2.2996094495455632, 2.299061112069435, 2.298824420332389, 2.2994215052598, 2.2982775792469674, 2.2986481563841203, 2.2988557715410285, 2.297980020484274, 2.297652392796144, 2.297975385130798, 2.297723329298689, 2.298833446228084, 2.2974127145443988, 2.298335969408726, 2.2985755269238664], "accuracy": [0.09721305221319199, 0.09166556596755981, 0.09945846349000931, 0.09853387624025345, 0.10328886657953262, 0.10157178342342377, 0.10408136248588562, 0.1006472036242485, 0.1006472036242485, 0.10645885765552521, 0.10672302544116974, 0.10355303436517715, 0.10394927859306335, 0.10659094154834747, 0.09972262382507324, 0.10606260597705841, 0.10962884873151779], "val_loss": [1.9693824223109655, 1.9685211181640625, 1.9681203024727958, 1.9678339958190918, 1.9678242547171456, 1.9677051135471888, 1.9677279336111886, 1.9675448281424386, 1.967369828905378, 1.967313630240304, 1.967487062726702, 1.96762296131679, 1.9679267747061593, 1.9681532723563058, 1.968407426561628, 1.9686572892325265, 1.9688399178641183], "val_accuracy": [0.05166666582226753, 0.05833333358168602, 0.06666667014360428, 0.0716666653752327, 0.07466666400432587, 0.08266666531562805, 0.08699999749660492, 0.08866667002439499, 0.09366666525602341, 0.09533333033323288, 0.09833333641290665, 0.1003333330154419, 0.0963333323597908, 0.09533333033323288, 0.09366666525602341, 0.09366666525602341, 0.09333333373069763]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [4, 0, 6, 6, 0, 3, 4, 1, 5, 4, 2, 4, 7, 0, 8, 4, 3, 2, 2], [2, 1, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2, 1], [8, 86, 50, 90, 83, 66], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [4, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 34, 34, 19, 15, 6, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha))), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), grad))), tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))), grad)))))), tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, grad), tf.math.add(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), tf.math.add(alpha, grad)))))))), alpha))), lambda shape,  alpha, beta, grad: tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), sigma), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [4, 8, 6, 6, 0, 3, 4, 1, 5, 4, 4, 8, 8], [2, 0, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50, 99, 56, 21, 54], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [1, 3], [], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 0, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 2, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [4, 9, 6, 6, 0, 3, 4, 1, 5, 4], [0, 0, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 2, 0, 3, 0, 3, 2, 3, 3, 0], [28, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 0, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 0, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3027142517917176, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5, 2], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50, 48], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [1, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 4, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), grad))), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))), grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [4, 8, 6, 6, 0, 3, 1, 1, 5, 4, 4, 8, 8], [2, 0, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 95, 50, 69, 6], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 2, 3, 6], [3, 1, 0, 1, 3, 2], [96, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 22, 22, 13, 9, 5, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), grad))), tf.math.add(alpha, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))))), tf.math.pow(tf.math.add(alpha, tf.math.sqrt(grad)), grad)))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(sigma, alpha), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [6, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 9, 9, 3, 6], [3, 1, 0, 1, 3, 2], [96, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 9, 9, 5, 4, 2, 1, 1, 0, 1, 0, 2, 2, 0, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))))), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1227933249.5500698, 23730417287.45582, 108639931581.21886, 305938040510.90955, 656071361806.1001, 1219877794529.399], "accuracy": [0.09721305221319199, 0.10077928751707077, 0.09932637959718704, 0.09708096832036972, 0.09985470771789551, 0.09774138033390045], "val_loss": [4726879670.857142, 37803951250.28571, 127574427940.57143, 302385004544.0, 590567122066.2858, 1020479031588.5714], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 0, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50, 99, 56, 21, 54], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 0, 3, 0, 3, 2, 3, 3, 0], [51, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [6, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [0, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1003830.4385793671, 19297310.768458594, 88209191.36917184, 248234085.4988773, 532123677.70492667, 989173387.2090873], "accuracy": [0.09721305221319199, 0.10077928751707077, 0.09932637959718704, 0.09708096832036972, 0.09972262382507324, 0.09760929644107819], "val_loss": [3851689.285714286, 30711219.42857143, 103537380.57142857, 245289746.2857143, 478925257.14285713, 827406336.0], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [4, 8, 6, 6, 0, 3, 4, 1, 5, 4, 4, 8, 8], [2, 0, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 6, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 3, 2, 3, 3, 0], [28, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1], [0, 3, 2, 0, 1, 6, 2, 8, 4, 8, 0], [3, 1, 0, 1, 3, 2, 2, 3], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 7, 4, 3, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.math.negative(sigma), alpha), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1], [2, 4, 6, 6, 0, 3, 4, 9, 5, 2, 2, 3], [2, 3, 0, 0, 2, 0, 2, 2, 2, 0, 0, 3, 2, 2], [8, 86, 50, 34], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 0, 9, 3, 6], [1, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 21, 12, 9, 4, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 3, 0, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), grad)))), tf.math.add(alpha, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.add(alpha, grad), tf.math.multiply(tf.math.add(alpha, grad), grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3027142517917176, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [7, 4, 6, 6, 0, 3, 4, 1, 5, 2, 5], [2, 2, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50, 34], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 3, 0, 3, 2, 3, 3, 0], [28, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0], [3, 3, 9, 3, 6], [1, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, alpha)", "other_info": {"loss": [2.491588780467757, 31504.60426168526, 2090461621.9784045, 134273182653592.97, 9.121907853435159e+18, 5.872862945312902e+23], "accuracy": [0.11081759631633759, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [14.54171861921038, 918178.4642857143, 60164143981.71429, 3942914425543533.5, 2.58402839792421e+20, 1.6934688508636103e+25], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}]