[{"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.8094285726547241, "mapping_values": [1, 16, 16, 10, 6, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), grad))))), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.224803776332274, 1.8578782915801357, 1.7044249893478698, 1.1830318419058814, 0.9574995548214029, 0.8250530660664165, 0.7558513200357054, 0.7121080036223792, 0.6978698071314281, 0.6631907537675977, 0.615933454228808, 0.6115849035259534, 0.6205428239061942, 0.5579416616765058, 0.5785619883788591, 0.5494634082619351, 0.547733552719482, 0.5255965620078556, 0.5090896031245926, 0.4904065944452201, 0.4873819135404014, 0.48279804503834245, 0.4686169475690957, 0.45246583591000655, 0.4480645882770008, 0.48789423112116, 0.4503295129245503, 0.41949917561641664, 0.45670355690500253, 0.4196120668096848, 0.4205860072170439, 0.402302747696398, 0.4084443130458209], "accuracy": [0.2712983787059784, 0.3661339282989502, 0.3887201249599457, 0.5616167187690735, 0.6400739550590515, 0.6841896772384644, 0.7162858247756958, 0.7257958054542542, 0.7322678565979004, 0.748778223991394, 0.772288978099823, 0.7656848430633545, 0.7712323069572449, 0.787082314491272, 0.7804781198501587, 0.7975168228149414, 0.7928939461708069, 0.8031964302062988, 0.8121780753135681, 0.8187822103500366, 0.8186501264572144, 0.8191784620285034, 0.8203672170639038, 0.8342359066009521, 0.8309338092803955, 0.8171972036361694, 0.8334434032440186, 0.8461233377456665, 0.8285563588142395, 0.8411042094230652, 0.843481719493866, 0.8499537706375122, 0.8454629778862], "val_loss": [1.6608035564422607, 1.9299836158752441, 0.8834951264517648, 0.7846194505691528, 0.6878947189876011, 0.5861316238130841, 0.5548982279641288, 0.5851970911026001, 0.5300353424889701, 0.5080891677311489, 0.5106893266950335, 0.4781970466886248, 0.46931709562029156, 0.4531618782452175, 0.4615683725902012, 0.4462232504572187, 0.46835649013519287, 0.45467772654124666, 0.4225258912358965, 0.39453805344445364, 0.4107136811528887, 0.44685603039605276, 0.38915354013442993, 0.4325266991342817, 0.4279336759022304, 0.41225416319710867, 0.36512913022722515, 0.37860505070005146, 0.3871934073311942, 0.36760216099875315, 0.37243791988917757, 0.357630261353084, 0.36476893935884747], "val_accuracy": [0.30033332109451294, 0.1456666737794876, 0.640333354473114, 0.6493333578109741, 0.6833333373069763, 0.7440000176429749, 0.7566666603088379, 0.7233333587646484, 0.7570000290870667, 0.7796666622161865, 0.7716666460037231, 0.7933333516120911, 0.8023333549499512, 0.8026666641235352, 0.7876666784286499, 0.7823333144187927, 0.7919999957084656, 0.7926666736602783, 0.8113333582878113, 0.82833331823349, 0.8180000185966492, 0.8036666512489319, 0.8373333215713501, 0.7956666946411133, 0.812333345413208, 0.8103333115577698, 0.843999981880188, 0.8483333587646484, 0.8220000267028809, 0.8473333120346069, 0.8383333086967468, 0.847000002861023, 0.8356666564941406]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [4, 9, 6, 6, 0, 3, 9, 2, 5, 2, 1, 8], [2, 0, 0, 0, 0, 2, 1, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.8094285726547241, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.224803776332274, 1.8578782915801357, 1.7044249893478698, 1.1830318419058814, 0.9574995548214029, 0.8250530660664165, 0.7558513200357054, 0.7121080036223792, 0.6978698071314281, 0.6631907537675977, 0.615933454228808, 0.6115849035259534, 0.6205428239061942, 0.5579416616765058, 0.5785619883788591, 0.5494634082619351, 0.547733552719482, 0.5255965620078556, 0.5090896031245926, 0.4904065944452201, 0.4873819135404014, 0.48279804503834245, 0.4686169475690957, 0.45246583591000655, 0.4480645882770008, 0.48789423112116, 0.4503295129245503, 0.41949917561641664, 0.45670355690500253, 0.4196120668096848, 0.4205860072170439, 0.402302747696398, 0.4084443130458209], "accuracy": [0.2712983787059784, 0.3661339282989502, 0.3887201249599457, 0.5616167187690735, 0.6400739550590515, 0.6841896772384644, 0.7162858247756958, 0.7257958054542542, 0.7322678565979004, 0.748778223991394, 0.772288978099823, 0.7656848430633545, 0.7712323069572449, 0.787082314491272, 0.7804781198501587, 0.7975168228149414, 0.7928939461708069, 0.8031964302062988, 0.8121780753135681, 0.8187822103500366, 0.8186501264572144, 0.8191784620285034, 0.8203672170639038, 0.8342359066009521, 0.8309338092803955, 0.8171972036361694, 0.8334434032440186, 0.8461233377456665, 0.8285563588142395, 0.8411042094230652, 0.843481719493866, 0.8499537706375122, 0.8454629778862], "val_loss": [1.6608035564422607, 1.9299836158752441, 0.8834951264517648, 0.7846194505691528, 0.6878947189876011, 0.5861316238130841, 0.5548982279641288, 0.5851970911026001, 0.5300353424889701, 0.5080891677311489, 0.5106893266950335, 0.4781970466886248, 0.46931709562029156, 0.4531618782452175, 0.4615683725902012, 0.4462232504572187, 0.46835649013519287, 0.45467772654124666, 0.4225258912358965, 0.39453805344445364, 0.4107136811528887, 0.44685603039605276, 0.38915354013442993, 0.4325266991342817, 0.4279336759022304, 0.41225416319710867, 0.36512913022722515, 0.37860505070005146, 0.3871934073311942, 0.36760216099875315, 0.37243791988917757, 0.357630261353084, 0.36476893935884747], "val_accuracy": [0.30033332109451294, 0.1456666737794876, 0.640333354473114, 0.6493333578109741, 0.6833333373069763, 0.7440000176429749, 0.7566666603088379, 0.7233333587646484, 0.7570000290870667, 0.7796666622161865, 0.7716666460037231, 0.7933333516120911, 0.8023333549499512, 0.8026666641235352, 0.7876666784286499, 0.7823333144187927, 0.7919999957084656, 0.7926666736602783, 0.8113333582878113, 0.82833331823349, 0.8180000185966492, 0.8036666512489319, 0.8373333215713501, 0.7956666946411133, 0.812333345413208, 0.8103333115577698, 0.843999981880188, 0.8483333587646484, 0.8220000267028809, 0.8473333120346069, 0.8383333086967468, 0.847000002861023, 0.8356666564941406]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 2, 1, 6, 1, 8], [2, 2, 0, 0, 1, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 5, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.8094285726547241, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.224803776332274, 1.8578782915801357, 1.7044249893478698, 1.1830318419058814, 0.9574995548214029, 0.8250530660664165, 0.7558513200357054, 0.7121080036223792, 0.6978698071314281, 0.6631907537675977, 0.615933454228808, 0.6115849035259534, 0.6205428239061942, 0.5579416616765058, 0.5785619883788591, 0.5494634082619351, 0.547733552719482, 0.5255965620078556, 0.5090896031245926, 0.4904065944452201, 0.4873819135404014, 0.48279804503834245, 0.4686169475690957, 0.45246583591000655, 0.4480645882770008, 0.48789423112116, 0.4503295129245503, 0.41949917561641664, 0.45670355690500253, 0.4196120668096848, 0.4205860072170439, 0.402302747696398, 0.4084443130458209], "accuracy": [0.2712983787059784, 0.3661339282989502, 0.3887201249599457, 0.5616167187690735, 0.6400739550590515, 0.6841896772384644, 0.7162858247756958, 0.7257958054542542, 0.7322678565979004, 0.748778223991394, 0.772288978099823, 0.7656848430633545, 0.7712323069572449, 0.787082314491272, 0.7804781198501587, 0.7975168228149414, 0.7928939461708069, 0.8031964302062988, 0.8121780753135681, 0.8187822103500366, 0.8186501264572144, 0.8191784620285034, 0.8203672170639038, 0.8342359066009521, 0.8309338092803955, 0.8171972036361694, 0.8334434032440186, 0.8461233377456665, 0.8285563588142395, 0.8411042094230652, 0.843481719493866, 0.8499537706375122, 0.8454629778862], "val_loss": [1.6608035564422607, 1.9299836158752441, 0.8834951264517648, 0.7846194505691528, 0.6878947189876011, 0.5861316238130841, 0.5548982279641288, 0.5851970911026001, 0.5300353424889701, 0.5080891677311489, 0.5106893266950335, 0.4781970466886248, 0.46931709562029156, 0.4531618782452175, 0.4615683725902012, 0.4462232504572187, 0.46835649013519287, 0.45467772654124666, 0.4225258912358965, 0.39453805344445364, 0.4107136811528887, 0.44685603039605276, 0.38915354013442993, 0.4325266991342817, 0.4279336759022304, 0.41225416319710867, 0.36512913022722515, 0.37860505070005146, 0.3871934073311942, 0.36760216099875315, 0.37243791988917757, 0.357630261353084, 0.36476893935884747], "val_accuracy": [0.30033332109451294, 0.1456666737794876, 0.640333354473114, 0.6493333578109741, 0.6833333373069763, 0.7440000176429749, 0.7566666603088379, 0.7233333587646484, 0.7570000290870667, 0.7796666622161865, 0.7716666460037231, 0.7933333516120911, 0.8023333549499512, 0.8026666641235352, 0.7876666784286499, 0.7823333144187927, 0.7919999957084656, 0.7926666736602783, 0.8113333582878113, 0.82833331823349, 0.8180000185966492, 0.8036666512489319, 0.8373333215713501, 0.7956666946411133, 0.812333345413208, 0.8103333115577698, 0.843999981880188, 0.8483333587646484, 0.8220000267028809, 0.8473333120346069, 0.8383333086967468, 0.847000002861023, 0.8356666564941406]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [0, 0, 6, 2, 2, 3, 8, 2, 6, 6, 1, 8, 2, 1, 9, 6, 3, 5], [1, 1, 0, 0, 0, 0, 2, 2, 0, 0, 0, 3, 2, 2], [89, 22, 98, 38, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [66, 25, 50, 71, 34]], "fitness": -0.7794285416603088, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.2727203381422125, 2.1742921241475073, 1.9676618333411429, 1.6428891971772295, 1.3553626569601303, 1.1936118129285067, 1.0882920948836499, 1.0248044680736603, 0.9695487380374173, 0.9140866269855578, 0.8934820426485054, 0.8759381726921479, 0.8457223372200555, 0.8298000570427488, 0.8069760447416985, 0.7830791750588453, 0.7781574354510596, 0.764500092372068, 0.7567195361001601, 0.7476462572635897, 0.7408386183893518, 0.7241125317722689, 0.7161196625747575, 0.7150915150613423, 0.7071837828206884, 0.6952474894635099, 0.6896095690694484, 0.6741121726548746, 0.6791534474686136, 0.6761233182772827, 0.670921586405694, 0.6543026410861023, 0.6533486503399658, 0.6546808209370124, 0.6446640575881553, 0.648045369591837, 0.6484441318610845, 0.6323758168007011, 0.6442488005463284, 0.6301382082627512, 0.6288379459663893, 0.621600145543209, 0.619027786054285, 0.6255509527037251], "accuracy": [0.16734910011291504, 0.33099988102912903, 0.42266544699668884, 0.48249900341033936, 0.5456346869468689, 0.5805045366287231, 0.6209219098091125, 0.6424514651298523, 0.6577730774879456, 0.6787742972373962, 0.6781138777732849, 0.6851142644882202, 0.6940959095954895, 0.7012283802032471, 0.7098137736320496, 0.7168141603469849, 0.7154933214187622, 0.7265883088111877, 0.726192057132721, 0.7288337349891663, 0.7339849472045898, 0.737022876739502, 0.7404569983482361, 0.7392682433128357, 0.7405890822410583, 0.7427024245262146, 0.7553823590278625, 0.7537974119186401, 0.7512878179550171, 0.7531369924545288, 0.7543256878852844, 0.7534011602401733, 0.7627789974212646, 0.7611940503120422, 0.7602694630622864, 0.7598732113838196, 0.7594769597053528, 0.7670056819915771, 0.7613261342048645, 0.7689869403839111, 0.7684586048126221, 0.7724210619926453, 0.7725531458854675, 0.767930269241333], "val_loss": [1.8983988080705916, 1.7602493422372, 1.4729034560067313, 1.1314219406672887, 0.9167390210287911, 0.8009087017604283, 0.7347902911049979, 0.6933110441480365, 0.6568633828844342, 0.6277937548501151, 0.6151750768933978, 0.6015025547572544, 0.5823903424399239, 0.5809300286429269, 0.5602855171476092, 0.5549935613359723, 0.5448770352772304, 0.5469708442687988, 0.5338118587221418, 0.5327644348144531, 0.5211176872253418, 0.5168581349509103, 0.5104559319359916, 0.5103698798588344, 0.5071098123277936, 0.49879629271371023, 0.49996583802359446, 0.49216270446777344, 0.4884997435978481, 0.48405003547668457, 0.48070296219417025, 0.4817300694329398, 0.4844593661172049, 0.4729205710547311, 0.47138094902038574, 0.4710972138813564, 0.47565133231026785, 0.46394128458840506, 0.4655881438936506, 0.4647077832903181, 0.4587921585355486, 0.4574831213269915, 0.4579069869858878, 0.4582121712820871], "val_accuracy": [0.4153333306312561, 0.5096666812896729, 0.5756666660308838, 0.6150000095367432, 0.6800000071525574, 0.70333331823349, 0.6966666579246521, 0.721666693687439, 0.7210000157356262, 0.7366666793823242, 0.7419999837875366, 0.737333357334137, 0.7563333511352539, 0.7446666955947876, 0.7673333287239075, 0.7680000066757202, 0.7730000019073486, 0.7570000290870667, 0.7763333320617676, 0.7696666717529297, 0.7823333144187927, 0.7863333225250244, 0.7873333096504211, 0.777999997138977, 0.7816666960716248, 0.7896666526794434, 0.778333306312561, 0.7886666655540466, 0.7916666865348816, 0.7906666398048401, 0.8013333082199097, 0.79666668176651, 0.7986666560173035, 0.7990000247955322, 0.800000011920929, 0.8043333292007446, 0.800000011920929, 0.8023333549499512, 0.8069999814033508, 0.8019999861717224, 0.8043333292007446, 0.8043333292007446, 0.8050000071525574, 0.8046666383743286]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 9, 0, 1, 0, 3, 8, 2, 9, 3, 1, 8], [1, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [22, 98, 75, 86, 46, 73, 18, 25, 62, 84], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 2, 9, 2, 9], [2, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.7739999890327454, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [3.0865025689431533, 2.305068756122914, 2.3019928804966185, 2.2856755913555693, 2.1505940167375797, 2.2112496497215077, 2.3063274597872865, 2.3033364812979182, 2.301335755560959, 2.2122349834492523, 2.288600711743152, 2.0614706212188496, 1.5793222362465154, 1.0820521547683808, 0.8248379240733852, 0.9084976306917046, 0.7761408553115916, 0.7060052386962695, 0.6721879632922368, 0.6722607422797687, 0.6139241319133495, 0.6027760960406725, 0.6457328056426269, 0.6402951913219417, 0.5812391515704604], "accuracy": [0.22044643759727478, 0.10249637067317963, 0.108440101146698, 0.15136705338954926, 0.22665433585643768, 0.24541011452674866, 0.09708096832036972, 0.10038304328918457, 0.10659094154834747, 0.2176727056503296, 0.13142253458499908, 0.27380794286727905, 0.4111742079257965, 0.600581169128418, 0.6902654767036438, 0.6627922058105469, 0.7125874757766724, 0.7285695672035217, 0.7458723783493042, 0.7421740889549255, 0.7691190242767334, 0.7717606425285339, 0.7553823590278625, 0.7537974119186401, 0.7732135653495789], "val_loss": [1.976801531655448, 1.9730626514979772, 1.9692554473876953, 1.8665856633867537, 2.0257677350725447, 1.9794630323137556, 1.974935667855399, 1.9738757950919015, 1.9631098338535853, 1.81656094959804, 1.9358878135681152, 1.426163571221488, 0.8871737718582153, 0.625211204801287, 0.6541733741760254, 0.5333885976246425, 0.5487525463104248, 0.5123076098305839, 0.5072218520300729, 0.4905340501240322, 0.506082398550851, 0.5850223643439156, 0.5510640144348145, 0.4625523260661534, 0.5131357397351947], "val_accuracy": [0.09833333641290665, 0.11266666650772095, 0.0976666659116745, 0.15933333337306976, 0.11733333021402359, 0.10000000149011612, 0.09733333438634872, 0.09733333438634872, 0.2619999945163727, 0.21699999272823334, 0.2056666612625122, 0.4313333332538605, 0.6383333206176758, 0.7319999933242798, 0.6919999718666077, 0.7616666555404663, 0.7549999952316284, 0.7763333320617676, 0.7706666588783264, 0.7863333225250244, 0.7613333463668823, 0.7549999952316284, 0.7323333621025085, 0.7820000052452087, 0.753000020980835]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [5, 9, 0, 1, 0, 3, 8, 2, 9, 3, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.5531428456306458, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.226710091177593, 2.100083035532163, 1.7270066607913257, 2.7533312799939704, NaN, NaN, NaN], "accuracy": [0.26918503642082214, 0.25201427936553955, 0.43125081062316895, 0.4616298973560333, 0.10896842926740646, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9370615141732352, 1.133333478655134, 1.3307621819632394, 47.707180568150115, NaN, NaN, NaN], "val_accuracy": [0.1966666728258133, 0.5899999737739563, 0.4410000145435333, 0.14233332872390747, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 9, 5, 6, 1, 8], [0, 0, 0, 0, 1, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 49, 68, 41, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [3, 3, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.36057141423225403, "mapping_values": [1, 5, 5, 3, 2, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(sigma, sigma), beta)", "other_info": {"loss": [2.4020823054955445, 2.3202516380444083, 2.2722457101111715, 2.308329313973772, 2.3010615637714618, 2.300570946894837], "accuracy": [0.2075023055076599, 0.17395325005054474, 0.13300752639770508, 0.13776251673698425, 0.11240258812904358, 0.1406683325767517], "val_loss": [1.6869050094059534, 1.9757704053606306, 1.7792009626116072, 1.9750933647155762, 1.9101691927228654, 1.9745494297572546], "val_accuracy": [0.3766666650772095, 0.09833333641290665, 0.2953333258628845, 0.10400000214576721, 0.24933333694934845, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [2, 9, 6, 2, 2, 8, 8, 2, 6, 6, 1, 8, 2, 1, 9, 6, 3, 5], [1, 1, 0, 0, 0, 0, 2, 2, 0, 0, 0, 3, 2, 2], [89, 22, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [97, 25, 50, 71, 34]], "fitness": -0.14971429109573364, "mapping_values": [1, 11, 11, 7, 4, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.3021643745302445, 2.300995077329179, 2.30037699909636, 2.3013906917551865, 2.301654046064575, 2.301070905931559, 2.301362762802612, 2.299706985386466, 2.3013805587608833, 2.3002198128227263, 2.299248374857844, 2.300480788110852, 2.300425101642863, 2.3024903619451575, 2.299842166579426, 2.30019159610513, 2.2987801142498454, 2.2986184984166087, 2.2991064787068467, 2.2995672450168274, 2.3004133900032855, 2.2995692409812154, 2.301134191279272, 2.298740861469713, 2.2986266508771287, 2.298411628054023, 2.297877647589856, 2.2974595418301997, 2.2971469334103665, 2.297602306881664, 2.2975494799250544, 2.2981905761159975, 2.2975881140009444, 2.2975215931389674, 2.2979303325849076, 2.29690580820883, 2.296893284100709, 2.296315109473115, 2.295768568780617, 2.2977769772894017, 2.2949154150563147, 2.295908093027325, 2.2961579011872524, 2.29683214612625, 2.2958672450376367, 2.2959630770879165, 2.2952416536751645, 2.2965310602738573, 2.296724464348231, 2.2959679629525267, 2.2952377882143606, 2.2936297022293366, 2.294312725922435, 2.294755702540859, 2.2948653737331317, 2.2935438190453152, 2.2933922493226335, 2.2959000120199495, 2.2930725455646264, 2.294045668173586, 2.294586278916413, 2.293761182659574, 2.294270615646348, 2.2927097094262106, 2.2918102344139584, 2.293896679077733, 2.292224925632852, 2.292274939212439, 2.293167550880927, 2.2918999783036385, 2.2929722509206547, 2.2908308999791296, 2.291945131778276, 2.291900371091241, 2.2922382481015355, 2.290935984503056, 2.29172211747679, 2.2909235021520393, 2.2900609908685268, 2.2914240061410145, 2.2898713778101647, 2.2910563410107865, 2.290024493899816, 2.2898722866727472, 2.289672257232313, 2.2906661037409295, 2.2890901780950395, 2.289076012674497, 2.289579653390379, 2.288500546432836, 2.2902096133143313, 2.290522794870889, 2.290025048614288, 2.2883037732907447, 2.289302328054569, 2.2895070830387856, 2.2895419765787826, 2.2882515788944313, 2.288055324504058, 2.288871068082796], "accuracy": [0.08902391046285629, 0.09470347315073013, 0.09311848133802414, 0.09285431355237961, 0.09060890227556229, 0.09259014576673508, 0.09325055778026581, 0.10011887550354004, 0.09681680053472519, 0.09100515395402908, 0.0940430611371994, 0.10117553919553757, 0.09457138925790787, 0.09245806187391281, 0.09853387624025345, 0.0952318087220192, 0.09866596013307571, 0.0956280529499054, 0.09589222073554993, 0.09047681838274002, 0.09457138925790787, 0.09945846349000931, 0.09192973375320435, 0.09721305221319199, 0.10645885765552521, 0.10051512718200684, 0.10236428678035736, 0.09985470771789551, 0.10368511080741882, 0.10276053100824356, 0.10249637067317963, 0.1010434553027153, 0.09536388516426086, 0.10527011007070541, 0.10394927859306335, 0.09655263274908066, 0.1080438494682312, 0.10447761416435242, 0.10394927859306335, 0.09840179979801178, 0.10394927859306335, 0.11068551242351532, 0.10249637067317963, 0.10830801725387573, 0.109232597053051, 0.10949676483869553, 0.10830801725387573, 0.10870426893234253, 0.1142517477273941, 0.10910051316022873, 0.11161009222269058, 0.11187426000833511, 0.10672302544116974, 0.10527011007070541, 0.11094967275857925, 0.11213842034339905, 0.10434553027153015, 0.1088363528251648, 0.11345925182104111, 0.10910051316022873, 0.10645885765552521, 0.10777968913316727, 0.11094967275857925, 0.11517632752656937, 0.1154404953122139, 0.11359133571386337, 0.11861048638820648, 0.11121384054422379, 0.11094967275857925, 0.1162329912185669, 0.11478008329868317, 0.11649715900421143, 0.11557257920503616, 0.11411966383457184, 0.11636507511138916, 0.11689341068267822, 0.11861048638820648, 0.11900673806667328, 0.120459645986557, 0.12310130894184113, 0.11927089840173721, 0.12059172987937927, 0.1208558976650238, 0.11636507511138916, 0.12508255243301392, 0.11887465417385101, 0.12468630075454712, 0.11940298229455948, 0.12138422578573227, 0.12323339283466339, 0.11808215826749802, 0.1224408894777298, 0.12257297337055206, 0.12719587981700897, 0.1270637959241867, 0.1258750557899475, 0.12759213149547577, 0.12930920720100403, 0.12362963706254959, 0.12389380484819412], "val_loss": [1.9704536029270716, 1.9703187942504883, 1.9701824188232422, 1.970045702798026, 1.9699108260018485, 1.9697753361293249, 1.9696390288216727, 1.969503947666713, 1.969369956425258, 1.969233853476388, 1.9690971374511719, 1.9689620562962122, 1.968824999673026, 1.9686907359531947, 1.9685544967651367, 1.968421254839216, 1.9682869229997908, 1.9681517056056432, 1.968017305646624, 1.9678830419267928, 1.9677488463265556, 1.96761383329119, 1.9674790246146066, 1.9673444202968053, 1.9672091347830636, 1.967074257986886, 1.9669393811907088, 1.966804027557373, 1.9666692870003837, 1.9665349551609583, 1.9663997377668108, 1.9662641797746931, 1.9661301204136439, 1.9659961291721888, 1.9658634322030204, 1.9657303265162878, 1.9655955178397042, 1.9654615265982491, 1.9653278078351701, 1.9651946340288435, 1.9650612558637346, 1.9649271283830916, 1.9647949082510812, 1.9646619388035365, 1.9645271301269531, 1.9643938882010323, 1.9642596244812012, 1.9641269275120325, 1.9639927319117956, 1.9638588087899345, 1.963724136352539, 1.9635907581874303, 1.963459083012172, 1.9633255004882812, 1.9631929397583008, 1.9630585397992815, 1.9629233905247279, 1.9627908297947474, 1.9626566341945104, 1.9625228473118372, 1.962388038635254, 1.9622543879917689, 1.9621215547834123, 1.961987018585205, 1.961852754865374, 1.961721352168492, 1.9615881102425712, 1.9614552089146204, 1.9613235337393624, 1.961188793182373, 1.9610549381801061, 1.9609204701014928, 1.9607874325343542, 1.9606554167611259, 1.9605228560311454, 1.9603896141052246, 1.960257121494838, 1.9601237433297294, 1.9599907738821847, 1.9598591668265206, 1.9597268785749162, 1.9595943178449358, 1.9594620977129256, 1.9593307631356376, 1.9591986111232214, 1.959066322871617, 1.9589360100882394, 1.9588031768798828, 1.9586715017046248, 1.9585393496922083, 1.958406857081822, 1.9582741601126534, 1.958141871861049, 1.958009856087821, 1.9578784533909388, 1.9577441896711076, 1.9576112883431571, 1.9574780464172363, 1.9573449407305037, 1.957211698804583], "val_accuracy": [0.03966666758060455, 0.0403333343565464, 0.04066666588187218, 0.0416666679084301, 0.04233333468437195, 0.04399999976158142, 0.044333335012197495, 0.04600000008940697, 0.047333333641290665, 0.04899999871850014, 0.04899999871850014, 0.04933333396911621, 0.04933333396911621, 0.050333332270383835, 0.052000001072883606, 0.052666667848825455, 0.0533333346247673, 0.054666668176651, 0.05533333495259285, 0.056333333253860474, 0.05766666680574417, 0.059333331882953644, 0.060333333909511566, 0.061000000685453415, 0.06133333221077919, 0.06133333221077919, 0.061666667461395264, 0.06300000101327896, 0.06433333456516266, 0.06466666609048843, 0.06499999761581421, 0.06533333659172058, 0.06599999964237213, 0.0689999982714653, 0.06966666877269745, 0.070333331823349, 0.07100000232458115, 0.0729999989271164, 0.07433333247900009, 0.07466666400432587, 0.07566666603088379, 0.07633333653211594, 0.07766667008399963, 0.07800000160932541, 0.0793333351612091, 0.0806666687130928, 0.0820000022649765, 0.08366666734218597, 0.08399999886751175, 0.08566666394472122, 0.08699999749660492, 0.08766666799783707, 0.08866667002439499, 0.09099999815225601, 0.09200000017881393, 0.09300000220537186, 0.09300000220537186, 0.09433333575725555, 0.09666666388511658, 0.09966666996479034, 0.10133333504199982, 0.10333333164453506, 0.10533333569765091, 0.10633333027362823, 0.1080000028014183, 0.10899999737739563, 0.10966666787862778, 0.11100000143051147, 0.11166666448116302, 0.11233333498239517, 0.1133333370089531, 0.11433333158493042, 0.11633333563804626, 0.11766666918992996, 0.11966666579246521, 0.12133333086967468, 0.12266666442155838, 0.12466666847467422, 0.12566666305065155, 0.1263333261013031, 0.12733332812786102, 0.12800000607967377, 0.12866666913032532, 0.12933333218097687, 0.1316666603088379, 0.13300000131130219, 0.13466666638851166, 0.13566666841506958, 0.13600000739097595, 0.1379999965429306, 0.13966666162014008, 0.14166666567325592, 0.1420000046491623, 0.1433333307504654, 0.1456666737794876, 0.14633333683013916, 0.1469999998807907, 0.14800000190734863, 0.14866666495800018, 0.15000000596046448]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [6, 9, 0, 1, 0, 3, 8, 2, 9, 3, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [26, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 9, 5, 4, 3], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 9, 5, 6, 1, 8], [0, 3, 0, 0, 1, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 99, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 8, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 8, 3, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.sqrt(beta), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [5, 9, 0, 1, 0, 3, 8, 2, 9, 3, 1, 8], [1, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 9, 5, 4, 3], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [854757.3448723474, 2.3061767502105655, 2.304742496751476, 2.3038425644265033, 2.3033012145262477, 2.303070459477953], "accuracy": [0.09298639744520187, 0.09998679161071777, 0.09589222073554993, 0.0944393053650856, 0.09998679161071777, 0.09655263274908066], "val_loss": [1.9765039852687292, 1.9751342364719935, 1.974402972630092, 1.9739609445844377, 1.9737781115940638, 1.9736685071672713], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.09700000286102295, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [4, 9, 6, 6, 0, 3, 9, 2, 5, 2, 1, 8], [1, 1, 1, 0, 0, 0, 2, 2, 0, 0, 0, 3, 2, 2], [89, 22, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 3, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 7, 3, 2, 8, 8, 4, 4, 0, 5, 3, 2, 1, 0, 5, 2, 3, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.negative(tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, alpha), tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, sigma), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 6, 5, 6, 1, 8], [1, 0, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [24, 98, 86, 86, 46, 73, 18, 25, 62, 84], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [1, 1, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 9, 5, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 9, 5, 4, 3], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.square(grad)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.subtract(tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3026781000906467, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [5, 9, 0, 1, 0, 3, 8, 2, 9, 3, 1, 8], [3, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1], [1, 3, 2, 0, 2, 9, 8], [3, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 11, 7, 4, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.negative(tf.math.add(beta, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [2, 9, 6, 2, 2, 3, 8, 2, 6, 6, 1, 8, 2, 1, 9, 6, 3, 5], [1, 1, 0, 0, 0, 0, 2, 2, 0, 0, 0, 3, 2, 2], [89, 22, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [89, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 7, 5, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 9, 5, 4, 3], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.math.add(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [184490517.79742497, 3476135609.4317794, 15936383815.92075, 44499680256.94677, 94827033120.79884, 174660641509.1861], "accuracy": [0.09747721254825592, 0.1080438494682312, 0.10077928751707077, 0.09457138925790787, 0.09879804402589798, 0.09998679161071777], "val_loss": [685437184.0, 5480401773.714286, 18492873581.714287, 43830874697.14286, 85602397622.85715, 147914789449.14285], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [2, 9, 0, 6, 3, 3, 2, 2, 5, 6, 1, 8], [0, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 3, 2, 4, 2, 5, 2, 6, 0, 3, 8, 1, 5, 6, 7], [2, 3, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 27, 15, 12, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.add(tf.math.pow(beta, tf.math.add(tf.math.square(sigma), beta)), tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.divide_no_nan(beta, tf.math.negative(beta))), tf.math.multiply(tf.math.sqrt(sigma), tf.math.subtract(tf.math.square(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(sigma, beta), beta))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0], [2, 9, 6, 6, 0, 2, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 1, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [89, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 7, 4, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1], [5, 9, 6, 8, 4, 3, 8, 2, 6, 6, 1, 8, 2, 1, 9, 6, 3, 5], [0, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 49, 68, 41, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [5, 9, 0, 1, 0, 3, 8, 2, 9, 3, 1, 8], [1, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 3, 2, 2], [24, 98, 75, 86, 46, 73, 18, 25, 62, 84], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [7, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08717474341392517, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [2, 9, 6, 4, 0, 3, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [81, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 16, 16, 10, 6, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))), tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), grad)))))), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.302223376877603, 2.3011979148561426, 2.3007228695059876, 2.301883930826798, 2.3022875447928897, 2.3018463600140047], "accuracy": [0.08902391046285629, 0.09417514503002167, 0.09245806187391281, 0.09219389408826828, 0.08942015469074249, 0.09074098616838455], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]