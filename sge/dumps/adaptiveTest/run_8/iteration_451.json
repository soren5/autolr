[{"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 1, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [84, 89, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.8094285726547241, "mapping_values": [1, 16, 16, 10, 6, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), grad))))), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.1756677221644116, 1.839123294904893, 1.8325209183825824, 1.1309554858561033, 0.9081995555233757, 0.7887907603224428, 0.7544946615422926, 0.7347091938510563, 0.6913626704706004, 0.6548990800144209, 0.6285799918960759, 0.610195565044195, 0.5947082287458113, 0.5712433027522029, 0.5470784505352667, 0.533855666565999, 0.5297997124427187, 0.5060859364745891, 0.4981168599774919, 0.4857846338357498, 0.5167912562698689, 0.511847120789552, 0.47481226810469307, 0.4505962266929555, 0.46083641523430613, 0.43329614176490067, 0.4433357934902341, 0.44170021806111537, 0.4286234567524687, 0.42131985316360315, 0.41084717982685437, 0.39508890460085766, 0.3941165911223926, 0.39414942307463413, 0.42038846438697236, 0.3954973141034801], "accuracy": [0.27605336904525757, 0.36943599581718445, 0.3819838762283325, 0.581429123878479, 0.6577730774879456, 0.7059833407402039, 0.7224937081336975, 0.7214370369911194, 0.7453441023826599, 0.752212405204773, 0.7677981853485107, 0.7688548564910889, 0.7796856164932251, 0.7844406366348267, 0.7930260300636292, 0.8006868362426758, 0.7996301651000977, 0.8094043135643005, 0.8148196935653687, 0.8187822103500366, 0.8049134612083435, 0.8098005652427673, 0.8253863453865051, 0.8345000743865967, 0.8265751004219055, 0.8379341959953308, 0.8359529972076416, 0.8364813327789307, 0.843481719493866, 0.8438779711723328, 0.8475762605667114, 0.8533879518508911, 0.8525954484939575, 0.8541803956031799, 0.8426892161369324, 0.8541803956031799], "val_loss": [1.943309920174735, 1.653770583016532, 1.1520981107439314, 0.8139368295669556, 0.5986091409410749, 0.5799434695925031, 0.5659338235855103, 0.5153793607439313, 0.5182336909430367, 0.48462157590048655, 0.5135007245200021, 0.4797476189477103, 0.553977506501334, 0.4416993771280561, 0.43858528988701956, 0.42410641057150705, 0.4238465428352356, 0.4200857196535383, 0.41178169420787264, 0.4455846207482474, 0.49830070563725065, 0.3909141847065517, 0.3806127054350717, 0.42587482929229736, 0.3763567975589207, 0.43586250713893343, 0.3536431278501238, 0.38143679925373625, 0.37196676220212666, 0.36984977551868986, 0.3476252981594631, 0.36013117858341764, 0.36533900669642855, 0.4181152326720102, 0.37121863876070293, 0.37185561656951904], "val_accuracy": [0.2199999988079071, 0.43533334136009216, 0.5226666927337646, 0.652999997138977, 0.7353333234786987, 0.7436666488647461, 0.7336666584014893, 0.7733333110809326, 0.7696666717529297, 0.7893333435058594, 0.7583333253860474, 0.7816666960716248, 0.7356666922569275, 0.8153333067893982, 0.8103333115577698, 0.8013333082199097, 0.8076666593551636, 0.8223333358764648, 0.8116666674613953, 0.7993333339691162, 0.765333354473114, 0.8289999961853027, 0.8339999914169312, 0.8059999942779541, 0.8389999866485596, 0.7943333387374878, 0.8523333072662354, 0.8379999995231628, 0.8353333473205566, 0.8396666646003723, 0.8553333282470703, 0.8413333296775818, 0.843999981880188, 0.8059999942779541, 0.8493333458900452, 0.82833331823349]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 3, 6, 0, 3, 8, 1, 5, 6, 1, 8], [2, 3, 0, 0, 2, 1, 2, 2, 0, 0, 0, 3, 2, 2], [84, 89, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.8094285726547241, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.1756677221644116, 1.839123294904893, 1.8325209183825824, 1.1309554858561033, 0.9081995555233757, 0.7887907603224428, 0.7544946615422926, 0.7347091938510563, 0.6913626704706004, 0.6548990800144209, 0.6285799918960759, 0.610195565044195, 0.5947082287458113, 0.5712433027522029, 0.5470784505352667, 0.533855666565999, 0.5297997124427187, 0.5060859364745891, 0.4981168599774919, 0.4857846338357498, 0.5167912562698689, 0.511847120789552, 0.47481226810469307, 0.4505962266929555, 0.46083641523430613, 0.43329614176490067, 0.4433357934902341, 0.44170021806111537, 0.4286234567524687, 0.42131985316360315, 0.41084717982685437, 0.39508890460085766, 0.3941165911223926, 0.39414942307463413, 0.42038846438697236, 0.3954973141034801], "accuracy": [0.27605336904525757, 0.36943599581718445, 0.3819838762283325, 0.581429123878479, 0.6577730774879456, 0.7059833407402039, 0.7224937081336975, 0.7214370369911194, 0.7453441023826599, 0.752212405204773, 0.7677981853485107, 0.7688548564910889, 0.7796856164932251, 0.7844406366348267, 0.7930260300636292, 0.8006868362426758, 0.7996301651000977, 0.8094043135643005, 0.8148196935653687, 0.8187822103500366, 0.8049134612083435, 0.8098005652427673, 0.8253863453865051, 0.8345000743865967, 0.8265751004219055, 0.8379341959953308, 0.8359529972076416, 0.8364813327789307, 0.843481719493866, 0.8438779711723328, 0.8475762605667114, 0.8533879518508911, 0.8525954484939575, 0.8541803956031799, 0.8426892161369324, 0.8541803956031799], "val_loss": [1.943309920174735, 1.653770583016532, 1.1520981107439314, 0.8139368295669556, 0.5986091409410749, 0.5799434695925031, 0.5659338235855103, 0.5153793607439313, 0.5182336909430367, 0.48462157590048655, 0.5135007245200021, 0.4797476189477103, 0.553977506501334, 0.4416993771280561, 0.43858528988701956, 0.42410641057150705, 0.4238465428352356, 0.4200857196535383, 0.41178169420787264, 0.4455846207482474, 0.49830070563725065, 0.3909141847065517, 0.3806127054350717, 0.42587482929229736, 0.3763567975589207, 0.43586250713893343, 0.3536431278501238, 0.38143679925373625, 0.37196676220212666, 0.36984977551868986, 0.3476252981594631, 0.36013117858341764, 0.36533900669642855, 0.4181152326720102, 0.37121863876070293, 0.37185561656951904], "val_accuracy": [0.2199999988079071, 0.43533334136009216, 0.5226666927337646, 0.652999997138977, 0.7353333234786987, 0.7436666488647461, 0.7336666584014893, 0.7733333110809326, 0.7696666717529297, 0.7893333435058594, 0.7583333253860474, 0.7816666960716248, 0.7356666922569275, 0.8153333067893982, 0.8103333115577698, 0.8013333082199097, 0.8076666593551636, 0.8223333358764648, 0.8116666674613953, 0.7993333339691162, 0.765333354473114, 0.8289999961853027, 0.8339999914169312, 0.8059999942779541, 0.8389999866485596, 0.7943333387374878, 0.8523333072662354, 0.8379999995231628, 0.8353333473205566, 0.8396666646003723, 0.8553333282470703, 0.8413333296775818, 0.843999981880188, 0.8059999942779541, 0.8493333458900452, 0.82833331823349]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 1, 9, 6, 1, 8], [2, 3, 2, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [84, 89, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.8094285726547241, "mapping_values": [1, 11, 11, 7, 4, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(grad)), tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.1756677221644116, 1.839123294904893, 1.8325209183825824, 1.1309554858561033, 0.9081995555233757, 0.7887907603224428, 0.7544946615422926, 0.7347091938510563, 0.6913626704706004, 0.6548990800144209, 0.6285799918960759, 0.610195565044195, 0.5947082287458113, 0.5712433027522029, 0.5470784505352667, 0.533855666565999, 0.5297997124427187, 0.5060859364745891, 0.4981168599774919, 0.4857846338357498, 0.5167912562698689, 0.511847120789552, 0.47481226810469307, 0.4505962266929555, 0.46083641523430613, 0.43329614176490067, 0.4433357934902341, 0.44170021806111537, 0.4286234567524687, 0.42131985316360315, 0.41084717982685437, 0.39508890460085766, 0.3941165911223926, 0.39414942307463413, 0.42038846438697236, 0.3954973141034801], "accuracy": [0.27605336904525757, 0.36943599581718445, 0.3819838762283325, 0.581429123878479, 0.6577730774879456, 0.7059833407402039, 0.7224937081336975, 0.7214370369911194, 0.7453441023826599, 0.752212405204773, 0.7677981853485107, 0.7688548564910889, 0.7796856164932251, 0.7844406366348267, 0.7930260300636292, 0.8006868362426758, 0.7996301651000977, 0.8094043135643005, 0.8148196935653687, 0.8187822103500366, 0.8049134612083435, 0.8098005652427673, 0.8253863453865051, 0.8345000743865967, 0.8265751004219055, 0.8379341959953308, 0.8359529972076416, 0.8364813327789307, 0.843481719493866, 0.8438779711723328, 0.8475762605667114, 0.8533879518508911, 0.8525954484939575, 0.8541803956031799, 0.8426892161369324, 0.8541803956031799], "val_loss": [1.943309920174735, 1.653770583016532, 1.1520981107439314, 0.8139368295669556, 0.5986091409410749, 0.5799434695925031, 0.5659338235855103, 0.5153793607439313, 0.5182336909430367, 0.48462157590048655, 0.5135007245200021, 0.4797476189477103, 0.553977506501334, 0.4416993771280561, 0.43858528988701956, 0.42410641057150705, 0.4238465428352356, 0.4200857196535383, 0.41178169420787264, 0.4455846207482474, 0.49830070563725065, 0.3909141847065517, 0.3806127054350717, 0.42587482929229736, 0.3763567975589207, 0.43586250713893343, 0.3536431278501238, 0.38143679925373625, 0.37196676220212666, 0.36984977551868986, 0.3476252981594631, 0.36013117858341764, 0.36533900669642855, 0.4181152326720102, 0.37121863876070293, 0.37185561656951904], "val_accuracy": [0.2199999988079071, 0.43533334136009216, 0.5226666927337646, 0.652999997138977, 0.7353333234786987, 0.7436666488647461, 0.7336666584014893, 0.7733333110809326, 0.7696666717529297, 0.7893333435058594, 0.7583333253860474, 0.7816666960716248, 0.7356666922569275, 0.8153333067893982, 0.8103333115577698, 0.8013333082199097, 0.8076666593551636, 0.8223333358764648, 0.8116666674613953, 0.7993333339691162, 0.765333354473114, 0.8289999961853027, 0.8339999914169312, 0.8059999942779541, 0.8389999866485596, 0.7943333387374878, 0.8523333072662354, 0.8379999995231628, 0.8353333473205566, 0.8396666646003723, 0.8553333282470703, 0.8413333296775818, 0.843999981880188, 0.8059999942779541, 0.8493333458900452, 0.82833331823349]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 3, 5, 6, 1, 8], [1, 0, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [84, 89, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [38, 25, 50, 71, 34]], "fitness": -0.38428571820259094, "mapping_values": [1, 16, 16, 10, 6, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), grad)))), tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.3562884466790757, 2.504223782042187, 2.2656397162301274, 2.264096668100061, 2.303975380265308, 2.3036530219080458, 2.301647383570592, 2.1551043282504945], "accuracy": [0.23035265505313873, 0.14912164211273193, 0.16655659675598145, 0.16576409339904785, 0.10038304328918457, 0.09536388516426086, 0.10276053100824356, 0.2631092369556427], "val_loss": [1.6885343619755335, 1.9713424273899622, 1.4209480285644531, 1.9745447976248605, 1.9735982758658273, 1.9732688495091029, 1.968244961329869, 1.9879985536847795], "val_accuracy": [0.27166667580604553, 0.14100000262260437, 0.4183333218097687, 0.09700000286102295, 0.09700000286102295, 0.10233332961797714, 0.17666666209697723, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1], [2, 9, 6, 8, 9, 3, 8, 1, 5, 6, 1, 8], [2, 1, 0, 0, 1, 0, 2, 2, 0, 0, 0, 3, 2, 2], [33, 18, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [0, 0, 1, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [71, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.3080604008049965, 2.3207453360347827, 2.3450769013606516, 2.3534054184287467, 2.3570025297849404, 2.347298483791258], "accuracy": [0.09589222073554993, 0.1006472036242485, 0.10236428678035736, 0.1026284471154213, 0.09760929644107819, 0.1022322028875351], "val_loss": [1.989652497427804, 2.019074167524065, 2.0204645565577914, 2.0217204093933105, 2.022666726793562, 2.0240750312805176], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 1, 5, 5, 1, 8], [2, 3, 0, 0, 2, 1, 2, 2, 0, 0, 0, 3, 2, 2], [84, 89, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [3, 3], [], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [4, 3, 5, 9, 9, 9], [1, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 3, 6, 0, 3, 8, 1, 5, 6, 1, 8], [2, 3, 0, 0, 2, 1, 2, 2, 0, 0, 0, 3, 2, 2], [84, 89, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [1, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 3, 2, 9, 2, 9], [2, 0, 1, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 9, 5, 4, 3], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(beta, tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [10.64809406781477, 52062.990724637915, 2.3928865072607852, 2.656270901162658, 2.8219230072357555, 2.7159972529385494, 2.723524875802103], "accuracy": [0.05904107913374901, 0.10487385839223862, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [5.48891544342041, 1.9963619368416923, 2.143460546221052, 2.370525291987828, 2.3821612085614885, 2.275319848741804, 2.433163983481271], "val_accuracy": [0.0989999994635582, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 1, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 89, 50, 73, 88, 46, 75, 84, 13], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [5, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [5, 3], [], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 8, 3, 6, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 3, 6, 0, 3, 8, 1, 5, 6, 1, 8], [2, 3, 0, 0, 2, 1, 2, 2, 0, 0, 0, 3, 2, 2], [84, 89, 68, 73, 46], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 9, 5, 4, 3], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [946106.7960981982, 2.4545796379799287, 2.399815144052028, 2.384082084665083, 2.377721989269758, 2.4072150523400246], "accuracy": [0.09615638852119446, 0.10117553919553757, 0.0948355570435524, 0.09734513610601425, 0.09245806187391281, 0.09681680053472519], "val_loss": [2.0832994324820384, 2.094534056527274, 2.021553243909563, 2.0911047799246654, 2.018125057220459, 2.0984131949288503], "val_accuracy": [0.10400000214576721, 0.10233332961797714, 0.09966666996479034, 0.10400000214576721, 0.09966666996479034, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0], [2, 9, 0, 6, 8, 3, 8, 1, 5, 4, 1, 8, 8, 8, 9], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [84, 89, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [1, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [50, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 8, 8, 4, 4, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1], [2, 9, 6, 4, 4, 3, 8, 1, 8, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [71, 18, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 0, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [71, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 20, 12, 8, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), grad))), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(grad, tf.math.add(alpha, tf.math.sqrt(grad)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(beta), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [23814738.867061183, 2.313900033827109, 2.305788578437288, 2.303707348750866, 2.3031818112519598, 2.3031785262967808], "accuracy": [0.09245806187391281, 0.09787346422672272, 0.09655263274908066, 0.09694888442754745, 0.09906221181154251, 0.08928807079792023], "val_loss": [1.990746225629534, 1.9782086099897112, 1.9751145499093192, 1.974205562046596, 1.9737248420715332, 1.9736073357718331], "val_accuracy": [0.10400000214576721, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1], [2, 9, 6, 6, 0, 3, 8, 5, 5, 6, 1, 8], [2, 0, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 89, 0, 73, 88, 46, 75, 84, 13], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1], [1, 3, 2, 9, 2, 9], [2, 0, 0, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [47, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 10, 5, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 2], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.square(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))))), tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [2, 8, 6, 6, 4, 3, 8, 1, 5, 6, 1, 2], [2, 0, 0, 0, 2, 1, 2, 2, 0, 0, 0, 3, 2, 2], [84, 89, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [1, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 0, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [71, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.sqrt(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 2, 8, 1, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [84, 89, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [4, 3, 2, 9, 2, 9], [2, 2, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 9, 6, 3, 2], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(tf.math.add(beta, beta), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 1, 5, 6, 1, 8], [1, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [84, 89, 42, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 1, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 9, 5, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.add(alpha, grad)), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.subtract(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [299721648.4314923, 5731203790.463612, 27107988464.986923, 74134303980.01637, 161944479618.75577, 296183685335.3227], "accuracy": [0.09774138033390045, 0.10381719470024109, 0.1006472036242485, 0.09932637959718704, 0.09708096832036972, 0.09747721254825592], "val_loss": [1147233645.7142856, 9173492882.285715, 30955681499.42857, 73370650916.57143, 143294744868.57144, 247603948982.85715], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 0, 0, 3, 8, 1, 5, 6, 1, 8], [2, 3, 0, 2, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [84, 89, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [0, 3], [15], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 9, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), beta)", "other_info": {"loss": [2.3035467837102788, 2.3029658351954123, 2.3031317907128557, 2.3030125057818536, 2.303053959595954, 2.3031742548221423], "accuracy": [0.08677849918603897, 0.09774138033390045, 0.09708096832036972, 0.09628847241401672, 0.09615638852119446, 0.09179764986038208], "val_loss": [1.973618711744036, 1.9736486843654089, 1.9736950056893485, 1.9737912586757116, 1.9736289978027344, 1.9735725947788783], "val_accuracy": [0.10233332961797714, 0.09966666996479034, 0.10000000149011612, 0.10000000149011612, 0.09966666996479034, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [9, 9, 6, 6, 0, 3, 8, 5, 2, 6, 1, 8], [2, 3, 0, 0, 2, 1, 2, 2, 0, 0, 0, 3, 2, 2], [84, 89, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [5, 3], [], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0758156105875969, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 3, 6, 0, 3, 8, 1, 5, 6, 1, 8], [0, 3, 0, 0, 2, 1, 2, 2, 0, 0, 0, 3, 2, 2], [84, 89, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1], [1, 3, 8, 3, 6, 9], [1, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [23910800.672229115, 2.309628572950211, 2.3056766193272997, 384163366809480.5, 2.3123605151485696, 2.307027764591826], "accuracy": [0.09245806187391281, 0.09800554811954498, 0.09734513610601425, 0.09866596013307571, 0.09906221181154251, 0.09298639744520187], "val_loss": [1.9829984392438615, 1.977663176400321, 2560751690280375.0, 1.9866019657679967, 1.979736600603376, 1.9763657706124442], "val_accuracy": [0.10400000214576721, 0.10233332961797714, 0.10400000214576721, 0.10000000149011612, 0.10000000149011612, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 1, 5, 5, 1, 8], [2, 3, 0, 0, 2, 1, 2, 2, 0, 0, 0, 3, 2, 2], [84, 89, 68, 73, 46], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [4, 3, 5, 9, 9, 9], [2, 0, 0, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [82, 46, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 15, 15, 10, 5, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 2], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.square(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(beta, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3024406997424705, 2.3021465219196124, 2.303439959810867, 2.3012244895685146, 2.3022327859246454, 2.301306632877955], "accuracy": [0.09100515395402908, 0.09589222073554993, 0.08955223858356476, 0.08730682730674744, 0.08651433140039444, 0.08796724677085876], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 9, 6, 3, 0, 3, 8, 1, 5, 6, 1, 8], [2, 3, 0, 0, 2, 1, 2, 2, 0, 0, 0, 3, 2, 2], [6, 89, 50, 73, 32, 46, 75, 84, 13], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [3, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 8, 3, 6, 9], [1, 0, 1, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.009142857044935226, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.2590205034543938, 2.1065164393343236, 3.4013922176089, 2.1831632597949353, 4.667063805373936, 7.314443890129838, 4.5128078757968675, 2.4973927268798026, 2.393099338528723], "accuracy": [0.27644962072372437, 0.32426363229751587, 0.15915995836257935, 0.2339189052581787, 0.24144762754440308, 0.1302337795495987, 0.1006472036242485, 0.09998679161071777, 0.10117553919553757], "val_loss": [2.141782215663365, 1.9488879612513952, 1.8745049749101912, 1.733870029449463, 2.168356418609619, 2.029925959450858, 2.0635900497436523, 2.012114797319685, 2.0549770082746233], "val_accuracy": [0.34466665983200073, 0.2939999997615814, 0.23333333432674408, 0.44999998807907104, 0.13899999856948853, 0.09733333438634872, 0.10400000214576721, 0.10400000214576721, 0.10233332961797714]}}]