[{"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.7914285659790039, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 1, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.multiply(grad, tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), beta)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.236150243641001, 1.8515515315329567, 1.3142255711879838, 1.1036620546624865, 0.986123476416097, 0.9158039404700036, 0.8749584394155665, 0.819627680074364, 0.821217490217201, 0.7740190858932896, 0.7517882333518555, 0.732745062901816, 0.7231300698846417, 0.7073004078698149, 0.6832418319429814, 0.7039828624282578, 0.6702228834789348, 0.6662820399854602, 0.6696124381597693, 0.6586375932148056, 0.636741793623312, 0.6396278307154792, 0.6273924928803596, 0.6237076931247905, 0.6184236335086785, 0.6028457818533908, 0.6078641089576189, 0.6076660336693596, 0.6007615532920408, 0.5928284248907678, 0.5969243203219075, 0.5853078630637846, 0.5803013598961427, 0.5786997038359812, 0.5667960790280322, 0.5710584756925263, 0.5776722309706218, 0.5644264327867267], "accuracy": [0.2366926372051239, 0.44247788190841675, 0.5511821508407593, 0.6112799048423767, 0.651168942451477, 0.6707172393798828, 0.6876237988471985, 0.7058512568473816, 0.6980583667755127, 0.7165499925613403, 0.7238145470619202, 0.7290979027748108, 0.7296261787414551, 0.7417778372764587, 0.7469290494918823, 0.7364945411682129, 0.7460044622421265, 0.7511557340621948, 0.7515519857406616, 0.7573636174201965, 0.7637035846710205, 0.7580240368843079, 0.7656848430633545, 0.7705719470977783, 0.7713643908500671, 0.7761194109916687, 0.774270236492157, 0.7750627398490906, 0.778232753276825, 0.77677983045578, 0.7745344042778015, 0.7827235460281372, 0.7869502305984497, 0.7866860628128052, 0.7911768555641174, 0.7874785661697388, 0.7909126877784729, 0.7890635132789612], "val_loss": [1.7700672830854143, 1.1514591489519392, 0.8224161182131086, 0.7436986310141427, 0.6577556473868233, 0.6538577590669904, 0.6095781666891915, 0.6016223771231515, 0.5622887100492205, 0.5554992812020438, 0.5403111491884504, 0.5389328173228672, 0.531509348324367, 0.517292823110308, 0.5337461062840053, 0.5058450187955584, 0.4980792488370623, 0.4926083428519113, 0.4998107297079904, 0.4771157843726022, 0.487703766141619, 0.4691499301365444, 0.47463694640568327, 0.4746384620666504, 0.4641040563583374, 0.4603623151779175, 0.45978890146527973, 0.46724588530404226, 0.45285758801868986, 0.46022355556488037, 0.45417140211377827, 0.4558347037860325, 0.441718373979841, 0.44006818532943726, 0.45133850404194426, 0.4412496175084795, 0.43461425815309795, 0.4345729351043701], "val_accuracy": [0.47999998927116394, 0.6169999837875366, 0.6890000104904175, 0.6956666707992554, 0.7160000205039978, 0.7129999995231628, 0.7236666679382324, 0.7226666808128357, 0.7636666893959045, 0.7576666474342346, 0.7593333125114441, 0.7676666378974915, 0.7773333191871643, 0.7683333158493042, 0.7536666393280029, 0.7846666574478149, 0.7883333563804626, 0.7916666865348816, 0.7816666960716248, 0.7856666445732117, 0.7983333468437195, 0.7940000295639038, 0.800000011920929, 0.8053333163261414, 0.7996666431427002, 0.8050000071525574, 0.7983333468437195, 0.800000011920929, 0.815666675567627, 0.8003333210945129, 0.8096666932106018, 0.8036666512489319, 0.8166666626930237, 0.8143333196640015, 0.812666654586792, 0.8140000104904175, 0.8166666626930237, 0.8163333535194397]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [0, 6, 5, 4, 9, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 29, 20, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9, 6, 4, 5, 3, 4, 4, 0, 5, 6, 8, 0, 1, 1, 4, 6, 1, 3, 3, 8, 1, 6], [1, 1, 3, 1], [56, 38]], "fitness": -0.21971428394317627, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 5, 2, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.square(grad), tf.math.pow(tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.7865783467253107, 2.329088406398422, 2.3026908037291225, 2.270611836122657, 2.3313576885422918, 2.3037853290722623, 2.3033668699517715, 2.303139626688536, 2.30292921238855], "accuracy": [0.21899352967739105, 0.1010434553027153, 0.10579843819141388, 0.18002906441688538, 0.11094967275857925, 0.09972262382507324, 0.09655263274908066, 0.10130762308835983, 0.09681680053472519], "val_loss": [2.085697514670236, 1.9745586259024483, 1.97098936353411, 1.9762763295854842, 1.974926539829799, 1.9738732746669225, 1.9735373088291712, 1.9735554967607771, 1.9736052921840124], "val_accuracy": [0.09966666996479034, 0.1223333328962326, 0.09966666996479034, 0.16899999976158142, 0.09733333438634872, 0.10000000149011612, 0.10233332961797714, 0.10233332961797714, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [0, 6, 5, 4, 9, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 29, 20, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9, 6, 4, 5, 3, 4, 4, 0, 5, 6, 8, 0, 1, 1, 4, 6, 1, 3, 3, 8, 1, 6], [1, 1, 3, 1], [56, 38]], "fitness": -0.21971428394317627, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, alpha)), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.7865783467253107, 2.329088406398422, 2.3026908037291225, 2.270611836122657, 2.3313576885422918, 2.3037853290722623, 2.3033668699517715, 2.303139626688536, 2.30292921238855], "accuracy": [0.21899352967739105, 0.1010434553027153, 0.10579843819141388, 0.18002906441688538, 0.11094967275857925, 0.09972262382507324, 0.09655263274908066, 0.10130762308835983, 0.09681680053472519], "val_loss": [2.085697514670236, 1.9745586259024483, 1.97098936353411, 1.9762763295854842, 1.974926539829799, 1.9738732746669225, 1.9735373088291712, 1.9735554967607771, 1.9736052921840124], "val_accuracy": [0.09966666996479034, 0.1223333328962326, 0.09966666996479034, 0.16899999976158142, 0.09733333438634872, 0.10000000149011612, 0.10233332961797714, 0.10233332961797714, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [1, 6, 3, 4, 9, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [5, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 29, 20, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9, 6, 4, 5, 3, 4, 4, 0, 5, 6, 8, 0, 1, 1, 4, 6, 1, 3, 3, 8, 1, 6], [1, 1, 3, 1], [56, 38]], "fitness": -0.21971428394317627, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 3, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.pow(tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), beta), tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.7865783467253107, 2.329088406398422, 2.3026908037291225, 2.270611836122657, 2.3313576885422918, 2.3037853290722623, 2.3033668699517715, 2.303139626688536, 2.30292921238855], "accuracy": [0.21899352967739105, 0.1010434553027153, 0.10579843819141388, 0.18002906441688538, 0.11094967275857925, 0.09972262382507324, 0.09655263274908066, 0.10130762308835983, 0.09681680053472519], "val_loss": [2.085697514670236, 1.9745586259024483, 1.97098936353411, 1.9762763295854842, 1.974926539829799, 1.9738732746669225, 1.9735373088291712, 1.9735554967607771, 1.9736052921840124], "val_accuracy": [0.09966666996479034, 0.1223333328962326, 0.09966666996479034, 0.16899999976158142, 0.09733333438634872, 0.10000000149011612, 0.10233332961797714, 0.10233332961797714, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 3, 3, 0, 1, 2, 3, 3, 0], [28, 76, 20, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [1, 1, 3, 1], [56, 38]], "fitness": -0.21971428394317627, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 9, 8, 2, 5, 4, 2, 2, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(tf.math.add(grad, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(beta, alpha)), tf.math.add(tf.math.add(beta, beta), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.7865783467253107, 2.329088406398422, 2.3026908037291225, 2.270611836122657, 2.3313576885422918, 2.3037853290722623, 2.3033668699517715, 2.303139626688536, 2.30292921238855], "accuracy": [0.21899352967739105, 0.1010434553027153, 0.10579843819141388, 0.18002906441688538, 0.11094967275857925, 0.09972262382507324, 0.09655263274908066, 0.10130762308835983, 0.09681680053472519], "val_loss": [2.085697514670236, 1.9745586259024483, 1.97098936353411, 1.9762763295854842, 1.974926539829799, 1.9738732746669225, 1.9735373088291712, 1.9735554967607771, 1.9736052921840124], "val_accuracy": [0.09966666996479034, 0.1223333328962326, 0.09966666996479034, 0.16899999976158142, 0.09733333438634872, 0.10000000149011612, 0.10233332961797714, 0.10233332961797714, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 6, 2, 9, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 29, 20, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [1, 1, 3, 1], [56, 38]], "fitness": -0.21971428394317627, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.7865783467253107, 2.329088406398422, 2.3026908037291225, 2.270611836122657, 2.3313576885422918, 2.3037853290722623, 2.3033668699517715, 2.303139626688536, 2.30292921238855], "accuracy": [0.21899352967739105, 0.1010434553027153, 0.10579843819141388, 0.18002906441688538, 0.11094967275857925, 0.09972262382507324, 0.09655263274908066, 0.10130762308835983, 0.09681680053472519], "val_loss": [2.085697514670236, 1.9745586259024483, 1.97098936353411, 1.9762763295854842, 1.974926539829799, 1.9738732746669225, 1.9735373088291712, 1.9735554967607771, 1.9736052921840124], "val_accuracy": [0.09966666996479034, 0.1223333328962326, 0.09966666996479034, 0.16899999976158142, 0.09733333438634872, 0.10000000149011612, 0.10233332961797714, 0.10233332961797714, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [0, 6, 4, 4, 9, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 29, 20, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [1, 1, 3, 1], [56, 38]], "fitness": -0.21971428394317627, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.7865783467253107, 2.329088406398422, 2.3026908037291225, 2.270611836122657, 2.3313576885422918, 2.3037853290722623, 2.3033668699517715, 2.303139626688536, 2.30292921238855], "accuracy": [0.21899352967739105, 0.1010434553027153, 0.10579843819141388, 0.18002906441688538, 0.11094967275857925, 0.09972262382507324, 0.09655263274908066, 0.10130762308835983, 0.09681680053472519], "val_loss": [2.085697514670236, 1.9745586259024483, 1.97098936353411, 1.9762763295854842, 1.974926539829799, 1.9738732746669225, 1.9735373088291712, 1.9735554967607771, 1.9736052921840124], "val_accuracy": [0.09966666996479034, 0.1223333328962326, 0.09966666996479034, 0.16899999976158142, 0.09733333438634872, 0.10000000149011612, 0.10233332961797714, 0.10233332961797714, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [0, 6, 5, 4, 9, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 29, 92, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9, 6, 4, 5, 3, 4, 4, 0, 5, 6, 8, 0, 1, 1, 4, 6, 1, 3, 3, 8, 1, 6], [1, 1, 3, 1], [56, 38]], "fitness": -0.19028571248054504, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.494288588999883, 3.035287266693347, 5582.109605541035, NaN, NaN, NaN], "accuracy": [0.1830669641494751, 0.12534672021865845, 0.15255580842494965, 0.09747721254825592, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.8873158863612585, 1.9281766755240304, 5018279664493.714, NaN, NaN, NaN], "val_accuracy": [0.1886666715145111, 0.17599999904632568, 0.09700000286102295, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [0, 6, 5, 4, 9, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [5, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 29, 20, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9, 6, 4, 5, 3, 4, 4, 0, 5, 6, 8, 0, 1, 1, 4, 6, 1, 3, 3, 8, 1, 6], [1, 1, 3, 1], [56, 38]], "fitness": -0.19028571248054504, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.math.square(grad), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.494288588999883, 3.035287266693347, 5582.109605541035, NaN, NaN, NaN], "accuracy": [0.1830669641494751, 0.12534672021865845, 0.15255580842494965, 0.09747721254825592, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.8873158863612585, 1.9281766755240304, 5018279664493.714, NaN, NaN, NaN], "val_accuracy": [0.1886666715145111, 0.17599999904632568, 0.09700000286102295, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 0, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [0, 6, 5, 4, 9, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [25, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 6, 2, 3, 9, 2, 1, 2], [1, 1, 3, 1, 0, 0], [56, 38, 70]], "fitness": -0.10171428322792053, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 14, 8, 6, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(grad)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.multiply(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.add(sigma, tf.math.subtract(tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [7575413028.819187, 179003275665.16022, 880478947257.939, 2535520939715.5083, 5587054267579.055, 10609774682565.367, 17727440441102.168, 27178607206909.633], "accuracy": [0.08849557489156723, 0.09708096832036972, 0.10077928751707077, 0.10659094154834747, 0.09615638852119446, 0.10500594228506088, 0.1002509593963623, 0.1072513535618782], "val_loss": [16771993014.857143, 189384050980.57144, 785937427894.8572, 2074091716608.0, 4320041144905.143, 7791420899328.0, 12754077351936.0, 19474126508617.145], "val_accuracy": [0.0676666647195816, 0.10333333164453506, 0.10566666722297668, 0.10566666722297668, 0.10566666722297668, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [5, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [6, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 1, 0, 1, 0, 1, 2, 3, 3, 0], [28, 29, 92, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [4, 3, 9, 3, 9], [1, 1, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 1, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.pow(tf.math.add(tf.math.add(beta, grad), alpha), tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(alpha, tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 0, 2, 3, 3, 1, 2, 3, 3, 0], [91, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0, 1], [0, 0, 0, 1], [3, 3, 0], [4, 4], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [8, 3, 9, 3, 9], [1, 1, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 1, 6, 4, 3, 1, 0, 4, 3, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.negative(sigma)), tf.math.add(sigma, grad))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [0, 6, 5, 4, 9, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 29, 20, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9, 6, 4, 5, 3, 4, 4, 0, 5, 6, 8, 0, 1, 1, 4, 6, 1, 3, 3, 8, 1, 6], [1, 1, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07396645098924637, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [5, 6, 9, 9, 0], [3, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [6, 4, 2, 4, 0, 2, 2, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 2, 0, 1, 0, 1, 2, 3, 3, 0], [4, 13, 92, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [6, 3, 9, 3, 9], [1, 1, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [2.3021525732357078, 2.302583114109838, 2.3025830691091578, 2.3025828397285037, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736425536019462, 1.9736425536019462, 1.9736425536019462, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [5, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [6, 3, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 5, 5, 0, 1, 2, 3, 3, 0], [34, 29, 92, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [1, 1, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 7, 7, 1, 1, 0, 0, 0, 0, 6, 4, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(grad, beta), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.pow(tf.math.negative(grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(alpha, tf.math.add(beta, beta))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, alpha)))", "other_info": {"loss": [2.309030214714541, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08519349992275238, 0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.002335888998849, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.06466666609048843, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [0, 6, 5, 4, 9, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9, 6, 4, 5, 3, 4, 4, 0, 5, 6, 8, 0, 1, 1, 4, 6, 1, 3, 3, 8, 1, 6], [2, 3, 3, 1, 3, 3, 1, 2, 1, 2, 3, 0, 1, 0, 2], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0738343670964241, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [0, 6, 2, 4, 9, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 2, 3, 5, 0, 2, 3, 3, 0], [28, 29, 20, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 1, 0, 0, 1, 1, 1, 0, 1, 0], [1, 3, 9, 3, 9], [1, 1, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07396645098924637, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [5, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [2, 3, 3, 1], [56, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(beta, sigma)))", "other_info": {"loss": [2.3030639035496114, 2.3012666216363935, 2.3022415103567213, 2.3031029929542868, 2.3021181611935413, 2.3029828548998235], "accuracy": [0.09377889335155487, 0.0944393053650856, 0.09377889335155487, 0.09074098616838455, 0.09232597798109055, 0.09113723784685135], "val_loss": [1.970653806413923, 1.970719269343785, 1.9707822118486678, 1.970839500427246, 1.9709039415631975, 1.9709697450910295], "val_accuracy": [0.03866666555404663, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [0, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [0, 6, 5, 4, 9, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 2, 3, 0, 1, 2, 3, 3, 0], [28, 29, 20, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [8, 3, 9, 3, 9, 6, 4, 5, 3, 4, 4, 0, 5, 6, 8, 0, 1, 1, 4, 6, 1, 3, 3, 8, 1, 6], [2, 1, 3, 1], [56, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 3, 2, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(beta)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(beta)", "other_info": {"loss": [2.303037886228449, 2.3011734559945047, 2.3020777365692444, 2.30288736065381, 2.301826348819312, 2.3026216223790676], "accuracy": [0.09391097724437714, 0.09470347315073013, 0.0944393053650856, 0.09140139818191528, 0.09338264167308807, 0.09153348207473755], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [5, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [6, 4, 2, 4, 7, 4, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 0, 3, 3, 0, 1, 3, 3, 3, 0], [28, 16, 98, 84, 1, 78], [1, 1, 0, 1, 0], [0, 0, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [1, 3, 3, 1], [56, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 20, 20, 10, 10, 3, 1, 0, 0, 0, 0, 6, 4, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.pow(tf.math.add(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.add(beta, alpha)), tf.math.add(tf.math.add(beta, grad), grad)))))), tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, sigma)))", "other_info": {"loss": [2.303037886228449, 2.3011734559945047, 2.3020777365692444, 2.30288736065381, 2.301826348819312, 2.3026216223790676], "accuracy": [0.09391097724437714, 0.09470347315073013, 0.0944393053650856, 0.09140139818191528, 0.09338264167308807, 0.09153348207473755], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]