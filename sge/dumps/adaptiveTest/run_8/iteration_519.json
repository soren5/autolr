[{"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.8091428279876709, "mapping_values": [1, 16, 16, 10, 6, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), grad))))), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.192468370665113, 2.0866715840344825, 1.5864555898705934, 1.1969093817603933, 1.0456531702440806, 0.9284648169710368, 0.8736667988669083, 0.8202437338355415, 0.7572109536125738, 0.7877807012402291, 0.7393317117887545, 0.7151541134165168, 0.675949542088799, 0.6597960011881293, 0.6424721400373411, 0.6335685305024781, 0.599110949064652, 0.5919424222681139, 0.5884620219945372, 0.5558981790424197, 0.5265673479352408, 0.544337299230344, 0.5412506178590237, 0.5091746851296047, 0.5365009719055437], "accuracy": [0.2731475234031677, 0.3156782388687134, 0.47866860032081604, 0.572579562664032, 0.6124686598777771, 0.6654338836669922, 0.6715096831321716, 0.6882842183113098, 0.7144366502761841, 0.7000396251678467, 0.7176066637039185, 0.7297582626342773, 0.7429665923118591, 0.7454761862754822, 0.7537974119186401, 0.7568352818489075, 0.7814027070999146, 0.7738739848136902, 0.7784969210624695, 0.7930260300636292, 0.807158887386322, 0.7989697456359863, 0.7907806038856506, 0.8132346868515015, 0.7964601516723633], "val_loss": [1.947789192199707, 1.4809705870492118, 1.0962284292493547, 0.812502213886806, 0.7784842423030308, 0.7547980717250279, 0.6061065537588937, 0.6015258346285138, 0.5718826225825718, 0.5698841299329486, 0.5484538929803031, 0.579666018486023, 0.5527433156967163, 0.5276481424059186, 0.5212991918836322, 0.4821664946419852, 0.5132988521030971, 0.4525724308831351, 0.45149373156683786, 0.4274442195892334, 0.43984841448920114, 0.4233927982194083, 0.42093175649642944, 0.48188737460545134, 0.41429851736341206], "val_accuracy": [0.23499999940395355, 0.4519999921321869, 0.5400000214576721, 0.6493333578109741, 0.6859999895095825, 0.6756666898727417, 0.715666651725769, 0.7316666841506958, 0.737333357334137, 0.753000020980835, 0.7429999709129333, 0.7409999966621399, 0.7183333039283752, 0.7576666474342346, 0.7443333268165588, 0.7906666398048401, 0.7746666669845581, 0.8016666769981384, 0.7996666431427002, 0.8259999752044678, 0.8106666803359985, 0.8133333325386047, 0.8256666660308838, 0.7879999876022339, 0.8206666707992554]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [2, 9, 6, 6, 2, 3, 8, 2, 6, 6, 1, 8, 2, 1, 9, 6, 3, 5], [1, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 3, 2, 2], [24, 98, 75, 86, 46, 73, 84, 25, 62, 84], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [89, 25, 50, 71, 34]], "fitness": -0.40685713291168213, "mapping_values": [1, 21, 21, 12, 9, 7, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.302057723579563, 2.300573971545172, 2.300717633839029, 2.299346664562485, 2.299922832298304, 2.2988520098431646, 2.2976843751794735, 2.297582309889425, 2.2958600413388326, 2.2941255827684444, 2.296083179400062, 2.294619607824644, 2.293628926164423, 2.292546069066223, 2.291006386886262, 2.290151948265002, 2.290500119535159, 2.2905544932051387, 2.2884659596469503, 2.2900068869821903, 2.2881863258612736, 2.287432008179471, 2.286824920851053, 2.2852098636025087, 2.283666048508436, 2.2844500958313323, 2.2831785790971586, 2.281889407295577, 2.2816263920815865, 2.2814321168079004, 2.2805043320850436, 2.2808572740256277, 2.2794448098391906, 2.2780888102010826, 2.2757230451818407, 2.2769305130368163, 2.2772019696415158, 2.2756360218651213, 2.273707163348064, 2.2744386600481286, 2.2720323394019104, 2.2731127448605353, 2.271284741118379, 2.2722581228355234, 2.270293477724383, 2.271184859416268, 2.2707178856891614, 2.2683763072286314, 2.2676683367204045, 2.266470550246888, 2.2653247263327314, 2.266242071118227, 2.265797978457742, 2.2637876621279593, 2.2642149785726677, 2.2622548711928143, 2.2599436005171754, 2.260301087935839, 2.2599872974057664, 2.258896684571028, 2.257311953844537, 2.258414553518954, 2.2566719901969545, 2.2581133909544153, 2.2559606804115235, 2.2540772693063666, 2.2556963487465653, 2.2521375176015703, 2.251938996046069, 2.25105029345346, 2.250436304362222, 2.2505148234006485, 2.2480520975981815, 2.247098488783115, 2.2474670670272148, 2.245220608919713, 2.245630983789253, 2.2427476677739024, 2.244205444433182, 2.242740858720672, 2.243244080542888, 2.241906241497674, 2.2410164408443816, 2.2389137481953476, 2.238952697055561, 2.237467490891424, 2.2356232009653905, 2.2368745679758355, 2.2374059959661534, 2.2338773164105468, 2.2312009755599265, 2.231152237965336, 2.23300531521103, 2.22976064656814, 2.2304372121125415, 2.22851270090052, 2.2256626139983307, 2.227175224726431, 2.224005028178364, 2.2255933771610827], "accuracy": [0.0882314071059227, 0.09932637959718704, 0.09642054885625839, 0.09800554811954498, 0.09959053993225098, 0.09734513610601425, 0.09721305221319199, 0.09919429570436478, 0.10236428678035736, 0.10857218503952026, 0.10421344637870789, 0.10817593336105347, 0.11134592443704605, 0.11081759631633759, 0.11781799048185349, 0.11900673806667328, 0.12112006545066833, 0.11702549457550049, 0.12970545887947083, 0.12151630967855453, 0.12310130894184113, 0.12323339283466339, 0.12732796370983124, 0.1368379294872284, 0.13934750854969025, 0.13617752492427826, 0.13630960881710052, 0.1398758441209793, 0.1460837423801422, 0.14634791016578674, 0.15136705338954926, 0.14714039862155914, 0.14700831472873688, 0.15532954037189484, 0.16232994198799133, 0.1550653874874115, 0.15189538896083832, 0.16153743863105774, 0.16972659528255463, 0.16180160641670227, 0.16893409192562103, 0.1644432693719864, 0.17699114978313446, 0.15942411124706268, 0.17236824333667755, 0.17316074669361115, 0.17223615944385529, 0.17633073031902313, 0.1834632158279419, 0.189274862408638, 0.18782195448875427, 0.18412363529205322, 0.1868973672389984, 0.19719983637332916, 0.19019944965839386, 0.1990489959716797, 0.2071060687303543, 0.20380398631095886, 0.20221899449825287, 0.19865275919437408, 0.21014396846294403, 0.20776647329330444, 0.21357811987400055, 0.20499274134635925, 0.20618148148059845, 0.21397437155246735, 0.2090873122215271, 0.21714437007904053, 0.2230881005525589, 0.22797517478466034, 0.2222955971956253, 0.2262580841779709, 0.23154141008853912, 0.23035265505313873, 0.22744683921337128, 0.23576806485652924, 0.23405098915100098, 0.23893804848194122, 0.22876766324043274, 0.2355038970708847, 0.24144762754440308, 0.2390701323747635, 0.2487121969461441, 0.2514859437942505, 0.25584468245506287, 0.25544843077659607, 0.2537313401699066, 0.25016510486602783, 0.2475234419107437, 0.25478801131248474, 0.261260062456131, 0.266939640045166, 0.2553163468837738, 0.2661471366882324, 0.26218464970588684, 0.26958128809928894, 0.2685246467590332, 0.26178839802742004, 0.2723550498485565, 0.270109623670578], "val_loss": [1.9699020385742188, 1.969226292201451, 1.9685426439557756, 1.9678733689444405, 1.9671927860804967, 1.9665171759469169, 1.9658403396606445, 1.9651607785906111, 1.9644866670880998, 1.9638159615652901, 1.963149070739746, 1.9624794551304408, 1.961800983973912, 1.9611340931483678, 1.9604693140302385, 1.959799017224993, 1.959125246320452, 1.9584477288382394, 1.957782404763358, 1.95711088180542, 1.9564425604684013, 1.9557736260550362, 1.9551114354814803, 1.9544452939714705, 1.9537861687796456, 1.9531193460736955, 1.9524538176400321, 1.9517797061375208, 1.951106343950544, 1.9504306656973702, 1.9497551918029785, 1.9490786279950822, 1.948402268545968, 1.947730200631278, 1.9470463480268205, 1.9463702610560827, 1.945687975202288, 1.945002487727574, 1.9443152291434151, 1.9436281749180384, 1.9429397583007812, 1.9422524315970284, 1.9415618351527624, 1.9408792087009974, 1.9401914051600866, 1.939499991280692, 1.9387953622000558, 1.9380927085876465, 1.9373916217258997, 1.9366873332432337, 1.9359822954450334, 1.9352696963718958, 1.934561116354806, 1.933844702584403, 1.9331334659031458, 1.932411057608468, 1.9316825866699219, 1.9309495517185755, 1.930205958230155, 1.9294708796909876, 1.928727081843785, 1.9279885973249162, 1.9272477967398507, 1.9265046119689941, 1.925759928567069, 1.9250026430402483, 1.9242446763174874, 1.923473630632673, 1.9226993833269392, 1.9219241823468889, 1.9211393765040807, 1.920353616986956, 1.919562884739467, 1.918771198817662, 1.917980125972203, 1.9171769278390067, 1.9163690975734167, 1.9155522074018205, 1.914733614240374, 1.9139047350202287, 1.9130806241716658, 1.9122546059744698, 1.9114159856523787, 1.910569190979004, 1.9097166742597307, 1.908858367374965, 1.9079837117876326, 1.90712342943464, 1.9062552452087402, 1.9053739139011927, 1.9044767107282365, 1.903576169695173, 1.9026848248073034, 1.9017690931047713, 1.900866917201451, 1.899951594216483, 1.8990127018519811, 1.8980821881975447, 1.8971338953290666, 1.8961975915091378], "val_accuracy": [0.0430000014603138, 0.04899999871850014, 0.052000001072883606, 0.056333333253860474, 0.06133333221077919, 0.06499999761581421, 0.06966666877269745, 0.07500000298023224, 0.0806666687130928, 0.08566666394472122, 0.09266666322946548, 0.0989999994635582, 0.10866666585206985, 0.11299999803304672, 0.12033333629369736, 0.12733332812786102, 0.13233333826065063, 0.14000000059604645, 0.1456666737794876, 0.15266667306423187, 0.1599999964237213, 0.1666666716337204, 0.17233332991600037, 0.18033333122730255, 0.18833333253860474, 0.1940000057220459, 0.20133332908153534, 0.2083333283662796, 0.21466666460037231, 0.22066666185855865, 0.22366666793823242, 0.22966666519641876, 0.23466666042804718, 0.23800000548362732, 0.24300000071525574, 0.24933333694934845, 0.25433334708213806, 0.2626666724681854, 0.26866665482521057, 0.2736666798591614, 0.2783333361148834, 0.28433331847190857, 0.2916666567325592, 0.2953333258628845, 0.29866665601730347, 0.30399999022483826, 0.3089999854564667, 0.312666654586792, 0.31566667556762695, 0.31933334469795227, 0.3240000009536743, 0.32899999618530273, 0.3316666781902313, 0.33633333444595337, 0.34066668152809143, 0.34466665983200073, 0.34833332896232605, 0.34933334589004517, 0.3526666760444641, 0.35499998927116394, 0.35733333230018616, 0.359333336353302, 0.3623333275318146, 0.3619999885559082, 0.3646666705608368, 0.36533331871032715, 0.367333322763443, 0.36800000071525574, 0.3700000047683716, 0.37433332204818726, 0.37599998712539673, 0.37833333015441895, 0.3790000081062317, 0.3803333342075348, 0.38233333826065063, 0.38366666436195374, 0.3853333294391632, 0.3866666555404663, 0.3883333206176758, 0.3893333375453949, 0.390666663646698, 0.39266666769981384, 0.3946666717529297, 0.39500001072883606, 0.39633333683013916, 0.3996666669845581, 0.40033334493637085, 0.40166667103767395, 0.4033333361148834, 0.4036666750907898, 0.4050000011920929, 0.406333327293396, 0.4073333442211151, 0.4090000092983246, 0.4099999964237213, 0.4113333225250244, 0.41333332657814026, 0.41466665267944336, 0.41600000858306885, 0.41733333468437195]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], [9, 7, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [90, 25, 50, 71, 34]], "fitness": -0.3837142884731293, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.3021126734723882, 2.300758552840987, 2.3010372997133284, 2.299792676569685, 2.3005075871653133, 2.2995600323745715, 2.2985231673571067, 2.298557426982694, 2.29695780783313, 2.2953538967397598, 2.2974317818269943, 2.2961024369514536, 2.295251562642289, 2.2942782568500153, 2.292857240707867, 2.2921461837639066, 2.2926380418909225, 2.2928267168000454, 2.290839022995537, 2.292527114741948, 2.290823839029159, 2.290203377492298, 2.2896919067840313, 2.288211720226904, 2.2867732578973414, 2.287719768036185, 2.286571973035553, 2.285447375554891, 2.2852896698052465, 2.285247011364821, 2.2844481087159236, 2.284937046113, 2.2836607370740625, 2.2824004488755936, 2.280222494305243, 2.2815397728577484, 2.2819435728098565, 2.2805388112031015, 2.2787512357382016, 2.2796121148731823, 2.2773517154038085, 2.2785425086645574, 2.2768635222342164, 2.2779265756321116, 2.276156595496139, 2.277187380887073, 2.276909069378205, 2.2747205395850334, 2.274113939548795, 2.273109384547324, 2.2720818081552077, 2.2731721235886697, 2.2728568600342336, 2.27102166594547, 2.2715261316003423, 2.269829465791518, 2.2677276568122435, 2.2682148330735337, 2.2681505741176826, 2.267140020642062, 2.2658034054327003, 2.266946695421224, 2.2653553994450477, 2.2669963916027314, 2.265009936718279, 2.263398951322742, 2.2651384243356114, 2.26190272386536, 2.261849592799886, 2.2610933928048182, 2.2607122195662916, 2.2609677129276142, 2.2586779680076985, 2.2578650079209965, 2.258407034783898, 2.256469744890279, 2.2570593984387477, 2.254462279852717, 2.2560882174091694, 2.2549222310174173, 2.2554610303332856, 2.2543631837258107, 2.2537540732247563, 2.2518588331759393, 2.2521358984273423, 2.250912170368588, 2.249428919608394, 2.250615655911392, 2.25145348342434, 2.2482944461946963, 2.2459191115241657, 2.246165396688227, 2.248009965813722, 2.245287384796042, 2.2459732634028295, 2.2443621313850626, 2.2420852684373194, 2.2436223393181893, 2.2408205826426415, 2.2424954985111083], "accuracy": [0.0878351628780365, 0.09906221181154251, 0.0956280529499054, 0.09708096832036972, 0.09760929644107819, 0.09655263274908066, 0.09549596905708313, 0.09708096832036972, 0.09972262382507324, 0.10447761416435242, 0.10170386731624603, 0.10447761416435242, 0.1072513535618782, 0.1072513535618782, 0.11359133571386337, 0.11359133571386337, 0.11662924289703369, 0.11174217611551285, 0.12376172095537186, 0.11517632752656937, 0.11596883088350296, 0.11636507511138916, 0.11900673806667328, 0.1290450394153595, 0.12891295552253723, 0.12772421538829803, 0.12917712330818176, 0.13155461847782135, 0.13459251821041107, 0.13432836532592773, 0.14159291982650757, 0.1372341811656952, 0.136045441031456, 0.14397041499614716, 0.14898955821990967, 0.1430458277463913, 0.13749834895133972, 0.148064985871315, 0.1550653874874115, 0.14832915365695953, 0.15334829688072205, 0.1484612375497818, 0.15902787446975708, 0.1472724825143814, 0.15757495164871216, 0.1542728841304779, 0.15638621151447296, 0.15982036292552948, 0.16523577272891998, 0.16999074816703796, 0.17038699984550476, 0.16457535326480865, 0.1678774207830429, 0.1768590658903122, 0.17170783877372742, 0.18042530119419098, 0.18399155139923096, 0.17976489663124084, 0.18134988844394684, 0.17738740146160126, 0.18716153502464294, 0.18782195448875427, 0.1916523575782776, 0.18518029153347015, 0.18372738361358643, 0.19059570133686066, 0.18636904656887054, 0.19376568496227264, 0.1982565075159073, 0.20684190094470978, 0.1970677524805069, 0.20301149785518646, 0.20644564926624298, 0.20512482523918152, 0.2052568942308426, 0.21212521195411682, 0.21014396846294403, 0.21172896027565002, 0.19997358322143555, 0.2106723040342331, 0.21740853786468506, 0.2164839506149292, 0.22057852149009705, 0.2254655957221985, 0.22718267142772675, 0.22784309089183807, 0.22903183102607727, 0.22216351330280304, 0.21978603303432465, 0.2226918488740921, 0.23074890673160553, 0.23695680499076843, 0.22533351182937622, 0.23616431653499603, 0.22995641827583313, 0.23616431653499603, 0.23986263573169708, 0.23154141008853912, 0.24118345975875854, 0.24197596311569214], "val_loss": [1.9700278554643904, 1.969475269317627, 1.9689160755702428, 1.9683687346322196, 1.9678116525922502, 1.9672585896083288, 1.9667038917541504, 1.966146809714181, 1.9655944960457938, 1.9650449071611678, 1.9644989286150252, 1.9639514514378138, 1.9633962767464774, 1.9628500257219588, 1.9623061588832311, 1.9617573874337333, 1.9612067767551966, 1.960653509412493, 1.960108688899449, 1.9595586912972587, 1.959010464804513, 1.9584623745509557, 1.957920755658831, 1.9573775700160436, 1.9568401064191545, 1.9562956265040807, 1.9557531220572335, 1.955202851976667, 1.954655579158238, 1.9541049003601074, 1.9535557201930456, 1.9530042920793806, 1.9524547031947546, 1.9519092696053642, 1.95135498046875, 1.9508079120091029, 1.9502567563738142, 1.949704578944615, 1.9491513797215052, 1.9485996110098702, 1.9480458668300085, 1.947495460510254, 1.9469428743634904, 1.9463953290666853, 1.9458433559962682, 1.9452918597630091, 1.9447287150791712, 1.9441670690264021, 1.9436097826276506, 1.9430498395647322, 1.942490713936942, 1.9419262749808175, 1.941366400037493, 1.9408014161246163, 1.9402389526367188, 1.9396696090698242, 1.939098698752267, 1.9385243143354143, 1.9379422324044364, 1.937366349356515, 1.93678617477417, 1.9362119265965052, 1.9356352261134557, 1.9350583893912179, 1.934480939592634, 1.933896473475865, 1.933309895651681, 1.9327148709978377, 1.9321198463439941, 1.9315237317766463, 1.9309236662728446, 1.9303246906825475, 1.9297229221888952, 1.9291224479675293, 1.9285225187029158, 1.9279144832066126, 1.9273057665143694, 1.9266906465802873, 1.9260717800685339, 1.925450052533831, 1.9248344557625907, 1.9242164748055595, 1.9235916137695312, 1.9229651178632463, 1.9223341260637556, 1.9216996601649694, 1.9210552488054549, 1.9204216003417969, 1.9197861807686942, 1.9191389083862305, 1.9184825760977608, 1.9178276743207658, 1.9171802656991142, 1.9165141923086983, 1.91586058480399, 1.9151975086757116, 1.9145166533333915, 1.9138438361031669, 1.91316100529262, 1.9124882561819894], "val_accuracy": [0.0416666679084301, 0.04600000008940697, 0.049666665494441986, 0.0533333346247673, 0.05766666680574417, 0.06133333221077919, 0.06433333456516266, 0.06700000166893005, 0.07233333587646484, 0.07566666603088379, 0.0806666687130928, 0.08500000089406967, 0.09033333510160446, 0.09399999678134918, 0.10199999809265137, 0.10866666585206985, 0.11266666650772095, 0.11766666918992996, 0.12433333694934845, 0.12800000607967377, 0.13366666436195374, 0.13966666162014008, 0.14433333277702332, 0.14900000393390656, 0.15533334016799927, 0.16099999845027924, 0.16699999570846558, 0.17100000381469727, 0.17766666412353516, 0.1850000023841858, 0.1899999976158142, 0.19599999487400055, 0.20266667008399963, 0.20800000429153442, 0.21166667342185974, 0.2163333296775818, 0.22100000083446503, 0.22333332896232605, 0.2290000021457672, 0.23266667127609253, 0.23633334040641785, 0.2396666705608368, 0.2446666657924652, 0.24899999797344208, 0.2526666522026062, 0.2606666684150696, 0.2639999985694885, 0.27000001072883606, 0.27399998903274536, 0.2783333361148834, 0.2836666703224182, 0.28966665267944336, 0.2933333218097687, 0.29600000381469727, 0.29899999499320984, 0.30266666412353516, 0.3073333203792572, 0.3109999895095825, 0.3136666715145111, 0.3163333237171173, 0.31966665387153625, 0.3216666579246521, 0.32600000500679016, 0.3296666741371155, 0.3319999873638153, 0.33666667342185974, 0.33766666054725647, 0.34200000762939453, 0.3463333249092102, 0.3476666808128357, 0.3490000069141388, 0.3526666760444641, 0.3540000021457672, 0.35600000619888306, 0.3583333194255829, 0.36000001430511475, 0.3623333275318146, 0.3633333444595337, 0.3646666705608368, 0.36500000953674316, 0.36666667461395264, 0.3683333396911621, 0.36800000071525574, 0.3696666657924652, 0.37033334374427795, 0.37466666102409363, 0.37700000405311584, 0.37833333015441895, 0.37833333015441895, 0.37966665625572205, 0.38100001215934753, 0.38199999928474426, 0.38333332538604736, 0.38466668128967285, 0.3856666684150696, 0.3876666724681854, 0.3883333206176758, 0.38966667652130127, 0.39100000262260437, 0.39233332872390747]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 9, 6, 6, 2, 3, 8, 2, 5, 6, 1, 8, 2, 1, 9, 6, 3, 5], [1, 1, 1, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [24, 98, 68, 73, 46, 73, 84, 25, 62, 84], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [0, 1, 0, 0], [4, 2, 0, 0], [0, 3], [11], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.28542858362197876, "mapping_values": [1, 17, 17, 10, 7, 3, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 5, 2, 3, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), alpha)))), tf.math.add(alpha, alpha))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.2715671198195815, 2.0703175185678058, 2.6666006559173683, 2.431412802049906, 2.3536759760590464, 2.3848977153169924], "accuracy": [0.2689208686351776, 0.2957337200641632, 0.16999074816703796, 0.10038304328918457, 0.10434553027153015, 0.1018359512090683], "val_loss": [1.8240812846592493, 1.9687820162091936, 2.1448452132088796, 1.9973119327000208, 2.049322877611433, 2.009091854095459], "val_accuracy": [0.2866666615009308, 0.14166666567325592, 0.09733333438634872, 0.10000000149011612, 0.10233332961797714, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1], [2, 9, 6, 6, 2, 3, 8, 2, 5, 6, 1, 8, 2, 1, 9, 6, 3, 9, 5], [2, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 3, 2, 2], [22, 98, 68, 73, 46, 68, 26, 18, 61, 0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [95, 25, 50, 71, 34]], "fitness": -0.2134285718202591, "mapping_values": [1, 15, 15, 9, 6, 6, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.3022687651178604, 2.3012834352320213, 2.3019474806046802, 2.301063204643009, 2.3021745001871383, 2.301580761968814, 2.3009171408747857, 2.30134079418855, 2.300099509912727, 2.298860766333108, 2.301288488345486, 2.3003427936668333, 2.2998900594586598, 2.299230824183196, 2.2981464776852976, 2.2978498962781746, 2.298755738272596, 2.2993220399635628, 2.297626382623445, 2.2997393108330635, 2.2983645253476843, 2.2981397775910266, 2.297899031541477, 2.2967991506135412, 2.2956301233850653, 2.2970525747308517, 2.296247091244209, 2.295572236009073, 2.295699991711914, 2.296093230045325, 2.295627153907013, 2.296524275846611, 2.2956033222521963, 2.294584484778029, 2.2929509257312937, 2.2945713002085606, 2.2953251770789422, 2.2943551813716887, 2.2929125253188376, 2.2941391595586764, 2.2922456536263427, 2.2937140299769725, 2.2923993907505733, 2.293754759780829, 2.2925014721640284, 2.2938326605243957, 2.294079365085979, 2.2922666669915364, 2.2918952855735077, 2.291404292536544, 2.2906059997429105, 2.292182870749485, 2.2921556231997915, 2.290740767962519, 2.2915491829490335, 2.2903980766037404, 2.2887698869033812, 2.2895113974671872, 2.2901107958830296, 2.289356837230446, 2.2884553165609622, 2.2896853804887485, 2.2884845487697643, 2.290647961286868, 2.288992465148591, 2.287974256550269, 2.290036393257416, 2.2875621654826417, 2.2877333443225605, 2.287249145538044, 2.2874404482475565, 2.2880116490923483, 2.286154628665991, 2.285587879676451, 2.2865572945631696, 2.285203266798812, 2.286156056973094, 2.2841716688133706, 2.2862475297832376, 2.2857656684833163, 2.286196034960129, 2.2856150943495104, 2.285630901649313, 2.2840082191315623, 2.284854760464109, 2.2840652995499418, 2.2833271298378905, 2.284422957996383, 2.285768111462858, 2.2833221931152687, 2.281525872528687, 2.2824228294552937, 2.283993538423316, 2.282613103856752, 2.2831204469728905, 2.2819933810049533, 2.2809664273164403, 2.2825314753941415, 2.2803678856455276, 2.2822594285215985], "accuracy": [0.08691058307886124, 0.09774138033390045, 0.09391097724437714, 0.09391097724437714, 0.09417514503002167, 0.09179764986038208, 0.09021265059709549, 0.09166556596755981, 0.09087307006120682, 0.09655263274908066, 0.09192973375320435, 0.09457138925790787, 0.09655263274908066, 0.09628847241401672, 0.10117553919553757, 0.09998679161071777, 0.1002509593963623, 0.09430722147226334, 0.10394927859306335, 0.09576013684272766, 0.09774138033390045, 0.09734513610601425, 0.09813763201236725, 0.10791176557540894, 0.10711926966905594, 0.10460969805717468, 0.10659094154834747, 0.10777968913316727, 0.10857218503952026, 0.10355303436517715, 0.10949676483869553, 0.10738343745470047, 0.1080438494682312, 0.11002509295940399, 0.11649715900421143, 0.10857218503952026, 0.10434553027153015, 0.11187426000833511, 0.1150442510843277, 0.10949676483869553, 0.11015717685222626, 0.11002509295940399, 0.11491216719150543, 0.11068551242351532, 0.11610091477632523, 0.10579843819141388, 0.10936468094587326, 0.11676132678985596, 0.11795007437467575, 0.11821424216032028, 0.12415797263383865, 0.11438383162021637, 0.11728965491056442, 0.12178047746419907, 0.11530841141939163, 0.12481838464736938, 0.12151630967855453, 0.12521463632583618, 0.12151630967855453, 0.11913882195949554, 0.12878087162971497, 0.1208558976650238, 0.1286487877368927, 0.11768590658903122, 0.12019548565149307, 0.12455421686172485, 0.11993131786584854, 0.13049794733524323, 0.12851670384407043, 0.13353586196899414, 0.1302337795495987, 0.1286487877368927, 0.12798838317394257, 0.1332716941833496, 0.1290450394153595, 0.13432836532592773, 0.13512085378170013, 0.13261127471923828, 0.12798838317394257, 0.1282525360584259, 0.13459251821041107, 0.13089419901371002, 0.12957337498664856, 0.1372341811656952, 0.13419628143310547, 0.1410645842552185, 0.1372341811656952, 0.14080041646957397, 0.13393211364746094, 0.13697001338005066, 0.14357416331768036, 0.1438383311033249, 0.13881917297840118, 0.14238542318344116, 0.13934750854969025, 0.13617752492427826, 0.14951789379119873, 0.13895125687122345, 0.13934750854969025, 0.14330999553203583], "val_loss": [1.9703850746154785, 1.9701835087367467, 1.9699792180742537, 1.9697789464678084, 1.9695749282836914, 1.969372068132673, 1.9691687992640905, 1.9689645767211914, 1.9687613078526087, 1.968559878213065, 1.9683587210518974, 1.9681570189339774, 1.9679525239127023, 1.9677519798278809, 1.967552321297782, 1.9673505510602678, 1.9671478271484375, 1.9669439452035087, 1.966742924281529, 1.9665404047284807, 1.9663384301321847, 1.9661364555358887, 1.9659368651253837, 1.9657365935189384, 1.9655396597726005, 1.965339524405343, 1.9651402064732142, 1.9649381637573242, 1.9647376196725028, 1.9645357813153947, 1.9643355778285436, 1.9641340119498116, 1.9639336041041784, 1.9637353760855538, 1.9635332652500697, 1.9633338110787528, 1.963132722037179, 1.9629315648760115, 1.96273102079119, 1.9625304085867745, 1.9623307500566756, 1.9621315683637346, 1.9619327272687639, 1.9617351804460799, 1.961535930633545, 1.9613381794520788, 1.9611358642578125, 1.9609364100864954, 1.960737841469901, 1.9605390684945243, 1.9603424753461565, 1.9601428168160575, 1.9599453381129675, 1.9597455433436803, 1.9595468384878976, 1.9593476567949568, 1.95914854322161, 1.9589497702462333, 1.9587478637695312, 1.958547728402274, 1.958347933632987, 1.958151068006243, 1.9579533849443709, 1.9577554975237166, 1.9575589043753487, 1.9573605401175362, 1.9571616309029716, 1.9569602693830217, 1.956761155809675, 1.95656190599714, 1.956362043108259, 1.9561628614153181, 1.9559624535696847, 1.955763612474714, 1.9555656569344657, 1.9553664752415247, 1.9551681791033064, 1.9549685886928014, 1.954768112727574, 1.954566478729248, 1.9543681825910295, 1.9541704995291573, 1.953970091683524, 1.9537713187081474, 1.9535720688956124, 1.9533735002790178, 1.9531733649117606, 1.952974591936384, 1.95277738571167, 1.9525784764971053, 1.95237820489066, 1.9521770477294922, 1.9519801139831543, 1.951777526310512, 1.9515797070094518, 1.951380729675293, 1.9511778695242745, 1.9509778703962053, 1.9507763726370675, 1.9505773953029089], "val_accuracy": [0.03999999910593033, 0.04066666588187218, 0.041999999433755875, 0.04399999976158142, 0.04500000178813934, 0.047333333641290665, 0.04899999871850014, 0.049666665494441986, 0.05000000074505806, 0.05166666582226753, 0.0533333346247673, 0.054666668176651, 0.056333333253860474, 0.05766666680574417, 0.060333333909511566, 0.061000000685453415, 0.06133333221077919, 0.06233333423733711, 0.06333333253860474, 0.06466666609048843, 0.06499999761581421, 0.0663333311676979, 0.07000000029802322, 0.070333331823349, 0.07199999690055847, 0.07433333247900009, 0.07500000298023224, 0.07733333110809326, 0.07800000160932541, 0.07900000363588333, 0.08133333176374435, 0.08299999684095383, 0.08500000089406967, 0.08666666597127914, 0.08766666799783707, 0.09099999815225601, 0.09266666322946548, 0.09333333373069763, 0.09533333033323288, 0.09933333098888397, 0.10199999809265137, 0.10466666519641876, 0.10633333027362823, 0.10899999737739563, 0.1106666699051857, 0.1120000034570694, 0.11266666650772095, 0.11433333158493042, 0.11599999666213989, 0.11999999731779099, 0.12133333086967468, 0.12433333694934845, 0.12666666507720947, 0.12833333015441895, 0.12866666913032532, 0.12966667115688324, 0.13233333826065063, 0.13466666638851166, 0.1353333294391632, 0.13866665959358215, 0.140666663646698, 0.14233332872390747, 0.1446666717529297, 0.1459999978542328, 0.14800000190734863, 0.14866666495800018, 0.15199999511241913, 0.15433333814144135, 0.15666666626930237, 0.1589999943971634, 0.1613333374261856, 0.1626666635274887, 0.16433332860469818, 0.16699999570846558, 0.16899999976158142, 0.17033334076404572, 0.17166666686534882, 0.1733333319425583, 0.17666666209697723, 0.17900000512599945, 0.1823333352804184, 0.1850000023841858, 0.18733333051204681, 0.18833333253860474, 0.18933333456516266, 0.19200000166893005, 0.19333332777023315, 0.1966666728258133, 0.19866666197776794, 0.20100000500679016, 0.2016666680574417, 0.20533333718776703, 0.20733332633972168, 0.2096666693687439, 0.21066667139530182, 0.21299999952316284, 0.2150000035762787, 0.2160000056028366, 0.21899999678134918, 0.2199999988079071]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1], [2, 9, 2, 6, 2, 3, 8, 2, 5, 9, 1, 8, 2, 1, 9, 8, 3, 5], [2, 0, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [24, 61, 68, 73, 46, 73, 84, 25, 62, 99], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 1, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.20028571784496307, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 5, 2, 3, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, alpha), beta)", "other_info": {"loss": [3.1087682162136088, 2.307370743589662, 2.3039852398230085, 2.3032298452739846, 2.301137253214985, 2.330661614588963, 2.303935838838405, 2.3037437423345293, 2.3034571845533667, 2.3030094252034514], "accuracy": [0.15281997621059418, 0.09576013684272766, 0.10236428678035736, 0.0948355570435524, 0.1088363528251648, 0.14489498734474182, 0.09721305221319199, 0.09576013684272766, 0.09840179979801178, 0.09602430462837219], "val_loss": [1.9810077122279577, 1.9756132534572057, 1.9740829467773438, 1.97327607018607, 1.9682177816118513, 1.9738495009286063, 1.9735583577837263, 1.9738081523350306, 1.9736296789986747, 1.9736695289611816], "val_accuracy": [0.09833333641290665, 0.09700000286102295, 0.0976666659116745, 0.09733333438634872, 0.16566666960716248, 0.10233332961797714, 0.10233332961797714, 0.09700000286102295, 0.10233332961797714, 0.10400000214576721]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1], [2, 2, 2, 6, 0, 3, 8, 8, 5, 6, 4, 4, 2, 5, 3, 9], [1, 3, 2, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [24, 98, 68, 73, 46, 73, 84, 25, 62, 84], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 5, 2, 9, 2, 9], [2, 2, 1, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.20028571784496307, "mapping_values": [1, 21, 21, 12, 9, 3, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 2, 2, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha)))))), tf.math.add(alpha, grad))))), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), grad))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))), tf.math.pow(grad, tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.square(beta), beta)", "other_info": {"loss": [3.1087682162136088, 2.307370743589662, 2.3039852398230085, 2.3032298452739846, 2.301137253214985, 2.330661614588963, 2.303935838838405, 2.3037437423345293, 2.3034571845533667, 2.3030094252034514], "accuracy": [0.15281997621059418, 0.09576013684272766, 0.10236428678035736, 0.0948355570435524, 0.1088363528251648, 0.14489498734474182, 0.09721305221319199, 0.09576013684272766, 0.09840179979801178, 0.09602430462837219], "val_loss": [1.9810077122279577, 1.9756132534572057, 1.9740829467773438, 1.97327607018607, 1.9682177816118513, 1.9738495009286063, 1.9735583577837263, 1.9738081523350306, 1.9736296789986747, 1.9736695289611816], "val_accuracy": [0.09833333641290665, 0.09700000286102295, 0.0976666659116745, 0.09733333438634872, 0.16566666960716248, 0.10233332961797714, 0.10233332961797714, 0.09700000286102295, 0.10233332961797714, 0.10400000214576721]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [2, 9, 6, 6, 0, 3, 8, 2, 8, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 1, 1, 0, 0, 1, 0, 0], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [82, 25, 50, 71, 34]], "fitness": -0.19542856514453888, "mapping_values": [1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [3.414165032176042, 2.3055428412486187, 2.3036324332308666, 2.303257315654198, 2.302957195694641, 2.302804911944372, 2.302563400379403, 2.301584441286147, 2.587598239016681, 2.4473181231587775, 2.3050140608665477, 2.303214846506347, 2.3031144519413402], "accuracy": [0.15189538896083832, 0.09972262382507324, 0.1010434553027153, 0.09206181764602661, 0.09219389408826828, 0.09259014576673508, 0.10051512718200684, 0.11900673806667328, 0.20221899449825287, 0.1002509593963623, 0.10091137140989304, 0.09813763201236725, 0.09589222073554993], "val_loss": [1.978090763092041, 1.974907602582659, 1.973968846457345, 1.9738044057573592, 1.973588194165911, 1.97340270451137, 1.9728879247392928, 1.9681066104343958, 2.049600260598319, 1.9762422697884696, 1.974024840763637, 1.9736954144069128, 1.973741122654506], "val_accuracy": [0.09833333641290665, 0.09700000286102295, 0.1120000034570694, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.10400000214576721, 0.18299999833106995, 0.0976666659116745, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.09733333438634872]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [9, 7, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [1, 1, 1, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 1, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.17742857336997986, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, alpha), beta)", "other_info": {"loss": [3.409330433700787, 2.3054666944293927, 2.303585834758881, 2.303162874027313, 2.3029055964157896, 2.3026429465607157, 2.3008224863055644, 2.263833232354872, 2.2761145719778364, 2.3636895793382724, 2.3042769721155514, 2.303191915746882], "accuracy": [0.15189538896083832, 0.09972262382507324, 0.09959053993225098, 0.09457138925790787, 0.09602430462837219, 0.0940430611371994, 0.11200633645057678, 0.19363360106945038, 0.13247919082641602, 0.1162329912185669, 0.09206181764602661, 0.0952318087220192], "val_loss": [1.9779394694737025, 1.9749032429286413, 1.973975658416748, 1.973829678126744, 1.973454475402832, 1.973815645490374, 1.9630632400512695, 1.973989691053118, 2.0432156154087613, 1.9741150311061315, 1.9736621720450265, 1.97356721333095], "val_accuracy": [0.09833333641290665, 0.09700000286102295, 0.09700000286102295, 0.09733333438634872, 0.09733333438634872, 0.09966666996479034, 0.2266666740179062, 0.12466666847467422, 0.2240000069141388, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [2, 1, 2, 2, 2, 2, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [3, 3, 0, 6, 3, 6], [0, 3, 4], [35], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [2, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [93, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 5, 3, 1, 1, 1, 0, 1, 0, 8, 6, 4, 2, 1, 5, 2, 3, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(alpha)), grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(sigma, sigma))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(beta, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08955223858356476, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1], [9, 2, 6, 5, 1, 2, 1, 2, 5, 6, 1, 8, 5, 7, 4, 9], [2, 2, 0, 1, 1, 0, 2, 2, 0, 0, 0, 2, 2, 2], [70, 26, 72, 4, 46, 83], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 1, 1], [1, 0, 1, 0], [3, 3, 0], [5, 3], [50], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1], [2, 9, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8, 0], [2, 3, 2, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [58, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [2, 2, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 20, 13, 7, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), grad)))), tf.math.add(alpha, tf.math.subtract(grad, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad))))), tf.math.sqrt(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.negative(grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.301076231851806, 2.3066249738957008, 2.3900570678610165, 6.124784094735285, 19.695212689310157, 34.08723220653884], "accuracy": [0.10553427785634995, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.974816117967878, 1.9931987353733607, 2.347748007093157, 11.819661821637835, 24.177834102085658, 36.542428152901785], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 8, 0, 3, 8, 9, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [24, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [4, 3, 2, 9, 2, 9], [2, 0, 0, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 5, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.negative(grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [2, 9, 6, 6, 2, 3, 8, 2, 5, 6, 1, 3, 2, 1, 9, 6, 3, 5], [2, 2, 0, 0, 2, 1, 2, 2, 1, 0, 0, 3, 2, 2], [26, 98, 68, 73, 63, 60, 18, 44], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 1, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [2, 3, 2, 9, 2, 9], [2, 1, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 25, 25, 15, 10, 5, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 5, 2, 3, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), grad)))), tf.math.add(alpha, tf.math.subtract(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))), grad)), tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(grad, tf.math.add(alpha, grad)))))), tf.math.subtract(alpha, tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(beta, alpha), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08902391046285629, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [2, 2, 3, 6, 0, 5, 8, 3, 5, 6, 6, 4, 2, 5, 3, 9], [1, 3, 2, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 1, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 24, 24, 14, 10, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, alpha), grad))), tf.math.add(alpha, grad)))))))), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), grad), tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, alpha), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.11359133571386337, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [70, 26, 72, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 0, 0, 1], [1, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [9, 6, 2, 9, 2, 9], [2, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [99, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3017466584405786, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1], [2, 2, 2, 6, 0, 3, 4, 8, 5, 6, 1, 8, 2, 5], [2, 0, 2, 2, 2, 2, 2, 2, 0, 0, 0, 3, 2, 2], [70, 26, 72, 73, 46], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 0, 1], [1, 0, 1, 0], [3, 3, 0], [2, 3], [], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 1, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 2, 35, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 8, 7, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)))), tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.sqrt(grad)))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07330603897571564, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [1, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 1, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [3, 8, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [36, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 2, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0734381154179573, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [9, 7, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [1, 1, 1, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 1, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 1], [0, 2, 0, 0, 0], [7, 3], [], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [1, 1, 2, 9, 2, 9], [2, 3, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 9, 5, 4, 2], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.subtract(tf.math.add(beta, sigma), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [314261728.62821984, 5953931843.9646015, 28138596505.37683, 76159876365.82962, 166328601942.8662, 304637145617.6505], "accuracy": [0.09351472556591034, 0.10196803510189056, 0.1022322028875351, 0.09866596013307571, 0.09985470771789551, 0.09272222965955734], "val_loss": [1186460013.7142856, 9487204644.571428, 32014251739.42857, 75878870454.85715, 148194206866.2857, 256072585801.14285], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [2, 8, 6, 6, 2, 3, 2, 2, 5, 6, 1, 8, 2, 1, 9, 6, 3, 5], [2, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 3, 2, 2], [24, 98, 68, 73, 51, 73, 84, 25, 62, 84], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 1, 0, 0, 0, 1, 0, 0], [0, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [1, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 6, 6, 5, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 5, 2, 3, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}]