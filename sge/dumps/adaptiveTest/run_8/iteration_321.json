[{"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 3, 4, 0, 6, 6, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 3, 0, 3, 2, 3, 0, 0], [42, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [1, 3, 2, 3, 6], [1, 3, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.8154285550117493, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 7, 3, 4, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.add(alpha, sigma), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.082327795838006, 1.8314259464336724, 1.5548147904701268, 1.0341542717047245, 0.815563215484803, 0.7483896924252398, 0.6639742660185507, 0.6493365195732484, 0.5877930289325052, 0.5960186222887247, 0.5415711600105634, 0.5340253914729904, 0.5221963933611338, 0.5134608475736198, 0.4975207391558007, 0.5120391816731379, 0.48114562984061454, 0.4610122671500173, 0.46202011920709524, 0.4367933376999642, 0.44939871028256595, 0.4253270339499753, 0.41283309473857244, 0.409230463528567, 0.41361607619642565, 0.37940471797193503, 0.3907069866415721, 0.3808906063065474, 0.3806847401141428], "accuracy": [0.2814687490463257, 0.3533218801021576, 0.48672565817832947, 0.6180161237716675, 0.7059833407402039, 0.715889573097229, 0.7493065595626831, 0.7577598690986633, 0.78113853931427, 0.7751948237419128, 0.7976489067077637, 0.7952714562416077, 0.8030643463134766, 0.8018755912780762, 0.8109893202781677, 0.8099326491355896, 0.8189142942428589, 0.8272355198860168, 0.8253863453865051, 0.8338396549224854, 0.830669641494751, 0.837537944316864, 0.8383304476737976, 0.8465195894241333, 0.8438779711723328, 0.8549728989601135, 0.8540483713150024, 0.8516708612442017, 0.856689989566803], "val_loss": [1.5744687148502894, 1.257554599217006, 0.9306820460728237, 0.6308522054127285, 0.5447968244552612, 0.5814446040562221, 0.5180800471987043, 0.4699550185884748, 0.5517376150403704, 0.4416419267654419, 0.4184941990034921, 0.45204358441489084, 0.41653760841914583, 0.4114753689084734, 0.4326061265809195, 0.38326382637023926, 0.39497882979256765, 0.4093263404709952, 0.37328347989491056, 0.45213655063084196, 0.3735688839639936, 0.4062177964619228, 0.3759089538029262, 0.349260824067252, 0.36450300897870747, 0.3600441983767918, 0.36969796248844694, 0.36812933002199444, 0.3586247648511614], "val_accuracy": [0.31833332777023315, 0.492000013589859, 0.527999997138977, 0.6963333487510681, 0.7593333125114441, 0.7356666922569275, 0.7603333592414856, 0.7923333048820496, 0.7463333606719971, 0.784333348274231, 0.8130000233650208, 0.793666660785675, 0.8009999990463257, 0.8183333277702332, 0.8036666512489319, 0.8333333134651184, 0.8266666531562805, 0.812333345413208, 0.8426666855812073, 0.800000011920929, 0.8396666646003723, 0.8193333148956299, 0.8286666870117188, 0.8533333539962769, 0.8506666421890259, 0.8496666550636292, 0.8270000219345093, 0.8386666774749756, 0.8519999980926514]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 8, 6, 4, 0, 6, 6, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [42, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 2, 3, 6], [1, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.8071428537368774, "mapping_values": [1, 1, 1, 0, 1, 0, 21, 21, 11, 10, 4, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.divide_no_nan(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.add(tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(beta, grad), beta))), tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, grad)))))))))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(alpha, alpha), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0943504767316505, 1.776822468088508, 1.31904293333204, 1.3148988581305214, 0.833099072304825, 0.7512608446292023, 0.6720138942135669, 0.6847452923936961, 0.5941310520610474, 0.6053541594051713, 0.5394037769707108, 0.5817508505965583, 0.5163924546447082, 0.5370537552811828, 0.5091406827778502, 0.5022665275566613, 0.5078583053231885, 0.45446118233761595, 0.4578180711865504, 0.44996937385497865, 0.44058837830870773, 0.44433159134832306], "accuracy": [0.2794875204563141, 0.38409721851348877, 0.5429930090904236, 0.5572579503059387, 0.695813000202179, 0.7199841737747192, 0.7446836829185486, 0.7424382567405701, 0.7779685854911804, 0.767401933670044, 0.7969884872436523, 0.7878747582435608, 0.8165367841720581, 0.7930260300636292, 0.8037247657775879, 0.8137630224227905, 0.806630551815033, 0.8315942287445068, 0.8274996876716614, 0.8309338092803955, 0.833179235458374, 0.8356888294219971], "val_loss": [1.855426856449672, 1.4676939759935652, 1.1779747349875314, 0.6329346384320941, 0.5976291724613735, 0.5597117628370013, 0.4967677082334246, 0.4949885606765747, 0.5355131796428135, 0.43923304762159077, 0.5805738653455462, 0.4496150612831116, 0.42501977511814665, 0.42906142132622854, 0.4046850459916251, 0.4066497768674578, 0.3811126095908029, 0.3900534766060965, 0.3898737941469465, 0.42867596660341534, 0.4435367839676993, 0.417870146887643], "val_accuracy": [0.10233332961797714, 0.35333332419395447, 0.5479999780654907, 0.7149999737739563, 0.7206666469573975, 0.7393333315849304, 0.7673333287239075, 0.7599999904632568, 0.7483333349227905, 0.7929999828338623, 0.7676666378974915, 0.7883333563804626, 0.8003333210945129, 0.8116666674613953, 0.8236666917800903, 0.8266666531562805, 0.8450000286102295, 0.8263333439826965, 0.8336666822433472, 0.8029999732971191, 0.8136666417121887, 0.8173333406448364]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [3, 8, 6, 4, 0, 6, 6, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 2, 0, 3, 2, 3, 3, 0], [95, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 2, 3, 6], [1, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.8071428537368774, "mapping_values": [1, 1, 1, 0, 1, 0, 21, 21, 12, 9, 4, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta))), tf.math.divide_no_nan(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.divide_no_nan(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)), grad), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), beta)), grad))))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(alpha, alpha), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0943504767316505, 1.776822468088508, 1.31904293333204, 1.3148988581305214, 0.833099072304825, 0.7512608446292023, 0.6720138942135669, 0.6847452923936961, 0.5941310520610474, 0.6053541594051713, 0.5394037769707108, 0.5817508505965583, 0.5163924546447082, 0.5370537552811828, 0.5091406827778502, 0.5022665275566613, 0.5078583053231885, 0.45446118233761595, 0.4578180711865504, 0.44996937385497865, 0.44058837830870773, 0.44433159134832306], "accuracy": [0.2794875204563141, 0.38409721851348877, 0.5429930090904236, 0.5572579503059387, 0.695813000202179, 0.7199841737747192, 0.7446836829185486, 0.7424382567405701, 0.7779685854911804, 0.767401933670044, 0.7969884872436523, 0.7878747582435608, 0.8165367841720581, 0.7930260300636292, 0.8037247657775879, 0.8137630224227905, 0.806630551815033, 0.8315942287445068, 0.8274996876716614, 0.8309338092803955, 0.833179235458374, 0.8356888294219971], "val_loss": [1.855426856449672, 1.4676939759935652, 1.1779747349875314, 0.6329346384320941, 0.5976291724613735, 0.5597117628370013, 0.4967677082334246, 0.4949885606765747, 0.5355131796428135, 0.43923304762159077, 0.5805738653455462, 0.4496150612831116, 0.42501977511814665, 0.42906142132622854, 0.4046850459916251, 0.4066497768674578, 0.3811126095908029, 0.3900534766060965, 0.3898737941469465, 0.42867596660341534, 0.4435367839676993, 0.417870146887643], "val_accuracy": [0.10233332961797714, 0.35333332419395447, 0.5479999780654907, 0.7149999737739563, 0.7206666469573975, 0.7393333315849304, 0.7673333287239075, 0.7599999904632568, 0.7483333349227905, 0.7929999828338623, 0.7676666378974915, 0.7883333563804626, 0.8003333210945129, 0.8116666674613953, 0.8236666917800903, 0.8266666531562805, 0.8450000286102295, 0.8263333439826965, 0.8336666822433472, 0.8029999732971191, 0.8136666417121887, 0.8173333406448364]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1], [6, 2, 6, 4, 0, 6, 6, 6, 5, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 3, 1, 3, 3, 0, 3, 0], [42, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 2, 3, 6], [1, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.8071428537368774, "mapping_values": [1, 1, 1, 0, 1, 0, 27, 27, 17, 10, 6, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.divide_no_nan(beta, tf.math.divide_no_nan(tf.math.square(tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))))), grad)), tf.math.add(beta, tf.math.subtract(alpha, grad))))))))), grad)), tf.math.subtract(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)))), tf.math.sqrt(tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(alpha, alpha), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0943504767316505, 1.776822468088508, 1.31904293333204, 1.3148988581305214, 0.833099072304825, 0.7512608446292023, 0.6720138942135669, 0.6847452923936961, 0.5941310520610474, 0.6053541594051713, 0.5394037769707108, 0.5817508505965583, 0.5163924546447082, 0.5370537552811828, 0.5091406827778502, 0.5022665275566613, 0.5078583053231885, 0.45446118233761595, 0.4578180711865504, 0.44996937385497865, 0.44058837830870773, 0.44433159134832306], "accuracy": [0.2794875204563141, 0.38409721851348877, 0.5429930090904236, 0.5572579503059387, 0.695813000202179, 0.7199841737747192, 0.7446836829185486, 0.7424382567405701, 0.7779685854911804, 0.767401933670044, 0.7969884872436523, 0.7878747582435608, 0.8165367841720581, 0.7930260300636292, 0.8037247657775879, 0.8137630224227905, 0.806630551815033, 0.8315942287445068, 0.8274996876716614, 0.8309338092803955, 0.833179235458374, 0.8356888294219971], "val_loss": [1.855426856449672, 1.4676939759935652, 1.1779747349875314, 0.6329346384320941, 0.5976291724613735, 0.5597117628370013, 0.4967677082334246, 0.4949885606765747, 0.5355131796428135, 0.43923304762159077, 0.5805738653455462, 0.4496150612831116, 0.42501977511814665, 0.42906142132622854, 0.4046850459916251, 0.4066497768674578, 0.3811126095908029, 0.3900534766060965, 0.3898737941469465, 0.42867596660341534, 0.4435367839676993, 0.417870146887643], "val_accuracy": [0.10233332961797714, 0.35333332419395447, 0.5479999780654907, 0.7149999737739563, 0.7206666469573975, 0.7393333315849304, 0.7673333287239075, 0.7599999904632568, 0.7483333349227905, 0.7929999828338623, 0.7676666378974915, 0.7883333563804626, 0.8003333210945129, 0.8116666674613953, 0.8236666917800903, 0.8266666531562805, 0.8450000286102295, 0.8263333439826965, 0.8336666822433472, 0.8029999732971191, 0.8136666417121887, 0.8173333406448364]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [3, 8, 2, 4, 0, 6, 6, 4, 2, 9, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 0, 2, 0, 3, 2, 3, 3, 0], [42, 28, 99, 0, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [1, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.7839999794960022, "mapping_values": [1, 1, 1, 0, 1, 0, 19, 19, 12, 7, 4, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.negative(tf.math.add(beta, beta)), tf.math.divide_no_nan(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.pow(beta, tf.math.add(tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)))))))), tf.math.pow(tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [1.9640980805104924, 1.5056600387400922, 1.0327373688499044, 0.9238846365644349, 0.8160369686793185, 0.7687301848070449, 0.7047456857818324, 0.7114580143255376, 0.6843378376164031, 0.6467199880984544, 0.6379625701066636, 0.6298870433590841, 0.6121643650108215, 0.5800145522415394, 0.5723647248113569], "accuracy": [0.3337736129760742, 0.49927353858947754, 0.6264694333076477, 0.6547351479530334, 0.6906617283821106, 0.7128516435623169, 0.7333245277404785, 0.7259278893470764, 0.7432307600975037, 0.7520803213119507, 0.7559106945991516, 0.7567031979560852, 0.7680623531341553, 0.7820631265640259, 0.7825914621353149], "val_loss": [1.5593738555908203, 0.8359825100217547, 0.8313404491969517, 0.6106089864458356, 0.6333763258797782, 0.5648485592433384, 0.6118967022214618, 0.6214889969144549, 0.5092035191399711, 0.4954388311931065, 0.5274190391813006, 0.5058077914374215, 0.4938702753611973, 0.490577186856951, 0.5235015664781842], "val_accuracy": [0.4243333339691162, 0.637666642665863, 0.5870000123977661, 0.7333333492279053, 0.6890000104904175, 0.7666666507720947, 0.7093333601951599, 0.6923333406448364, 0.765666663646698, 0.7906666398048401, 0.7666666507720947, 0.7853333353996277, 0.768666684627533, 0.7630000114440918, 0.7549999952316284]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 2, 6, 5, 0, 6, 6, 4, 2, 9, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 3, 0, 3, 2, 3, 3, 0], [42, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0, 1], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [1, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.7839999794960022, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 10, 7, 4, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, beta))), tf.math.divide_no_nan(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.pow(grad, tf.math.add(tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.9640980805104924, 1.5056600387400922, 1.0327373688499044, 0.9238846365644349, 0.8160369686793185, 0.7687301848070449, 0.7047456857818324, 0.7114580143255376, 0.6843378376164031, 0.6467199880984544, 0.6379625701066636, 0.6298870433590841, 0.6121643650108215, 0.5800145522415394, 0.5723647248113569], "accuracy": [0.3337736129760742, 0.49927353858947754, 0.6264694333076477, 0.6547351479530334, 0.6906617283821106, 0.7128516435623169, 0.7333245277404785, 0.7259278893470764, 0.7432307600975037, 0.7520803213119507, 0.7559106945991516, 0.7567031979560852, 0.7680623531341553, 0.7820631265640259, 0.7825914621353149], "val_loss": [1.5593738555908203, 0.8359825100217547, 0.8313404491969517, 0.6106089864458356, 0.6333763258797782, 0.5648485592433384, 0.6118967022214618, 0.6214889969144549, 0.5092035191399711, 0.4954388311931065, 0.5274190391813006, 0.5058077914374215, 0.4938702753611973, 0.490577186856951, 0.5235015664781842], "val_accuracy": [0.4243333339691162, 0.637666642665863, 0.5870000123977661, 0.7333333492279053, 0.6890000104904175, 0.7666666507720947, 0.7093333601951599, 0.6923333406448364, 0.765666663646698, 0.7906666398048401, 0.7666666507720947, 0.7853333353996277, 0.768666684627533, 0.7630000114440918, 0.7549999952316284]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 8, 6, 4, 0, 6, 6, 4, 2, 9, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 2, 2, 3, 3, 0], [42, 43, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [1, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.7839999794960022, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad)))), tf.math.pow(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.negative(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [1.9640980805104924, 1.5056600387400922, 1.0327373688499044, 0.9238846365644349, 0.8160369686793185, 0.7687301848070449, 0.7047456857818324, 0.7114580143255376, 0.6843378376164031, 0.6467199880984544, 0.6379625701066636, 0.6298870433590841, 0.6121643650108215, 0.5800145522415394, 0.5723647248113569], "accuracy": [0.3337736129760742, 0.49927353858947754, 0.6264694333076477, 0.6547351479530334, 0.6906617283821106, 0.7128516435623169, 0.7333245277404785, 0.7259278893470764, 0.7432307600975037, 0.7520803213119507, 0.7559106945991516, 0.7567031979560852, 0.7680623531341553, 0.7820631265640259, 0.7825914621353149], "val_loss": [1.5593738555908203, 0.8359825100217547, 0.8313404491969517, 0.6106089864458356, 0.6333763258797782, 0.5648485592433384, 0.6118967022214618, 0.6214889969144549, 0.5092035191399711, 0.4954388311931065, 0.5274190391813006, 0.5058077914374215, 0.4938702753611973, 0.490577186856951, 0.5235015664781842], "val_accuracy": [0.4243333339691162, 0.637666642665863, 0.5870000123977661, 0.7333333492279053, 0.6890000104904175, 0.7666666507720947, 0.7093333601951599, 0.6923333406448364, 0.765666663646698, 0.7906666398048401, 0.7666666507720947, 0.7853333353996277, 0.768666684627533, 0.7630000114440918, 0.7549999952316284]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [9, 1, 3, 9, 6, 6, 6, 4, 3, 1, 0, 0, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 3, 3, 2, 3, 0, 0], [42, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 2, 3, 6], [1, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.2314285784959793, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3687729198131833, 2.2571749274032524, 2.205588253229963, 2.3658262312199696, 2.3034664426324167, 2.303305278947372, 2.3029051940234235, 2.302999384005497], "accuracy": [0.21212521195411682, 0.1492537260055542, 0.21621978282928467, 0.11161009222269058, 0.09853387624025345, 0.10117553919553757, 0.09906221181154251, 0.09866596013307571], "val_loss": [2.0557404245649065, 1.960183552333287, 1.9826281411307198, 1.9744715009416853, 1.97385835647583, 1.9737937791006905, 1.9738539968218123, 1.973578589303153], "val_accuracy": [0.10233332961797714, 0.11166666448116302, 0.281333327293396, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [3, 5, 0, 1, 5, 6, 3, 2, 6, 0, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 3, 3, 2, 3, 3, 0], [42, 47, 99, 88, 12, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [1, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 19, 19, 12, 7, 3, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.add(tf.math.divide_no_nan(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(beta, grad))), tf.math.add(beta, tf.math.pow(grad, grad)))), tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)))))))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [2.3365800355828874, 4.814775062322207, 24.028245086730383, 96.35398266970789, 320.997578514219, 900.2689527099191, 2256.857858754829], "accuracy": [0.0956280529499054, 0.10381719470024109, 0.09906221181154251, 0.10157178342342377, 0.09615638852119446, 0.09945846349000931, 0.09721305221319199], "val_loss": [2.1400485719953264, 7.240834644862583, 33.080877031598774, 118.73928833007812, 358.1584734235491, 950.8235560825893, 2252.6515764508927], "val_accuracy": [0.0989999994635582, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 8, 0, 4, 0, 0, 3, 1, 6, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 2, 0, 3, 2, 3, 3, 0], [42, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 3, 2, 3, 6], [1, 1, 1, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 9, 9, 6, 3, 2, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta))), tf.math.negative(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, alpha))", "other_info": {"loss": [2.304725474212872, 2.31786291036529, 2.81404412569009, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09272222965955734, 0.10130762308835983, 0.09087307006120682, 0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9737253870282854, 1.9902169363839286, 1627742.1785714286, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.020666666328907013, 0.05233333259820938, 0.10000000149011612, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 3, 6, 4, 4, 6, 6, 1, 5, 5, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 3, 0, 3, 2, 3, 2, 0], [42, 47, 49, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [9, 3, 2, 3, 6], [1, 3, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 5, 5, 2, 3, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(beta, tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3033673757291853, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [0, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [9, 1, 3, 9, 6, 6, 6, 4, 3, 1, 0, 0, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [42, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [4, 3], [], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [1, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 6, 4, 3, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3578601572507596, 3.03097598994523, 4.9125768794139235, 7.968760096527692, 12.395855099092683, 17.950720803801566, 24.936234828771113], "accuracy": [0.09694888442754745, 0.10328886657953262, 0.1002509593963623, 0.10130762308835983, 0.09668471664190292, 0.09840179979801178, 0.09734513610601425], "val_loss": [2.097829750605992, 2.7907281603131975, 4.322506087166922, 6.653397423880441, 9.755902971540179, 13.673851830618721, 18.46636417933873], "val_accuracy": [0.0989999994635582, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [9, 3, 6, 4, 0, 6, 6, 6, 5, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 2, 0, 3, 2, 3, 3, 0], [42, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 3, 2, 3, 6, 8, 0, 8], [1, 1, 0, 1, 3, 2], [58, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 13, 8, 5, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(alpha, alpha), tf.math.multiply(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, tf.math.sqrt(tf.math.negative(tf.math.sqrt(sigma)))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [1, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [3, 8, 6, 4, 0, 6, 6, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 3, 2, 3, 2, 0], [42, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 4, 2, 3, 6, 7], [1, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 21, 21, 11, 10, 5, 1, 1, 0, 1, 0, 12, 6, 6, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.divide_no_nan(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(beta, beta))))))))), tf.math.subtract(tf.math.add(beta, tf.math.pow(grad, beta)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.add(alpha, alpha), tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, tf.math.add(sigma, beta)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0952318087220192, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 8, 6, 9, 0, 6, 6, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 3, 3, 0, 3, 2, 3, 3, 0], [42, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 5, 2, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.negative(beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07370228320360184, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [3, 8, 6, 6, 0, 6, 8, 1, 2, 0, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 2, 3, 2, 3, 3, 0], [42, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 2, 3, 6], [1, 0, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 10, 7, 2, 1, 1, 0, 1, 0, 6, 3, 3, 2], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, tf.math.add(tf.math.add(beta, beta), tf.math.negative(tf.math.add(beta, grad)))))))))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2405.4598726571558, 2.3062081332566353, 2.304762626289455, 2.3038920145686026, 4082110.7488788664, 2.3041143816979552, 4571813.38469674, 2.3032027469287852, 2.303053115982783, 2.3028786357178777, 2.302820810568158, 2.3028044096309714, 2.302724530180101], "accuracy": [0.09008057415485382, 0.09893012791872025, 0.09681680053472519, 0.09945846349000931, 0.09866596013307571, 0.09417514503002167, 0.09840179979801178, 0.09457138925790787, 0.09826971590518951, 0.09496764093637466, 0.09470347315073013, 0.09113723784685135, 0.09747721254825592], "val_loss": [1.9781500952584403, 1.9763853890555245, 1.9753351211547852, 1.9746449334280831, 1.9756961550031389, 1.97494752066476, 1.9745282445635115, 1.9742379869733537, 1.9740642820085799, 1.973879405430385, 1.9738435064043318, 1.9737684386117118, 1.9737564495631628], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.10233332961797714, 0.10233332961797714, 0.09966666996479034, 0.10400000214576721, 0.09833333641290665, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [9, 1, 3, 9, 6, 6, 6, 4, 3, 1, 0, 0, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 3, 3, 2, 3, 0, 0], [11, 47, 99, 84, 1, 75, 52], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 2, 3, 6], [3, 0, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 6, 3, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1000247.7065817927, 19213616.444327038, 89368551.51076476, 246499033.8628979, 537666667.0357945, 981187798.4435345], "accuracy": [0.09866596013307571, 0.10513802617788315, 0.09906221181154251, 0.10091137140989304, 0.09589222073554993, 0.09919429570436478], "val_loss": [3851689.285714286, 30711219.42857143, 103537380.57142857, 245289746.2857143, 478925257.14285713, 827406336.0], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 8, 9, 4, 0, 6, 6, 4, 2, 9, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 2, 0, 3, 2, 3, 3, 0], [42, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 8, 3, 6], [1, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.sqrt(alpha), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1], [3, 2, 6, 4, 5, 8, 6, 8, 2, 1, 4, 9, 4, 1, 1, 8, 2, 0, 4, 2, 4, 0, 3, 3, 2, 1, 2, 0, 1, 9, 0, 7, 7, 0, 7, 1, 9, 0], [0, 3, 0, 0, 3, 3, 2, 3, 0, 0, 1, 4, 4, 4, 1, 1, 4, 2, 4, 4, 2, 1, 2], [11, 11, 99, 99, 1, 75, 52, 60], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [2, 3, 2, 3, 6, 5, 0, 4, 4, 1, 9, 0, 4, 6], [1, 1, 2, 1, 3, 2, 2, 0, 1, 2], [44, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 61, 61, 38, 23, 8, 1, 1, 0, 1, 0, 24, 14, 10, 2], "tree_depth": 61, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.subtract(grad, tf.math.add(beta, tf.math.pow(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(tf.math.negative(tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, beta)))), tf.math.add(grad, tf.math.add(beta, tf.math.pow(tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.add(beta, tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.add(beta, grad)), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))))), tf.math.negative(alpha))))))))), tf.math.add(beta, tf.math.add(alpha, grad))))))))))), tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, grad))), tf.math.add(beta, grad)))), tf.math.add(beta, beta)), tf.math.add(beta, tf.math.subtract(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha))))))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.add(tf.math.multiply(alpha, alpha), beta), tf.math.divide_no_nan(alpha, tf.math.square(tf.math.negative(tf.math.pow(tf.math.pow(sigma, beta), tf.math.subtract(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.pow(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))))))), tf.math.divide_no_nan(alpha, beta))", "other_info": {"loss": [2.3029683499744995, 2.3017094890439296, 2.3033296342035245, 2.3024696410686394, 2.303350101734716, 2.303498865638222], "accuracy": [0.09298639744520187, 0.09509972482919693, 0.08651433140039444, 0.08889182657003403, 0.09338264167308807, 0.08241976052522659], "val_loss": [1.9706667491367884, 1.9707482201712472, 1.9708239010402135, 1.970909595489502, 1.9709865706307548, 1.9710685185023717], "val_accuracy": [0.03866666555404663, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [6, 8, 5, 9, 0, 6, 6, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 3, 0, 3, 2, 3, 0, 0], [42, 47, 79, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 4, 1, 2, 5, 4, 2, 2, 0, 4, 3, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.square(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.302937753227928, 2.3015955495891034, 2.3031392162344666, 2.3021818637344045, 2.3029979257819173, 2.303059112126596], "accuracy": [0.09325055778026581, 0.09549596905708313, 0.08625016361474991, 0.08955223858356476, 0.09430722147226334, 0.08374059200286865], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]