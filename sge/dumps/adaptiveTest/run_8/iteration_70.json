[{"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 1, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [41, 38]], "fitness": -0.7739999890327454, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 7, 7, 3, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.add(tf.math.multiply(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), alpha)), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.2897716448401826, 2.2604498370385615, 2.228213282435121, 2.1826315952755, 2.1225289094559883, 2.0365125858363315, 1.924062580858255, 1.7882945721632202, 1.6471370701871102, 1.5230913598067284, 1.402420792849214, 1.318964780534279, 1.2571044829795233, 1.1923560361348249, 1.1424641509995155, 1.113011424819539, 1.0771948852559217, 1.0459106465403776, 1.0276562824634718, 0.9833814034671705, 0.9679836123579482, 0.9512798490068932, 0.935979291408951, 0.914594665077211, 0.9177034132201296, 0.8973815457113289, 0.881432207300521, 0.8683810692185566, 0.8616881782210908, 0.8454958380425942, 0.8405631860454148, 0.825475827554245, 0.8146282584124616, 0.8126521003228987, 0.8111563605592078, 0.8064743773245368, 0.7903920440720434, 0.7777679361892084, 0.795754042819286, 0.7772701712663006, 0.7718162219900071, 0.7656206428382721, 0.7676554432225154, 0.7639937319413561, 0.7539811825015368, 0.7517785849966125, 0.7428061514561438, 0.7393010834724266, 0.7441579837840641, 0.7406375966351093, 0.7254762235822741, 0.7308753033859572, 0.7246204688564473, 0.7311414834247242, 0.7120453425370754, 0.7139634337911454, 0.7188479022783862, 0.7001161507611671, 0.6956991350031989, 0.7104349607694512, 0.7010986880225717, 0.7035882676738899, 0.6856336846658346, 0.6937680097146514, 0.6951172552277557, 0.6762129512791778, 0.6858638729858297, 0.6805950632232008, 0.6733662708245564, 0.6702509900172939, 0.6690026206378813, 0.6726956121783924, 0.6739519548028798, 0.6615472074670405, 0.6695662541727049, 0.6686681025866835, 0.6682773025406508], "accuracy": [0.1200634017586708, 0.19812442362308502, 0.26522254943847656, 0.3218861520290375, 0.3590014576911926, 0.40206050872802734, 0.42966583371162415, 0.46030908823013306, 0.49412229657173157, 0.516180157661438, 0.5414080023765564, 0.5539559125900269, 0.5742966532707214, 0.5836745500564575, 0.5988640785217285, 0.6077136397361755, 0.6229031682014465, 0.6369040012359619, 0.637828528881073, 0.6498481035232544, 0.665830135345459, 0.6670188903808594, 0.6723021864891052, 0.6781138777732849, 0.6753401160240173, 0.6753401160240173, 0.6873596906661987, 0.6886804699897766, 0.6942279934883118, 0.6975300312042236, 0.7004358768463135, 0.7030775547027588, 0.709021270275116, 0.7043983340263367, 0.7067758440971375, 0.7127195596694946, 0.7162858247756958, 0.7153612375259399, 0.7131158113479614, 0.7177387475967407, 0.7173424959182739, 0.7191916704177856, 0.7206445932388306, 0.7239466309547424, 0.7268524765968323, 0.7257958054542542, 0.7316074371337891, 0.7343811988830566, 0.7310791015625, 0.7320036888122559, 0.7362303733825684, 0.7317395210266113, 0.7358341217041016, 0.7323999404907227, 0.7403249144554138, 0.7460044622421265, 0.7387399077415466, 0.7446836829185486, 0.7461365461349487, 0.7375511527061462, 0.7460044622421265, 0.7421740889549255, 0.7504953145980835, 0.7473253011703491, 0.7489103078842163, 0.7499669790267944, 0.7526086568832397, 0.7493065595626831, 0.752740740776062, 0.7567031979560852, 0.7541936039924622, 0.7464007139205933, 0.7535332441329956, 0.7593448758125305, 0.7559106945991516, 0.7573636174201965, 0.7568352818489075], "val_loss": [1.9439376422337122, 1.9145363398960658, 1.8777003969464983, 1.8262989861624581, 1.7540978022984095, 1.6569909368242537, 1.532897642680577, 1.3919131755828857, 1.2498861721583776, 1.1257301398686, 1.024421146937779, 0.9456245218004499, 0.8867931025368827, 0.8378818205424717, 0.7979132618222918, 0.7669393675667899, 0.7413195712225777, 0.7198933362960815, 0.7038570983069283, 0.685366119657244, 0.6706179210117885, 0.6609964030129569, 0.648792028427124, 0.6391510452542987, 0.629982590675354, 0.6235265050615583, 0.6130497285297939, 0.6050631318773542, 0.5980714389256069, 0.5913232394627163, 0.5865068095070975, 0.5821398156029838, 0.578260064125061, 0.5724676847457886, 0.5663269417626517, 0.5628479037966047, 0.5579098803656442, 0.5540431567600795, 0.5522402695247105, 0.546977060181754, 0.5465865135192871, 0.5431607280458722, 0.5395521947315761, 0.537105815751212, 0.533654945237296, 0.5324474062238421, 0.5294092723301479, 0.5267718519483294, 0.52288099697658, 0.5220477751323155, 0.520122800554548, 0.5177416631153652, 0.5158494881221226, 0.5129314831324986, 0.511155366897583, 0.5079055343355451, 0.5063808645520892, 0.5064151116779873, 0.5023911339896066, 0.5021337441035679, 0.5011415311268398, 0.4984806946345738, 0.4978001288005284, 0.4938738686697824, 0.492025579724993, 0.48955959933144705, 0.4891781636646816, 0.4876231976917812, 0.4872703381947109, 0.48614346981048584, 0.4860389913831438, 0.4836582286017282, 0.483038135937282, 0.4794266564505441, 0.47987522397722515, 0.47985715525490896, 0.4795264346258981], "val_accuracy": [0.27300000190734863, 0.3866666555404663, 0.4413333237171173, 0.4763333201408386, 0.5166666507720947, 0.5456666946411133, 0.5669999718666077, 0.5830000042915344, 0.6006666421890259, 0.628333330154419, 0.6576666831970215, 0.6759999990463257, 0.6919999718666077, 0.6919999718666077, 0.7039999961853027, 0.7016666531562805, 0.7093333601951599, 0.7149999737739563, 0.718999981880188, 0.7226666808128357, 0.7273333072662354, 0.7276666760444641, 0.7310000061988831, 0.7353333234786987, 0.7446666955947876, 0.7366666793823242, 0.7480000257492065, 0.7506666779518127, 0.7546666860580444, 0.7556666731834412, 0.7570000290870667, 0.7576666474342346, 0.7596666812896729, 0.762333333492279, 0.765666663646698, 0.7590000033378601, 0.7713333368301392, 0.7689999938011169, 0.7736666798591614, 0.7763333320617676, 0.7720000147819519, 0.7730000019073486, 0.7689999938011169, 0.7736666798591614, 0.7770000100135803, 0.7736666798591614, 0.7763333320617676, 0.781000018119812, 0.7799999713897705, 0.7789999842643738, 0.7829999923706055, 0.7816666960716248, 0.7803333401679993, 0.7846666574478149, 0.7873333096504211, 0.784333348274231, 0.7876666784286499, 0.7873333096504211, 0.7889999747276306, 0.7846666574478149, 0.7950000166893005, 0.7886666655540466, 0.7940000295639038, 0.7926666736602783, 0.7946666479110718, 0.7956666946411133, 0.7919999957084656, 0.7963333129882812, 0.7900000214576721, 0.7996666431427002, 0.7910000085830688, 0.8009999990463257, 0.7990000247955322, 0.7973333597183228, 0.793666660785675, 0.8006666898727417, 0.7986666560173035]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 9, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 1, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [41, 38]], "fitness": -0.7739999890327454, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 3, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.pow(grad, tf.math.add(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.2897716448401826, 2.2604498370385615, 2.228213282435121, 2.1826315952755, 2.1225289094559883, 2.0365125858363315, 1.924062580858255, 1.7882945721632202, 1.6471370701871102, 1.5230913598067284, 1.402420792849214, 1.318964780534279, 1.2571044829795233, 1.1923560361348249, 1.1424641509995155, 1.113011424819539, 1.0771948852559217, 1.0459106465403776, 1.0276562824634718, 0.9833814034671705, 0.9679836123579482, 0.9512798490068932, 0.935979291408951, 0.914594665077211, 0.9177034132201296, 0.8973815457113289, 0.881432207300521, 0.8683810692185566, 0.8616881782210908, 0.8454958380425942, 0.8405631860454148, 0.825475827554245, 0.8146282584124616, 0.8126521003228987, 0.8111563605592078, 0.8064743773245368, 0.7903920440720434, 0.7777679361892084, 0.795754042819286, 0.7772701712663006, 0.7718162219900071, 0.7656206428382721, 0.7676554432225154, 0.7639937319413561, 0.7539811825015368, 0.7517785849966125, 0.7428061514561438, 0.7393010834724266, 0.7441579837840641, 0.7406375966351093, 0.7254762235822741, 0.7308753033859572, 0.7246204688564473, 0.7311414834247242, 0.7120453425370754, 0.7139634337911454, 0.7188479022783862, 0.7001161507611671, 0.6956991350031989, 0.7104349607694512, 0.7010986880225717, 0.7035882676738899, 0.6856336846658346, 0.6937680097146514, 0.6951172552277557, 0.6762129512791778, 0.6858638729858297, 0.6805950632232008, 0.6733662708245564, 0.6702509900172939, 0.6690026206378813, 0.6726956121783924, 0.6739519548028798, 0.6615472074670405, 0.6695662541727049, 0.6686681025866835, 0.6682773025406508], "accuracy": [0.1200634017586708, 0.19812442362308502, 0.26522254943847656, 0.3218861520290375, 0.3590014576911926, 0.40206050872802734, 0.42966583371162415, 0.46030908823013306, 0.49412229657173157, 0.516180157661438, 0.5414080023765564, 0.5539559125900269, 0.5742966532707214, 0.5836745500564575, 0.5988640785217285, 0.6077136397361755, 0.6229031682014465, 0.6369040012359619, 0.637828528881073, 0.6498481035232544, 0.665830135345459, 0.6670188903808594, 0.6723021864891052, 0.6781138777732849, 0.6753401160240173, 0.6753401160240173, 0.6873596906661987, 0.6886804699897766, 0.6942279934883118, 0.6975300312042236, 0.7004358768463135, 0.7030775547027588, 0.709021270275116, 0.7043983340263367, 0.7067758440971375, 0.7127195596694946, 0.7162858247756958, 0.7153612375259399, 0.7131158113479614, 0.7177387475967407, 0.7173424959182739, 0.7191916704177856, 0.7206445932388306, 0.7239466309547424, 0.7268524765968323, 0.7257958054542542, 0.7316074371337891, 0.7343811988830566, 0.7310791015625, 0.7320036888122559, 0.7362303733825684, 0.7317395210266113, 0.7358341217041016, 0.7323999404907227, 0.7403249144554138, 0.7460044622421265, 0.7387399077415466, 0.7446836829185486, 0.7461365461349487, 0.7375511527061462, 0.7460044622421265, 0.7421740889549255, 0.7504953145980835, 0.7473253011703491, 0.7489103078842163, 0.7499669790267944, 0.7526086568832397, 0.7493065595626831, 0.752740740776062, 0.7567031979560852, 0.7541936039924622, 0.7464007139205933, 0.7535332441329956, 0.7593448758125305, 0.7559106945991516, 0.7573636174201965, 0.7568352818489075], "val_loss": [1.9439376422337122, 1.9145363398960658, 1.8777003969464983, 1.8262989861624581, 1.7540978022984095, 1.6569909368242537, 1.532897642680577, 1.3919131755828857, 1.2498861721583776, 1.1257301398686, 1.024421146937779, 0.9456245218004499, 0.8867931025368827, 0.8378818205424717, 0.7979132618222918, 0.7669393675667899, 0.7413195712225777, 0.7198933362960815, 0.7038570983069283, 0.685366119657244, 0.6706179210117885, 0.6609964030129569, 0.648792028427124, 0.6391510452542987, 0.629982590675354, 0.6235265050615583, 0.6130497285297939, 0.6050631318773542, 0.5980714389256069, 0.5913232394627163, 0.5865068095070975, 0.5821398156029838, 0.578260064125061, 0.5724676847457886, 0.5663269417626517, 0.5628479037966047, 0.5579098803656442, 0.5540431567600795, 0.5522402695247105, 0.546977060181754, 0.5465865135192871, 0.5431607280458722, 0.5395521947315761, 0.537105815751212, 0.533654945237296, 0.5324474062238421, 0.5294092723301479, 0.5267718519483294, 0.52288099697658, 0.5220477751323155, 0.520122800554548, 0.5177416631153652, 0.5158494881221226, 0.5129314831324986, 0.511155366897583, 0.5079055343355451, 0.5063808645520892, 0.5064151116779873, 0.5023911339896066, 0.5021337441035679, 0.5011415311268398, 0.4984806946345738, 0.4978001288005284, 0.4938738686697824, 0.492025579724993, 0.48955959933144705, 0.4891781636646816, 0.4876231976917812, 0.4872703381947109, 0.48614346981048584, 0.4860389913831438, 0.4836582286017282, 0.483038135937282, 0.4794266564505441, 0.47987522397722515, 0.47985715525490896, 0.4795264346258981], "val_accuracy": [0.27300000190734863, 0.3866666555404663, 0.4413333237171173, 0.4763333201408386, 0.5166666507720947, 0.5456666946411133, 0.5669999718666077, 0.5830000042915344, 0.6006666421890259, 0.628333330154419, 0.6576666831970215, 0.6759999990463257, 0.6919999718666077, 0.6919999718666077, 0.7039999961853027, 0.7016666531562805, 0.7093333601951599, 0.7149999737739563, 0.718999981880188, 0.7226666808128357, 0.7273333072662354, 0.7276666760444641, 0.7310000061988831, 0.7353333234786987, 0.7446666955947876, 0.7366666793823242, 0.7480000257492065, 0.7506666779518127, 0.7546666860580444, 0.7556666731834412, 0.7570000290870667, 0.7576666474342346, 0.7596666812896729, 0.762333333492279, 0.765666663646698, 0.7590000033378601, 0.7713333368301392, 0.7689999938011169, 0.7736666798591614, 0.7763333320617676, 0.7720000147819519, 0.7730000019073486, 0.7689999938011169, 0.7736666798591614, 0.7770000100135803, 0.7736666798591614, 0.7763333320617676, 0.781000018119812, 0.7799999713897705, 0.7789999842643738, 0.7829999923706055, 0.7816666960716248, 0.7803333401679993, 0.7846666574478149, 0.7873333096504211, 0.784333348274231, 0.7876666784286499, 0.7873333096504211, 0.7889999747276306, 0.7846666574478149, 0.7950000166893005, 0.7886666655540466, 0.7940000295639038, 0.7926666736602783, 0.7946666479110718, 0.7956666946411133, 0.7919999957084656, 0.7963333129882812, 0.7900000214576721, 0.7996666431427002, 0.7910000085830688, 0.8009999990463257, 0.7990000247955322, 0.7973333597183228, 0.793666660785675, 0.8006666898727417, 0.7986666560173035]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 2, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 0, 0, 3, 0, 0, 2, 3, 3, 0], [15, 16, 87, 18, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [41, 38]], "fitness": -0.7739999890327454, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 8, 8, 5, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.multiply(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta))), tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.2897716448401826, 2.2604498370385615, 2.228213282435121, 2.1826315952755, 2.1225289094559883, 2.0365125858363315, 1.924062580858255, 1.7882945721632202, 1.6471370701871102, 1.5230913598067284, 1.402420792849214, 1.318964780534279, 1.2571044829795233, 1.1923560361348249, 1.1424641509995155, 1.113011424819539, 1.0771948852559217, 1.0459106465403776, 1.0276562824634718, 0.9833814034671705, 0.9679836123579482, 0.9512798490068932, 0.935979291408951, 0.914594665077211, 0.9177034132201296, 0.8973815457113289, 0.881432207300521, 0.8683810692185566, 0.8616881782210908, 0.8454958380425942, 0.8405631860454148, 0.825475827554245, 0.8146282584124616, 0.8126521003228987, 0.8111563605592078, 0.8064743773245368, 0.7903920440720434, 0.7777679361892084, 0.795754042819286, 0.7772701712663006, 0.7718162219900071, 0.7656206428382721, 0.7676554432225154, 0.7639937319413561, 0.7539811825015368, 0.7517785849966125, 0.7428061514561438, 0.7393010834724266, 0.7441579837840641, 0.7406375966351093, 0.7254762235822741, 0.7308753033859572, 0.7246204688564473, 0.7311414834247242, 0.7120453425370754, 0.7139634337911454, 0.7188479022783862, 0.7001161507611671, 0.6956991350031989, 0.7104349607694512, 0.7010986880225717, 0.7035882676738899, 0.6856336846658346, 0.6937680097146514, 0.6951172552277557, 0.6762129512791778, 0.6858638729858297, 0.6805950632232008, 0.6733662708245564, 0.6702509900172939, 0.6690026206378813, 0.6726956121783924, 0.6739519548028798, 0.6615472074670405, 0.6695662541727049, 0.6686681025866835, 0.6682773025406508], "accuracy": [0.1200634017586708, 0.19812442362308502, 0.26522254943847656, 0.3218861520290375, 0.3590014576911926, 0.40206050872802734, 0.42966583371162415, 0.46030908823013306, 0.49412229657173157, 0.516180157661438, 0.5414080023765564, 0.5539559125900269, 0.5742966532707214, 0.5836745500564575, 0.5988640785217285, 0.6077136397361755, 0.6229031682014465, 0.6369040012359619, 0.637828528881073, 0.6498481035232544, 0.665830135345459, 0.6670188903808594, 0.6723021864891052, 0.6781138777732849, 0.6753401160240173, 0.6753401160240173, 0.6873596906661987, 0.6886804699897766, 0.6942279934883118, 0.6975300312042236, 0.7004358768463135, 0.7030775547027588, 0.709021270275116, 0.7043983340263367, 0.7067758440971375, 0.7127195596694946, 0.7162858247756958, 0.7153612375259399, 0.7131158113479614, 0.7177387475967407, 0.7173424959182739, 0.7191916704177856, 0.7206445932388306, 0.7239466309547424, 0.7268524765968323, 0.7257958054542542, 0.7316074371337891, 0.7343811988830566, 0.7310791015625, 0.7320036888122559, 0.7362303733825684, 0.7317395210266113, 0.7358341217041016, 0.7323999404907227, 0.7403249144554138, 0.7460044622421265, 0.7387399077415466, 0.7446836829185486, 0.7461365461349487, 0.7375511527061462, 0.7460044622421265, 0.7421740889549255, 0.7504953145980835, 0.7473253011703491, 0.7489103078842163, 0.7499669790267944, 0.7526086568832397, 0.7493065595626831, 0.752740740776062, 0.7567031979560852, 0.7541936039924622, 0.7464007139205933, 0.7535332441329956, 0.7593448758125305, 0.7559106945991516, 0.7573636174201965, 0.7568352818489075], "val_loss": [1.9439376422337122, 1.9145363398960658, 1.8777003969464983, 1.8262989861624581, 1.7540978022984095, 1.6569909368242537, 1.532897642680577, 1.3919131755828857, 1.2498861721583776, 1.1257301398686, 1.024421146937779, 0.9456245218004499, 0.8867931025368827, 0.8378818205424717, 0.7979132618222918, 0.7669393675667899, 0.7413195712225777, 0.7198933362960815, 0.7038570983069283, 0.685366119657244, 0.6706179210117885, 0.6609964030129569, 0.648792028427124, 0.6391510452542987, 0.629982590675354, 0.6235265050615583, 0.6130497285297939, 0.6050631318773542, 0.5980714389256069, 0.5913232394627163, 0.5865068095070975, 0.5821398156029838, 0.578260064125061, 0.5724676847457886, 0.5663269417626517, 0.5628479037966047, 0.5579098803656442, 0.5540431567600795, 0.5522402695247105, 0.546977060181754, 0.5465865135192871, 0.5431607280458722, 0.5395521947315761, 0.537105815751212, 0.533654945237296, 0.5324474062238421, 0.5294092723301479, 0.5267718519483294, 0.52288099697658, 0.5220477751323155, 0.520122800554548, 0.5177416631153652, 0.5158494881221226, 0.5129314831324986, 0.511155366897583, 0.5079055343355451, 0.5063808645520892, 0.5064151116779873, 0.5023911339896066, 0.5021337441035679, 0.5011415311268398, 0.4984806946345738, 0.4978001288005284, 0.4938738686697824, 0.492025579724993, 0.48955959933144705, 0.4891781636646816, 0.4876231976917812, 0.4872703381947109, 0.48614346981048584, 0.4860389913831438, 0.4836582286017282, 0.483038135937282, 0.4794266564505441, 0.47987522397722515, 0.47985715525490896, 0.4795264346258981], "val_accuracy": [0.27300000190734863, 0.3866666555404663, 0.4413333237171173, 0.4763333201408386, 0.5166666507720947, 0.5456666946411133, 0.5669999718666077, 0.5830000042915344, 0.6006666421890259, 0.628333330154419, 0.6576666831970215, 0.6759999990463257, 0.6919999718666077, 0.6919999718666077, 0.7039999961853027, 0.7016666531562805, 0.7093333601951599, 0.7149999737739563, 0.718999981880188, 0.7226666808128357, 0.7273333072662354, 0.7276666760444641, 0.7310000061988831, 0.7353333234786987, 0.7446666955947876, 0.7366666793823242, 0.7480000257492065, 0.7506666779518127, 0.7546666860580444, 0.7556666731834412, 0.7570000290870667, 0.7576666474342346, 0.7596666812896729, 0.762333333492279, 0.765666663646698, 0.7590000033378601, 0.7713333368301392, 0.7689999938011169, 0.7736666798591614, 0.7763333320617676, 0.7720000147819519, 0.7730000019073486, 0.7689999938011169, 0.7736666798591614, 0.7770000100135803, 0.7736666798591614, 0.7763333320617676, 0.781000018119812, 0.7799999713897705, 0.7789999842643738, 0.7829999923706055, 0.7816666960716248, 0.7803333401679993, 0.7846666574478149, 0.7873333096504211, 0.784333348274231, 0.7876666784286499, 0.7873333096504211, 0.7889999747276306, 0.7846666574478149, 0.7950000166893005, 0.7886666655540466, 0.7940000295639038, 0.7926666736602783, 0.7946666479110718, 0.7956666946411133, 0.7919999957084656, 0.7963333129882812, 0.7900000214576721, 0.7996666431427002, 0.7910000085830688, 0.8009999990463257, 0.7990000247955322, 0.7973333597183228, 0.793666660785675, 0.8006666898727417, 0.7986666560173035]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 9, 0, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 2, 1, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [41, 38]], "fitness": -0.7739999890327454, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 10, 7, 3, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), tf.math.negative(tf.math.multiply(tf.math.add(beta, tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.2897716448401826, 2.2604498370385615, 2.228213282435121, 2.1826315952755, 2.1225289094559883, 2.0365125858363315, 1.924062580858255, 1.7882945721632202, 1.6471370701871102, 1.5230913598067284, 1.402420792849214, 1.318964780534279, 1.2571044829795233, 1.1923560361348249, 1.1424641509995155, 1.113011424819539, 1.0771948852559217, 1.0459106465403776, 1.0276562824634718, 0.9833814034671705, 0.9679836123579482, 0.9512798490068932, 0.935979291408951, 0.914594665077211, 0.9177034132201296, 0.8973815457113289, 0.881432207300521, 0.8683810692185566, 0.8616881782210908, 0.8454958380425942, 0.8405631860454148, 0.825475827554245, 0.8146282584124616, 0.8126521003228987, 0.8111563605592078, 0.8064743773245368, 0.7903920440720434, 0.7777679361892084, 0.795754042819286, 0.7772701712663006, 0.7718162219900071, 0.7656206428382721, 0.7676554432225154, 0.7639937319413561, 0.7539811825015368, 0.7517785849966125, 0.7428061514561438, 0.7393010834724266, 0.7441579837840641, 0.7406375966351093, 0.7254762235822741, 0.7308753033859572, 0.7246204688564473, 0.7311414834247242, 0.7120453425370754, 0.7139634337911454, 0.7188479022783862, 0.7001161507611671, 0.6956991350031989, 0.7104349607694512, 0.7010986880225717, 0.7035882676738899, 0.6856336846658346, 0.6937680097146514, 0.6951172552277557, 0.6762129512791778, 0.6858638729858297, 0.6805950632232008, 0.6733662708245564, 0.6702509900172939, 0.6690026206378813, 0.6726956121783924, 0.6739519548028798, 0.6615472074670405, 0.6695662541727049, 0.6686681025866835, 0.6682773025406508], "accuracy": [0.1200634017586708, 0.19812442362308502, 0.26522254943847656, 0.3218861520290375, 0.3590014576911926, 0.40206050872802734, 0.42966583371162415, 0.46030908823013306, 0.49412229657173157, 0.516180157661438, 0.5414080023765564, 0.5539559125900269, 0.5742966532707214, 0.5836745500564575, 0.5988640785217285, 0.6077136397361755, 0.6229031682014465, 0.6369040012359619, 0.637828528881073, 0.6498481035232544, 0.665830135345459, 0.6670188903808594, 0.6723021864891052, 0.6781138777732849, 0.6753401160240173, 0.6753401160240173, 0.6873596906661987, 0.6886804699897766, 0.6942279934883118, 0.6975300312042236, 0.7004358768463135, 0.7030775547027588, 0.709021270275116, 0.7043983340263367, 0.7067758440971375, 0.7127195596694946, 0.7162858247756958, 0.7153612375259399, 0.7131158113479614, 0.7177387475967407, 0.7173424959182739, 0.7191916704177856, 0.7206445932388306, 0.7239466309547424, 0.7268524765968323, 0.7257958054542542, 0.7316074371337891, 0.7343811988830566, 0.7310791015625, 0.7320036888122559, 0.7362303733825684, 0.7317395210266113, 0.7358341217041016, 0.7323999404907227, 0.7403249144554138, 0.7460044622421265, 0.7387399077415466, 0.7446836829185486, 0.7461365461349487, 0.7375511527061462, 0.7460044622421265, 0.7421740889549255, 0.7504953145980835, 0.7473253011703491, 0.7489103078842163, 0.7499669790267944, 0.7526086568832397, 0.7493065595626831, 0.752740740776062, 0.7567031979560852, 0.7541936039924622, 0.7464007139205933, 0.7535332441329956, 0.7593448758125305, 0.7559106945991516, 0.7573636174201965, 0.7568352818489075], "val_loss": [1.9439376422337122, 1.9145363398960658, 1.8777003969464983, 1.8262989861624581, 1.7540978022984095, 1.6569909368242537, 1.532897642680577, 1.3919131755828857, 1.2498861721583776, 1.1257301398686, 1.024421146937779, 0.9456245218004499, 0.8867931025368827, 0.8378818205424717, 0.7979132618222918, 0.7669393675667899, 0.7413195712225777, 0.7198933362960815, 0.7038570983069283, 0.685366119657244, 0.6706179210117885, 0.6609964030129569, 0.648792028427124, 0.6391510452542987, 0.629982590675354, 0.6235265050615583, 0.6130497285297939, 0.6050631318773542, 0.5980714389256069, 0.5913232394627163, 0.5865068095070975, 0.5821398156029838, 0.578260064125061, 0.5724676847457886, 0.5663269417626517, 0.5628479037966047, 0.5579098803656442, 0.5540431567600795, 0.5522402695247105, 0.546977060181754, 0.5465865135192871, 0.5431607280458722, 0.5395521947315761, 0.537105815751212, 0.533654945237296, 0.5324474062238421, 0.5294092723301479, 0.5267718519483294, 0.52288099697658, 0.5220477751323155, 0.520122800554548, 0.5177416631153652, 0.5158494881221226, 0.5129314831324986, 0.511155366897583, 0.5079055343355451, 0.5063808645520892, 0.5064151116779873, 0.5023911339896066, 0.5021337441035679, 0.5011415311268398, 0.4984806946345738, 0.4978001288005284, 0.4938738686697824, 0.492025579724993, 0.48955959933144705, 0.4891781636646816, 0.4876231976917812, 0.4872703381947109, 0.48614346981048584, 0.4860389913831438, 0.4836582286017282, 0.483038135937282, 0.4794266564505441, 0.47987522397722515, 0.47985715525490896, 0.4795264346258981], "val_accuracy": [0.27300000190734863, 0.3866666555404663, 0.4413333237171173, 0.4763333201408386, 0.5166666507720947, 0.5456666946411133, 0.5669999718666077, 0.5830000042915344, 0.6006666421890259, 0.628333330154419, 0.6576666831970215, 0.6759999990463257, 0.6919999718666077, 0.6919999718666077, 0.7039999961853027, 0.7016666531562805, 0.7093333601951599, 0.7149999737739563, 0.718999981880188, 0.7226666808128357, 0.7273333072662354, 0.7276666760444641, 0.7310000061988831, 0.7353333234786987, 0.7446666955947876, 0.7366666793823242, 0.7480000257492065, 0.7506666779518127, 0.7546666860580444, 0.7556666731834412, 0.7570000290870667, 0.7576666474342346, 0.7596666812896729, 0.762333333492279, 0.765666663646698, 0.7590000033378601, 0.7713333368301392, 0.7689999938011169, 0.7736666798591614, 0.7763333320617676, 0.7720000147819519, 0.7730000019073486, 0.7689999938011169, 0.7736666798591614, 0.7770000100135803, 0.7736666798591614, 0.7763333320617676, 0.781000018119812, 0.7799999713897705, 0.7789999842643738, 0.7829999923706055, 0.7816666960716248, 0.7803333401679993, 0.7846666574478149, 0.7873333096504211, 0.784333348274231, 0.7876666784286499, 0.7873333096504211, 0.7889999747276306, 0.7846666574478149, 0.7950000166893005, 0.7886666655540466, 0.7940000295639038, 0.7926666736602783, 0.7946666479110718, 0.7956666946411133, 0.7919999957084656, 0.7963333129882812, 0.7900000214576721, 0.7996666431427002, 0.7910000085830688, 0.8009999990463257, 0.7990000247955322, 0.7973333597183228, 0.793666660785675, 0.8006666898727417, 0.7986666560173035]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1], [7, 3, 2, 6, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 1, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], [2, 3, 4, 3, 9, 6, 0, 9], [0, 3, 3, 1], [41, 38, 67]], "fitness": -0.41685715317726135, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 9, 8, 3, 1, 1, 0, 1, 0, 12, 8, 4, 3], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.add(tf.math.multiply(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.square(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, alpha))), tf.math.add(tf.math.add(beta, beta), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.pow(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), sigma), tf.math.divide_no_nan(sigma, tf.math.negative(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))), alpha)", "other_info": {"loss": [2.2799934240899713, 2.246226796636555, 2.2415996724903278, 2.250423701872931, 2.253573254666009, 2.252416913913399, 2.249831318745067], "accuracy": [0.15149913728237152, 0.27803459763526917, 0.3259807229042053, 0.3206973969936371, 0.3155461549758911, 0.32399946451187134, 0.33681151270866394], "val_loss": [1.9289164543151855, 1.9156015941074915, 1.9231577600751604, 1.931734902518136, 1.9317153521946497, 1.928548812866211, 1.9310603822980608], "val_accuracy": [0.3790000081062317, 0.4403333365917206, 0.43066665530204773, 0.3889999985694885, 0.406333327293396, 0.4309999942779541, 0.42766666412353516]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1], [2, 2, 0, 1, 0], [2, 0, 0, 3, 1, 0], [50, 57], [1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [2, 5, 2, 2, 2, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 2, 0, 0, 2, 3, 3, 0], [79, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 7, 9, 9], [3, 1, 3, 1], [89, 38]], "fitness": -0.24942857027053833, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 6, 5, 1, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), sigma))", "other_info": {"loss": [3.046062867686481, 4.767709804736959, 2.31438476688842, 2.305127378499519, 2.303404872758498, 2.3031058673924143], "accuracy": [0.1958790123462677, 0.14951789379119873, 0.09893012791872025, 0.09708096832036972, 0.09774138033390045, 0.09576013684272766], "val_loss": [1.8963895525251115, 1.9886721202305384, 1.9779516628810339, 1.9744127137320382, 1.9739437784467424, 1.973863192967006], "val_accuracy": [0.351666659116745, 0.10000000149011612, 0.10400000214576721, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [5, 6, 8, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 2, 2, 2, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 1, 3, 3, 3, 0, 2, 3, 3, 0], [35, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 3, 7, 9, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 6, 5, 1, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, beta), tf.math.square(tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), sigma), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [13.015576416837416, 2.6637640675502037, 2.7733785828043835, 11517.843896794833, 2.3085864666288933, 2.3077738099897447, 2.3070712351543934], "accuracy": [0.09879804402589798, 0.10130762308835983, 0.09787346422672272, 0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.194058282034738, 2.203434944152832, 2.2700151034763882, 1.9796361923217773, 1.9788601057870048, 1.9781888553074427, 1.9775939668927873], "val_accuracy": [0.09833333641290665, 0.10400000214576721, 0.0989999994635582, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 5, 2, 2, 9, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 1, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 2, 7, 9, 5], [1, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 1, 2, 1, 6, 4, 3, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(grad, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [26593756298.074055, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.11068551242351532, 0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [Infinity, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 3, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 1, 3, 9], [0, 2, 3, 1], [74, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 7, 7, 3, 1, 1, 0, 1, 0, 8, 5, 3, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.add(tf.math.multiply(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), beta), sigma), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 0, 3, 0, 0, 1, 3, 3, 0], [55, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [3468.999259862571, 62007.220954134194, 284202.9841459186, 786133.1793191124, 1670766.4315480122, 3034126.704695549], "accuracy": [0.10077928751707077, 0.10051512718200684, 0.09985470771789551, 0.09536388516426086, 0.09853387624025345, 0.10606260597705841], "val_loss": [12472.231863839286, 97010.84151785714, 324657.6339285714, 766444.8214285715, 1493408.4285714286, 2576581.3571428573], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 2, 2, 2, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 1, 2, 3, 3, 0], [34, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 2, 8, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 7, 4, 3, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.math.sqrt(sigma), sigma), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [1, 6, 8, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 2, 2, 2, 2, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 2, 0, 0, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 0, 9, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0734381154179573, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [0, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1], [7, 4, 4, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 0, 0, 1, 2, 3, 3, 0], [15, 21, 43, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 6, 9, 3, 9], [0, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 14, 14, 7, 7, 4, 1, 0, 0, 0, 0, 2, 1, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.pow(tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.math.add(beta, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [4505173.990899756, 84726467.45528992, 393254669.8380663, 1093469182.4614978, 2330578310.001849, 4239929399.6565843], "accuracy": [0.1010434553027153, 0.10038304328918457, 0.09985470771789551, 0.0952318087220192, 0.09840179979801178, 0.10606260597705841], "val_loss": [16737837.142857144, 133634724.57142857, 450719030.85714287, 1068019126.8571428, 2085576118.857143, 3603403190.857143], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [5, 6, 8, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 0, 2, 2, 2, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 2, 0, 0, 3, 3, 3, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 7, 9, 9], [3, 3, 3, 1], [10, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 1, 12, 12, 6, 6, 4, 1, 1, 0, 1, 0, 6, 3, 3, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(grad, tf.math.add(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta)), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.add(sigma, sigma)))", "other_info": {"loss": [2.3021057215758507, 2.305321308505565, 2.311629652961244, 2.3191333512399552, 2.3344600921482725, 2.411936027120999, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08994849026203156, 0.0878351628780365, 0.07991018146276474, 0.07858935743570328, 0.0754193663597107, 0.07740060985088348, 0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9727612222943987, 1.9761921337672643, 1.9806882313319616, 1.987142903464181, 2.002340521131243, 8.304259436471122, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03099999949336052, 0.027000000700354576, 0.02666666731238365, 0.04399999976158142, 0.08233333379030228, 0.10000000149011612, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [0, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 1, 2, 3, 3, 0], [15, 16, 46, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 14, 14, 7, 7, 3, 1, 1, 0, 1, 0, 4, 3, 1, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.add(tf.math.multiply(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))), alpha)), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [3468.999259862571, 62007.220954134194, 284202.9841459186, 786133.1793191124, 1670766.4315480122, 3034126.704695549], "accuracy": [0.10077928751707077, 0.10051512718200684, 0.09985470771789551, 0.09536388516426086, 0.09853387624025345, 0.10606260597705841], "val_loss": [12472.231863839286, 97010.84151785714, 324657.6339285714, 766444.8214285715, 1493408.4285714286, 2576581.3571428573], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 0], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 5, 2, 8, 2, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 2, 2, 3, 3, 0], [35, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0], [0, 2, 7, 9, 5], [1, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 5, 4, 2, 2, 0, 6, 4, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), alpha), sigma))", "other_info": {"loss": [4505173.990899756, 84726467.45528992, 393254669.8380663, 1093469182.4614978, 2330578310.001849, 4239929399.6565843], "accuracy": [0.1010434553027153, 0.10038304328918457, 0.09985470771789551, 0.0952318087220192, 0.09840179979801178, 0.10606260597705841], "val_loss": [16737837.142857144, 133634724.57142857, 450719030.85714287, 1068019126.8571428, 2085576118.857143, 3603403190.857143], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 2, 9, 1, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [2, 5, 2, 2, 2, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 0, 2, 3, 3, 0], [79, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0], [3, 3, 9, 3, 9], [3, 3, 3, 1], [89, 38]], "fitness": -0.07771428674459457, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.multiply(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.3008984071766587, 2.2999827151348278, 2.300730411544405, 2.3003079436474376, 2.300581985823057, 2.3005676166555586, 2.2997041637902846, 2.3003926865413065, 2.2998779160455864, 2.300536855746254, 2.299435852257614, 2.299418473807403, 2.2999956052946677, 2.2998697996422948, 2.300057145063163], "accuracy": [0.09034473448991776, 0.09259014576673508, 0.09113723784685135, 0.09615638852119446, 0.09470347315073013, 0.08968432247638702, 0.09549596905708313, 0.09153348207473755, 0.09959053993225098, 0.09800554811954498, 0.10328886657953262, 0.09972262382507324, 0.09919429570436478, 0.09747721254825592, 0.09972262382507324], "val_loss": [1.9699324199131556, 1.9695555141993932, 1.9693034717014857, 1.96913058417184, 1.9691282681056432, 1.969015666416713, 1.9690120560782296, 1.9689502034868513, 1.969012873513358, 1.9691012246268136, 1.96924774987357, 1.9695144380841936, 1.9697860309055872, 1.9701344626290458, 1.9703950881958008], "val_accuracy": [0.04699999839067459, 0.05366666615009308, 0.05833333358168602, 0.05999999865889549, 0.06599999964237213, 0.070333331823349, 0.07699999958276749, 0.07733333110809326, 0.07833333313465118, 0.07966666668653488, 0.07766667008399963, 0.07900000363588333, 0.07566666603088379, 0.07466666400432587, 0.07366666942834854]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [5, 6, 8, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 4, 9, 2, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 0, 2, 3, 3, 0], [15, 16, 52, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 7, 9, 9], [1, 3, 3, 1], [41, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 2, 1, 0, 0, 0, 0, 6, 4, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), alpha), sigma))", "other_info": {"loss": [2.3012259402657387, 2.300988500868687, 2.3022517428311846, 2.302274816182028, 2.3027846241009913, 2.3034090621045333], "accuracy": [0.09047681838274002, 0.09232597798109055, 0.09034473448991776, 0.0944393053650856, 0.0882314071059227, 0.08308017253875732], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [1, 6, 8, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 2, 2, 2, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 2, 0, 0, 2, 3, 3, 0], [15, 90, 79, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 3, 7, 9, 9], [0, 3, 3, 1], [41, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 6, 7, 4, 5, 4, 2, 2, 0, 7, 4, 3, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.add(tf.math.add(tf.math.add(tf.math.add(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta)), tf.math.add(beta, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)), sigma)", "other_info": {"loss": [2.3012259402657387, 2.300988500868687, 2.3022517428311846, 2.302274816182028, 2.3027846241009913, 2.3034090621045333], "accuracy": [0.09047681838274002, 0.09232597798109055, 0.09034473448991776, 0.0944393053650856, 0.0882314071059227, 0.08308017253875732], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [1, 6, 8, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 2, 2, 2, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 3, 2, 0, 0, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 7, 9, 9], [3, 3, 3, 1], [22, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 4, 3, 1, 0, 6, 3, 3, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(sigma, sigma), sigma))", "other_info": {"loss": [2.3012259402657387, 2.300988500868687, 2.3022517428311846, 2.302274816182028, 2.3027846241009913, 2.3034090621045333], "accuracy": [0.09047681838274002, 0.09232597798109055, 0.09034473448991776, 0.0944393053650856, 0.0882314071059227, 0.08308017253875732], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]