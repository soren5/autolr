[{"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [2, 6, 9, 0, 0, 3, 4], [3, 0, 0, 3, 1, 0], [8, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.8159999847412109, "mapping_values": [1, 11, 11, 7, 4, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.148724827957254, 1.8563513626055301, 1.439776243708153, 1.1191102488008489, 0.9289069507556931, 0.8306840861305002, 0.7860865109018158, 0.7362747943680032, 0.7047511953341411, 0.6902072728900484, 0.6287256085074353, 0.6369443494630228, 0.582464596102849, 0.5828750225389481, 0.5989927109111931, 0.5474990420353458, 0.5444296118904807, 0.5273738094860017, 0.5193770368140781, 0.5242323273791141, 0.4919628757039207, 0.508502297893633, 0.45044492277030257, 0.47202732066326547, 0.4523646206966622, 0.4362358386018068, 0.44388863270340373, 0.422402059483947, 0.4170903702217433, 0.4193494257563534], "accuracy": [0.29124289751052856, 0.38541802763938904, 0.5190860033035278, 0.5823537111282349, 0.652621865272522, 0.7000396251678467, 0.6964733600616455, 0.7193237543106079, 0.7290979027748108, 0.7384757399559021, 0.76106196641922, 0.7625148296356201, 0.7775723338127136, 0.7798177003860474, 0.7737419009208679, 0.7975168228149414, 0.7956677079200745, 0.8035926818847656, 0.8072909712791443, 0.8047813773155212, 0.8178576231002808, 0.8145555257797241, 0.8343679904937744, 0.8236692547798157, 0.8253863453865051, 0.8366134166717529, 0.8330471515655518, 0.839519202709198, 0.8455950617790222, 0.8432175517082214], "val_loss": [1.4695028577532088, 1.0045856067112513, 0.8226316826684135, 0.7803932768957955, 0.7818143878664289, 0.617407134601048, 0.5476092100143433, 0.5144004651478359, 0.5685489518301827, 0.4926804304122925, 0.49586468083517893, 0.4738708734512329, 0.45383202178137644, 0.4477132814271109, 0.42596371684755596, 0.4278336933680943, 0.42123489720480783, 0.4125155210494995, 0.41115197965076994, 0.40138886656079975, 0.4398043325969151, 0.38551120247159687, 0.43204425062452045, 0.37555910859789166, 0.36345845460891724, 0.4121318459510803, 0.38693886143820627, 0.38273234026772635, 0.37070904459272114, 0.4389755981309073], "val_accuracy": [0.46266666054725647, 0.6056666374206543, 0.6316666603088379, 0.6273333430290222, 0.6570000052452087, 0.7036666870117188, 0.7443333268165588, 0.7710000276565552, 0.746999979019165, 0.7839999794960022, 0.7956666946411133, 0.7826666831970215, 0.8076666593551636, 0.8073333501815796, 0.8213333487510681, 0.8076666593551636, 0.8136666417121887, 0.8166666626930237, 0.8226666450500488, 0.8240000009536743, 0.8053333163261414, 0.8386666774749756, 0.8053333163261414, 0.8446666598320007, 0.846666693687439, 0.815666675567627, 0.8266666531562805, 0.8370000123977661, 0.8410000205039978, 0.784333348274231]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1], [2, 5, 9, 8, 2, 2, 2, 0], [1, 0, 0, 3, 1, 0], [8, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.8159999847412109, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.148724827957254, 1.8563513626055301, 1.439776243708153, 1.1191102488008489, 0.9289069507556931, 0.8306840861305002, 0.7860865109018158, 0.7362747943680032, 0.7047511953341411, 0.6902072728900484, 0.6287256085074353, 0.6369443494630228, 0.582464596102849, 0.5828750225389481, 0.5989927109111931, 0.5474990420353458, 0.5444296118904807, 0.5273738094860017, 0.5193770368140781, 0.5242323273791141, 0.4919628757039207, 0.508502297893633, 0.45044492277030257, 0.47202732066326547, 0.4523646206966622, 0.4362358386018068, 0.44388863270340373, 0.422402059483947, 0.4170903702217433, 0.4193494257563534], "accuracy": [0.29124289751052856, 0.38541802763938904, 0.5190860033035278, 0.5823537111282349, 0.652621865272522, 0.7000396251678467, 0.6964733600616455, 0.7193237543106079, 0.7290979027748108, 0.7384757399559021, 0.76106196641922, 0.7625148296356201, 0.7775723338127136, 0.7798177003860474, 0.7737419009208679, 0.7975168228149414, 0.7956677079200745, 0.8035926818847656, 0.8072909712791443, 0.8047813773155212, 0.8178576231002808, 0.8145555257797241, 0.8343679904937744, 0.8236692547798157, 0.8253863453865051, 0.8366134166717529, 0.8330471515655518, 0.839519202709198, 0.8455950617790222, 0.8432175517082214], "val_loss": [1.4695028577532088, 1.0045856067112513, 0.8226316826684135, 0.7803932768957955, 0.7818143878664289, 0.617407134601048, 0.5476092100143433, 0.5144004651478359, 0.5685489518301827, 0.4926804304122925, 0.49586468083517893, 0.4738708734512329, 0.45383202178137644, 0.4477132814271109, 0.42596371684755596, 0.4278336933680943, 0.42123489720480783, 0.4125155210494995, 0.41115197965076994, 0.40138886656079975, 0.4398043325969151, 0.38551120247159687, 0.43204425062452045, 0.37555910859789166, 0.36345845460891724, 0.4121318459510803, 0.38693886143820627, 0.38273234026772635, 0.37070904459272114, 0.4389755981309073], "val_accuracy": [0.46266666054725647, 0.6056666374206543, 0.6316666603088379, 0.6273333430290222, 0.6570000052452087, 0.7036666870117188, 0.7443333268165588, 0.7710000276565552, 0.746999979019165, 0.7839999794960022, 0.7956666946411133, 0.7826666831970215, 0.8076666593551636, 0.8073333501815796, 0.8213333487510681, 0.8076666593551636, 0.8136666417121887, 0.8166666626930237, 0.8226666450500488, 0.8240000009536743, 0.8053333163261414, 0.8386666774749756, 0.8053333163261414, 0.8446666598320007, 0.846666693687439, 0.815666675567627, 0.8266666531562805, 0.8370000123977661, 0.8410000205039978, 0.784333348274231]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [2, 6, 9, 0, 2, 3, 2, 0], [3, 0, 0, 3, 2, 0], [28, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [27, 47, 50, 41, 34]], "fitness": -0.7708571553230286, "mapping_values": [1, 12, 12, 7, 5, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.2943862080652764, 2.273347235091248, 2.2499906006207038, 2.221358949450643, 2.185126326449748, 2.139796031606259, 2.081570826879251, 2.0075837464270228, 1.9140983722339358, 1.8077030469870223, 1.7107541762669294, 1.6025296852431514, 1.504431079312905, 1.423778141006235, 1.348296392296189, 1.286478583098812, 1.238425386706206, 1.1905081768581314, 1.1471518162234962, 1.1212972988778134, 1.0984029802805586, 1.0808916203554642, 1.043819653406875, 1.0289260093892776, 1.008986548213218, 0.9851212918388372, 0.9682792732744263, 0.9609937455282235, 0.945875691015014, 0.9330681141073741, 0.91904775692629, 0.9106795214202189, 0.8992255738918036, 0.8898100127964098, 0.8710504708792697, 0.8718418877406001, 0.8567444064188564, 0.8620397847845979, 0.847686448999132, 0.8364212599649028, 0.839603664718835, 0.8292379309834742, 0.8224488454110052, 0.8199598832987618, 0.814395819412892, 0.8093398097735732, 0.7996265942299954, 0.792320254535219, 0.7892584951483516, 0.783626744996256, 0.7764962587641876, 0.7707221912843298, 0.7696301316100184, 0.7763299182138076, 0.7715845667391625, 0.7613005287942318, 0.7502378892070346, 0.7538257700703195, 0.7475617254619601, 0.7385062648084547, 0.7386150104793906, 0.7420058811833562, 0.7397227524813565, 0.7390319883957231, 0.7322414184621202, 0.7378264207172985, 0.737913276108107, 0.722995915370075, 0.7152116306312112, 0.7159202968628651, 0.7309186541094141, 0.7050672732387094, 0.7180161557775746, 0.7092605393954146, 0.7023958644500388, 0.7033787900037014, 0.7085576315188152, 0.701393306499396, 0.6960935930156469, 0.7078231423679927, 0.6889044151188376, 0.6905738789533595, 0.6886576667847241, 0.6848426874382085, 0.6835117874175739, 0.6814358006646651, 0.6880487184939588, 0.6787777976463216, 0.6745431507976851, 0.67389210889746], "accuracy": [0.11028926074504852, 0.17117950320243835, 0.22797517478466034, 0.28278958797454834, 0.31845200061798096, 0.3563597798347473, 0.38568219542503357, 0.40087175369262695, 0.43468499183654785, 0.45872408151626587, 0.47430986166000366, 0.49372607469558716, 0.5120856165885925, 0.5266147255897522, 0.5507858991622925, 0.5622771382331848, 0.5789195895195007, 0.5840708017349243, 0.603090763092041, 0.6089023947715759, 0.6124686598777771, 0.6239598393440247, 0.6293752193450928, 0.6363756656646729, 0.6445648074150085, 0.650640606880188, 0.6548672318458557, 0.6608110070228577, 0.6612072587013245, 0.666358470916748, 0.6754721999168396, 0.6807554960250854, 0.6812838315963745, 0.6841896772384644, 0.6894729733467102, 0.6893408894538879, 0.6960771083831787, 0.6933034062385559, 0.6947563290596008, 0.7016246318817139, 0.6977941989898682, 0.6985867023468018, 0.705058753490448, 0.7087571024894714, 0.7069079279899597, 0.7092854380607605, 0.7112666964530945, 0.7128516435623169, 0.7127195596694946, 0.7169462442398071, 0.7186633348464966, 0.7153612375259399, 0.7214370369911194, 0.7231541275978088, 0.724739134311676, 0.7277770638465881, 0.7297582626342773, 0.7276449799537659, 0.7285695672035217, 0.7297582626342773, 0.7308149337768555, 0.7308149337768555, 0.7337207794189453, 0.733588695526123, 0.7334566116333008, 0.7362303733825684, 0.7292299270629883, 0.7368907928466797, 0.7383436560630798, 0.7429665923118591, 0.7349095344543457, 0.7409853339195251, 0.7372870445251465, 0.7424382567405701, 0.743891179561615, 0.7430986762046814, 0.7456082701683044, 0.7445515990257263, 0.7469290494918823, 0.7429665923118591, 0.7448157668113708, 0.744419515132904, 0.7493065595626831, 0.7510236501693726, 0.7512878179550171, 0.7477215528488159, 0.7467969655990601, 0.7473253011703491, 0.7561748623847961, 0.7490423917770386], "val_loss": [1.950096607208252, 1.9291986737932478, 1.9053130149841309, 1.8754832404000419, 1.83697053364345, 1.7859857422964913, 1.7211691311427526, 1.6401739801679338, 1.5424799237932478, 1.4334744725908553, 1.3235400404248918, 1.2191924708230155, 1.1255527223859514, 1.0466313021523612, 0.9800652776445661, 0.9267778396606445, 0.8817577021462577, 0.8447236503873553, 0.8115289211273193, 0.7852330378123692, 0.7629411390849522, 0.7446594067982265, 0.7266720873968942, 0.7120796271732875, 0.6979166439601353, 0.6862280028206962, 0.6743095432009015, 0.6648158345903669, 0.6564373799732753, 0.6469574315207345, 0.6401834828513009, 0.6311969416482108, 0.6256234816142491, 0.6181352819715228, 0.6109276328768048, 0.6070820604051862, 0.601627026285444, 0.5955037730080741, 0.5917544875826154, 0.5872083391462054, 0.5827984469277518, 0.5786760023662022, 0.575034465108599, 0.5722472156797137, 0.5683754341942924, 0.5654783419200352, 0.5645532948630196, 0.560607876096453, 0.556377479008266, 0.5522301537649972, 0.5493241378239223, 0.5473179476601737, 0.5445366927555629, 0.5426326990127563, 0.5415311711175101, 0.5396696840013776, 0.5363772085734776, 0.5332302876881191, 0.5312867334910801, 0.530034099306379, 0.5261262995856149, 0.5246179103851318, 0.5237078666687012, 0.5211832863943917, 0.5215954780578613, 0.5190975495747158, 0.517520649092538, 0.5148682764598301, 0.5128083910260882, 0.5115875516619001, 0.5094138213566372, 0.5094774109976632, 0.507105963570731, 0.5064038549150739, 0.5046993323734829, 0.501172525542123, 0.5017093079430717, 0.4999955041067941, 0.4981039762496948, 0.49803335326058523, 0.4957217829568045, 0.4970015287399292, 0.49530998298100065, 0.492583053452628, 0.4927214894975935, 0.4911483866827829, 0.4916051796504429, 0.4900284835270473, 0.4871788876397269, 0.48707638468061176], "val_accuracy": [0.22433333098888397, 0.3529999852180481, 0.39633333683013916, 0.4339999854564667, 0.46133333444595337, 0.4846666753292084, 0.5166666507720947, 0.5389999747276306, 0.5603333115577698, 0.5753333568572998, 0.5886666774749756, 0.6110000014305115, 0.6290000081062317, 0.656333327293396, 0.6710000038146973, 0.6800000071525574, 0.6890000104904175, 0.6896666884422302, 0.7003333568572998, 0.7006666660308838, 0.7070000171661377, 0.7070000171661377, 0.7099999785423279, 0.7049999833106995, 0.718666672706604, 0.7233333587646484, 0.7239999771118164, 0.7303333282470703, 0.7350000143051147, 0.7329999804496765, 0.7323333621025085, 0.7419999837875366, 0.7356666922569275, 0.7456666827201843, 0.7506666779518127, 0.7549999952316284, 0.7570000290870667, 0.7580000162124634, 0.7549999952316284, 0.7549999952316284, 0.7633333206176758, 0.765999972820282, 0.762333333492279, 0.765999972820282, 0.7646666765213013, 0.765333354473114, 0.7683333158493042, 0.768666684627533, 0.765999972820282, 0.768666684627533, 0.7703333497047424, 0.7703333497047424, 0.7746666669845581, 0.7736666798591614, 0.7739999890327454, 0.7726666927337646, 0.7736666798591614, 0.7760000228881836, 0.7786666750907898, 0.7753333449363708, 0.7789999842643738, 0.7789999842643738, 0.7839999794960022, 0.7820000052452087, 0.7773333191871643, 0.7806666493415833, 0.7856666445732117, 0.784333348274231, 0.7826666831970215, 0.7826666831970215, 0.7873333096504211, 0.7883333563804626, 0.7860000133514404, 0.7833333611488342, 0.7863333225250244, 0.7886666655540466, 0.7876666784286499, 0.7900000214576721, 0.7903333306312561, 0.7919999957084656, 0.7913333177566528, 0.7926666736602783, 0.7923333048820496, 0.7926666736602783, 0.79666668176651, 0.793666660785675, 0.7926666736602783, 0.7946666479110718, 0.7960000038146973, 0.7926666736602783]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1], [5, 4, 0, 0, 2, 3, 9, 9, 5], [3, 0, 0, 3, 1, 0], [82, 57, 3, 91], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [82, 71, 50, 41, 34]], "fitness": -0.6131428480148315, "mapping_values": [1, 11, 11, 9, 2, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.6008741183287873, 2.3107900816955587, 2.2012547722204157, 2.036193488752995, 2.105038292860516, 1.9403332753377331, 1.4527680745387452, 1.405063528615281, 1.8670932790464996, 1.3162960135595059, 1.6270741628791205, 2.168074592575972, 2.318643246312986], "accuracy": [0.21199312806129456, 0.18584071099758148, 0.1974640041589737, 0.34684982895851135, 0.24858011305332184, 0.3361510932445526, 0.5008585453033447, 0.5308413505554199, 0.3891163766384125, 0.5584467053413391, 0.4679698944091797, 0.2534671723842621, 0.09549596905708313], "val_loss": [1.6844917706080846, 1.9748661177498954, 1.9304728507995605, 1.4561711720057897, 1.684795652117048, 1.4025529793330602, 1.0894827842712402, 0.8951646600450788, 1.116166285106114, 1.0531532423836845, 1.5525076389312744, 1.9857759475708008, 1.9753565107073103], "val_accuracy": [0.21566666662693024, 0.10633333027362823, 0.2290000021457672, 0.4410000145435333, 0.4256666600704193, 0.47999998927116394, 0.5806666612625122, 0.6176666617393494, 0.5400000214576721, 0.606333315372467, 0.35866665840148926, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 0, 0, 3, 4, 0, 5, 0, 1, 6, 5, 6, 5, 9, 6, 7, 6, 9, 2, 3, 4, 3, 5, 8], [3, 0, 0, 3, 2, 0, 2, 0, 2, 2, 2, 0], [8, 57, 18, 50, 46, 82, 88, 74], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.26085713505744934, "mapping_values": [1, 7, 7, 5, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.6037955120365304, 3.1124388821105193, 2.308241233692162, 2.3043504755463284, 2.303028735848718, 2.301872884529677], "accuracy": [0.2098798006772995, 0.2001056671142578, 0.09747721254825592, 0.09787346422672272, 0.1002509593963623, 0.11900673806667328], "val_loss": [1.672774382999965, 1.9808300563267298, 1.9754706110273088, 1.974041257585798, 1.9731781142098563, 1.9706403187343053], "val_accuracy": [0.25866666436195374, 0.09833333641290665, 0.09833333641290665, 0.09966666996479034, 0.09733333438634872, 0.1616666615009308]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1], [8, 1, 4, 0, 2, 1, 2, 9, 5, 0], [3, 0, 0, 3, 1, 0], [8, 57, 91], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 5, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.26085713505744934, "mapping_values": [1, 6, 6, 3, 3, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.6037955120365304, 3.1124388821105193, 2.308241233692162, 2.3043504755463284, 2.303028735848718, 2.301872884529677], "accuracy": [0.2098798006772995, 0.2001056671142578, 0.09747721254825592, 0.09787346422672272, 0.1002509593963623, 0.11900673806667328], "val_loss": [1.672774382999965, 1.9808300563267298, 1.9754706110273088, 1.974041257585798, 1.9731781142098563, 1.9706403187343053], "val_accuracy": [0.25866666436195374, 0.09833333641290665, 0.09833333641290665, 0.09966666996479034, 0.09733333438634872, 0.1616666615009308]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], [5, 4, 0, 6, 3, 3, 9, 9, 5, 1, 9, 5, 4, 2, 5, 9, 3, 5, 8, 2, 6, 8, 7], [3, 0, 0, 0, 1, 2, 1, 1], [8, 57, 18, 42, 37, 54, 0, 35, 35], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.26085713505744934, "mapping_values": [1, 12, 12, 9, 3, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.6037955120365304, 3.1124388821105193, 2.308241233692162, 2.3043504755463284, 2.303028735848718, 2.301872884529677], "accuracy": [0.2098798006772995, 0.2001056671142578, 0.09747721254825592, 0.09787346422672272, 0.1002509593963623, 0.11900673806667328], "val_loss": [1.672774382999965, 1.9808300563267298, 1.9754706110273088, 1.974041257585798, 1.9731781142098563, 1.9706403187343053], "val_accuracy": [0.25866666436195374, 0.09833333641290665, 0.09833333641290665, 0.09966666996479034, 0.09733333438634872, 0.1616666615009308]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1], [2, 6, 9, 0, 2, 3, 2, 4, 3, 6, 4, 6, 6, 4, 6, 8, 8, 7, 8, 5, 6, 1, 2, 0, 9], [3, 1, 0, 3, 1, 0, 0, 0, 0, 1, 3, 2, 0, 3, 3, 1], [8, 57, 18, 17, 11, 47, 19, 64], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 4, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 41, 41, 25, 16, 8, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), grad)))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.negative(tf.math.add(alpha, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))), grad)), tf.math.add(alpha, grad)))))), tf.math.add(alpha, alpha)))))))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09549596905708313, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1], [5, 1, 4, 0, 0, 1, 2, 9, 5, 0], [3, 2, 0, 3, 1, 0], [8, 57, 18, 13], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 8, 4, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.math.pow(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), grad)))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.080042265355587, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1], [2, 6, 9, 0, 0, 3, 4], [3, 0, 0, 2, 1, 0], [8, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [4, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 7, 4, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), sigma), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0], [5, 4, 4, 6, 3, 3, 9, 9, 5, 1, 9, 3, 4, 2, 9, 9, 3, 5, 8, 2, 6, 9, 7], [3, 0, 0, 3, 1, 0, 1, 1], [8, 68, 3], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [3, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [1, 1, 0, 1, 3, 2], [37, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 7, 5, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), tf.math.add(alpha, alpha)))))), tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [2, 6, 6, 1, 0, 1, 8, 6, 5, 1, 4], [2, 0, 0, 1, 1, 0, 1, 2, 1], [8, 87, 65], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 8, 0], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 3, 4, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 7, 5, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(sigma), alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 4, 2, 0, 6, 3, 4, 9, 6, 2], [3, 0, 0, 1, 1, 0, 1, 3], [3, 57, 18, 61], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 3, 0, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 18, 10, 8, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, alpha))), tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09536388516426086, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1], [2, 6, 6, 1, 0, 1], [3, 0, 0, 1, 1, 0], [8, 57, 18, 17, 11, 47], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [5, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [1, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 9, 2, 0, 9], [3, 1, 0, 1, 3, 2], [1, 15, 50, 41, 34]], "fitness": -0.09971428662538528, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 2, 0, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.312818742620317, 2.369861995287386, 2.5158588641890605, 2.820395915389549, 3.26165018955856, 3.8582072169190904, 4.654604941405767, 5.651750244815289, 6.727328265646996], "accuracy": [0.0878351628780365, 0.09074098616838455, 0.0952318087220192, 0.09338264167308807, 0.09919429570436478, 0.10553427785634995, 0.1014397069811821, 0.09893012791872025, 0.10394927859306335], "val_loss": [1.981018338884626, 2.0264902796064104, 2.131377696990967, 2.3184255191258023, 2.6074849537440707, 3.010004384177072, 3.528120449611119, 4.1576448168073386, 4.893349375043597], "val_accuracy": [0.08933333307504654, 0.0976666659116745, 0.0989999994635582, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [2, 6, 9, 0, 0, 3, 4], [3, 0, 0, 3, 1, 0], [8, 57, 59], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.04171428456902504, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, alpha))", "other_info": {"loss": [2.3050323053830337, 2.327925529052962, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08902391046285629, 0.07819310575723648, 0.0940430611371994, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.976804528917585, 2.035037245069231, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.025333333760499954, 0.10000000149011612, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], [6, 6, 9, 0, 2, 3, 2, 0, 3, 8, 9], [3, 2, 1, 3, 1, 0], [8, 2, 18, 45], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [1, 0, 1, 0, 0, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [82, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 16, 16, 11, 5, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), grad), tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), alpha), tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), alpha))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3033577158875893, 2.303825657491466, 2.3030601353331046, 2.3025725434532163, 2.301610879768328, 2.302812258895866], "accuracy": [0.09113723784685135, 0.09034473448991776, 0.08809932321310043, 0.08849557489156723, 0.09034473448991776, 0.08730682730674744], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 6, 9, 0, 0, 3, 4, 6, 1, 0, 7, 0, 1, 9], [1, 0, 0, 3, 1, 0], [8, 57, 18, 17, 11, 47], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.3033577158875893, 2.303825657491466, 2.3030601353331046, 2.3025725434532163, 2.301610879768328, 2.302812258895866], "accuracy": [0.09113723784685135, 0.09034473448991776, 0.08809932321310043, 0.08849557489156723, 0.09034473448991776, 0.08730682730674744], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [4, 1, 2, 0, 2, 1, 2, 9, 5, 0], [3, 0, 0, 3, 1, 0, 2], [8, 57, 18, 13], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [0, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [6, 2, 2, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 14, 14, 7, 7, 3, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), tf.math.add(alpha, alpha))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3033577158875893, 2.303825657491466, 2.3030601353331046, 2.3025725434532163, 2.301610879768328, 2.302812258895866], "accuracy": [0.09113723784685135, 0.09034473448991776, 0.08809932321310043, 0.08849557489156723, 0.09034473448991776, 0.08730682730674744], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 6, 9, 0, 2, 3, 2, 0], [2, 0, 0, 3, 1, 0], [8, 57, 18], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [3, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 6, 6, 4, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.3033577158875893, 2.303825657491466, 2.3030601353331046, 2.3025725434532163, 2.301610879768328, 2.302812258895866], "accuracy": [0.09113723784685135, 0.09034473448991776, 0.08809932321310043, 0.08849557489156723, 0.09034473448991776, 0.08730682730674744], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1], [5, 4, 0, 0, 1, 3, 9, 9, 5], [3, 2, 0, 3, 1, 0], [82, 57, 3, 91], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [82, 71, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 11, 11, 9, 2, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.negative(tf.math.add(alpha, grad)), tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.multiply(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))))))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.3033577158875893, 2.303825657491466, 2.3030601353331046, 2.3025725434532163, 2.301610879768328, 2.302812258895866], "accuracy": [0.09113723784685135, 0.09034473448991776, 0.08809932321310043, 0.08849557489156723, 0.09034473448991776, 0.08730682730674744], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]