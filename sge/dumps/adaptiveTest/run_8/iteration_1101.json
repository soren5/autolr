[{"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [6, 74, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [7, 3, 0, 2, 9, 4, 0, 9, 2, 8, 9, 2, 1, 6, 6, 8, 9, 4, 2], [0, 3, 3, 1, 1, 3, 2, 0, 3, 0, 5, 1, 4, 1, 4], [56, 20, 50, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [48, 9, 43, 71, 34]], "fitness": -0.8180000185966492, "mapping_values": [1, 1, 1, 0, 1, 1, 11, 11, 7, 4, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0843214988708496, 1.816627025604248, 1.3718899488449097, 1.041095495223999, 0.8322002291679382, 0.7693672180175781, 0.6950865387916565, 0.6786758303642273, 0.6508914232254028, 0.6152899265289307, 0.5953987240791321, 0.5937783122062683, 0.551308274269104, 0.5315036773681641, 0.5486475229263306, 0.5195494890213013, 0.5182381272315979, 0.5020365715026855, 0.4863022565841675, 0.47129279375076294, 0.48150596022605896, 0.4680749475955963, 0.4402923882007599, 0.43029582500457764, 0.4242032468318939, 0.41638579964637756, 0.4159866273403168, 0.411329448223114, 0.38245758414268494, 0.39041808247566223, 0.3958932161331177, 0.38354554772377014, 0.36910155415534973, 0.40220290422439575, 0.38852107524871826, 0.3536474406719208, 0.3774736821651459, 0.38074639439582825, 0.3413951098918915], "accuracy": [0.2985074520111084, 0.3735305666923523, 0.540219247341156, 0.5982036590576172, 0.6837934255599976, 0.7168141603469849, 0.7333245277404785, 0.7434949278831482, 0.755118191242218, 0.7717606425285339, 0.7758552432060242, 0.7778365015983582, 0.7885351777076721, 0.8026680946350098, 0.7891955971717834, 0.8079513907432556, 0.8100647330284119, 0.8148196935653687, 0.8168009519577026, 0.8241975903511047, 0.8247259259223938, 0.8267071843147278, 0.8329150676727295, 0.8381983637809753, 0.8418967127799988, 0.8465195894241333, 0.8462554216384888, 0.8471800088882446, 0.8564258217811584, 0.8539162874221802, 0.8492933511734009, 0.8593316674232483, 0.8639545440673828, 0.8514066934585571, 0.8553691506385803, 0.8669924736022949, 0.8605204224586487, 0.8585391640663147, 0.8749174475669861], "val_loss": [1.7889823913574219, 1.3224420547485352, 1.1798484325408936, 0.739433765411377, 0.6920551061630249, 0.6679589152336121, 0.7184228301048279, 0.6909949779510498, 0.5577789545059204, 0.5643514394760132, 0.6592859625816345, 0.5269565582275391, 0.5450046062469482, 0.5284876823425293, 0.4705224633216858, 0.6006770730018616, 0.4553816020488739, 0.5101491808891296, 0.46733424067497253, 0.4342140257358551, 0.4419058561325073, 0.4295691251754761, 0.4226154088973999, 0.4753067195415497, 0.4106552004814148, 0.4477318227291107, 0.44553545117378235, 0.39817309379577637, 0.4373822808265686, 0.3987373411655426, 0.40698644518852234, 0.40190795063972473, 0.40832599997520447, 0.3801771104335785, 0.37428584694862366, 0.37491148710250854, 0.39760807156562805, 0.3862735331058502, 0.38949480652809143], "val_accuracy": [0.312666654586792, 0.6000000238418579, 0.5546666383743286, 0.7166666388511658, 0.7403333187103271, 0.7426666617393494, 0.7056666612625122, 0.7260000109672546, 0.7826666831970215, 0.7806666493415833, 0.7366666793823242, 0.7910000085830688, 0.7749999761581421, 0.7856666445732117, 0.8230000138282776, 0.7839999794960022, 0.8216666579246521, 0.8053333163261414, 0.8206666707992554, 0.8360000252723694, 0.8349999785423279, 0.8403333425521851, 0.8389999866485596, 0.8253333568572998, 0.8473333120346069, 0.8306666612625122, 0.8259999752044678, 0.8536666631698608, 0.8339999914169312, 0.8500000238418579, 0.856333315372467, 0.8566666841506958, 0.8463333249092102, 0.8656666874885559, 0.862333357334137, 0.862666666507721, 0.8486666679382324, 0.859000027179718, 0.8586666584014893]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [6, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [7, 3, 0, 2, 9, 4, 3, 9, 2, 8, 9, 2, 1, 6, 6, 8, 9, 4, 2], [4, 0, 3, 1, 1, 3, 2, 0, 3, 0, 5, 1, 4, 1, 4], [56, 20, 50, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [48, 9, 43, 71, 34]], "fitness": -0.8037142753601074, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.084320545196533, 1.8080742359161377, 1.2159574031829834, 0.9871629476547241, 0.8466373085975647, 0.7865164875984192, 0.6806783080101013, 0.7101561427116394, 0.6377368569374084, 0.6203461289405823, 0.6099728345870972, 0.5968617796897888, 0.5541595816612244, 0.5431874990463257, 0.5392450094223022, 0.5298609137535095, 0.5205700993537903, 0.5116022229194641, 0.48556625843048096, 0.48234859108924866, 0.4828186333179474, 0.4594435393810272, 0.4523974061012268, 0.43110108375549316, 0.4257523715496063, 0.4116552770137787, 0.4220925271511078, 0.410793274641037, 0.41150033473968506, 0.3816138505935669, 0.3873603045940399, 0.387734979391098, 0.36762720346450806, 0.39293092489242554, 0.38506409525871277, 0.35897019505500793, 0.36072632670402527, 0.37834808230400085, 0.3442402482032776, 0.3387904167175293, 0.35561054944992065], "accuracy": [0.29863953590393066, 0.37339848279953003, 0.5744287371635437, 0.6419231295585632, 0.6866992712020874, 0.7063795924186707, 0.7403249144554138, 0.7283053994178772, 0.7574957013130188, 0.7672698497772217, 0.7700436115264893, 0.7746664881706238, 0.7876105904579163, 0.7932901978492737, 0.7938185334205627, 0.8025360107421875, 0.8087438941001892, 0.8033285140991211, 0.8195747137069702, 0.8191784620285034, 0.819970965385437, 0.8265751004219055, 0.8281601071357727, 0.8393871188163757, 0.8426892161369324, 0.8467837572097778, 0.843481719493866, 0.8479725122451782, 0.8413683772087097, 0.8556333184242249, 0.8515387773513794, 0.857218325138092, 0.8652753829956055, 0.8552370667457581, 0.852859616279602, 0.8664641380310059, 0.8677849769592285, 0.859199583530426, 0.8705587387084961, 0.8716153502464294, 0.8640866279602051], "val_loss": [1.7889012098312378, 1.149753451347351, 1.0055937767028809, 0.9060448408126831, 0.8008190393447876, 0.6992563605308533, 0.6988853216171265, 0.6787176728248596, 0.546006977558136, 0.5362948775291443, 0.63303542137146, 0.5199247598648071, 0.5357480049133301, 0.5069867968559265, 0.5043299198150635, 0.6011464595794678, 0.470213383436203, 0.49453166127204895, 0.4875580370426178, 0.435612291097641, 0.44619840383529663, 0.4508848488330841, 0.4337018132209778, 0.4592618942260742, 0.4105416238307953, 0.4345671534538269, 0.4318558871746063, 0.40077799558639526, 0.39386898279190063, 0.3901800811290741, 0.4122487008571625, 0.40794095396995544, 0.40095868706703186, 0.3893105983734131, 0.38331034779548645, 0.37553825974464417, 0.403293251991272, 0.3934814929962158, 0.3899049460887909, 0.4113975763320923, 0.3944217264652252], "val_accuracy": [0.312333345413208, 0.6056666374206543, 0.6256666779518127, 0.6610000133514404, 0.7160000205039978, 0.718999981880188, 0.7160000205039978, 0.7183333039283752, 0.7866666913032532, 0.7886666655540466, 0.762666642665863, 0.79666668176651, 0.7826666831970215, 0.8033333420753479, 0.8009999990463257, 0.7820000052452087, 0.8216666579246521, 0.8130000233650208, 0.8096666932106018, 0.831333339214325, 0.8323333263397217, 0.8209999799728394, 0.8316666483879089, 0.8353333473205566, 0.8456666469573975, 0.8386666774749756, 0.8389999866485596, 0.8519999980926514, 0.8496666550636292, 0.8539999723434448, 0.8539999723434448, 0.8533333539962769, 0.8529999852180481, 0.8556666374206543, 0.859000027179718, 0.862333357334137, 0.8483333587646484, 0.8576666712760925, 0.8546666502952576, 0.8473333120346069, 0.859000027179718]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [2, 74, 59, 56, 8, 79, 86, 52, 44], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [9, 3, 0, 2, 9, 4, 3, 9, 2, 8, 9, 2, 1, 6, 6, 8, 9, 4, 2], [1, 0, 3, 1, 1, 3, 2, 0, 3, 0, 5, 1, 4, 1, 4], [56, 20, 50, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [48, 9, 43, 71, 34]], "fitness": -0.797428548336029, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0843122005462646, 1.8092421293258667, 1.283418893814087, 1.007730484008789, 0.8499825596809387, 0.7383676767349243, 0.7244914174079895, 0.6726755499839783, 0.6302107572555542, 0.6060584783554077, 0.5989385843276978, 0.5866169333457947, 0.5537393689155579, 0.5395340919494629, 0.5406394004821777, 0.514525830745697, 0.5125236511230469, 0.49500682950019836, 0.4835052192211151, 0.4780924916267395], "accuracy": [0.29863953590393066, 0.37366265058517456, 0.5540879964828491, 0.6350548267364502, 0.6915863156318665, 0.7246070504188538, 0.7206445932388306, 0.7453441023826599, 0.7627789974212646, 0.7718927264213562, 0.7769119143486023, 0.7778365015983582, 0.7880068421363831, 0.7967243194580078, 0.7975168228149414, 0.8080834746360779, 0.813498854637146, 0.8141592741012573, 0.8191784620285034, 0.8198388814926147], "val_loss": [1.7886512279510498, 1.1870492696762085, 1.0989990234375, 0.9825343489646912, 0.7414847612380981, 0.6864771246910095, 0.6929693222045898, 0.6044442057609558, 0.556153416633606, 0.5664214491844177, 0.6194317936897278, 0.5267782211303711, 0.5561354160308838, 0.5369266867637634, 0.4566124379634857, 0.6042060256004333, 0.46875712275505066, 0.4932882487773895, 0.4744728207588196, 0.4536633789539337], "val_accuracy": [0.312666654586792, 0.5600000023841858, 0.6330000162124634, 0.640333354473114, 0.7319999933242798, 0.7303333282470703, 0.7253333330154419, 0.7590000033378601, 0.7796666622161865, 0.7793333530426025, 0.7590000033378601, 0.7933333516120911, 0.7670000195503235, 0.7913333177566528, 0.8306666612625122, 0.768666684627533, 0.8146666884422302, 0.8119999766349792, 0.8133333325386047, 0.8240000009536743]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [40, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [7, 3, 0, 2, 9, 4, 0, 9, 2, 8, 9, 2, 1, 6, 6, 8, 9, 4, 2], [1, 0, 3, 1, 1, 3, 2, 0, 3, 0, 5, 1, 4, 1, 4], [56, 20, 50, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [48, 9, 43, 71, 34]], "fitness": -0.7971428632736206, "mapping_values": [1, 1, 1, 0, 1, 1, 11, 11, 7, 4, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), alpha)))), tf.math.pow(tf.math.negative(tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.5029354095458984, 2.219285488128662, 2.2740225791931152, 2.013611316680908, 2.1114675998687744, 1.9469915628433228, 1.4221285581588745, 1.1893151998519897, 1.0700106620788574, 0.9485242366790771, 0.9081630706787109, 0.8054802417755127, 0.7751522660255432, 0.7600645422935486, 0.7190850377082825, 0.7319958806037903, 0.6786991357803345, 0.656147837638855, 0.6480790376663208, 0.6228128671646118, 0.6012228727340698, 0.5876867771148682, 0.5855281949043274, 0.5714111924171448, 0.5453864932060242, 0.5419353246688843, 0.5453577041625977, 0.5372266173362732, 0.5294235944747925, 0.5046423673629761, 0.4922662377357483, 0.506757915019989, 0.4943631589412689, 0.4848102331161499], "accuracy": [0.2616563141345978, 0.2133139669895172, 0.14674416184425354, 0.32201823592185974, 0.30101704597473145, 0.35926562547683716, 0.5007264614105225, 0.5672962665557861, 0.5939770340919495, 0.6370360851287842, 0.6524897813796997, 0.6952846646308899, 0.6960771083831787, 0.7141724824905396, 0.7219653725624084, 0.7259278893470764, 0.7396644949913025, 0.7499669790267944, 0.7577598690986633, 0.763439416885376, 0.7692511081695557, 0.7784969210624695, 0.7754589915275574, 0.7824593782424927, 0.7938185334205627, 0.7979130744934082, 0.7972526550292969, 0.7981772422790527, 0.8010830879211426, 0.8162726163864136, 0.8230088353157043, 0.8153480291366577, 0.817989706993103, 0.8138951063156128], "val_loss": [2.224451780319214, 2.2984564304351807, 2.061990737915039, 2.0104331970214844, 2.0915298461914062, 1.4156733751296997, 1.0270490646362305, 0.8817541599273682, 0.8428870439529419, 0.8826329708099365, 0.7549701929092407, 0.7119686603546143, 0.800793468952179, 0.6974571943283081, 0.6277158260345459, 0.7394516468048096, 0.6109077334403992, 0.6088123917579651, 0.5949272513389587, 0.5484293699264526, 0.5805000066757202, 0.5258028507232666, 0.5597684979438782, 0.5179598927497864, 0.5072166919708252, 0.4966689944267273, 0.501337468624115, 0.4889126121997833, 0.481163889169693, 0.4852735698223114, 0.4751040041446686, 0.5055068731307983, 0.4657353460788727, 0.48083364963531494], "val_accuracy": [0.2683333456516266, 0.10100000351667404, 0.3776666522026062, 0.3566666543483734, 0.5326666831970215, 0.5046666860580444, 0.5979999899864197, 0.6610000133514404, 0.6496666669845581, 0.6566666960716248, 0.7006666660308838, 0.7143333554267883, 0.6890000104904175, 0.7260000109672546, 0.7543333172798157, 0.7263333201408386, 0.7553333044052124, 0.7603333592414856, 0.7613333463668823, 0.7913333177566528, 0.768666684627533, 0.8023333549499512, 0.7733333110809326, 0.79666668176651, 0.8109999895095825, 0.8173333406448364, 0.8163333535194397, 0.8090000152587891, 0.8213333487510681, 0.8209999799728394, 0.8159999847412109, 0.7976666688919067, 0.8203333616256714, 0.8176666498184204]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [40, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [7, 3, 0, 2, 9, 4, 3, 9, 2, 8, 9, 2, 1, 6, 6, 8, 9, 4, 2], [1, 0, 3, 1, 1, 3, 2, 0, 3, 0, 5, 1, 4, 1, 4], [56, 20, 50, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [48, 9, 43, 71, 34]], "fitness": -0.7917143106460571, "mapping_values": [1, 1, 1, 0, 1, 1, 14, 14, 9, 5, 3, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), alpha)))), tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.5029125213623047, 2.2233715057373047, 2.274080514907837, 1.9771974086761475, 2.1207544803619385, 1.5580589771270752, 1.448320746421814, 1.0197620391845703, 0.8369972705841064, 0.7278794646263123, 0.6973962783813477, 0.6761347651481628, 0.6409842371940613, 0.6364701986312866, 0.6006986498832703, 0.5797470808029175, 0.5702638030052185, 0.5624568462371826, 0.5437119603157043, 0.5471829175949097, 0.5178987979888916, 0.516146183013916, 0.5280223488807678, 0.497737318277359, 0.4881373643875122, 0.4845085144042969, 0.47158101201057434], "accuracy": [0.2616563141345978, 0.21265354752540588, 0.14832915365695953, 0.32281073927879333, 0.28384625911712646, 0.44406285881996155, 0.4880464971065521, 0.63096022605896, 0.6848500967025757, 0.717870831489563, 0.7341170310974121, 0.7411174178123474, 0.7465327978134155, 0.761590301990509, 0.7675340175628662, 0.7758552432060242, 0.7799497842788696, 0.7893276810646057, 0.7909126877784729, 0.7882710099220276, 0.8020076751708984, 0.806630551815033, 0.7969884872436523, 0.8098005652427673, 0.8140271902084351, 0.8119139075279236, 0.8148196935653687], "val_loss": [2.224307060241699, 2.2985494136810303, 2.059629440307617, 2.14998459815979, 1.4587278366088867, 1.7810195684432983, 1.0502572059631348, 0.765696108341217, 0.6752070188522339, 0.6595831513404846, 0.6111533045768738, 0.6307919025421143, 0.6060698628425598, 0.5630127191543579, 0.5655327439308167, 0.5847008228302002, 0.5226542353630066, 0.5094653964042664, 0.5845800638198853, 0.4778258502483368, 0.5364840626716614, 0.47453606128692627, 0.5059369206428528, 0.4637956917285919, 0.5025938153266907, 0.48180484771728516, 0.470409631729126], "val_accuracy": [0.2683333456516266, 0.10100000351667404, 0.37400001287460327, 0.17933332920074463, 0.43833333253860474, 0.38333332538604736, 0.6413333415985107, 0.7136666774749756, 0.7323333621025085, 0.7486666440963745, 0.7636666893959045, 0.7383333444595337, 0.7536666393280029, 0.777999997138977, 0.7766666412353516, 0.7603333592414856, 0.7866666913032532, 0.79666668176651, 0.7730000019073486, 0.8203333616256714, 0.7986666560173035, 0.8273333311080933, 0.8019999861717224, 0.8203333616256714, 0.7983333468437195, 0.8059999942779541, 0.8143333196640015]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [6, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [4, 3, 0, 2, 9, 4, 3, 9, 2, 8, 9, 2, 1, 6, 6, 8, 9, 4, 2], [1, 0, 3, 3, 1, 0, 2, 0, 3, 0, 5, 1, 4, 1, 4], [88, 33, 78, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [28, 9, 43, 71, 34]], "fitness": -0.772857129573822, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 7, 5, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha))), tf.math.add(beta, tf.math.add(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.291942834854126, 2.263615846633911, 2.235980987548828, 2.195136308670044, 2.1431918144226074, 2.0679967403411865, 1.9739375114440918, 1.8610436916351318, 1.7313587665557861, 1.5959962606430054, 1.470342755317688, 1.3771754503250122, 1.3013204336166382, 1.2432242631912231, 1.1863287687301636, 1.1497734785079956, 1.1050059795379639, 1.0709971189498901, 1.0409647226333618, 1.0109165906906128, 0.991459310054779, 0.965336799621582, 0.9462633728981018, 0.9387264251708984, 0.9233648180961609, 0.9045883417129517, 0.8942985534667969, 0.8794615864753723, 0.874093234539032, 0.867260754108429, 0.8528634905815125, 0.8502134084701538, 0.8280505537986755, 0.8301404118537903, 0.822907030582428, 0.8050194382667542, 0.8069407939910889, 0.8039438724517822, 0.7876272797584534, 0.7859019041061401, 0.7820870280265808, 0.7849745154380798, 0.772764265537262, 0.7663888335227966, 0.7592078447341919, 0.74935382604599, 0.7469135522842407, 0.7394341826438904, 0.7392645478248596, 0.7390516996383667, 0.7398764491081238, 0.7394856214523315, 0.7311466336250305, 0.7210133671760559, 0.7250902652740479, 0.7242943644523621, 0.7172001600265503, 0.713955819606781, 0.7062718868255615, 0.7104997634887695, 0.7010059952735901, 0.7011138200759888, 0.6944876313209534, 0.696540355682373, 0.7002484202384949, 0.6848129630088806, 0.6885259747505188, 0.6940034031867981, 0.6808642148971558, 0.6918821930885315, 0.6819709539413452, 0.676446259021759, 0.6795268058776855, 0.662611722946167, 0.6663307547569275, 0.6711868047714233, 0.6686475872993469, 0.6627209782600403, 0.6618006825447083, 0.6609443426132202, 0.6594181656837463, 0.6599609851837158, 0.6558153033256531, 0.6501885652542114, 0.6527132391929626, 0.6561949849128723, 0.6435467004776001, 0.6467629075050354], "accuracy": [0.11570466309785843, 0.1872936189174652, 0.24805177748203278, 0.3078853487968445, 0.3490952253341675, 0.3955884277820587, 0.4060229957103729, 0.43745872378349304, 0.459780752658844, 0.4987452030181885, 0.5264826416969299, 0.5453705191612244, 0.5563333630561829, 0.5654470920562744, 0.5951657891273499, 0.5954299569129944, 0.611940324306488, 0.6238277554512024, 0.6338660717010498, 0.6425835490226746, 0.6483951807022095, 0.6604147553443909, 0.666358470916748, 0.6641130447387695, 0.6700568199157715, 0.6806234121322632, 0.6785101294517517, 0.6892088055610657, 0.6868313550949097, 0.6934354901313782, 0.6909258961677551, 0.6931713223457336, 0.6951525807380676, 0.6997754573822021, 0.7018887996673584, 0.71100252866745, 0.7084929347038269, 0.7073041796684265, 0.7136441469192505, 0.7136441469192505, 0.7190595865249634, 0.7239466309547424, 0.7194558382034302, 0.722757875919342, 0.7234182953834534, 0.7264562249183655, 0.7285695672035217, 0.7318716049194336, 0.7257958054542542, 0.7284374833106995, 0.7347774505615234, 0.7329282760620117, 0.7372870445251465, 0.7337207794189453, 0.7368907928466797, 0.7401928305625916, 0.7401928305625916, 0.7401928305625916, 0.7464007139205933, 0.737022876739502, 0.7466648817062378, 0.7466648817062378, 0.7470611333847046, 0.7454761862754822, 0.744419515132904, 0.7494386434555054, 0.7464007139205933, 0.7489103078842163, 0.7514199018478394, 0.748249888420105, 0.7531369924545288, 0.7526086568832397, 0.7556465268135071, 0.7580240368843079, 0.7592127919197083, 0.7631752490997314, 0.757099449634552, 0.7593448758125305, 0.7607977986335754, 0.7589486241340637, 0.763439416885376, 0.7576277852058411, 0.7578919529914856, 0.7621186375617981, 0.7623828053474426, 0.7609298825263977, 0.7692511081695557, 0.7638356685638428], "val_loss": [2.271395444869995, 2.240963935852051, 2.2032806873321533, 2.152247667312622, 2.0832254886627197, 1.9874900579452515, 1.865741491317749, 1.722154974937439, 1.568422794342041, 1.4203397035598755, 1.290569543838501, 1.1873506307601929, 1.1066529750823975, 1.0456352233886719, 0.9910743832588196, 0.9521368741989136, 0.9165471792221069, 0.8876543045043945, 0.8629171252250671, 0.8404369950294495, 0.8210651874542236, 0.8039200305938721, 0.7880809903144836, 0.7758252024650574, 0.7642102241516113, 0.7521344423294067, 0.7430056929588318, 0.733539879322052, 0.7256847620010376, 0.7206217646598816, 0.7099319696426392, 0.7028364539146423, 0.6960403919219971, 0.6914340257644653, 0.6860172748565674, 0.6785832643508911, 0.6731062531471252, 0.6677245497703552, 0.6644309759140015, 0.6590940952301025, 0.6540009379386902, 0.6527265906333923, 0.6480789184570312, 0.6448281407356262, 0.642405092716217, 0.6373473405838013, 0.6332722902297974, 0.6289364695549011, 0.6253757476806641, 0.6241016387939453, 0.6204800605773926, 0.619026243686676, 0.6150217056274414, 0.6139430999755859, 0.6106357574462891, 0.6093938946723938, 0.6064574122428894, 0.6045287251472473, 0.6017797589302063, 0.5965335369110107, 0.5959696173667908, 0.5944908261299133, 0.5923944711685181, 0.5908149480819702, 0.5889089107513428, 0.5871028900146484, 0.5860636234283447, 0.582049548625946, 0.5804300904273987, 0.5784397125244141, 0.5750657320022583, 0.5753849148750305, 0.5727121829986572, 0.5731931328773499, 0.56864333152771, 0.5691413283348083, 0.5678187012672424, 0.5667562484741211, 0.5647284388542175, 0.5638351440429688, 0.5605870485305786, 0.5587858557701111, 0.5585300922393799, 0.5565477013587952, 0.5547546148300171, 0.5545437932014465, 0.555881679058075, 0.5502898693084717], "val_accuracy": [0.2549999952316284, 0.375, 0.42933332920074463, 0.4569999873638153, 0.4963333308696747, 0.5263333320617676, 0.5556666851043701, 0.57833331823349, 0.5996666550636292, 0.6119999885559082, 0.6430000066757202, 0.6620000004768372, 0.6693333387374878, 0.6773333549499512, 0.6859999895095825, 0.6913333535194397, 0.6959999799728394, 0.7053333520889282, 0.7110000252723694, 0.7116666436195374, 0.7183333039283752, 0.722000002861023, 0.7210000157356262, 0.7260000109672546, 0.7273333072662354, 0.7273333072662354, 0.7366666793823242, 0.7396666407585144, 0.7416666746139526, 0.7426666617393494, 0.7476666569709778, 0.7473333477973938, 0.7463333606719971, 0.7516666650772095, 0.7509999871253967, 0.7516666650772095, 0.7596666812896729, 0.7559999823570251, 0.7609999775886536, 0.7596666812896729, 0.7630000114440918, 0.7693333625793457, 0.7630000114440918, 0.7680000066757202, 0.7663333415985107, 0.7676666378974915, 0.7706666588783264, 0.7733333110809326, 0.7713333368301392, 0.7749999761581421, 0.7720000147819519, 0.7760000228881836, 0.7770000100135803, 0.7763333320617676, 0.7793333530426025, 0.7756666541099548, 0.7793333530426025, 0.7776666879653931, 0.7806666493415833, 0.7846666574478149, 0.784333348274231, 0.7856666445732117, 0.7833333611488342, 0.7836666703224182, 0.7883333563804626, 0.7829999923706055, 0.7829999923706055, 0.793666660785675, 0.7876666784286499, 0.7913333177566528, 0.7963333129882812, 0.7913333177566528, 0.79666668176651, 0.7896666526794434, 0.7943333387374878, 0.7923333048820496, 0.7940000295639038, 0.796999990940094, 0.7946666479110718, 0.7956666946411133, 0.800000011920929, 0.8006666898727417, 0.8053333163261414, 0.8013333082199097, 0.8029999732971191, 0.8043333292007446, 0.7976666688919067, 0.8050000071525574]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [6, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [6, 5, 2, 5, 3, 8, 0, 6, 2, 2, 1, 4, 1, 6, 6, 4, 4, 4, 2, 3, 1, 4, 7, 0, 4, 5, 4, 7, 7, 8, 7, 7, 2, 1, 7, 4, 8, 7, 8, 5, 0, 3, 7, 9, 5, 6, 7, 9, 3, 7, 0, 2, 2, 8, 8, 3], [1, 0, 3, 1, 1, 3, 1, 0, 3, 0, 5, 1, 4, 3, 3, 1, 0, 1, 1, 1, 5, 5, 0, 5, 3, 5, 4, 3, 5, 4, 3, 1, 4, 2, 5, 4, 0, 2], [56, 32, 50, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [30, 9, 43, 71, 34]], "fitness": -0.765999972820282, "mapping_values": [1, 4, 4, 2, 2, 1, 94, 94, 56, 38, 8, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 85, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.sqrt(tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.pow(alpha, tf.math.add(beta, alpha))))), tf.math.subtract(grad, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.pow(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.pow(grad, alpha), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, grad))))), grad)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(tf.math.pow(alpha, tf.math.sqrt(alpha)), grad)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(beta, tf.math.square(tf.math.negative(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))))))))))))), grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(grad, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))), grad)))), grad))), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))))))), tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, grad))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.add(beta, alpha))))))), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))), tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, grad)))), tf.math.add(beta, grad)))))))))))))), tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2866973876953125, 2.243359327316284, 2.1892662048339844, 2.096987724304199, 1.963281273841858, 1.7751333713531494, 1.589821696281433, 1.4343351125717163, 1.3148666620254517, 1.213980793952942, 1.1290323734283447, 1.08165442943573, 1.0407826900482178, 1.0101969242095947, 0.9741261601448059, 0.9549883604049683, 0.9239041209220886, 0.9054445028305054, 0.8848861455917358, 0.8663073182106018, 0.8522517681121826, 0.8348622918128967, 0.82273930311203, 0.8203189373016357, 0.8109342455863953, 0.7987823486328125, 0.790900707244873, 0.7794492244720459, 0.7785327434539795, 0.7733815312385559, 0.7628392577171326, 0.7610726356506348, 0.7416546940803528, 0.7440328598022461, 0.740071713924408, 0.7219533920288086, 0.7280052900314331, 0.7267298698425293, 0.7114393711090088, 0.7103050351142883, 0.7062377333641052, 0.711471676826477, 0.6995435953140259, 0.6935096979141235, 0.6889230012893677, 0.6813395619392395, 0.6778599619865417], "accuracy": [0.13115836679935455, 0.23616431653499603, 0.30841368436813354, 0.37445515394210815, 0.41685378551483154, 0.4690265357494354, 0.4908202290534973, 0.5229163765907288, 0.5535596609115601, 0.5840708017349243, 0.6019020080566406, 0.6260731816291809, 0.6350548267364502, 0.6407343745231628, 0.6568484902381897, 0.6629242897033691, 0.672698438167572, 0.6734909415245056, 0.6828688383102417, 0.6900013089179993, 0.693831741809845, 0.7036058902740479, 0.7037379741668701, 0.7042662501335144, 0.7088891863822937, 0.71100252866745, 0.7124554514884949, 0.7214370369911194, 0.7154933214187622, 0.7251353859901428, 0.7207766771316528, 0.7234182953834534, 0.7265883088111877, 0.7269845604896545, 0.7293620109558105, 0.7372870445251465, 0.7358341217041016, 0.7345132827758789, 0.7341170310974121, 0.737947404384613, 0.7441553473472595, 0.7467969655990601, 0.748249888420105, 0.7450799345970154, 0.7467969655990601, 0.7503632307052612, 0.7512878179550171], "val_loss": [2.2572920322418213, 2.2051656246185303, 2.125636339187622, 1.9978652000427246, 1.8130738735198975, 1.584959626197815, 1.3701796531677246, 1.2050786018371582, 1.0896610021591187, 1.0025551319122314, 0.9397663474082947, 0.8950748443603516, 0.8560603857040405, 0.8361613154411316, 0.8019325137138367, 0.7846140265464783, 0.7634472846984863, 0.7479926943778992, 0.7347710728645325, 0.7221697568893433, 0.7097967267036438, 0.6992784738540649, 0.6894357204437256, 0.6815706491470337, 0.6759598851203918, 0.6662206053733826, 0.659808337688446, 0.654142439365387, 0.652554452419281, 0.6500946283340454, 0.6383641958236694, 0.6320624947547913, 0.627136766910553, 0.6272603869438171, 0.620154857635498, 0.6134344339370728, 0.6099013090133667, 0.60589998960495, 0.6059392094612122, 0.6000992655754089, 0.5955394506454468, 0.5961633324623108, 0.5916786193847656, 0.5905025005340576, 0.5891536474227905, 0.5840240120887756, 0.5819666981697083], "val_accuracy": [0.3310000002384186, 0.42766666412353516, 0.4749999940395355, 0.5213333368301392, 0.5616666674613953, 0.5913333296775818, 0.625333309173584, 0.668666660785675, 0.6773333549499512, 0.6859999895095825, 0.6896666884422302, 0.6970000267028809, 0.7120000123977661, 0.7066666483879089, 0.7226666808128357, 0.7269999980926514, 0.7319999933242798, 0.734333336353302, 0.7353333234786987, 0.7403333187103271, 0.7443333268165588, 0.7463333606719971, 0.753000020980835, 0.753000020980835, 0.7590000033378601, 0.7540000081062317, 0.7599999904632568, 0.7613333463668823, 0.7609999775886536, 0.7570000290870667, 0.7739999890327454, 0.7703333497047424, 0.7689999938011169, 0.7726666927337646, 0.7730000019073486, 0.781333327293396, 0.7799999713897705, 0.7833333611488342, 0.7853333353996277, 0.7850000262260437, 0.7879999876022339, 0.7903333306312561, 0.7903333306312561, 0.7870000004768372, 0.7879999876022339, 0.7873333096504211, 0.7856666445732117]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [40, 74, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [7, 3, 0, 2, 9, 4, 3, 9, 2, 8, 9, 2, 1, 6, 6, 8, 9, 4, 2], [1, 0, 3, 1, 1, 3, 2, 0, 3, 0, 5, 1, 4, 1, 4], [56, 20, 50, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [30, 9, 43, 71, 34]], "fitness": -0.7657142877578735, "mapping_values": [1, 1, 1, 0, 1, 1, 15, 15, 11, 4, 4, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), alpha))), tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(alpha)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2866973876953125, 2.243359327316284, 2.189262628555298, 2.096982717514038, 1.9632911682128906, 1.7751567363739014, 1.5898241996765137, 1.4343050718307495, 1.314814805984497, 1.2138761281967163, 1.1289602518081665, 1.0815846920013428, 1.040666937828064, 1.01010262966156, 0.9740597605705261, 0.9549351334571838, 0.9238482117652893, 0.9053884148597717, 0.8848252892494202, 0.8662148118019104, 0.8522135615348816, 0.8348650932312012, 0.8227497339248657, 0.8203175663948059, 0.8108360171318054, 0.79873126745224, 0.7909205555915833, 0.7793170213699341, 0.7783809304237366, 0.7732632756233215, 0.7627949714660645, 0.7609341740608215, 0.7415355443954468, 0.7437839508056641, 0.7399114370346069, 0.7219599485397339, 0.7280402183532715, 0.7266839146614075, 0.7113248705863953, 0.7102000713348389, 0.7062491178512573, 0.7115026116371155, 0.6994910836219788, 0.6934517025947571, 0.6888653039932251, 0.681380033493042, 0.6777466535568237], "accuracy": [0.13115836679935455, 0.23616431653499603, 0.3085457682609558, 0.3745872378349304, 0.4167217016220093, 0.4687623679637909, 0.4912164807319641, 0.5229163765907288, 0.5534275770187378, 0.583938717842102, 0.6021661758422852, 0.6256769299507141, 0.6350548267364502, 0.6407343745231628, 0.6568484902381897, 0.6626601219177246, 0.6728305220603943, 0.6733588576316833, 0.6826046705245972, 0.6901333928108215, 0.6936996579170227, 0.7037379741668701, 0.7037379741668701, 0.7043983340263367, 0.7086250185966492, 0.7113987803459167, 0.7121912837028503, 0.720380425453186, 0.7160216569900513, 0.7251353859901428, 0.7210407853126526, 0.724210798740387, 0.7263241410255432, 0.7273808121681213, 0.7289658188819885, 0.7364945411682129, 0.7353057861328125, 0.7343811988830566, 0.7342491149902344, 0.7388719916343689, 0.7448157668113708, 0.7461365461349487, 0.7467969655990601, 0.7457403540611267, 0.7469290494918823, 0.7499669790267944, 0.7504953145980835], "val_loss": [2.2572920322418213, 2.2051656246185303, 2.1256301403045654, 1.9978668689727783, 1.8131098747253418, 1.5850087404251099, 1.370151162147522, 1.205024003982544, 1.0895943641662598, 1.00246000289917, 0.9396883249282837, 0.8950538635253906, 0.8560543060302734, 0.8361085653305054, 0.8019242286682129, 0.7846568822860718, 0.7632999420166016, 0.7478823065757751, 0.734616219997406, 0.722098171710968, 0.7097659707069397, 0.6992626786231995, 0.6893283724784851, 0.6815186142921448, 0.6759281158447266, 0.6662324070930481, 0.6598726511001587, 0.654253363609314, 0.6524717807769775, 0.6499783396720886, 0.6381646990776062, 0.6319261789321899, 0.6270588636398315, 0.6270497441291809, 0.6201233863830566, 0.6134498119354248, 0.6100136041641235, 0.6058821082115173, 0.6059166789054871, 0.6000736355781555, 0.5957024097442627, 0.5960986614227295, 0.5917931199073792, 0.5904728174209595, 0.5891775488853455, 0.583949863910675, 0.5818155407905579], "val_accuracy": [0.3310000002384186, 0.42766666412353516, 0.47466665506362915, 0.5206666588783264, 0.5616666674613953, 0.5920000076293945, 0.625, 0.668666660785675, 0.6769999861717224, 0.6863333582878113, 0.6899999976158142, 0.6970000267028809, 0.7120000123977661, 0.7066666483879089, 0.7229999899864197, 0.7269999980926514, 0.7329999804496765, 0.734666645526886, 0.7350000143051147, 0.7403333187103271, 0.7443333268165588, 0.746666669845581, 0.7536666393280029, 0.753333330154419, 0.7596666812896729, 0.7543333172798157, 0.7606666684150696, 0.762333333492279, 0.7606666684150696, 0.7580000162124634, 0.7730000019073486, 0.7706666588783264, 0.768666684627533, 0.7723333239555359, 0.7739999890327454, 0.7806666493415833, 0.7799999713897705, 0.7823333144187927, 0.7853333353996277, 0.784333348274231, 0.7883333563804626, 0.7903333306312561, 0.7900000214576721, 0.7870000004768372, 0.7873333096504211, 0.7870000004768372, 0.7853333353996277]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [40, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [5, 3, 0, 2, 9, 4, 3, 9, 8, 4, 1, 2, 1, 6, 6, 8, 9, 4, 2], [1, 0, 3, 1, 1, 3, 2, 0, 3, 0, 5, 1, 4, 1, 4], [56, 32, 50, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [2, 1, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [48, 9, 43, 71, 34]], "fitness": -0.7197142839431763, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 3, 2, 1, 1, 0, 5, 3, 2, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.multiply(beta, alpha)))", "other_info": {"loss": [2.302769184112549, 2.300447940826416, 2.3022234439849854, 2.3003733158111572, 2.297492027282715, 2.296854257583618, 2.2944841384887695, 2.29379940032959, 2.292612314224243, 2.288940191268921, 2.2857351303100586, 2.285957098007202, 2.282789945602417, 2.2819936275482178, 2.279324769973755, 2.2789063453674316, 2.2776737213134766, 2.2751779556274414, 2.2735636234283447, 2.2712697982788086, 2.269557237625122, 2.266340970993042, 2.2635557651519775, 2.260958433151245, 2.2572426795959473, 2.254840612411499, 2.2497947216033936, 2.244946002960205, 2.241729736328125, 2.235713481903076, 2.2301619052886963, 2.2230303287506104, 2.2165544033050537, 2.207247018814087, 2.1998631954193115, 2.1850533485412598, 2.171687126159668, 2.1549675464630127, 2.1367220878601074, 2.1140031814575195, 2.0779452323913574, 2.0354955196380615, 1.9910805225372314, 1.9262980222702026, 1.8536864519119263, 1.7563079595565796, 1.6591999530792236, 1.5597412586212158, 1.4708127975463867, 1.3772251605987549, 1.3102868795394897, 1.2616608142852783, 1.186455488204956, 1.1336804628372192, 1.090521216392517, 1.0676867961883545, 1.0378612279891968, 0.9950607419013977, 0.9921830892562866, 0.9601526856422424, 0.9245325326919556, 0.9218664765357971, 0.9237285256385803, 0.907096803188324, 0.9015677571296692, 0.8715597987174988, 0.9000325798988342, 0.8944638967514038, 0.8791012167930603, 0.886665403842926], "accuracy": [0.08836349099874496, 0.09734513610601425, 0.09245806187391281, 0.09509972482919693, 0.10553427785634995, 0.10593052208423615, 0.11319508403539658, 0.1154404953122139, 0.11398758739233017, 0.12812046706676483, 0.13868708908557892, 0.13115836679935455, 0.1406683325767517, 0.1394795924425125, 0.15572579205036163, 0.15612204372882843, 0.15532954037189484, 0.1608770340681076, 0.16338661313056946, 0.16616034507751465, 0.16417910158634186, 0.17553824186325073, 0.17963281273841858, 0.1846519559621811, 0.18901069462299347, 0.19521859288215637, 0.19997358322143555, 0.2098798006772995, 0.21120063960552216, 0.2215031087398529, 0.22255976498126984, 0.23061682283878326, 0.22942808270454407, 0.2378813922405243, 0.2436930388212204, 0.25214633345603943, 0.2677321434020996, 0.2661471366882324, 0.2748646140098572, 0.2798837721347809, 0.30365869402885437, 0.31845200061798096, 0.3209615647792816, 0.349359393119812, 0.3747193217277527, 0.39783385396003723, 0.42147669196128845, 0.44644036889076233, 0.4567428231239319, 0.4935939908027649, 0.5077268481254578, 0.5340113639831543, 0.5591071248054504, 0.5806366205215454, 0.5970149040222168, 0.6029586791992188, 0.6172236204147339, 0.6264694333076477, 0.6308281421661377, 0.6436402201652527, 0.6613393425941467, 0.6584334969520569, 0.6609430909156799, 0.661471426486969, 0.6707172393798828, 0.6773213744163513, 0.672170102596283, 0.6649055480957031, 0.6732267737388611, 0.6745476126670837], "val_loss": [2.2996718883514404, 2.2988169193267822, 2.2974650859832764, 2.295850992202759, 2.294032335281372, 2.2920725345611572, 2.290079116821289, 2.2881722450256348, 2.286123514175415, 2.284118890762329, 2.2821872234344482, 2.2803642749786377, 2.2785394191741943, 2.2766129970550537, 2.274700403213501, 2.272770404815674, 2.270735263824463, 2.268583297729492, 2.2663180828094482, 2.263904571533203, 2.261310338973999, 2.2583515644073486, 2.2551119327545166, 2.251563549041748, 2.2477126121520996, 2.243544816970825, 2.238887071609497, 2.233675241470337, 2.2280490398406982, 2.2214407920837402, 2.214057683944702, 2.205493211746216, 2.19547438621521, 2.183845281600952, 2.170539617538452, 2.1544876098632812, 2.1356213092803955, 2.1128172874450684, 2.08516526222229, 2.050875425338745, 2.0068471431732178, 1.9501789808273315, 1.8781930208206177, 1.7863082885742188, 1.6731412410736084, 1.5403307676315308, 1.400651216506958, 1.272505283355713, 1.16913640499115, 1.0828266143798828, 1.012030839920044, 0.9679438471794128, 0.9189504981040955, 0.8804690837860107, 0.8524767160415649, 0.8364768028259277, 0.8103405237197876, 0.7845805883407593, 0.7647934556007385, 0.7514111399650574, 0.7411503791809082, 0.7918168902397156, 0.7413544654846191, 0.8121997117996216, 0.698824942111969, 0.7468980550765991, 0.7409229278564453, 0.7243540287017822, 0.7845550775527954, 0.7162916660308838], "val_accuracy": [0.03999999910593033, 0.04500000178813934, 0.05066666752099991, 0.05900000035762787, 0.0729999989271164, 0.08866667002439499, 0.10366666316986084, 0.11966666579246521, 0.13866665959358215, 0.1483333259820938, 0.1616666615009308, 0.1706666648387909, 0.18033333122730255, 0.18966667354106903, 0.2029999941587448, 0.21066667139530182, 0.2213333398103714, 0.23266667127609253, 0.24899999797344208, 0.2639999985694885, 0.27666667103767395, 0.2916666567325592, 0.3089999854564667, 0.32600000500679016, 0.3400000035762787, 0.34966665506362915, 0.3566666543483734, 0.36666667461395264, 0.3763333261013031, 0.38466668128967285, 0.39100000262260437, 0.3880000114440918, 0.3933333456516266, 0.39633333683013916, 0.4000000059604645, 0.4073333442211151, 0.41366666555404663, 0.4266666769981384, 0.4426666796207428, 0.4586666524410248, 0.4690000116825104, 0.49133333563804626, 0.5083333253860474, 0.531000018119812, 0.5493333339691162, 0.5640000104904175, 0.5806666612625122, 0.5896666646003723, 0.6306666731834412, 0.6460000276565552, 0.6616666913032532, 0.6570000052452087, 0.6833333373069763, 0.6916666626930237, 0.7039999961853027, 0.7013333439826965, 0.7089999914169312, 0.7149999737739563, 0.7256666421890259, 0.7266666889190674, 0.7253333330154419, 0.6893333196640015, 0.7139999866485596, 0.6953333616256714, 0.7429999709129333, 0.7160000205039978, 0.7020000219345093, 0.7123333215713501, 0.6940000057220459, 0.7133333086967468]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [6, 74, 59, 56, 8, 79, 86, 52, 44], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [5, 3, 0, 2, 9, 4, 3, 9, 8, 4, 1, 2, 1, 6, 6, 8, 9, 4, 2], [1, 3, 3, 3, 1, 0, 2, 0, 3, 0, 5, 1, 4, 1, 4], [56, 32, 50, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [4, 3], [], [1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [2, 3, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [82, 9, 43, 71, 34]], "fitness": -0.24285714328289032, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.596022844314575, 2.4154086112976074, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.16919825971126556, 0.1784440577030182, 0.11530841141939163, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.335003614425659, 3.99654483795166, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.4153333306312561, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [40, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [6, 5, 2, 5, 3, 8, 0, 1, 2, 4, 1, 4, 1, 6, 6, 4, 9, 4, 2], [3, 3, 3, 3, 1, 0, 2, 0, 3, 0, 5, 1, 4, 1, 4], [68, 33, 78, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [48, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 11, 6, 5, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.multiply(sigma, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.add(sigma, beta), tf.math.square(beta)))", "other_info": {"loss": [2.302870273590088, 2.3011841773986816, 2.305196523666382, 2.3080618381500244, 2.313565969467163, 2.3276474475860596, 2.4695827960968018, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08836349099874496, 0.0952318087220192, 0.08545766770839691, 0.08321225643157959, 0.07660810649394989, 0.08241976052522659, 0.09153348207473755, 0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.300079822540283, 2.30051589012146, 2.303110122680664, 2.307554244995117, 2.3154125213623047, 2.3341503143310547, 1726.9560546875, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03733333200216293, 0.03433333337306976, 0.0273333340883255, 0.04800000041723251, 0.0989999994635582, 0.0976666659116745, 0.0976666659116745, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [41, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [8, 3, 0, 2, 9, 4, 3, 9, 2, 8, 9, 2, 1, 6, 6, 8, 9, 4, 2], [2, 3, 3, 1, 1, 3, 3, 0, 3, 0, 5, 1, 4, 1, 4], [56, 20, 50, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6, 8, 9], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [48, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 11, 11, 8, 3, 2, 1, 1, 0, 1, 0, 28, 18, 10, 5], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta))))), tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.multiply(tf.math.multiply(sigma, tf.math.add(tf.math.square(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), sigma)), tf.math.multiply(beta, tf.math.subtract(tf.math.pow(beta, tf.math.multiply(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), alpha))), tf.math.add(tf.math.sqrt(alpha), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))))))), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [99, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [8, 5, 0, 5, 3, 6, 0, 0, 2, 2, 1, 4, 1, 6, 6, 4, 4, 4, 2, 3, 1, 4], [1, 0, 3, 1, 1, 3, 1, 0, 3, 0, 5, 1, 4, 3, 3, 1, 0], [56, 20, 50, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [48, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 11, 11, 8, 3, 1, 1, 0, 0, 0, 0, 11, 6, 5, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.divide_no_nan(tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad)))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(sigma, beta), tf.math.square(beta)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [6, 74, 59, 56, 8, 79, 86, 52, 44], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [9, 3, 0, 2, 9, 4, 3, 9, 2, 8, 9, 2, 1, 6, 6, 8, 9, 4, 2], [1, 0, 3, 1, 1, 3, 1, 0, 3, 0, 5, 1, 4, 3, 3, 1, 0], [56, 20, 50, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 6, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [30, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.divide_no_nan(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.302708387374878, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [6, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [6, 5, 2, 5, 3, 8, 0, 1, 2, 4, 1, 4, 1, 6, 6, 4, 9, 4, 2], [1, 0, 3, 1, 1, 3, 2, 0, 3, 0, 5, 1, 4, 1, 4], [68, 33, 78, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [0, 3], [83], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 9, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [48, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [1223719040.0, 23407456256.0, 110250541056.0, 307652689920.0, 660054736896.0, 1192432762880.0], "accuracy": [0.10091137140989304, 0.10210011899471283, 0.09959053993225098, 0.10368511080741882, 0.0948355570435524, 0.10474177449941635], "val_loss": [5470869504.0, 43754016768.0, 147655475200.0, 349980229632.0, 683530715136.0, 1181117841408.0], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [6, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [9, 3, 0, 2, 9, 4, 3, 9, 2, 8, 9, 2, 1, 6, 6, 8, 9, 4, 2], [5, 1, 3, 1, 1, 1, 2, 0, 3, 0, 5, 1, 4, 1, 4], [68, 44, 78, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [2, 3], [], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 8, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [48, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302708387374878, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [40, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [7, 3, 3, 2, 9, 2, 9, 9, 2, 8, 9, 2, 1, 6, 6, 8, 9, 4, 2], [1, 3, 3, 1, 1, 3, 2, 0, 3, 0, 5, 1, 4, 1, 4], [56, 20, 50, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [48, 9, 43, 71, 34]], "fitness": -0.04114285856485367, "mapping_values": [1, 1, 1, 0, 1, 1, 14, 14, 10, 4, 3, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha))), tf.math.add(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))))), alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3028664588928223, 2.301053524017334, 2.3038489818573, 2.3033390045166016, 2.3020544052124023, 2.3032193183898926], "accuracy": [0.08836349099874496, 0.09628847241401672, 0.08730682730674744, 0.0882314071059227, 0.09285431355237961, 0.08889182657003403], "val_loss": [2.300058603286743, 2.300058603286743, 2.300058603286743, 2.300058603286743, 2.300058603286743, 2.300058603286743], "val_accuracy": [0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [32, 74, 59, 56, 8, 79, 86, 52, 44], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [9, 3, 0, 2, 9, 4, 3, 9, 2, 8, 9, 2, 1, 6, 6, 8, 9, 4, 2], [1, 0, 3, 1, 1, 3, 1, 0, 3, 0, 5, 1, 4, 3, 3, 1, 0], [26, 20, 50, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [48, 9, 43, 71, 34]], "fitness": -0.04114285856485367, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 1, 0, 1, 3, 2, 1, 1, 0, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3028664588928223, 2.301053524017334, 2.3038489818573, 2.3033390045166016, 2.3020544052124023, 2.3032193183898926], "accuracy": [0.08836349099874496, 0.09628847241401672, 0.08730682730674744, 0.0882314071059227, 0.09285431355237961, 0.08889182657003403], "val_loss": [2.300058603286743, 2.300058603286743, 2.300058603286743, 2.300058603286743, 2.300058603286743, 2.300058603286743], "val_accuracy": [0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [6, 74, 59, 56, 8, 79, 86, 52, 44], [1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [9, 3, 0, 2, 9, 4, 3, 9, 2, 8, 9, 2, 1, 6, 6, 8, 9, 4, 2], [2, 3, 3, 3, 1, 0, 2, 0, 3, 0, 5, 1, 4, 1, 4], [68, 33, 78, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [73, 9, 43, 71, 34]], "fitness": -0.04114285856485367, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3028664588928223, 2.301053524017334, 2.3038489818573, 2.3033390045166016, 2.3020544052124023, 2.3032193183898926], "accuracy": [0.08836349099874496, 0.09628847241401672, 0.08730682730674744, 0.0882314071059227, 0.09285431355237961, 0.08889182657003403], "val_loss": [2.300058603286743, 2.300058603286743, 2.300058603286743, 2.300058603286743, 2.300058603286743, 2.300058603286743], "val_accuracy": [0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 6, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 3, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [6, 74, 59, 56, 8, 79, 86, 52, 44], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [9, 3, 0, 2, 9, 4, 3, 9, 2, 8, 9, 2, 1, 6, 6, 8, 9, 4, 2], [3, 3, 3, 1, 1, 3, 3, 0, 3, 0, 5, 1, 4, 1, 4], [68, 33, 78, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [48, 9, 43, 71, 34]], "fitness": -0.04114285856485367, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3028664588928223, 2.301053524017334, 2.3038489818573, 2.3033390045166016, 2.3020544052124023, 2.3032193183898926], "accuracy": [0.08836349099874496, 0.09628847241401672, 0.08730682730674744, 0.0882314071059227, 0.09285431355237961, 0.08889182657003403], "val_loss": [2.300058603286743, 2.300058603286743, 2.300058603286743, 2.300058603286743, 2.300058603286743, 2.300058603286743], "val_accuracy": [0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293]}}]