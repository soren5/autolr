[{"genotype": [[0], [1, 0, 0, 1, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0], [7, 6, 4, 9], [0, 1, 2], [44, 57], [0, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6], [3], [1, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 0, 1, 1], [0, 3], [3, 0], [45]], "fitness": -0.7942857146263123, "mapping_values": [1, 7, 7, 4, 3, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.039169312184749, 1.5137323566699277, 1.105137402119181, 0.9044521565702471, 0.8081463338471895, 0.7696537289243442, 0.7428976654329351, 0.7007725230140016, 0.6885001909353352, 0.6867508584434928, 0.649749813220284, 0.6267293904514487, 0.6357866997464363, 0.5954706760650109, 0.5871948231291604, 0.5632597463730226, 0.5750379400514042, 0.5473193530755477, 0.5419184672613626, 0.527395091697981, 0.512036924687485], "accuracy": [0.3214899003505707, 0.5011227130889893, 0.5939770340919495, 0.6642451286315918, 0.694360077381134, 0.7096816897392273, 0.7193237543106079, 0.7337207794189453, 0.7374191284179688, 0.7450799345970154, 0.7491744756698608, 0.7576277852058411, 0.7597411274909973, 0.7777044177055359, 0.7778365015983582, 0.7839123010635376, 0.7795535326004028, 0.7959318161010742, 0.7952714562416077, 0.800290584564209, 0.806630551815033], "val_loss": [1.7037717274257116, 0.9938654218401227, 0.6816950014659336, 0.6194587094443185, 0.6128920997892108, 0.5854809624808175, 0.5383796351296561, 0.5645367418016706, 0.5098093748092651, 0.5403352294649396, 0.5069863455636161, 0.48757963521139963, 0.4590936984334673, 0.45389669282095774, 0.44519902978624615, 0.4314929246902466, 0.4670767102922712, 0.4641755904470171, 0.45969721249171663, 0.43233679022107807, 0.4132063559123448], "val_accuracy": [0.40400001406669617, 0.6163333058357239, 0.7003333568572998, 0.7229999899864197, 0.7176666855812073, 0.7269999980926514, 0.7583333253860474, 0.7323333621025085, 0.7746666669845581, 0.7570000290870667, 0.768666684627533, 0.7879999876022339, 0.7990000247955322, 0.8186666369438171, 0.8116666674613953, 0.8206666707992554, 0.7873333096504211, 0.7943333387374878, 0.7886666655540466, 0.8109999895095825, 0.8183333277702332]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [2, 1, 6, 5, 4, 9, 2, 0, 6, 9, 3, 0, 2, 4, 2], [1, 2, 0, 0, 0, 0, 0, 2, 1, 1], [44, 78, 81, 73], [0, 0, 0, 0, 0], [0, 1, 0, 1, 0], [4, 9, 7], [4, 5], [64, 19], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [20], [0, 1], [0], [3], [45]], "fitness": -0.28628572821617126, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.424573943284619, 2.2002288291262535, 2.2914321532480595, 2.2578252111018497, 3.6103015883471814, 2.2943710359710163, 2.2270236047755585], "accuracy": [0.21159687638282776, 0.21054022014141083, 0.15810328722000122, 0.14449875056743622, 0.13380002975463867, 0.1142517477273941, 0.1644432693719864], "val_loss": [1.9614192417689733, 1.6814330305371965, 1.975738525390625, 1.950310366494315, 1.9811125482831682, 1.904892921447754, 1.9148437636239188], "val_accuracy": [0.10233332961797714, 0.23933333158493042, 0.10400000214576721, 0.2370000034570694, 0.09733333438634872, 0.20033332705497742, 0.2290000021457672]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [2, 1, 3, 9], [0, 2, 0, 0, 0, 0, 0, 2, 1, 1], [11], [1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1], [4, 6, 6, 0, 4, 3, 1, 9, 2, 0, 1, 3, 0, 8, 7, 8, 9, 6, 6, 5, 2, 6, 2, 0, 3, 0, 5], [3, 3, 3, 1, 5, 5, 1, 2, 3, 0, 4, 5, 3, 4], [65, 19, 0, 98, 89], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 1], [0, 3], [2], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 38, 38, 24, 14, 3, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, grad), grad), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(grad)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, alpha))))))), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(beta)), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))))))))), tf.math.add(beta, grad))))))))), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1], [1, 1, 0, 1, 0, 1, 1], [2, 1, 3, 9], [1, 1, 3, 0, 0], [11], [0, 1, 1, 1, 1, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0], [6, 6, 9, 3], [5, 1, 3, 1], [1, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [1, 1], [0, 3], [0, 0], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3024188029594455, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0], [7, 1, 5, 9], [0, 1, 2, 0, 0], [44, 57], [0, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6], [2], [1, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [2], [], [0, 0, 1, 1], [0, 3], [1, 1], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 4, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, alpha))", "other_info": {"loss": [12024139.092527907, 264610495.52661473, 1326585397.3572843, 3816118329.1443667, 8155218593.153876, 15069998660.911373], "accuracy": [0.09272222965955734, 0.10236428678035736, 0.09774138033390045, 0.09536388516426086, 0.10513802617788315, 0.09945846349000931], "val_loss": [49675341.71428572, 441490002.28571427, 1543777536.0, 3724240018.285714, 7350686573.714286, 12791094418.285715], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 1], [0, 1, 0, 1, 0, 0, 1], [2, 2, 7, 9], [1, 1, 3, 0, 0], [44, 57], [0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 1], [4, 9, 1, 7], [5, 4, 0, 2], [1, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [2], [], [0, 1, 1, 1], [0, 3], [3, 0], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [1246758006.1885276, 23442114256.762913, 111306067897.12746, 312489236492.7138, 658812348957.2822, 1206957955383.3523], "accuracy": [0.09285431355237961, 0.1022322028875351, 0.09774138033390045, 0.0956280529499054, 0.10513802617788315, 0.09945846349000931], "val_loss": [4728052150.857142, 37813087670.85714, 127606540580.57143, 302466241097.1429, 590720120539.4286, 1020743310189.7142], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [2, 1, 6, 5, 4, 9, 2, 0, 6, 9, 3, 0, 2, 4, 2], [1, 2, 0, 0, 0, 0, 0, 2, 1, 1], [44, 78, 81, 73], [1, 0, 1, 0, 0], [0, 0, 1, 1, 1], [5, 1, 0], [3, 2], [64, 19], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 0, 0, 1], [0, 4, 9], [3], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [1246758006.1885276, 23442114256.762913, 111306067897.12746, 312489236492.7138, 658812348957.2822, 1206957955383.3523], "accuracy": [0.09285431355237961, 0.1022322028875351, 0.09774138033390045, 0.0956280529499054, 0.10513802617788315, 0.09945846349000931], "val_loss": [4728052150.857142, 37813087670.85714, 127606540580.57143, 302466241097.1429, 590720120539.4286, 1020743310189.7142], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 0, 1, 0], [7, 3, 5, 9], [1, 2, 0, 0, 0, 0, 0, 2, 1, 1], [22, 78, 81, 73], [0, 1, 1, 0, 1], [1, 0, 0, 1, 1], [5, 1, 0], [3, 5], [1, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [1, 0, 1, 1], [0, 5], [3], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), tf.math.multiply(grad, tf.math.square(tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07224937528371811, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0], [7, 3, 5, 9], [1, 1, 2, 0, 0], [44, 57], [0, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6], [3], [1, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [2], [], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 3, 3, 9, 2, 1, 2, 1, 0], [2, 0, 2, 1, 0, 2], [45, 15, 99]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 4, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 15, 9, 6, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.multiply(tf.math.square(alpha), tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(beta, alpha), tf.math.subtract(tf.math.negative(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)), beta)))))", "other_info": {"loss": [2.4078139582676674, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.2883370816707611, 0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [261.54152134486606, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0], [1, 0, 0, 1, 1, 1, 0], [7, 6, 4, 9], [3, 0, 3, 0, 1, 0, 0, 2, 1, 1], [44, 78, 81, 73], [0, 0, 1], [0, 1, 0, 1, 1], [5, 9, 8], [1], [64, 19], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [1], [], [1, 1], [0], [0], [14]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302395845999445, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0], [7, 6, 4, 9], [1, 1, 2, 0, 0], [44, 57], [0, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6], [3], [1, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [2], [], [0, 0, 1, 1], [0, 3], [3, 0], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06366398185491562, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [2, 1, 6, 5, 4, 9, 2, 0, 6, 9, 3, 0, 2, 4, 2], [3, 2, 0, 0, 0, 0, 0, 2, 1, 1], [44, 78, 81, 73], [0, 0, 1, 0, 1], [0, 1, 0, 1, 0], [5, 1, 0], [3, 5], [64, 19], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [1, 0], [0, 3], [3], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07224937528371811, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [2, 5, 4, 2, 7, 4, 0, 5], [3, 1, 1, 1, 3, 1], [44, 57], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0], [5, 6, 6, 2, 6, 5, 3, 1, 5, 7, 6, 9, 9], [3, 5, 2, 0, 5, 3, 3, 0], [1, 70, 22, 11], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 1, 1], [3, 3], [3, 0], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 8, 6, 0, 20, 20, 13, 7, 3, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, tf.math.square(tf.math.pow(alpha, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.math.pow(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(grad))))))), alpha)))))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.add(beta, grad)), tf.math.add(tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, tf.math.subtract(tf.math.square(tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)))))), tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06366398185491562, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0], [7, 6, 4, 9], [1, 0, 2], [90], [1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1], [4, 6, 6, 3, 6, 7, 3, 1], [0, 3, 2, 2, 2, 3, 5, 3, 3], [53, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [0], [29], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 7, 4, 4, 8, 6, 9, 7, 9, 8], [3, 0, 1, 2], [45, 32, 1, 73, 49, 90]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 17, 17, 8, 9, 1, 1, 1, 0, 1, 1, 14, 10, 4, 3], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), grad), tf.math.add(beta, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.multiply(beta, tf.math.add(beta, beta)), beta)), tf.math.add(beta, grad)), tf.math.add(beta, grad)))), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(sigma, tf.math.pow(tf.math.pow(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.divide_no_nan(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), tf.math.sqrt(beta))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 1], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [2, 1, 6, 5, 4, 9, 2, 0, 6, 9, 3, 0, 2, 4, 2], [1, 1, 2, 0, 0], [44, 57], [0, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6], [3, 5], [1, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 3, 0, 7, 1, 3, 2, 5, 7, 8, 2], [3, 2, 2, 3, 3, 3, 2, 1], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 19, 11, 8, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.negative(tf.math.add(tf.math.subtract(beta, tf.math.multiply(beta, tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, beta))))))), alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0], [0, 1, 0, 1, 0, 1, 0], [7, 6, 7, 9], [0, 1, 2], [11, 99], [0, 1, 1, 0, 1, 0, 0, 0], [1, 0, 0, 1, 1], [4, 6, 6], [3], [1, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 0, 0, 1, 0, 1], [5, 0, 6, 8], [3, 0], [45]], "fitness": -0.07800000160932541, "mapping_values": [1, 7, 7, 4, 3, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.negative(tf.math.divide_no_nan(sigma, tf.math.sqrt(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.3017655208740315, 2.2987310882289225, 2.3000221460282195, 2.300140540707837, 2.300756207389161, 2.3004115818828845, 2.300821679190496, 2.3004871318211504], "accuracy": [0.10011887550354004, 0.09893012791872025, 0.10011887550354004, 0.09615638852119446, 0.09140139818191528, 0.09602430462837219, 0.09100515395402908, 0.09747721254825592], "val_loss": [1.9688358988080705, 1.9690871238708496, 1.9691481590270996, 1.97007840020316, 1.970667498452323, 1.97128997530256, 1.9715839794703893, 1.9717867033822196], "val_accuracy": [0.06300000101327896, 0.07066666334867477, 0.07633333653211594, 0.07366666942834854, 0.07366666942834854, 0.070333331823349, 0.06499999761581421, 0.057999998331069946]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0], [1, 1, 0, 1, 1], [2, 1, 6, 5, 4, 9, 2, 0, 6, 9, 3, 0, 2, 4, 2], [3, 3, 1], [11], [0, 1, 1, 0, 0], [1, 1, 0, 1, 0], [4, 9, 7], [4, 1], [64, 19], [1, 0, 0, 1, 0], [0, 0, 1], [3, 3], [5], [20], [1, 1], [0], [3], [45]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3029266089622165, 2.300628515487145, 2.3030640967470735, 2.303290490760244, 2.3028979760906747, 2.3018403052968783], "accuracy": [0.09245806187391281, 0.09457138925790787, 0.09034473448991776, 0.09060890227556229, 0.09126931428909302, 0.09338264167308807], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 7, 3, 1, 3, 6, 6, 7, 3, 0, 1, 5], [1, 1, 3, 0, 0, 1, 3, 3, 2, 2, 1], [11, 49], [1, 1, 1, 0, 1, 0, 0, 0], [1, 0, 0, 1, 1], [4, 6, 6, 0], [3, 1, 3, 1], [1, 70], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3], [7], [], [0, 1], [0, 3], [3, 0], [45]], "fitness": -0.03999999910593033, "mapping_values": [1, 23, 23, 12, 11, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.multiply(tf.math.add(alpha, grad), tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.subtract(grad, grad))))), grad))))), tf.math.add(alpha, tf.math.square(alpha))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3029266089622165, 2.300628515487145, 2.3030640967470735, 2.303290490760244, 2.3028979760906747, 2.3018403052968783], "accuracy": [0.09245806187391281, 0.09457138925790787, 0.09034473448991776, 0.09060890227556229, 0.09126931428909302, 0.09338264167308807], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [2, 5, 4, 2, 7, 4, 0, 5], [3, 2, 0, 0, 0, 0, 0, 2, 1, 1], [44, 78, 81, 73], [1, 0, 1, 0, 0], [1, 0, 0, 0, 1], [5, 1, 8], [3, 5], [64, 19], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 1], [0], [3], [45]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3029266089622165, 2.300628515487145, 2.3030640967470735, 2.303290490760244, 2.3028979760906747, 2.3018403052968783], "accuracy": [0.09245806187391281, 0.09457138925790787, 0.09034473448991776, 0.09060890227556229, 0.09126931428909302, 0.09338264167308807], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0], [2, 1, 3, 9], [0, 1, 0], [44, 57], [0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [4, 6, 6, 5, 8, 6, 1], [3, 1, 3, 1, 1, 1], [53, 70], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 1, 1], [3, 2, 2, 6, 3, 8, 4, 4, 8, 7, 7, 1, 8, 7, 1, 7, 7, 0, 9], [2, 0, 1, 3, 0, 3, 0, 1, 2, 0, 1, 2, 1, 0], [45, 32, 1, 73, 49, 90]], "fitness": -0.03999999910593033, "mapping_values": [1, 5, 5, 2, 3, 2, 13, 13, 7, 6, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, alpha)), tf.math.square(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.subtract(alpha, tf.math.add(beta, alpha))))))), alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3029266089622165, 2.300628515487145, 2.3030640967470735, 2.303290490760244, 2.3028979760906747, 2.3018403052968783], "accuracy": [0.09245806187391281, 0.09457138925790787, 0.09034473448991776, 0.09060890227556229, 0.09126931428909302, 0.09338264167308807], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]