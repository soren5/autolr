[{"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 0, 6, 2, 6, 1, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 3, 0, 0, 3, 1, 3, 0, 0], [32, 33, 2, 9, 74, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [2, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 8, 6, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [44, 25, 61, 71, 34]], "fitness": -0.8191428780555725, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 8, 6, 4, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.subtract(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.sqrt(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.2812157369418906, 2.24150942209894, 1.8203181249275655, 1.3188950982406833, 1.1070445385339505, 0.8628577675801762, 0.8629676385436627, 0.7460870393404887, 0.7218782150151786, 0.6800171486642682, 0.6414561292923925, 0.6330524840138891, 0.6453779985592617, 0.6021249218781264, 0.6105841825572397, 0.5673779728091105, 0.5492598432528423, 0.5351680602616071, 0.5582310636565355, 0.5185389121635919, 0.5360410588528612, 0.5116785636053361, 0.5277156825976334, 0.5069579780731597, 0.49120708599759444, 0.4965523794389845], "accuracy": [0.23774930834770203, 0.26878878474235535, 0.3773609697818756, 0.5431250929832458, 0.6041474342346191, 0.6816800832748413, 0.6923788189888, 0.7182670831680298, 0.7296261787414551, 0.7346453666687012, 0.7563069462776184, 0.7672698497772217, 0.7602694630622864, 0.7713643908500671, 0.7709681391716003, 0.7865539789199829, 0.7951393723487854, 0.800818920135498, 0.7895918488502502, 0.8058380484580994, 0.7967243194580078, 0.8152159452438354, 0.8034605979919434, 0.8101968169212341, 0.8182538747787476, 0.817461371421814], "val_loss": [1.9481878280639648, 1.624506643840245, 1.1421773774283273, 1.3219366754804338, 0.6615244661058698, 0.630576457296099, 0.6237386635371617, 0.5115600313459124, 0.5506254945482526, 0.5205067225864956, 0.5189697912761143, 0.5040272303989956, 0.44553121498652865, 0.5105781214577811, 0.4448010836328779, 0.45610759939466206, 0.4400103432791574, 0.44546089853559223, 0.4435884271349226, 0.4334926094327654, 0.39910885265895296, 0.4103924546922956, 0.429536657673972, 0.41441129786627634, 0.4494672843388149, 0.4168115428515843], "val_accuracy": [0.17499999701976776, 0.4480000138282776, 0.621999979019165, 0.4933333396911621, 0.7273333072662354, 0.7149999737739563, 0.7080000042915344, 0.7713333368301392, 0.7366666793823242, 0.7736666798591614, 0.7609999775886536, 0.7770000100135803, 0.8086666464805603, 0.7786666750907898, 0.7946666479110718, 0.8019999861717224, 0.796999990940094, 0.8109999895095825, 0.8040000200271606, 0.8100000023841858, 0.8320000171661377, 0.8299999833106995, 0.8243333101272583, 0.8306666612625122, 0.7856666445732117, 0.8166666626930237]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 3, 3, 3, 6, 4, 6, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 1, 3, 3, 2, 1, 3, 0, 0], [32, 87, 2, 82, 8, 7], [1, 0, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [3, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 8, 6, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [44, 25, 61, 71, 34]], "fitness": -0.8191428780555725, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.sqrt(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.2812157369418906, 2.24150942209894, 1.8203181249275655, 1.3188950982406833, 1.1070445385339505, 0.8628577675801762, 0.8629676385436627, 0.7460870393404887, 0.7218782150151786, 0.6800171486642682, 0.6414561292923925, 0.6330524840138891, 0.6453779985592617, 0.6021249218781264, 0.6105841825572397, 0.5673779728091105, 0.5492598432528423, 0.5351680602616071, 0.5582310636565355, 0.5185389121635919, 0.5360410588528612, 0.5116785636053361, 0.5277156825976334, 0.5069579780731597, 0.49120708599759444, 0.4965523794389845], "accuracy": [0.23774930834770203, 0.26878878474235535, 0.3773609697818756, 0.5431250929832458, 0.6041474342346191, 0.6816800832748413, 0.6923788189888, 0.7182670831680298, 0.7296261787414551, 0.7346453666687012, 0.7563069462776184, 0.7672698497772217, 0.7602694630622864, 0.7713643908500671, 0.7709681391716003, 0.7865539789199829, 0.7951393723487854, 0.800818920135498, 0.7895918488502502, 0.8058380484580994, 0.7967243194580078, 0.8152159452438354, 0.8034605979919434, 0.8101968169212341, 0.8182538747787476, 0.817461371421814], "val_loss": [1.9481878280639648, 1.624506643840245, 1.1421773774283273, 1.3219366754804338, 0.6615244661058698, 0.630576457296099, 0.6237386635371617, 0.5115600313459124, 0.5506254945482526, 0.5205067225864956, 0.5189697912761143, 0.5040272303989956, 0.44553121498652865, 0.5105781214577811, 0.4448010836328779, 0.45610759939466206, 0.4400103432791574, 0.44546089853559223, 0.4435884271349226, 0.4334926094327654, 0.39910885265895296, 0.4103924546922956, 0.429536657673972, 0.41441129786627634, 0.4494672843388149, 0.4168115428515843], "val_accuracy": [0.17499999701976776, 0.4480000138282776, 0.621999979019165, 0.4933333396911621, 0.7273333072662354, 0.7149999737739563, 0.7080000042915344, 0.7713333368301392, 0.7366666793823242, 0.7736666798591614, 0.7609999775886536, 0.7770000100135803, 0.8086666464805603, 0.7786666750907898, 0.7946666479110718, 0.8019999861717224, 0.796999990940094, 0.8109999895095825, 0.8040000200271606, 0.8100000023841858, 0.8320000171661377, 0.8299999833106995, 0.8243333101272583, 0.8306666612625122, 0.7856666445732117, 0.8166666626930237]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 1, 3, 6, 4, 6, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 3, 4, 1, 2, 1, 3, 0, 0], [32, 87, 2, 82, 8, 7], [1, 0, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [2, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 8, 6, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [44, 25, 61, 71, 34]], "fitness": -0.8191428780555725, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 4, 5, 1, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.add(beta, grad))), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.sqrt(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.2812157369418906, 2.24150942209894, 1.8203181249275655, 1.3188950982406833, 1.1070445385339505, 0.8628577675801762, 0.8629676385436627, 0.7460870393404887, 0.7218782150151786, 0.6800171486642682, 0.6414561292923925, 0.6330524840138891, 0.6453779985592617, 0.6021249218781264, 0.6105841825572397, 0.5673779728091105, 0.5492598432528423, 0.5351680602616071, 0.5582310636565355, 0.5185389121635919, 0.5360410588528612, 0.5116785636053361, 0.5277156825976334, 0.5069579780731597, 0.49120708599759444, 0.4965523794389845], "accuracy": [0.23774930834770203, 0.26878878474235535, 0.3773609697818756, 0.5431250929832458, 0.6041474342346191, 0.6816800832748413, 0.6923788189888, 0.7182670831680298, 0.7296261787414551, 0.7346453666687012, 0.7563069462776184, 0.7672698497772217, 0.7602694630622864, 0.7713643908500671, 0.7709681391716003, 0.7865539789199829, 0.7951393723487854, 0.800818920135498, 0.7895918488502502, 0.8058380484580994, 0.7967243194580078, 0.8152159452438354, 0.8034605979919434, 0.8101968169212341, 0.8182538747787476, 0.817461371421814], "val_loss": [1.9481878280639648, 1.624506643840245, 1.1421773774283273, 1.3219366754804338, 0.6615244661058698, 0.630576457296099, 0.6237386635371617, 0.5115600313459124, 0.5506254945482526, 0.5205067225864956, 0.5189697912761143, 0.5040272303989956, 0.44553121498652865, 0.5105781214577811, 0.4448010836328779, 0.45610759939466206, 0.4400103432791574, 0.44546089853559223, 0.4435884271349226, 0.4334926094327654, 0.39910885265895296, 0.4103924546922956, 0.429536657673972, 0.41441129786627634, 0.4494672843388149, 0.4168115428515843], "val_accuracy": [0.17499999701976776, 0.4480000138282776, 0.621999979019165, 0.4933333396911621, 0.7273333072662354, 0.7149999737739563, 0.7080000042915344, 0.7713333368301392, 0.7366666793823242, 0.7736666798591614, 0.7609999775886536, 0.7770000100135803, 0.8086666464805603, 0.7786666750907898, 0.7946666479110718, 0.8019999861717224, 0.796999990940094, 0.8109999895095825, 0.8040000200271606, 0.8100000023841858, 0.8320000171661377, 0.8299999833106995, 0.8243333101272583, 0.8306666612625122, 0.7856666445732117, 0.8166666626930237]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 9, 6, 0, 3, 1, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 3, 0, 0, 3, 1, 3, 0, 0], [17, 33, 2, 9, 74, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [2, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 8, 6, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [44, 25, 61, 71, 34]], "fitness": -0.8191428780555725, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.sqrt(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.2812157369418906, 2.24150942209894, 1.8203181249275655, 1.3188950982406833, 1.1070445385339505, 0.8628577675801762, 0.8629676385436627, 0.7460870393404887, 0.7218782150151786, 0.6800171486642682, 0.6414561292923925, 0.6330524840138891, 0.6453779985592617, 0.6021249218781264, 0.6105841825572397, 0.5673779728091105, 0.5492598432528423, 0.5351680602616071, 0.5582310636565355, 0.5185389121635919, 0.5360410588528612, 0.5116785636053361, 0.5277156825976334, 0.5069579780731597, 0.49120708599759444, 0.4965523794389845], "accuracy": [0.23774930834770203, 0.26878878474235535, 0.3773609697818756, 0.5431250929832458, 0.6041474342346191, 0.6816800832748413, 0.6923788189888, 0.7182670831680298, 0.7296261787414551, 0.7346453666687012, 0.7563069462776184, 0.7672698497772217, 0.7602694630622864, 0.7713643908500671, 0.7709681391716003, 0.7865539789199829, 0.7951393723487854, 0.800818920135498, 0.7895918488502502, 0.8058380484580994, 0.7967243194580078, 0.8152159452438354, 0.8034605979919434, 0.8101968169212341, 0.8182538747787476, 0.817461371421814], "val_loss": [1.9481878280639648, 1.624506643840245, 1.1421773774283273, 1.3219366754804338, 0.6615244661058698, 0.630576457296099, 0.6237386635371617, 0.5115600313459124, 0.5506254945482526, 0.5205067225864956, 0.5189697912761143, 0.5040272303989956, 0.44553121498652865, 0.5105781214577811, 0.4448010836328779, 0.45610759939466206, 0.4400103432791574, 0.44546089853559223, 0.4435884271349226, 0.4334926094327654, 0.39910885265895296, 0.4103924546922956, 0.429536657673972, 0.41441129786627634, 0.4494672843388149, 0.4168115428515843], "val_accuracy": [0.17499999701976776, 0.4480000138282776, 0.621999979019165, 0.4933333396911621, 0.7273333072662354, 0.7149999737739563, 0.7080000042915344, 0.7713333368301392, 0.7366666793823242, 0.7736666798591614, 0.7609999775886536, 0.7770000100135803, 0.8086666464805603, 0.7786666750907898, 0.7946666479110718, 0.8019999861717224, 0.796999990940094, 0.8109999895095825, 0.8040000200271606, 0.8100000023841858, 0.8320000171661377, 0.8299999833106995, 0.8243333101272583, 0.8306666612625122, 0.7856666445732117, 0.8166666626930237]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 0, 6, 2, 6, 1, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 3, 0, 0, 3, 1, 3, 0, 0], [57, 33, 46, 68, 74, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [2, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 8, 6, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [44, 25, 61, 71, 34]], "fitness": -0.8191428780555725, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.sqrt(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.2812157369418906, 2.24150942209894, 1.8203181249275655, 1.3188950982406833, 1.1070445385339505, 0.8628577675801762, 0.8629676385436627, 0.7460870393404887, 0.7218782150151786, 0.6800171486642682, 0.6414561292923925, 0.6330524840138891, 0.6453779985592617, 0.6021249218781264, 0.6105841825572397, 0.5673779728091105, 0.5492598432528423, 0.5351680602616071, 0.5582310636565355, 0.5185389121635919, 0.5360410588528612, 0.5116785636053361, 0.5277156825976334, 0.5069579780731597, 0.49120708599759444, 0.4965523794389845], "accuracy": [0.23774930834770203, 0.26878878474235535, 0.3773609697818756, 0.5431250929832458, 0.6041474342346191, 0.6816800832748413, 0.6923788189888, 0.7182670831680298, 0.7296261787414551, 0.7346453666687012, 0.7563069462776184, 0.7672698497772217, 0.7602694630622864, 0.7713643908500671, 0.7709681391716003, 0.7865539789199829, 0.7951393723487854, 0.800818920135498, 0.7895918488502502, 0.8058380484580994, 0.7967243194580078, 0.8152159452438354, 0.8034605979919434, 0.8101968169212341, 0.8182538747787476, 0.817461371421814], "val_loss": [1.9481878280639648, 1.624506643840245, 1.1421773774283273, 1.3219366754804338, 0.6615244661058698, 0.630576457296099, 0.6237386635371617, 0.5115600313459124, 0.5506254945482526, 0.5205067225864956, 0.5189697912761143, 0.5040272303989956, 0.44553121498652865, 0.5105781214577811, 0.4448010836328779, 0.45610759939466206, 0.4400103432791574, 0.44546089853559223, 0.4435884271349226, 0.4334926094327654, 0.39910885265895296, 0.4103924546922956, 0.429536657673972, 0.41441129786627634, 0.4494672843388149, 0.4168115428515843], "val_accuracy": [0.17499999701976776, 0.4480000138282776, 0.621999979019165, 0.4933333396911621, 0.7273333072662354, 0.7149999737739563, 0.7080000042915344, 0.7713333368301392, 0.7366666793823242, 0.7736666798591614, 0.7609999775886536, 0.7770000100135803, 0.8086666464805603, 0.7786666750907898, 0.7946666479110718, 0.8019999861717224, 0.796999990940094, 0.8109999895095825, 0.8040000200271606, 0.8100000023841858, 0.8320000171661377, 0.8299999833106995, 0.8243333101272583, 0.8306666612625122, 0.7856666445732117, 0.8166666626930237]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [6, 3, 3, 3, 6, 4, 6, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 1, 3, 3, 2, 3, 3, 0, 0], [57, 33, 46, 30, 74, 78], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [2, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 8, 6, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [44, 25, 61, 71, 34]], "fitness": -0.8191428780555725, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 9, 8, 2, 3, 1, 1, 0, 0, 5, 3, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.divide_no_nan(grad, grad))))), tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.sqrt(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.2812157369418906, 2.24150942209894, 1.8203181249275655, 1.3188950982406833, 1.1070445385339505, 0.8628577675801762, 0.8629676385436627, 0.7460870393404887, 0.7218782150151786, 0.6800171486642682, 0.6414561292923925, 0.6330524840138891, 0.6453779985592617, 0.6021249218781264, 0.6105841825572397, 0.5673779728091105, 0.5492598432528423, 0.5351680602616071, 0.5582310636565355, 0.5185389121635919, 0.5360410588528612, 0.5116785636053361, 0.5277156825976334, 0.5069579780731597, 0.49120708599759444, 0.4965523794389845], "accuracy": [0.23774930834770203, 0.26878878474235535, 0.3773609697818756, 0.5431250929832458, 0.6041474342346191, 0.6816800832748413, 0.6923788189888, 0.7182670831680298, 0.7296261787414551, 0.7346453666687012, 0.7563069462776184, 0.7672698497772217, 0.7602694630622864, 0.7713643908500671, 0.7709681391716003, 0.7865539789199829, 0.7951393723487854, 0.800818920135498, 0.7895918488502502, 0.8058380484580994, 0.7967243194580078, 0.8152159452438354, 0.8034605979919434, 0.8101968169212341, 0.8182538747787476, 0.817461371421814], "val_loss": [1.9481878280639648, 1.624506643840245, 1.1421773774283273, 1.3219366754804338, 0.6615244661058698, 0.630576457296099, 0.6237386635371617, 0.5115600313459124, 0.5506254945482526, 0.5205067225864956, 0.5189697912761143, 0.5040272303989956, 0.44553121498652865, 0.5105781214577811, 0.4448010836328779, 0.45610759939466206, 0.4400103432791574, 0.44546089853559223, 0.4435884271349226, 0.4334926094327654, 0.39910885265895296, 0.4103924546922956, 0.429536657673972, 0.41441129786627634, 0.4494672843388149, 0.4168115428515843], "val_accuracy": [0.17499999701976776, 0.4480000138282776, 0.621999979019165, 0.4933333396911621, 0.7273333072662354, 0.7149999737739563, 0.7080000042915344, 0.7713333368301392, 0.7366666793823242, 0.7736666798591614, 0.7609999775886536, 0.7770000100135803, 0.8086666464805603, 0.7786666750907898, 0.7946666479110718, 0.8019999861717224, 0.796999990940094, 0.8109999895095825, 0.8040000200271606, 0.8100000023841858, 0.8320000171661377, 0.8299999833106995, 0.8243333101272583, 0.8306666612625122, 0.7856666445732117, 0.8166666626930237]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [6, 3, 1, 3, 6, 4, 6, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 3, 0, 3, 0, 1, 3, 0, 0], [57, 33, 46, 22, 74, 78], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [3, 3], [], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 3, 8, 6, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [44, 25, 61, 71, 34]], "fitness": -0.798285722732544, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 9, 8, 4, 3, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(beta, grad), tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), grad)))), tf.math.add(beta, tf.math.pow(tf.math.divide_no_nan(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, grad))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0046735879153372, 1.3315840851849632, 1.0422191478320872, 0.891308669093861, 0.8011263356453172, 0.755592375446572, 0.737258242444434, 0.7186863343981137, 0.6687926824035236, 0.6427699680719487, 0.6288103521255974, 0.6239568775340377, 0.6380679275790824, 0.5959860878440415, 0.5761525650947731, 0.5637347610745337, 0.5647373033820079, 0.5476087834289943, 0.5430867617959438, 0.5236472511855194], "accuracy": [0.322150319814682, 0.5345396995544434, 0.6120724081993103, 0.6696605682373047, 0.696209192276001, 0.7091533541679382, 0.713908314704895, 0.7213049530982971, 0.7425703406333923, 0.7519482374191284, 0.7609298825263977, 0.7627789974212646, 0.754589855670929, 0.770439863204956, 0.7721568942070007, 0.7869502305984497, 0.7829877138137817, 0.793422281742096, 0.7952714562416077, 0.7979130744934082], "val_loss": [1.2116045611245292, 0.8993719305310931, 0.7634439298084804, 0.7177630833217076, 0.573263270514352, 0.6330490282603672, 0.5475336824144635, 0.503206593649728, 0.5141005175454276, 0.512408835547311, 0.4784372363771711, 0.4997842311859131, 0.46311940465654644, 0.47706472873687744, 0.45807625566210064, 0.44367672715868267, 0.45767475025994436, 0.4410525986126491, 0.4250199369021824, 0.4277641347476414], "val_accuracy": [0.518666684627533, 0.5693333148956299, 0.6423333287239075, 0.6656666398048401, 0.7536666393280029, 0.6903333067893982, 0.7303333282470703, 0.7696666717529297, 0.7753333449363708, 0.7696666717529297, 0.7906666398048401, 0.7453333139419556, 0.7889999747276306, 0.7986666560173035, 0.8206666707992554, 0.8183333277702332, 0.7950000166893005, 0.8096666932106018, 0.8176666498184204, 0.8196666836738586]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 2, 3, 1, 6, 3, 9, 6, 9, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 0, 3, 2, 1, 3, 0, 0], [32, 87, 2, 82, 8, 7], [1, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 8, 6, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [44, 25, 61, 71, 34]], "fitness": -0.798285722732544, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 10, 7, 4, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.math.multiply(grad, tf.math.subtract(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))))), tf.math.divide_no_nan(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), grad)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0046735879153372, 1.3315840851849632, 1.0422191478320872, 0.891308669093861, 0.8011263356453172, 0.755592375446572, 0.737258242444434, 0.7186863343981137, 0.6687926824035236, 0.6427699680719487, 0.6288103521255974, 0.6239568775340377, 0.6380679275790824, 0.5959860878440415, 0.5761525650947731, 0.5637347610745337, 0.5647373033820079, 0.5476087834289943, 0.5430867617959438, 0.5236472511855194], "accuracy": [0.322150319814682, 0.5345396995544434, 0.6120724081993103, 0.6696605682373047, 0.696209192276001, 0.7091533541679382, 0.713908314704895, 0.7213049530982971, 0.7425703406333923, 0.7519482374191284, 0.7609298825263977, 0.7627789974212646, 0.754589855670929, 0.770439863204956, 0.7721568942070007, 0.7869502305984497, 0.7829877138137817, 0.793422281742096, 0.7952714562416077, 0.7979130744934082], "val_loss": [1.2116045611245292, 0.8993719305310931, 0.7634439298084804, 0.7177630833217076, 0.573263270514352, 0.6330490282603672, 0.5475336824144635, 0.503206593649728, 0.5141005175454276, 0.512408835547311, 0.4784372363771711, 0.4997842311859131, 0.46311940465654644, 0.47706472873687744, 0.45807625566210064, 0.44367672715868267, 0.45767475025994436, 0.4410525986126491, 0.4250199369021824, 0.4277641347476414], "val_accuracy": [0.518666684627533, 0.5693333148956299, 0.6423333287239075, 0.6656666398048401, 0.7536666393280029, 0.6903333067893982, 0.7303333282470703, 0.7696666717529297, 0.7753333449363708, 0.7696666717529297, 0.7906666398048401, 0.7453333139419556, 0.7889999747276306, 0.7986666560173035, 0.8206666707992554, 0.8183333277702332, 0.7950000166893005, 0.8096666932106018, 0.8176666498184204, 0.8196666836738586]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1], [1, 4, 3, 2, 3, 1, 2, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 3, 1, 3, 0, 0, 3], [32, 5, 2, 9, 74, 78], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [2, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 8, 6, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [14, 25, 50, 71, 34]], "fitness": -0.7714285850524902, "mapping_values": [1, 1, 1, 0, 1, 0, 21, 21, 10, 11, 6, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), grad)), tf.math.add(beta, tf.math.add(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.pow(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, grad)))), tf.math.subtract(tf.math.add(beta, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))))))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.sqrt(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.279410258228784, 2.213137598967335, 2.089626647509352, 1.8710511071003975, 1.5978645824753077, 1.3841384746898924, 1.2263054322446925, 1.1302392513933688, 1.0641152213325495, 1.0045977190044404, 0.9639409805852598, 0.9306237157766357, 0.8993224385722817, 0.8761620604130633, 0.849768534714063, 0.8452781186584374, 0.8315775376883449, 0.8118426148303511, 0.7996775137907353, 0.7849486211602399, 0.7769506196650721, 0.7627070222894797, 0.7517266794832517, 0.7548506000274681, 0.7444279073267533, 0.7236157540301322, 0.7251959678881424, 0.7207376582905003, 0.7110349876911192, 0.7125617208859987, 0.7064059702491307, 0.7044998949403225, 0.6878196602610234, 0.6862109211205711, 0.6814703442527319, 0.6771680754582958, 0.6709270752211604, 0.6669400804912913, 0.6600718899740597], "accuracy": [0.14634791016578674, 0.2876766622066498, 0.38488972187042236, 0.4447232782840729, 0.4934619069099426, 0.5330867767333984, 0.5775987505912781, 0.6045436263084412, 0.6281865239143372, 0.6433760523796082, 0.6600185036659241, 0.6730946898460388, 0.6811517477035522, 0.6872276067733765, 0.6991150379180908, 0.6930392384529114, 0.6959450244903564, 0.7074362635612488, 0.707040011882782, 0.7154933214187622, 0.7194558382034302, 0.7182670831680298, 0.7280412316322327, 0.7285695672035217, 0.7305507659912109, 0.7317395210266113, 0.7346453666687012, 0.7367587089538574, 0.7351737022399902, 0.7382115721702576, 0.7442874312400818, 0.7427024245262146, 0.7433628439903259, 0.7493065595626831, 0.7479857206344604, 0.7486461400985718, 0.7547219395637512, 0.7531369924545288, 0.7581561207771301], "val_loss": [1.9153896740504675, 1.830516951424735, 1.6626994269234794, 1.3936456952776228, 1.1236907073429652, 0.9506261689322335, 0.8392197745186942, 0.7675599881580898, 0.7200237342289516, 0.6852318729673114, 0.6630174432482038, 0.6382403884615216, 0.6252179486410958, 0.6063367128372192, 0.5912598712103707, 0.582806008202689, 0.577318515096392, 0.566351056098938, 0.5590298005512783, 0.5578580754143851, 0.54814612865448, 0.5385252748216901, 0.5388115985052926, 0.5287824017660958, 0.5232842479433332, 0.5219619274139404, 0.5145265204565865, 0.5104567323412214, 0.5067865167345319, 0.5072260924748012, 0.5037729229245868, 0.4988703046526228, 0.49556829248155865, 0.4934936761856079, 0.48906518731798443, 0.48806917667388916, 0.48777455942971365, 0.4830680915287563, 0.48913424355643137], "val_accuracy": [0.3943333327770233, 0.4819999933242798, 0.5320000052452087, 0.574999988079071, 0.640999972820282, 0.6610000133514404, 0.6959999799728394, 0.7023333311080933, 0.7133333086967468, 0.7226666808128357, 0.7326666712760925, 0.7296666502952576, 0.7323333621025085, 0.750333309173584, 0.7546666860580444, 0.7586666941642761, 0.7630000114440918, 0.7676666378974915, 0.7670000195503235, 0.7693333625793457, 0.7739999890327454, 0.7756666541099548, 0.7736666798591614, 0.7816666960716248, 0.7786666750907898, 0.7760000228881836, 0.781000018119812, 0.784333348274231, 0.784333348274231, 0.7803333401679993, 0.7889999747276306, 0.7886666655540466, 0.7963333129882812, 0.800000011920929, 0.7963333129882812, 0.7983333468437195, 0.7946666479110718, 0.7973333597183228, 0.7896666526794434]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [4, 8, 3, 2, 3, 9, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 1, 3, 3, 2, 1, 3, 0, 0], [34, 33, 2, 82, 74, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [2, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 8, 6, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [14, 25, 50, 71, 34]], "fitness": -0.5368571281433105, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.sqrt(tf.math.add(beta, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.301846744708413, 2.3007491618697955, 2.297926810880174, 2.296016571654336, 2.295194610266433, 2.2939818014070075, 2.291903087790805, 2.290163929026912, 2.2887926906280356, 2.287875923010116, 2.285846960180865, 2.2841947254739683, 2.2825314272443586, 2.2808489347288337, 2.2789037181023892, 2.2768706453474774, 2.2765018888011728, 2.2759289578077673, 2.2739073805065204, 2.271809141098343, 2.2701369187520433, 2.2678737558189273, 2.2652534605599888, 2.264485575251843, 2.2618622140893216, 2.2606687839272754, 2.259517461270106, 2.2593453243786175, 2.2570938581583317, 2.2534841976586493, 2.252057980206255, 2.2510516659584594, 2.2487492436950767, 2.2491891132511435, 2.2442112837516714, 2.245500056656392, 2.240920394718088, 2.23882313509029, 2.236344024568517, 2.2357568019700165, 2.232496932198138, 2.2320840693483768, 2.2289156237959844, 2.2255406617771887, 2.223616975756086, 2.2225617865813234, 2.2189141953263882, 2.2170496724143463, 2.214452965069661, 2.213627240125923, 2.2110761561335166, 2.209963635462402, 2.2047706606712136, 2.201600859115121, 2.201196151686036, 2.1983078190238325, 2.1936484798070635, 2.1928971980808747, 2.187906596544412, 2.187198529075307, 2.1815922770754, 2.1810295357916414, 2.1767227182361855, 2.1743357538972248, 2.1702003599614548, 2.165707033008963, 2.1646739078660793, 2.160712342771793, 2.1561717961237905, 2.152498984585632, 2.150976031888761, 2.1463421635923132, 2.1426945211959474, 2.1382683050898574, 2.134745892563894, 2.1304681780095494, 2.125276491012493, 2.1222075497737225, 2.117876716151985, 2.114915257038111, 2.1102581398598255, 2.107242929779575, 2.0999425195069943, 2.095436176965895, 2.0896699554207556, 2.085466786965151, 2.0786608294284323, 2.076684471512546, 2.0705959060960173, 2.065879654465508, 2.0602847768992416, 2.0527254366178744, 2.053038026017126, 2.0457170240442277, 2.0379609959614573, 2.0315748139961975, 2.0276176389402734, 2.0234068365239386, 2.018743312243914, 2.006564236241498], "accuracy": [0.09140139818191528, 0.09919429570436478, 0.10342095047235489, 0.10698718577623367, 0.1072513535618782, 0.10857218503952026, 0.11227050423622131, 0.12138422578573227, 0.1212521493434906, 0.12600713968276978, 0.13234710693359375, 0.1328754425048828, 0.1414608359336853, 0.1410645842552185, 0.15202747285366058, 0.14991414546966553, 0.1608770340681076, 0.15863162279129028, 0.16378284990787506, 0.16840575635433197, 0.17342491447925568, 0.17963281273841858, 0.19099193811416626, 0.19152027368545532, 0.1942940205335617, 0.1978602558374405, 0.19970941543579102, 0.20301149785518646, 0.20459648966789246, 0.2145027071237564, 0.2238806039094925, 0.216880202293396, 0.22533351182937622, 0.2238806039094925, 0.24039097130298615, 0.23154141008853912, 0.24435345828533173, 0.2513538599014282, 0.24316470324993134, 0.2506934404373169, 0.25941091775894165, 0.2662792205810547, 0.2654867172241211, 0.2755250334739685, 0.2775062620639801, 0.2818650007247925, 0.2797516882419586, 0.27961960434913635, 0.29626205563545227, 0.28503501415252686, 0.2957337200641632, 0.2922995686531067, 0.3004887104034424, 0.3066965937614441, 0.3053757846355438, 0.30207371711730957, 0.3070928454399109, 0.3143574297428131, 0.31924447417259216, 0.32518821954727173, 0.3263769745826721, 0.32505613565444946, 0.33126401901245117, 0.3377360999584198, 0.33681151270866394, 0.33324527740478516, 0.33800026774406433, 0.3403777480125427, 0.3483027219772339, 0.3481706380844116, 0.3467177450656891, 0.3516048192977905, 0.3520010709762573, 0.3547748029232025, 0.3591335415840149, 0.3649451732635498, 0.36362436413764954, 0.3726060092449188, 0.3723418414592743, 0.3661339282989502, 0.37168142199516296, 0.3661339282989502, 0.3769647479057312, 0.3803988993167877, 0.3789459764957428, 0.39202219247817993, 0.387399286031723, 0.3819838762283325, 0.39466384053230286, 0.3965130150318146, 0.3910976052284241, 0.4027208983898163, 0.3928146958351135, 0.39849424362182617, 0.40523049235343933, 0.40549466013908386, 0.40787214040756226, 0.4033813178539276, 0.40404173731803894, 0.4150046110153198], "val_loss": [1.9690631457737513, 1.9675439425877161, 1.9660143171037947, 1.964503288269043, 1.9630015236990792, 1.9615066392081124, 1.9600200653076172, 1.9585156440734863, 1.9570256641932897, 1.9555401120867049, 1.9540316036769323, 1.9525271824428014, 1.9510164942060197, 1.949500356401716, 1.947984218597412, 1.9464740753173828, 1.9449473108564104, 1.9434244973318917, 1.9418905121939523, 1.9403389522007533, 1.9387702260698592, 1.9372062683105469, 1.935613019125802, 1.9340180669512068, 1.9323957306998116, 1.9307571138654436, 1.9291082790919714, 1.9274560383387975, 1.9257807050432478, 1.9240876606532507, 1.9223787443978446, 1.920630931854248, 1.918872697012765, 1.917095116206578, 1.915278775351388, 1.9134627069745744, 1.9115892137799944, 1.9096696717398507, 1.9077319417681013, 1.9057681219918388, 1.9037902695792062, 1.901780469076974, 1.8997190339224679, 1.8976271493094308, 1.895514692578997, 1.893362045288086, 1.8911756787981306, 1.888943876538958, 1.8866653442382812, 1.884362016405378, 1.8820313726152693, 1.8796437127249581, 1.8771601404462541, 1.8746327672685896, 1.8721058709280831, 1.8695359911237444, 1.8668902942112513, 1.8642042023794991, 1.8614495822361536, 1.8586584499904089, 1.8557785579136439, 1.852869987487793, 1.84988192149571, 1.846860476902553, 1.8437670980181013, 1.840592520577567, 1.8373588834490096, 1.8340670721871513, 1.83070741380964, 1.8272781372070312, 1.8238212040492467, 1.8202453340802873, 1.8166183062962122, 1.8128888266427177, 1.8091239929199219, 1.8052900178091866, 1.8013676234654017, 1.7973804473876953, 1.7933194296700614, 1.7891796657017298, 1.784956659589495, 1.7807115146092005, 1.7763221604483468, 1.7718400955200195, 1.76728732245309, 1.7626580510820662, 1.757878031049456, 1.7530782563345773, 1.7481749398367745, 1.7431999615260534, 1.738157067980085, 1.732950278690883, 1.7277732576642717, 1.7224557059151786, 1.7170133590698242, 1.7114335809435164, 1.705838680267334, 1.7001641477857317, 1.6944143431527274, 1.6884736674172538], "val_accuracy": [0.04933333396911621, 0.05966666713356972, 0.06833333522081375, 0.07999999821186066, 0.09333333373069763, 0.1106666699051857, 0.12600000202655792, 0.1379999965429306, 0.15266667306423187, 0.1679999977350235, 0.1863333284854889, 0.2006666660308838, 0.21466666460037231, 0.22366666793823242, 0.23666666448116302, 0.24899999797344208, 0.2626666724681854, 0.2759999930858612, 0.289000004529953, 0.29899999499320984, 0.31033334136009216, 0.31833332777023315, 0.32466667890548706, 0.33500000834465027, 0.3449999988079071, 0.3503333330154419, 0.3556666672229767, 0.36033332347869873, 0.36399999260902405, 0.36633333563804626, 0.37033334374427795, 0.3763333261013031, 0.38066667318344116, 0.38333332538604736, 0.3869999945163727, 0.390666663646698, 0.3943333327770233, 0.3973333239555359, 0.4000000059604645, 0.40299999713897705, 0.4050000011920929, 0.4076666533946991, 0.4116666615009308, 0.4156666696071625, 0.41866666078567505, 0.42399999499320984, 0.4273333251476288, 0.4286666810512543, 0.43033334612846375, 0.4323333203792572, 0.43533334136009216, 0.4363333284854889, 0.437666654586792, 0.43933331966400146, 0.4416666626930237, 0.44466665387153625, 0.44866666197776794, 0.4506666660308838, 0.45266667008399963, 0.4543333351612091, 0.4566666781902313, 0.460999995470047, 0.46399998664855957, 0.4673333466053009, 0.4703333377838135, 0.4723333418369293, 0.4740000069141388, 0.4749999940395355, 0.4763333201408386, 0.4793333411216736, 0.4816666543483734, 0.4830000102519989, 0.48500001430511475, 0.4866666793823242, 0.4896666705608368, 0.492333322763443, 0.4946666657924652, 0.4970000088214874, 0.49933332204818726, 0.5016666650772095, 0.5026666522026062, 0.5070000290870667, 0.5090000033378601, 0.5130000114440918, 0.5170000195503235, 0.518666684627533, 0.5206666588783264, 0.5226666927337646, 0.5253333449363708, 0.5270000100135803, 0.5296666622161865, 0.531333327293396, 0.5320000052452087, 0.5339999794960022, 0.5353333353996277, 0.5379999876022339, 0.5396666526794434, 0.5396666526794434, 0.5413333177566528, 0.5423333048820496]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [4, 4, 3, 2, 3, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 3, 0, 0, 3, 3, 3, 0, 0], [32, 33, 2, 9, 74, 78], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [2, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 8, 6, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [80, 25, 50, 71, 34]], "fitness": -0.38028571009635925, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 8, 7, 4, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.pow(tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.subtract(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.pow(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), grad))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.sqrt(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [3.215608704375112, 2.300908110318419, 7.766344045745604, NaN, NaN, NaN, NaN], "accuracy": [0.17131158709526062, 0.1542728841304779, 0.146479994058609, 0.10408136248588562, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9991252762930733, 1.736194269997733, 3298.214425223214, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.23766666650772095, 0.11133333295583725, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 0, 6, 2, 6, 0, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 3, 0, 0, 3, 1, 3, 0, 0], [32, 33, 75, 9, 74, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [2, 3], [], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 8, 6, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [44, 25, 61, 71, 34]], "fitness": -0.2840000092983246, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.negative(tf.math.divide_no_nan(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)))), tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.6386448984306092, 2.316260966422016, 2.6612737588185866, 2.302525411176801, 2.2741072156787974, 2.3099767960546007, 2.3035500391583636], "accuracy": [0.21437062323093414, 0.11887465417385101, 0.15097081661224365, 0.10460969805717468, 0.2118610441684723, 0.10487385839223862, 0.1072513535618782], "val_loss": [2.1124938556126187, 1.638230221612113, 1.9751463617597307, 1.9661775997706823, 1.9907184328351701, 1.974574361528669, 1.9739644186837333], "val_accuracy": [0.09966666996479034, 0.37166666984558105, 0.0989999994635582, 0.1586666703224182, 0.09966666996479034, 0.09733333438634872, 0.10866666585206985]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 0, 3, 6, 4, 6, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 3, 3, 1, 2, 3, 3, 0, 3], [65, 87, 2, 82, 8, 7], [1, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [2, 3], [], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 8, 6, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [44, 25, 61, 71, 34]], "fitness": -0.2840000092983246, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, grad), tf.math.negative(tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.6386448984306092, 2.316260966422016, 2.6612737588185866, 2.302525411176801, 2.2741072156787974, 2.3099767960546007, 2.3035500391583636], "accuracy": [0.21437062323093414, 0.11887465417385101, 0.15097081661224365, 0.10460969805717468, 0.2118610441684723, 0.10487385839223862, 0.1072513535618782], "val_loss": [2.1124938556126187, 1.638230221612113, 1.9751463617597307, 1.9661775997706823, 1.9907184328351701, 1.974574361528669, 1.9739644186837333], "val_accuracy": [0.09966666996479034, 0.37166666984558105, 0.0989999994635582, 0.1586666703224182, 0.09966666996479034, 0.09733333438634872, 0.10866666585206985]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 3, 3, 3, 6, 4, 6, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 3, 3, 1, 2, 3, 3, 0, 3], [32, 87, 2, 82, 8, 7], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [2, 3], [], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 8, 6, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [86, 25, 61, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 9, 8, 2, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.divide_no_nan(grad, grad))), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))), alpha)), beta), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07396645098924637, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [4, 5, 2, 2, 6, 8, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 3, 2, 1, 3, 0, 0], [32, 33, 2, 9, 74, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [2, 3], [], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [2, 8, 8, 6, 7, 4], [2, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [44, 25, 61, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 7, 4, 2, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.square(tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.sqrt(grad)))), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.sqrt(tf.math.sqrt(beta)), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [5, 5, 3, 9, 6, 1, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 0, 3, 2, 1, 3, 0, 0], [32, 87, 2, 82, 8, 7], [1, 0, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [3, 3], [], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 4, 6, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [44, 25, 61, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 4, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.square(tf.math.multiply(tf.math.add(beta, grad), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07396645098924637, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [0, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [6, 2, 3, 2, 6, 1, 9, 1, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 3, 2, 2, 3, 0, 0], [57, 33, 46, 22, 74, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [2, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 0, 8, 6, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [44, 25, 61, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 13, 13, 7, 6, 2, 1, 1, 0, 1, 0, 3, 2, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), grad))), tf.math.subtract(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(alpha))", "other_info": {"loss": [3.0130429622472286, 10.310648608909952, 26.916747909322186, 54.33024197509024, 95.82094274482328, 152.02684564153358], "accuracy": [0.09549596905708313, 0.09826971590518951, 0.1022322028875351, 0.10011887550354004, 0.0952318087220192, 0.09998679161071777], "val_loss": [3.852754592895508, 11.571478162493024, 25.697333199637278, 47.55558449881418, 78.70414079938617, 120.93070765904018], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 2, 6, 1, 9, 1, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 3, 0, 0, 0, 1, 3, 0, 0], [34, 33, 2, 82, 74, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [2, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 8, 6, 7, 4], [1, 1, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [14, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 13, 13, 7, 6, 5, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, beta)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [0, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [4, 4, 3, 5, 3, 1, 2, 4, 2, 8, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 1, 3, 3, 2, 1, 3, 0, 0, 3, 2], [79, 29, 2, 82, 8, 7], [1, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [2, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [8, 3, 8, 6, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [44, 25, 61, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 19, 19, 10, 9, 2, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), grad), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, alpha), grad), tf.math.add(tf.math.pow(grad, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))), tf.math.add(beta, alpha))), grad)))))), tf.math.add(beta, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(alpha, tf.math.sqrt(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 3, 2, 3, 6, 4, 6, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 1, 3, 3, 2, 1, 3, 0, 0], [95, 33, 46, 22, 74, 78], [1, 0, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [3, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 8, 6, 7, 4], [3, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [44, 25, 61, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 4, 5, 1, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(beta, grad), tf.math.add(alpha, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.sqrt(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.302502635006797, 2.3030179802767745, 2.301828034880485, 2.301509164721502, 2.3022790033551823, 2.3026432297910286], "accuracy": [0.08994849026203156, 0.0944393053650856, 0.0952318087220192, 0.09272222965955734, 0.09272222965955734, 0.08942015469074249], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]