[{"genotype": [[0], [1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [3, 2, 2, 3], [44, 57], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [4, 6, 6, 6, 5, 2, 2, 4, 5, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 1, 0, 1, 1, 0, 0, 0], [42, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 3, 3, 6, 9], [3, 1, 3, 1], [45, 38]], "fitness": -0.798285722732544, "mapping_values": [1, 3, 3, 1, 2, 0, 14, 14, 7, 7, 1, 1, 1, 0, 1, 0, 8, 5, 3, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(grad, grad)), grad)), tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha)), alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(sigma, tf.math.divide_no_nan(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), alpha)), sigma))", "other_info": {"loss": [2.0999346842398623, 1.3966867236444869, 1.1145644308537885, 0.9236924668517899, 0.8476542411164175, 0.7869032758605825, 0.7863319178519389, 0.7208157951223096, 0.7014656637433245, 0.706492938385695, 0.6643704941968372, 0.6648912904143192, 0.6366746225030808, 0.6401296068003086, 0.6385727665286102, 0.6143747608596465, 0.5829043757205374, 0.5800885313600518, 0.5884830285104321, 0.5644957975956427, 0.5566976947035567, 0.5579652004962458, 0.5474723318800588, 0.5503284751290359, 0.5494085834357307, 0.5188370851745474], "accuracy": [0.30379077792167664, 0.5163122415542603, 0.5993924140930176, 0.6646413803100586, 0.6857746839523315, 0.7061154246330261, 0.7080966830253601, 0.7256637215614319, 0.7302865982055664, 0.7271166443824768, 0.7436270117759705, 0.7477215528488159, 0.7576277852058411, 0.7560427784919739, 0.7589486241340637, 0.7692511081695557, 0.7804781198501587, 0.7814027070999146, 0.774798572063446, 0.7820631265640259, 0.7869502305984497, 0.7841764688491821, 0.7905164361000061, 0.7909126877784729, 0.7861577272415161, 0.807158887386322], "val_loss": [1.2163159166063582, 0.7979898623057774, 0.8257018157414028, 0.6818052359989711, 0.6024383987699237, 0.567236202103751, 0.5685380016054425, 0.5362195457730975, 0.5675439153398786, 0.511938180242266, 0.519715564591544, 0.4976655585425241, 0.4726027079990932, 0.5195915358407157, 0.5058094773973737, 0.4575494272368295, 0.4695389611380441, 0.4535318102155413, 0.4597340566771371, 0.47800341674259733, 0.44484554869788034, 0.4632706812449864, 0.46106022596359253, 0.45275765657424927, 0.4504177144595555, 0.44731823035648893], "val_accuracy": [0.5463333129882812, 0.6483333110809326, 0.6693333387374878, 0.6883333325386047, 0.715666651725769, 0.7570000290870667, 0.737666666507721, 0.7766666412353516, 0.7416666746139526, 0.7723333239555359, 0.7616666555404663, 0.7820000052452087, 0.796999990940094, 0.7596666812896729, 0.7703333497047424, 0.8043333292007446, 0.8109999895095825, 0.8086666464805603, 0.8036666512489319, 0.7889999747276306, 0.8176666498184204, 0.7903333306312561, 0.8016666769981384, 0.8066666722297668, 0.7866666913032532, 0.8056666851043701]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0], [7, 6, 4, 9], [0, 1, 2], [44, 57], [0, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6], [3], [1, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 0, 1, 1], [0, 3], [3, 0], [45]], "fitness": -0.7685714364051819, "mapping_values": [1, 7, 7, 4, 3, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.027065941276898, 1.4158779697773431, 1.046022080757898, 0.8598227144122171, 0.8065325560240367, 0.7513771170654066, 0.7364548949864027, 0.663767892733982, 0.67064598362916, 0.6330820562470748, 0.6305028362328334, 0.5954895002447367, 0.5805705388098377], "accuracy": [0.30643242597579956, 0.5085193514823914, 0.6235635876655579, 0.6802271604537964, 0.6919825673103333, 0.7191916704177856, 0.7209087014198303, 0.7510236501693726, 0.7390040755271912, 0.7586844563484192, 0.7534011602401733, 0.7725531458854675, 0.7717606425285339], "val_loss": [1.2407799448285783, 0.797624945640564, 0.75213623046875, 0.5927859204156058, 0.5679912737437657, 0.582312890461513, 0.5766366720199585, 0.5079289334160941, 0.5002520424979073, 0.556118300982884, 0.5527243273598808, 0.481379577091762, 0.5177018131528582], "val_accuracy": [0.5383333563804626, 0.609333336353302, 0.6389999985694885, 0.7296666502952576, 0.762333333492279, 0.7413333058357239, 0.7296666502952576, 0.7823333144187927, 0.7739999890327454, 0.7289999723434448, 0.7556666731834412, 0.7730000019073486, 0.7593333125114441]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [7, 6, 4, 9, 3, 4, 5, 9, 6, 1, 7, 1, 6, 7, 4, 2, 0, 4, 9, 3, 1, 0, 6, 3, 7, 7, 9, 0, 4, 7, 1, 4, 4, 7, 1, 2, 1, 1, 5, 5, 1, 3, 6, 9, 0, 4, 6, 7, 5, 5, 0, 1, 1, 1, 8, 0, 2, 0, 5, 0, 9, 4, 6, 7, 5, 1, 6, 5], [2, 1, 2, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 2, 3, 0, 1, 3, 2, 0, 1, 1, 3, 3, 0, 2, 2, 1, 2, 2, 0, 3, 1, 1, 3, 0, 3, 2], [44, 57, 39, 27, 0, 44, 42, 35, 73, 42, 46, 86, 85, 6, 20, 59, 93, 8], [0, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6], [3], [1, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 0, 0, 1, 1, 1], [0, 3, 9, 4], [3, 0, 0], [45, 11]], "fitness": -0.7685714364051819, "mapping_values": [1, 12, 12, 8, 4, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), tf.math.multiply(tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.027065941276898, 1.4158779697773431, 1.046022080757898, 0.8598227144122171, 0.8065325560240367, 0.7513771170654066, 0.7364548949864027, 0.663767892733982, 0.67064598362916, 0.6330820562470748, 0.6305028362328334, 0.5954895002447367, 0.5805705388098377], "accuracy": [0.30643242597579956, 0.5085193514823914, 0.6235635876655579, 0.6802271604537964, 0.6919825673103333, 0.7191916704177856, 0.7209087014198303, 0.7510236501693726, 0.7390040755271912, 0.7586844563484192, 0.7534011602401733, 0.7725531458854675, 0.7717606425285339], "val_loss": [1.2407799448285783, 0.797624945640564, 0.75213623046875, 0.5927859204156058, 0.5679912737437657, 0.582312890461513, 0.5766366720199585, 0.5079289334160941, 0.5002520424979073, 0.556118300982884, 0.5527243273598808, 0.481379577091762, 0.5177018131528582], "val_accuracy": [0.5383333563804626, 0.609333336353302, 0.6389999985694885, 0.7296666502952576, 0.762333333492279, 0.7413333058357239, 0.7296666502952576, 0.7823333144187927, 0.7739999890327454, 0.7289999723434448, 0.7556666731834412, 0.7730000019073486, 0.7593333125114441]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [3, 2, 2, 3], [44, 57, 55], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1], [4, 6, 6, 2, 5, 2, 2, 4, 5, 8, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 3, 2, 0, 1, 2, 0, 0, 2], [54, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 1, 1], [0, 3], [3, 0], [45]], "fitness": -0.7685714364051819, "mapping_values": [1, 3, 3, 1, 2, 0, 20, 20, 12, 8, 4, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))))))), tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, beta)))))), tf.math.add(beta, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.027065941276898, 1.4158779697773431, 1.046022080757898, 0.8598227144122171, 0.8065325560240367, 0.7513771170654066, 0.7364548949864027, 0.663767892733982, 0.67064598362916, 0.6330820562470748, 0.6305028362328334, 0.5954895002447367, 0.5805705388098377], "accuracy": [0.30643242597579956, 0.5085193514823914, 0.6235635876655579, 0.6802271604537964, 0.6919825673103333, 0.7191916704177856, 0.7209087014198303, 0.7510236501693726, 0.7390040755271912, 0.7586844563484192, 0.7534011602401733, 0.7725531458854675, 0.7717606425285339], "val_loss": [1.2407799448285783, 0.797624945640564, 0.75213623046875, 0.5927859204156058, 0.5679912737437657, 0.582312890461513, 0.5766366720199585, 0.5079289334160941, 0.5002520424979073, 0.556118300982884, 0.5527243273598808, 0.481379577091762, 0.5177018131528582], "val_accuracy": [0.5383333563804626, 0.609333336353302, 0.6389999985694885, 0.7296666502952576, 0.762333333492279, 0.7413333058357239, 0.7296666502952576, 0.7823333144187927, 0.7739999890327454, 0.7289999723434448, 0.7556666731834412, 0.7730000019073486, 0.7593333125114441]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0], [1, 1, 0, 1, 0, 1, 1], [6, 6, 4, 9], [3, 2, 2, 3], [44, 57], [0, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6, 6, 5, 2, 2, 4, 5, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 3, 3, 0, 1, 1, 0, 0, 0], [1, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 0, 1, 1], [0, 3], [3, 0], [45]], "fitness": -0.7685714364051819, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.027065941276898, 1.4158779697773431, 1.046022080757898, 0.8598227144122171, 0.8065325560240367, 0.7513771170654066, 0.7364548949864027, 0.663767892733982, 0.67064598362916, 0.6330820562470748, 0.6305028362328334, 0.5954895002447367, 0.5805705388098377], "accuracy": [0.30643242597579956, 0.5085193514823914, 0.6235635876655579, 0.6802271604537964, 0.6919825673103333, 0.7191916704177856, 0.7209087014198303, 0.7510236501693726, 0.7390040755271912, 0.7586844563484192, 0.7534011602401733, 0.7725531458854675, 0.7717606425285339], "val_loss": [1.2407799448285783, 0.797624945640564, 0.75213623046875, 0.5927859204156058, 0.5679912737437657, 0.582312890461513, 0.5766366720199585, 0.5079289334160941, 0.5002520424979073, 0.556118300982884, 0.5527243273598808, 0.481379577091762, 0.5177018131528582], "val_accuracy": [0.5383333563804626, 0.609333336353302, 0.6389999985694885, 0.7296666502952576, 0.762333333492279, 0.7413333058357239, 0.7296666502952576, 0.7823333144187927, 0.7739999890327454, 0.7289999723434448, 0.7556666731834412, 0.7730000019073486, 0.7593333125114441]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0], [1, 1, 0, 1, 0, 0, 1], [5, 6, 4, 9], [3, 2, 3, 1], [44, 57], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0], [9, 6, 6], [3, 1, 3, 1, 0, 1], [1, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 1, 1, 1], [0, 3], [3, 0], [45]], "fitness": -0.2782857120037079, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [4.02872895611874, 2.35598356121362, 2.307134389625391, 2.304473510649478, 2.303000648590741, 2.3032260549192842, 2.3016125458641894, 2.2552561282859642, 2.3130444209998577, 2.304196539241341, 2.3035011535244467, 2.30316647817556, 2.3030386288183995], "accuracy": [0.17091533541679382, 0.14119666814804077, 0.10091137140989304, 0.09509972482919693, 0.09747721254825592, 0.10196803510189056, 0.10289261490106583, 0.14542332291603088, 0.13802668452262878, 0.09272222965955734, 0.09536388516426086, 0.09351472556591034, 0.09589222073554993], "val_loss": [1.9330347606113978, 1.9779787744794572, 1.9750425474984306, 1.974144458770752, 1.9736048153468542, 1.9732484817504883, 1.9703970636640276, 1.7872488158089774, 1.9746146202087402, 1.973773615700858, 1.9737356049673898, 1.9736745016915458, 1.9736712319510323], "val_accuracy": [0.10300000011920929, 0.10400000214576721, 0.09700000286102295, 0.09700000286102295, 0.09733333438634872, 0.0976666659116745, 0.11266666650772095, 0.25566667318344116, 0.09833333641290665, 0.09966666996479034, 0.09966666996479034, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1], [7, 6, 4, 2, 8, 8, 1, 8, 8, 5, 4, 6, 6, 2, 2, 6, 2, 3, 9, 1, 4, 9, 5, 6, 8, 4, 0, 3, 0, 2, 4, 0, 1, 7, 8, 9, 7, 5, 4, 0, 4, 3, 2, 9, 0, 9, 3, 2, 8, 0, 2, 1, 2, 1, 8, 9], [0, 1, 2, 0, 3, 2, 2, 1, 3, 1, 0, 2, 3, 3, 1, 0, 2, 2, 3, 1, 0, 1, 2, 3, 3, 3, 0, 0, 2, 2, 0], [44, 57, 44, 27, 0, 94, 42, 86, 73, 42, 21, 46, 85, 6, 20, 75], [0, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6, 4, 3, 5, 7, 2, 9, 5, 0, 9], [0], [1, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 1, 1, 1], [0, 3, 9, 4], [3, 0], [45]], "fitness": -0.2782857120037079, "mapping_values": [1, 15, 15, 9, 6, 2, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.pow(tf.math.add(tf.math.add(alpha, alpha), grad), tf.math.sqrt(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.sqrt(grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [4.02872895611874, 2.35598356121362, 2.307134389625391, 2.304473510649478, 2.303000648590741, 2.3032260549192842, 2.3016125458641894, 2.2552561282859642, 2.3130444209998577, 2.304196539241341, 2.3035011535244467, 2.30316647817556, 2.3030386288183995], "accuracy": [0.17091533541679382, 0.14119666814804077, 0.10091137140989304, 0.09509972482919693, 0.09747721254825592, 0.10196803510189056, 0.10289261490106583, 0.14542332291603088, 0.13802668452262878, 0.09272222965955734, 0.09536388516426086, 0.09351472556591034, 0.09589222073554993], "val_loss": [1.9330347606113978, 1.9779787744794572, 1.9750425474984306, 1.974144458770752, 1.9736048153468542, 1.9732484817504883, 1.9703970636640276, 1.7872488158089774, 1.9746146202087402, 1.973773615700858, 1.9737356049673898, 1.9736745016915458, 1.9736712319510323], "val_accuracy": [0.10300000011920929, 0.10400000214576721, 0.09700000286102295, 0.09700000286102295, 0.09733333438634872, 0.0976666659116745, 0.11266666650772095, 0.25566667318344116, 0.09833333641290665, 0.09966666996479034, 0.09966666996479034, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [2, 2, 2], [25, 57, 55], [0, 0, 1], [1, 0, 0, 1, 1], [0, 6, 6, 6, 5, 2, 8, 4, 5, 1, 4, 9, 8, 1, 2, 8, 9, 0], [3, 3, 3, 1, 0, 1, 0, 0, 0], [1, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 1, 1, 1], [0, 3], [3, 0, 2, 1, 0, 3, 0], [59, 50, 79]], "fitness": -0.2782857120037079, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [4.02872895611874, 2.35598356121362, 2.307134389625391, 2.304473510649478, 2.303000648590741, 2.3032260549192842, 2.3016125458641894, 2.2552561282859642, 2.3130444209998577, 2.304196539241341, 2.3035011535244467, 2.30316647817556, 2.3030386288183995], "accuracy": [0.17091533541679382, 0.14119666814804077, 0.10091137140989304, 0.09509972482919693, 0.09747721254825592, 0.10196803510189056, 0.10289261490106583, 0.14542332291603088, 0.13802668452262878, 0.09272222965955734, 0.09536388516426086, 0.09351472556591034, 0.09589222073554993], "val_loss": [1.9330347606113978, 1.9779787744794572, 1.9750425474984306, 1.974144458770752, 1.9736048153468542, 1.9732484817504883, 1.9703970636640276, 1.7872488158089774, 1.9746146202087402, 1.973773615700858, 1.9737356049673898, 1.9736745016915458, 1.9736712319510323], "val_accuracy": [0.10300000011920929, 0.10400000214576721, 0.09700000286102295, 0.09700000286102295, 0.09733333438634872, 0.0976666659116745, 0.11266666650772095, 0.25566667318344116, 0.09833333641290665, 0.09966666996479034, 0.09966666996479034, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [7, 2, 2, 9], [0, 1, 2], [44, 57], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [4, 6, 6, 6, 5, 2, 8, 4, 3, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 1, 3, 4, 2, 3, 2], [94, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [1, 3, 6, 7, 7, 2, 4, 0, 1, 3, 2, 7, 2, 1, 3, 5, 6], [3, 0, 1, 0, 1, 0, 3, 1, 2, 0, 1, 3, 3, 3, 2], [45, 71, 10, 52, 76]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 2, 17, 17, 9, 8, 1, 1, 1, 0, 1, 0, 30, 15, 15, 4], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(alpha, grad)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), alpha)), tf.math.divide_no_nan(tf.math.square(tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad)))), beta)), tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.negative(tf.math.subtract(sigma, alpha)), tf.math.multiply(beta, tf.math.add(tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(sigma, sigma))), tf.math.multiply(sigma, beta)))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0], [7, 6, 4, 9], [2, 2, 2, 3], [44, 57], [0, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6, 6, 5, 2, 2, 4, 5, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3], [1, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 1, 0, 1, 0, 1, 1], [3, 3, 4], [3, 0, 0, 3], [45, 90]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 7, 3, 4, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.pow(grad, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06155065447092056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 0], [0, 1, 0, 1, 0, 1, 0], [0, 6, 4, 9], [2, 2, 2], [44, 57, 55], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], [4, 6, 6, 5, 6, 7, 4, 2, 2, 2, 4, 0, 8, 6, 2, 5, 8, 6], [3, 0, 3, 2, 1, 0, 2, 1, 3, 1, 5, 3, 3, 0], [1, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 1, 1], [0, 0], [2, 0], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 22, 22, 11, 11, 2, 1, 1, 0, 1, 0, 3, 2, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, alpha)))), tf.math.add(beta, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, beta))), tf.math.add(tf.math.add(beta, alpha), tf.math.add(tf.math.add(beta, grad), tf.math.pow(alpha, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 1], [7, 6, 4, 9], [3, 2, 3, 1], [44, 57], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0], [9, 6, 6], [3, 1, 3, 1, 0, 1], [1, 70], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 1, 1, 1], [9, 3], [3, 0], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.pow(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3024113080945896, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 0], [0, 1, 0, 1, 0, 1, 0], [3, 2, 4, 9], [2, 2, 2], [44, 57, 55], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 6, 6, 6, 5, 2, 3, 4, 5, 1, 4, 1, 8, 1, 2, 8, 9, 0], [3, 3, 3, 1, 0, 1, 0, 0, 0], [81, 64, 33, 54, 58], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 1, 1, 0, 1], [4, 3, 0], [3, 0, 2], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 11, 11, 6, 5, 1, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(grad, tf.math.pow(grad, tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.negative(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1], [3, 2, 2, 9], [2, 2, 2], [31, 57], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [4, 6, 6, 7, 7, 3, 2, 4, 9, 1, 5, 8, 6], [4, 3, 0, 3, 5, 1, 1, 0, 0, 3, 2], [72, 64, 33, 54, 58], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 0, 1, 0, 1, 1], [9, 3, 8], [3, 0, 0], [45, 99]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 23, 23, 13, 10, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.add(tf.math.add(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), grad), grad)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(grad, grad), tf.math.add(beta, tf.math.add(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(alpha)), tf.math.add(beta, alpha))))), tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)))))))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3024113080945896, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 1, 0], [8, 6, 4, 9], [3, 2, 2, 3], [44, 57], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], [4, 6, 6, 3, 3, 5, 7, 8, 9, 5, 0, 4, 2, 3, 8, 4, 6], [3, 3, 3, 0, 0, 1, 1, 0, 0, 0], [1, 71, 49, 47, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [1, 0, 1, 1], [0, 1], [2, 0, 0], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 15, 15, 9, 6, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), grad)), grad), tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, alpha))))), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 1, 0], [7, 6, 4, 9, 9], [2, 2, 2], [44, 57, 55], [1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [8, 6, 6, 6, 5, 2, 8, 3, 5, 1, 4, 9, 8, 1, 2, 8, 9, 0], [3, 3, 3, 1, 3, 5, 1], [92, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [1, 0, 1, 1], [0, 3], [0, 0], [45, 50, 79]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 5, 2, 2, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.divide_no_nan(grad, tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3024113080945896, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 1, 0], [7, 6, 4, 9], [3, 2, 2, 3], [44, 57], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 2, 6, 6, 8, 0, 2, 4, 5, 1, 4, 9, 8, 1, 1, 1, 9, 0], [3, 3, 3, 3, 0, 1, 1, 0, 0, 0], [1, 71, 49, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 1, 1, 1], [1, 3], [3, 0, 1], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 27, 27, 17, 10, 6, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.sqrt(tf.math.negative(tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), grad)), tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.subtract(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha))))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1], [7, 6, 4, 3, 4, 8, 5, 6, 0, 7, 2, 3, 4, 5, 3, 9, 3, 1, 6, 1, 7, 8, 9], [2, 1, 2, 0, 0, 1, 0, 1, 1, 1, 1, 2, 1, 0, 1], [44, 57, 55, 80, 82, 52], [1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1], [4, 4, 2, 1, 3, 4, 3, 6, 7, 5, 4, 7, 3, 4, 8, 5, 7, 1, 0, 5], [3, 0, 3, 3, 5, 5, 3, 3, 4, 5, 2, 3, 3, 2, 0, 0], [1, 70, 33, 54], [0, 0, 0, 1, 0], [1, 0, 1, 1], [3, 2], [5, 3], [], [1, 1, 1, 1], [1, 3, 6], [3, 0], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 38, 38, 23, 15, 6, 36, 36, 20, 16, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 46, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(tf.math.multiply(tf.math.add(alpha, alpha), tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), alpha))), tf.math.add(tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.pow(alpha, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha)))), tf.math.multiply(tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.subtract(tf.math.add(alpha, alpha), alpha), tf.math.divide_no_nan(grad, tf.math.add(alpha, alpha)))))))), tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.subtract(grad, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad)), tf.math.square(tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.pow(grad, tf.math.sqrt(grad)), tf.math.add(beta, tf.math.square(tf.math.add(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), grad))))))))))))))), tf.math.add(beta, grad)), beta))), tf.math.add(beta, tf.math.negative(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))), tf.math.square(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07660810649394989, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [3, 2, 3, 1], [44, 57], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [8, 6, 6, 6, 5, 2, 8, 4, 3, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 1, 0, 1, 1, 0, 0], [49, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 1, 1, 1], [5, 3], [3, 0, 3, 1], [45, 78]], "fitness": -0.06971428543329239, "mapping_values": [1, 3, 3, 1, 2, 0, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(grad, grad)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(sigma)", "other_info": {"loss": [2.303016118716098, 2.301872908525841, 2.2995281186101932, 2.2990534913349365, 2.300395720009129, 2.299494582490993, 2.2989345482390524, 2.3005380849985633, 2.2988560622662066, 2.299535487636898, 2.2990322142638675, 2.298899970144691, 2.3002859683257872], "accuracy": [0.0882314071059227, 0.09351472556591034, 0.09932637959718704, 0.09457138925790787, 0.10011887550354004, 0.09998679161071777, 0.09509972482919693, 0.09377889335155487, 0.10408136248588562, 0.1018359512090683, 0.09602430462837219, 0.09760929644107819, 0.09681680053472519], "val_loss": [1.9698155948093958, 1.969142232622419, 1.968991756439209, 1.9690027236938477, 1.9689258166721888, 1.9690203666687012, 1.9690549714224679, 1.9689577647617884, 1.9690128053937639, 1.9691732951572962, 1.9694136892046248, 1.9698151179722376, 1.9701323509216309], "val_accuracy": [0.04833333194255829, 0.05299999937415123, 0.05666666850447655, 0.06066666543483734, 0.06266666948795319, 0.06733333319425583, 0.07333333045244217, 0.07633333653211594, 0.07500000298023224, 0.07233333587646484, 0.07100000232458115, 0.06833333522081375, 0.07100000232458115]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [7, 6, 4, 2, 7, 8, 1, 8, 8, 4, 4, 6, 6, 2, 2, 6, 2, 9, 9, 1, 4, 9, 5, 6, 9, 4, 0, 3, 0, 1, 4, 0, 1, 7, 7, 9, 7, 5, 1, 0, 4, 3, 2, 1, 0, 9, 3, 2, 8, 0, 2, 1, 1, 1, 8, 5], [2, 1, 2, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 2, 3, 0, 1, 3, 2, 3, 1, 1, 3, 3, 0, 2, 1, 1, 0, 2], [44, 57, 44, 27, 0, 44, 42, 35, 73, 42, 21, 86, 85, 6, 20, 75], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6, 4, 3, 5, 7, 2, 9, 5, 0, 9], [3, 3, 3, 3, 0, 1, 1, 0, 0, 0], [1, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [3], [], [0, 0, 0, 0, 1, 1], [0, 3, 9, 4], [3, 0], [45, 11]], "fitness": -0.03999999910593033, "mapping_values": [1, 12, 12, 6, 6, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.pow(sigma, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3033974433949815, 2.3032890813792495, 2.301335882280859, 2.300969214660459, 2.3030126724638693, 2.301914896207353], "accuracy": [0.0878351628780365, 0.08875974267721176, 0.09417514503002167, 0.08942015469074249, 0.09351472556591034, 0.08981640636920929], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]