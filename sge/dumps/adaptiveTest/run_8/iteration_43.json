[{"genotype": [[0], [0, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [2, 3, 2, 3], [79, 57], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [6, 5, 6, 6, 2, 3, 9, 8, 2, 1, 4, 9, 8, 9, 1, 0, 9, 0, 0, 5, 1, 7, 8, 6], [1, 0, 3, 3, 0, 3, 2, 3, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 3, 9, 2, 9], [3, 3, 3, 1], [43, 38]], "fitness": -0.8062857389450073, "mapping_values": [1, 3, 3, 1, 2, 0, 17, 17, 10, 7, 3, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))))), tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, sigma)))", "other_info": {"loss": [2.0479101872226866, 1.7366162588126812, 1.4544799655986862, 0.9846559475284163, 0.8738162079822307, 0.7576346226718527, 0.7416886121857326, 0.6996410340602136, 0.6606953762006199, 0.6280264718232452, 0.6073488690723691, 0.6051843277672105, 0.5690035207349359, 0.5727847022166924, 0.5515438142532623, 0.5332433902127726, 0.5334212453003809, 0.5045908450600084, 0.5091312792259924, 0.5027315767292239, 0.48686696288844206, 0.4730506811820914, 0.447142302493976, 0.4696099206740279, 0.4695322391867496, 0.43438152101896127, 0.4334814935320357, 0.4272367907922974, 0.42540066499421, 0.40971413364562814, 0.41777016262431205, 0.39484304832098993, 0.3958617257538126, 0.3872685051707544, 0.404978271772077], "accuracy": [0.32545238733291626, 0.4321753978729248, 0.5151234865188599, 0.6293752193450928, 0.6700568199157715, 0.7028133869171143, 0.724739134311676, 0.7310791015625, 0.7407211661338806, 0.7626469135284424, 0.7680623531341553, 0.7676661014556885, 0.7790252566337585, 0.7792893648147583, 0.7950072884559631, 0.8017435073852539, 0.7976489067077637, 0.8047813773155212, 0.8088759779930115, 0.8041210174560547, 0.8146876096725464, 0.8230088353157043, 0.833179235458374, 0.8247259259223938, 0.8241975903511047, 0.8359529972076416, 0.8417646288871765, 0.8436138033866882, 0.8411042094230652, 0.8396512866020203, 0.8441421389579773, 0.8539162874221802, 0.8482366800308228, 0.857218325138092, 0.8500858545303345], "val_loss": [1.7940809386117118, 1.2365837097167969, 0.8932876586914062, 0.6769170761108398, 0.5827052252633231, 0.5769718204225812, 0.5369284663881574, 0.5396022626331874, 0.5034340109143939, 0.5148596252713885, 0.6264729159218925, 0.4649982196944101, 0.4615507551601955, 0.4704440321241106, 0.45716623749051777, 0.4528482811791556, 0.43629056215286255, 0.42656815903527395, 0.41125074454716276, 0.43942861897604807, 0.3984536954334804, 0.388052693435124, 0.4653198889323643, 0.48154761110033306, 0.3858393941606794, 0.4049648216792515, 0.3729835493224008, 0.399163441998618, 0.37508325065885273, 0.3613666296005249, 0.3598771946770804, 0.3648836186953953, 0.3623808537210737, 0.38951357773372103, 0.3735504831586565], "val_accuracy": [0.40799999237060547, 0.4036666750907898, 0.5653333067893982, 0.6816666722297668, 0.7196666598320007, 0.718666672706604, 0.7293333411216736, 0.7419999837875366, 0.7699999809265137, 0.7646666765213013, 0.7073333263397217, 0.7886666655540466, 0.7923333048820496, 0.784333348274231, 0.7976666688919067, 0.7916666865348816, 0.7963333129882812, 0.8083333373069763, 0.8186666369438171, 0.793666660785675, 0.8309999704360962, 0.8370000123977661, 0.8026666641235352, 0.7839999794960022, 0.8370000123977661, 0.8230000138282776, 0.8450000286102295, 0.8166666626930237, 0.8446666598320007, 0.8516666889190674, 0.8486666679382324, 0.8479999899864197, 0.843999981880188, 0.8259999752044678, 0.8286666870117188]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 3, 2, 3], [79, 57], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 2, 6, 6, 0, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.75342857837677, "mapping_values": [1, 3, 3, 1, 2, 1, 12, 12, 7, 5, 2, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(alpha, tf.math.add(beta, grad)), tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.add(beta, grad), grad)))), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, sigma)))", "other_info": {"loss": [2.0873459595352855, 1.8319669843050688, 1.5247136936400623, 1.024568248300536, 0.8663029264244878, 0.8003790482018587, 0.7279941495840088, 0.6962624058164799, 0.6905178270634722, 0.6722829470922919, 0.6291411983622001, 0.6115126169085298], "accuracy": [0.2934883236885071, 0.4033813178539276, 0.5071985125541687, 0.6196011304855347, 0.6866992712020874, 0.7078325152397156, 0.7279091477394104, 0.7305507659912109, 0.7382115721702576, 0.7464007139205933, 0.7619865536689758, 0.7716285586357117], "val_loss": [1.577188287462507, 1.4894685745239258, 0.8691624232700893, 0.6692441531590053, 0.5778816938400269, 0.6059273481369019, 0.5247772080557687, 0.5332731519426618, 0.5311240809304374, 0.4938760655266898, 0.512268032346453, 0.4830422742026193], "val_accuracy": [0.3700000047683716, 0.4880000054836273, 0.5896666646003723, 0.6936666369438171, 0.7440000176429749, 0.7116666436195374, 0.7699999809265137, 0.7603333592414856, 0.7620000243186951, 0.7693333625793457, 0.7663333415985107, 0.762666642665863]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 0], [2, 4, 4, 9], [2, 1, 2, 3], [79, 57], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1], [1, 6, 6, 5, 2, 3, 9, 4, 2, 1, 4, 9, 8, 9, 1, 0, 9, 0, 0, 5, 1, 7, 8, 6], [3, 3, 3, 1, 0, 3, 0, 1, 3, 0, 0, 0, 5], [58, 45, 43, 93, 81, 78], [0, 0, 0, 1, 0, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.75342857837677, "mapping_values": [1, 3, 3, 1, 2, 0, 10, 10, 5, 5, 1, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), grad)), grad)), tf.math.square(tf.math.add(alpha, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, sigma)))", "other_info": {"loss": [2.0873459595352855, 1.8319669843050688, 1.5247136936400623, 1.024568248300536, 0.8663029264244878, 0.8003790482018587, 0.7279941495840088, 0.6962624058164799, 0.6905178270634722, 0.6722829470922919, 0.6291411983622001, 0.6115126169085298], "accuracy": [0.2934883236885071, 0.4033813178539276, 0.5071985125541687, 0.6196011304855347, 0.6866992712020874, 0.7078325152397156, 0.7279091477394104, 0.7305507659912109, 0.7382115721702576, 0.7464007139205933, 0.7619865536689758, 0.7716285586357117], "val_loss": [1.577188287462507, 1.4894685745239258, 0.8691624232700893, 0.6692441531590053, 0.5778816938400269, 0.6059273481369019, 0.5247772080557687, 0.5332731519426618, 0.5311240809304374, 0.4938760655266898, 0.512268032346453, 0.4830422742026193], "val_accuracy": [0.3700000047683716, 0.4880000054836273, 0.5896666646003723, 0.6936666369438171, 0.7440000176429749, 0.7116666436195374, 0.7699999809265137, 0.7603333592414856, 0.7620000243186951, 0.7693333625793457, 0.7663333415985107, 0.762666642665863]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 3, 2, 3], [79, 57], [1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 2, 6, 6, 0, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 0, 0, 3, 2, 3, 3, 0], [62, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.75342857837677, "mapping_values": [1, 3, 3, 1, 2, 1, 9, 9, 4, 5, 2, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(alpha, tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, grad)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, sigma)))", "other_info": {"loss": [2.0873459595352855, 1.8319669843050688, 1.5247136936400623, 1.024568248300536, 0.8663029264244878, 0.8003790482018587, 0.7279941495840088, 0.6962624058164799, 0.6905178270634722, 0.6722829470922919, 0.6291411983622001, 0.6115126169085298], "accuracy": [0.2934883236885071, 0.4033813178539276, 0.5071985125541687, 0.6196011304855347, 0.6866992712020874, 0.7078325152397156, 0.7279091477394104, 0.7305507659912109, 0.7382115721702576, 0.7464007139205933, 0.7619865536689758, 0.7716285586357117], "val_loss": [1.577188287462507, 1.4894685745239258, 0.8691624232700893, 0.6692441531590053, 0.5778816938400269, 0.6059273481369019, 0.5247772080557687, 0.5332731519426618, 0.5311240809304374, 0.4938760655266898, 0.512268032346453, 0.4830422742026193], "val_accuracy": [0.3700000047683716, 0.4880000054836273, 0.5896666646003723, 0.6936666369438171, 0.7440000176429749, 0.7116666436195374, 0.7699999809265137, 0.7603333592414856, 0.7620000243186951, 0.7693333625793457, 0.7663333415985107, 0.762666642665863]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 3, 2, 3], [79, 57], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 2, 6, 6, 0, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [90, 40, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.75342857837677, "mapping_values": [1, 3, 3, 1, 2, 1, 10, 10, 5, 5, 1, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, grad)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.negative(tf.math.add(beta, grad)), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, sigma)))", "other_info": {"loss": [2.0873459595352855, 1.8319669843050688, 1.5247136936400623, 1.024568248300536, 0.8663029264244878, 0.8003790482018587, 0.7279941495840088, 0.6962624058164799, 0.6905178270634722, 0.6722829470922919, 0.6291411983622001, 0.6115126169085298], "accuracy": [0.2934883236885071, 0.4033813178539276, 0.5071985125541687, 0.6196011304855347, 0.6866992712020874, 0.7078325152397156, 0.7279091477394104, 0.7305507659912109, 0.7382115721702576, 0.7464007139205933, 0.7619865536689758, 0.7716285586357117], "val_loss": [1.577188287462507, 1.4894685745239258, 0.8691624232700893, 0.6692441531590053, 0.5778816938400269, 0.6059273481369019, 0.5247772080557687, 0.5332731519426618, 0.5311240809304374, 0.4938760655266898, 0.512268032346453, 0.4830422742026193], "val_accuracy": [0.3700000047683716, 0.4880000054836273, 0.5896666646003723, 0.6936666369438171, 0.7440000176429749, 0.7116666436195374, 0.7699999809265137, 0.7603333592414856, 0.7620000243186951, 0.7693333625793457, 0.7663333415985107, 0.762666642665863]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [8, 6, 4, 9], [2, 1, 2, 3], [79, 57], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], [1, 5, 6, 6, 2, 3, 0, 8, 2, 1, 4, 9, 8, 9, 1, 0, 9, 0, 0, 5, 1, 7, 8, 6], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [42, 48, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.75342857837677, "mapping_values": [1, 2, 2, 1, 1, 0, 16, 16, 9, 7, 2, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(alpha, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.negative(tf.math.add(beta, grad)), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(grad)))), tf.math.add(beta, tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))))))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, sigma)))", "other_info": {"loss": [2.0873459595352855, 1.8319669843050688, 1.5247136936400623, 1.024568248300536, 0.8663029264244878, 0.8003790482018587, 0.7279941495840088, 0.6962624058164799, 0.6905178270634722, 0.6722829470922919, 0.6291411983622001, 0.6115126169085298], "accuracy": [0.2934883236885071, 0.4033813178539276, 0.5071985125541687, 0.6196011304855347, 0.6866992712020874, 0.7078325152397156, 0.7279091477394104, 0.7305507659912109, 0.7382115721702576, 0.7464007139205933, 0.7619865536689758, 0.7716285586357117], "val_loss": [1.577188287462507, 1.4894685745239258, 0.8691624232700893, 0.6692441531590053, 0.5778816938400269, 0.6059273481369019, 0.5247772080557687, 0.5332731519426618, 0.5311240809304374, 0.4938760655266898, 0.512268032346453, 0.4830422742026193], "val_accuracy": [0.3700000047683716, 0.4880000054836273, 0.5896666646003723, 0.6936666369438171, 0.7440000176429749, 0.7116666436195374, 0.7699999809265137, 0.7603333592414856, 0.7620000243186951, 0.7693333625793457, 0.7663333415985107, 0.762666642665863]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 3, 2, 3], [79, 57], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [5, 2, 6, 6, 0, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 0, 3, 3, 0], [42, 6, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.75342857837677, "mapping_values": [1, 3, 3, 1, 2, 1, 17, 17, 10, 7, 3, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(alpha, tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)))))), grad)), tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, sigma)))", "other_info": {"loss": [2.0873459595352855, 1.8319669843050688, 1.5247136936400623, 1.024568248300536, 0.8663029264244878, 0.8003790482018587, 0.7279941495840088, 0.6962624058164799, 0.6905178270634722, 0.6722829470922919, 0.6291411983622001, 0.6115126169085298], "accuracy": [0.2934883236885071, 0.4033813178539276, 0.5071985125541687, 0.6196011304855347, 0.6866992712020874, 0.7078325152397156, 0.7279091477394104, 0.7305507659912109, 0.7382115721702576, 0.7464007139205933, 0.7619865536689758, 0.7716285586357117], "val_loss": [1.577188287462507, 1.4894685745239258, 0.8691624232700893, 0.6692441531590053, 0.5778816938400269, 0.6059273481369019, 0.5247772080557687, 0.5332731519426618, 0.5311240809304374, 0.4938760655266898, 0.512268032346453, 0.4830422742026193], "val_accuracy": [0.3700000047683716, 0.4880000054836273, 0.5896666646003723, 0.6936666369438171, 0.7440000176429749, 0.7116666436195374, 0.7699999809265137, 0.7603333592414856, 0.7620000243186951, 0.7693333625793457, 0.7663333415985107, 0.762666642665863]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [2, 4, 4, 9], [2, 3, 2, 3], [79, 57], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 6, 6, 5, 2, 3, 1, 4, 2, 1, 8, 9, 8, 6, 1, 0, 9, 0, 0, 5, 1, 7, 8, 6], [3, 3, 3, 1, 0, 3, 0, 3, 3, 0, 0, 0, 5], [42, 71, 43, 77, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.14628571271896362, "mapping_values": [1, 3, 3, 1, 2, 0, 29, 29, 19, 10, 5, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.square(tf.math.add(beta, grad))), tf.math.add(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, alpha)), tf.math.subtract(tf.math.pow(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.sqrt(tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))))))), tf.math.sqrt(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.subtract(tf.math.negative(tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.8522267831299266, 2.3041753641697142, 2.2926148295701694, 2.224824733800892, 2.303776146288262, 2.3032380124723058, 2.302961513933457, 2.302970927735645], "accuracy": [0.1570466309785843, 0.09457138925790787, 0.14251750707626343, 0.16166952252388, 0.09826971590518951, 0.09906221181154251, 0.10091137140989304, 0.09813763201236725], "val_loss": [1.9753454072134835, 1.9730315889630998, 1.7924058096749442, 1.9743247713361467, 1.9735450744628906, 1.9736674172537667, 1.9736362184797014, 1.9735621043613978], "val_accuracy": [0.09833333641290665, 0.09733333438634872, 0.25433334708213806, 0.10233332961797714, 0.10233332961797714, 0.09966666996479034, 0.09700000286102295, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 1, 0], [9, 1, 1, 2], [2, 2, 2, 3], [79, 57], [1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 2, 6, 5, 2, 1, 9, 4, 2, 2, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [45, 38]], "fitness": -0.14628571271896362, "mapping_values": [1, 1, 1, 1, 0, 1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.add(beta, alpha), grad), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.8522267831299266, 2.3041753641697142, 2.2926148295701694, 2.224824733800892, 2.303776146288262, 2.3032380124723058, 2.302961513933457, 2.302970927735645], "accuracy": [0.1570466309785843, 0.09457138925790787, 0.14251750707626343, 0.16166952252388, 0.09826971590518951, 0.09906221181154251, 0.10091137140989304, 0.09813763201236725], "val_loss": [1.9753454072134835, 1.9730315889630998, 1.7924058096749442, 1.9743247713361467, 1.9735450744628906, 1.9736674172537667, 1.9736362184797014, 1.9735621043613978], "val_accuracy": [0.09833333641290665, 0.09733333438634872, 0.25433334708213806, 0.10233332961797714, 0.10233332961797714, 0.09966666996479034, 0.09700000286102295, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 1, 0], [2, 1, 4, 2], [2, 2, 2, 3], [79, 57], [1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 4, 2, 6, 6, 3, 3, 9, 1, 4, 4, 9, 2, 1, 1, 8, 9, 0, 5, 4, 5, 7, 0, 7], [1, 3, 4, 1, 2, 3, 2, 3, 3, 0, 1, 1, 0], [37, 66, 43, 99, 87, 78, 36], [0, 0, 0, 1, 0, 0], [1, 0, 1], [3, 3], [4, 3], [], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 3, 6, 9, 2, 9], [3, 0, 3, 1], [45, 81]], "fitness": -0.14628571271896362, "mapping_values": [1, 1, 1, 0, 1, 0, 36, 36, 23, 13, 5, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.pow(tf.math.add(beta, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.subtract(alpha, beta))), tf.math.pow(tf.math.add(beta, tf.math.pow(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), tf.math.add(beta, beta)))))), tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.subtract(grad, tf.math.sqrt(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.negative(tf.math.square(tf.math.pow(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))), alpha))))))))), tf.math.add(beta, alpha)))), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.8522267831299266, 2.3041753641697142, 2.2926148295701694, 2.224824733800892, 2.303776146288262, 2.3032380124723058, 2.302961513933457, 2.302970927735645], "accuracy": [0.1570466309785843, 0.09457138925790787, 0.14251750707626343, 0.16166952252388, 0.09826971590518951, 0.09906221181154251, 0.10091137140989304, 0.09813763201236725], "val_loss": [1.9753454072134835, 1.9730315889630998, 1.7924058096749442, 1.9743247713361467, 1.9735450744628906, 1.9736674172537667, 1.9736362184797014, 1.9735621043613978], "val_accuracy": [0.09833333641290665, 0.09733333438634872, 0.25433334708213806, 0.10233332961797714, 0.10233332961797714, 0.09966666996479034, 0.09700000286102295, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0], [1, 0, 1, 1, 0, 1, 0], [2, 1, 4, 9], [2, 2, 2, 3], [79, 57], [1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [3, 8, 0, 1, 8, 0, 2, 2, 8, 4, 6, 9, 8, 2, 1, 8, 1, 0, 5, 4, 5, 7, 5, 7], [1, 3, 4, 1, 2, 3, 2, 3, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 3, 6, 9, 2, 9], [3, 0, 3, 1], [45, 81]], "fitness": -0.14628571271896362, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 9, 5, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.sqrt(tf.math.negative(tf.math.subtract(tf.math.sqrt(tf.math.add(beta, alpha)), tf.math.negative(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(alpha)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.8522267831299266, 2.3041753641697142, 2.2926148295701694, 2.224824733800892, 2.303776146288262, 2.3032380124723058, 2.302961513933457, 2.302970927735645], "accuracy": [0.1570466309785843, 0.09457138925790787, 0.14251750707626343, 0.16166952252388, 0.09826971590518951, 0.09906221181154251, 0.10091137140989304, 0.09813763201236725], "val_loss": [1.9753454072134835, 1.9730315889630998, 1.7924058096749442, 1.9743247713361467, 1.9735450744628906, 1.9736674172537667, 1.9736362184797014, 1.9735621043613978], "val_accuracy": [0.09833333641290665, 0.09733333438634872, 0.25433334708213806, 0.10233332961797714, 0.10233332961797714, 0.09966666996479034, 0.09700000286102295, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 3, 2, 3], [79, 57], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [1, 2, 6, 6, 0, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [0, 3, 3, 1], [19, 38]], "fitness": -0.12600000202655792, "mapping_values": [1, 3, 3, 1, 2, 1, 20, 20, 11, 9, 2, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.add(beta, grad)), tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.add(beta, grad), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))), tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), grad)))), tf.math.add(beta, beta)), tf.math.add(beta, grad)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.3969387500482293, 3.0428234365685207, 3.3872098631752388, 3.0528588362688622, 2.70777264007913, 2.528229509724476, 2.445661666544122, 2.414434168395774, 2.3904312770789593, 2.3676600907819148], "accuracy": [0.0952318087220192, 0.09959053993225098, 0.09760929644107819, 0.10408136248588562, 0.09840179979801178, 0.1072513535618782, 0.10011887550354004, 0.10645885765552521, 0.10117553919553757, 0.11174217611551285], "val_loss": [2.1415318080357144, 2.411071232386998, 2.27028751373291, 2.104790823800223, 2.025576250893729, 1.998135771070208, 1.9887364251273019, 1.9816639082772392, 1.9771295956202917, 1.9743761335100447], "val_accuracy": [0.10000000149011612, 0.1003333330154419, 0.12266666442155838, 0.14033333957195282, 0.14900000393390656, 0.1446666717529297, 0.14166666567325592, 0.1379999965429306, 0.1340000033378601, 0.13500000536441803]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0], [7, 6, 4, 9], [2, 3, 2, 3], [83, 10], [1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [1, 5, 9, 6, 2, 3, 9, 8, 2, 1, 4, 9, 8, 9, 1, 0, 9, 0, 0, 5, 1, 7, 8, 6], [0, 3, 2, 1, 0, 3, 0, 3, 3, 0, 0, 0, 5], [37, 66, 43, 99, 87, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [1, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 4, 4, 3, 1, 2, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(alpha, grad)), tf.math.pow(tf.math.add(alpha, grad), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0], [2, 4, 4, 9], [0, 3, 2, 3], [79, 57], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 6, 1, 5, 2, 2, 1, 4, 2, 1, 4, 9, 8, 9, 1, 0, 9, 8, 0, 5, 1, 7, 8, 6], [3, 3, 3, 0, 0, 3, 0, 3, 3, 0, 0, 0, 5], [58, 45, 43, 99, 81, 78, 12, 44, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [1, 3, 9, 9, 9], [0, 3, 3, 1], [41, 38, 11]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 2, 36, 36, 24, 12, 9, 1, 1, 0, 1, 0, 5, 4, 1, 3], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.pow(tf.math.add(alpha, grad), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.square(grad))), tf.math.add(tf.math.add(grad, tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.sqrt(grad))))))), tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))))), tf.math.sqrt(tf.math.negative(tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))))))))), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302953835538885, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 1, 0], [7, 6, 4, 9], [2, 2, 2, 3, 1], [79, 57], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 8, 6, 1, 5, 0, 2, 2, 8, 4, 6, 9, 8, 2, 1, 8, 1, 0, 5, 4, 5, 7, 5, 7], [1, 2, 4, 1, 2, 3, 2, 3, 3, 0], [42, 71, 43, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4], [], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 3, 9, 2, 9], [0, 3, 3, 1], [45, 81]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, grad))), tf.math.pow(grad, tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [29740188.369025495, 558098852.940959, 2602348292.0914016, 7167695723.898032, 15484475471.799234, 28521104833.17501], "accuracy": [0.09800554811954498, 0.09826971590518951, 0.09642054885625839, 0.09615638852119446, 0.09919429570436478, 0.10474177449941635], "val_loss": [111578000.0, 891685193.1428572, 3008410477.714286, 7129759012.571428, 13923931282.285715, 24058692169.142857], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 3, 2, 3], [79, 57], [1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 8, 6, 6, 2, 3, 9, 8, 2, 1, 4, 9, 8, 9, 1, 0, 9, 0, 0, 5, 1, 7, 8, 6], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [0, 40, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 6, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.sqrt(tf.math.add(beta, alpha)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08677849918603897, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [2, 3, 2, 3], [79, 57], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 2, 6, 6, 6, 6, 1, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0, 7, 3, 4, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0, 4, 3, 4, 3, 3], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [0, 3, 3, 1], [78, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 37, 37, 22, 15, 4, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 49, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(alpha, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, grad), grad), tf.math.subtract(tf.math.pow(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.math.add(beta, beta), tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.subtract(grad, tf.math.add(beta, tf.math.subtract(tf.math.sqrt(tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.add(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.negative(tf.math.add(beta, grad)), grad)), tf.math.add(beta, grad))))))))))))))), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2643.561615850727, 2.3136186442906124, 2.3055453866369864, 2.3037350226261077, 2.3031258576455733, 2.302953717290072], "accuracy": [0.0940430611371994, 0.09879804402589798, 0.09959053993225098, 0.09549596905708313, 0.09998679161071777, 0.09153348207473755], "val_loss": [1.9899931635175432, 1.9783152171543665, 1.9750875745500838, 1.9740618297031947, 1.9737488201686315, 1.9737370354788644], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.09733333438634872, 0.09700000286102295, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [0, 1, 4, 9], [0, 3, 2, 3], [83, 10], [1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [9, 6, 6, 8, 2, 3, 9, 4, 2, 1, 4, 9, 8, 9, 1, 0, 9, 0, 0, 5, 1, 7, 8, 6], [3, 3, 3, 1, 0, 3, 0, 3, 3, 0, 0, 0, 5], [37, 66, 43, 99, 87, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [7, 3], [], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [1, 0, 3, 1], [45, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [1254920578.0701878, 23579603143.092327, 109992265352.80835, 303005613779.19745, 654653902238.2798, 1205893141153.5596], "accuracy": [0.09800554811954498, 0.09826971590518951, 0.09642054885625839, 0.09589222073554993, 0.09919429570436478, 0.10460969805717468], "val_loss": [4711779035.428572, 37682899236.57143, 127168390290.28572, 301418910281.1429, 588703334400.0, 1017234737444.5714], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [1, 3, 2, 3], [79, 57], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 2, 6, 6, 0, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 2, 0, 3, 2, 3, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [0, 3, 3, 1], [41, 38]], "fitness": -0.09857142716646194, "mapping_values": [1, 3, 3, 1, 2, 0, 12, 12, 7, 5, 2, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(alpha, tf.math.add(beta, grad)), tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.add(beta, grad), beta)))), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [12.83431180464105, 4.510843610782445, 66472.00783702641, 2.3186116382005335, 2.315893309731383, 2.3135831305033117, 2.3116314819601973], "accuracy": [0.09576013684272766, 0.10355303436517715, 0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9756321225847517, 454661.28571428574, 1.9872256687709264, 1.9848526545933314, 1.9828365189688546, 1.9811282839093889, 1.9797417776925224], "val_accuracy": [0.09966666996479034, 0.10433333367109299, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [0, 0, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 3, 2, 3], [11, 57], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0], [1, 5, 6, 6, 2, 3, 9, 8, 2, 1, 5, 9, 8, 9, 1, 0, 9, 0, 0, 5, 1, 7, 8, 6], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [41, 66, 43, 99, 87, 78], [0, 0, 0, 1, 0, 0], [1, 0, 1], [3, 3], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.09857142716646194, "mapping_values": [1, 7, 7, 4, 3, 2, 18, 18, 12, 6, 3, 1, 1, 0, 1, 0, 6, 5, 1, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.divide_no_nan(tf.math.divide_no_nan(alpha, tf.math.add(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), tf.math.sqrt(grad))), tf.math.add(tf.math.add(beta, grad), tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [12.83431180464105, 4.510843610782445, 66472.00783702641, 2.3186116382005335, 2.315893309731383, 2.3135831305033117, 2.3116314819601973], "accuracy": [0.09576013684272766, 0.10355303436517715, 0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9756321225847517, 454661.28571428574, 1.9872256687709264, 1.9848526545933314, 1.9828365189688546, 1.9811282839093889, 1.9797417776925224], "val_accuracy": [0.09966666996479034, 0.10433333367109299, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}]