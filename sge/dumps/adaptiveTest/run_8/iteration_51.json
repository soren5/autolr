[{"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 3, 2, 3], [48, 57], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 2, 6, 6, 0, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [44, 38]], "fitness": -0.7991428375244141, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, alpha), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.9920608694401274, 1.5157250176331372, 1.0293442921206433, 0.942573579956496, 0.808651811419036, 0.7904392602956684, 0.7166659734299815, 0.7209966298989364, 0.7017091897342971, 0.6697038386586383, 0.6857788764789609, 0.6407116554149027, 0.6245161089615626, 0.6085750100760963, 0.6112495057177566, 0.5864944116251423, 0.5658503730834641, 0.5583151811621901, 0.5564600134947675, 0.538736359436341, 0.5327481593453983, 0.5311397151420492], "accuracy": [0.32782986760139465, 0.488971084356308, 0.6165632009506226, 0.6419231295585632, 0.6959450244903564, 0.6979262828826904, 0.7271166443824768, 0.7272487282752991, 0.7327961921691895, 0.7421740889549255, 0.739400327205658, 0.7567031979560852, 0.7611940503120422, 0.7745344042778015, 0.7700436115264893, 0.7808743715286255, 0.7874785661697388, 0.787082314491272, 0.7857614755630493, 0.7955356240272522, 0.8030643463134766, 0.7952714562416077], "val_loss": [1.716618469783238, 0.8149677515029907, 0.7061741692679269, 0.5960006713867188, 0.5757230349949428, 0.553909352847508, 0.6019542387553624, 0.5240367650985718, 0.5148887123380389, 0.5362820795604161, 0.5323875801903861, 0.5041627373014178, 0.4830679041998727, 0.48676041194370817, 0.4702139752251761, 0.46974122524261475, 0.4414315479142325, 0.47544074058532715, 0.47385735171181814, 0.4385977728026254, 0.42639407941273283, 0.4403389436858041], "val_accuracy": [0.25, 0.6633333563804626, 0.6846666932106018, 0.734000027179718, 0.734666645526886, 0.7556666731834412, 0.7166666388511658, 0.7850000262260437, 0.7620000243186951, 0.7296666502952576, 0.734333336353302, 0.7793333530426025, 0.8016666769981384, 0.7839999794960022, 0.796999990940094, 0.8053333163261414, 0.8199999928474426, 0.7776666879653931, 0.7766666412353516, 0.8063333630561829, 0.8083333373069763, 0.7983333468437195]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [1, 3, 2, 3], [48, 57], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 2, 6, 6, 0, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.7631428837776184, "mapping_values": [1, 3, 3, 1, 2, 0, 18, 18, 10, 8, 2, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.negative(tf.math.subtract(tf.math.add(beta, grad), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(grad, tf.math.add(beta, tf.math.add(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), beta)))))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0872912309299196, 1.3742164134380919, 1.1072426482576498, 0.9464985946103047, 0.849878632641267, 0.7955916610376285, 0.7300983568176916, 0.7381063694290088, 0.7307107648545914, 0.6820157480718532, 0.6979747601881822], "accuracy": [0.3066965937614441, 0.5279355645179749, 0.6073173880577087, 0.6489235162734985, 0.6816800832748413, 0.7067758440971375, 0.7238145470619202, 0.7199841737747192, 0.7187954187393188, 0.737947404384613, 0.7334566116333008], "val_loss": [1.1584227425711495, 0.7419968332563128, 0.7508265801838466, 0.6031363180705479, 0.6295874970299857, 0.5578422376087734, 0.5528005872453962, 0.5346532038279942, 0.5254036358424595, 0.5060421058109829, 0.5398537261145455], "val_accuracy": [0.6443333625793457, 0.7123333215713501, 0.6790000200271606, 0.749666690826416, 0.7093333601951599, 0.7710000276565552, 0.746999979019165, 0.7586666941642761, 0.768666684627533, 0.7710000276565552, 0.7386666536331177]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0], [0, 1, 0, 1, 0, 1, 0], [7, 6, 4, 9], [1, 1, 1, 3], [48, 57], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [6, 2, 6, 6, 9, 1, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 1, 3, 1, 3, 2, 3, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.7631428837776184, "mapping_values": [1, 7, 7, 4, 3, 1, 13, 13, 8, 5, 2, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.add(beta, alpha), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0872912309299196, 1.3742164134380919, 1.1072426482576498, 0.9464985946103047, 0.849878632641267, 0.7955916610376285, 0.7300983568176916, 0.7381063694290088, 0.7307107648545914, 0.6820157480718532, 0.6979747601881822], "accuracy": [0.3066965937614441, 0.5279355645179749, 0.6073173880577087, 0.6489235162734985, 0.6816800832748413, 0.7067758440971375, 0.7238145470619202, 0.7199841737747192, 0.7187954187393188, 0.737947404384613, 0.7334566116333008], "val_loss": [1.1584227425711495, 0.7419968332563128, 0.7508265801838466, 0.6031363180705479, 0.6295874970299857, 0.5578422376087734, 0.5528005872453962, 0.5346532038279942, 0.5254036358424595, 0.5060421058109829, 0.5398537261145455], "val_accuracy": [0.6443333625793457, 0.7123333215713501, 0.6790000200271606, 0.749666690826416, 0.7093333601951599, 0.7710000276565552, 0.746999979019165, 0.7586666941642761, 0.768666684627533, 0.7710000276565552, 0.7386666536331177]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [0, 1, 0, 1, 0, 1, 0], [7, 2, 4, 9], [1, 2, 2, 3], [48, 57], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [4, 2, 6, 6, 9, 1, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 3, 3, 3, 0], [42, 30, 57, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.7631428837776184, "mapping_values": [1, 7, 7, 4, 3, 1, 13, 13, 8, 5, 3, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.add(beta, grad), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0872912309299196, 1.3742164134380919, 1.1072426482576498, 0.9464985946103047, 0.849878632641267, 0.7955916610376285, 0.7300983568176916, 0.7381063694290088, 0.7307107648545914, 0.6820157480718532, 0.6979747601881822], "accuracy": [0.3066965937614441, 0.5279355645179749, 0.6073173880577087, 0.6489235162734985, 0.6816800832748413, 0.7067758440971375, 0.7238145470619202, 0.7199841737747192, 0.7187954187393188, 0.737947404384613, 0.7334566116333008], "val_loss": [1.1584227425711495, 0.7419968332563128, 0.7508265801838466, 0.6031363180705479, 0.6295874970299857, 0.5578422376087734, 0.5528005872453962, 0.5346532038279942, 0.5254036358424595, 0.5060421058109829, 0.5398537261145455], "val_accuracy": [0.6443333625793457, 0.7123333215713501, 0.6790000200271606, 0.749666690826416, 0.7093333601951599, 0.7710000276565552, 0.746999979019165, 0.7586666941642761, 0.768666684627533, 0.7710000276565552, 0.7386666536331177]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [2, 6, 4, 9], [2, 1, 2, 3], [48, 57], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [3, 2, 6, 6, 0, 1, 9, 3, 2, 6, 3, 9, 8, 1, 1, 8, 9, 0], [2, 1, 1, 3, 0, 3, 3, 1, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [15, 38]], "fitness": -0.5671428442001343, "mapping_values": [1, 3, 3, 1, 2, 0, 7, 7, 3, 4, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.add(beta, alpha)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3011551944098816, 2.300156065281183, 2.2968947507009028, 2.2949438293801165, 2.29348075923635, 2.291209941086059, 2.2903009251108446, 2.28815464547691, 2.285904497534072, 2.284484646685954, 2.282911245927772, 2.2806762707090145, 2.279451198644642, 2.276794027013077, 2.27340786779215, 2.2725712583521966, 2.270016923005539, 2.269061684435259, 2.2665734120710193, 2.2651764653724467, 2.2614011556055758, 2.260837831076472, 2.2584310749093257, 2.2557626808513156, 2.255022948050559, 2.250235301565579, 2.250169570467113, 2.245801722227134, 2.244534102287338, 2.2411938073565505, 2.23778324970527, 2.2368679687473296, 2.233358446475679, 2.2326226943928913, 2.230437024614956, 2.2269388188649444, 2.223675438536157, 2.223510496242565, 2.218376986024056, 2.21569282037707, 2.212489891581295, 2.2074651002348564, 2.207401231169433, 2.2041544378268294, 2.1994419649938126, 2.1957197881503867, 2.193668667540464, 2.1905933638227424, 2.1870735373400647, 2.183283610193406, 2.178356097815547, 2.1765582273350006, 2.1707998945759965, 2.1685007469387356, 2.164194541222478, 2.1607391968095904, 2.1561150441883323, 2.151378630584084, 2.147027572825317, 2.142524113287905, 2.1365082277172767, 2.134728702493017, 2.1280604040208604, 2.1195426776408834, 2.1149386326398485, 2.1122267421651366, 2.1048184005796258, 2.0984426274700816, 2.096545217909817, 2.0889959134729295, 2.0827061333251335, 2.0778261648429273, 2.070742195969827, 2.0650983104899794, 2.0598842769235337, 2.051360584064293, 2.0442230515334554, 2.037608660002741, 2.0295824437109298, 2.0247385996270726, 2.014666978347067, 2.0129779347528194, 2.0019528816373295, 1.9940484827378202, 1.9863532362770269, 1.9816484005695887, 1.970779293311853, 1.962529409090762, 1.9534613151339932, 1.9460179912825113, 1.9382556031141078, 1.9284231978290354, 1.925356256837433, 1.9127019189682934, 1.9020944589542566, 1.890499001811477, 1.8776257356805666, 1.8785790010229817, 1.8651919994749775, 1.8607087394171198], "accuracy": [0.0944393053650856, 0.09826971590518951, 0.09932637959718704, 0.1080438494682312, 0.11094967275857925, 0.11927089840173721, 0.11359133571386337, 0.12521463632583618, 0.1302337795495987, 0.14093250036239624, 0.13657376170158386, 0.14330999553203583, 0.15480121970176697, 0.15982036292552948, 0.16774533689022064, 0.16853784024715424, 0.17157575488090515, 0.1802932173013687, 0.18319904804229736, 0.19072777032852173, 0.20221899449825287, 0.1958790123462677, 0.20657773315906525, 0.20961563289165497, 0.2114647924900055, 0.22255976498126984, 0.21965394914150238, 0.22784309089183807, 0.23365473747253418, 0.244485542178154, 0.25056135654449463, 0.2553163468837738, 0.2591467499732971, 0.25782591104507446, 0.2616563141345978, 0.27077004313468933, 0.27341169118881226, 0.27116629481315613, 0.28001585602760315, 0.28318583965301514, 0.2907145619392395, 0.29863953590393066, 0.3007528781890869, 0.3011491298675537, 0.30762118101119995, 0.310130774974823, 0.3090741038322449, 0.3139611780643463, 0.32333904504776, 0.32465988397598267, 0.33245277404785156, 0.33060362935066223, 0.3391890227794647, 0.33139610290527344, 0.3354906737804413, 0.3403777480125427, 0.3439439833164215, 0.34605732560157776, 0.3486989736557007, 0.3479065001010895, 0.35926562547683716, 0.35068023204803467, 0.3587372899055481, 0.37339848279953003, 0.37287017703056335, 0.37207767367362976, 0.37524765729904175, 0.3796063959598541, 0.38053098320961, 0.37921014428138733, 0.3910976052284241, 0.3897767663002014, 0.3903051018714905, 0.389380544424057, 0.39400342106819153, 0.39704135060310364, 0.3983621597290039, 0.40483424067497253, 0.4103817343711853, 0.4089288115501404, 0.41328755021095276, 0.40483424067497253, 0.4084004759788513, 0.41725003719329834, 0.41989168524742126, 0.4157971143722534, 0.4189670979976654, 0.4177783727645874, 0.42108044028282166, 0.4291374981403351, 0.4263637661933899, 0.42887333035469055, 0.4291374981403351, 0.4283449947834015, 0.44247788190841675, 0.43970412015914917, 0.4496103525161743, 0.4430062174797058, 0.4445911943912506, 0.44525161385536194], "val_loss": [1.968712397984096, 1.966850961957659, 1.9650044441223145, 1.96316317149571, 1.9613323892865862, 1.9594838278634208, 1.957662922995431, 1.9558271680559431, 1.9540064675467355, 1.9521739823477608, 1.9503389767238073, 1.9485008375985282, 1.9466742788042342, 1.944809913635254, 1.9429357392447335, 1.9410676274980818, 1.9391612325395857, 1.937237330845424, 1.9352882930210658, 1.9333456584385462, 1.9313688278198242, 1.9293789182390486, 1.9273571286882674, 1.9252873148236955, 1.9232075554983956, 1.9210619245256697, 1.9189025333949499, 1.916726725442069, 1.9144838196890694, 1.9122040612357003, 1.9098666054861886, 1.907515593937465, 1.9051104954310827, 1.9026548521859306, 1.9001811572483607, 1.897620405469622, 1.8950164658682687, 1.892386027744838, 1.8896867888314384, 1.8869213376726424, 1.8841132436479842, 1.8811875070844377, 1.8782212393624442, 1.8752078328813826, 1.872072764805385, 1.8688794544764928, 1.8656278337751115, 1.8622911317007882, 1.8588905334472656, 1.855395725795201, 1.8517968995230538, 1.8481269563947404, 1.8443207740783691, 1.8405014446803503, 1.8365607261657715, 1.8325330189296178, 1.8284072194780623, 1.8241588047572546, 1.8198088237217493, 1.8153679711478097, 1.8107799802507674, 1.8061530930655343, 1.8013697351728166, 1.7964344705854143, 1.79142849785941, 1.7863037245614188, 1.7810805865696497, 1.7757237298148019, 1.7702695301600866, 1.7646504129682268, 1.7589188984462194, 1.7530796868460519, 1.7470628874642509, 1.7409435680934362, 1.7347102165222168, 1.7283430099487305, 1.7218144280569894, 1.7151412623269218, 1.7082961627415247, 1.7013569559369768, 1.6942498343331474, 1.6871326991489954, 1.679790428706578, 1.6723310606820243, 1.6647663457053048, 1.6570747239249093, 1.649181536265782, 1.6411076613834925, 1.632965087890625, 1.6247149876185827, 1.616337605885097, 1.6077947616577148, 1.5992889404296875, 1.5905430316925049, 1.5816759041377477, 1.572690214429583, 1.5634420939854212, 1.5543169975280762, 1.5450807298932756, 1.5357700416019984], "val_accuracy": [0.050333332270383835, 0.06266666948795319, 0.07566666603088379, 0.09133332967758179, 0.1120000034570694, 0.12933333218097687, 0.14666666090488434, 0.16500000655651093, 0.1850000023841858, 0.20366667211055756, 0.2199999988079071, 0.23233333230018616, 0.24699999392032623, 0.2639999985694885, 0.2796666622161865, 0.2956666648387909, 0.3076666593551636, 0.3179999887943268, 0.32866665720939636, 0.3409999907016754, 0.3490000069141388, 0.3569999933242798, 0.3623333275318146, 0.36800000071525574, 0.3723333477973938, 0.37833333015441895, 0.382666677236557, 0.38499999046325684, 0.38866665959358215, 0.39500001072883606, 0.3970000147819519, 0.4013333320617676, 0.4046666622161865, 0.4090000092983246, 0.41233333945274353, 0.4163333475589752, 0.42133334279060364, 0.42800000309944153, 0.4300000071525574, 0.43533334136009216, 0.437333345413208, 0.437333345413208, 0.43933331966400146, 0.4449999928474426, 0.44733333587646484, 0.4503333270549774, 0.4533333480358124, 0.4569999873638153, 0.4596666693687439, 0.4623333215713501, 0.46566668152809143, 0.468666672706604, 0.47200000286102295, 0.47433334589004517, 0.476666659116745, 0.47833332419395447, 0.48100000619888306, 0.48399999737739563, 0.4886666536331177, 0.49133333563804626, 0.492333322763443, 0.49566665291786194, 0.4970000088214874, 0.4986666738986969, 0.503000020980835, 0.5070000290870667, 0.5086666941642761, 0.5106666684150696, 0.5149999856948853, 0.518666684627533, 0.5216666460037231, 0.5253333449363708, 0.528333306312561, 0.5293333530426025, 0.5299999713897705, 0.5323333144187927, 0.534333348274231, 0.534333348274231, 0.5360000133514404, 0.5383333563804626, 0.5396666526794434, 0.5419999957084656, 0.5443333387374878, 0.5450000166893005, 0.5463333129882812, 0.5473333597183228, 0.5490000247955322, 0.5526666641235352, 0.5543333292007446, 0.5563333630561829, 0.5550000071525574, 0.5569999814033508, 0.5590000152587891, 0.5606666803359985, 0.5613333582878113, 0.5613333582878113, 0.5649999976158142, 0.565666675567627, 0.5680000185966492, 0.5699999928474426]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [1, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [2, 3, 2, 3], [48, 57], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1], [1, 2, 6, 6, 0, 1, 9, 1, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 1, 3, 1, 3, 2, 3, 3, 0], [99, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [15, 38]], "fitness": -0.5671428442001343, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 7, 5, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, grad), tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.negative(tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))))), grad), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3011551944098816, 2.300156065281183, 2.2968947507009028, 2.2949438293801165, 2.29348075923635, 2.291209941086059, 2.2903009251108446, 2.28815464547691, 2.285904497534072, 2.284484646685954, 2.282911245927772, 2.2806762707090145, 2.279451198644642, 2.276794027013077, 2.27340786779215, 2.2725712583521966, 2.270016923005539, 2.269061684435259, 2.2665734120710193, 2.2651764653724467, 2.2614011556055758, 2.260837831076472, 2.2584310749093257, 2.2557626808513156, 2.255022948050559, 2.250235301565579, 2.250169570467113, 2.245801722227134, 2.244534102287338, 2.2411938073565505, 2.23778324970527, 2.2368679687473296, 2.233358446475679, 2.2326226943928913, 2.230437024614956, 2.2269388188649444, 2.223675438536157, 2.223510496242565, 2.218376986024056, 2.21569282037707, 2.212489891581295, 2.2074651002348564, 2.207401231169433, 2.2041544378268294, 2.1994419649938126, 2.1957197881503867, 2.193668667540464, 2.1905933638227424, 2.1870735373400647, 2.183283610193406, 2.178356097815547, 2.1765582273350006, 2.1707998945759965, 2.1685007469387356, 2.164194541222478, 2.1607391968095904, 2.1561150441883323, 2.151378630584084, 2.147027572825317, 2.142524113287905, 2.1365082277172767, 2.134728702493017, 2.1280604040208604, 2.1195426776408834, 2.1149386326398485, 2.1122267421651366, 2.1048184005796258, 2.0984426274700816, 2.096545217909817, 2.0889959134729295, 2.0827061333251335, 2.0778261648429273, 2.070742195969827, 2.0650983104899794, 2.0598842769235337, 2.051360584064293, 2.0442230515334554, 2.037608660002741, 2.0295824437109298, 2.0247385996270726, 2.014666978347067, 2.0129779347528194, 2.0019528816373295, 1.9940484827378202, 1.9863532362770269, 1.9816484005695887, 1.970779293311853, 1.962529409090762, 1.9534613151339932, 1.9460179912825113, 1.9382556031141078, 1.9284231978290354, 1.925356256837433, 1.9127019189682934, 1.9020944589542566, 1.890499001811477, 1.8776257356805666, 1.8785790010229817, 1.8651919994749775, 1.8607087394171198], "accuracy": [0.0944393053650856, 0.09826971590518951, 0.09932637959718704, 0.1080438494682312, 0.11094967275857925, 0.11927089840173721, 0.11359133571386337, 0.12521463632583618, 0.1302337795495987, 0.14093250036239624, 0.13657376170158386, 0.14330999553203583, 0.15480121970176697, 0.15982036292552948, 0.16774533689022064, 0.16853784024715424, 0.17157575488090515, 0.1802932173013687, 0.18319904804229736, 0.19072777032852173, 0.20221899449825287, 0.1958790123462677, 0.20657773315906525, 0.20961563289165497, 0.2114647924900055, 0.22255976498126984, 0.21965394914150238, 0.22784309089183807, 0.23365473747253418, 0.244485542178154, 0.25056135654449463, 0.2553163468837738, 0.2591467499732971, 0.25782591104507446, 0.2616563141345978, 0.27077004313468933, 0.27341169118881226, 0.27116629481315613, 0.28001585602760315, 0.28318583965301514, 0.2907145619392395, 0.29863953590393066, 0.3007528781890869, 0.3011491298675537, 0.30762118101119995, 0.310130774974823, 0.3090741038322449, 0.3139611780643463, 0.32333904504776, 0.32465988397598267, 0.33245277404785156, 0.33060362935066223, 0.3391890227794647, 0.33139610290527344, 0.3354906737804413, 0.3403777480125427, 0.3439439833164215, 0.34605732560157776, 0.3486989736557007, 0.3479065001010895, 0.35926562547683716, 0.35068023204803467, 0.3587372899055481, 0.37339848279953003, 0.37287017703056335, 0.37207767367362976, 0.37524765729904175, 0.3796063959598541, 0.38053098320961, 0.37921014428138733, 0.3910976052284241, 0.3897767663002014, 0.3903051018714905, 0.389380544424057, 0.39400342106819153, 0.39704135060310364, 0.3983621597290039, 0.40483424067497253, 0.4103817343711853, 0.4089288115501404, 0.41328755021095276, 0.40483424067497253, 0.4084004759788513, 0.41725003719329834, 0.41989168524742126, 0.4157971143722534, 0.4189670979976654, 0.4177783727645874, 0.42108044028282166, 0.4291374981403351, 0.4263637661933899, 0.42887333035469055, 0.4291374981403351, 0.4283449947834015, 0.44247788190841675, 0.43970412015914917, 0.4496103525161743, 0.4430062174797058, 0.4445911943912506, 0.44525161385536194], "val_loss": [1.968712397984096, 1.966850961957659, 1.9650044441223145, 1.96316317149571, 1.9613323892865862, 1.9594838278634208, 1.957662922995431, 1.9558271680559431, 1.9540064675467355, 1.9521739823477608, 1.9503389767238073, 1.9485008375985282, 1.9466742788042342, 1.944809913635254, 1.9429357392447335, 1.9410676274980818, 1.9391612325395857, 1.937237330845424, 1.9352882930210658, 1.9333456584385462, 1.9313688278198242, 1.9293789182390486, 1.9273571286882674, 1.9252873148236955, 1.9232075554983956, 1.9210619245256697, 1.9189025333949499, 1.916726725442069, 1.9144838196890694, 1.9122040612357003, 1.9098666054861886, 1.907515593937465, 1.9051104954310827, 1.9026548521859306, 1.9001811572483607, 1.897620405469622, 1.8950164658682687, 1.892386027744838, 1.8896867888314384, 1.8869213376726424, 1.8841132436479842, 1.8811875070844377, 1.8782212393624442, 1.8752078328813826, 1.872072764805385, 1.8688794544764928, 1.8656278337751115, 1.8622911317007882, 1.8588905334472656, 1.855395725795201, 1.8517968995230538, 1.8481269563947404, 1.8443207740783691, 1.8405014446803503, 1.8365607261657715, 1.8325330189296178, 1.8284072194780623, 1.8241588047572546, 1.8198088237217493, 1.8153679711478097, 1.8107799802507674, 1.8061530930655343, 1.8013697351728166, 1.7964344705854143, 1.79142849785941, 1.7863037245614188, 1.7810805865696497, 1.7757237298148019, 1.7702695301600866, 1.7646504129682268, 1.7589188984462194, 1.7530796868460519, 1.7470628874642509, 1.7409435680934362, 1.7347102165222168, 1.7283430099487305, 1.7218144280569894, 1.7151412623269218, 1.7082961627415247, 1.7013569559369768, 1.6942498343331474, 1.6871326991489954, 1.679790428706578, 1.6723310606820243, 1.6647663457053048, 1.6570747239249093, 1.649181536265782, 1.6411076613834925, 1.632965087890625, 1.6247149876185827, 1.616337605885097, 1.6077947616577148, 1.5992889404296875, 1.5905430316925049, 1.5816759041377477, 1.572690214429583, 1.5634420939854212, 1.5543169975280762, 1.5450807298932756, 1.5357700416019984], "val_accuracy": [0.050333332270383835, 0.06266666948795319, 0.07566666603088379, 0.09133332967758179, 0.1120000034570694, 0.12933333218097687, 0.14666666090488434, 0.16500000655651093, 0.1850000023841858, 0.20366667211055756, 0.2199999988079071, 0.23233333230018616, 0.24699999392032623, 0.2639999985694885, 0.2796666622161865, 0.2956666648387909, 0.3076666593551636, 0.3179999887943268, 0.32866665720939636, 0.3409999907016754, 0.3490000069141388, 0.3569999933242798, 0.3623333275318146, 0.36800000071525574, 0.3723333477973938, 0.37833333015441895, 0.382666677236557, 0.38499999046325684, 0.38866665959358215, 0.39500001072883606, 0.3970000147819519, 0.4013333320617676, 0.4046666622161865, 0.4090000092983246, 0.41233333945274353, 0.4163333475589752, 0.42133334279060364, 0.42800000309944153, 0.4300000071525574, 0.43533334136009216, 0.437333345413208, 0.437333345413208, 0.43933331966400146, 0.4449999928474426, 0.44733333587646484, 0.4503333270549774, 0.4533333480358124, 0.4569999873638153, 0.4596666693687439, 0.4623333215713501, 0.46566668152809143, 0.468666672706604, 0.47200000286102295, 0.47433334589004517, 0.476666659116745, 0.47833332419395447, 0.48100000619888306, 0.48399999737739563, 0.4886666536331177, 0.49133333563804626, 0.492333322763443, 0.49566665291786194, 0.4970000088214874, 0.4986666738986969, 0.503000020980835, 0.5070000290870667, 0.5086666941642761, 0.5106666684150696, 0.5149999856948853, 0.518666684627533, 0.5216666460037231, 0.5253333449363708, 0.528333306312561, 0.5293333530426025, 0.5299999713897705, 0.5323333144187927, 0.534333348274231, 0.534333348274231, 0.5360000133514404, 0.5383333563804626, 0.5396666526794434, 0.5419999957084656, 0.5443333387374878, 0.5450000166893005, 0.5463333129882812, 0.5473333597183228, 0.5490000247955322, 0.5526666641235352, 0.5543333292007446, 0.5563333630561829, 0.5550000071525574, 0.5569999814033508, 0.5590000152587891, 0.5606666803359985, 0.5613333582878113, 0.5613333582878113, 0.5649999976158142, 0.565666675567627, 0.5680000185966492, 0.5699999928474426]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0], [0, 1, 0, 1, 0, 1, 0], [7, 6, 4, 9], [1, 2, 2, 3], [48, 57], [0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [2, 2, 6, 6, 0, 1, 2, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 47, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [94, 38]], "fitness": -0.5191428661346436, "mapping_values": [1, 7, 7, 4, 3, 1, 23, 23, 13, 10, 3, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.negative(tf.math.subtract(grad, tf.math.add(tf.math.pow(tf.math.add(tf.math.subtract(grad, tf.math.pow(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(beta, beta)), tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.sqrt(grad)))), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.42517565695239, 2.3068706315695224, 2.764185534208804, 2.1214244708629444, 2.232718474734902, 2.2078365299286324, 2.0425674446727213], "accuracy": [0.22044643759727478, 0.1628582775592804, 0.21172896027565002, 0.22876766324043274, 0.2044644057750702, 0.1946902722120285, 0.29480913281440735], "val_loss": [1.6478825637272425, 1.522174494607108, 1.975731713431222, 1.9522694178989954, 1.975647245134626, 1.904585838317871, 1.5946824210030692], "val_accuracy": [0.41466665267944336, 0.5120000243186951, 0.10233332961797714, 0.1433333307504654, 0.09833333641290665, 0.18933333456516266, 0.38966667652130127]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [1, 1, 1, 1, 0, 1, 0], [8, 6, 4, 9], [2, 0, 2, 3], [48, 57], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 2, 6, 6, 0, 1, 9, 1, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 3, 0, 1, 0, 3, 0, 2, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [6, 7, 9, 2, 9], [3, 3, 3, 1], [15, 38]], "fitness": -0.13371428847312927, "mapping_values": [1, 1, 1, 0, 1, 0, 19, 19, 11, 8, 4, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(alpha, tf.math.add(beta, tf.math.add(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, beta))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(sigma, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [18691034773968.223, 8524057445395.07, 8197684082444.274, 8052519355279.063, 7898056127257.664, 6897848673471.112, 5.364647902684573e+33], "accuracy": [0.10381719470024109, 0.09985470771789551, 0.1006472036242485, 0.09628847241401672, 0.1002509593963623, 0.09496764093637466, 0.08849557489156723], "val_loss": [5486138846646.857, 4528215836964.571, 4963330986569.143, 5039312750884.571, 4802841935872.0, 4292059594752.0, 3.432996470582206e+33], "val_accuracy": [0.10566666722297668, 0.10599999874830246, 0.09600000083446503, 0.09300000220537186, 0.09233333170413971, 0.08966666460037231, 0.0860000029206276]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [1, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [2, 2, 2, 3], [48, 57], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1], [2, 2, 6, 6, 0, 1, 6, 8, 2, 1, 1, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 1, 0, 3, 2, 3, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 21, 21, 12, 9, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.negative(tf.math.subtract(tf.math.add(beta, grad), tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.math.subtract(alpha, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))))), tf.math.add(beta, beta))), tf.math.add(beta, grad))))), tf.math.add(beta, grad)), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07594769448041916, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [1, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [1, 1, 2, 3], [48, 57], [0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1], [2, 2, 5, 6, 0, 1, 6, 4, 2, 1, 2, 9, 8, 1, 1, 8, 9, 0], [1, 3, 1, 0, 0, 3, 3, 3, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [4, 3, 2, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 21, 21, 12, 9, 3, 1, 1, 0, 1, 0, 7, 3, 4, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.negative(tf.math.subtract(tf.math.add(beta, alpha), tf.math.divide_no_nan(tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), grad)))), tf.math.add(beta, grad)), tf.math.add(beta, grad)), tf.math.add(beta, grad)))))), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(sigma, tf.math.add(sigma, sigma)), alpha)", "other_info": {"loss": [2.3026404998022505, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [1, 3, 2, 3], [48, 57], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 2, 6, 6, 0, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [2, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 12, 12, 7, 5, 2, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(alpha, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.negative(grad)), tf.math.add(beta, grad))), tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [1, 3, 2, 3], [48, 57], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 2, 6, 6, 0, 1, 9, 4, 2, 8, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 1, 0, 3, 2, 3, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [6, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 17, 17, 10, 7, 2, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.negative(tf.math.subtract(tf.math.add(beta, grad), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(alpha, tf.math.add(beta, tf.math.add(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.sqrt(grad)))))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(sigma, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.3026404998022505, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 3, 2, 3], [48, 57], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 2, 6, 6, 0, 1, 9, 1, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 1, 1, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07594769448041916, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 3, 2, 3], [48, 57], [1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 2, 3, 6, 0, 1, 9, 1, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 3, 0, 3, 0, 3, 0, 2, 3, 0], [95, 82, 0, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 5, 9, 2, 9], [0, 3, 3, 1], [15, 38]], "fitness": -0.040571428835392, "mapping_values": [1, 1, 1, 0, 1, 1, 14, 14, 8, 6, 3, 1, 1, 0, 1, 0, 3, 3, 0, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.subtract(beta, tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))), tf.math.subtract(grad, tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3020346260121185, 2.3032081211562705, 2.3019205925880626, 2.3021128871075276, 2.302877551229827, 2.302820291784949], "accuracy": [0.09272222965955734, 0.09074098616838455, 0.09153348207473755, 0.09153348207473755, 0.08889182657003403, 0.09272222965955734], "val_loss": [1.9706828934805733, 1.970780645098005, 1.9708829607282365, 1.9709909984043665, 1.9710986273629325, 1.9712172916957311], "val_accuracy": [0.03766666725277901, 0.03466666489839554, 0.033666666597127914, 0.03233333304524422, 0.03166666626930237, 0.029999999329447746]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [1, 3, 2, 3], [48, 57], [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [1, 8, 3, 6, 0, 1, 0, 3, 2, 6, 3, 9, 8, 1, 1, 8, 9, 0], [3, 1, 3, 0, 0, 3, 3, 1, 3, 0], [42, 30, 43, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 3, 3, 1, 2, 0, 20, 20, 11, 9, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.subtract(alpha, grad))), tf.math.negative(tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.add(beta, alpha))))))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3019721948270706, 2.3029470802408403, 2.3016620778829635, 2.301645591416143, 2.30211329856931, 2.301844420135139], "accuracy": [0.09298639744520187, 0.08968432247638702, 0.08942015469074249, 0.09206181764602661, 0.08915598690509796, 0.09272222965955734], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [1, 2, 2, 3], [48, 57], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 2, 6, 6, 0, 1, 9, 1, 8, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 1, 3, 2, 3, 3, 0], [42, 30, 43, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 3, 3, 1, 2, 0, 12, 12, 7, 5, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(grad, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.divide_no_nan(tf.math.negative(tf.math.add(beta, grad)), tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), alpha)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3019721948270706, 2.3029470802408403, 2.3016620778829635, 2.301645591416143, 2.30211329856931, 2.301844420135139], "accuracy": [0.09298639744520187, 0.08968432247638702, 0.08942015469074249, 0.09206181764602661, 0.08915598690509796, 0.09272222965955734], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [1, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 3, 2, 3], [48, 57], [1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 2, 6, 9, 0, 1, 9, 1, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 3, 3, 0, 1, 0, 3, 3, 0], [42, 30, 43, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [15, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3019721948270706, 2.3029470802408403, 2.3016620778829635, 2.301645591416143, 2.30211329856931, 2.301844420135139], "accuracy": [0.09298639744520187, 0.08968432247638702, 0.08942015469074249, 0.09206181764602661, 0.08915598690509796, 0.09272222965955734], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [0, 0, 1, 1, 0, 1, 0], [7, 6, 4, 9], [1, 3, 2, 3], [48, 57], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [1, 8, 3, 6, 0, 1, 0, 3, 2, 6, 3, 9, 8, 1, 1, 8, 9, 0], [4, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 7, 7, 4, 3, 1, 3, 3, 1, 2, 0, 6, 4, 3, 1, 0, 4, 2, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, sigma))", "other_info": {"loss": [2.3019721948270706, 2.3029470802408403, 2.3016620778829635, 2.301645591416143, 2.30211329856931, 2.301844420135139], "accuracy": [0.09298639744520187, 0.08968432247638702, 0.08942015469074249, 0.09206181764602661, 0.08915598690509796, 0.09272222965955734], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [2, 6, 4, 9], [0, 0, 2, 3], [48, 57], [1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [1, 8, 3, 6, 0, 1, 0, 3, 2, 6, 3, 9, 8, 1, 1, 8, 9, 0], [3, 1, 3, 0, 0, 3, 3, 1, 3, 0], [42, 71, 43, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 1, 1, 0, 1, 0, 1, 0], [0, 2, 9, 2, 9], [3, 3, 3, 1], [15, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 3, 3, 1, 2, 2, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3019721948270706, 2.3029470802408403, 2.3016620778829635, 2.301645591416143, 2.30211329856931, 2.301844420135139], "accuracy": [0.09298639744520187, 0.08968432247638702, 0.08942015469074249, 0.09206181764602661, 0.08915598690509796, 0.09272222965955734], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [1, 1, 2, 3], [48, 57], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 2, 6, 6, 0, 1, 6, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 1, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 5, 4, 2, 2, 0, 6, 3, 3, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.subtract(sigma, sigma)))", "other_info": {"loss": [2.3019721948270706, 2.3029470802408403, 2.3016620778829635, 2.301645591416143, 2.30211329856931, 2.301844420135139], "accuracy": [0.09298639744520187, 0.08968432247638702, 0.08942015469074249, 0.09206181764602661, 0.08915598690509796, 0.09272222965955734], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]