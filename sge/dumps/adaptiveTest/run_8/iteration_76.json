[{"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.7919999957084656, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 6, 6, 2, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(grad, tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta))), tf.math.add(beta, tf.math.pow(tf.math.negative(grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.2347348321147047, 1.8604007934802842, 1.3104258144630843, 1.098151685271706, 1.0042884146705862, 0.9082149149735118, 0.852938845070708, 0.8214259282346918, 0.8090224577183611, 0.7745703564674595, 0.7555792666051555, 0.7238923390748369, 0.7239519471048979, 0.704915990635483, 0.6875175003598568, 0.6833585412778466, 0.6726310528374903, 0.6603455496360251, 0.6535378928827557, 0.6546602423054715, 0.639280426322729, 0.6295724193953158, 0.626783218499991, 0.6160647829667594, 0.6181012054775149, 0.6041462876305147, 0.6043742227516532, 0.6069176699255184, 0.5886515919731719, 0.5887630109726525, 0.5886914594739325, 0.5884390263163166], "accuracy": [0.230484738945961, 0.43745872378349304, 0.5588429570198059, 0.615770697593689, 0.637432336807251, 0.6713775992393494, 0.6956809163093567, 0.7009642124176025, 0.7041342258453369, 0.722229540348053, 0.7214370369911194, 0.7342491149902344, 0.7351737022399902, 0.7400607466697693, 0.7498348951339722, 0.7449478507041931, 0.7485140562057495, 0.7560427784919739, 0.7617223858833313, 0.7532690763473511, 0.7581561207771301, 0.7650244235992432, 0.7685906887054443, 0.7778365015983582, 0.7677981853485107, 0.7726852297782898, 0.7734777331352234, 0.7746664881706238, 0.7843085527420044, 0.7778365015983582, 0.7866860628128052, 0.7808743715286255], "val_loss": [1.7721676145281111, 1.163130828312465, 0.8294586965015956, 0.7512776681355068, 0.6978175469807216, 0.6309072290148053, 0.5919530391693115, 0.6104167529514858, 0.5681866407394409, 0.542391266141619, 0.5346219539642334, 0.5265179021017892, 0.5180266754967826, 0.5126682690211705, 0.5191601514816284, 0.49897984095982145, 0.48145326546260286, 0.4883770602090018, 0.48060483591897146, 0.4931568588529314, 0.4723800080163138, 0.46702470098223003, 0.4705486808504377, 0.4827953406742641, 0.45965938908713205, 0.4575559156281607, 0.45671264614377705, 0.48255780764988493, 0.4525209835597447, 0.4504213162830898, 0.45807577882494244, 0.4454099450792585], "val_accuracy": [0.5346666574478149, 0.5730000138282776, 0.6809999942779541, 0.6869999766349792, 0.7023333311080933, 0.7390000224113464, 0.746666669845581, 0.734000027179718, 0.7566666603088379, 0.7683333158493042, 0.7726666927337646, 0.7736666798591614, 0.7803333401679993, 0.7756666541099548, 0.7713333368301392, 0.7870000004768372, 0.7953333258628845, 0.7919999957084656, 0.7950000166893005, 0.7886666655540466, 0.8009999990463257, 0.8053333163261414, 0.7996666431427002, 0.781333327293396, 0.809333324432373, 0.8029999732971191, 0.812333345413208, 0.781000018119812, 0.8090000152587891, 0.8080000281333923, 0.7946666479110718, 0.8103333115577698]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [50, 57], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 8, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 1, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1, 1, 1], [2, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [41, 38]], "fitness": -0.7754285931587219, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.289745989886289, 2.2623930381761803, 2.230377551130316, 2.1864421692002862, 2.125124091595675, 2.037523197932502, 1.924064237459571, 1.7965541814438277, 1.6526266955712121, 1.5273905761363784, 1.413246288543301, 1.3295951626005111, 1.2613655170508191, 1.2121358537371636, 1.154351761312438, 1.110795155744259, 1.0788904786062687, 1.0410674549506371, 1.013881841757357, 0.9998571750211079, 0.9653904562959456, 0.9536265945626665, 0.9398822862993945, 0.9183954338293034, 0.9069698764789437, 0.8957350349083018, 0.8810785692113816, 0.8649374066153694, 0.8545075982411493, 0.8526300562371226, 0.8447338101130435, 0.8305808426272269, 0.8260314571244952, 0.8259396047529811, 0.8125003686024922, 0.8044471133654348, 0.7914307317666374, 0.8022262066378333, 0.780867850917473, 0.7697984516943419, 0.7793574360981751, 0.770045081559205, 0.7632823810601326, 0.7562335047109677, 0.7508077364020801, 0.7504255503097215, 0.7470014782519373, 0.7332121000597269, 0.7349387062161181, 0.7317387167221173, 0.7328427718882673, 0.7233909932755523, 0.7189294546429256, 0.7161707076744838, 0.7226987765874876, 0.7062695265257158, 0.7021161836954928, 0.7140413675609282, 0.705882790160768, 0.6953562535173338, 0.6971141262266063, 0.6963992270307298, 0.6864556516197773, 0.6918903222929265, 0.687220621834877, 0.6863189780669615, 0.675725924482183, 0.6825496145070048, 0.6805040865542158, 0.6732080392770764, 0.6673509417082797, 0.669520944156163, 0.6704921836094724, 0.6642038417986718, 0.670494023748377, 0.6642875103997107, 0.6527990919645231, 0.664133749295062, 0.6610202525962913, 0.6538176074586666, 0.6509364671584968], "accuracy": [0.12574297189712524, 0.19733192026615143, 0.27182671427726746, 0.3197728097438812, 0.3621714413166046, 0.40681546926498413, 0.4325716495513916, 0.45885616540908813, 0.48249900341033936, 0.5126138925552368, 0.540219247341156, 0.5538238286972046, 0.5669000148773193, 0.5838066339492798, 0.5972790718078613, 0.6155065298080444, 0.6151102781295776, 0.6362435817718506, 0.6487914323806763, 0.6441685557365417, 0.6564522385597229, 0.6664905548095703, 0.670320987701416, 0.6707172393798828, 0.6777176260948181, 0.6790384650230408, 0.6816800832748413, 0.6900013089179993, 0.6950204968452454, 0.6939638257026672, 0.6976621150970459, 0.7030775547027588, 0.7041342258453369, 0.7047945857048035, 0.7098137736320496, 0.7074362635612488, 0.7157574892044067, 0.7047945857048035, 0.7177387475967407, 0.7181349992752075, 0.7195879220962524, 0.7243428826332092, 0.724739134311676, 0.7275128960609436, 0.7224937081336975, 0.7231541275978088, 0.7305507659912109, 0.7273808121681213, 0.7302865982055664, 0.7326641082763672, 0.7283053994178772, 0.739400327205658, 0.7387399077415466, 0.7343811988830566, 0.7368907928466797, 0.7415136694908142, 0.7469290494918823, 0.7375511527061462, 0.7437590956687927, 0.7412495017051697, 0.7454761862754822, 0.7478536367416382, 0.7490423917770386, 0.743891179561615, 0.7479857206344604, 0.7430986762046814, 0.752740740776062, 0.7485140562057495, 0.7491744756698608, 0.750231146812439, 0.7577598690986633, 0.7604015469551086, 0.7549861073493958, 0.7588165402412415, 0.752740740776062, 0.7568352818489075, 0.7568352818489075, 0.7592127919197083, 0.759609043598175, 0.7574957013130188, 0.7609298825263977], "val_loss": [1.943952969142369, 1.9154487337384904, 1.8790407861982072, 1.8286340577261788, 1.7578425407409668, 1.660820824759347, 1.5369162900107247, 1.3974697249276298, 1.2569794654846191, 1.1313558306012834, 1.0292531762804304, 0.9502357414790562, 0.8894796371459961, 0.8419605493545532, 0.8025991405759539, 0.771683829171317, 0.7434407472610474, 0.7214604445866176, 0.7016360930034092, 0.6862683125904628, 0.6706855126789638, 0.6588304724012103, 0.6481787817818778, 0.6371689353670392, 0.6297054631369454, 0.6210472924368722, 0.6133405991962978, 0.6032348019736153, 0.598969714982169, 0.5931140865598407, 0.5866410221372332, 0.5817902428763253, 0.5755340712411063, 0.5729363475527082, 0.5688054731913975, 0.5652281727109637, 0.5576588937214443, 0.5577372482844761, 0.5518559047154018, 0.5478430816105434, 0.5464400053024292, 0.5415971279144287, 0.5378675631114415, 0.5358550889151437, 0.5362091745649066, 0.5303581442151751, 0.5283953632627215, 0.5257811716624669, 0.5225095408303397, 0.5217561210904803, 0.5173324857439313, 0.5156322887965611, 0.5138323307037354, 0.5104727915355137, 0.5084085464477539, 0.5100293159484863, 0.5053736652646746, 0.5056898083005633, 0.5018041985375541, 0.5026328904288155, 0.49982707841055735, 0.4986708504813058, 0.4962535926273891, 0.4939382927758353, 0.4922838381358555, 0.493350761277335, 0.48861707959856304, 0.4899883610861642, 0.4876553841999599, 0.4866629328046526, 0.4837634563446045, 0.48433836868831087, 0.48070994445255827, 0.4795194523675101, 0.47909574849264963, 0.4786419527871268, 0.4773120369229998, 0.47873759269714355, 0.47505710806165424, 0.47536819321768625, 0.47330313069479807], "val_accuracy": [0.2706666588783264, 0.3876666724681854, 0.43700000643730164, 0.46799999475479126, 0.512333333492279, 0.5333333611488342, 0.5606666803359985, 0.578000009059906, 0.6073333621025085, 0.6393333077430725, 0.6546666622161865, 0.6776666641235352, 0.687333345413208, 0.6926666498184204, 0.699999988079071, 0.7009999752044678, 0.7143333554267883, 0.7096666693687439, 0.718666672706604, 0.7193333506584167, 0.7279999852180481, 0.731333315372467, 0.7329999804496765, 0.7393333315849304, 0.7419999837875366, 0.746666669845581, 0.7450000047683716, 0.7543333172798157, 0.7566666603088379, 0.7566666603088379, 0.7590000033378601, 0.7566666603088379, 0.7603333592414856, 0.7616666555404663, 0.7639999985694885, 0.7676666378974915, 0.7683333158493042, 0.7683333158493042, 0.7726666927337646, 0.7713333368301392, 0.7743333578109741, 0.7736666798591614, 0.7766666412353516, 0.778333306312561, 0.7689999938011169, 0.7796666622161865, 0.7776666879653931, 0.7793333530426025, 0.7816666960716248, 0.7823333144187927, 0.7816666960716248, 0.7833333611488342, 0.7833333611488342, 0.7866666913032532, 0.7853333353996277, 0.7870000004768372, 0.7896666526794434, 0.7900000214576721, 0.7870000004768372, 0.7886666655540466, 0.7856666445732117, 0.7906666398048401, 0.7896666526794434, 0.7896666526794434, 0.7940000295639038, 0.7929999828338623, 0.7943333387374878, 0.79666668176651, 0.7923333048820496, 0.7950000166893005, 0.7953333258628845, 0.7990000247955322, 0.7953333258628845, 0.7976666688919067, 0.800000011920929, 0.8013333082199097, 0.7993333339691162, 0.7990000247955322, 0.7973333597183228, 0.7986666560173035, 0.8009999990463257]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [50, 57], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [6, 4, 2, 8, 1, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 1, 1, 2, 3, 3, 0], [15, 2, 72, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [2, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [24, 38]], "fitness": -0.46314287185668945, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 7, 7, 2, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))))), tf.math.add(beta, alpha)), alpha)), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.30094347109081, 2.300617757773812, 2.30070285664227, 2.2991400746590016, 2.298773953470934, 2.296560090719638, 2.2943750812770856, 2.295724920419701, 2.292469213572885, 2.291958493169871, 2.290454452221404, 2.2904112484193417, 2.2889321603007904, 2.287798919382978, 2.288002314301152, 2.285546502637479, 2.285084526158752, 2.283811527267817, 2.2827318189575876, 2.2838615659772445, 2.278259253662496, 2.281844511637992, 2.2790378734435954, 2.2771065720099783, 2.276096548780301, 2.27510719616746, 2.2731652993882543, 2.2713654263616947, 2.2718974703480272, 2.271452052639523, 2.2694717698077707, 2.2681354950479213, 2.267962889223523, 2.26726907837298, 2.2645805445738976, 2.2648025935178957, 2.262277363565667, 2.2640042170840893, 2.2613360984781083, 2.2603234852687666, 2.258883165629816, 2.2558656711273537, 2.257362621681738, 2.254142460617108, 2.2518167172314674, 2.2537419290558978, 2.2517980386111494, 2.2496012168522004, 2.248648595249396, 2.2484759440464255, 2.2443702842234745, 2.245152023159486, 2.2443563557729242, 2.2415954297040166, 2.241255307351877, 2.2403308739672876, 2.239114903188133, 2.2359428652021562, 2.235649119184285, 2.2333775281496746, 2.232785741997244, 2.230213053616015, 2.2284326172618187, 2.23077167477102, 2.2275322054229503, 2.2254120439129608, 2.2223764027996213, 2.2237192694505663, 2.220242286229162, 2.2189561574056937, 2.217820155669386, 2.2185134694655306, 2.2159244332724812, 2.2129069255752776, 2.211486333522814, 2.2107880927977575, 2.2087519709554724, 2.207974708217278, 2.203750888448838, 2.2052526123503875, 2.199024718403895, 2.198024945787514, 2.1971804075993093, 2.193275094929782, 2.195356417577721, 2.191439437356056, 2.189666489946403, 2.1870517307158552, 2.185394935289221, 2.1835111754839023, 2.183814969470299, 2.1809851914474976, 2.17842172077382, 2.173586777188381, 2.1739414058199586, 2.171385293088144, 2.1703478658928326, 2.1661899424247957, 2.1671222252317346, 2.1627390242649533], "accuracy": [0.09998679161071777, 0.09826971590518951, 0.09668471664190292, 0.10540219396352768, 0.09893012791872025, 0.10302469879388809, 0.10936468094587326, 0.10210011899471283, 0.1150442510843277, 0.11398758739233017, 0.12217672914266586, 0.12336547672748566, 0.11913882195949554, 0.12851670384407043, 0.12534672021865845, 0.13353586196899414, 0.13089419901371002, 0.1434420794248581, 0.13881917297840118, 0.14581957459449768, 0.15136705338954926, 0.14542332291603088, 0.15110288560390472, 0.15440496802330017, 0.15757495164871216, 0.16338661313056946, 0.16470743715763092, 0.1760665625333786, 0.1632545292377472, 0.17738740146160126, 0.17117950320243835, 0.17778365314006805, 0.1728965789079666, 0.18359529972076416, 0.18901069462299347, 0.18372738361358643, 0.19204860925674438, 0.1935015171766281, 0.20023775100708008, 0.19640734791755676, 0.204860657453537, 0.21899352967739105, 0.2094835489988327, 0.21291771531105042, 0.2215031087398529, 0.21318188309669495, 0.21701228618621826, 0.2242768406867981, 0.2285034954547882, 0.22097477316856384, 0.23405098915100098, 0.23220182955265045, 0.2366926372051239, 0.24105137586593628, 0.24514594674110413, 0.2456742823123932, 0.24197596311569214, 0.25003302097320557, 0.2525425851345062, 0.258090078830719, 0.26020342111587524, 0.2661471366882324, 0.2658829689025879, 0.26495838165283203, 0.266939640045166, 0.27578920125961304, 0.28199708461761475, 0.2678642272949219, 0.27882710099220276, 0.2814687490463257, 0.2867520749568939, 0.2785629332065582, 0.2859595715999603, 0.28741249442100525, 0.2879408299922943, 0.2907145619392395, 0.2922995686531067, 0.28899750113487244, 0.2950733006000519, 0.2907145619392395, 0.30880993604660034, 0.3016774654388428, 0.3077532649040222, 0.3148857355117798, 0.30682867765426636, 0.3187161684036255, 0.3181878328323364, 0.31541407108306885, 0.31924447417259216, 0.3230748772621155, 0.3185840845108032, 0.32439571619033813, 0.3259807229042053, 0.3335094451904297, 0.3339056968688965, 0.3333773612976074, 0.3276977837085724, 0.34103816747665405, 0.3397173285484314, 0.33747193217277527], "val_loss": [1.969559805733817, 1.9685440744672502, 1.96752895627703, 1.9665186064583915, 1.9655096190316337, 1.9644957269941057, 1.9634838785443987, 1.9624738693237305, 1.9614716257367815, 1.960472856249128, 1.959451471056257, 1.9584519522530692, 1.957449163709368, 1.9564501217433385, 1.9554507391793388, 1.954448904309954, 1.9534517696925573, 1.9524521827697754, 1.951439040047782, 1.9504400662013464, 1.9494235856192452, 1.9484162330627441, 1.9474073818751745, 1.94639219556536, 1.945378031049456, 1.944361686706543, 1.9433289936610632, 1.9423046112060547, 1.9412564550127303, 1.9402176312037878, 1.939178194318499, 1.9381290163312639, 1.9370711190359933, 1.9360127449035645, 1.9349426542009627, 1.9338703155517578, 1.932786124093192, 1.9317057473318917, 1.9306152888706751, 1.9295175416128976, 1.9284074647086007, 1.9272894178118025, 1.9261672837393624, 1.925037043435233, 1.9238771029881068, 1.9227384158543177, 1.9215825625828333, 1.9204052516392298, 1.91922698702131, 1.9180408205304826, 1.9168236596243722, 1.915597711290632, 1.9143657003130232, 1.9131199972970145, 1.9118707520621163, 1.910614286150251, 1.909336975642613, 1.908031667981829, 1.9067181859697615, 1.905397619519915, 1.9040636335100447, 1.9027173178536552, 1.9013488633292062, 1.8999838147844588, 1.898601804460798, 1.8971959522792272, 1.8957616942269462, 1.8943286623273576, 1.8928589139665877, 1.891387666974749, 1.8898976189749581, 1.888397557394845, 1.8868719509669714, 1.8853340148925781, 1.8837744167872839, 1.8822002410888672, 1.8806086948939733, 1.8789943967546736, 1.877331052507673, 1.8756867817470007, 1.873974323272705, 1.872251374380929, 1.870509488242013, 1.8687371526445662, 1.8669608661106654, 1.8651542663574219, 1.863330568586077, 1.861471448625837, 1.8595878737313407, 1.8576686041695731, 1.8557494027273995, 1.8538069043840681, 1.851825509752546, 1.8497967038835799, 1.847757271357945, 1.8456955637250627, 1.8435987745012556, 1.841468334197998, 1.8393500191824776, 1.8371754373822893], "val_accuracy": [0.04533333331346512, 0.05233333259820938, 0.05966666713356972, 0.06499999761581421, 0.07366666942834854, 0.07966666668653488, 0.08900000154972076, 0.10066666454076767, 0.11133333295583725, 0.12066666781902313, 0.13066667318344116, 0.1393333375453949, 0.14933332800865173, 0.1613333374261856, 0.17033334076404572, 0.18133333325386047, 0.19066666066646576, 0.2029999941587448, 0.21199999749660492, 0.21933333575725555, 0.2253333330154419, 0.234333336353302, 0.24033333361148834, 0.24899999797344208, 0.26100000739097595, 0.26866665482521057, 0.2759999930858612, 0.28433331847190857, 0.2930000126361847, 0.2983333468437195, 0.30533334612846375, 0.31166666746139526, 0.3166666626930237, 0.3226666748523712, 0.3310000002384186, 0.3346666693687439, 0.34166666865348816, 0.3476666808128357, 0.35100001096725464, 0.3540000021457672, 0.3569999933242798, 0.36033332347869873, 0.3636666536331177, 0.36633333563804626, 0.36899998784065247, 0.37066665291786194, 0.3726666569709778, 0.3763333261013031, 0.37933334708213806, 0.3813333213329315, 0.38333332538604736, 0.3843333423137665, 0.3866666555404663, 0.38866665959358215, 0.3916666805744171, 0.3943333327770233, 0.39500001072883606, 0.39899998903274536, 0.40066665410995483, 0.40299999713897705, 0.40400001406669617, 0.40533334016799927, 0.40700000524520874, 0.40799999237060547, 0.4116666615009308, 0.4143333435058594, 0.4163333475589752, 0.4206666648387909, 0.42366665601730347, 0.4266666769981384, 0.42800000309944153, 0.4286666810512543, 0.4300000071525574, 0.4313333332538605, 0.4333333373069763, 0.4333333373069763, 0.43533334136009216, 0.43666666746139526, 0.43833333253860474, 0.43966665863990784, 0.4423333406448364, 0.4436666667461395, 0.44433334469795227, 0.44600000977516174, 0.4480000138282776, 0.4506666660308838, 0.45266667008399963, 0.45500001311302185, 0.4573333263397217, 0.4580000042915344, 0.4583333432674408, 0.4593333303928375, 0.4623333215713501, 0.46433332562446594, 0.46666666865348816, 0.4673333466053009, 0.468666672706604, 0.4703333377838135, 0.4723333418369293, 0.47433334589004517]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [7, 9, 4, 4, 0, 4, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 0, 0, 3, 0, 1, 2, 3, 3, 0], [15, 61, 33, 18, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 3, 9, 3, 9], [2, 3, 3, 1], [41, 38, 15]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 2, 8, 8, 5, 3, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), tf.math.pow(tf.math.add(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [5, 0, 5, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [9, 3, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 2, 14, 14, 7, 7, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.pow(tf.math.add(tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), tf.math.pow(tf.math.negative(grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(alpha, tf.math.add(beta, beta))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3028961754651385, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [9, 4, 2, 2, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 1, 1, 2, 3, 3, 0], [37, 60, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 2, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3028961754651385, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [37, 60, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [7, 3, 9, 6, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 4, 5, 2, 1, 1, 0, 1, 0, 7, 4, 3, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(grad, tf.math.add(beta, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta)), tf.math.add(beta, tf.math.pow(grad, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09589222073554993, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [6, 9, 6, 2, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 1, 1, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 8, 9], [0, 0, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 4, 1, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [16214745.361818844, 312765085.8317263, 1442001663.3575485, 3952090051.6771894, 8567986659.66451, 15694355920.32334], "accuracy": [0.10474177449941635, 0.10368511080741882, 0.09668471664190292, 0.09826971590518951, 0.09826971590518951, 0.1022322028875351], "val_loss": [61779408.0, 493600402.28571427, 1665193984.0, 3946301147.428571, 7706593865.142858, 13315898806.857143], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0], [6, 9, 6, 2, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 3, 1, 2, 3, 3, 0], [60, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 0, 0], [0, 2, 4, 3, 9], [0, 3, 3, 1], [81, 38, 93]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 7, 5, 2, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), sigma), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 4, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 1, 3, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [1, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.pow(grad, alpha)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, sigma)))", "other_info": {"loss": [2.3016125515640655, 2.3038907967475364, 2.309046015306754, 2.317028848171675, 2.3384040523403593, 2.9064308845324525, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09113723784685135, 0.08241976052522659, 0.08057060092687607, 0.07132479548454285, 0.0878351628780365, 0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9713738986424036, 1.9738385336739677, 1.9785693713596888, 1.987431458064488, 2.0134940147399902, 4889.343889508928, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.036666665226221085, 0.02433333359658718, 0.0273333340883255, 0.06499999761581421, 0.09933333098888397, 0.10000000149011612, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [9, 4, 2, 2, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 0, 0, 3, 0, 1, 2, 3, 3, 0], [15, 2, 72, 84, 1, 78], [0, 0, 1, 0, 0, 1], [0, 0, 1, 0], [2, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 5, 9], [0, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 6, 4, 3, 1, 0, 5, 4, 1, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [10.291680954356377, 84.94639922970747, 288.32249395662467, 685.282170275687, 1381.718269409615, 2433.4304269194336], "accuracy": [0.10474177449941635, 0.10355303436517715, 0.09655263274908066, 0.09866596013307571, 0.09826971590518951, 0.10210011899471283], "val_loss": [23.85165732247489, 110.9249267578125, 303.7310093470982, 653.1220354352679, 1212.874755859375, 2032.459681919643], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [6, 9, 6, 2, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 1, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 2, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [606823245.3468438, 11722819590.492142, 54072615607.74112, 148227236862.5122, 321390618386.22534, 588747256253.2527], "accuracy": [0.10487385839223862, 0.10368511080741882, 0.09668471664190292, 0.09826971590518951, 0.09826971590518951, 0.1022322028875351], "val_loss": [2314153472.0, 18506183241.142857, 62450293613.71429, 148022624256.0, 289093170907.4286, 499543591204.5714], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [30, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 2, 7, 7, 3, 4, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(grad, tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3028961754651385, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [7, 9, 2, 4, 0, 4, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 1, 2, 3, 3, 0], [37, 60, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [2, 3, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 5, 3, 3, 1, 1, 0, 1, 0, 7, 4, 3, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07198520749807358, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [6, 9, 6, 2, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [92, 21, 43, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 6, 9, 3, 9], [0, 3, 3, 1], [19, 88]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, grad), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [29.3846454867251, 316.80937028551585, 1229.3731414710273, 3160.7809575214014, 6638.806255856021, 11949.869769179888], "accuracy": [0.10474177449941635, 0.10368511080741882, 0.09668471664190292, 0.09866596013307571, 0.09826971590518951, 0.1022322028875351], "val_loss": [79.62590898786273, 446.3743373325893, 1361.8021763392858, 3092.9322684151784, 5906.492606026785, 10067.068917410714], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [50, 57], [0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [5, 5, 1, 6, 9, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 0, 2, 3, 3, 0], [15, 60, 72, 84, 1, 78], [0, 0, 1, 0, 0], [1, 0, 1, 1, 1], [9, 3, 0], [2, 4], [1], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 7, 4, 3, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), grad), tf.math.add(tf.math.multiply(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 1, 2, 2, 3, 3, 0], [37, 60, 43, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [3, 3, 9, 3, 9], [2, 3, 3, 1], [61, 4]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 2, 17, 17, 9, 8, 2, 1, 0, 0, 0, 0, 7, 4, 3, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.square(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad))))))), alpha), tf.math.add(beta, beta))), tf.math.add(tf.math.add(beta, beta), grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.multiply(beta, sigma)), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [6, 9, 6, 2, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 1, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 9, 9, 3, 9], [0, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 2, 0, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [4396295.792776613, 84695820.93778893, 390347427.5123498, 1069650113.3609827, 2318754416.7333245, 4247130149.600317], "accuracy": [0.10474177449941635, 0.10368511080741882, 0.09668471664190292, 0.09826971590518951, 0.09826971590518951, 0.1022322028875351], "val_loss": [16737837.142857144, 133634724.57142857, 450719030.85714287, 1068019126.8571428, 2085576118.857143, 3603403190.857143], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 9, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 0, 0, 3, 0, 1, 2, 3, 3, 0], [15, 2, 72, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [2, 3, 0], [4, 3, 6], [], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [41, 38, 18]], "fitness": -0.09942857176065445, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 8, 5, 5, 1, 1, 0, 1, 0, 6, 5, 1, 3], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.pow(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.square(tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.303171557709998, 2.3136000227950206, 2.3352800504548155, 2.3629891533247624, 2.41540168909711, 2.483214483757407, 2.576310356421289, 2.7137418926636054, 2.8443083335789296, 3.0281151256793053, 3.23024458466992, 3.479912270171972, 3.764779200186709, 4.06725148382503], "accuracy": [0.09509972482919693, 0.08994849026203156, 0.08757099509239197, 0.09126931428909302, 0.09694888442754745, 0.1006472036242485, 0.1002509593963623, 0.09391097724437714, 0.10381719470024109, 0.0956280529499054, 0.10381719470024109, 0.09945846349000931, 0.10196803510189056, 0.1022322028875351], "val_loss": [1.9741247040884835, 1.978386334010533, 1.9880450793675013, 2.006518840789795, 2.034152030944824, 2.072540760040283, 2.1234744616917203, 2.188774040767125, 2.2700612204415456, 2.3688476426260814, 2.4863360949925015, 2.623446532658168, 2.7808080400739397, 2.9586903027125766], "val_accuracy": [0.02866666577756405, 0.07533333450555801, 0.09666666388511658, 0.09666666388511658, 0.09799999743700027, 0.0989999994635582, 0.0989999994635582, 0.09966666996479034, 0.10000000149011612, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 4, 2, 2, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 1, 1, 2, 3, 3, 0], [37, 60, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [56, 38, 20]], "fitness": -0.09914285689592361, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 4, 5, 2, 1, 1, 0, 1, 0, 6, 5, 1, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.add(grad, tf.math.add(beta, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.add(grad, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.384694888906362, 3.424617209375936, 6.203526409594075, 10.580035464355202, 16.817725016692563, 24.825124642096647], "accuracy": [0.09972262382507324, 0.1026284471154213, 0.09576013684272766, 0.09708096832036972, 0.09932637959718704, 0.10157178342342377], "val_loss": [2.1707933289664134, 3.2625519888741628, 5.532002040318081, 8.89231082371303, 13.381404331752233, 19.096400669642858], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}]