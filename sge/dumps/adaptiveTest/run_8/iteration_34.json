[{"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 3, 2, 3], [44, 57], [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 2, 6, 6, 1, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 1, 0, 1, 1, 3, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 3, 6, 9], [3, 3, 3, 1], [45, 38]], "fitness": -0.7954285740852356, "mapping_values": [1, 3, 3, 1, 2, 1, 17, 17, 9, 8, 2, 1, 1, 0, 1, 0, 8, 5, 3, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.add(beta, grad)), tf.math.add(beta, tf.math.subtract(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, alpha)), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.pow(alpha, tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(sigma, sigma), sigma), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0810288823968808, 1.9574378171317912, 1.3159015776537601, 1.0233337538290521, 0.882348791672144, 0.8161214444741534, 0.8020060470925818, 0.6996087959382387, 0.7291811446802822, 0.6617192338801268, 0.6716442780094124, 0.6520678759676165, 0.6100082964142001, 0.626096024276747, 0.623566889641638, 0.5849378453883765, 0.5602360003817398, 0.5611226994206231], "accuracy": [0.31462156772613525, 0.40641921758651733, 0.544710099697113, 0.6305639743804932, 0.6676793098449707, 0.69673752784729, 0.7005679607391357, 0.7380794882774353, 0.7193237543106079, 0.7541936039924622, 0.7453441023826599, 0.7485140562057495, 0.7721568942070007, 0.757099449634552, 0.7623828053474426, 0.7820631265640259, 0.7876105904579163, 0.7825914621353149], "val_loss": [1.9210900579180037, 1.3942185470036097, 0.8048586334500994, 0.6985963072095599, 0.6770282643181937, 0.609052130154201, 0.5552285058157784, 0.5603482042040143, 0.5247083902359009, 0.5103484903063092, 0.5242758478437152, 0.47722416264670237, 0.4571998119354248, 0.5424793788364956, 0.5226419653211322, 0.4601560745920454, 0.46137964725494385, 0.4579923578671047], "val_accuracy": [0.22833333909511566, 0.5286666750907898, 0.6583333611488342, 0.6859999895095825, 0.7013333439826965, 0.7379999756813049, 0.7383333444595337, 0.7386666536331177, 0.7593333125114441, 0.7570000290870667, 0.7556666731834412, 0.7879999876022339, 0.8146666884422302, 0.7620000243186951, 0.7546666860580444, 0.8046666383743286, 0.7950000166893005, 0.7990000247955322]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [2, 2, 2, 3], [44, 57], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 2, 6, 6, 1, 2, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 1, 0, 1, 0, 3, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 3, 6, 9], [3, 3, 3, 1], [45, 38]], "fitness": -0.7954285740852356, "mapping_values": [1, 3, 3, 1, 2, 0, 19, 19, 10, 9, 3, 1, 1, 0, 1, 0, 8, 5, 3, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), tf.math.add(beta, grad)))), tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, grad))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(sigma, sigma), sigma), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0810288823968808, 1.9574378171317912, 1.3159015776537601, 1.0233337538290521, 0.882348791672144, 0.8161214444741534, 0.8020060470925818, 0.6996087959382387, 0.7291811446802822, 0.6617192338801268, 0.6716442780094124, 0.6520678759676165, 0.6100082964142001, 0.626096024276747, 0.623566889641638, 0.5849378453883765, 0.5602360003817398, 0.5611226994206231], "accuracy": [0.31462156772613525, 0.40641921758651733, 0.544710099697113, 0.6305639743804932, 0.6676793098449707, 0.69673752784729, 0.7005679607391357, 0.7380794882774353, 0.7193237543106079, 0.7541936039924622, 0.7453441023826599, 0.7485140562057495, 0.7721568942070007, 0.757099449634552, 0.7623828053474426, 0.7820631265640259, 0.7876105904579163, 0.7825914621353149], "val_loss": [1.9210900579180037, 1.3942185470036097, 0.8048586334500994, 0.6985963072095599, 0.6770282643181937, 0.609052130154201, 0.5552285058157784, 0.5603482042040143, 0.5247083902359009, 0.5103484903063092, 0.5242758478437152, 0.47722416264670237, 0.4571998119354248, 0.5424793788364956, 0.5226419653211322, 0.4601560745920454, 0.46137964725494385, 0.4579923578671047], "val_accuracy": [0.22833333909511566, 0.5286666750907898, 0.6583333611488342, 0.6859999895095825, 0.7013333439826965, 0.7379999756813049, 0.7383333444595337, 0.7386666536331177, 0.7593333125114441, 0.7570000290870667, 0.7556666731834412, 0.7879999876022339, 0.8146666884422302, 0.7620000243186951, 0.7546666860580444, 0.8046666383743286, 0.7950000166893005, 0.7990000247955322]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 3, 2, 3], [44, 57], [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], [1, 2, 6, 6, 1, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 1, 3, 1, 0, 1, 1, 3, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 3, 6, 9], [3, 3, 0, 1], [45, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 15, 15, 8, 7, 2, 1, 1, 0, 1, 0, 8, 5, 3, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.subtract(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, alpha)), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.pow(alpha, tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(sigma, sigma), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [21801.039870134293, 405715.860396579, 1844983.1379276186, 5224947.222031436, 11056115.41038172, 20596613.205388986], "accuracy": [0.09866596013307571, 0.10249637067317963, 0.10077928751707077, 0.10196803510189056, 0.10130762308835983, 0.10289261490106583], "val_loss": [81498.80357142857, 643491.8035714285, 2162857.4285714286, 5116465.428571428, 9981201.714285715, 17233951.42857143], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [2, 6, 4, 9], [0, 3, 2, 3], [44, 57], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [9, 5, 6, 1, 3, 2, 2, 5, 2, 1, 0, 3, 8, 1, 1, 8, 9, 0], [4, 3, 3, 1, 0, 3, 1, 3, 3, 0, 0], [9, 71, 43, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 4], [4], [85], [1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1], [0, 3, 3, 6, 3, 9, 1, 6, 9, 8, 5, 4, 7, 7, 0, 3, 5], [0, 3, 3, 1, 1, 3, 2], [63, 38, 24, 18]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302557930324717, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09576013684272766, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [1, 1, 1, 1, 0, 1, 0], [9, 6, 4, 9], [0, 3, 2, 3], [44, 57], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [5, 9, 6, 6, 1, 2, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 1, 0, 1, 1, 3, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 4], [4], [85], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 6, 9, 0, 9], [2, 3, 3, 1], [29, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 5, 4, 1, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.negative(beta)))", "other_info": {"loss": [139805107.04562074, 2662057339.925505, 12180633893.498877, 34587737979.45212, 73295789029.35516, 136673522442.51591], "accuracy": [0.09840179979801178, 0.10236428678035736, 0.10077928751707077, 0.10196803510189056, 0.10130762308835983, 0.10302469879388809], "val_loss": [530198948.5714286, 4238948205.714286, 14303491803.428572, 33901157229.714287, 66208998546.28571, 114404727661.71428], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 3, 2, 3], [74, 57, 46], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 2, 6, 6, 1, 1, 9, 2, 2, 1, 4, 5, 8, 1, 1, 8, 9, 0], [2, 3, 3, 2, 3, 3, 0, 2, 3, 3, 1], [94, 82, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 4], [0, 0], [85], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [3, 3, 2, 8, 5, 5, 5, 2, 1, 8, 1, 2, 7, 4, 3, 9, 1, 5], [2, 3, 1, 0, 0, 2], [29, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 27, 27, 17, 10, 3, 1, 1, 0, 1, 1, 7, 3, 4, 1], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, tf.math.subtract(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(grad, tf.math.subtract(tf.math.pow(tf.math.square(tf.math.add(beta, beta)), grad), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))))))))), tf.math.add(beta, tf.math.subtract(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), beta)))), grad)), tf.math.add(beta, tf.math.subtract(tf.math.sqrt(tf.math.add(beta, grad)), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.multiply(tf.math.add(sigma, alpha), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09576013684272766, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [2, 2, 2, 3], [44, 57], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [1, 3, 6, 0, 3, 1, 9, 8, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 1, 0, 1, 1, 3, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 3, 3, 6, 9, 9], [3, 3, 3, 1], [45, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 8, 6, 2, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(sigma, sigma), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [21801.039870134293, 405715.860396579, 1844983.1379276186, 5224947.222031436, 11056115.41038172, 20596613.205388986], "accuracy": [0.09866596013307571, 0.10249637067317963, 0.10077928751707077, 0.10196803510189056, 0.10130762308835983, 0.10289261490106583], "val_loss": [81498.80357142857, 643491.8035714285, 2162857.4285714286, 5116465.428571428, 9981201.714285715, 17233951.42857143], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [1, 2, 2, 3], [63, 57], [1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 4, 2, 8, 1, 1, 8, 9, 0, 1], [3, 3, 3, 1, 2, 3, 3, 3, 3, 0, 1, 0, 3, 1], [94, 82, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [3, 3, 5, 8, 5, 5, 5, 2, 1, 8, 1, 2, 7, 4, 3, 9, 1, 5], [3, 2, 1, 2], [45, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 19, 19, 9, 10, 1, 1, 1, 0, 1, 0, 6, 3, 3, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.subtract(grad, grad), tf.math.add(beta, tf.math.subtract(tf.math.subtract(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, alpha)), tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad)))))), tf.math.add(beta, grad)))), tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.multiply(tf.math.square(beta), alpha))", "other_info": {"loss": [2.3017501880180693, 2.30173303737396, 2.30244385278173, 2.3024998164022636, 2.3008714749781274, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09047681838274002, 0.08836349099874496, 0.08915598690509796, 0.08902391046285629, 0.09285431355237961, 0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [2, 0, 2, 3], [74, 57, 46], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [1, 2, 6, 6, 1, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 3, 3, 2, 0, 3, 0, 3, 3, 3, 1], [94, 73, 74, 84, 1, 78], [0, 0, 0, 1, 0, 1, 1], [0, 0, 1, 0], [3, 3, 4], [4], [85], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [3, 3, 2, 8, 5, 5, 5, 2, 1, 8, 1, 2, 7, 4, 3, 9, 1, 5], [0, 3, 3, 2], [29, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 7, 7, 3, 4, 0, 7, 4, 3, 1, 0, 9, 5, 4, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(beta, grad), tf.math.add(beta, grad))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.pow(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.add(tf.math.sqrt(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), sigma), sigma), tf.math.square(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [2, 6, 4, 9], [2, 2, 2, 3], [44, 57], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [1, 3, 6, 0, 1, 2, 9, 8, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 1, 1, 0, 1, 0, 3, 3, 0], [42, 18, 76, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 2, 6, 9], [3, 3, 3, 1], [45, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 19, 19, 11, 8, 3, 1, 1, 0, 1, 0, 8, 5, 3, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.negative(grad), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, alpha)), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.pow(tf.math.add(beta, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.math.divide_no_nan(sigma, sigma), sigma), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [90688.72128726532, 2.304966140842047, 2.3041858700177986, 2.303621915573646, 2.303359860111741, 2.3030974996277305], "accuracy": [0.09655263274908066, 0.09589222073554993, 0.09140139818191528, 0.09893012791872025, 0.0956280529499054, 0.09470347315073013], "val_loss": [1.9765639986310686, 1.9756904329572404, 1.9750336238316126, 1.974642072405134, 1.9743592398507255, 1.974184513092041], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [6, 6, 4, 9], [2, 2, 2, 3], [74, 57, 46], [1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], [2, 3, 6, 1, 1, 5, 1, 1, 2, 1, 6, 2, 8, 1, 1, 8, 9, 0, 1, 1, 1, 4, 9, 7, 2, 0, 0, 1, 6, 9, 1, 7, 2, 5, 5, 3, 8, 4, 3, 4, 5, 3], [3, 3, 3, 1, 0, 3, 0, 3, 3, 0, 1, 5], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [0, 0], [2], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 3, 5, 9], [1, 3, 0, 1], [33, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 24, 24, 12, 12, 3, 1, 1, 0, 1, 1, 7, 4, 3, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.divide_no_nan(tf.math.subtract(grad, grad), tf.math.add(beta, tf.math.subtract(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, alpha)))), tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(grad, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad))), tf.math.add(beta, grad)))), tf.math.divide_no_nan(tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.square(alpha), sigma), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3011718464880224, 2.302522250989078, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09985470771789551, 0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9731217793055944, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.0949999988079071, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [0, 0, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 3, 2, 3], [44, 57], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [2, 2, 6, 6, 1, 1, 9, 4, 8, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 3, 1, 0, 1, 0, 3, 3, 0], [42, 71, 93, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 3, 6, 9], [3, 1, 3, 1], [45, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 2, 18, 18, 10, 8, 3, 1, 1, 0, 1, 0, 8, 5, 3, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.math.subtract(tf.math.add(beta, grad), alpha)))), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(sigma, alpha), sigma), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09576013684272766, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [2, 2, 2, 3], [44, 57], [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [2, 5, 0, 1, 3, 2, 2, 5, 2, 1, 8, 3, 5, 1, 1, 8, 8, 0], [2, 3, 3, 2, 0, 3, 0, 2, 3, 3, 1], [94, 3, 43, 84, 1, 78], [0, 0, 0, 1, 0, 1, 1], [1, 0, 1], [3, 3], [0, 0], [34], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [3, 3, 8, 8, 5, 5, 5, 2, 1, 8, 1, 2, 7, 4, 3, 9, 1, 5], [3, 3, 3, 1], [45, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 16, 16, 9, 7, 2, 1, 1, 0, 1, 1, 6, 3, 3, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.square(tf.math.negative(tf.math.subtract(beta, tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, beta)), tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))))), tf.math.add(beta, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.multiply(tf.math.sqrt(sigma), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09576013684272766, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [2, 0, 2, 3], [44, 57], [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [1, 3, 6, 0, 1, 2, 9, 8, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 1, 0, 1, 1, 3, 3, 0], [42, 71, 30, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [85], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [4, 3, 3, 6, 9], [3, 3, 3, 1], [24, 38, 24, 18]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 12, 12, 7, 5, 2, 1, 1, 0, 1, 0, 9, 5, 4, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.negative(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, alpha)), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(sigma, sigma), sigma), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09576013684272766, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [4, 6, 4, 9], [2, 2, 2, 3], [44, 57], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [1, 3, 6, 0, 1, 1, 9, 8, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 0, 3, 1, 0, 3, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [2], [], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 1, 2, 9, 4, 2, 2, 1, 6, 0, 8, 8], [3, 3, 2, 1, 0, 0, 1, 1], [4, 38, 14]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 19, 19, 12, 7, 4, 1, 1, 0, 1, 0, 21, 13, 8, 3], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.divide_no_nan(tf.math.negative(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), grad)))), tf.math.add(beta, grad)), tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, alpha)))))), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.add(sigma, sigma), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.math.pow(beta, tf.math.add(tf.math.add(tf.math.subtract(tf.math.divide_no_nan(tf.math.negative(alpha), tf.math.sqrt(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), alpha), alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09576013684272766, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [2, 1, 2, 3], [44, 57], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [2, 5, 0, 1, 3, 2, 2, 5, 2, 1, 8, 3, 5, 1, 1, 8, 8, 0], [3, 3, 3, 1, 0, 1, 0, 3, 3, 0], [94, 82, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [0, 0], [57], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 3, 6, 9], [3, 3, 3, 1], [45, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.302557930324717, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09576013684272766, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [5, 6, 4, 9], [2, 3, 2, 3], [44, 54], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 2, 1, 6, 1, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [5, 3, 4, 3, 0, 0, 1, 3, 3, 0, 5], [94, 82, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1], [0, 3, 1, 6, 3, 1, 1, 6, 9, 8, 5, 4, 6, 7, 0, 3, 5], [3, 3, 3, 1, 1, 0, 3, 0, 1, 1, 0, 3, 0, 0, 1, 1, 2, 3, 3, 0], [82, 19, 58, 18, 77]], "fitness": -0.03999999910593033, "mapping_values": [1, 2, 2, 1, 1, 0, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 8, 4, 4, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.add(grad, grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.subtract(sigma, sigma), tf.math.divide_no_nan(sigma, alpha)))", "other_info": {"loss": [2.3017501880180693, 2.30173303737396, 2.30244385278173, 2.3024998164022636, 2.3008714749781274, 2.3023334201363808], "accuracy": [0.09047681838274002, 0.08836349099874496, 0.08915598690509796, 0.08902391046285629, 0.09285431355237961, 0.0940430611371994], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 1, 2, 3], [44, 57], [1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [1, 2, 6, 1, 1, 1, 1, 9, 9, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 1, 0, 1, 1, 3, 3, 0], [94, 82, 43, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 4], [4], [85], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 3, 6, 3, 9, 1, 6, 9, 8, 5, 4, 7, 7, 0, 3, 5], [3, 3, 3, 1], [63, 38, 24, 18]], "fitness": -0.03999999910593033, "mapping_values": [1, 3, 3, 1, 2, 1, 15, 15, 9, 6, 3, 1, 0, 0, 0, 0, 10, 6, 4, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.subtract(grad, grad), tf.math.subtract(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, alpha)), tf.math.subtract(tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, alpha))), tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(sigma, sigma), sigma), tf.math.multiply(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3017501880180693, 2.30173303737396, 2.30244385278173, 2.3024998164022636, 2.3008714749781274, 2.3023334201363808], "accuracy": [0.09047681838274002, 0.08836349099874496, 0.08915598690509796, 0.08902391046285629, 0.09285431355237961, 0.0940430611371994], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 3, 2, 3], [44, 57], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 2, 6, 6, 1, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 1, 0, 1, 1, 3, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 4], [3], [], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 3, 6, 6, 9], [1, 3, 1, 0, 0, 2], [63, 38, 24, 18]], "fitness": -0.03999999910593033, "mapping_values": [1, 3, 3, 1, 2, 1, 19, 19, 10, 9, 2, 1, 1, 0, 1, 0, 8, 5, 3, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.divide_no_nan(grad, tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.subtract(alpha, tf.math.add(beta, tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), alpha)), tf.math.add(beta, grad)), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.divide_no_nan(tf.math.divide_no_nan(alpha, sigma), alpha), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3017501880180693, 2.30173303737396, 2.30244385278173, 2.3024998164022636, 2.3008714749781274, 2.3023334201363808], "accuracy": [0.09047681838274002, 0.08836349099874496, 0.08915598690509796, 0.08902391046285629, 0.09285431355237961, 0.0940430611371994], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [6, 6, 4, 9], [2, 2, 2, 3], [44, 57], [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [1, 3, 6, 0, 1, 6, 9, 8, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 1, 2, 1, 3, 1, 2, 3, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0, 0, 0], [0, 0, 1, 0, 1, 1], [3, 3, 3], [4, 7, 4], [], [0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1], [0, 3, 3, 6, 9], [3, 3, 3, 1], [63, 38, 24, 18]], "fitness": -0.03999999910593033, "mapping_values": [1, 3, 3, 1, 2, 0, 12, 12, 7, 5, 1, 7, 6, 3, 3, 0, 6, 3, 3, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.divide_no_nan(tf.math.negative(grad), tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.subtract(tf.math.divide_no_nan(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta)), alpha)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(sigma, sigma), sigma))", "other_info": {"loss": [2.3017501880180693, 2.30173303737396, 2.30244385278173, 2.3024998164022636, 2.3008714749781274, 2.3023334201363808], "accuracy": [0.09047681838274002, 0.08836349099874496, 0.08915598690509796, 0.08902391046285629, 0.09285431355237961, 0.0940430611371994], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]