[{"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [2, 6, 9, 0, 0, 3, 4], [3, 0, 0, 1, 1, 0], [8, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.7877143025398254, "mapping_values": [1, 11, 11, 7, 4, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha))))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.6618694379549805, 2.30298968004497, 2.229371345290387, 1.979642644928053, 1.5414434159200394, 1.2635852502809777, 1.0924580140262468, 1.0095309910835952, 0.8784621170231254, 0.8673796097773445, 0.840612412616955, 0.7783776468226717, 0.7505571252130451, 0.7390600822589433, 0.7219591323158855, 0.7413974356783568, 0.6925102622123868, 0.659966278447766, 0.6574356359907066, 0.6559049442554147, 0.6303714882696089, 0.6405363537616198, 0.6250448691972479, 0.621632199096264, 0.5918018569988487, 0.619881566639007, 0.5696011079914928, 0.6090804016380703, 0.5707171489817355, 0.5933822184159472, 0.5523189833182794, 0.5459499288512227], "accuracy": [0.22744683921337128, 0.11795007437467575, 0.228899747133255, 0.3217540681362152, 0.4563465714454651, 0.5391625761985779, 0.5945053696632385, 0.614317774772644, 0.6696605682373047, 0.6627922058105469, 0.687887966632843, 0.698718786239624, 0.7054550051689148, 0.7228899598121643, 0.7189275026321411, 0.7220974564552307, 0.7343811988830566, 0.750231146812439, 0.7395324110984802, 0.7470611333847046, 0.7577598690986633, 0.7515519857406616, 0.7572315335273743, 0.7544577717781067, 0.7677981853485107, 0.7605336308479309, 0.7823272943496704, 0.7691190242767334, 0.7844406366348267, 0.7729493975639343, 0.7905164361000061, 0.7931581139564514], "val_loss": [1.9772669247218542, 1.9672775949750627, 1.4968651703425817, 1.2871393135615758, 1.248643057686942, 0.9341075760977608, 0.801773224558149, 0.708572336605617, 0.6550037520272392, 0.6736182996204921, 0.5563147238322667, 0.54533622946058, 0.5450789417539325, 0.5657808780670166, 0.5427557911191668, 0.5346106631415231, 0.5416016748973301, 0.4828308991023472, 0.47638319219861713, 0.4670318535396031, 0.4655712672642299, 0.5123528242111206, 0.47549945967538015, 0.4656318255833217, 0.44200961930411203, 0.43889198132923674, 0.4252793278012957, 0.4580019456999643, 0.5362839528492519, 0.4481944101197379, 0.42635918515069143, 0.4321542467389788], "val_accuracy": [0.09833333641290665, 0.17233332991600037, 0.42800000309944153, 0.47433334589004517, 0.5586666464805603, 0.637666642665863, 0.5870000123977661, 0.652999997138977, 0.6836666464805603, 0.6893333196640015, 0.7433333396911621, 0.7316666841506958, 0.7593333125114441, 0.7350000143051147, 0.746666669845581, 0.762666642665863, 0.7446666955947876, 0.7749999761581421, 0.7746666669845581, 0.800000011920929, 0.8029999732971191, 0.7509999871253967, 0.7689999938011169, 0.7919999957084656, 0.8019999861717224, 0.8136666417121887, 0.8193333148956299, 0.7873333096504211, 0.7563333511352539, 0.8080000281333923, 0.8166666626930237, 0.8023333549499512]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 6, 9, 0, 0, 3, 4, 8], [3, 0, 0, 1, 1, 0], [76, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.7877143025398254, "mapping_values": [1, 6, 6, 4, 2, 2, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.negative(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.6618694379549805, 2.30298968004497, 2.229371345290387, 1.979642644928053, 1.5414434159200394, 1.2635852502809777, 1.0924580140262468, 1.0095309910835952, 0.8784621170231254, 0.8673796097773445, 0.840612412616955, 0.7783776468226717, 0.7505571252130451, 0.7390600822589433, 0.7219591323158855, 0.7413974356783568, 0.6925102622123868, 0.659966278447766, 0.6574356359907066, 0.6559049442554147, 0.6303714882696089, 0.6405363537616198, 0.6250448691972479, 0.621632199096264, 0.5918018569988487, 0.619881566639007, 0.5696011079914928, 0.6090804016380703, 0.5707171489817355, 0.5933822184159472, 0.5523189833182794, 0.5459499288512227], "accuracy": [0.22744683921337128, 0.11795007437467575, 0.228899747133255, 0.3217540681362152, 0.4563465714454651, 0.5391625761985779, 0.5945053696632385, 0.614317774772644, 0.6696605682373047, 0.6627922058105469, 0.687887966632843, 0.698718786239624, 0.7054550051689148, 0.7228899598121643, 0.7189275026321411, 0.7220974564552307, 0.7343811988830566, 0.750231146812439, 0.7395324110984802, 0.7470611333847046, 0.7577598690986633, 0.7515519857406616, 0.7572315335273743, 0.7544577717781067, 0.7677981853485107, 0.7605336308479309, 0.7823272943496704, 0.7691190242767334, 0.7844406366348267, 0.7729493975639343, 0.7905164361000061, 0.7931581139564514], "val_loss": [1.9772669247218542, 1.9672775949750627, 1.4968651703425817, 1.2871393135615758, 1.248643057686942, 0.9341075760977608, 0.801773224558149, 0.708572336605617, 0.6550037520272392, 0.6736182996204921, 0.5563147238322667, 0.54533622946058, 0.5450789417539325, 0.5657808780670166, 0.5427557911191668, 0.5346106631415231, 0.5416016748973301, 0.4828308991023472, 0.47638319219861713, 0.4670318535396031, 0.4655712672642299, 0.5123528242111206, 0.47549945967538015, 0.4656318255833217, 0.44200961930411203, 0.43889198132923674, 0.4252793278012957, 0.4580019456999643, 0.5362839528492519, 0.4481944101197379, 0.42635918515069143, 0.4321542467389788], "val_accuracy": [0.09833333641290665, 0.17233332991600037, 0.42800000309944153, 0.47433334589004517, 0.5586666464805603, 0.637666642665863, 0.5870000123977661, 0.652999997138977, 0.6836666464805603, 0.6893333196640015, 0.7433333396911621, 0.7316666841506958, 0.7593333125114441, 0.7350000143051147, 0.746666669845581, 0.762666642665863, 0.7446666955947876, 0.7749999761581421, 0.7746666669845581, 0.800000011920929, 0.8029999732971191, 0.7509999871253967, 0.7689999938011169, 0.7919999957084656, 0.8019999861717224, 0.8136666417121887, 0.8193333148956299, 0.7873333096504211, 0.7563333511352539, 0.8080000281333923, 0.8166666626930237, 0.8023333549499512]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [2, 8, 9, 9, 0, 2, 5], [3, 0, 0, 2, 1, 0], [85, 5, 20], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [2, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [2, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.7877143025398254, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.6618694379549805, 2.30298968004497, 2.229371345290387, 1.979642644928053, 1.5414434159200394, 1.2635852502809777, 1.0924580140262468, 1.0095309910835952, 0.8784621170231254, 0.8673796097773445, 0.840612412616955, 0.7783776468226717, 0.7505571252130451, 0.7390600822589433, 0.7219591323158855, 0.7413974356783568, 0.6925102622123868, 0.659966278447766, 0.6574356359907066, 0.6559049442554147, 0.6303714882696089, 0.6405363537616198, 0.6250448691972479, 0.621632199096264, 0.5918018569988487, 0.619881566639007, 0.5696011079914928, 0.6090804016380703, 0.5707171489817355, 0.5933822184159472, 0.5523189833182794, 0.5459499288512227], "accuracy": [0.22744683921337128, 0.11795007437467575, 0.228899747133255, 0.3217540681362152, 0.4563465714454651, 0.5391625761985779, 0.5945053696632385, 0.614317774772644, 0.6696605682373047, 0.6627922058105469, 0.687887966632843, 0.698718786239624, 0.7054550051689148, 0.7228899598121643, 0.7189275026321411, 0.7220974564552307, 0.7343811988830566, 0.750231146812439, 0.7395324110984802, 0.7470611333847046, 0.7577598690986633, 0.7515519857406616, 0.7572315335273743, 0.7544577717781067, 0.7677981853485107, 0.7605336308479309, 0.7823272943496704, 0.7691190242767334, 0.7844406366348267, 0.7729493975639343, 0.7905164361000061, 0.7931581139564514], "val_loss": [1.9772669247218542, 1.9672775949750627, 1.4968651703425817, 1.2871393135615758, 1.248643057686942, 0.9341075760977608, 0.801773224558149, 0.708572336605617, 0.6550037520272392, 0.6736182996204921, 0.5563147238322667, 0.54533622946058, 0.5450789417539325, 0.5657808780670166, 0.5427557911191668, 0.5346106631415231, 0.5416016748973301, 0.4828308991023472, 0.47638319219861713, 0.4670318535396031, 0.4655712672642299, 0.5123528242111206, 0.47549945967538015, 0.4656318255833217, 0.44200961930411203, 0.43889198132923674, 0.4252793278012957, 0.4580019456999643, 0.5362839528492519, 0.4481944101197379, 0.42635918515069143, 0.4321542467389788], "val_accuracy": [0.09833333641290665, 0.17233332991600037, 0.42800000309944153, 0.47433334589004517, 0.5586666464805603, 0.637666642665863, 0.5870000123977661, 0.652999997138977, 0.6836666464805603, 0.6893333196640015, 0.7433333396911621, 0.7316666841506958, 0.7593333125114441, 0.7350000143051147, 0.746666669845581, 0.762666642665863, 0.7446666955947876, 0.7749999761581421, 0.7746666669845581, 0.800000011920929, 0.8029999732971191, 0.7509999871253967, 0.7689999938011169, 0.7919999957084656, 0.8019999861717224, 0.8136666417121887, 0.8193333148956299, 0.7873333096504211, 0.7563333511352539, 0.8080000281333923, 0.8166666626930237, 0.8023333549499512]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [6, 6, 9, 0, 5, 3, 4], [3, 2, 0, 1, 1, 0], [85, 5, 20], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [0, 0, 1], [3, 3, 0], [2, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [2, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.7877143025398254, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.6618694379549805, 2.30298968004497, 2.229371345290387, 1.979642644928053, 1.5414434159200394, 1.2635852502809777, 1.0924580140262468, 1.0095309910835952, 0.8784621170231254, 0.8673796097773445, 0.840612412616955, 0.7783776468226717, 0.7505571252130451, 0.7390600822589433, 0.7219591323158855, 0.7413974356783568, 0.6925102622123868, 0.659966278447766, 0.6574356359907066, 0.6559049442554147, 0.6303714882696089, 0.6405363537616198, 0.6250448691972479, 0.621632199096264, 0.5918018569988487, 0.619881566639007, 0.5696011079914928, 0.6090804016380703, 0.5707171489817355, 0.5933822184159472, 0.5523189833182794, 0.5459499288512227], "accuracy": [0.22744683921337128, 0.11795007437467575, 0.228899747133255, 0.3217540681362152, 0.4563465714454651, 0.5391625761985779, 0.5945053696632385, 0.614317774772644, 0.6696605682373047, 0.6627922058105469, 0.687887966632843, 0.698718786239624, 0.7054550051689148, 0.7228899598121643, 0.7189275026321411, 0.7220974564552307, 0.7343811988830566, 0.750231146812439, 0.7395324110984802, 0.7470611333847046, 0.7577598690986633, 0.7515519857406616, 0.7572315335273743, 0.7544577717781067, 0.7677981853485107, 0.7605336308479309, 0.7823272943496704, 0.7691190242767334, 0.7844406366348267, 0.7729493975639343, 0.7905164361000061, 0.7931581139564514], "val_loss": [1.9772669247218542, 1.9672775949750627, 1.4968651703425817, 1.2871393135615758, 1.248643057686942, 0.9341075760977608, 0.801773224558149, 0.708572336605617, 0.6550037520272392, 0.6736182996204921, 0.5563147238322667, 0.54533622946058, 0.5450789417539325, 0.5657808780670166, 0.5427557911191668, 0.5346106631415231, 0.5416016748973301, 0.4828308991023472, 0.47638319219861713, 0.4670318535396031, 0.4655712672642299, 0.5123528242111206, 0.47549945967538015, 0.4656318255833217, 0.44200961930411203, 0.43889198132923674, 0.4252793278012957, 0.4580019456999643, 0.5362839528492519, 0.4481944101197379, 0.42635918515069143, 0.4321542467389788], "val_accuracy": [0.09833333641290665, 0.17233332991600037, 0.42800000309944153, 0.47433334589004517, 0.5586666464805603, 0.637666642665863, 0.5870000123977661, 0.652999997138977, 0.6836666464805603, 0.6893333196640015, 0.7433333396911621, 0.7316666841506958, 0.7593333125114441, 0.7350000143051147, 0.746666669845581, 0.762666642665863, 0.7446666955947876, 0.7749999761581421, 0.7746666669845581, 0.800000011920929, 0.8029999732971191, 0.7509999871253967, 0.7689999938011169, 0.7919999957084656, 0.8019999861717224, 0.8136666417121887, 0.8193333148956299, 0.7873333096504211, 0.7563333511352539, 0.8080000281333923, 0.8166666626930237, 0.8023333549499512]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 6, 9, 0, 8, 3, 4, 8, 9], [2, 0, 0, 1, 1, 0], [8, 57, 18], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1], [3, 3, 0, 7, 4, 7, 5], [6, 3], [], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [2, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.29600000381469727, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 13, 9, 7, 2, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.square(sigma)), tf.math.add(sigma, sigma))))), sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3173422820658462, 2.389485619937613, 2.3049056402145203, 2.3031158797445865, 2.3030130238092776, 2.30301172329277], "accuracy": [0.2133139669895172, 0.17170783877372742, 0.10077928751707077, 0.09893012791872025, 0.09549596905708313, 0.09760929644107819], "val_loss": [1.9687647819519043, 1.9783757754734583, 1.9744066510881697, 1.9739584241594588, 1.973700659615653, 1.973672594342913], "val_accuracy": [0.18266665935516357, 0.09833333641290665, 0.09733333438634872, 0.09733333438634872, 0.09966666996479034, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [3, 6, 9, 0, 5, 3, 4, 8, 9], [3, 0, 1, 0, 0, 0, 2], [8, 29, 18, 0], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.29600000381469727, "mapping_values": [1, 11, 11, 7, 4, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.add(alpha, tf.math.multiply(grad, tf.math.pow(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))))))))), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3173422820658462, 2.389485619937613, 2.3049056402145203, 2.3031158797445865, 2.3030130238092776, 2.30301172329277], "accuracy": [0.2133139669895172, 0.17170783877372742, 0.10077928751707077, 0.09893012791872025, 0.09549596905708313, 0.09760929644107819], "val_loss": [1.9687647819519043, 1.9783757754734583, 1.9744066510881697, 1.9739584241594588, 1.973700659615653, 1.973672594342913], "val_accuracy": [0.18266665935516357, 0.09833333641290665, 0.09733333438634872, 0.09733333438634872, 0.09966666996479034, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [5, 6, 9, 0, 3, 3, 6], [3, 0, 0, 1, 1, 0], [85, 5, 27], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 3, 0, 3, 0, 3, 2, 3, 3, 0], [84, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 0, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 7, 4, 3, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(tf.math.multiply(sigma, alpha)), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [4, 6, 9, 0, 3, 3, 6, 9, 7, 2, 4, 7, 4, 1, 8, 7, 3, 6, 7, 5, 9, 2], [2, 0, 1, 0, 0, 0, 2, 0, 2, 2, 2, 0, 3, 2], [8, 57, 18, 5, 75, 79, 49, 29, 45], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 2, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 36, 36, 22, 14, 9, 1, 1, 1, 0, 1, 5, 2, 2, 0, 0, 6, 3, 3, 1], "tree_depth": 44, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), grad)), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.add(tf.math.square(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), tf.math.add(grad, tf.math.add(alpha, grad))), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), grad)))))), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.multiply(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(sigma, alpha), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [3, 6, 9, 2, 0, 3, 4], [3, 0, 1, 0, 0, 0, 2], [8, 29, 18, 0], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [84, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0], [3, 3, 0, 8], [4, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [0, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 7, 5, 4, 1, 1, 1, 0, 1, 7, 5, 4, 1, 0, 2, 1, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))))), tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.sqrt(sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [133872989.83562876, 2519525135.5202746, 11723170805.044512, 32817174672.179634, 71398357973.12482, 129474563016.68155], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09813763201236725, 0.09932637959718704, 0.10011887550354004, 0.09906221181154251], "val_loss": [506310692.5714286, 4047932562.285714, 13658874733.714285, 32373108150.857143, 63224643584.0, 109248359862.85715], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [6, 6, 9, 0, 5, 3, 4], [3, 2, 0, 1, 1, 0], [8, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [1, 3], [], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [2, 1, 0, 1, 3, 2], [80, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07713644206523895, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [7, 2, 9, 9, 0, 2, 5], [3, 0, 0, 2, 1, 0], [8, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [2, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 4, 3, 6], [2, 1, 0, 1, 3, 2], [36, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.pow(beta, alpha), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1], [5, 2, 9, 0, 3, 3, 6], [3, 0, 1, 0, 0, 0, 2], [8, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [2, 3], [], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 3, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3032382625110746, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [2, 6, 9, 2, 0, 3, 6], [3, 2, 0, 1, 1, 0], [8, 29, 18, 0], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [84, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [0, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [7159447.690263231, 134498815.1208559, 625470971.2407873, 1750483286.156122, 3807888295.8827105, 6904641778.914278], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09826971590518951, 0.09919429570436478, 0.09998679161071777, 0.09906221181154251], "val_loss": [27047552.57142857, 216012982.85714287, 728634752.0, 1726645211.4285715, 3371789970.285714, 5825829595.428572], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [8, 6, 9, 0, 0, 3, 4], [3, 0, 2, 1, 1, 0], [8, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [50, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 2, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [3, 6, 1, 0, 0, 3, 4, 1, 1, 6, 8, 0], [3, 0, 0, 1, 1, 0, 0, 2, 1], [8, 57, 18, 89], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 2, 0, 3, 6], [2, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 21, 12, 9, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha)))))))), tf.math.add(alpha, tf.math.subtract(tf.math.subtract(tf.math.add(alpha, alpha), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(grad)))))))), tf.math.add(alpha, tf.math.negative(alpha))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [3, 2, 9, 9, 0, 2, 5], [2, 0, 0, 2, 1, 0], [8, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1], [3, 3, 1, 2, 8, 0, 0], [4, 3], [], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [6, 3, 6, 3, 6], [2, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 2, 1, 1, 1, 0, 1, 12, 9, 7, 2, 0, 5, 2, 3, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, sigma))))))))), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(beta, alpha), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.2994136275270156, 62.23571179801478, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10328886657953262, 0.11253467202186584, 0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0560385840279713, 1082978.2857142857, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.029999999329447746, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [2, 6, 9, 0, 0, 3, 4], [3, 0, 0, 1, 1, 0], [85, 5, 20], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.09314285963773727, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, alpha))", "other_info": {"loss": [2.3025643071950688, 2.3041535187485573, 2.306287038941913, 2.3076160344874714, 2.3129992962765296, 2.314945942753137, 2.3195688509119186, 2.324723153963947, 2.329641526763497, 2.345466797362229, 2.381108819753455, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08994849026203156, 0.0936468094587326, 0.08453308790922165, 0.07938185334205627, 0.07647603005170822, 0.07740060985088348, 0.0750231146812439, 0.07660810649394989, 0.08017434924840927, 0.07779685407876968, 0.07726852595806122, 0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9717489651271276, 1.9731443268912179, 1.9748917988368444, 1.9768855912344796, 1.9795598302568709, 1.9821344103131975, 1.9853365761893136, 1.9896695954459054, 1.9958597591945104, 2.0088795934404646, 2.06965058190482, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.032999999821186066, 0.03333333507180214, 0.03099999949336052, 0.0273333340883255, 0.032999999821186066, 0.03633333370089531, 0.04699999839067459, 0.06199999898672104, 0.0820000022649765, 0.09733333438634872, 0.10000000149011612, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [2, 6, 9, 2, 0, 3, 4], [3, 0, 0, 1, 1, 0], [8, 29, 18, 0], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [84, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0], [1, 0, 1], [3, 3, 0, 2, 8, 0, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 2, 6, 3, 6], [2, 3, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.08028571307659149, "mapping_values": [1, 12, 12, 7, 5, 3, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), grad), tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))))), tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(beta, sigma), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.1790558646489105e+24, 1.3257362254852088e+24, 1.3599105376614293e+24, 1.3741284489350612e+24, 1.3468420572249641e+24, 1.377452922667985e+24], "accuracy": [0.09351472556591034, 0.09047681838274002, 0.08796724677085876, 0.0948355570435524, 0.09140139818191528, 0.0952318087220192], "val_loss": [8.387334713608243e+23, 8.421534483011683e+23, 8.455823397952892e+23, 8.490843800413005e+23, 8.5265899257845e+23, 8.562772720175865e+23], "val_accuracy": [0.08733333647251129, 0.0860000029206276, 0.08533333241939545, 0.08366666734218597, 0.08399999886751175, 0.08399999886751175]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [2, 6, 9, 0, 0, 4, 4], [1, 0, 0, 0, 1, 0], [8, 57, 18, 86], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [6, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 11, 11, 7, 4, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.pow(tf.math.pow(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.301994368920095, 2.302163715863886, 2.3022363418286362, 2.3016341983398125, 2.303379744649516, 2.3025323816215546], "accuracy": [0.09100515395402908, 0.0952318087220192, 0.09126931428909302, 0.0886276587843895, 0.08730682730674744, 0.09338264167308807], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [2, 6, 9, 0, 0, 3, 4], [1, 0, 2, 1, 1, 0], [8, 57, 18], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [2, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [2, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.multiply(beta, alpha)))", "other_info": {"loss": [2.301994368920095, 2.302163715863886, 2.3022363418286362, 2.3016341983398125, 2.303379744649516, 2.3025323816215546], "accuracy": [0.09100515395402908, 0.0952318087220192, 0.09126931428909302, 0.0886276587843895, 0.08730682730674744, 0.09338264167308807], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]