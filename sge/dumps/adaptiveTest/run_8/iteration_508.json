[{"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 8, 2, 5, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.7905714511871338, "mapping_values": [1, 16, 16, 10, 6, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), grad))))), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.056456428713503, 1.827086398268042, 1.198492867914189, 0.9581648184717481, 0.8560331469167257, 0.791343589382338, 0.740860572911178, 0.6781776968860639, 0.6582918015406226, 0.6707569489688795, 0.6154688290081571, 0.6034909368757999, 0.5918372558202757, 0.5503083759208539, 0.52576900326801, 0.5506526897249914, 0.5235086871160256, 0.5296373099399643], "accuracy": [0.32703739404678345, 0.3800026476383209, 0.5521067380905151, 0.6384889483451843, 0.6781138777732849, 0.7008321285247803, 0.7137762308120728, 0.7403249144554138, 0.7456082701683044, 0.743891179561615, 0.7629110813140869, 0.7672698497772217, 0.7705719470977783, 0.7878747582435608, 0.8013472557067871, 0.7881389260292053, 0.8047813773155212, 0.8005547523498535], "val_loss": [1.6023773125239782, 1.0277337006160192, 0.7681674957275391, 0.8354977369308472, 0.683336581502642, 0.7006687436785016, 0.6000166961124965, 0.5156837190900531, 0.5986637047358921, 0.46780335903167725, 0.4710867064339774, 0.46493171794073923, 0.43659026282174246, 0.44137689045497347, 0.45035867180143085, 0.46879192761012484, 0.44514251606804983, 0.4379614165851048], "val_accuracy": [0.28866666555404663, 0.5206666588783264, 0.6650000214576721, 0.5923333168029785, 0.6786666512489319, 0.671999990940094, 0.721666693687439, 0.7379999756813049, 0.7276666760444641, 0.7973333597183228, 0.7993333339691162, 0.7946666479110718, 0.8103333115577698, 0.8080000281333923, 0.7910000085830688, 0.7753333449363708, 0.7913333177566528, 0.809333324432373]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 1, 1, 2, 9, 2, 8, 2, 9, 6, 1, 8], [1, 3, 2, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 51, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.7905714511871338, "mapping_values": [1, 16, 16, 10, 6, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.subtract(alpha, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))), grad)))), tf.math.divide_no_nan(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), grad))), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.056456428713503, 1.827086398268042, 1.198492867914189, 0.9581648184717481, 0.8560331469167257, 0.791343589382338, 0.740860572911178, 0.6781776968860639, 0.6582918015406226, 0.6707569489688795, 0.6154688290081571, 0.6034909368757999, 0.5918372558202757, 0.5503083759208539, 0.52576900326801, 0.5506526897249914, 0.5235086871160256, 0.5296373099399643], "accuracy": [0.32703739404678345, 0.3800026476383209, 0.5521067380905151, 0.6384889483451843, 0.6781138777732849, 0.7008321285247803, 0.7137762308120728, 0.7403249144554138, 0.7456082701683044, 0.743891179561615, 0.7629110813140869, 0.7672698497772217, 0.7705719470977783, 0.7878747582435608, 0.8013472557067871, 0.7881389260292053, 0.8047813773155212, 0.8005547523498535], "val_loss": [1.6023773125239782, 1.0277337006160192, 0.7681674957275391, 0.8354977369308472, 0.683336581502642, 0.7006687436785016, 0.6000166961124965, 0.5156837190900531, 0.5986637047358921, 0.46780335903167725, 0.4710867064339774, 0.46493171794073923, 0.43659026282174246, 0.44137689045497347, 0.45035867180143085, 0.46879192761012484, 0.44514251606804983, 0.4379614165851048], "val_accuracy": [0.28866666555404663, 0.5206666588783264, 0.6650000214576721, 0.5923333168029785, 0.6786666512489319, 0.671999990940094, 0.721666693687439, 0.7379999756813049, 0.7276666760444641, 0.7973333597183228, 0.7993333339691162, 0.7946666479110718, 0.8103333115577698, 0.8080000281333923, 0.7910000085830688, 0.7753333449363708, 0.7913333177566528, 0.809333324432373]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 9, 6, 2, 0, 3, 5, 3, 6, 6, 1, 8, 3, 5, 0], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.7905714511871338, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.056456428713503, 1.827086398268042, 1.198492867914189, 0.9581648184717481, 0.8560331469167257, 0.791343589382338, 0.740860572911178, 0.6781776968860639, 0.6582918015406226, 0.6707569489688795, 0.6154688290081571, 0.6034909368757999, 0.5918372558202757, 0.5503083759208539, 0.52576900326801, 0.5506526897249914, 0.5235086871160256, 0.5296373099399643], "accuracy": [0.32703739404678345, 0.3800026476383209, 0.5521067380905151, 0.6384889483451843, 0.6781138777732849, 0.7008321285247803, 0.7137762308120728, 0.7403249144554138, 0.7456082701683044, 0.743891179561615, 0.7629110813140869, 0.7672698497772217, 0.7705719470977783, 0.7878747582435608, 0.8013472557067871, 0.7881389260292053, 0.8047813773155212, 0.8005547523498535], "val_loss": [1.6023773125239782, 1.0277337006160192, 0.7681674957275391, 0.8354977369308472, 0.683336581502642, 0.7006687436785016, 0.6000166961124965, 0.5156837190900531, 0.5986637047358921, 0.46780335903167725, 0.4710867064339774, 0.46493171794073923, 0.43659026282174246, 0.44137689045497347, 0.45035867180143085, 0.46879192761012484, 0.44514251606804983, 0.4379614165851048], "val_accuracy": [0.28866666555404663, 0.5206666588783264, 0.6650000214576721, 0.5923333168029785, 0.6786666512489319, 0.671999990940094, 0.721666693687439, 0.7379999756813049, 0.7276666760444641, 0.7973333597183228, 0.7993333339691162, 0.7946666479110718, 0.8103333115577698, 0.8080000281333923, 0.7910000085830688, 0.7753333449363708, 0.7913333177566528, 0.809333324432373]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0], [2, 8, 6, 6, 0, 3, 4, 2, 5, 6, 1, 8, 8, 4, 2, 5, 4, 8, 9], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46, 36, 3], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.7905714511871338, "mapping_values": [1, 30, 30, 19, 11, 7, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.pow(tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))))), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))))), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.056456428713503, 1.827086398268042, 1.198492867914189, 0.9581648184717481, 0.8560331469167257, 0.791343589382338, 0.740860572911178, 0.6781776968860639, 0.6582918015406226, 0.6707569489688795, 0.6154688290081571, 0.6034909368757999, 0.5918372558202757, 0.5503083759208539, 0.52576900326801, 0.5506526897249914, 0.5235086871160256, 0.5296373099399643], "accuracy": [0.32703739404678345, 0.3800026476383209, 0.5521067380905151, 0.6384889483451843, 0.6781138777732849, 0.7008321285247803, 0.7137762308120728, 0.7403249144554138, 0.7456082701683044, 0.743891179561615, 0.7629110813140869, 0.7672698497772217, 0.7705719470977783, 0.7878747582435608, 0.8013472557067871, 0.7881389260292053, 0.8047813773155212, 0.8005547523498535], "val_loss": [1.6023773125239782, 1.0277337006160192, 0.7681674957275391, 0.8354977369308472, 0.683336581502642, 0.7006687436785016, 0.6000166961124965, 0.5156837190900531, 0.5986637047358921, 0.46780335903167725, 0.4710867064339774, 0.46493171794073923, 0.43659026282174246, 0.44137689045497347, 0.45035867180143085, 0.46879192761012484, 0.44514251606804983, 0.4379614165851048], "val_accuracy": [0.28866666555404663, 0.5206666588783264, 0.6650000214576721, 0.5923333168029785, 0.6786666512489319, 0.671999990940094, 0.721666693687439, 0.7379999756813049, 0.7276666760444641, 0.7973333597183228, 0.7993333339691162, 0.7946666479110718, 0.8103333115577698, 0.8080000281333923, 0.7910000085830688, 0.7753333449363708, 0.7913333177566528, 0.809333324432373]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 9, 6, 6, 6, 0, 8, 2, 5, 2, 1, 8], [2, 0, 0, 2, 2, 1, 2, 2, 0, 0, 0, 3, 2, 2], [26, 29, 87, 70, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [14, 25, 50, 71, 34]], "fitness": -0.5351428389549255, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302758166251827, 2.301108339348993, 2.2976953706500742, 2.2978340789957166, 2.295797249675978, 2.29377352786716, 2.2928293939153863, 2.290029401020871, 2.287228944326483, 2.2868536526988983, 2.2853411929387897, 2.283641661099943, 2.2827446996386276, 2.279615539018709, 2.277854613624213, 2.277857257799938, 2.275373965143575, 2.275014834491537, 2.2739847003350784, 2.270676281379435, 2.269808539026654, 2.2683688811401823, 2.2668820423551477, 2.2651567337236163, 2.264644366812161, 2.2622010400187875, 2.2591142797703125, 2.2578516310673065, 2.257024601765155, 2.2563298427512253, 2.250799976555962, 2.2508564319718927, 2.2480801532706565, 2.248203260582735, 2.245241051384046, 2.2419557767285334, 2.2408463837464, 2.238579849289267, 2.2381382464669746, 2.2359602047294564, 2.2337315340461577, 2.2302024524760773, 2.2269401855126127, 2.226752505436581, 2.223669307484776, 2.2222127542204753, 2.219710509318245, 2.216949855237353, 2.2145541714104082, 2.211022520077904, 2.2090515749030315, 2.207860516519311, 2.204847801630728, 2.2011694194240468, 2.200367587164739, 2.196845471315758, 2.195444474587461, 2.1895383945498343, 2.189212988805714, 2.1858063379629584, 2.182200793876089, 2.1804144426564247, 2.1758478104462005, 2.1727080560237537, 2.168745318046099, 2.16635313425806, 2.164045054410915, 2.159448890701151, 2.1582515861663394, 2.152986632645516, 2.150523329297581, 2.145051006659257, 2.1418985225552536, 2.1388390089117415, 2.1354564003672944, 2.129567542143502, 2.123629226881074, 2.123145479488965, 2.117559161593712, 2.113933730701713, 2.1116668591016254, 2.1040740220333527, 2.102084940072804, 2.0975499785162155, 2.091357170299469, 2.0876083697121395, 2.07738020646495, 2.078576329330396, 2.0700240476555622, 2.0657214550939864, 2.0622353094947683, 2.0550323261671126, 2.0517307442917154, 2.0453347717970907, 2.038803500175602, 2.034299846684944, 2.0255381918665187, 2.022444719336745, 2.0152238141181935, 2.0086721656281856], "accuracy": [0.08585391938686371, 0.09285431355237961, 0.09959053993225098, 0.09694888442754745, 0.10817593336105347, 0.11715757846832275, 0.11610091477632523, 0.12468630075454712, 0.12891295552253723, 0.1282525360584259, 0.1320829540491104, 0.13538502156734467, 0.1422533392906189, 0.1488574892282486, 0.1508387327194214, 0.15849953889846802, 0.1632545292377472, 0.16655659675598145, 0.1702549159526825, 0.17633073031902313, 0.17778365314006805, 0.17976489663124084, 0.18940694630146027, 0.18953903019428253, 0.18795403838157654, 0.19891692698001862, 0.20552106201648712, 0.2071060687303543, 0.2020869106054306, 0.2102760523557663, 0.22401267290115356, 0.22123894095420837, 0.23180557787418365, 0.23074890673160553, 0.23259806632995605, 0.2401268035173416, 0.2429005354642868, 0.25003302097320557, 0.24963676929473877, 0.2550521790981293, 0.260071337223053, 0.26297715306282043, 0.26641130447387695, 0.2662792205810547, 0.2744683623313904, 0.2709021270275116, 0.278959184885025, 0.28384625911712646, 0.2856954038143158, 0.2977149784564972, 0.2911108136177063, 0.2950733006000519, 0.30141329765319824, 0.30260202288627625, 0.30722492933273315, 0.3156782388687134, 0.31145158410072327, 0.3238673806190491, 0.31805574893951416, 0.32664114236831665, 0.32664114236831665, 0.3217540681362152, 0.3349623680114746, 0.3329811096191406, 0.3397173285484314, 0.3339056968688965, 0.3423590064048767, 0.34328359365463257, 0.3431515097618103, 0.354510635137558, 0.35622772574424744, 0.3537181317806244, 0.3485668897628784, 0.3531897962093353, 0.3568881154060364, 0.3673226833343506, 0.37339848279953003, 0.3671905994415283, 0.37128517031669617, 0.36481308937072754, 0.3673226833343506, 0.372209757566452, 0.3737947344779968, 0.37881389260292053, 0.37300223112106323, 0.3829084634780884, 0.3999471664428711, 0.3863426148891449, 0.3863426148891449, 0.3961167633533478, 0.387399286031723, 0.3975696861743927, 0.39307886362075806, 0.39981508255004883, 0.3987584114074707, 0.39902257919311523, 0.40668338537216187, 0.40866464376449585, 0.41566503047943115, 0.41249504685401917], "val_loss": [1.969052519117083, 1.9675371306283134, 1.966010298047747, 1.96449613571167, 1.9629902839660645, 1.9614861352103097, 1.9599847112383162, 1.9585066522870744, 1.9569961002894811, 1.9555016245160783, 1.954019614628383, 1.9525166239057268, 1.951012066432408, 1.949507577078683, 1.9479829243251257, 1.9464530944824219, 1.94491365977696, 1.9433864184788294, 1.9418539319719588, 1.9402852739606584, 1.9387149129595076, 1.9371369906834193, 1.9355464662824358, 1.9339472225734167, 1.9323411669049944, 1.930718217577253, 1.929060799734933, 1.9273964336940221, 1.925743647984096, 1.9240568705967493, 1.9223072869437081, 1.9205519131251745, 1.9187883649553572, 1.9170148032052177, 1.9151979855128698, 1.9133283070155553, 1.911468505859375, 1.909557683127267, 1.9076509475708008, 1.9057222775050573, 1.9037417003086634, 1.9017225674220495, 1.8996613366263253, 1.897564274924142, 1.8954360825674874, 1.8932792118617467, 1.8910696847098214, 1.8888120651245117, 1.8865217481340681, 1.8841802733285087, 1.8818100520542689, 1.879408836364746, 1.8769543511526925, 1.8744417599269323, 1.871892043522426, 1.8693155561174666, 1.8666793278285436, 1.863938876560756, 1.8611810547964913, 1.8583845411028181, 1.8554820333208357, 1.8525774138314384, 1.8495712280273438, 1.8464997155325753, 1.843360764639718, 1.8401662281581335, 1.8369601113455636, 1.8336488859994071, 1.8303052357264928, 1.8268662180219377, 1.8233985900878906, 1.8198137964521135, 1.8161623137337821, 1.8124420302254813, 1.8087075778416224, 1.8048477172851562, 1.8008966445922852, 1.7969145774841309, 1.792837347303118, 1.7887006487165178, 1.7844912665230888, 1.7801886286054338, 1.7758599008832658, 1.7714324678693498, 1.7668941361563546, 1.7622781481061662, 1.7574942452566964, 1.7527414049421037, 1.7478161539350237, 1.742823532649449, 1.7378031866891044, 1.732649462563651, 1.7274198532104492, 1.7221191270010812, 1.7166716030665807, 1.7111517361232214, 1.7055352415357317, 1.6998533861977714, 1.6940600531441825, 1.6881708417619978], "val_accuracy": [0.04899999871850014, 0.05900000035762787, 0.06700000166893005, 0.0793333351612091, 0.09366666525602341, 0.1106666699051857, 0.1263333261013031, 0.13866665959358215, 0.15399999916553497, 0.1679999977350235, 0.1863333284854889, 0.20000000298023224, 0.21400000154972076, 0.22433333098888397, 0.23666666448116302, 0.2486666738986969, 0.2626666724681854, 0.2750000059604645, 0.28999999165534973, 0.29733332991600037, 0.3073333203792572, 0.3166666626930237, 0.3256666660308838, 0.33666667342185974, 0.34466665983200073, 0.3513333201408386, 0.35733333230018616, 0.3616666793823242, 0.367333322763443, 0.37066665291786194, 0.3773333430290222, 0.3799999952316284, 0.382999986410141, 0.38466668128967285, 0.38733333349227905, 0.39133334159851074, 0.3959999978542328, 0.39899998903274536, 0.40166667103767395, 0.4046666622161865, 0.4090000092983246, 0.4103333353996277, 0.4156666696071625, 0.41733333468437195, 0.421999990940094, 0.4269999861717224, 0.42899999022483826, 0.429666668176651, 0.4333333373069763, 0.43566668033599854, 0.43666666746139526, 0.43833333253860474, 0.4399999976158142, 0.44200000166893005, 0.445333331823349, 0.44966667890548706, 0.45133334398269653, 0.4533333480358124, 0.4566666781902313, 0.4569999873638153, 0.46000000834465027, 0.4659999907016754, 0.46833333373069763, 0.47066667675971985, 0.4726666808128357, 0.4736666679382324, 0.47566667199134827, 0.4776666760444641, 0.47999998927116394, 0.48133334517478943, 0.4846666753292084, 0.48533332347869873, 0.4869999885559082, 0.4893333315849304, 0.492000013589859, 0.4950000047683716, 0.49566665291786194, 0.4976666569709778, 0.49966666102409363, 0.5016666650772095, 0.5043333172798157, 0.5073333382606506, 0.5096666812896729, 0.5116666555404663, 0.5146666765213013, 0.5176666378974915, 0.5206666588783264, 0.5226666927337646, 0.5256666541099548, 0.5289999842643738, 0.531000018119812, 0.5316666960716248, 0.5333333611488342, 0.5350000262260437, 0.5366666913032532, 0.5383333563804626, 0.5383333563804626, 0.5396666526794434, 0.5413333177566528, 0.5429999828338623]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [2, 9, 6, 1, 5, 1, 8, 1, 6, 5, 8, 8, 1, 2, 0], [2, 3, 0, 0, 2, 0, 0, 2, 0, 0, 0, 3, 2, 2], [39, 98, 83, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 3, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.26571428775787354, "mapping_values": [1, 18, 18, 12, 6, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.sqrt(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, sigma), beta)", "other_info": {"loss": [2.9162371060662755, 2.293658257821894, 2.269173833373169, 2.3049891607211235, 2.302661646563442, 2.2644265296673023, 2.2824845358428227], "accuracy": [0.17936864495277405, 0.11530841141939163, 0.13129045069217682, 0.10091137140989304, 0.1002509593963623, 0.1574428677558899, 0.17804782092571259], "val_loss": [1.9786366053989954, 1.8096726281302316, 1.975985322679792, 1.9733906473432268, 1.970238140651158, 1.7124364376068115, 1.9705157279968262], "val_accuracy": [0.09833333641290665, 0.26866665482521057, 0.10400000214576721, 0.13566666841506958, 0.10233332961797714, 0.2163333296775818, 0.10433333367109299]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [2, 1, 8, 2, 5, 2, 8, 2, 9, 6, 1, 8], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 3, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.26571428775787354, "mapping_values": [1, 14, 14, 9, 5, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.sqrt(grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, sigma), beta)", "other_info": {"loss": [2.9162371060662755, 2.293658257821894, 2.269173833373169, 2.3049891607211235, 2.302661646563442, 2.2644265296673023, 2.2824845358428227], "accuracy": [0.17936864495277405, 0.11530841141939163, 0.13129045069217682, 0.10091137140989304, 0.1002509593963623, 0.1574428677558899, 0.17804782092571259], "val_loss": [1.9786366053989954, 1.8096726281302316, 1.975985322679792, 1.9733906473432268, 1.970238140651158, 1.7124364376068115, 1.9705157279968262], "val_accuracy": [0.09833333641290665, 0.26866665482521057, 0.10400000214576721, 0.13566666841506958, 0.10233332961797714, 0.2163333296775818, 0.10433333367109299]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 0, 8, 2, 5, 2, 1, 8], [2, 0, 2, 2, 2, 1, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 3, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [8, 25, 50, 71, 34]], "fitness": -0.26571428775787354, "mapping_values": [1, 8, 8, 5, 3, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, sigma), beta)", "other_info": {"loss": [2.9162371060662755, 2.293658257821894, 2.269173833373169, 2.3049891607211235, 2.302661646563442, 2.2644265296673023, 2.2824845358428227], "accuracy": [0.17936864495277405, 0.11530841141939163, 0.13129045069217682, 0.10091137140989304, 0.1002509593963623, 0.1574428677558899, 0.17804782092571259], "val_loss": [1.9786366053989954, 1.8096726281302316, 1.975985322679792, 1.9733906473432268, 1.970238140651158, 1.7124364376068115, 1.9705157279968262], "val_accuracy": [0.09833333641290665, 0.26866665482521057, 0.10400000214576721, 0.13566666841506958, 0.10233332961797714, 0.2163333296775818, 0.10433333367109299]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [2, 1, 6, 2, 0, 3, 5, 2, 6, 6, 1, 8, 3, 4, 6, 2, 7, 0, 6, 9, 2, 7, 5, 9], [2, 0, 0, 2, 0, 1, 2, 2, 0, 0, 0, 3, 2, 2, 3, 2], [26, 29, 87, 70, 46, 55, 44, 13], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [9, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 40, 40, 24, 16, 8, 8, 8, 4, 4, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, grad))), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))))), tf.math.negative(tf.math.divide_no_nan(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), grad))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(tf.math.square(tf.math.add(alpha, grad)), grad)))))))), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), grad)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302291642185121, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 9, 6, 2, 0, 3, 5, 8, 6, 6, 1, 8, 3, 5, 0], [2, 0, 0, 2, 2, 1, 2, 2, 0, 0, 0, 3, 2, 2], [26, 29, 87, 70, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 7, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 1, 2, 2, 5, 2, 8, 9, 9, 6, 1, 8], [0, 3, 0, 2, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [1, 3, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 10, 5, 4, 8, 8, 4, 4, 0, 5, 3, 2, 1, 0, 5, 2, 3, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.sqrt(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad)))), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(alpha, sigma), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 9, 0, 3, 9, 2, 8, 6, 1, 8], [2, 3, 0, 1, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 48, 83, 46], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 8, 8, 4, 4, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), grad)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1], [2, 0, 6, 2, 0, 5, 5, 5, 6, 6, 8, 8, 1, 2, 0], [2, 0, 0, 2, 0, 1, 2, 2, 0, 0, 0, 3, 2, 2], [51, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 11, 6, 3, 8, 8, 4, 4, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))))))))), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.math.sqrt(alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [1, 1, 8, 2, 5, 2, 2, 2, 9, 6, 1, 8], [2, 2, 2, 2, 2, 1, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [9, 3, 2, 9, 2, 9], [2, 3, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 9, 6, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.sqrt(grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), grad), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), grad)))), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302291642185121, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 5, 4, 0, 3, 8, 2, 5, 6, 1, 8], [0, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 35, 68, 51, 46], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 3, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 2, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 9, 5, 4, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, sigma), tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.302291642185121, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 9, 9, 2, 1, 1, 5, 2, 5, 6, 8, 8, 1, 2, 0], [2, 0, 2, 1, 0, 0, 2, 2, 0, 0, 0, 3, 2, 2], [39, 98, 11, 73, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 4, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [5.672621570794243, 2.607048057876857, 2.656795349418369, 2.718774167506639, 2.5588665658519756, 2.7165095675434054, 2.6689643778616428, 97551.22401896835, 13.099511635254686, 2.4362013721352698], "accuracy": [0.0944393053650856, 0.10236428678035736, 0.10394927859306335, 0.09998679161071777, 0.09509972482919693, 0.10460969805717468, 0.10989301651716232, 0.09866596013307571, 0.10077928751707077, 0.1002509593963623], "val_loss": [1.9672763688223702, 1.9668760299682617, 1.9619214194161552, 1.974510874067034, 1.9732511384146554, 1.9916326659066337, 1.9841600826808385, 66.34445408412388, 2.0129761695861816, 2.061615126473563], "val_accuracy": [0.10233332961797714, 0.10300000011920929, 0.0976666659116745, 0.10199999809265137, 0.10400000214576721, 0.10000000149011612, 0.0976666659116745, 0.10400000214576721, 0.10400000214576721, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 9, 6, 2, 0, 1, 5, 1, 9, 6, 8, 8, 1, 2, 0], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 98, 68, 73, 46], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.055142857134342194, "mapping_values": [1, 15, 15, 10, 5, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.subtract(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))))), tf.math.divide_no_nan(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), grad))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.471235414521884, 2.414285737635862, 2.2687366872242554, 2.37185277896015, 2.2407259462752345, 2.1106185578178844, 2.071598656818993, 2.056237351829822, 2.055462312200806, 2.1553992185893707, 2.2822329155946246, 2.3096953994956047], "accuracy": [0.26482629776000977, 0.13802668452262878, 0.13921542465686798, 0.17897239327430725, 0.1900673657655716, 0.252938836812973, 0.2646942138671875, 0.28239333629608154, 0.25822216272354126, 0.24422137439250946, 0.1710474193096161, 0.14093250036239624], "val_loss": [1.9116458211626326, 1.993107523236956, 1.885436943599156, 1.894501073019845, 1.70684848512922, 1.49595730645316, 1.4623636518205916, 1.5600036893572127, 1.764493669782366, 1.7016740867069788, 1.8686181477137975, 1.972950049809047], "val_accuracy": [0.17533333599567413, 0.09966666996479034, 0.1913333386182785, 0.21466666460037231, 0.30033332109451294, 0.3449999988079071, 0.3903333246707916, 0.367000013589859, 0.2906666696071625, 0.32199999690055847, 0.20499999821186066, 0.12866666913032532]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 9, 6, 2, 0, 3, 5, 3, 6, 6, 1, 8, 3, 5, 0], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 29, 87, 70, 46], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.055142857134342194, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.471235414521884, 2.414285737635862, 2.2687366872242554, 2.37185277896015, 2.2407259462752345, 2.1106185578178844, 2.071598656818993, 2.056237351829822, 2.055462312200806, 2.1553992185893707, 2.2822329155946246, 2.3096953994956047], "accuracy": [0.26482629776000977, 0.13802668452262878, 0.13921542465686798, 0.17897239327430725, 0.1900673657655716, 0.252938836812973, 0.2646942138671875, 0.28239333629608154, 0.25822216272354126, 0.24422137439250946, 0.1710474193096161, 0.14093250036239624], "val_loss": [1.9116458211626326, 1.993107523236956, 1.885436943599156, 1.894501073019845, 1.70684848512922, 1.49595730645316, 1.4623636518205916, 1.5600036893572127, 1.764493669782366, 1.7016740867069788, 1.8686181477137975, 1.972950049809047], "val_accuracy": [0.17533333599567413, 0.09966666996479034, 0.1913333386182785, 0.21466666460037231, 0.30033332109451294, 0.3449999988079071, 0.3903333246707916, 0.367000013589859, 0.2906666696071625, 0.32199999690055847, 0.20499999821186066, 0.12866666913032532]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 4, 6, 6, 0, 3, 8, 4, 5, 6, 1, 8], [2, 1, 0, 1, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [77, 98, 68, 73, 46], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 1], [7, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.055142857134342194, "mapping_values": [1, 15, 15, 8, 7, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))))), tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))), grad))))), tf.math.add(alpha, tf.math.pow(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.471235414521884, 2.414285737635862, 2.2687366872242554, 2.37185277896015, 2.2407259462752345, 2.1106185578178844, 2.071598656818993, 2.056237351829822, 2.055462312200806, 2.1553992185893707, 2.2822329155946246, 2.3096953994956047], "accuracy": [0.26482629776000977, 0.13802668452262878, 0.13921542465686798, 0.17897239327430725, 0.1900673657655716, 0.252938836812973, 0.2646942138671875, 0.28239333629608154, 0.25822216272354126, 0.24422137439250946, 0.1710474193096161, 0.14093250036239624], "val_loss": [1.9116458211626326, 1.993107523236956, 1.885436943599156, 1.894501073019845, 1.70684848512922, 1.49595730645316, 1.4623636518205916, 1.5600036893572127, 1.764493669782366, 1.7016740867069788, 1.8686181477137975, 1.972950049809047], "val_accuracy": [0.17533333599567413, 0.09966666996479034, 0.1913333386182785, 0.21466666460037231, 0.30033332109451294, 0.3449999988079071, 0.3903333246707916, 0.367000013589859, 0.2906666696071625, 0.32199999690055847, 0.20499999821186066, 0.12866666913032532]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 9, 6, 2, 0, 3, 5, 3, 6, 6, 1, 8, 3, 5, 0], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [26, 29, 87, 70, 46], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 8, 8, 8, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 4, 3, 3, 0, 2, 1, 3, 0, 0], [60, 17, 93, 84, 1, 78], [1, 0, 1, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [5, 3], [], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 2, 9, 2, 9], [2, 0, 2, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [52, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3034295882090383, 2.3033889202850526, 2.301614320730064, 2.3033848644924704, 2.302932200603765, 2.302468109061579], "accuracy": [0.08532558381557465, 0.08677849918603897, 0.09074098616838455, 0.08241976052522659, 0.09285431355237961, 0.09602430462837219], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]