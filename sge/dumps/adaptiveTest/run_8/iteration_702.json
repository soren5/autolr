[{"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 0, 6, 2, 6, 1, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 3, 0, 0, 3, 1, 3, 0, 0], [32, 33, 2, 9, 74, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [2, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 8, 6, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [44, 25, 61, 71, 34]], "fitness": -0.7979999780654907, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 8, 6, 4, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.subtract(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.sqrt(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.221988974749971, 1.9444700768437635, 1.6921293038135317, 1.5775751400900837, 1.0732342192619988, 0.8341047064881079, 0.7373240974837164, 0.6981175977083764, 0.6494243329132805, 0.6317733244306423, 0.5947859467863013, 0.5747162816767302, 0.576459125528687, 0.5713380781761203, 0.549675341799369], "accuracy": [0.23695680499076843, 0.3605864346027374, 0.41909918189048767, 0.47246071696281433, 0.6136573553085327, 0.6942279934883118, 0.7181349992752075, 0.7367587089538574, 0.7526086568832397, 0.7623828053474426, 0.7781006693840027, 0.7872143983840942, 0.7802139520645142, 0.7827235460281372, 0.7931581139564514], "val_loss": [1.9189776011875697, 1.5769075666155135, 1.4127254145486015, 1.079085179737636, 0.6732914788382394, 0.6708279166902814, 0.5429877042770386, 0.5216922249112811, 0.5400291851588658, 0.4572729298046657, 0.5095690659114293, 0.48423051834106445, 0.4587029644421169, 0.5323849235262189, 0.4712449993406023], "val_accuracy": [0.4300000071525574, 0.367000013589859, 0.5133333206176758, 0.6029999852180481, 0.7170000076293945, 0.7213333249092102, 0.7663333415985107, 0.7743333578109741, 0.7616666555404663, 0.7986666560173035, 0.7713333368301392, 0.7850000262260437, 0.7893333435058594, 0.7519999742507935, 0.7846666574478149]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 3, 6, 4, 6, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 3, 0, 1, 2, 1, 3, 0, 0], [32, 87, 2, 82, 8, 7], [1, 0, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [3, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 8, 6, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [44, 25, 61, 71, 34]], "fitness": -0.7979999780654907, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 2, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.sqrt(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.221988974749971, 1.9444700768437635, 1.6921293038135317, 1.5775751400900837, 1.0732342192619988, 0.8341047064881079, 0.7373240974837164, 0.6981175977083764, 0.6494243329132805, 0.6317733244306423, 0.5947859467863013, 0.5747162816767302, 0.576459125528687, 0.5713380781761203, 0.549675341799369], "accuracy": [0.23695680499076843, 0.3605864346027374, 0.41909918189048767, 0.47246071696281433, 0.6136573553085327, 0.6942279934883118, 0.7181349992752075, 0.7367587089538574, 0.7526086568832397, 0.7623828053474426, 0.7781006693840027, 0.7872143983840942, 0.7802139520645142, 0.7827235460281372, 0.7931581139564514], "val_loss": [1.9189776011875697, 1.5769075666155135, 1.4127254145486015, 1.079085179737636, 0.6732914788382394, 0.6708279166902814, 0.5429877042770386, 0.5216922249112811, 0.5400291851588658, 0.4572729298046657, 0.5095690659114293, 0.48423051834106445, 0.4587029644421169, 0.5323849235262189, 0.4712449993406023], "val_accuracy": [0.4300000071525574, 0.367000013589859, 0.5133333206176758, 0.6029999852180481, 0.7170000076293945, 0.7213333249092102, 0.7663333415985107, 0.7743333578109741, 0.7616666555404663, 0.7986666560173035, 0.7713333368301392, 0.7850000262260437, 0.7893333435058594, 0.7519999742507935, 0.7846666574478149]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [6, 3, 3, 3, 6, 4, 6, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 1, 3, 3, 2, 1, 3, 0, 0], [57, 33, 46, 22, 74, 78], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [2, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 8, 6, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [44, 25, 61, 71, 34]], "fitness": -0.7979999780654907, "mapping_values": [1, 1, 1, 0, 1, 0, 21, 21, 12, 9, 4, 3, 1, 1, 0, 0, 5, 3, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), grad)))), tf.math.divide_no_nan(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), grad))), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, alpha))), tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.sqrt(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.221988974749971, 1.9444700768437635, 1.6921293038135317, 1.5775751400900837, 1.0732342192619988, 0.8341047064881079, 0.7373240974837164, 0.6981175977083764, 0.6494243329132805, 0.6317733244306423, 0.5947859467863013, 0.5747162816767302, 0.576459125528687, 0.5713380781761203, 0.549675341799369], "accuracy": [0.23695680499076843, 0.3605864346027374, 0.41909918189048767, 0.47246071696281433, 0.6136573553085327, 0.6942279934883118, 0.7181349992752075, 0.7367587089538574, 0.7526086568832397, 0.7623828053474426, 0.7781006693840027, 0.7872143983840942, 0.7802139520645142, 0.7827235460281372, 0.7931581139564514], "val_loss": [1.9189776011875697, 1.5769075666155135, 1.4127254145486015, 1.079085179737636, 0.6732914788382394, 0.6708279166902814, 0.5429877042770386, 0.5216922249112811, 0.5400291851588658, 0.4572729298046657, 0.5095690659114293, 0.48423051834106445, 0.4587029644421169, 0.5323849235262189, 0.4712449993406023], "val_accuracy": [0.4300000071525574, 0.367000013589859, 0.5133333206176758, 0.6029999852180481, 0.7170000076293945, 0.7213333249092102, 0.7663333415985107, 0.7743333578109741, 0.7616666555404663, 0.7986666560173035, 0.7713333368301392, 0.7850000262260437, 0.7893333435058594, 0.7519999742507935, 0.7846666574478149]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 2, 6, 3, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 3, 3, 1, 2, 3, 3, 0, 3], [32, 87, 2, 82, 8, 7], [1, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [2, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 8, 6, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [44, 25, 61, 71, 34]], "fitness": -0.7934285998344421, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 2, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.multiply(grad, alpha)))), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0266452641960115, 1.3809107130450218, 1.0547354230791304, 0.8783621861635182, 0.7866257340869317, 0.7374396072859305, 0.7141024339641515, 0.6841269351188706, 0.6697582247911931, 0.6185077311592394, 0.6330996355785591, 0.6350813222882487, 0.5972765328909002, 0.5938532119728807, 0.5828408246279047, 0.5487228839420419, 0.5697846368728706], "accuracy": [0.3203011453151703, 0.5086514353752136, 0.6139215230941772, 0.6754721999168396, 0.702681303024292, 0.7194558382034302, 0.7323999404907227, 0.7349095344543457, 0.7464007139205933, 0.7681944370269775, 0.7543256878852844, 0.754589855670929, 0.7766477465629578, 0.7761194109916687, 0.7751948237419128, 0.7961959838867188, 0.7823272943496704], "val_loss": [1.5696852547781808, 0.8141265426363263, 0.7002135174615043, 0.6452709095818656, 0.5687598500932965, 0.5909403903143746, 0.5415930237088885, 0.6010785443442208, 0.5037376880645752, 0.48665123326437815, 0.5398267166955131, 0.46535532815115793, 0.502606851713998, 0.51335494858878, 0.4426212651388986, 0.4716616017477853, 0.4750467538833618], "val_accuracy": [0.3919999897480011, 0.6136666536331177, 0.6996666789054871, 0.7070000171661377, 0.7573333382606506, 0.7400000095367432, 0.7630000114440918, 0.734333336353302, 0.784333348274231, 0.7993333339691162, 0.7563333511352539, 0.8059999942779541, 0.7823333144187927, 0.7616666555404663, 0.8036666512489319, 0.7863333225250244, 0.7919999957084656]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [6, 2, 3, 2, 6, 1, 9, 1, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 3, 0, 0, 0, 1, 3, 0, 0], [75, 90, 2, 9, 74, 78, 66], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [2, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 8, 6, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [44, 25, 61, 71, 34]], "fitness": -0.7934285998344421, "mapping_values": [1, 1, 1, 0, 1, 0, 21, 21, 12, 9, 7, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.add(beta, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, grad), grad)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha))))), tf.math.add(beta, grad)), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0266452641960115, 1.3809107130450218, 1.0547354230791304, 0.8783621861635182, 0.7866257340869317, 0.7374396072859305, 0.7141024339641515, 0.6841269351188706, 0.6697582247911931, 0.6185077311592394, 0.6330996355785591, 0.6350813222882487, 0.5972765328909002, 0.5938532119728807, 0.5828408246279047, 0.5487228839420419, 0.5697846368728706], "accuracy": [0.3203011453151703, 0.5086514353752136, 0.6139215230941772, 0.6754721999168396, 0.702681303024292, 0.7194558382034302, 0.7323999404907227, 0.7349095344543457, 0.7464007139205933, 0.7681944370269775, 0.7543256878852844, 0.754589855670929, 0.7766477465629578, 0.7761194109916687, 0.7751948237419128, 0.7961959838867188, 0.7823272943496704], "val_loss": [1.5696852547781808, 0.8141265426363263, 0.7002135174615043, 0.6452709095818656, 0.5687598500932965, 0.5909403903143746, 0.5415930237088885, 0.6010785443442208, 0.5037376880645752, 0.48665123326437815, 0.5398267166955131, 0.46535532815115793, 0.502606851713998, 0.51335494858878, 0.4426212651388986, 0.4716616017477853, 0.4750467538833618], "val_accuracy": [0.3919999897480011, 0.6136666536331177, 0.6996666789054871, 0.7070000171661377, 0.7573333382606506, 0.7400000095367432, 0.7630000114440918, 0.734333336353302, 0.784333348274231, 0.7993333339691162, 0.7563333511352539, 0.8059999942779541, 0.7823333144187927, 0.7616666555404663, 0.8036666512489319, 0.7863333225250244, 0.7919999957084656]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [4, 5, 8, 2, 6, 1, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 0, 3, 2, 1, 3, 0, 0], [32, 87, 2, 82, 8, 7], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 8, 6, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [44, 25, 61, 71, 34]], "fitness": -0.7934285998344421, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 8, 3, 3, 3, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.sqrt(grad))), tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))))), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0266452641960115, 1.3809107130450218, 1.0547354230791304, 0.8783621861635182, 0.7866257340869317, 0.7374396072859305, 0.7141024339641515, 0.6841269351188706, 0.6697582247911931, 0.6185077311592394, 0.6330996355785591, 0.6350813222882487, 0.5972765328909002, 0.5938532119728807, 0.5828408246279047, 0.5487228839420419, 0.5697846368728706], "accuracy": [0.3203011453151703, 0.5086514353752136, 0.6139215230941772, 0.6754721999168396, 0.702681303024292, 0.7194558382034302, 0.7323999404907227, 0.7349095344543457, 0.7464007139205933, 0.7681944370269775, 0.7543256878852844, 0.754589855670929, 0.7766477465629578, 0.7761194109916687, 0.7751948237419128, 0.7961959838867188, 0.7823272943496704], "val_loss": [1.5696852547781808, 0.8141265426363263, 0.7002135174615043, 0.6452709095818656, 0.5687598500932965, 0.5909403903143746, 0.5415930237088885, 0.6010785443442208, 0.5037376880645752, 0.48665123326437815, 0.5398267166955131, 0.46535532815115793, 0.502606851713998, 0.51335494858878, 0.4426212651388986, 0.4716616017477853, 0.4750467538833618], "val_accuracy": [0.3919999897480011, 0.6136666536331177, 0.6996666789054871, 0.7070000171661377, 0.7573333382606506, 0.7400000095367432, 0.7630000114440918, 0.734333336353302, 0.784333348274231, 0.7993333339691162, 0.7563333511352539, 0.8059999942779541, 0.7823333144187927, 0.7616666555404663, 0.8036666512489319, 0.7863333225250244, 0.7919999957084656]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [4, 4, 3, 2, 3, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 3, 0, 3, 2, 1, 3, 0, 0], [34, 33, 2, 82, 74, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [2, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 8, 6, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [14, 25, 50, 71, 34]], "fitness": -0.7720000147819519, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 3, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.pow(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), tf.math.multiply(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), grad)))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.sqrt(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.2796456176748743, 2.210271422101868, 2.0907983011211213, 1.8711146160344154, 1.601698839370018, 1.3802978895784699, 1.2352621850714218, 1.1339632502762302, 1.0571553271444418, 1.006160074725143, 0.9604762891862748, 0.9347613339473889, 0.8936598870212911, 0.8721151318154583, 0.8574348784251976, 0.8422556070525019, 0.8168978589463779, 0.80645617395108, 0.8030067218009743, 0.7862065770543877, 0.7796163115802458, 0.7652450447399949, 0.7511094425253944, 0.7528813081316078, 0.7326125504082188, 0.7303666878905452, 0.7239691370340654, 0.7175436791348939, 0.7035810803582939, 0.6983689992513796, 0.7058141079277741, 0.6940124817276202, 0.6922907874789205, 0.6756438971305835, 0.6801057925250756, 0.6764929117134234, 0.6593031610999802, 0.663584019049457, 0.6553700288304752, 0.6585758490301693], "accuracy": [0.14740456640720367, 0.2863558232784271, 0.37604016065597534, 0.4449874460697174, 0.4881785809993744, 0.5383700728416443, 0.5742966532707214, 0.6037511825561523, 0.6267336010932922, 0.643772304058075, 0.6601505875587463, 0.6734909415245056, 0.6836613416671753, 0.685510516166687, 0.6930392384529114, 0.6966054439544678, 0.7046625018119812, 0.7123233675956726, 0.7119271159172058, 0.7132478952407837, 0.7144366502761841, 0.7152291536331177, 0.7273808121681213, 0.728701651096344, 0.7309470176696777, 0.7308149337768555, 0.7334566116333008, 0.7368907928466797, 0.7437590956687927, 0.7498348951339722, 0.7347774505615234, 0.7467969655990601, 0.7413815855979919, 0.7498348951339722, 0.7534011602401733, 0.7508915662765503, 0.7537974119186401, 0.7494386434555054, 0.7548540234565735, 0.7568352818489075], "val_loss": [1.9148499625069755, 1.8293006760733468, 1.662715196609497, 1.3969974858420235, 1.1266836438860213, 0.9471014567783901, 0.8384986775262016, 0.770175644329616, 0.7242837292807442, 0.6874852861676898, 0.6583166633333478, 0.641315221786499, 0.6248570850917271, 0.6061607088361468, 0.5935940061296735, 0.5817509549004691, 0.5798830986022949, 0.5702755280903408, 0.5581846237182617, 0.5536338261195591, 0.5441020727157593, 0.5398872068950108, 0.5372021198272705, 0.531235763004848, 0.5263012647628784, 0.5187803677150181, 0.5128169740949359, 0.5119388273784092, 0.5102382387433734, 0.5090515272957938, 0.5079434769494193, 0.49666617597852436, 0.49437592710767475, 0.48932177679879324, 0.48897390706198557, 0.48433164187840055, 0.4835142748696463, 0.479616641998291, 0.478586060660226, 0.48255763735089985], "val_accuracy": [0.3529999852180481, 0.4606666564941406, 0.5276666879653931, 0.5873333215713501, 0.6299999952316284, 0.6740000247955322, 0.7003333568572998, 0.6966666579246521, 0.70333331823349, 0.7266666889190674, 0.7296666502952576, 0.7279999852180481, 0.7396666407585144, 0.7513333559036255, 0.7549999952316284, 0.7606666684150696, 0.7463333606719971, 0.75, 0.7673333287239075, 0.765999972820282, 0.7760000228881836, 0.778333306312561, 0.7743333578109741, 0.7670000195503235, 0.7770000100135803, 0.7856666445732117, 0.7799999713897705, 0.7850000262260437, 0.7839999794960022, 0.7896666526794434, 0.7806666493415833, 0.7910000085830688, 0.7926666736602783, 0.7923333048820496, 0.7986666560173035, 0.7960000038146973, 0.7950000166893005, 0.7960000038146973, 0.7956666946411133, 0.7986666560173035]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1], [4, 4, 3, 2, 3, 1, 2, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 3, 0, 3, 1, 1, 3, 0, 0, 3], [32, 29, 2, 82, 8, 7], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [2, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 8, 6, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [14, 25, 50, 71, 34]], "fitness": -0.7720000147819519, "mapping_values": [1, 1, 1, 0, 1, 0, 24, 24, 13, 11, 5, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(grad, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, alpha)))), tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))))))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.sqrt(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.2796456176748743, 2.210271422101868, 2.0907983011211213, 1.8711146160344154, 1.601698839370018, 1.3802978895784699, 1.2352621850714218, 1.1339632502762302, 1.0571553271444418, 1.006160074725143, 0.9604762891862748, 0.9347613339473889, 0.8936598870212911, 0.8721151318154583, 0.8574348784251976, 0.8422556070525019, 0.8168978589463779, 0.80645617395108, 0.8030067218009743, 0.7862065770543877, 0.7796163115802458, 0.7652450447399949, 0.7511094425253944, 0.7528813081316078, 0.7326125504082188, 0.7303666878905452, 0.7239691370340654, 0.7175436791348939, 0.7035810803582939, 0.6983689992513796, 0.7058141079277741, 0.6940124817276202, 0.6922907874789205, 0.6756438971305835, 0.6801057925250756, 0.6764929117134234, 0.6593031610999802, 0.663584019049457, 0.6553700288304752, 0.6585758490301693], "accuracy": [0.14740456640720367, 0.2863558232784271, 0.37604016065597534, 0.4449874460697174, 0.4881785809993744, 0.5383700728416443, 0.5742966532707214, 0.6037511825561523, 0.6267336010932922, 0.643772304058075, 0.6601505875587463, 0.6734909415245056, 0.6836613416671753, 0.685510516166687, 0.6930392384529114, 0.6966054439544678, 0.7046625018119812, 0.7123233675956726, 0.7119271159172058, 0.7132478952407837, 0.7144366502761841, 0.7152291536331177, 0.7273808121681213, 0.728701651096344, 0.7309470176696777, 0.7308149337768555, 0.7334566116333008, 0.7368907928466797, 0.7437590956687927, 0.7498348951339722, 0.7347774505615234, 0.7467969655990601, 0.7413815855979919, 0.7498348951339722, 0.7534011602401733, 0.7508915662765503, 0.7537974119186401, 0.7494386434555054, 0.7548540234565735, 0.7568352818489075], "val_loss": [1.9148499625069755, 1.8293006760733468, 1.662715196609497, 1.3969974858420235, 1.1266836438860213, 0.9471014567783901, 0.8384986775262016, 0.770175644329616, 0.7242837292807442, 0.6874852861676898, 0.6583166633333478, 0.641315221786499, 0.6248570850917271, 0.6061607088361468, 0.5935940061296735, 0.5817509549004691, 0.5798830986022949, 0.5702755280903408, 0.5581846237182617, 0.5536338261195591, 0.5441020727157593, 0.5398872068950108, 0.5372021198272705, 0.531235763004848, 0.5263012647628784, 0.5187803677150181, 0.5128169740949359, 0.5119388273784092, 0.5102382387433734, 0.5090515272957938, 0.5079434769494193, 0.49666617597852436, 0.49437592710767475, 0.48932177679879324, 0.48897390706198557, 0.48433164187840055, 0.4835142748696463, 0.479616641998291, 0.478586060660226, 0.48255763735089985], "val_accuracy": [0.3529999852180481, 0.4606666564941406, 0.5276666879653931, 0.5873333215713501, 0.6299999952316284, 0.6740000247955322, 0.7003333568572998, 0.6966666579246521, 0.70333331823349, 0.7266666889190674, 0.7296666502952576, 0.7279999852180481, 0.7396666407585144, 0.7513333559036255, 0.7549999952316284, 0.7606666684150696, 0.7463333606719971, 0.75, 0.7673333287239075, 0.765999972820282, 0.7760000228881836, 0.778333306312561, 0.7743333578109741, 0.7670000195503235, 0.7770000100135803, 0.7856666445732117, 0.7799999713897705, 0.7850000262260437, 0.7839999794960022, 0.7896666526794434, 0.7806666493415833, 0.7910000085830688, 0.7926666736602783, 0.7923333048820496, 0.7986666560173035, 0.7960000038146973, 0.7950000166893005, 0.7960000038146973, 0.7956666946411133, 0.7986666560173035]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 5, 3, 2, 6, 2, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 3, 0, 0, 2, 1, 3, 0, 0], [32, 13, 2, 82, 74, 78], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [2, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 8, 6, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [14, 25, 50, 71, 34]], "fitness": -0.5351428389549255, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 7, 5, 4, 3, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.square(tf.math.multiply(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3028326619334303, 2.2999042726196017, 2.2988317484207568, 2.2952079177138955, 2.296329015659508, 2.2939233255896507, 2.2917399265038387, 2.2901760712748174, 2.287648943452756, 2.2862260446509413, 2.2861394375511495, 2.2855300065658946, 2.2823742547008137, 2.280754843565609, 2.2786835710905673, 2.2782150980125975, 2.2750944987956983, 2.2736904988624573, 2.273268086263737, 2.272602830911278, 2.2697352539231797, 2.268200237674484, 2.2666433742096426, 2.2644054332917567, 2.2635256816461937, 2.260748682335745, 2.2605631047582517, 2.2572766328453153, 2.255814341411709, 2.2542803930238002, 2.2518255683519524, 2.2495296446717474, 2.2488480139213265, 2.24658881977108, 2.246453427336298, 2.2431729515986656, 2.2395943960792684, 2.2390653938428993, 2.237197132977229, 2.2357119693889627, 2.233168489409318, 2.230660964626725, 2.2280680351348017, 2.2273415431464905, 2.2249690890233467, 2.2209227215801297, 2.2207563607101632, 2.2168463419897995, 2.2125955408338416, 2.213694807970135, 2.209791053728641, 2.207938983817977, 2.2055960686262557, 2.201829437566487, 2.201525711474748, 2.1955253998239073, 2.1949692569498875, 2.1912756896431516, 2.187479169755139, 2.1852488505164818, 2.182967166292228, 2.179891854292366, 2.177236591835914, 2.171590720279861, 2.1708495860653403, 2.164226166623506, 2.159916664520826, 2.159261227945185, 2.1563470213089824, 2.152235761877253, 2.149112235191334, 2.1452101716087038, 2.1424106706355492, 2.1372573943485156, 2.133224079716302, 2.1290271961142624, 2.1235269884533494, 2.1215482447456298, 2.1183832064910635, 2.110340751188936, 2.1078697583300956, 2.1043678894806312, 2.100871041781237, 2.0946362009137895, 2.087552729882364, 2.086045810118516, 2.0815920799541563, 2.0741221627948496, 2.069522505060966, 2.06381917645383, 2.060933392612516, 2.0571626368577944, 2.0496239842928916, 2.044539887686888, 2.036821063577916, 2.0368826849081763, 2.0249989236177406, 2.0260486112467886, 2.0122848630439587, 2.0088629318250404], "accuracy": [0.08519349992275238, 0.09642054885625839, 0.09959053993225098, 0.10579843819141388, 0.10355303436517715, 0.10989301651716232, 0.11266675591468811, 0.12323339283466339, 0.12468630075454712, 0.1274600476026535, 0.13221503794193268, 0.13908334076404572, 0.13815876841545105, 0.14674416184425354, 0.15229164063930511, 0.14991414546966553, 0.160084530711174, 0.16166952252388, 0.17051908373832703, 0.1706511676311493, 0.17474573850631714, 0.17553824186325073, 0.18095363676548004, 0.19099193811416626, 0.189274862408638, 0.19759608805179596, 0.20221899449825287, 0.2122572958469391, 0.2078985571861267, 0.21357811987400055, 0.22084268927574158, 0.2218993455171585, 0.22361643612384796, 0.23603223264217377, 0.23101307451725006, 0.23761722445487976, 0.2417117953300476, 0.24725927412509918, 0.2475234419107437, 0.24633470177650452, 0.2588825821876526, 0.2658829689025879, 0.2697133719921112, 0.2673358917236328, 0.2743362784385681, 0.27684587240219116, 0.2747325301170349, 0.2826575040817261, 0.28318583965301514, 0.2907145619392395, 0.2921674847602844, 0.294148713350296, 0.29639413952827454, 0.3035266101360321, 0.3027341067790985, 0.311319500207901, 0.3121120035648346, 0.31845200061798096, 0.32320696115493774, 0.3279619514942169, 0.32505613565444946, 0.320169061422348, 0.3361510932445526, 0.3329811096191406, 0.334169864654541, 0.33720776438713074, 0.34803855419158936, 0.3435477614402771, 0.3451327383518219, 0.34460440278053284, 0.351340651512146, 0.35186898708343506, 0.35186898708343506, 0.3626997768878937, 0.35966187715530396, 0.3597939610481262, 0.3646810054779053, 0.3661339282989502, 0.36547350883483887, 0.3726060092449188, 0.37207767367362976, 0.37168142199516296, 0.3811914026737213, 0.381719708442688, 0.387399286031723, 0.38422930240631104, 0.3811914026737213, 0.390569269657135, 0.3883238732814789, 0.392550528049469, 0.3891163766384125, 0.3891163766384125, 0.39743760228157043, 0.4053625762462616, 0.4023246467113495, 0.3975696861743927, 0.4113062918186188, 0.39770177006721497, 0.410910040140152, 0.41262713074684143], "val_loss": [1.969045775277274, 1.9675165585109167, 1.9660053253173828, 1.9645020621163505, 1.9629979814801897, 1.9615021433149065, 1.9600088936941964, 1.958517619541713, 1.9570158549717493, 1.9555251257760184, 1.9540125983101981, 1.9525178500584193, 1.9509996005467005, 1.9495068277631487, 1.9479975700378418, 1.946495192391532, 1.9449633870806013, 1.943427290235247, 1.941908700125558, 1.9403717858450753, 1.9388248579842704, 1.9372571536472865, 1.9356769834245955, 1.9340575763157435, 1.9324590819222587, 1.9308380399431502, 1.9291817801339286, 1.9275056975228446, 1.925833089011056, 1.9241483552115304, 1.9224328313555037, 1.920670645577567, 1.918916838509696, 1.9171270642961775, 1.9153095654078893, 1.9134725843157088, 1.911581584385463, 1.9096743719918388, 1.9077489035470145, 1.9058153969900948, 1.9038231032235282, 1.9018035616193498, 1.8997525487627303, 1.8976593017578125, 1.8955464363098145, 1.8933764866420202, 1.8911834444318498, 1.8889404024396623, 1.886629513331822, 1.884328774043492, 1.8819546699523926, 1.8795550891331263, 1.8770971298217773, 1.8745758192879813, 1.8720356396266393, 1.8693975721086775, 1.8667566435677665, 1.8640548842293876, 1.8612902505057198, 1.8584725516183036, 1.8556196349007743, 1.852700846535819, 1.8497492245265417, 1.8466946738106864, 1.8435931205749512, 1.8403708594185966, 1.8371155602591378, 1.8338029725211007, 1.8304315975734167, 1.8270038196018763, 1.8234829902648926, 1.819906302860805, 1.8162756647382463, 1.8125640324183874, 1.8087848254612513, 1.80490813936506, 1.800950186593192, 1.7969583102634974, 1.7928949764796667, 1.7887131827218192, 1.7844562530517578, 1.7801374707903181, 1.7757481847490584, 1.7712550163269043, 1.7666504042489188, 1.762005192892892, 1.7572951316833496, 1.7524449484688895, 1.7475223541259766, 1.7425012588500977, 1.7374578203473772, 1.7323153359549386, 1.7270753043038505, 1.7217482839311873, 1.7162812096732003, 1.7108033725193568, 1.7051803725106376, 1.6995400020054408, 1.6937128816332137, 1.6878018038613456], "val_accuracy": [0.04933333396911621, 0.060333333909511566, 0.06833333522081375, 0.07966666668653488, 0.09366666525602341, 0.11166666448116302, 0.12466666847467422, 0.14000000059604645, 0.1550000011920929, 0.16866666078567505, 0.18466666340827942, 0.20133332908153534, 0.21566666662693024, 0.22633333504199982, 0.23633334040641785, 0.24666666984558105, 0.2630000114440918, 0.2750000059604645, 0.2893333435058594, 0.29733332991600037, 0.3086666762828827, 0.31566667556762695, 0.3256666660308838, 0.33266666531562805, 0.34433332085609436, 0.3499999940395355, 0.35466668009757996, 0.3606666624546051, 0.3659999966621399, 0.36800000071525574, 0.37166666984558105, 0.3776666522026062, 0.3799999952316284, 0.38366666436195374, 0.38600000739097595, 0.38966667652130127, 0.39366665482521057, 0.39633333683013916, 0.3996666669845581, 0.40400001406669617, 0.4059999883174896, 0.4086666703224182, 0.4113333225250244, 0.41466665267944336, 0.41733333468437195, 0.42266666889190674, 0.42766666412353516, 0.4286666810512543, 0.4309999942779541, 0.4333333373069763, 0.43433332443237305, 0.4359999895095825, 0.43833333253860474, 0.4399999976158142, 0.4423333406448364, 0.4463333189487457, 0.4493333399295807, 0.45233333110809326, 0.4556666612625122, 0.4569999873638153, 0.4583333432674408, 0.46399998664855957, 0.46533334255218506, 0.4659999907016754, 0.4690000116825104, 0.4699999988079071, 0.47200000286102295, 0.47466665506362915, 0.476666659116745, 0.4793333411216736, 0.48100000619888306, 0.48233333230018616, 0.484333336353302, 0.4860000014305115, 0.4883333444595337, 0.49033331871032715, 0.49266666173934937, 0.4946666657924652, 0.4963333308696747, 0.49900001287460327, 0.5026666522026062, 0.5040000081062317, 0.5080000162124634, 0.5113333463668823, 0.5133333206176758, 0.5163333415985107, 0.518666684627533, 0.5196666717529297, 0.5206666588783264, 0.5223333239555359, 0.5256666541099548, 0.5289999842643738, 0.5289999842643738, 0.5320000052452087, 0.534333348274231, 0.5356666445732117, 0.5376666784286499, 0.5383333563804626, 0.5396666526794434, 0.5410000085830688]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [5, 5, 3, 9, 6, 1, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 0, 3, 2, 1, 3, 0, 0], [32, 87, 2, 82, 8, 7], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 4, 6, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [14, 25, 50, 71, 34]], "fitness": -0.5351428389549255, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 4, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.square(tf.math.multiply(grad, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3028326619334303, 2.2999042726196017, 2.2988317484207568, 2.2952079177138955, 2.296329015659508, 2.2939233255896507, 2.2917399265038387, 2.2901760712748174, 2.287648943452756, 2.2862260446509413, 2.2861394375511495, 2.2855300065658946, 2.2823742547008137, 2.280754843565609, 2.2786835710905673, 2.2782150980125975, 2.2750944987956983, 2.2736904988624573, 2.273268086263737, 2.272602830911278, 2.2697352539231797, 2.268200237674484, 2.2666433742096426, 2.2644054332917567, 2.2635256816461937, 2.260748682335745, 2.2605631047582517, 2.2572766328453153, 2.255814341411709, 2.2542803930238002, 2.2518255683519524, 2.2495296446717474, 2.2488480139213265, 2.24658881977108, 2.246453427336298, 2.2431729515986656, 2.2395943960792684, 2.2390653938428993, 2.237197132977229, 2.2357119693889627, 2.233168489409318, 2.230660964626725, 2.2280680351348017, 2.2273415431464905, 2.2249690890233467, 2.2209227215801297, 2.2207563607101632, 2.2168463419897995, 2.2125955408338416, 2.213694807970135, 2.209791053728641, 2.207938983817977, 2.2055960686262557, 2.201829437566487, 2.201525711474748, 2.1955253998239073, 2.1949692569498875, 2.1912756896431516, 2.187479169755139, 2.1852488505164818, 2.182967166292228, 2.179891854292366, 2.177236591835914, 2.171590720279861, 2.1708495860653403, 2.164226166623506, 2.159916664520826, 2.159261227945185, 2.1563470213089824, 2.152235761877253, 2.149112235191334, 2.1452101716087038, 2.1424106706355492, 2.1372573943485156, 2.133224079716302, 2.1290271961142624, 2.1235269884533494, 2.1215482447456298, 2.1183832064910635, 2.110340751188936, 2.1078697583300956, 2.1043678894806312, 2.100871041781237, 2.0946362009137895, 2.087552729882364, 2.086045810118516, 2.0815920799541563, 2.0741221627948496, 2.069522505060966, 2.06381917645383, 2.060933392612516, 2.0571626368577944, 2.0496239842928916, 2.044539887686888, 2.036821063577916, 2.0368826849081763, 2.0249989236177406, 2.0260486112467886, 2.0122848630439587, 2.0088629318250404], "accuracy": [0.08519349992275238, 0.09642054885625839, 0.09959053993225098, 0.10579843819141388, 0.10355303436517715, 0.10989301651716232, 0.11266675591468811, 0.12323339283466339, 0.12468630075454712, 0.1274600476026535, 0.13221503794193268, 0.13908334076404572, 0.13815876841545105, 0.14674416184425354, 0.15229164063930511, 0.14991414546966553, 0.160084530711174, 0.16166952252388, 0.17051908373832703, 0.1706511676311493, 0.17474573850631714, 0.17553824186325073, 0.18095363676548004, 0.19099193811416626, 0.189274862408638, 0.19759608805179596, 0.20221899449825287, 0.2122572958469391, 0.2078985571861267, 0.21357811987400055, 0.22084268927574158, 0.2218993455171585, 0.22361643612384796, 0.23603223264217377, 0.23101307451725006, 0.23761722445487976, 0.2417117953300476, 0.24725927412509918, 0.2475234419107437, 0.24633470177650452, 0.2588825821876526, 0.2658829689025879, 0.2697133719921112, 0.2673358917236328, 0.2743362784385681, 0.27684587240219116, 0.2747325301170349, 0.2826575040817261, 0.28318583965301514, 0.2907145619392395, 0.2921674847602844, 0.294148713350296, 0.29639413952827454, 0.3035266101360321, 0.3027341067790985, 0.311319500207901, 0.3121120035648346, 0.31845200061798096, 0.32320696115493774, 0.3279619514942169, 0.32505613565444946, 0.320169061422348, 0.3361510932445526, 0.3329811096191406, 0.334169864654541, 0.33720776438713074, 0.34803855419158936, 0.3435477614402771, 0.3451327383518219, 0.34460440278053284, 0.351340651512146, 0.35186898708343506, 0.35186898708343506, 0.3626997768878937, 0.35966187715530396, 0.3597939610481262, 0.3646810054779053, 0.3661339282989502, 0.36547350883483887, 0.3726060092449188, 0.37207767367362976, 0.37168142199516296, 0.3811914026737213, 0.381719708442688, 0.387399286031723, 0.38422930240631104, 0.3811914026737213, 0.390569269657135, 0.3883238732814789, 0.392550528049469, 0.3891163766384125, 0.3891163766384125, 0.39743760228157043, 0.4053625762462616, 0.4023246467113495, 0.3975696861743927, 0.4113062918186188, 0.39770177006721497, 0.410910040140152, 0.41262713074684143], "val_loss": [1.969045775277274, 1.9675165585109167, 1.9660053253173828, 1.9645020621163505, 1.9629979814801897, 1.9615021433149065, 1.9600088936941964, 1.958517619541713, 1.9570158549717493, 1.9555251257760184, 1.9540125983101981, 1.9525178500584193, 1.9509996005467005, 1.9495068277631487, 1.9479975700378418, 1.946495192391532, 1.9449633870806013, 1.943427290235247, 1.941908700125558, 1.9403717858450753, 1.9388248579842704, 1.9372571536472865, 1.9356769834245955, 1.9340575763157435, 1.9324590819222587, 1.9308380399431502, 1.9291817801339286, 1.9275056975228446, 1.925833089011056, 1.9241483552115304, 1.9224328313555037, 1.920670645577567, 1.918916838509696, 1.9171270642961775, 1.9153095654078893, 1.9134725843157088, 1.911581584385463, 1.9096743719918388, 1.9077489035470145, 1.9058153969900948, 1.9038231032235282, 1.9018035616193498, 1.8997525487627303, 1.8976593017578125, 1.8955464363098145, 1.8933764866420202, 1.8911834444318498, 1.8889404024396623, 1.886629513331822, 1.884328774043492, 1.8819546699523926, 1.8795550891331263, 1.8770971298217773, 1.8745758192879813, 1.8720356396266393, 1.8693975721086775, 1.8667566435677665, 1.8640548842293876, 1.8612902505057198, 1.8584725516183036, 1.8556196349007743, 1.852700846535819, 1.8497492245265417, 1.8466946738106864, 1.8435931205749512, 1.8403708594185966, 1.8371155602591378, 1.8338029725211007, 1.8304315975734167, 1.8270038196018763, 1.8234829902648926, 1.819906302860805, 1.8162756647382463, 1.8125640324183874, 1.8087848254612513, 1.80490813936506, 1.800950186593192, 1.7969583102634974, 1.7928949764796667, 1.7887131827218192, 1.7844562530517578, 1.7801374707903181, 1.7757481847490584, 1.7712550163269043, 1.7666504042489188, 1.762005192892892, 1.7572951316833496, 1.7524449484688895, 1.7475223541259766, 1.7425012588500977, 1.7374578203473772, 1.7323153359549386, 1.7270753043038505, 1.7217482839311873, 1.7162812096732003, 1.7108033725193568, 1.7051803725106376, 1.6995400020054408, 1.6937128816332137, 1.6878018038613456], "val_accuracy": [0.04933333396911621, 0.060333333909511566, 0.06833333522081375, 0.07966666668653488, 0.09366666525602341, 0.11166666448116302, 0.12466666847467422, 0.14000000059604645, 0.1550000011920929, 0.16866666078567505, 0.18466666340827942, 0.20133332908153534, 0.21566666662693024, 0.22633333504199982, 0.23633334040641785, 0.24666666984558105, 0.2630000114440918, 0.2750000059604645, 0.2893333435058594, 0.29733332991600037, 0.3086666762828827, 0.31566667556762695, 0.3256666660308838, 0.33266666531562805, 0.34433332085609436, 0.3499999940395355, 0.35466668009757996, 0.3606666624546051, 0.3659999966621399, 0.36800000071525574, 0.37166666984558105, 0.3776666522026062, 0.3799999952316284, 0.38366666436195374, 0.38600000739097595, 0.38966667652130127, 0.39366665482521057, 0.39633333683013916, 0.3996666669845581, 0.40400001406669617, 0.4059999883174896, 0.4086666703224182, 0.4113333225250244, 0.41466665267944336, 0.41733333468437195, 0.42266666889190674, 0.42766666412353516, 0.4286666810512543, 0.4309999942779541, 0.4333333373069763, 0.43433332443237305, 0.4359999895095825, 0.43833333253860474, 0.4399999976158142, 0.4423333406448364, 0.4463333189487457, 0.4493333399295807, 0.45233333110809326, 0.4556666612625122, 0.4569999873638153, 0.4583333432674408, 0.46399998664855957, 0.46533334255218506, 0.4659999907016754, 0.4690000116825104, 0.4699999988079071, 0.47200000286102295, 0.47466665506362915, 0.476666659116745, 0.4793333411216736, 0.48100000619888306, 0.48233333230018616, 0.484333336353302, 0.4860000014305115, 0.4883333444595337, 0.49033331871032715, 0.49266666173934937, 0.4946666657924652, 0.4963333308696747, 0.49900001287460327, 0.5026666522026062, 0.5040000081062317, 0.5080000162124634, 0.5113333463668823, 0.5133333206176758, 0.5163333415985107, 0.518666684627533, 0.5196666717529297, 0.5206666588783264, 0.5223333239555359, 0.5256666541099548, 0.5289999842643738, 0.5289999842643738, 0.5320000052452087, 0.534333348274231, 0.5356666445732117, 0.5376666784286499, 0.5383333563804626, 0.5396666526794434, 0.5410000085830688]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 3, 3, 3, 6, 4, 6, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 3, 3, 0, 2, 1, 3, 0, 0], [32, 87, 2, 44, 8, 7], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 8, 6, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [44, 25, 61, 71, 34]], "fitness": -0.20657142996788025, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 9, 8, 3, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(grad, tf.math.divide_no_nan(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))), beta)))), tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.sqrt(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [3.0967760048585244, 3.6505463376824316, 23.608494035571937, 212.7407942096618, NaN, NaN], "accuracy": [0.22837141156196594, 0.1670849323272705, 0.10302469879388809, 0.09734513610601425, 0.0944393053650856, 0.09998679161071777], "val_loss": [1.9381871223449707, 115.06255667550224, 2.0887777464730397, 245138477.7142857, NaN, NaN], "val_accuracy": [0.21966665983200073, 0.0976666659116745, 0.09799999743700027, 0.01666666753590107, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [0, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 8, 3, 2, 6, 1, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 3, 0, 1, 2, 1, 3, 0, 0], [32, 87, 2, 82, 8, 7], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 8, 6, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [26, 25, 50, 71, 34]], "fitness": -0.11400000005960464, "mapping_values": [1, 1, 1, 0, 1, 1, 10, 10, 5, 5, 2, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.multiply(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(beta, tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.sqrt(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3020501848791945, 2.301372414110139, 2.302509517371143, 2.3025805009212856, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.08889182657003403, 0.10751552134752274, 0.09826971590518951, 0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9720920154026575, 1.9735292025974818, 1.9736425536019462, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.10433333367109299, 0.11133333295583725, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 2, 6, 1, 9, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 2, 3, 0, 2, 1, 3, 0, 0], [32, 33, 2, 90, 74, 78], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [2, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 8, 6, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [44, 25, 61, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 3, 3, 1, 1, 0, 0, 5, 2, 3, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, beta)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [4.517850974519362e+32, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.053229428827762604, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 3, 4, 5, 6, 1, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 3, 0, 1, 3, 1, 3, 0, 0], [32, 17, 2, 82, 74, 78], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [3, 3], [], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 8, 6, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [14, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 2, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), grad), tf.math.add(beta, tf.math.square(grad))), tf.math.add(beta, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.9998739709502686, 2.3097780536840054, 2.3037767032385976, 2.3030461722424223, 2.3029579112652883, 2.302790450508159], "accuracy": [0.2281072586774826, 0.10038304328918457, 0.09998679161071777, 0.09840179979801178, 0.0956280529499054, 0.10276053100824356], "val_loss": [1.995666776384626, 1.9749275616237096, 1.9739627156938826, 1.9737415994916643, 1.9735920769827706, 1.9732849938528878], "val_accuracy": [0.10400000214576721, 0.09966666996479034, 0.09700000286102295, 0.09733333438634872, 0.10233332961797714, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [4, 4, 3, 2, 3, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 1, 3, 0, 3, 0, 1, 3, 0, 0], [34, 33, 2, 82, 74, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [2, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 8, 6, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [80, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 4, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.pow(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha)), tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), grad)))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.sqrt(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [3.023074853091176, 2.338385784677967, 2.303813718833062, 2.303087207918642, 2.302988441534298, 2.303042704355857], "accuracy": [0.228899747133255, 0.1006472036242485, 0.09998679161071777, 0.09840179979801178, 0.09285431355237961, 0.09945846349000931], "val_loss": [2.1413051060267856, 1.9751106670924596, 1.974088191986084, 1.973801817212786, 1.9737080846514021, 1.9736439159938268], "val_accuracy": [0.10400000214576721, 0.09966666996479034, 0.09700000286102295, 0.09700000286102295, 0.10233332961797714, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 2, 2, 6, 1, 9, 6, 1, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 2, 0, 3, 2, 1, 3, 0, 0], [32, 72, 15, 62, 74, 78], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [2, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 2, 8, 6, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [44, 25, 61, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 21, 21, 11, 10, 5, 3, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, grad), beta)), tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), alpha))))))), tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))))), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [114224.47711674802, 2.315198777200933, 2.3063105816035585, 2.303616797588662, 2.30299628705176, 2.3029230890209806], "accuracy": [0.09100515395402908, 0.09906221181154251, 0.09760929644107819, 0.0940430611371994, 0.09536388516426086, 0.0948355570435524], "val_loss": [1.9913720403398787, 1.9789858545575822, 1.9751573971339635, 1.974027224949428, 1.973787443978446, 1.9737364224025182], "val_accuracy": [0.10400000214576721, 0.09966666996479034, 0.09700000286102295, 0.10400000214576721, 0.10000000149011612, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [4, 4, 3, 2, 3, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 3, 3, 2, 1, 3, 0, 0], [34, 33, 2, 82, 74, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [2, 3], [], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [1, 3, 2, 6, 7, 4, 8], [1, 2, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [74, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 1, 1, 1, 0, 1, 0, 14, 7, 7, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.pow(grad, tf.math.add(beta, grad)), tf.math.multiply(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))), grad)))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.pow(beta, sigma), tf.math.sqrt(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))), alpha), beta)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [4, 4, 3, 6, 2, 0, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 3, 0, 3, 2, 3, 3, 0, 0], [34, 33, 2, 82, 74, 78], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [3, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [5, 3, 8, 6, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [14, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 6, 6, 2, 3, 1, 1, 0, 0, 5, 3, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)), tf.math.negative(beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(alpha, tf.math.sqrt(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3035079050435683, 2.3022265082510347, 2.302748100648325, 2.3006979857988803, 2.3034377466528535, 2.3026324978688484], "accuracy": [0.08294808864593506, 0.09021265059709549, 0.08915598690509796, 0.09192973375320435, 0.08770307898521423, 0.09430722147226334], "val_loss": [1.9705892971583776, 1.9705886840820312, 1.970588139125279, 1.9705873898097448, 1.9705866404942103, 1.970586163657052], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 4, 3, 3, 6, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 0, 0, 2, 1, 3, 0, 0], [32, 33, 2, 82, 74, 78], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 8, 6, 7, 4], [3, 1, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [14, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, alpha))", "other_info": {"loss": [2.303508368371075, 2.3022278622708003, 2.3027497245776987, 2.3007004689294837, 2.303441237496379, 2.3026364789647102], "accuracy": [0.08294808864593506, 0.09021265059709549, 0.08915598690509796, 0.09192973375320435, 0.08770307898521423, 0.09430722147226334], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 3, 4, 2, 6, 1, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 0, 1, 2, 1, 3, 0, 0], [32, 13, 2, 82, 74, 78], [0, 1, 0, 1, 0, 1], [0, 1, 1, 0], [9, 3, 0], [3, 3], [37], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 8, 6, 7, 4], [1, 2, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [14, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 2, 1, 1, 1, 0, 1, 5, 3, 2, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(grad, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))))), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), alpha), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.sqrt(beta)))", "other_info": {"loss": [2.303508368371075, 2.3022278622708003, 2.3027497245776987, 2.3007004689294837, 2.303441237496379, 2.3026364789647102], "accuracy": [0.08294808864593506, 0.09021265059709549, 0.08915598690509796, 0.09192973375320435, 0.08770307898521423, 0.09430722147226334], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]