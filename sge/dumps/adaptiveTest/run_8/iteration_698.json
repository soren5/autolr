[{"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 4, 3, 2, 6, 1, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 2, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 8, 6, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [14, 25, 50, 71, 34]], "fitness": -0.771142840385437, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.sqrt(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.2788549978278647, 2.2113903578419523, 2.0912928268846787, 1.87303302033293, 1.5952485679336244, 1.3707004416462862, 1.2320739949746233, 1.12982215995975, 1.0711669963128247, 1.007426506886314, 0.9657881478465953, 0.9210476411521049, 0.9068627419992602, 0.8785543328404757, 0.860792838390304, 0.8332582173834324, 0.8231126275501546, 0.8174491688370973, 0.7984605674903626, 0.7738724190718651, 0.7761155565212337, 0.7631278124310321, 0.7496724988900596, 0.7465432772562725, 0.7365805506863693, 0.735492124919327, 0.7342537936753664, 0.7209304642636368, 0.7075717738275877, 0.714114670118305, 0.6952601100837613, 0.6985011533534506, 0.6901626201542598, 0.6754594178420835], "accuracy": [0.14951789379119873, 0.28701624274253845, 0.3741909861564636, 0.44168537855148315, 0.49953770637512207, 0.5484083890914917, 0.5688812732696533, 0.6022982597351074, 0.6248844265937805, 0.6460176706314087, 0.6643772125244141, 0.6712455153465271, 0.6811517477035522, 0.6873596906661987, 0.6926429867744446, 0.6956809163093567, 0.7042662501335144, 0.7069079279899597, 0.7123233675956726, 0.7202483415603638, 0.7165499925613403, 0.7243428826332092, 0.7244749665260315, 0.7285695672035217, 0.7358341217041016, 0.7349095344543457, 0.7321357727050781, 0.7424382567405701, 0.7376832365989685, 0.7371549606323242, 0.7471932172775269, 0.7415136694908142, 0.7486461400985718, 0.7540615797042847], "val_loss": [1.9154411724635534, 1.8291640281677246, 1.6616877147129603, 1.3946266855512346, 1.1237915584019251, 0.944199970790318, 0.8370354686464582, 0.7670000621250698, 0.7208301169531686, 0.6874268906457084, 0.658525960786002, 0.6351963792528424, 0.6191423620496478, 0.6098472390856061, 0.5895126717431205, 0.5831781625747681, 0.5731769629887172, 0.5705735172544207, 0.5636275325502668, 0.5504263469151088, 0.5432874986103603, 0.5367879016058785, 0.5326585939952305, 0.5280323709760394, 0.5234823908124652, 0.5180800642286029, 0.5141225201742989, 0.5192411286490304, 0.508954610143389, 0.5038657188415527, 0.5172009978975568, 0.5070896318980626, 0.4955681392124721, 0.4902281420571463], "val_accuracy": [0.3803333342075348, 0.4729999899864197, 0.5353333353996277, 0.5860000252723694, 0.637333333492279, 0.6779999732971191, 0.6990000009536743, 0.703000009059906, 0.7139999866485596, 0.7183333039283752, 0.7263333201408386, 0.7300000190734863, 0.7459999918937683, 0.746999979019165, 0.7566666603088379, 0.7580000162124634, 0.762333333492279, 0.7586666941642761, 0.7633333206176758, 0.7666666507720947, 0.7739999890327454, 0.7763333320617676, 0.768666684627533, 0.7726666927337646, 0.7770000100135803, 0.7760000228881836, 0.7736666798591614, 0.7756666541099548, 0.7943333387374878, 0.7850000262260437, 0.765333354473114, 0.7870000004768372, 0.7913333177566528, 0.7896666526794434]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 4, 3, 2, 6, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 2, 82, 74, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 8, 6, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [14, 25, 50, 71, 34]], "fitness": -0.771142840385437, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 5, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.subtract(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.sqrt(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.2788549978278647, 2.2113903578419523, 2.0912928268846787, 1.87303302033293, 1.5952485679336244, 1.3707004416462862, 1.2320739949746233, 1.12982215995975, 1.0711669963128247, 1.007426506886314, 0.9657881478465953, 0.9210476411521049, 0.9068627419992602, 0.8785543328404757, 0.860792838390304, 0.8332582173834324, 0.8231126275501546, 0.8174491688370973, 0.7984605674903626, 0.7738724190718651, 0.7761155565212337, 0.7631278124310321, 0.7496724988900596, 0.7465432772562725, 0.7365805506863693, 0.735492124919327, 0.7342537936753664, 0.7209304642636368, 0.7075717738275877, 0.714114670118305, 0.6952601100837613, 0.6985011533534506, 0.6901626201542598, 0.6754594178420835], "accuracy": [0.14951789379119873, 0.28701624274253845, 0.3741909861564636, 0.44168537855148315, 0.49953770637512207, 0.5484083890914917, 0.5688812732696533, 0.6022982597351074, 0.6248844265937805, 0.6460176706314087, 0.6643772125244141, 0.6712455153465271, 0.6811517477035522, 0.6873596906661987, 0.6926429867744446, 0.6956809163093567, 0.7042662501335144, 0.7069079279899597, 0.7123233675956726, 0.7202483415603638, 0.7165499925613403, 0.7243428826332092, 0.7244749665260315, 0.7285695672035217, 0.7358341217041016, 0.7349095344543457, 0.7321357727050781, 0.7424382567405701, 0.7376832365989685, 0.7371549606323242, 0.7471932172775269, 0.7415136694908142, 0.7486461400985718, 0.7540615797042847], "val_loss": [1.9154411724635534, 1.8291640281677246, 1.6616877147129603, 1.3946266855512346, 1.1237915584019251, 0.944199970790318, 0.8370354686464582, 0.7670000621250698, 0.7208301169531686, 0.6874268906457084, 0.658525960786002, 0.6351963792528424, 0.6191423620496478, 0.6098472390856061, 0.5895126717431205, 0.5831781625747681, 0.5731769629887172, 0.5705735172544207, 0.5636275325502668, 0.5504263469151088, 0.5432874986103603, 0.5367879016058785, 0.5326585939952305, 0.5280323709760394, 0.5234823908124652, 0.5180800642286029, 0.5141225201742989, 0.5192411286490304, 0.508954610143389, 0.5038657188415527, 0.5172009978975568, 0.5070896318980626, 0.4955681392124721, 0.4902281420571463], "val_accuracy": [0.3803333342075348, 0.4729999899864197, 0.5353333353996277, 0.5860000252723694, 0.637333333492279, 0.6779999732971191, 0.6990000009536743, 0.703000009059906, 0.7139999866485596, 0.7183333039283752, 0.7263333201408386, 0.7300000190734863, 0.7459999918937683, 0.746999979019165, 0.7566666603088379, 0.7580000162124634, 0.762333333492279, 0.7586666941642761, 0.7633333206176758, 0.7666666507720947, 0.7739999890327454, 0.7763333320617676, 0.768666684627533, 0.7726666927337646, 0.7770000100135803, 0.7760000228881836, 0.7736666798591614, 0.7756666541099548, 0.7943333387374878, 0.7850000262260437, 0.765333354473114, 0.7870000004768372, 0.7913333177566528, 0.7896666526794434]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 4, 3, 2, 6, 1, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 2, 82, 91, 7], [0, 0, 0, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [3, 3], [], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 3, 8, 9, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 61, 71, 34]], "fitness": -0.7562857270240784, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 8, 5, 5, 3, 3, 1, 2, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.subtract(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, sigma), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2860749873502804, 2.2444382705519685, 2.1882368005136095, 2.0969847161866544, 1.9573033662630253, 1.7736622025040494, 1.5837630883908276, 1.422693965835279, 1.3098638184775042, 1.2183136102655985, 1.1498706967461267, 1.082631203476716, 1.0485090660522989, 1.0121930816138598, 0.9841517865413751, 0.9474922652179066, 0.9282756985658825, 0.9161657150852021, 0.8910192308361662, 0.8622905127030038, 0.8604936597527073, 0.8431847585726093, 0.8283456239434533, 0.8230001716376957, 0.8109043553882916, 0.8075431632233523, 0.8058013251948555, 0.7917680131634859, 0.7765425076857534, 0.7810510421126762, 0.760588071932331, 0.7611659225802206, 0.7535008712766539, 0.7370902155337159, 0.737219194080442, 0.7368437813383603, 0.7325660564785762, 0.7198960695992906, 0.7303741267249884, 0.7168992636950419, 0.7124850715565534, 0.708869657763999, 0.7033792260206134], "accuracy": [0.1332716941833496, 0.23497556149959564, 0.3152819871902466, 0.3743230700492859, 0.42847707867622375, 0.46347907185554504, 0.4935939908027649, 0.5271430611610413, 0.5608242154121399, 0.5824857950210571, 0.6061286330223083, 0.622639000415802, 0.6349227428436279, 0.6513010263442993, 0.655527651309967, 0.6633205413818359, 0.6708492636680603, 0.6745476126670837, 0.6802271604537964, 0.691850483417511, 0.6931713223457336, 0.6993792057037354, 0.7012283802032471, 0.7025492191314697, 0.7125874757766724, 0.7132478952407837, 0.7058512568473816, 0.7190595865249634, 0.7156254053115845, 0.7132478952407837, 0.7263241410255432, 0.720380425453186, 0.7288337349891663, 0.7313432693481445, 0.7351737022399902, 0.7293620109558105, 0.7349095344543457, 0.7345132827758789, 0.7323999404907227, 0.7403249144554138, 0.7392682433128357, 0.7407211661338806, 0.7401928305625916], "val_loss": [1.9333839416503906, 1.8877669061933244, 1.817281791142055, 1.7054391588483537, 1.5402874605996268, 1.3422904014587402, 1.155853237424578, 1.0124310765947615, 0.9125632558550153, 0.8414307492119926, 0.7893430505480085, 0.7466541358402797, 0.7165782621928624, 0.6928169897624424, 0.6699079956327166, 0.6556216648646763, 0.6402995245797294, 0.6285980428968158, 0.6172599792480469, 0.6062982593263898, 0.5963010958262852, 0.5869098731449672, 0.5799375431878226, 0.5737730264663696, 0.5671066556658063, 0.5624175071716309, 0.5581163508551461, 0.5585535253797259, 0.5492018461227417, 0.5434438160487584, 0.5494329248155866, 0.5408237150737217, 0.5333634785243443, 0.5275655133383614, 0.5245106560843331, 0.5235359157834735, 0.518323370388576, 0.5140936885561261, 0.5141792637961251, 0.5120167561939785, 0.5062675646373204, 0.5045674187796456, 0.5032320022583008], "val_accuracy": [0.3323333263397217, 0.4269999861717224, 0.47699999809265137, 0.5413333177566528, 0.5653333067893982, 0.5896666646003723, 0.628333330154419, 0.6536666750907898, 0.6893333196640015, 0.6959999799728394, 0.703000009059906, 0.7009999752044678, 0.7160000205039978, 0.718999981880188, 0.7279999852180481, 0.734000027179718, 0.7393333315849304, 0.7409999966621399, 0.7440000176429749, 0.7446666955947876, 0.753333330154419, 0.7543333172798157, 0.7559999823570251, 0.7633333206176758, 0.7616666555404663, 0.7563333511352539, 0.7630000114440918, 0.7603333592414856, 0.7723333239555359, 0.7703333497047424, 0.753333330154419, 0.7746666669845581, 0.7760000228881836, 0.7763333320617676, 0.7823333144187927, 0.7846666574478149, 0.7829999923706055, 0.7860000133514404, 0.7839999794960022, 0.7803333401679993, 0.7856666445732117, 0.7833333611488342, 0.7833333611488342]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 4, 3, 2, 6, 1, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 2, 82, 91, 78], [0, 1, 0, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [3, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 8, 9, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [14, 25, 50, 71, 34]], "fitness": -0.5419999957084656, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 10, 7, 6, 3, 2, 1, 1, 0, 5, 3, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), grad), tf.math.add(beta, tf.math.add(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.sqrt(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.238518541168779, 1.6472063109922277, 1.1346655491163324, 0.9278058576042216, 0.8525031033901884, 0.8036056239575663, 0.7571145342467341, 0.6972536173998609, 0.6598005500593678, 0.6163958338241945, 0.6142144953223614, 0.5902898418448306, 0.5805194759255529, 0.5554145104881008, 0.5344517173044055, 0.51804538335877, 0.5040468523027151, 0.5030020369971354, 0.47983327834298506, 0.4767430992630951, 0.46286032849677, 0.4485324959178028, 0.4433207091811531, 0.4425838407335217, 0.4380726682676883, 0.4198352924159741, 0.4173434467332049, 0.4303756001532243, 0.4006597522054256, 0.40764945162096833, 0.4088355667398055, 0.420257431314354, 0.4103107424601745], "accuracy": [0.2141064554452896, 0.4706115424633026, 0.6135252714157104, 0.6585655808448792, 0.6744155287742615, 0.6979262828826904, 0.7152291536331177, 0.7331924438476562, 0.7520803213119507, 0.7630431652069092, 0.7671377658843994, 0.7769119143486023, 0.7803460359573364, 0.785101056098938, 0.7996301651000977, 0.7968564033508301, 0.8072909712791443, 0.8078193068504333, 0.817989706993103, 0.8182538747787476, 0.826310932636261, 0.830669641494751, 0.8296129703521729, 0.8342359066009521, 0.8339717388153076, 0.8378021121025085, 0.8408400416374207, 0.8337075710296631, 0.8477083444595337, 0.8424250483512878, 0.8400475382804871, 0.8465195894241333, 0.8532558679580688], "val_loss": [1.6983461039406913, 0.7902801036834717, 0.7210313592638288, 0.6027526685169765, 0.5784506286893573, 0.5708431346075875, 0.5081678799220494, 0.49329844542912077, 0.48886934348515104, 0.4657433884484427, 0.45680882249559673, 0.4358504755156381, 0.42902599913733347, 0.4388729929924011, 0.4069341165678842, 0.39985706976481844, 0.39765980413981844, 0.3872458679335458, 0.38685557671955656, 0.3802104762622288, 0.3853398306029184, 0.3831580366407122, 0.3784374850136893, 0.36102179118565153, 0.3627839854785374, 0.364987381867, 0.3703793542725699, 0.3724540046283177, 0.37533773694719585, 0.3705697400229318, 0.38112683807100567, 0.3832433649471828, 0.38481774500438143], "val_accuracy": [0.4659999907016754, 0.6579999923706055, 0.7110000252723694, 0.7366666793823242, 0.734000027179718, 0.7463333606719971, 0.7716666460037231, 0.7746666669845581, 0.781333327293396, 0.7903333306312561, 0.8073333501815796, 0.7979999780654907, 0.8096666932106018, 0.8190000057220459, 0.8330000042915344, 0.8286666870117188, 0.8343333601951599, 0.840666651725769, 0.8403333425521851, 0.8453333377838135, 0.8519999980926514, 0.8386666774749756, 0.8496666550636292, 0.8523333072662354, 0.8546666502952576, 0.8506666421890259, 0.8533333539962769, 0.8573333621025085, 0.8573333621025085, 0.8450000286102295, 0.8566666841506958, 0.8493333458900452, 0.8556666374206543]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 4, 3, 2, 6, 1, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [43, 33, 2, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 8, 6, 7, 4], [3, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [14, 25, 50, 71, 34]], "fitness": -0.5354285836219788, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3015077833990145, 2.2996772686881854, 2.299012777560013, 2.29716166453575, 2.2956331205437324, 2.293679034469024, 2.292269131416469, 2.289635035151173, 2.2894546617496094, 2.2879579426227954, 2.286650582295777, 2.2844803952396098, 2.282375119948321, 2.281631933305998, 2.280128667950079, 2.2788555116039997, 2.277364951587073, 2.275574438733479, 2.2724387909616257, 2.269929527779769, 2.27023595060576, 2.2680115970590915, 2.2674089513198497, 2.262556970489496, 2.2631103550957934, 2.2630529403056703, 2.2600148316497863, 2.2593730470019717, 2.2574236899665507, 2.254894164763957, 2.2523792249462655, 2.250842690389107, 2.2482856393820887, 2.2456159832581175, 2.2443851571214704, 2.2436842196306706, 2.2408895404693743, 2.239211675025185, 2.239805023573519, 2.2368575757001103, 2.2338691803568533, 2.2292954115866985, 2.2285530826025446, 2.227204873183652, 2.2236749530704567, 2.221356774365283, 2.2202004686936787, 2.2169517548077016, 2.2135673621075265, 2.213836567103666, 2.209790534441576, 2.2084206502829025, 2.2046044944158054, 2.2027214769170174, 2.1999844482561945, 2.195005991738848, 2.193955972257339, 2.1907971167939135, 2.18723922937207, 2.186194834660671, 2.1822150942986713, 2.182251082687267, 2.17822289989609, 2.1704518168027045, 2.1698199677319336, 2.1674596896465697, 2.1630881392267702, 2.16000488418173, 2.158626104594694, 2.150590424020576, 2.151068309420655, 2.146335433046217, 2.141366962711998, 2.138214021547202, 2.1351472950095056, 2.1298941240460567, 2.1263084053883006, 2.1203134934096965, 2.119280358599067, 2.1109601180661453, 2.1088026360025682, 2.1048163736910475, 2.0986556333872652, 2.0978364011063912, 2.091365722412635, 2.0846445516052974, 2.082473160804554, 2.076380296957066, 2.06828576771181, 2.0676901509906354, 2.0605604217792814, 2.0550694767006354, 2.050006609110391, 2.044754338506946, 2.036846106377701, 2.034670895967092, 2.0255375545195866, 2.019699816753552, 2.0184870919751736, 2.011432019710982], "accuracy": [0.09391097724437714, 0.09681680053472519, 0.09826971590518951, 0.10289261490106583, 0.10394927859306335, 0.11187426000833511, 0.11200633645057678, 0.1262712925672531, 0.1212521493434906, 0.1270637959241867, 0.13247919082641602, 0.13776251673698425, 0.13802668452262878, 0.14938580989837646, 0.14991414546966553, 0.15955619513988495, 0.1570466309785843, 0.15955619513988495, 0.16880200803279877, 0.1706511676311493, 0.17619864642620087, 0.17963281273841858, 0.18372738361358643, 0.19574692845344543, 0.20116232335567474, 0.1884823739528656, 0.20023775100708008, 0.2044644057750702, 0.20499274134635925, 0.216880202293396, 0.2156914472579956, 0.21199312806129456, 0.23259806632995605, 0.23220182955265045, 0.2316734939813614, 0.23920221626758575, 0.24197596311569214, 0.24514594674110413, 0.24514594674110413, 0.24474970996379852, 0.25439175963401794, 0.2604675590991974, 0.2693171203136444, 0.26324132084846497, 0.2747325301170349, 0.278959184885025, 0.2751287817955017, 0.28543123602867126, 0.2884691655635834, 0.2879408299922943, 0.30022454261779785, 0.29441288113594055, 0.29599788784980774, 0.30524370074272156, 0.30339452624320984, 0.3197728097438812, 0.3131686747074127, 0.3125082552433014, 0.32082948088645935, 0.3106590807437897, 0.3288865387439728, 0.31726324558258057, 0.3199048936367035, 0.3381323516368866, 0.33483028411865234, 0.33284902572631836, 0.33945319056510925, 0.35239729285240173, 0.3416985869407654, 0.35186898708343506, 0.3461894094944, 0.349359393119812, 0.35120856761932373, 0.3567560315132141, 0.3593977093696594, 0.36362436413764954, 0.35781270265579224, 0.3703605830669403, 0.3675868511199951, 0.3745872378349304, 0.372209757566452, 0.37088891863822937, 0.3769647479057312, 0.3769647479057312, 0.39122968912124634, 0.38964468240737915, 0.3770968019962311, 0.3917580246925354, 0.39823007583618164, 0.38726720213890076, 0.3929467797279358, 0.3983621597290039, 0.3885880410671234, 0.39862632751464844, 0.40628713369369507, 0.4049663245677948, 0.40707963705062866, 0.40985339879989624, 0.40509840846061707, 0.4087967276573181], "val_loss": [1.9690587180001395, 1.967538697378976, 1.9660156794956751, 1.964515209197998, 1.9630041122436523, 1.9615076610020228, 1.9600176130022322, 1.958535603114537, 1.9570482117789132, 1.9555650438581194, 1.9540839876447404, 1.952589511871338, 1.951080662863595, 1.9495677947998047, 1.9480738639831543, 1.9465601103646415, 1.9450583457946777, 1.9435336249215263, 1.9420014790126257, 1.9404429708208357, 1.9388796261378698, 1.9373034068516322, 1.9357179233006068, 1.934119701385498, 1.9325095585414342, 1.9308851105826241, 1.9292614119393485, 1.9276105335780553, 1.9259510721479143, 1.9242259434291296, 1.9225121906825475, 1.920769418988909, 1.9189996719360352, 1.9172032901218958, 1.915384020124163, 1.9135651588439941, 1.911710602896554, 1.909817831856864, 1.9079127992902483, 1.9059718676975794, 1.9039886338370187, 1.9019545827593123, 1.8999084063938685, 1.8978156362261092, 1.8956945964268275, 1.893542970929827, 1.8913575581141882, 1.8891168321881975, 1.8868397303989954, 1.884538241795131, 1.8821792602539062, 1.879788534981864, 1.877344744546073, 1.8748409407479423, 1.8722781453813826, 1.8696720940726144, 1.8670058250427246, 1.8642966406685966, 1.8615309851510184, 1.858715397971017, 1.855851309640067, 1.8529770714896066, 1.8500083514622279, 1.846942629132952, 1.8438210487365723, 1.840665681021554, 1.8374076570783342, 1.8340670040675573, 1.8307298251560755, 1.8272653307233537, 1.8237865992954798, 1.820246968950544, 1.8166213716779436, 1.8129405294145857, 1.8091497421264648, 1.805281094142369, 1.8013627188546317, 1.7973027229309082, 1.7932516506740026, 1.7890681539263045, 1.784820829119001, 1.7805073601858956, 1.7761212757655553, 1.7716573306492396, 1.7670819418770927, 1.7624082565307617, 1.7577200617109026, 1.7529377937316895, 1.7479990550449915, 1.7430176734924316, 1.7379472596304757, 1.7328052520751953, 1.7275448526654924, 1.7222042764936174, 1.7167303902762276, 1.7112322875431605, 1.7056019306182861, 1.699859857559204, 1.6940949303763253, 1.688227619443621], "val_accuracy": [0.049666665494441986, 0.060333333909511566, 0.06933332979679108, 0.0806666687130928, 0.09333333373069763, 0.11100000143051147, 0.12666666507720947, 0.14000000059604645, 0.1536666601896286, 0.16966666281223297, 0.1863333284854889, 0.20133332908153534, 0.21466666460037231, 0.22466666996479034, 0.2383333295583725, 0.2486666738986969, 0.2630000114440918, 0.27433332800865173, 0.28733333945274353, 0.296999990940094, 0.3083333373069763, 0.3173333406448364, 0.32600000500679016, 0.33500000834465027, 0.3440000116825104, 0.3513333201408386, 0.3553333282470703, 0.36033332347869873, 0.36399999260902405, 0.36766666173934937, 0.3720000088214874, 0.3773333430290222, 0.3813333213329315, 0.38466668128967285, 0.3880000114440918, 0.3903333246707916, 0.3933333456516266, 0.3959999978542328, 0.4000000059604645, 0.40299999713897705, 0.40700000524520874, 0.40833333134651184, 0.4129999876022339, 0.4169999957084656, 0.41966667771339417, 0.42533332109451294, 0.4273333251476288, 0.42933332920074463, 0.4326666593551636, 0.4346666634082794, 0.43533334136009216, 0.43666666746139526, 0.4386666715145111, 0.4416666626930237, 0.4429999887943268, 0.4440000057220459, 0.4490000009536743, 0.44999998807907104, 0.45399999618530273, 0.4573333263397217, 0.4596666693687439, 0.46166667342185974, 0.46433332562446594, 0.46566668152809143, 0.46833333373069763, 0.47099998593330383, 0.47333332896232605, 0.47600001096725464, 0.4779999852180481, 0.47966668009757996, 0.48100000619888306, 0.4856666624546051, 0.4883333444595337, 0.4896666705608368, 0.49300000071525574, 0.49533334374427795, 0.4963333308696747, 0.4970000088214874, 0.4983333349227905, 0.5009999871253967, 0.5040000081062317, 0.5076666474342346, 0.5096666812896729, 0.5106666684150696, 0.5146666765213013, 0.5170000195503235, 0.5196666717529297, 0.5203333497047424, 0.5226666927337646, 0.5256666541099548, 0.5273333191871643, 0.5299999713897705, 0.5303333401679993, 0.5336666703224182, 0.534333348274231, 0.5366666913032532, 0.5370000004768372, 0.5379999876022339, 0.5413333177566528, 0.5440000295639038]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 4, 3, 2, 6, 1, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 2, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [3, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 8, 9, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [44, 25, 61, 71, 34]], "fitness": -0.2891428470611572, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.sqrt(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.8434705633481636, 2.493215785160702, 3.0148312112107614, 2.440689651516718, 166483958509.5645, NaN, NaN], "accuracy": [0.23603223264217377, 0.16563200950622559, 0.25439175963401794, 0.13868708908557892, 0.1368379294872284, 0.10896842926740646, 0.09998679161071777], "val_loss": [1.909612042563302, 1.5962136813572474, 1.8902010236467635, 1.9977877480643136, 2.5837326685307944e+30, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.30266666412353516, 0.25999999046325684, 0.13699999451637268, 0.17299999296665192, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 4, 3, 2, 6, 1, 9, 8, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 2, 0, 2, 1, 3, 0, 0], [32, 33, 2, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [3, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1], [0, 3, 8, 9, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [14, 40, 50, 71, 34]], "fitness": -0.27714285254478455, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.331463793847917, 2.42179602720734, 2.30932897476551, 2.3040665715141633, 2.3031867467464315, 2.3026032131959924, 2.2610133559617855, 2.2918968442219785, 2.30232725816081, 2.2620461928043003, 2.3046047946701687, 2.3041558068237284], "accuracy": [0.22018226981163025, 0.19402985274791718, 0.09998679161071777, 0.09893012791872025, 0.0940430611371994, 0.09893012791872025, 0.17170783877372742, 0.13710209727287292, 0.10460969805717468, 0.16034869849681854, 0.09800554811954498, 0.1010434553027153], "val_loss": [1.969679696219308, 1.9826818193708147, 1.9749987465994698, 1.9739845139639718, 1.9735729353768485, 1.9724552290780204, 1.9216933250427246, 1.9748779705592565, 1.9666887010846819, 1.9747034481593542, 1.9740068571908134, 1.9726941926138741], "val_accuracy": [0.09966666996479034, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.0976666659116745, 0.16699999570846558, 0.27000001072883606, 0.09733333438634872, 0.09700000286102295, 0.10000000149011612, 0.09700000286102295, 0.10400000214576721]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 4, 3, 2, 6, 1, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 2, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [1, 3], [], [1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 3, 8, 9, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 61, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 8, 5, 5, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(tf.math.multiply(tf.math.add(beta, beta), tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))))), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08889182657003403, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 8, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 4, 3, 2, 6, 1, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 2, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [1, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [0, 3, 8, 9, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [1, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 4, 3, 6, 6, 8, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 86, 9, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [3, 3], [], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1], [6, 3, 8, 6, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [14, 25, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 9, 5, 6, 1, 1, 0, 1, 0, 12, 6, 6, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), tf.math.add(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(sigma, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.pow(alpha, beta))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [3, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 4, 3, 2, 6, 1, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 2, 82, 91, 78], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 9, 6, 9, 6, 1, 0], [0, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [54, 5, 61, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 8, 5, 5, 1, 0, 0, 0, 0, 2, 2, 0, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))))), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [455562194.65220994, 8627155813.676397, 39756606964.84163, 110608771905.4286, 240852632491.1964, 435091183475.06647], "accuracy": [0.09681680053472519, 0.09972262382507324, 0.09179764986038208, 0.09945846349000931, 0.09549596905708313, 0.10236428678035736], "val_loss": [1712831561.142857, 13696970166.857143, 46220884845.71429, 109552123904.0, 213963000100.57144, 369711316992.0], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 4, 3, 2, 6, 1, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 1, 3, 0, 0, 2, 1, 3, 0, 0], [32, 33, 2, 82, 91, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1], [2, 3, 8, 6, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [36, 25, 61, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 8, 5, 5, 1, 1, 0, 1, 0, 12, 6, 6, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), grad)))), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(alpha, tf.math.sqrt(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.add(sigma, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.pow(alpha, beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 4, 3, 2, 6, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 0, 0, 2, 1, 3, 0, 0], [4, 33, 94, 95, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [3, 3], [], [1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1], [0, 3, 6, 9, 6, 1, 0], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 61, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 21, 21, 11, 10, 6, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))))), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, alpha)))), tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08889182657003403, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 4, 3, 2, 6, 1, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 2, 82, 91, 78], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [3, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1], [0, 3, 8, 9, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 61, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 8, 5, 5, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))))), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.820021709761584, 838970.4833011776, NaN, NaN, NaN, NaN], "accuracy": [0.23193766176700592, 0.09681680053472519, 0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0025044849940707, 394063469908553.1, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.09833333641290665, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 4, 3, 2, 6, 1, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 2, 82, 91, 78], [0, 0, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [3, 3], [], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [1, 3, 8, 9, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 61, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 10, 7, 6, 3, 2, 1, 1, 0, 6, 4, 2, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, sigma), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 4, 3, 2, 6, 1, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [5, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 2, 82, 91, 78], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [3, 3], [], [1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1], [4, 3, 8, 9, 7, 4], [1, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [14, 40, 50, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08889182657003403, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 8, 3, 2, 6, 1, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 2, 82, 91, 78], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [3, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 8, 9, 7, 4], [1, 1, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 61, 71, 34]], "fitness": -0.0705714300274849, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 8, 4, 5, 3, 1, 1, 0, 0, 4, 2, 2, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.sqrt(tf.math.multiply(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, alpha))", "other_info": {"loss": [2.3027524081172093, 2.3040279064511013, 2.3069216068536376, 2.308736681764971, 2.3116836496836095, 2.3142479188753047, 2.318563937133156, 2.322755407395852, 2.330946406447703, 2.343154029917991, 2.3714293371086437, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09126931428909302, 0.08572183549404144, 0.08413683623075485, 0.0804385170340538, 0.07832518965005875, 0.07660810649394989, 0.0758156105875969, 0.07687227427959442, 0.07013604789972305, 0.0758156105875969, 0.07515519857406616, 0.09126931428909302, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9717469215393066, 1.9731967789786202, 1.974818434034075, 1.9768122945513045, 1.9793334007263184, 1.9819374765668596, 1.9848618507385254, 1.9884793417794364, 1.9944846970694405, 2.0063957486833846, 2.0436241967337474, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03266666829586029, 0.03133333474397659, 0.028333334252238274, 0.027666667476296425, 0.029333332553505898, 0.03400000184774399, 0.043666668236255646, 0.05966666713356972, 0.08233333379030228, 0.09600000083446503, 0.10000000149011612, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 4, 3, 2, 6, 1, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 2, 82, 91, 78], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [3, 3], [], [0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [0, 3, 8, 6, 2, 4, 0, 4], [1, 3, 3, 0, 3, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [14, 25, 50, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 9, 5, 4, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(sigma, sigma), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.30217470837433, 2.301953582054494, 2.302907427430169, 2.3026509031155453, 2.3027587357041006, 2.3023564822134355], "accuracy": [0.09259014576673508, 0.09219389408826828, 0.09021265059709549, 0.08994849026203156, 0.08875974267721176, 0.09140139818191528], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 4, 3, 2, 6, 1, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 2, 82, 91, 78], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [7, 3, 0], [5, 3], [], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 7, 8, 6, 7, 4], [3, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [30, 25, 61, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.30217470837433, 2.301953582054494, 2.302907427430169, 2.3026509031155453, 2.3027587357041006, 2.3023564822134355], "accuracy": [0.09259014576673508, 0.09219389408826828, 0.09021265059709549, 0.08994849026203156, 0.08875974267721176, 0.09140139818191528], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 0, 5, 7, 9, 2, 5, 2, 8, 2, 0, 5, 3, 9, 5, 9, 3, 8, 0, 5, 5, 2, 0, 2, 1, 8], [2, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [11, 52, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 4, 3, 2, 6, 1, 9, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 0, 0, 2, 1, 3, 0, 0], [32, 33, 2, 82, 91, 78], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [3, 3], [], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], [0, 3, 8, 9, 7, 4], [3, 0, 3, 0, 1, 2, 2, 3, 0, 3, 2, 2, 3, 3, 2, 3, 3, 2], [20, 25, 61, 71, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 3, 1, 1, 0, 0, 5, 4, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.sqrt(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.30217470837433, 2.301953582054494, 2.302907427430169, 2.3026509031155453, 2.3027587357041006, 2.3023564822134355], "accuracy": [0.09259014576673508, 0.09219389408826828, 0.09021265059709549, 0.08994849026203156, 0.08875974267721176, 0.09140139818191528], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]