[{"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0], [9, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [7, 4, 4, 2, 2, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 2, 0, 3, 3, 0, 5], [30, 63, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.797428548336029, "mapping_values": [1, 1, 1, 1, 0, 1, 7, 7, 3, 4, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.pow(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.0878955818453893, 1.332369229718285, 1.0716307803687324, 0.9303414929166619, 0.8243711395365073, 0.778640772829974, 0.7671852067571511, 0.7236422006055081, 0.725963033972919, 0.701318336295225, 0.654786998837332, 0.6696006300552977, 0.6182591484412069, 0.6260036019097387, 0.6154799391061024, 0.5993383178511285, 0.5992622470512461, 0.5810157262874301, 0.5702588205733682, 0.5530165357321103, 0.5514611562938109, 0.5610097274568024, 0.5572050034472372, 0.533288471986274], "accuracy": [0.308149516582489, 0.5215955376625061, 0.6061286330223083, 0.6653017997741699, 0.6861709356307983, 0.7025492191314697, 0.7054550051689148, 0.7271166443824768, 0.7326641082763672, 0.7331924438476562, 0.7520803213119507, 0.7401928305625916, 0.7619865536689758, 0.7601373791694641, 0.7618544697761536, 0.7687227725982666, 0.7713643908500671, 0.7808743715286255, 0.7840443849563599, 0.7882710099220276, 0.7943468689918518, 0.7843085527420044, 0.7852331399917603, 0.7975168228149414], "val_loss": [1.1725512913295202, 0.9354363850184849, 0.7044692890984672, 0.6746423244476318, 0.5691347462790353, 0.6536344460078648, 0.5714535542896816, 0.5636558192116874, 0.5406852960586548, 0.5197042397090367, 0.4928323881966727, 0.4791799102510725, 0.47616524355752127, 0.48420396872929167, 0.4657015800476074, 0.4768838371549334, 0.4789851563317435, 0.46772897243499756, 0.4449151839528765, 0.4596398557935442, 0.4497947267123631, 0.4340364081518991, 0.4338952728680202, 0.4386242798396519], "val_accuracy": [0.5849999785423279, 0.6309999823570251, 0.6713333129882812, 0.7080000042915344, 0.7543333172798157, 0.6846666932106018, 0.7413333058357239, 0.737666666507721, 0.7670000195503235, 0.7806666493415833, 0.7853333353996277, 0.8003333210945129, 0.7883333563804626, 0.7746666669845581, 0.8073333501815796, 0.7839999794960022, 0.8029999732971191, 0.7876666784286499, 0.815666675567627, 0.8029999732971191, 0.8036666512489319, 0.8073333501815796, 0.8149999976158142, 0.8096666932106018]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [0, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 2, 2, 2, 2, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 0, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.797428548336029, "mapping_values": [1, 1, 1, 0, 1, 1, 13, 13, 6, 7, 3, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), grad)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.0878955818453893, 1.332369229718285, 1.0716307803687324, 0.9303414929166619, 0.8243711395365073, 0.778640772829974, 0.7671852067571511, 0.7236422006055081, 0.725963033972919, 0.701318336295225, 0.654786998837332, 0.6696006300552977, 0.6182591484412069, 0.6260036019097387, 0.6154799391061024, 0.5993383178511285, 0.5992622470512461, 0.5810157262874301, 0.5702588205733682, 0.5530165357321103, 0.5514611562938109, 0.5610097274568024, 0.5572050034472372, 0.533288471986274], "accuracy": [0.308149516582489, 0.5215955376625061, 0.6061286330223083, 0.6653017997741699, 0.6861709356307983, 0.7025492191314697, 0.7054550051689148, 0.7271166443824768, 0.7326641082763672, 0.7331924438476562, 0.7520803213119507, 0.7401928305625916, 0.7619865536689758, 0.7601373791694641, 0.7618544697761536, 0.7687227725982666, 0.7713643908500671, 0.7808743715286255, 0.7840443849563599, 0.7882710099220276, 0.7943468689918518, 0.7843085527420044, 0.7852331399917603, 0.7975168228149414], "val_loss": [1.1725512913295202, 0.9354363850184849, 0.7044692890984672, 0.6746423244476318, 0.5691347462790353, 0.6536344460078648, 0.5714535542896816, 0.5636558192116874, 0.5406852960586548, 0.5197042397090367, 0.4928323881966727, 0.4791799102510725, 0.47616524355752127, 0.48420396872929167, 0.4657015800476074, 0.4768838371549334, 0.4789851563317435, 0.46772897243499756, 0.4449151839528765, 0.4596398557935442, 0.4497947267123631, 0.4340364081518991, 0.4338952728680202, 0.4386242798396519], "val_accuracy": [0.5849999785423279, 0.6309999823570251, 0.6713333129882812, 0.7080000042915344, 0.7543333172798157, 0.6846666932106018, 0.7413333058357239, 0.737666666507721, 0.7670000195503235, 0.7806666493415833, 0.7853333353996277, 0.8003333210945129, 0.7883333563804626, 0.7746666669845581, 0.8073333501815796, 0.7839999794960022, 0.8029999732971191, 0.7876666784286499, 0.815666675567627, 0.8029999732971191, 0.8036666512489319, 0.8073333501815796, 0.8149999976158142, 0.8096666932106018]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 2, 2, 2, 2, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 1, 3, 3, 0, 2, 3, 2, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 7, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.7934285998344421, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 6, 7, 1, 1, 1, 0, 1, 0, 8, 5, 3, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, beta), alpha), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.math.add(sigma, sigma), sigma), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.4264761195789317, 2.303820921618626, 2.167586845476803, 1.8171172462764937, 1.4411639089928232, 1.1585758033917959, 1.0086107137196603, 0.9211423744567712, 0.8745681908797941, 0.8437509897866536, 0.7909929146305004, 0.7458866971626478, 0.7639509037406673, 0.754515006896165, 0.6929231177011201, 0.6873226280005191, 0.655890047920221, 0.6677408533608987, 0.6089663939343121, 0.6007664494620905, 0.6178442258577242, 0.5850932758324623, 0.5674595803538051, 0.5767869511458065, 0.541202187081527, 0.5270214839429431], "accuracy": [0.22995641827583313, 0.10777968913316727, 0.2525425851345062, 0.40562674403190613, 0.520142674446106, 0.5691454410552979, 0.6149781942367554, 0.6577730774879456, 0.6684718132019043, 0.6892088055610657, 0.6946242451667786, 0.7149649858474731, 0.7136441469192505, 0.7111346125602722, 0.7317395210266113, 0.7372870445251465, 0.7511557340621948, 0.7432307600975037, 0.7725531458854675, 0.7666094303131104, 0.763439416885376, 0.7765156626701355, 0.7865539789199829, 0.7759873270988464, 0.7936864495277405, 0.8039889335632324], "val_loss": [1.9771877697535925, 1.9638700485229492, 1.3492554255894251, 1.3904766355242049, 1.0087886878422327, 0.6895610604967389, 0.6938382046563285, 0.6413549695696149, 0.6642904111317226, 0.610468966620309, 0.5640432494027274, 0.5636081695556641, 0.6124368735722133, 0.5430614267076764, 0.5380738462720599, 0.5207816702978951, 0.5160633836473737, 0.5286040476390294, 0.49319125924791607, 0.5009655100958688, 0.45454020159585135, 0.464312025478908, 0.5230832781110492, 0.44198652676173616, 0.46072676352092196, 0.4455684082848685], "val_accuracy": [0.09833333641290665, 0.1469999998807907, 0.5416666865348816, 0.543666660785675, 0.5956666469573975, 0.7016666531562805, 0.7036666870117188, 0.6899999976158142, 0.7223333120346069, 0.7139999866485596, 0.7319999933242798, 0.7406666874885559, 0.7149999737739563, 0.7413333058357239, 0.762666642665863, 0.7723333239555359, 0.7586666941642761, 0.7699999809265137, 0.7829999923706055, 0.7789999842643738, 0.8116666674613953, 0.7870000004768372, 0.7606666684150696, 0.8016666769981384, 0.7770000100135803, 0.8016666769981384]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [0, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [5, 8, 4, 2, 2, 1, 9, 0, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 1, 3, 3, 0, 2, 3, 2, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [72, 38]], "fitness": -0.23685714602470398, "mapping_values": [1, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [3.415184639826301, 2.375351355013169, 2.324041767048562, 2.304602159752806, 2.3034815180177275, 2.303129764107697, 2.3029601594098352], "accuracy": [0.17580240964889526, 0.14819706976413727, 0.16563200950622559, 0.09708096832036972, 0.09787346422672272, 0.09496764093637466, 0.09615638852119446], "val_loss": [1.973757539476667, 1.90667268208095, 1.9759836878095354, 1.9737730707441057, 1.9736209596906389, 1.9736239569527763, 1.9736359460013253], "val_accuracy": [0.10300000011920929, 0.37533333897590637, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.10400000214576721, 0.09700000286102295]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 0], [2, 6, 9, 9, 0], [2, 1, 1, 3], [67, 57], [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [6, 2, 2, 5, 6, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 2, 2, 3, 3, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.20228570699691772, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.5107200363954267, 2.309807855061662, 2.305933799411107, 2.3197279242224713, 2.304594029808372, 2.303337112787519, 2.303029710464568, 2.3029397934372113], "accuracy": [0.17514199018478394, 0.09470347315073013, 0.17263241112232208, 0.11200633645057678, 0.09747721254825592, 0.0948355570435524, 0.09417514503002167, 0.09285431355237961], "val_loss": [1.980001449584961, 1.9692630767822266, 1.883129324231829, 1.9760788508823939, 1.9740302903311593, 1.9736710957118444, 1.9736033848353796, 1.9736268179757255], "val_accuracy": [0.10233332961797714, 0.17633333802223206, 0.21133333444595337, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.09700000286102295]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 0], [2, 6, 9, 9, 0], [0, 1, 1, 3], [5, 57], [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 4, 2, 2, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 2, 2, 1, 3, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.20228570699691772, "mapping_values": [1, 1, 1, 0, 1, 1, 13, 13, 6, 7, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, grad), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta)))))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.5107200363954267, 2.309807855061662, 2.305933799411107, 2.3197279242224713, 2.304594029808372, 2.303337112787519, 2.303029710464568, 2.3029397934372113], "accuracy": [0.17514199018478394, 0.09470347315073013, 0.17263241112232208, 0.11200633645057678, 0.09747721254825592, 0.0948355570435524, 0.09417514503002167, 0.09285431355237961], "val_loss": [1.980001449584961, 1.9692630767822266, 1.883129324231829, 1.9760788508823939, 1.9740302903311593, 1.9736710957118444, 1.9736033848353796, 1.9736268179757255], "val_accuracy": [0.10233332961797714, 0.17633333802223206, 0.21133333444595337, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 6, 4, 2, 4, 7], [2, 0, 0, 3, 1, 0, 1], [5, 57, 16], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [9, 2, 4, 3, 0, 1, 5, 4, 2, 8, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 1, 3, 3, 0, 2, 3, 2, 0], [42, 16, 43, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [2, 3, 3, 1], [57, 38]], "fitness": -0.20228570699691772, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.5107200363954267, 2.309807855061662, 2.305933799411107, 2.3197279242224713, 2.304594029808372, 2.303337112787519, 2.303029710464568, 2.3029397934372113], "accuracy": [0.17514199018478394, 0.09470347315073013, 0.17263241112232208, 0.11200633645057678, 0.09747721254825592, 0.0948355570435524, 0.09417514503002167, 0.09285431355237961], "val_loss": [1.980001449584961, 1.9692630767822266, 1.883129324231829, 1.9760788508823939, 1.9740302903311593, 1.9736710957118444, 1.9736033848353796, 1.9736268179757255], "val_accuracy": [0.10233332961797714, 0.17633333802223206, 0.21133333444595337, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0], [2, 6, 9, 9, 0], [2, 3, 2, 3], [5, 57], [0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1], [9, 8, 4, 3, 2, 0, 9, 2, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 1, 3, 3, 0, 2, 3, 2, 0], [41, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [80, 38]], "fitness": -0.20028571784496307, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [3.472112183148252, 2.309876083776605, 2.2872234879703948, 2.2662854375714527, 2.3054516384740467, 2.3036350587009204, 2.3031421894914423], "accuracy": [0.17751948535442352, 0.10117553919553757, 0.12455421686172485, 0.17276449501514435, 0.09906221181154251, 0.09298639744520187, 0.09800554811954498], "val_loss": [1.9821925163269043, 1.9714326858520508, 1.9550634792872839, 1.9763147490365165, 1.9739033835274833, 1.9735802241734095, 1.9735565185546875], "val_accuracy": [0.09833333641290665, 0.1589999943971634, 0.10433333367109299, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [0, 1, 1, 3], [5, 57], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 5, 2, 2, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 2, 3, 3, 2, 2, 3, 3, 0], [42, 22, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0], [0, 3, 7, 2, 9], [3, 0, 3, 1], [41, 38]], "fitness": -0.11714285612106323, "mapping_values": [1, 1, 1, 0, 1, 1, 12, 12, 6, 6, 0, 1, 1, 0, 1, 0, 8, 4, 4, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), grad)))), tf.math.add(beta, grad)))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.math.add(sigma, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), sigma), alpha))", "other_info": {"loss": [2.30116355131016, 2.302539953513467, 2.302583730704182, 2.3025823003816535, 2.3025821157182604, 2.3025807930005775], "accuracy": [0.09655263274908066, 0.1080438494682312, 0.10698718577623367, 0.10408136248588562, 0.10513802617788315, 0.108440101146698], "val_loss": [1.9736114229474748, 1.973644801548549, 1.9736438478742326, 1.9736452783857072, 1.9736456189836775, 1.9736454146248954], "val_accuracy": [0.11100000143051147, 0.10000000149011612, 0.10400000214576721, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 0], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 6, 2, 0, 5, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 2, 2, 3, 3, 0], [97, 29, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 7, 4, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(beta, grad)), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.square(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07515519857406616, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 2, 2, 2, 2, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 1, 0, 3, 2, 3, 3, 0], [97, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 7, 2, 9], [3, 3, 0, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 6, 7, 2, 1, 1, 0, 1, 0, 8, 5, 3, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.math.add(sigma, sigma), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [13.321503640197413, 3.5825429165824656, 2.343649472196451, 2.330493453534335, 2.3667181100292356, 2.342681619926073, 2.340755863432808], "accuracy": [0.09774138033390045, 0.09668471664190292, 0.10011887550354004, 0.09708096832036972, 0.09813763201236725, 0.1018359512090683, 0.10210011899471283], "val_loss": [5.1146857397896905, 2.0016458375113353, 1.9826418331691198, 2.1323135920933316, 2.014578206198556, 1.9760348456246513, 1.988105637686593], "val_accuracy": [0.09733333438634872, 0.10400000214576721, 0.10400000214576721, 0.10366666316986084, 0.10366666316986084, 0.09966666996479034, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 0, 3, 3, 0, 2, 3, 2, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1], [0, 3, 7, 2, 1, 5, 2, 0, 3, 0, 0], [3, 3, 3, 1, 2, 2, 3], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 6, 7, 2, 1, 1, 0, 1, 0, 18, 11, 7, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, beta), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))))), tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.math.add(tf.math.subtract(sigma, sigma), tf.math.square(sigma)), tf.math.add(alpha, beta)), tf.math.negative(tf.math.multiply(tf.math.negative(tf.math.negative(beta)), sigma))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08057060092687607, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0, 1], [5, 57, 16], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [7, 2, 4, 2, 2, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 2, 2, 3, 3, 0, 5], [97, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [1, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 23, 23, 12, 11, 4, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta))), tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.subtract(grad, tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.pow(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), grad)))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06498481333255768, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 9, 2, 2, 2, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 1, 3, 3, 0, 2, 3, 2, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 3, 7, 2, 9, 4, 4, 5, 7], [3, 3, 3, 1, 0, 0], [62, 38, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 15, 9, 6, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.math.add(tf.math.add(beta, beta), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.math.add(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), sigma), sigma), tf.math.pow(sigma, tf.math.pow(alpha, tf.math.square(tf.math.add(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 6, 4, 2, 4, 7], [0, 0, 0, 3, 1, 0], [5, 30], [0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0], [7, 2, 4, 2, 2, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 1, 3, 3, 0, 2, 3, 2, 0], [63, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 0, 9, 2, 9], [3, 3, 3, 1], [17, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 0, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3027775802506496, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0], [2, 6, 9, 9, 0], [0, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 2, 2, 2, 2, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 1, 1, 3, 0, 2, 3, 2, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [5, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 2, 17, 17, 8, 9, 1, 1, 1, 0, 1, 0, 6, 5, 1, 2], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), alpha)), tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), grad)), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), beta)))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.302344421149402, 2.3025834291145992, 2.3025841534082616, 2.302583573249038, 2.302583546040789, 2.3025832085829245], "accuracy": [0.09800554811954498, 0.10421344637870789, 0.10513802617788315, 0.1026284471154213, 0.10645885765552521, 0.10117553919553757], "val_loss": [1.973644597189767, 1.9736450059073312, 1.973644801548549, 1.9736435072762626, 1.9736449377877372, 1.9736450740269251], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0], [1, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 1, 2, 5, 2, 2, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 2, 2, 2, 1, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 7, 2, 9], [0, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 18, 18, 9, 9, 3, 1, 1, 0, 1, 0, 8, 5, 3, 2], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.subtract(tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta))))), tf.math.add(beta, beta)), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), sigma), sigma), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [13.321503640197413, 3.5825429165824656, 2.343649472196451, 2.330493453534335, 2.3667181100292356, 2.342681619926073, 2.340755863432808], "accuracy": [0.09774138033390045, 0.09668471664190292, 0.10011887550354004, 0.09708096832036972, 0.09813763201236725, 0.1018359512090683, 0.10210011899471283], "val_loss": [5.1146857397896905, 2.0016458375113353, 1.9826418331691198, 2.1323135920933316, 2.014578206198556, 1.9760348456246513, 1.988105637686593], "val_accuracy": [0.09733333438634872, 0.10400000214576721, 0.10400000214576721, 0.10366666316986084, 0.10366666316986084, 0.09966666996479034, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1], [6, 6, 4, 2, 4, 7, 7, 9, 7, 2, 1, 6, 5, 1, 8, 7, 3, 7, 5, 1, 3, 7, 2, 5, 4, 5, 9, 6, 2, 8, 8], [2, 0, 2, 3, 1, 0, 1, 0, 0, 3, 1, 0, 3, 3, 1, 1, 0, 3, 2, 0, 2], [5, 99, 29, 60, 25, 15, 27, 69, 30], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 2, 2, 2, 2, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 2, 2, 3, 3, 0], [97, 16, 43, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 0, 3, 1], [20, 38]], "fitness": -0.09971428662538528, "mapping_values": [1, 52, 52, 31, 21, 9, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 6, 5, 1, 2], "tree_depth": 52, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), grad)), tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), tf.math.add(alpha, grad))), tf.math.add(alpha, alpha)), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha))), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), grad)), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), grad), alpha)))), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))))), tf.math.divide_no_nan(tf.math.add(grad, tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(grad))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.4652951871556787, 4.29663712388536, 8.912208498051736, 16.366368099903433, 26.94080401909208, 40.345706006051245], "accuracy": [0.09655263274908066, 0.09919429570436478, 0.09959053993225098, 0.09721305221319199, 0.10368511080741882, 0.09985470771789551], "val_loss": [2.3508242879595076, 4.344222205025809, 8.158415930611747, 13.77084105355399, 21.372634887695312, 31.190253121512278], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [0, 2, 2, 2, 2, 9, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 1, 3, 2, 0, 2, 3, 2, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0], [3, 3, 0, 8], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 7, 5, 4, 1, 0, 6, 4, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.sqrt(sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, sigma)))", "other_info": {"loss": [2.301487226055409, 2.3031009800162345, 2.3034956279825685, 2.3036881439784387, 2.30173096145385, 2.3023780075282847], "accuracy": [0.09430722147226334, 0.08889182657003403, 0.08981640636920929, 0.09087307006120682, 0.0936468094587326, 0.09470347315073013], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 2, 4, 2, 2, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 1, 3, 0, 0, 3, 3, 2, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [5, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 8, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 4, 2, 2, 0, 7, 4, 3, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.add(sigma, sigma)), sigma))", "other_info": {"loss": [2.301487226055409, 2.3031009800162345, 2.3034956279825685, 2.3036881439784387, 2.30173096145385, 2.3023780075282847], "accuracy": [0.09430722147226334, 0.08889182657003403, 0.08981640636920929, 0.09087307006120682, 0.0936468094587326, 0.09470347315073013], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]