[{"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.8125714063644409, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [1.9595454295770194, 1.3697366040726977, 1.0845601049632823, 0.9019837983610954, 0.7791376229621132, 0.7510125639967363, 0.7214025697845431, 0.6963279980709997, 0.6755706808507529, 0.6306469529973454, 0.6311773651815472, 0.6217064120592836, 0.5945158120175362, 0.6036756670297082, 0.5929100750428243, 0.5621491441826196, 0.5625792296571093, 0.5444903217207848, 0.5432223623628079, 0.5047702717822006, 0.5138197395708961, 0.5059429422865266, 0.510622137710954, 0.4816617268093227, 0.47019010118174753, 0.4652584850937699, 0.4815322492242631, 0.45425432802758214, 0.45079346663443925, 0.4481577627599956, 0.43715804108712397, 0.44008524786164777, 0.43339452719046, 0.4260595494989769, 0.41501895364375396, 0.4271856124500919, 0.40401001836897404, 0.4168672176588953, 0.39032801585804594, 0.3979252548092439, 0.39079109602647766], "accuracy": [0.3431515097618103, 0.5420684218406677, 0.6145819425582886, 0.6641130447387695, 0.7065116763114929, 0.7191916704177856, 0.7283053994178772, 0.7420420050621033, 0.741909921169281, 0.7584202885627747, 0.7576277852058411, 0.7568352818489075, 0.7749306559562683, 0.7697794437408447, 0.7778365015983582, 0.785101056098938, 0.7845727205276489, 0.7935543656349182, 0.7973847389221191, 0.8133667707443237, 0.8074230551719666, 0.8059701323509216, 0.8049134612083435, 0.817461371421814, 0.8269713521003723, 0.8208954930305481, 0.8264430165290833, 0.8314621448516846, 0.8313300609588623, 0.8308017253875732, 0.8392550349235535, 0.8347642421722412, 0.8400475382804871, 0.8368775844573975, 0.8425571322441101, 0.8425571322441101, 0.8556333184242249, 0.8436138033866882, 0.8558974862098694, 0.8545766472816467, 0.8527275323867798], "val_loss": [1.106344359261649, 0.9912303175245013, 0.6669166428702218, 0.6214033194950649, 0.584674596786499, 0.6009396484919957, 0.5816592829568046, 0.5727616889136178, 0.5004770415169852, 0.5083382981164115, 0.5165691886629377, 0.4841709647859846, 0.51458512033735, 0.5154580899647304, 0.4480511460985456, 0.5027480295726231, 0.4681077514375959, 0.4835268769945417, 0.4277461426598685, 0.42204713821411133, 0.4459326011793954, 0.41089199270520893, 0.4069571920803615, 0.43266662529536654, 0.38953761543546406, 0.43776014021464754, 0.4097704972539629, 0.40075411966868807, 0.37380315576280865, 0.3755723663738796, 0.37440785339900423, 0.3643027629171099, 0.3937671865735735, 0.3681712235723223, 0.368914714881352, 0.35576761620385305, 0.360808653490884, 0.38148415088653564, 0.3711067863873073, 0.35885307618549894, 0.38535732882363455], "val_accuracy": [0.6186666488647461, 0.6299999952316284, 0.6886666417121887, 0.7210000157356262, 0.7326666712760925, 0.7193333506584167, 0.7266666889190674, 0.731333315372467, 0.7720000147819519, 0.7699999809265137, 0.7699999809265137, 0.7893333435058594, 0.762333333492279, 0.7749999761581421, 0.8146666884422302, 0.7796666622161865, 0.7716666460037231, 0.777999997138977, 0.815666675567627, 0.8223333358764648, 0.7953333258628845, 0.828000009059906, 0.8333333134651184, 0.8073333501815796, 0.8396666646003723, 0.8113333582878113, 0.8220000267028809, 0.8296666741371155, 0.8410000205039978, 0.8453333377838135, 0.8416666388511658, 0.8523333072662354, 0.8410000205039978, 0.8383333086967468, 0.8460000157356262, 0.8550000190734863, 0.8503333330154419, 0.8323333263397217, 0.8443333506584167, 0.8479999899864197, 0.8296666741371155]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [8, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [71, 78, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.8125714063644409, "mapping_values": [1, 2, 2, 1, 1, 0, 9, 9, 5, 4, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad))))), tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [1.9595454295770194, 1.3697366040726977, 1.0845601049632823, 0.9019837983610954, 0.7791376229621132, 0.7510125639967363, 0.7214025697845431, 0.6963279980709997, 0.6755706808507529, 0.6306469529973454, 0.6311773651815472, 0.6217064120592836, 0.5945158120175362, 0.6036756670297082, 0.5929100750428243, 0.5621491441826196, 0.5625792296571093, 0.5444903217207848, 0.5432223623628079, 0.5047702717822006, 0.5138197395708961, 0.5059429422865266, 0.510622137710954, 0.4816617268093227, 0.47019010118174753, 0.4652584850937699, 0.4815322492242631, 0.45425432802758214, 0.45079346663443925, 0.4481577627599956, 0.43715804108712397, 0.44008524786164777, 0.43339452719046, 0.4260595494989769, 0.41501895364375396, 0.4271856124500919, 0.40401001836897404, 0.4168672176588953, 0.39032801585804594, 0.3979252548092439, 0.39079109602647766], "accuracy": [0.3431515097618103, 0.5420684218406677, 0.6145819425582886, 0.6641130447387695, 0.7065116763114929, 0.7191916704177856, 0.7283053994178772, 0.7420420050621033, 0.741909921169281, 0.7584202885627747, 0.7576277852058411, 0.7568352818489075, 0.7749306559562683, 0.7697794437408447, 0.7778365015983582, 0.785101056098938, 0.7845727205276489, 0.7935543656349182, 0.7973847389221191, 0.8133667707443237, 0.8074230551719666, 0.8059701323509216, 0.8049134612083435, 0.817461371421814, 0.8269713521003723, 0.8208954930305481, 0.8264430165290833, 0.8314621448516846, 0.8313300609588623, 0.8308017253875732, 0.8392550349235535, 0.8347642421722412, 0.8400475382804871, 0.8368775844573975, 0.8425571322441101, 0.8425571322441101, 0.8556333184242249, 0.8436138033866882, 0.8558974862098694, 0.8545766472816467, 0.8527275323867798], "val_loss": [1.106344359261649, 0.9912303175245013, 0.6669166428702218, 0.6214033194950649, 0.584674596786499, 0.6009396484919957, 0.5816592829568046, 0.5727616889136178, 0.5004770415169852, 0.5083382981164115, 0.5165691886629377, 0.4841709647859846, 0.51458512033735, 0.5154580899647304, 0.4480511460985456, 0.5027480295726231, 0.4681077514375959, 0.4835268769945417, 0.4277461426598685, 0.42204713821411133, 0.4459326011793954, 0.41089199270520893, 0.4069571920803615, 0.43266662529536654, 0.38953761543546406, 0.43776014021464754, 0.4097704972539629, 0.40075411966868807, 0.37380315576280865, 0.3755723663738796, 0.37440785339900423, 0.3643027629171099, 0.3937671865735735, 0.3681712235723223, 0.368914714881352, 0.35576761620385305, 0.360808653490884, 0.38148415088653564, 0.3711067863873073, 0.35885307618549894, 0.38535732882363455], "val_accuracy": [0.6186666488647461, 0.6299999952316284, 0.6886666417121887, 0.7210000157356262, 0.7326666712760925, 0.7193333506584167, 0.7266666889190674, 0.731333315372467, 0.7720000147819519, 0.7699999809265137, 0.7699999809265137, 0.7893333435058594, 0.762333333492279, 0.7749999761581421, 0.8146666884422302, 0.7796666622161865, 0.7716666460037231, 0.777999997138977, 0.815666675567627, 0.8223333358764648, 0.7953333258628845, 0.828000009059906, 0.8333333134651184, 0.8073333501815796, 0.8396666646003723, 0.8113333582878113, 0.8220000267028809, 0.8296666741371155, 0.8410000205039978, 0.8453333377838135, 0.8416666388511658, 0.8523333072662354, 0.8410000205039978, 0.8383333086967468, 0.8460000157356262, 0.8550000190734863, 0.8503333330154419, 0.8323333263397217, 0.8443333506584167, 0.8479999899864197, 0.8296666741371155]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.8125714063644409, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))))), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [1.9595454295770194, 1.3697366040726977, 1.0845601049632823, 0.9019837983610954, 0.7791376229621132, 0.7510125639967363, 0.7214025697845431, 0.6963279980709997, 0.6755706808507529, 0.6306469529973454, 0.6311773651815472, 0.6217064120592836, 0.5945158120175362, 0.6036756670297082, 0.5929100750428243, 0.5621491441826196, 0.5625792296571093, 0.5444903217207848, 0.5432223623628079, 0.5047702717822006, 0.5138197395708961, 0.5059429422865266, 0.510622137710954, 0.4816617268093227, 0.47019010118174753, 0.4652584850937699, 0.4815322492242631, 0.45425432802758214, 0.45079346663443925, 0.4481577627599956, 0.43715804108712397, 0.44008524786164777, 0.43339452719046, 0.4260595494989769, 0.41501895364375396, 0.4271856124500919, 0.40401001836897404, 0.4168672176588953, 0.39032801585804594, 0.3979252548092439, 0.39079109602647766], "accuracy": [0.3431515097618103, 0.5420684218406677, 0.6145819425582886, 0.6641130447387695, 0.7065116763114929, 0.7191916704177856, 0.7283053994178772, 0.7420420050621033, 0.741909921169281, 0.7584202885627747, 0.7576277852058411, 0.7568352818489075, 0.7749306559562683, 0.7697794437408447, 0.7778365015983582, 0.785101056098938, 0.7845727205276489, 0.7935543656349182, 0.7973847389221191, 0.8133667707443237, 0.8074230551719666, 0.8059701323509216, 0.8049134612083435, 0.817461371421814, 0.8269713521003723, 0.8208954930305481, 0.8264430165290833, 0.8314621448516846, 0.8313300609588623, 0.8308017253875732, 0.8392550349235535, 0.8347642421722412, 0.8400475382804871, 0.8368775844573975, 0.8425571322441101, 0.8425571322441101, 0.8556333184242249, 0.8436138033866882, 0.8558974862098694, 0.8545766472816467, 0.8527275323867798], "val_loss": [1.106344359261649, 0.9912303175245013, 0.6669166428702218, 0.6214033194950649, 0.584674596786499, 0.6009396484919957, 0.5816592829568046, 0.5727616889136178, 0.5004770415169852, 0.5083382981164115, 0.5165691886629377, 0.4841709647859846, 0.51458512033735, 0.5154580899647304, 0.4480511460985456, 0.5027480295726231, 0.4681077514375959, 0.4835268769945417, 0.4277461426598685, 0.42204713821411133, 0.4459326011793954, 0.41089199270520893, 0.4069571920803615, 0.43266662529536654, 0.38953761543546406, 0.43776014021464754, 0.4097704972539629, 0.40075411966868807, 0.37380315576280865, 0.3755723663738796, 0.37440785339900423, 0.3643027629171099, 0.3937671865735735, 0.3681712235723223, 0.368914714881352, 0.35576761620385305, 0.360808653490884, 0.38148415088653564, 0.3711067863873073, 0.35885307618549894, 0.38535732882363455], "val_accuracy": [0.6186666488647461, 0.6299999952316284, 0.6886666417121887, 0.7210000157356262, 0.7326666712760925, 0.7193333506584167, 0.7266666889190674, 0.731333315372467, 0.7720000147819519, 0.7699999809265137, 0.7699999809265137, 0.7893333435058594, 0.762333333492279, 0.7749999761581421, 0.8146666884422302, 0.7796666622161865, 0.7716666460037231, 0.777999997138977, 0.815666675567627, 0.8223333358764648, 0.7953333258628845, 0.828000009059906, 0.8333333134651184, 0.8073333501815796, 0.8396666646003723, 0.8113333582878113, 0.8220000267028809, 0.8296666741371155, 0.8410000205039978, 0.8453333377838135, 0.8416666388511658, 0.8523333072662354, 0.8410000205039978, 0.8383333086967468, 0.8460000157356262, 0.8550000190734863, 0.8503333330154419, 0.8323333263397217, 0.8443333506584167, 0.8479999899864197, 0.8296666741371155]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.8125714063644409, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))))), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [1.9595454295770194, 1.3697366040726977, 1.0845601049632823, 0.9019837983610954, 0.7791376229621132, 0.7510125639967363, 0.7214025697845431, 0.6963279980709997, 0.6755706808507529, 0.6306469529973454, 0.6311773651815472, 0.6217064120592836, 0.5945158120175362, 0.6036756670297082, 0.5929100750428243, 0.5621491441826196, 0.5625792296571093, 0.5444903217207848, 0.5432223623628079, 0.5047702717822006, 0.5138197395708961, 0.5059429422865266, 0.510622137710954, 0.4816617268093227, 0.47019010118174753, 0.4652584850937699, 0.4815322492242631, 0.45425432802758214, 0.45079346663443925, 0.4481577627599956, 0.43715804108712397, 0.44008524786164777, 0.43339452719046, 0.4260595494989769, 0.41501895364375396, 0.4271856124500919, 0.40401001836897404, 0.4168672176588953, 0.39032801585804594, 0.3979252548092439, 0.39079109602647766], "accuracy": [0.3431515097618103, 0.5420684218406677, 0.6145819425582886, 0.6641130447387695, 0.7065116763114929, 0.7191916704177856, 0.7283053994178772, 0.7420420050621033, 0.741909921169281, 0.7584202885627747, 0.7576277852058411, 0.7568352818489075, 0.7749306559562683, 0.7697794437408447, 0.7778365015983582, 0.785101056098938, 0.7845727205276489, 0.7935543656349182, 0.7973847389221191, 0.8133667707443237, 0.8074230551719666, 0.8059701323509216, 0.8049134612083435, 0.817461371421814, 0.8269713521003723, 0.8208954930305481, 0.8264430165290833, 0.8314621448516846, 0.8313300609588623, 0.8308017253875732, 0.8392550349235535, 0.8347642421722412, 0.8400475382804871, 0.8368775844573975, 0.8425571322441101, 0.8425571322441101, 0.8556333184242249, 0.8436138033866882, 0.8558974862098694, 0.8545766472816467, 0.8527275323867798], "val_loss": [1.106344359261649, 0.9912303175245013, 0.6669166428702218, 0.6214033194950649, 0.584674596786499, 0.6009396484919957, 0.5816592829568046, 0.5727616889136178, 0.5004770415169852, 0.5083382981164115, 0.5165691886629377, 0.4841709647859846, 0.51458512033735, 0.5154580899647304, 0.4480511460985456, 0.5027480295726231, 0.4681077514375959, 0.4835268769945417, 0.4277461426598685, 0.42204713821411133, 0.4459326011793954, 0.41089199270520893, 0.4069571920803615, 0.43266662529536654, 0.38953761543546406, 0.43776014021464754, 0.4097704972539629, 0.40075411966868807, 0.37380315576280865, 0.3755723663738796, 0.37440785339900423, 0.3643027629171099, 0.3937671865735735, 0.3681712235723223, 0.368914714881352, 0.35576761620385305, 0.360808653490884, 0.38148415088653564, 0.3711067863873073, 0.35885307618549894, 0.38535732882363455], "val_accuracy": [0.6186666488647461, 0.6299999952316284, 0.6886666417121887, 0.7210000157356262, 0.7326666712760925, 0.7193333506584167, 0.7266666889190674, 0.731333315372467, 0.7720000147819519, 0.7699999809265137, 0.7699999809265137, 0.7893333435058594, 0.762333333492279, 0.7749999761581421, 0.8146666884422302, 0.7796666622161865, 0.7716666460037231, 0.777999997138977, 0.815666675567627, 0.8223333358764648, 0.7953333258628845, 0.828000009059906, 0.8333333134651184, 0.8073333501815796, 0.8396666646003723, 0.8113333582878113, 0.8220000267028809, 0.8296666741371155, 0.8410000205039978, 0.8453333377838135, 0.8416666388511658, 0.8523333072662354, 0.8410000205039978, 0.8383333086967468, 0.8460000157356262, 0.8550000190734863, 0.8503333330154419, 0.8323333263397217, 0.8443333506584167, 0.8479999899864197, 0.8296666741371155]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [0, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [87, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [17, 47, 50, 41, 34]], "fitness": -0.6251428723335266, "mapping_values": [1, 3, 3, 2, 1, 1, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))))), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.3025071685182863, 2.2986447937720644, 2.2944627715737953, 2.292419945102531, 2.2887206702357696, 2.286345433124446, 2.283118710305634, 2.280659597468902, 2.277181858336842, 2.2754864613015684, 2.2723339933839535, 2.2671747865804104, 2.266405151000884, 2.2620565341117596, 2.260314969748176, 2.255488209736393, 2.2531015330049984, 2.2486401681556143, 2.247204583854156, 2.2419348962239902, 2.239703010401123, 2.233916407767666, 2.2321706809513855, 2.226500217673045, 2.220952691655228, 2.218945594684811, 2.2152850274569826, 2.2092092506102348, 2.207088655563252, 2.202612860642719, 2.1948301227510627, 2.192159875760918, 2.1880939931382026, 2.1795504177251215, 2.175445699924806, 2.1708193988281077, 2.1619187274298506, 2.1544093674735434, 2.150867325140737, 2.1467790624106864, 2.13404665804495, 2.1268434593186574, 2.1199157842004523, 2.112835190976694, 2.10488751457037, 2.094717327755802, 2.0890216142147793, 2.077956079035356, 2.071660945853537, 2.062424267445258, 2.051517914188946, 2.038142293593226, 2.032417391852113, 2.021535862485699, 2.0073704940925388, 1.9936259641245513, 1.9850042244982111, 1.9717846091523257, 1.9598581155277657, 1.948755102008955, 1.9327524224009103, 1.9182917112687543, 1.9094780848215536, 1.8909687259807846, 1.882468139506476, 1.8671530001136085, 1.8569226536878647, 1.841673691463886, 1.822265404861963, 1.8055363311082333, 1.797247505332847, 1.7830688112904098, 1.765378720976689, 1.7539786172344574, 1.7394280367523625, 1.7214068228841664, 1.710972871227413, 1.6888857021654256, 1.6795621143592236, 1.660176812681335, 1.6471050822928504, 1.6402121958180251, 1.6145120536835438, 1.6101441910206729, 1.58899105319478, 1.5775240658454104, 1.5598162404140854, 1.5531482785810269, 1.5352573467992032, 1.517111356027563, 1.5129991619735896, 1.509972297205287, 1.4930140874987627, 1.4780899898770652, 1.4655831896507698, 1.4647146959220414, 1.4462190913549424, 1.4348786855654048, 1.425141362009614, 1.414476041654633], "accuracy": [0.0936468094587326, 0.09826971590518951, 0.10698718577623367, 0.11306300014257431, 0.12389380484819412, 0.12812046706676483, 0.14132875204086304, 0.1500462293624878, 0.15295206010341644, 0.16061286628246307, 0.1670849323272705, 0.17712323367595673, 0.18002906441688538, 0.19838859140872955, 0.19931316375732422, 0.2118610441684723, 0.21780477464199066, 0.22520142793655396, 0.23022057116031647, 0.24303261935710907, 0.23986263573169708, 0.25518426299095154, 0.26337340474128723, 0.275260865688324, 0.280940443277359, 0.280940443277359, 0.2864879071712494, 0.2989037036895752, 0.2945449650287628, 0.30062079429626465, 0.30947035551071167, 0.3159424066543579, 0.30986660718917847, 0.3287544548511505, 0.3280940353870392, 0.3327169418334961, 0.3463214933872223, 0.3471139967441559, 0.3498877286911011, 0.34764233231544495, 0.3617751896381378, 0.3677189350128174, 0.3693039119243622, 0.3671905994415283, 0.3763043284416199, 0.37722888588905334, 0.38383305072784424, 0.39149385690689087, 0.3928146958351135, 0.39189010858535767, 0.39770177006721497, 0.4029850661754608, 0.3995509147644043, 0.3987584114074707, 0.4143442213535309, 0.41487252712249756, 0.4155329465866089, 0.4283449947834015, 0.43428874015808105, 0.4267600178718567, 0.4309866726398468, 0.439439982175827, 0.4365341365337372, 0.44445911049842834, 0.4357416331768036, 0.4419495463371277, 0.4481574296951294, 0.44644036889076233, 0.46070531010627747, 0.4649319648742676, 0.4633469879627228, 0.45872408151626587, 0.4694227874279022, 0.4649319648742676, 0.46572446823120117, 0.4768194556236267, 0.4745740294456482, 0.4822348356246948, 0.4784044325351715, 0.488971084356308, 0.4881785809993744, 0.48051777482032776, 0.49848103523254395, 0.49768856167793274, 0.49610355496406555, 0.49966979026794434, 0.5128780603408813, 0.5077268481254578, 0.5105006098747253, 0.5197464227676392, 0.5182934999465942, 0.5138026475906372, 0.5138026475906372, 0.5272751450538635, 0.5255580544471741, 0.5278034806251526, 0.5233126282691956, 0.5342755317687988, 0.5361247062683105, 0.5349359512329102], "val_loss": [1.9677604266575404, 1.9650171143668038, 1.9622523444039481, 1.9594735418047224, 1.9567482812064034, 1.9540044239589147, 1.9512524604797363, 1.9484592846461706, 1.9456846373421806, 1.9429041998726981, 1.9400689261300224, 1.9371462549482072, 1.9342194284711565, 1.931253092629569, 1.928278582436698, 1.925182887486049, 1.9220455033438546, 1.9188030106680733, 1.915517943246024, 1.9121145520891463, 1.9086510113307409, 1.9050367219107491, 1.9013621466500419, 1.8975508553641183, 1.8936054365975517, 1.8895574297223772, 1.8854195731026786, 1.881091935294015, 1.8766281945364816, 1.8720258985246931, 1.867232322692871, 1.8622940608433314, 1.857184546334403, 1.8518289157322474, 1.8463067327226912, 1.84061826978411, 1.8346117564610072, 1.8283820833478654, 1.821995803288051, 1.8154043470110213, 1.8084863254002161, 1.8013694626944405, 1.7939855711800712, 1.7863565172467912, 1.7784504890441895, 1.7702572686331612, 1.76185028893607, 1.7531110899788993, 1.7441626957484655, 1.734863553728376, 1.7252990858895438, 1.7153713021959578, 1.7051924637385778, 1.6947642394474574, 1.6839417048863001, 1.6727569103240967, 1.6613133634839738, 1.6495359284537179, 1.6373958247048515, 1.6250552790505546, 1.6124144281659807, 1.5994198322296143, 1.58635071345738, 1.5727637495313371, 1.5591866970062256, 1.5453798089708601, 1.531482560294015, 1.5173097337995256, 1.5028248173849923, 1.4881513118743896, 1.47347126688276, 1.458773408617292, 1.4439112799508231, 1.4292048726763045, 1.4143226487295968, 1.3992837837764196, 1.3845603125435966, 1.3694047587258475, 1.354485069002424, 1.3394561495099748, 1.3245982101985387, 1.310007197516305, 1.2951153687068395, 1.280733619417463, 1.2662977150508337, 1.2520436559404646, 1.2379650388445174, 1.2241550854274206, 1.2106198923928397, 1.197141170501709, 1.1840205873761858, 1.1714048385620117, 1.1589719227382116, 1.1467146192278181, 1.1347577571868896, 1.1232477256229945, 1.1118297917502267, 1.1007508550371443, 1.0899721213749476, 1.0792064326150077], "val_accuracy": [0.057999998331069946, 0.07599999755620956, 0.10300000011920929, 0.1289999932050705, 0.15566666424274445, 0.1850000023841858, 0.21400000154972076, 0.23399999737739563, 0.2566666603088379, 0.28033334016799927, 0.3019999861717224, 0.3186666667461395, 0.3346666693687439, 0.34966665506362915, 0.3610000014305115, 0.36933332681655884, 0.37566667795181274, 0.382999986410141, 0.38966667652130127, 0.3956666588783264, 0.4013333320617676, 0.4059999883174896, 0.4103333353996277, 0.4156666696071625, 0.4246666729450226, 0.4283333420753479, 0.4346666634082794, 0.4399999976158142, 0.4436666667461395, 0.44966667890548706, 0.45366665720939636, 0.45633333921432495, 0.46166667342185974, 0.4673333466053009, 0.4699999988079071, 0.47333332896232605, 0.4776666760444641, 0.4803333282470703, 0.48533332347869873, 0.4893333315849304, 0.492000013589859, 0.4946666657924652, 0.49900001287460327, 0.5016666650772095, 0.5083333253860474, 0.5130000114440918, 0.5193333625793457, 0.5216666460037231, 0.5246666669845581, 0.531000018119812, 0.531000018119812, 0.5346666574478149, 0.5383333563804626, 0.5406666398048401, 0.5426666736602783, 0.5443333387374878, 0.5473333597183228, 0.5516666769981384, 0.5533333420753479, 0.5543333292007446, 0.5556666851043701, 0.5569999814033508, 0.5580000281333923, 0.5596666932106018, 0.5616666674613953, 0.5630000233650208, 0.5683333277702332, 0.5693333148956299, 0.5743333101272583, 0.5740000009536743, 0.5743333101272583, 0.5756666660308838, 0.5763333439826965, 0.57833331823349, 0.5773333311080933, 0.5799999833106995, 0.5816666483879089, 0.5839999914169312, 0.5860000252723694, 0.5889999866485596, 0.5903333425521851, 0.593666672706604, 0.5926666855812073, 0.5946666598320007, 0.5963333249092102, 0.5993333458900452, 0.6023333072662354, 0.6050000190734863, 0.6083333492279053, 0.6110000014305115, 0.6146666407585144, 0.6173333525657654, 0.6203333139419556, 0.621999979019165, 0.624666690826416, 0.6269999742507935, 0.6303333044052124, 0.6346666812896729, 0.6389999985694885, 0.640333354473114]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 4, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 1, 0, 3, 2, 3, 3, 0], [4, 59, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 8, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.1177142858505249, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(alpha, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.433702081721362, 2.3491860617893465, 2.2643336972634804, 2.304910556908848, 2.303092532705212, 2.303379102043582, 2.3025160944614553, 2.284377679659816, 2.3502153447432965, 2.304404081181607, 2.303594203877679, 2.303047256824945], "accuracy": [0.17817988991737366, 0.14410249888896942, 0.17157575488090515, 0.09919429570436478, 0.1014397069811821, 0.09206181764602661, 0.09932637959718704, 0.15321621298789978, 0.11161009222269058, 0.09642054885625839, 0.09298639744520187, 0.09760929644107819], "val_loss": [1.9730773653302873, 1.9688409396580286, 1.975928783416748, 1.9738262721470423, 1.973599570138114, 1.9734477996826172, 1.9725312505449568, 2.075855391366141, 1.9757894107273646, 1.97422422681536, 1.9739157812935966, 1.9737952096121651], "val_accuracy": [0.10400000214576721, 0.19466666877269745, 0.10400000214576721, 0.0976666659116745, 0.09966666996479034, 0.09966666996479034, 0.25600001215934753, 0.19066666066646576, 0.10400000214576721, 0.09833333641290665, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [1, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [97, 86, 50], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [7, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.1177142858505249, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))))), tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.433702081721362, 2.3491860617893465, 2.2643336972634804, 2.304910556908848, 2.303092532705212, 2.303379102043582, 2.3025160944614553, 2.284377679659816, 2.3502153447432965, 2.304404081181607, 2.303594203877679, 2.303047256824945], "accuracy": [0.17817988991737366, 0.14410249888896942, 0.17157575488090515, 0.09919429570436478, 0.1014397069811821, 0.09206181764602661, 0.09932637959718704, 0.15321621298789978, 0.11161009222269058, 0.09642054885625839, 0.09298639744520187, 0.09760929644107819], "val_loss": [1.9730773653302873, 1.9688409396580286, 1.975928783416748, 1.9738262721470423, 1.973599570138114, 1.9734477996826172, 1.9725312505449568, 2.075855391366141, 1.9757894107273646, 1.97422422681536, 1.9739157812935966, 1.9737952096121651], "val_accuracy": [0.10400000214576721, 0.19466666877269745, 0.10400000214576721, 0.0976666659116745, 0.09966666996479034, 0.09966666996479034, 0.25600001215934753, 0.19066666066646576, 0.10400000214576721, 0.09833333641290665, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [1, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [97, 86, 50], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 8, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [7, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.1177142858505249, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.433702081721362, 2.3491860617893465, 2.2643336972634804, 2.304910556908848, 2.303092532705212, 2.303379102043582, 2.3025160944614553, 2.284377679659816, 2.3502153447432965, 2.304404081181607, 2.303594203877679, 2.303047256824945], "accuracy": [0.17817988991737366, 0.14410249888896942, 0.17157575488090515, 0.09919429570436478, 0.1014397069811821, 0.09206181764602661, 0.09932637959718704, 0.15321621298789978, 0.11161009222269058, 0.09642054885625839, 0.09298639744520187, 0.09760929644107819], "val_loss": [1.9730773653302873, 1.9688409396580286, 1.975928783416748, 1.9738262721470423, 1.973599570138114, 1.9734477996826172, 1.9725312505449568, 2.075855391366141, 1.9757894107273646, 1.97422422681536, 1.9739157812935966, 1.9737952096121651], "val_accuracy": [0.10400000214576721, 0.19466666877269745, 0.10400000214576721, 0.0976666659116745, 0.09966666996479034, 0.09966666996479034, 0.25600001215934753, 0.19066666066646576, 0.10400000214576721, 0.09833333641290665, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [87, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [3, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07792893797159195, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0], [2, 6, 6, 6, 0, 3, 4, 1, 5, 9], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50, 7], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [1, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 4, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(grad, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.square(grad)))), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))))), tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [9, 86, 50, 99, 56, 21, 54], [1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [86, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1], [0, 3, 1, 3, 6, 8, 5], [2, 1, 1, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 8, 4, 4, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.pow(tf.math.add(beta, grad), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))))), tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.subtract(beta, tf.math.multiply(alpha, alpha)), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [1, 1, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [9, 86, 50, 99, 56, 21, 54], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 1, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.subtract(sigma, alpha), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.169736397500996, 253660.7679446748, 2.3072152757814703, 5.904252348654754e+20, 2.3282353695058364, 17.868012902286658], "accuracy": [0.29137498140335083, 0.10130762308835983, 0.09998679161071777, 0.09496764093637466, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.97397552217756, 1.978177888052804, 1.9768310274396623, 1.989675726209368, 2.2368196078709195, 134.93424333844865], "val_accuracy": [0.10233332961797714, 0.09833333641290665, 0.09833333641290665, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [1, 2, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 14, 14, 7, 7, 3, 5, 4, 2, 2, 0, 5, 3, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.negative(tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), grad), tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.add(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), sigma), alpha)", "other_info": {"loss": [2.303288484088906, 2.3029997692352526, 2.303706513703255, 2.3055988123325264, 2.307142017476862, 2.313491607685414], "accuracy": [0.09457138925790787, 0.10051512718200684, 0.09298639744520187, 0.09430722147226334, 0.10249637067317963, 0.10077928751707077], "val_loss": [1.9738191877092635, 1.9740400995526994, 1.9751203400748116, 1.9776599747794015, 1.9814897264753069, 1.9900735446384974], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [9, 9, 6, 6, 0, 3, 4, 1, 5], [2, 0, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [9, 86, 50, 99, 56, 21, 54], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 8, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [71, 78, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07792893797159195, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [1, 1, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [87, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 1, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.multiply(grad, tf.math.pow(tf.math.add(beta, grad), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))))), tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07792893797159195, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [9, 86, 50, 99, 56, 21, 54], [1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [86, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 8, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07792893797159195, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [1, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [9, 86, 50, 99, 56, 21, 54], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 9, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 2, 3, 2, 3, 3, 0], [71, 42, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 3, 3, 1, 2, 0, 6, 6, 4, 2, 2, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, alpha))", "other_info": {"loss": [2.30375821532795, 2.302821268290262, 2.301596033448761, 2.302587377585755, 2.3015664288270523, 2.302094233743015], "accuracy": [0.09074098616838455, 0.08915598690509796, 0.09140139818191528, 0.09206181764602661, 0.09047681838274002, 0.08796724677085876], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [1, 1, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 80, 99, 84, 1, 78], [1, 0, 0, 1, 0], [0, 0, 1], [3, 3, 0], [2, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.30375821532795, 2.302821268290262, 2.301596033448761, 2.302587377585755, 2.3015664288270523, 2.302094233743015], "accuracy": [0.09074098616838455, 0.08915598690509796, 0.09140139818191528, 0.09206181764602661, 0.09047681838274002, 0.08796724677085876], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5, 4, 5, 0], [2, 0, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [89, 86, 50, 37, 67], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 3, 3, 3, 0, 3, 2, 3, 3, 0], [71, 78, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 19, 19, 12, 7, 5, 9, 9, 5, 4, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), grad))), tf.math.add(alpha, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.square(tf.math.negative(grad)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad))))), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.30375821532795, 2.302821268290262, 2.301596033448761, 2.302587377585755, 2.3015664288270523, 2.302094233743015], "accuracy": [0.09074098616838455, 0.08915598690509796, 0.09140139818191528, 0.09206181764602661, 0.09047681838274002, 0.08796724677085876], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [1, 1, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [9, 86, 50, 99, 56, 21, 54], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 0, 3, 4, 1, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [90, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 5, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 1, 1, 0, 0, 0, 0, 5, 3, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.square(sigma), alpha))", "other_info": {"loss": [2.30375821532795, 2.302821268290262, 2.301596033448761, 2.302587377585755, 2.3015664288270523, 2.302094233743015], "accuracy": [0.09074098616838455, 0.08915598690509796, 0.09140139818191528, 0.09206181764602661, 0.09047681838274002, 0.08796724677085876], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]