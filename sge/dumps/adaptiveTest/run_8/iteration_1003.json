[{"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 1, 5, 0, 3, 2, 1, 8, 1, 2, 0, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 2, 2, 2, 0, 2, 0, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 50, 59, 56, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 3, 6, 7, 4], [3, 0, 3, 2, 2, 1, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [49, 9, 61, 71, 34]], "fitness": -0.834857165813446, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.135634422302246, 1.9341535568237305, 1.6015453338623047, 1.0804823637008667, 0.9601027965545654, 0.8098958730697632, 0.7251572012901306, 0.6810616850852966, 0.640326201915741, 0.6227269172668457, 0.6066153049468994, 0.5317414999008179, 0.5837695002555847, 0.5306883454322815, 0.5237961411476135, 0.4977579712867737, 0.49968382716178894, 0.505226731300354, 0.49714842438697815, 0.49615082144737244, 0.4444195628166199, 0.4447733759880066, 0.44022345542907715, 0.4521723985671997, 0.45527052879333496, 0.41055208444595337, 0.4079374074935913, 0.39415618777275085, 0.3867384195327759, 0.39842766523361206, 0.36949631571769714], "accuracy": [0.29863953590393066, 0.36586976051330566, 0.4690265357494354, 0.5927882790565491, 0.6413947939872742, 0.6940959095954895, 0.7312111854553223, 0.7466648817062378, 0.7582882046699524, 0.7606657147407532, 0.7746664881706238, 0.8074230551719666, 0.7783648371696472, 0.8020076751708984, 0.8096684813499451, 0.8142913579940796, 0.8170651197433472, 0.816008448600769, 0.8181217908859253, 0.817989706993103, 0.8380662798881531, 0.8367455005645752, 0.8392550349235535, 0.8334434032440186, 0.8356888294219971, 0.8481045961380005, 0.8570862412452698, 0.8558974862098694, 0.8613129258155823, 0.8565579056739807, 0.8643507957458496], "val_loss": [1.6753129959106445, 1.899470329284668, 1.0625156164169312, 1.082561731338501, 0.8101136684417725, 0.6452236175537109, 0.6252688765525818, 0.591111958026886, 0.5452769994735718, 0.6048414707183838, 0.4900752305984497, 0.5471298098564148, 0.4962703585624695, 0.4691648781299591, 0.45941421389579773, 0.45138615369796753, 0.43090662360191345, 0.4675447642803192, 0.46589818596839905, 0.43795880675315857, 0.4214444160461426, 0.49810779094696045, 0.5146293044090271, 0.47827795147895813, 0.4137154519557953, 0.39454296231269836, 0.3890237510204315, 0.41791999340057373, 0.47933822870254517, 0.39249885082244873, 0.44865283370018005], "val_accuracy": [0.4749999940395355, 0.3840000033378601, 0.612666666507721, 0.574999988079071, 0.6746666431427002, 0.7559999823570251, 0.7456666827201843, 0.7663333415985107, 0.7833333611488342, 0.7636666893959045, 0.8206666707992554, 0.7963333129882812, 0.7996666431427002, 0.8289999961853027, 0.8253333568572998, 0.8309999704360962, 0.8410000205039978, 0.8259999752044678, 0.8333333134651184, 0.8366666436195374, 0.8519999980926514, 0.8316666483879089, 0.809333324432373, 0.831333339214325, 0.8493333458900452, 0.8583333492279053, 0.8569999933242798, 0.8503333330154419, 0.815666675567627, 0.8543333411216736, 0.8266666531562805]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 1, 5, 0, 3, 2, 1, 8, 1, 2, 0, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 2, 2, 2, 0, 2, 0, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 50, 59, 56, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 3, 6, 7, 4], [3, 0, 3, 2, 2, 1, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [49, 9, 61, 71, 34]], "fitness": -0.8199999928474426, "mapping_values": [1, 7, 7, 4, 3, 1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.subtract(tf.math.square(tf.math.negative(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1355957984924316, 1.9532443284988403, 1.8625926971435547, 1.4913978576660156, 1.045528531074524, 0.881671130657196, 0.7767375707626343, 0.722205638885498, 0.6745517253875732, 0.6301480531692505, 0.6176114678382874, 0.5695141553878784, 0.5565573573112488, 0.5592480897903442, 0.5259667038917542, 0.5211282968521118, 0.5103874802589417, 0.505771815776825, 0.4979012608528137, 0.492118239402771, 0.4782392382621765, 0.4528960883617401, 0.4491134583950043], "accuracy": [0.2989037036895752, 0.3609826862812042, 0.37524765729904175, 0.4934619069099426, 0.6140536069869995, 0.6754721999168396, 0.7061154246330261, 0.7283053994178772, 0.7432307600975037, 0.7564390301704407, 0.7697794437408447, 0.7857614755630493, 0.7923656105995178, 0.7901201844215393, 0.8115176558494568, 0.8039889335632324, 0.8058380484580994, 0.8133667707443237, 0.8214238286018372, 0.817461371421814, 0.8265751004219055, 0.8321225643157959, 0.8378021121025085], "val_loss": [1.6727749109268188, 2.0002121925354004, 1.43693208694458, 1.085719347000122, 0.7265985608100891, 0.7334059476852417, 0.6503381133079529, 0.6158447861671448, 0.5953467488288879, 0.6080796718597412, 0.5247673988342285, 0.521379828453064, 0.5057717561721802, 0.4665523171424866, 0.4807232618331909, 0.4482691287994385, 0.4516203701496124, 0.45044171810150146, 0.5010743737220764, 0.5244934558868408, 0.4971690773963928, 0.47792020440101624, 0.4772324562072754], "val_accuracy": [0.4763333201408386, 0.39633333683013916, 0.5170000195503235, 0.6086666584014893, 0.7200000286102295, 0.7319999933242798, 0.7276666760444641, 0.7713333368301392, 0.7513333559036255, 0.7583333253860474, 0.7956666946411133, 0.8043333292007446, 0.8056666851043701, 0.8373333215713501, 0.8236666917800903, 0.8360000252723694, 0.8323333263397217, 0.8403333425521851, 0.8196666836738586, 0.8036666512489319, 0.7979999780654907, 0.828000009059906, 0.8216666579246521]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 1, 5, 0, 3, 2, 1, 8, 1, 2, 0, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 2, 2, 2, 0, 2, 0, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 50, 59, 56, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 3, 6, 7, 4], [3, 0, 3, 2, 2, 1, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [49, 9, 61, 71, 34]], "fitness": -0.8140000104904175, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1354641914367676, 1.9552336931228638, 1.8949856758117676, 1.236517071723938, 0.9758173823356628, 0.8733060956001282, 0.7251622080802917, 0.6753507256507874, 0.6539697647094727, 0.6339063048362732, 0.6010640859603882, 0.5726357102394104, 0.5565025210380554, 0.5461364388465881, 0.5223131775856018, 0.5212621688842773, 0.4953422248363495, 0.515246570110321, 0.48870939016342163, 0.4758073389530182, 0.4427791237831116, 0.45073801279067993, 0.457393616437912, 0.4243922531604767, 0.4576958119869232, 0.4115118682384491, 0.4211568832397461, 0.39858338236808777, 0.40206998586654663, 0.39965978264808655, 0.37813007831573486, 0.3985787034034729], "accuracy": [0.29877161979675293, 0.3611147701740265, 0.39506009221076965, 0.5600317120552063, 0.648659348487854, 0.674679696559906, 0.7279091477394104, 0.746268630027771, 0.7506273984909058, 0.7621186375617981, 0.7758552432060242, 0.7897239327430725, 0.7917051911354065, 0.7932901978492737, 0.8068947196006775, 0.8059701323509216, 0.8153480291366577, 0.8072909712791443, 0.822348415851593, 0.8234050869941711, 0.8383304476737976, 0.828820526599884, 0.8354246616363525, 0.8417646288871765, 0.8293488025665283, 0.8462554216384888, 0.8469158411026001, 0.8562937378883362, 0.8525954484939575, 0.8496896028518677, 0.8593316674232483, 0.8487650156021118], "val_loss": [1.673154592514038, 1.9905047416687012, 1.1695146560668945, 0.9483916163444519, 0.8619574904441833, 0.6363471746444702, 0.5968266725540161, 0.557012677192688, 0.6256552934646606, 0.5552748441696167, 0.5126258730888367, 0.5065838098526001, 0.4836605489253998, 0.4693591296672821, 0.49671459197998047, 0.4656228721141815, 0.4391409158706665, 0.45037147402763367, 0.4438685178756714, 0.437534898519516, 0.4278580844402313, 0.5183840394020081, 0.42341381311416626, 0.4060552716255188, 0.41297924518585205, 0.4118761122226715, 0.3998814821243286, 0.45543721318244934, 0.41594308614730835, 0.40260523557662964, 0.4498288929462433, 0.40842685103416443], "val_accuracy": [0.47600001096725464, 0.38066667318344116, 0.6296666860580444, 0.6759999990463257, 0.6803333163261414, 0.7593333125114441, 0.7753333449363708, 0.7823333144187927, 0.7506666779518127, 0.7886666655540466, 0.8013333082199097, 0.809333324432373, 0.8143333196640015, 0.8276666402816772, 0.7983333468437195, 0.8196666836738586, 0.8326666951179504, 0.8306666612625122, 0.8413333296775818, 0.8389999866485596, 0.8456666469573975, 0.8193333148956299, 0.8450000286102295, 0.8569999933242798, 0.8420000076293945, 0.8483333587646484, 0.8573333621025085, 0.8336666822433472, 0.8483333587646484, 0.8536666631698608, 0.8289999961853027, 0.8493333458900452]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 1, 5, 0, 3, 2, 1, 8, 1, 2, 0, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 2, 2, 2, 0, 2, 0, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 50, 59, 56, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 3, 6, 7, 4], [3, 0, 3, 2, 2, 1, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [49, 9, 61, 71, 34]], "fitness": -0.8108571171760559, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.135678768157959, 1.9322762489318848, 1.5629119873046875, 1.1018885374069214, 0.847267210483551, 0.7560083270072937, 0.7279337048530579, 0.6425116062164307, 0.6385329365730286, 0.6157463788986206, 0.5934115648269653, 0.5783559679985046, 0.575212836265564, 0.5301699638366699, 0.4932096004486084, 0.518758237361908, 0.5226238369941711, 0.5029840469360352, 0.4876302182674408, 0.48097893595695496, 0.44701868295669556, 0.4372101128101349, 0.45548683404922485, 0.41058433055877686, 0.46429991722106934, 0.4069262146949768, 0.4147129952907562, 0.38408246636390686, 0.394626647233963, 0.3874646723270416, 0.3725831210613251, 0.38985928893089294, 0.3584758937358856, 0.34890714287757874, 0.34733784198760986, 0.36365121603012085, 0.3588637411594391, 0.3375398814678192, 0.32439908385276794, 0.3250807523727417, 0.3238911032676697], "accuracy": [0.29863953590393066, 0.36560559272766113, 0.48448026180267334, 0.6061286330223083, 0.6723021864891052, 0.7108704447746277, 0.7186633348464966, 0.7567031979560852, 0.7609298825263977, 0.7664773464202881, 0.778232753276825, 0.7814027070999146, 0.7869502305984497, 0.8021397590637207, 0.8265751004219055, 0.8098005652427673, 0.8057059645652771, 0.8142913579940796, 0.8277638554573059, 0.8257825970649719, 0.8356888294219971, 0.8405758738517761, 0.8354246616363525, 0.8529917001724243, 0.832650899887085, 0.8514066934585571, 0.8533879518508911, 0.863558292388916, 0.856689989566803, 0.863029956817627, 0.8660678863525391, 0.8602562546730042, 0.8708229064941406, 0.8705587387084961, 0.8766345381736755, 0.8696341514587402, 0.8706908226013184, 0.8747853636741638, 0.8825782537460327, 0.8821820020675659, 0.8864086866378784], "val_loss": [1.6779178380966187, 1.902345895767212, 1.111630916595459, 0.7892007827758789, 0.7271143198013306, 0.620714545249939, 0.5931373834609985, 0.5625529289245605, 0.6802827715873718, 0.562236487865448, 0.5203009247779846, 0.5072759389877319, 0.493622750043869, 0.47080329060554504, 0.5240097641944885, 0.4553225636482239, 0.4361218810081482, 0.48458415269851685, 0.44047847390174866, 0.43649744987487793, 0.41095060110092163, 0.5179942846298218, 0.4083741009235382, 0.48609378933906555, 0.40454256534576416, 0.41270846128463745, 0.38381749391555786, 0.44490331411361694, 0.48051732778549194, 0.38340047001838684, 0.43447181582450867, 0.4042876660823822, 0.3728155195713043, 0.3667697608470917, 0.4145697355270386, 0.36470669507980347, 0.3936275541782379, 0.4015646278858185, 0.39532941579818726, 0.3777637183666229, 0.3759579360485077], "val_accuracy": [0.47466665506362915, 0.3866666555404663, 0.5879999995231628, 0.7093333601951599, 0.7126666903495789, 0.7593333125114441, 0.7723333239555359, 0.7836666703224182, 0.7253333330154419, 0.7796666622161865, 0.7986666560173035, 0.8149999976158142, 0.8053333163261414, 0.8316666483879089, 0.8069999814033508, 0.8309999704360962, 0.831333339214325, 0.8143333196640015, 0.8376666903495789, 0.8339999914169312, 0.8536666631698608, 0.8216666579246521, 0.8463333249092102, 0.8263333439826965, 0.8539999723434448, 0.8553333282470703, 0.859000027179718, 0.8386666774749756, 0.8080000281333923, 0.859666645526886, 0.8416666388511658, 0.8496666550636292, 0.8616666793823242, 0.8640000224113464, 0.8516666889190674, 0.8659999966621399, 0.8586666584014893, 0.8603333234786987, 0.8503333330154419, 0.8550000190734863, 0.8576666712760925]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 1, 5, 0, 3, 2, 1, 8, 1, 2, 0, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 3, 2, 2, 0, 2, 0, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [17, 50, 59, 56, 8, 79, 86, 52, 44], [1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 3, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [7, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], [0, 3, 3, 6, 7, 4], [3, 0, 3, 2, 2, 1, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [49, 9, 61, 71, 34]], "fitness": -0.3662857115268707, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [4.289089679718018, 2.3088128566741943, 2.3042941093444824, 2.30305552482605, 2.3024978637695312, 2.2991044521331787, 2.2150330543518066, 2.4280436038970947, 2.2739861011505127, 2.2761034965515137, 2.424832820892334, 2.303846597671509, 2.303497314453125, 2.3035240173339844, 2.303154945373535], "accuracy": [0.1806894689798355, 0.09576013684272766, 0.09813763201236725, 0.10210011899471283, 0.1010434553027153, 0.11359133571386337, 0.20155857503414154, 0.1624620258808136, 0.1320829540491104, 0.1450270712375641, 0.11847840249538422, 0.0956280529499054, 0.09087307006120682, 0.09430722147226334, 0.09826971590518951], "val_loss": [2.3106753826141357, 2.303663969039917, 2.3026769161224365, 2.3021557331085205, 2.3011999130249023, 2.281940460205078, 1.859675407409668, 2.2787811756134033, 2.3019134998321533, 2.1274778842926025, 2.303508996963501, 2.302821397781372, 2.302778720855713, 2.3027546405792236, 2.3026788234710693], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.09933333098888397, 0.09933333098888397, 0.09566666930913925, 0.19833333790302277, 0.2626666724681854, 0.10999999940395355, 0.10100000351667404, 0.3656666576862335, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.10000000149011612, 0.10166666656732559]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 1, 5, 0, 3, 2, 1, 8, 1, 2, 0, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 3, 2, 2, 0, 2, 0, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 50, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [8, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 3, 6, 7, 4], [1, 0, 3, 2, 2, 1, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [49, 9, 61, 71, 34]], "fitness": -0.3082857131958008, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [4.285082817077637, 2.7272017002105713, 2.3056132793426514, 2.3035244941711426, 2.3023200035095215, 2.2813594341278076, 2.626060724258423, 2.3044822216033936, 2.304330348968506, 2.303572416305542, 2.303196430206299], "accuracy": [0.1732928305864334, 0.19535067677497864, 0.09787346422672272, 0.09694888442754745, 0.09893012791872025, 0.14410249888896942, 0.18240654468536377, 0.09721305221319199, 0.09972262382507324, 0.09840179979801178, 0.10447761416435242], "val_loss": [2.2658002376556396, 2.3077049255371094, 2.3033578395843506, 2.302478790283203, 2.3007683753967285, 2.112602472305298, 2.304344654083252, 2.3028714656829834, 2.3027634620666504, 2.302647352218628, 2.302748680114746], "val_accuracy": [0.19366666674613953, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.14300000667572021, 0.27433332800865173, 0.10466666519641876, 0.09799999743700027, 0.10000000149011612, 0.1003333330154419, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [6, 9, 5, 6, 5, 2, 1, 8, 1, 2, 0, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 3, 2, 2, 0, 2, 0, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 50, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [1, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 3, 6, 7, 4], [1, 0, 3, 2, 2, 1, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [94, 9, 61, 71, 34]], "fitness": -0.162285715341568, "mapping_values": [1, 6, 6, 4, 2, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.divide_no_nan(alpha, tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.subtract(grad, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [4.2930121421813965, 2.7888295650482178, 2.3062808513641357, 2.3037641048431396, 2.302873373031616, 2.302553176879883], "accuracy": [0.1732928305864334, 0.17791573703289032, 0.09893012791872025, 0.09932637959718704, 0.10038304328918457, 0.1014397069811821], "val_loss": [2.298332452774048, 2.3093700408935547, 2.304191827774048, 2.302777051925659, 2.3025083541870117, 2.301640033721924], "val_accuracy": [0.11800000071525574, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 5, 5, 6, 3, 2, 1, 8, 1, 2, 0, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 0, 1, 2, 0, 2, 0, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 50, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [1, 4, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 8, 3, 6, 7, 4], [1, 0, 3, 2, 2, 1, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [49, 9, 61, 71, 34]], "fitness": -0.15228570997714996, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [4.283509254455566, 2.8101556301116943, 2.3051815032958984, 2.303403615951538, 2.302469491958618, 2.301743745803833], "accuracy": [0.1744815707206726, 0.1212521493434906, 0.09377889335155487, 0.09879804402589798, 0.1014397069811821, 0.10632677376270294], "val_loss": [2.2279794216156006, 2.306392192840576, 2.3033204078674316, 2.3023359775543213, 2.301760196685791, 2.3001692295074463], "val_accuracy": [0.21933333575725555, 0.09966666996479034, 0.09966666996479034, 0.10199999809265137, 0.10899999737739563, 0.1263333261013031]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 6, 5, 6, 3, 2, 1, 8, 1, 2, 0, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 3, 2, 2, 0, 2, 0, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 50, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [1, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [9, 3, 3, 6, 7, 4], [3, 0, 3, 2, 2, 1, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [49, 9, 61, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.divide_no_nan(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(grad, tf.math.square(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302067756652832, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 5, 5, 6, 3, 2, 1, 8, 1, 2, 0, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 3, 2, 2, 0, 2, 0, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 50, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 3, 6, 7, 4], [3, 0, 3, 2, 2, 1, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [12, 9, 61, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)))), grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07951393723487854, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 1, 5, 0, 3, 2, 1, 8, 1, 2, 0, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 2, 2, 2, 0, 2, 0, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 50, 59, 56, 8, 79, 86, 52, 44], [1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [1, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [1, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 3, 6, 7, 4], [3, 0, 3, 2, 2, 1, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [49, 9, 61, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07370228320360184, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 1, 5, 0, 3, 2, 1, 8, 1, 2, 0, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 3, 2, 2, 0, 2, 0, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [17, 50, 59, 56, 8, 79, 86, 52, 44], [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 3, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [0, 3, 3, 7, 7, 4], [3, 0, 3, 2, 2, 1, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [49, 9, 61, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 12, 6, 6, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.add(sigma, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, beta)), tf.math.pow(beta, alpha)))", "other_info": {"loss": [3.170848846435547, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.26244881749153137, 0.10342095047235489, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1539913.0, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 1, 5, 0, 3, 2, 1, 8, 1, 2, 0, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 2, 2, 2, 0, 2, 0, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 50, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [5, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 3, 3, 6, 7, 4, 5, 0, 1, 1, 7, 7, 0, 3, 9, 4, 6, 0, 1, 5, 0, 8, 9], [3, 0, 3, 2, 2, 1, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [49, 9, 61, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 5, 4, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 36, 23, 13, 4], "tree_depth": 33, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.subtract(tf.math.square(tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(sigma, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(tf.math.pow(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), sigma), tf.math.square(beta)), beta), tf.math.negative(tf.math.subtract(tf.math.subtract(alpha, alpha), tf.math.add(tf.math.add(tf.math.negative(tf.math.multiply(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.divide_no_nan(alpha, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.subtract(tf.math.square(tf.math.negative(tf.math.sqrt(sigma))), beta))))), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), beta))))), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 5, 5, 6, 3, 2, 1, 8, 1, 2, 0, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 2, 2, 2, 0, 2, 0, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 50, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [1, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [7, 3, 3, 6, 7, 4], [3, 0, 3, 2, 2, 1, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [49, 9, 61, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07951393723487854, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 5, 5, 6, 3, 2, 1, 8, 1, 2, 0, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 2, 2, 2, 0, 2, 0, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 50, 59, 56, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [1, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [4, 3, 3, 6, 7, 4], [3, 0, 3, 2, 2, 1, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [49, 9, 61, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 23, 14, 9, 4, 3, 3, 2, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, grad), grad), tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), grad)), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(sigma, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.302067756652832, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 1, 5, 0, 3, 2, 1, 8, 1, 2, 0, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 0, 1, 2, 0, 2, 0, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 50, 59, 56, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 8, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [5, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 3, 6, 7, 4, 5, 8], [3, 1, 3, 2, 2, 1, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [49, 9, 61, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 2, 2, 1, 1, 0, 3, 2, 1, 1, 0, 14, 8, 6, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.subtract(tf.math.square(tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(sigma, tf.math.add(tf.math.pow(alpha, sigma), tf.math.square(beta))), tf.math.sqrt(beta)), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [9, 1, 5, 0, 3, 2, 1, 8, 1, 2, 0, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 3, 2, 2, 0, 2, 0, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 50, 59, 56, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [1, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [1, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 5, 3, 6, 7, 4], [3, 0, 3, 2, 2, 1, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [49, 9, 61, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07951393723487854, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 1, 5, 0, 3, 2, 1, 8, 1, 2, 0, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 3, 2, 2, 0, 2, 0, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 50, 59, 56, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [1, 2, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [7, 3], [], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 3, 3, 6, 7, 7, 9, 2, 1, 1, 7, 6, 4, 8, 9], [0, 0, 3, 3, 1, 1, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [49, 9, 61, 71, 34]], "fitness": -0.09942857176065445, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 25, 15, 10, 5], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(sigma, tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.math.subtract(tf.math.subtract(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.pow(tf.math.sqrt(alpha), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), alpha), alpha)), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))))), sigma)))", "other_info": {"loss": [373507840.0, 420961536.0, 437055872.0, 425814144.0, 431190144.0, 448784224.0], "accuracy": [0.08968432247638702, 0.09113723784685135, 0.09245806187391281, 0.09272222965955734, 0.09681680053472519, 0.0866464152932167], "val_loss": [279581216.0, 280822496.0, 282175616.0, 283662272.0, 285299968.0, 287114048.0], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 1, 5, 0, 3, 2, 1, 8, 1, 2, 0, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 3, 2, 2, 0, 2, 0, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 50, 59, 56, 8, 79, 86, 52, 44], [1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [1, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [7, 3], [], [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1], [0, 3, 3, 6, 7, 4], [3, 3, 3, 2, 2, 1, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [61, 9, 61, 71, 34]], "fitness": -0.05342857167124748, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 6, 3, 3, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.square(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(sigma, sigma), sigma))", "other_info": {"loss": [2.302570343017578, 2.3037257194519043, 2.301927089691162, 2.3012800216674805, 2.3030660152435303, 2.302475690841675, 2.3028688430786133, 2.3021557331085205, 2.3011598587036133, 2.3017749786376953, 2.301483631134033, 2.301344633102417, 2.301149606704712, 2.300598382949829, 2.3001115322113037, 2.2999045848846436, 2.3011293411254883, 2.3002617359161377, 2.3028242588043213, 2.30088210105896, 2.300776243209839, 2.300274610519409, 2.2994332313537598, 2.30146861076355, 2.3014309406280518, 2.2993621826171875, 2.30176043510437, 2.299488067626953, 2.301862955093384, 2.2997636795043945, 2.2993223667144775, 2.3006958961486816, 2.2989039421081543, 2.299053907394409, 2.299272060394287, 2.29986572265625, 2.300050735473633, 2.2992777824401855, 2.2992963790893555, 2.2990362644195557, 2.2995831966400146, 2.299591541290283, 2.2986276149749756, 2.2982773780822754, 2.2983624935150146, 2.2975571155548096, 2.2982187271118164, 2.299698829650879, 2.2989237308502197, 2.296734094619751, 2.2995762825012207, 2.2980008125305176, 2.299612522125244, 2.29860520362854, 2.299947500228882, 2.2990996837615967, 2.2978875637054443, 2.298279047012329, 2.2985422611236572, 2.29794979095459, 2.297290802001953, 2.298892021179199, 2.299211263656616, 2.2987358570098877, 2.2978572845458984, 2.2985928058624268, 2.298269271850586, 2.2963240146636963, 2.2981693744659424, 2.2969579696655273, 2.2959280014038086, 2.2968618869781494, 2.2978439331054688, 2.2987120151519775, 2.2969534397125244, 2.2974774837493896, 2.298276424407959, 2.2969629764556885, 2.298144817352295, 2.2979631423950195, 2.2969932556152344, 2.295708179473877, 2.296544075012207, 2.297227144241333, 2.297102212905884, 2.297086477279663, 2.2954342365264893, 2.2964749336242676, 2.296265125274658, 2.297508955001831, 2.2957775592803955, 2.2954370975494385, 2.296506881713867, 2.2955477237701416, 2.29632830619812, 2.295210123062134, 2.2956230640411377, 2.294447898864746, 2.2959389686584473, 2.296107292175293], "accuracy": [0.09232597798109055, 0.09417514503002167, 0.09417514503002167, 0.09259014576673508, 0.09470347315073013, 0.09100515395402908, 0.09457138925790787, 0.09126931428909302, 0.09417514503002167, 0.09008057415485382, 0.08849557489156723, 0.08928807079792023, 0.09140139818191528, 0.09232597798109055, 0.09628847241401672, 0.0956280529499054, 0.09087307006120682, 0.09140139818191528, 0.09021265059709549, 0.09760929644107819, 0.09259014576673508, 0.09457138925790787, 0.09760929644107819, 0.0870426595211029, 0.09602430462837219, 0.09945846349000931, 0.08968432247638702, 0.09576013684272766, 0.08717474341392517, 0.0952318087220192, 0.0952318087220192, 0.09615638852119446, 0.09959053993225098, 0.09694888442754745, 0.10051512718200684, 0.09457138925790787, 0.09496764093637466, 0.09391097724437714, 0.09694888442754745, 0.09708096832036972, 0.09298639744520187, 0.09668471664190292, 0.09906221181154251, 0.10170386731624603, 0.09998679161071777, 0.1002509593963623, 0.10249637067317963, 0.09760929644107819, 0.09708096832036972, 0.10500594228506088, 0.09919429570436478, 0.09602430462837219, 0.09813763201236725, 0.09615638852119446, 0.09866596013307571, 0.09219389408826828, 0.09972262382507324, 0.09985470771789551, 0.10157178342342377, 0.09615638852119446, 0.10500594228506088, 0.09879804402589798, 0.09800554811954498, 0.09734513610601425, 0.10540219396352768, 0.1022322028875351, 0.10632677376270294, 0.10394927859306335, 0.10474177449941635, 0.10408136248588562, 0.10342095047235489, 0.09972262382507324, 0.10170386731624603, 0.09628847241401672, 0.10368511080741882, 0.10276053100824356, 0.09787346422672272, 0.10619468986988068, 0.10474177449941635, 0.10302469879388809, 0.09840179979801178, 0.10249637067317963, 0.10236428678035736, 0.10474177449941635, 0.10236428678035736, 0.10751552134752274, 0.10672302544116974, 0.10342095047235489, 0.10527011007070541, 0.10447761416435242, 0.1088363528251648, 0.11227050423622131, 0.10738343745470047, 0.10632677376270294, 0.10632677376270294, 0.11174217611551285, 0.10830801725387573, 0.107647605240345, 0.10711926966905594, 0.10368511080741882], "val_loss": [2.2986791133880615, 2.2985949516296387, 2.2984821796417236, 2.298384428024292, 2.298278331756592, 2.2981903553009033, 2.2980968952178955, 2.298003911972046, 2.2979114055633545, 2.2978293895721436, 2.2977426052093506, 2.297647714614868, 2.2975564002990723, 2.297471761703491, 2.297391176223755, 2.297300338745117, 2.297211170196533, 2.2971181869506836, 2.2970333099365234, 2.2969512939453125, 2.296884536743164, 2.296799421310425, 2.296722412109375, 2.296638250350952, 2.2965593338012695, 2.296473741531372, 2.2963931560516357, 2.296316385269165, 2.2962429523468018, 2.296175241470337, 2.2961041927337646, 2.296027660369873, 2.295961380004883, 2.2958920001983643, 2.295820713043213, 2.295750379562378, 2.2956671714782715, 2.295605421066284, 2.295539617538452, 2.2954766750335693, 2.2954139709472656, 2.2953388690948486, 2.295266628265381, 2.295201539993286, 2.295130491256714, 2.2950663566589355, 2.295006275177002, 2.2949399948120117, 2.2948782444000244, 2.2948129177093506, 2.294752836227417, 2.2946906089782715, 2.2946269512176514, 2.2945637702941895, 2.294501543045044, 2.2944376468658447, 2.2943735122680664, 2.294309139251709, 2.294252872467041, 2.2941935062408447, 2.2941370010375977, 2.294076919555664, 2.2940165996551514, 2.2939562797546387, 2.293905019760132, 2.2938425540924072, 2.293778657913208, 2.2937216758728027, 2.2936627864837646, 2.293604850769043, 2.293545722961426, 2.2934885025024414, 2.293426036834717, 2.2933597564697266, 2.2933003902435303, 2.2932422161102295, 2.293182849884033, 2.293125867843628, 2.2930660247802734, 2.2930045127868652, 2.292955160140991, 2.292902946472168, 2.2928459644317627, 2.2927849292755127, 2.292722702026367, 2.292664051055908, 2.292607069015503, 2.2925565242767334, 2.2924981117248535, 2.292442560195923, 2.2923924922943115, 2.292337656021118, 2.2922773361206055, 2.292224884033203, 2.2921719551086426, 2.292117118835449, 2.292065143585205, 2.2920095920562744, 2.291957139968872, 2.2919087409973145], "val_accuracy": [0.039000000804662704, 0.03933333232998848, 0.03966666758060455, 0.03966666758060455, 0.0403333343565464, 0.04066666588187218, 0.041333332657814026, 0.041999999433755875, 0.04233333468437195, 0.04233333468437195, 0.0430000014603138, 0.04333333298563957, 0.04333333298563957, 0.04399999976158142, 0.04399999976158142, 0.04466666653752327, 0.04500000178813934, 0.04533333331346512, 0.04600000008940697, 0.046666666865348816, 0.04699999839067459, 0.047333333641290665, 0.04800000041723251, 0.04866666719317436, 0.04899999871850014, 0.05000000074505806, 0.050333332270383835, 0.05133333429694176, 0.05166666582226753, 0.05166666582226753, 0.05233333259820938, 0.052666667848825455, 0.05299999937415123, 0.05366666615009308, 0.054666668176651, 0.054999999701976776, 0.05533333495259285, 0.0560000017285347, 0.0560000017285347, 0.0560000017285347, 0.056333333253860474, 0.05666666850447655, 0.05700000002980232, 0.05700000002980232, 0.05766666680574417, 0.05766666680574417, 0.05766666680574417, 0.05766666680574417, 0.05766666680574417, 0.058666665107011795, 0.058666665107011795, 0.05900000035762787, 0.059333331882953644, 0.05966666713356972, 0.060333333909511566, 0.06066666543483734, 0.061666667461395264, 0.06199999898672104, 0.06199999898672104, 0.06300000101327896, 0.06366666406393051, 0.06466666609048843, 0.06533333659172058, 0.06566666811704636, 0.06566666811704636, 0.0663333311676979, 0.06700000166893005, 0.06733333319425583, 0.0676666647195816, 0.0676666647195816, 0.06800000369548798, 0.06800000369548798, 0.06800000369548798, 0.06800000369548798, 0.06833333522081375, 0.06866666674613953, 0.0689999982714653, 0.06933332979679108, 0.06966666877269745, 0.07000000029802322, 0.070333331823349, 0.07100000232458115, 0.07133333384990692, 0.07199999690055847, 0.07333333045244217, 0.07333333045244217, 0.07366666942834854, 0.07400000095367432, 0.07400000095367432, 0.07433333247900009, 0.07533333450555801, 0.07533333450555801, 0.07500000298023224, 0.07599999755620956, 0.07633333653211594, 0.07599999755620956, 0.07633333653211594, 0.07633333653211594, 0.07699999958276749, 0.07699999958276749]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 5, 5, 6, 3, 2, 1, 8, 1, 2, 0, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 3, 2, 2, 0, 2, 0, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 50, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [1, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [3, 0, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [1, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 3, 3, 6, 7, 4], [3, 0, 3, 2, 2, 1, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [98, 9, 61, 71, 34]], "fitness": -0.03857142850756645, "mapping_values": [1, 5, 5, 3, 2, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.math.square(alpha))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.subtract(grad, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(sigma, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.302605152130127, 2.303839683532715, 2.3021440505981445, 2.30159330368042, 2.3034958839416504, 2.302978992462158], "accuracy": [0.09245806187391281, 0.0936468094587326, 0.09351472556591034, 0.09179764986038208, 0.09338264167308807, 0.09034473448991776], "val_loss": [2.298774480819702, 2.298774480819702, 2.298774480819702, 2.298774480819702, 2.298774480819702, 2.298774480819702], "val_accuracy": [0.039000000804662704, 0.039000000804662704, 0.039000000804662704, 0.039000000804662704, 0.039000000804662704, 0.039000000804662704]}}]