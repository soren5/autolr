[{"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.7960000038146973, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 6, 6, 2, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(grad, tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta))), tf.math.add(beta, tf.math.pow(tf.math.negative(grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.234536560660954, 1.8437215783702794, 1.3231067497653732, 1.102866841502524, 0.9821218019463304, 0.905667546780795, 0.8606866665205164, 0.8406424005553392, 0.7927265820911359, 0.7787218162365058, 0.7563085479507073, 0.7331244449463692, 0.7183313691904202, 0.7057048486302857, 0.6963056312607516, 0.6830146266185628, 0.668863892452891, 0.6691930848436427, 0.6486754279173818, 0.650867253569501, 0.6472326529229149, 0.6340176513748965, 0.6332128419852165, 0.6189938561397694, 0.613482414605422, 0.6122558696190317, 0.6035492487272425, 0.6030997626061264, 0.602270261958889, 0.5906352615942179, 0.5986371119229266, 0.578503079630711, 0.5821612865980574, 0.5782399102681348, 0.5742800618757928, 0.5645434264304726, 0.5587167514392398, 0.5675620981856833, 0.5575653152805293, 0.5568351432820825, 0.5506082482152784], "accuracy": [0.23682472109794617, 0.4501386880874634, 0.5518425703048706, 0.615770697593689, 0.648659348487854, 0.68101966381073, 0.6901333928108215, 0.6921146512031555, 0.709549605846405, 0.7104741930961609, 0.724210798740387, 0.7285695672035217, 0.7401928305625916, 0.7380794882774353, 0.7391361594200134, 0.7432307600975037, 0.7493065595626831, 0.748778223991394, 0.7621186375617981, 0.7560427784919739, 0.7548540234565735, 0.7617223858833313, 0.7660810947418213, 0.7687227725982666, 0.7753269076347351, 0.7741381525993347, 0.7718927264213562, 0.7810064554214478, 0.7803460359573364, 0.7794214487075806, 0.7757231593132019, 0.7884030938148499, 0.7839123010635376, 0.785101056098938, 0.780610203742981, 0.7922335267066956, 0.7905164361000061, 0.7895918488502502, 0.7954035401344299, 0.7957997918128967, 0.7968564033508301], "val_loss": [1.7719144821166992, 1.136526141847883, 0.8379259279796055, 0.7380995580128261, 0.6706230640411377, 0.6088971410478864, 0.6091718333108085, 0.6003806931631905, 0.5557018348148891, 0.5623637437820435, 0.5401622908455985, 0.5341158424104963, 0.5325730017253331, 0.5167022092001778, 0.523090056010655, 0.504199743270874, 0.4952211720602853, 0.48938184125082834, 0.49026845182691303, 0.5002685955592564, 0.49448130811963764, 0.47682969910757883, 0.47742182867867605, 0.49042597838810514, 0.46998129572187153, 0.4799649715423584, 0.4554821423121861, 0.45987280777522493, 0.4498125910758972, 0.4457619530814035, 0.4582104001726423, 0.4489147663116455, 0.4531709466661726, 0.43641414812632967, 0.4307969978877476, 0.4340508495058332, 0.44348734617233276, 0.430919417313167, 0.4330633878707886, 0.43530166149139404, 0.4267636111804417], "val_accuracy": [0.503000020980835, 0.6453333497047424, 0.6710000038146973, 0.6850000023841858, 0.7096666693687439, 0.7456666827201843, 0.7356666922569275, 0.734000027179718, 0.7593333125114441, 0.7549999952316284, 0.7593333125114441, 0.7706666588783264, 0.7566666603088379, 0.765333354473114, 0.7706666588783264, 0.7786666750907898, 0.7786666750907898, 0.7929999828338623, 0.7796666622161865, 0.768666684627533, 0.7806666493415833, 0.7913333177566528, 0.7943333387374878, 0.7950000166893005, 0.793666660785675, 0.7799999713897705, 0.8080000281333923, 0.7993333339691162, 0.8103333115577698, 0.8086666464805603, 0.7956666946411133, 0.8149999976158142, 0.8076666593551636, 0.8176666498184204, 0.8236666917800903, 0.8266666531562805, 0.812333345413208, 0.8263333439826965, 0.8180000185966492, 0.8103333115577698, 0.8220000267028809]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 6, 0, 0], [1, 0, 0, 3, 1, 0], [5, 57, 79], [1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [7, 4, 2, 6, 0, 2, 8, 0, 2, 4, 4, 9, 8, 8, 1, 5, 9, 4, 6, 2, 4, 8, 1, 7, 8], [3, 3, 2, 3, 0, 1, 2, 3, 3, 0, 1, 1, 5], [85, 54, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [56, 38]], "fitness": -0.7960000038146973, "mapping_values": [1, 9, 9, 6, 3, 3, 24, 24, 15, 9, 2, 1, 1, 0, 1, 0, 6, 5, 1, 2], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))), tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.sqrt(grad), tf.math.add(beta, beta))))), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(beta, alpha), tf.math.pow(tf.math.add(beta, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(beta, beta))))))))), tf.math.sqrt(tf.math.subtract(grad, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.234536560660954, 1.8437215783702794, 1.3231067497653732, 1.102866841502524, 0.9821218019463304, 0.905667546780795, 0.8606866665205164, 0.8406424005553392, 0.7927265820911359, 0.7787218162365058, 0.7563085479507073, 0.7331244449463692, 0.7183313691904202, 0.7057048486302857, 0.6963056312607516, 0.6830146266185628, 0.668863892452891, 0.6691930848436427, 0.6486754279173818, 0.650867253569501, 0.6472326529229149, 0.6340176513748965, 0.6332128419852165, 0.6189938561397694, 0.613482414605422, 0.6122558696190317, 0.6035492487272425, 0.6030997626061264, 0.602270261958889, 0.5906352615942179, 0.5986371119229266, 0.578503079630711, 0.5821612865980574, 0.5782399102681348, 0.5742800618757928, 0.5645434264304726, 0.5587167514392398, 0.5675620981856833, 0.5575653152805293, 0.5568351432820825, 0.5506082482152784], "accuracy": [0.23682472109794617, 0.4501386880874634, 0.5518425703048706, 0.615770697593689, 0.648659348487854, 0.68101966381073, 0.6901333928108215, 0.6921146512031555, 0.709549605846405, 0.7104741930961609, 0.724210798740387, 0.7285695672035217, 0.7401928305625916, 0.7380794882774353, 0.7391361594200134, 0.7432307600975037, 0.7493065595626831, 0.748778223991394, 0.7621186375617981, 0.7560427784919739, 0.7548540234565735, 0.7617223858833313, 0.7660810947418213, 0.7687227725982666, 0.7753269076347351, 0.7741381525993347, 0.7718927264213562, 0.7810064554214478, 0.7803460359573364, 0.7794214487075806, 0.7757231593132019, 0.7884030938148499, 0.7839123010635376, 0.785101056098938, 0.780610203742981, 0.7922335267066956, 0.7905164361000061, 0.7895918488502502, 0.7954035401344299, 0.7957997918128967, 0.7968564033508301], "val_loss": [1.7719144821166992, 1.136526141847883, 0.8379259279796055, 0.7380995580128261, 0.6706230640411377, 0.6088971410478864, 0.6091718333108085, 0.6003806931631905, 0.5557018348148891, 0.5623637437820435, 0.5401622908455985, 0.5341158424104963, 0.5325730017253331, 0.5167022092001778, 0.523090056010655, 0.504199743270874, 0.4952211720602853, 0.48938184125082834, 0.49026845182691303, 0.5002685955592564, 0.49448130811963764, 0.47682969910757883, 0.47742182867867605, 0.49042597838810514, 0.46998129572187153, 0.4799649715423584, 0.4554821423121861, 0.45987280777522493, 0.4498125910758972, 0.4457619530814035, 0.4582104001726423, 0.4489147663116455, 0.4531709466661726, 0.43641414812632967, 0.4307969978877476, 0.4340508495058332, 0.44348734617233276, 0.430919417313167, 0.4330633878707886, 0.43530166149139404, 0.4267636111804417], "val_accuracy": [0.503000020980835, 0.6453333497047424, 0.6710000038146973, 0.6850000023841858, 0.7096666693687439, 0.7456666827201843, 0.7356666922569275, 0.734000027179718, 0.7593333125114441, 0.7549999952316284, 0.7593333125114441, 0.7706666588783264, 0.7566666603088379, 0.765333354473114, 0.7706666588783264, 0.7786666750907898, 0.7786666750907898, 0.7929999828338623, 0.7796666622161865, 0.768666684627533, 0.7806666493415833, 0.7913333177566528, 0.7943333387374878, 0.7950000166893005, 0.793666660785675, 0.7799999713897705, 0.8080000281333923, 0.7993333339691162, 0.8103333115577698, 0.8086666464805603, 0.7956666946411133, 0.8149999976158142, 0.8076666593551636, 0.8176666498184204, 0.8236666917800903, 0.8266666531562805, 0.812333345413208, 0.8263333439826965, 0.8180000185966492, 0.8103333115577698, 0.8220000267028809]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 5, 0, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 4, 6, 0, 2, 8, 0, 2, 4, 4, 9, 8, 8, 1, 5, 9, 4, 6, 2, 4, 8, 1, 7, 8], [3, 0, 2, 3, 2, 1, 2, 3, 3, 0], [85, 54, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 1, 1, 0, 1, 0, 1, 0], [1, 9, 9, 3, 9], [3, 1, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 0, 13, 13, 7, 6, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.pow(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.negative(tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))), beta), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07858935743570328, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 47], [0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 9, 2, 2, 9, 2, 4, 9, 2, 1, 4, 4, 8, 1, 1, 8, 9, 0, 2, 7, 3, 9, 6, 4, 6], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [60, 30, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 9, 9], [0, 3, 3, 1], [81, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 8, 3, 4, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), tf.math.add(tf.math.pow(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1290099814.5320497, 24034136991.83516, 109480941437.88667, 306176496233.29443, 651789475014.416, 1198920633344.9468], "accuracy": [0.10051512718200684, 0.10210011899471283, 0.09853387624025345, 0.09985470771789551, 0.10408136248588562, 0.09932637959718704], "val_loss": [4703696749.714286, 37618142646.85714, 126949205138.28572, 300895492973.7143, 587692076470.8572, 1015488596260.5714], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 5, 9, 9, 0], [2, 0, 0, 3, 1, 0], [1, 47], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 3, 2, 3, 4, 1, 2, 3, 3, 0, 1, 1, 5], [28, 16, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [3, 3], [62], [1, 1, 1, 0, 1, 0, 1, 0, 1, 0], [0, 3, 9, 3, 9], [1, 1, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09047681838274002, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [5, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 47], [0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [7, 4, 2, 6, 0, 2, 8, 0, 2, 4, 4, 9, 8, 8, 1, 5, 9, 4, 6, 2, 4, 8, 1, 7, 8], [3, 2, 2, 3, 0, 1, 2, 3, 3, 0, 1, 1, 5], [85, 54, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0], [1, 3, 9, 3, 9], [3, 1, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 24, 24, 15, 9, 2, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(grad, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.negative(tf.math.add(tf.math.sqrt(beta), tf.math.add(beta, beta))), tf.math.add(beta, grad))), tf.math.negative(tf.math.add(tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.pow(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(beta))))))))), tf.math.sqrt(tf.math.subtract(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07858935743570328, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 7, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 3, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 5, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 6, 6, 1, 5, 4, 2, 2, 0, 3, 2, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta)))))), grad), tf.math.add(beta, tf.math.add(grad, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [310727456.27184623, 5787010882.645885, 26358885283.89275, 73712825697.95694, 156917219412.39783, 288632229247.9831], "accuracy": [0.10051512718200684, 0.10210011899471283, 0.09853387624025345, 0.09985470771789551, 0.10408136248588562, 0.09945846349000931], "val_loss": [1132711131.4285715, 9057408438.857143, 30563763346.285713, 72440950198.85715, 141479112118.85715, 244467321124.57144], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 5, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [52, 16, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 2, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 2, 1, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [634758626.3450203, 11823792783.435741, 53858135939.02628, 150617686531.04318, 320633564051.6624, 589778224112.4459], "accuracy": [0.1006472036242485, 0.10210011899471283, 0.09853387624025345, 0.09985470771789551, 0.10408136248588562, 0.09945846349000931], "val_loss": [2314153472.0, 18506183241.142857, 62450293613.71429, 148022624256.0, 289093170907.4286, 499543591204.5714], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [8, 8, 3, 9, 0], [0, 0, 0, 3, 1, 0], [5, 57], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 6, 1, 2, 8, 0, 2, 4, 4, 9, 8, 8, 1, 5, 9, 4, 6, 2, 4, 8, 1, 7, 8], [3, 0, 2, 2, 2, 1, 2, 3, 3, 0], [85, 54, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0], [1, 3, 9, 3, 9], [1, 1, 3, 1], [85, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 2, 14, 14, 7, 7, 1, 1, 1, 0, 1, 0, 7, 4, 3, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))))), beta)), alpha))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.math.multiply(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [41, 57], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [0, 4, 2, 5, 7, 9, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 5, 0, 1, 2, 3, 3, 0], [28, 26, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [0, 3], [78], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [1, 3, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 2, 6, 6, 3, 3, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.add(grad, tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3025253371099015, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 5, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 7, 7, 2, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta)))), tf.math.negative(grad))), tf.math.add(beta, tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha), tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3025253371099015, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 7, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [9, 4, 2, 5, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 0, 2, 3, 0, 1, 2, 3, 3, 0], [52, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 2, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [634758626.3450203, 11823792783.435741, 53858135939.02628, 150617686531.04318, 320633564051.6624, 589778224112.4459], "accuracy": [0.1006472036242485, 0.10210011899471283, 0.09853387624025345, 0.09985470771789551, 0.10408136248588562, 0.09945846349000931], "val_loss": [2314153472.0, 18506183241.142857, 62450293613.71429, 148022624256.0, 289093170907.4286, 499543591204.5714], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [8, 5, 0, 9, 0], [0, 0, 0, 3, 1, 0], [5, 57], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1], [1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 4, 6, 0, 2, 8, 0, 2, 4, 4, 9, 8, 8, 1, 5, 9, 4, 6, 2, 4, 8, 1, 7, 8], [4, 0, 4, 3, 0, 1, 2, 3, 3, 0], [85, 54, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0], [1, 3, 9, 3, 9], [1, 1, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 5, 4, 2, 2, 0, 5, 3, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.negative(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), alpha), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 5, 9, 0], [1, 0, 0, 3, 1, 0], [5, 47], [0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 6, 0, 2, 8, 0, 2, 4, 4, 9, 8, 8, 1, 5, 9, 4, 6, 2, 4, 8, 1, 7, 8], [3, 2, 4, 3, 5, 1, 2, 3, 3, 0, 1, 1, 5], [85, 54, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 7, 9, 3, 9], [1, 1, 3, 1], [56, 38]], "fitness": -0.09885714203119278, "mapping_values": [1, 6, 6, 3, 3, 2, 12, 12, 6, 6, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), grad))), tf.math.negative(grad))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [205376023996.15897, 6.023298475732094e+22, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.10342095047235489, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [461592646310765.7, 2.5315873588349695e+26, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.10066666454076767, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 5, 9, 0], [3, 0, 0, 3, 1, 0], [5, 13], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [7, 4, 2, 6, 0, 2, 8, 0, 2, 4, 4, 9, 8, 8, 1, 5, 9, 4, 6, 2, 4, 8, 1, 7, 8], [3, 4, 2, 3, 0, 1, 2, 3, 3, 0, 1, 1, 5], [85, 54, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0], [5, 3, 9, 3, 9], [3, 1, 3, 1], [56, 38]], "fitness": -0.08314285427331924, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(sigma)", "other_info": {"loss": [2.3005667814819835, 2.2999577207052635, 2.3006675450588654, 2.3017369550153988, 2.299058924985993, 2.3010408532240008, 2.2993432896059454, 2.3004001052923457, 2.2990673610547185, 2.3004410521008825, 2.300031645800916, 2.2993550068509263, 2.299891408597316, 2.300482687082871, 2.299419060264832, 2.2997687111409775, 2.299853496516244, 2.3003202588755647, 2.3006985271926474, 2.300899944285266], "accuracy": [0.09879804402589798, 0.10077928751707077, 0.09628847241401672, 0.09615638852119446, 0.0952318087220192, 0.09259014576673508, 0.10077928751707077, 0.09325055778026581, 0.10210011899471283, 0.09919429570436478, 0.09945846349000931, 0.09972262382507324, 0.09840179979801178, 0.09642054885625839, 0.1022322028875351, 0.10196803510189056, 0.10051512718200684, 0.09721305221319199, 0.09708096832036972, 0.09470347315073013], "val_loss": [1.9698429107666016, 1.969501291002546, 1.9692339897155762, 1.9691829681396484, 1.9694005421229772, 1.9694999967302596, 1.9694854191371374, 1.969292095729283, 1.9692608288356237, 1.9692938668387276, 1.969475337437221, 1.969705309186663, 1.9699303763253349, 1.9701762199401855, 1.9703873906816756, 1.9706341879708427, 1.9708001954214913, 1.9710094588143485, 1.9711792128426688, 1.971290452139718], "val_accuracy": [0.047333333641290665, 0.05166666582226753, 0.056333333253860474, 0.057999998331069946, 0.05966666713356972, 0.06300000101327896, 0.06966666877269745, 0.07233333587646484, 0.07633333653211594, 0.07466666400432587, 0.07800000160932541, 0.07766667008399963, 0.07833333313465118, 0.07766667008399963, 0.08133333176374435, 0.0793333351612091, 0.07966666668653488, 0.07900000363588333, 0.08133333176374435, 0.07866666465997696]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 7, 9, 0], [1, 0, 0, 3, 1, 0], [5, 47, 85], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [7, 4, 2, 6, 0, 2, 8, 0, 2, 4, 4, 9, 8, 8, 1, 5, 9, 4, 6, 2, 4, 8, 1, 7, 8], [3, 2, 2, 3, 0, 1, 2, 3, 3, 0, 1, 1, 5], [85, 54, 99, 84, 1, 78, 2, 15], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [3, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [56, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 7, 7, 4, 3, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3009787335797007, 2.3009552261565167, 2.3023410422564843, 2.303748252196256, 2.3005422270450735, 2.302986707701234], "accuracy": [0.09602430462837219, 0.09853387624025345, 0.09272222965955734, 0.09126931428909302, 0.09060890227556229, 0.09074098616838455], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [7, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 47], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [7, 4, 2, 6, 0, 2, 8, 0, 2, 4, 4, 9, 8, 8, 1, 5, 9, 4, 6, 2, 4, 8, 1, 7, 8], [3, 2, 2, 3, 0, 1, 2, 3, 3, 0, 1, 1, 5], [85, 54, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [1, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [56, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 6, 6, 5, 1, 2, 3, 3, 1, 2, 0, 5, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3009787335797007, 2.3009552261565167, 2.3023410422564843, 2.303748252196256, 2.3005422270450735, 2.302986707701234], "accuracy": [0.09602430462837219, 0.09853387624025345, 0.09272222965955734, 0.09126931428909302, 0.09060890227556229, 0.09074098616838455], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [9, 4, 2, 6, 0, 2, 8, 0, 2, 4, 4, 9, 8, 8, 1, 5, 9, 4, 6, 2, 4, 8, 1, 7, 8], [3, 3, 2, 3, 0, 1, 2, 3, 3, 0, 1, 1, 5], [28, 16, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [56, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 5, 5, 4, 1, 2, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.3009787335797007, 2.3009552261565167, 2.3023410422564843, 2.303748252196256, 2.3005422270450735, 2.302986707701234], "accuracy": [0.09602430462837219, 0.09853387624025345, 0.09272222965955734, 0.09126931428909302, 0.09060890227556229, 0.09074098616838455], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 8, 9, 9, 0], [0, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 4, 1, 0, 9, 5, 0, 2, 4, 4, 9, 8, 8, 1, 5, 9, 4, 6, 2, 4, 8, 1, 7, 8], [3, 3, 1, 3, 0, 1, 2, 3, 3, 0], [60, 3, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0], [1, 3, 9, 3, 9], [1, 3, 3, 1], [56, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 1, 11, 11, 7, 4, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.pow(grad, grad)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))), alpha)))), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), alpha), sigma)", "other_info": {"loss": [2.6420029788646464, 2.3753612505336243, 2.30400608231788, 2.303150672198381, 1551.2725175437579, 3.222973040491441], "accuracy": [0.16721701622009277, 0.11028926074504852, 0.09536388516426086, 0.09972262382507324, 0.1010434553027153, 0.10210011899471283], "val_loss": [1.971802030290876, 1.9740160533360072, 1.973696027483259, 1.9738212312970842, 2.3308072090148926, 2.6916939871651784], "val_accuracy": [0.16099999845027924, 0.10400000214576721, 0.09733333438634872, 0.09733333438634872, 0.10000000149011612, 0.09733333438634872]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 47], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 8, 6, 0, 2, 8, 0, 2, 4, 4, 9, 8, 8, 1, 5, 9, 4, 6, 2, 4, 8, 1, 7, 8], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [30], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [56, 38]], "fitness": -0.03828571364283562, "mapping_values": [1, 3, 3, 1, 2, 1, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(grad)), tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(sigma, alpha)))", "other_info": {"loss": [2.301273488255225, 2.3017933114550257, 2.303983849084703, 2.306389963937048, 2.3035950068674227, 2.3075208822340305], "accuracy": [0.09628847241401672, 0.09642054885625839, 0.08994849026203156, 0.08585391938686371, 0.08585391938686371, 0.0812310129404068], "val_loss": [1.9711048262459892, 1.9715841838291712, 1.972322736467634, 1.9730474608285087, 1.9737637383597237, 1.9745590346200126], "val_accuracy": [0.036666665226221085, 0.03333333507180214, 0.029333332553505898, 0.029666665941476822, 0.029999999329447746, 0.029999999329447746]}}]