[{"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 5, 5, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 2, 0, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 3, 3, 3, 8, 1, 3, 1, 6, 8, 4, 1, 5, 0, 6, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [1, 1, 3, 1, 3, 3, 2, 3, 3, 0, 5, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [77, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [38], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 9, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [46, 9, 43, 71, 34]], "fitness": -0.8242856860160828, "mapping_values": [1, 1, 1, 0, 1, 0, 27, 27, 15, 12, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, alpha)), tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(tf.math.sqrt(alpha), tf.math.pow(grad, alpha)), tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.math.add(beta, grad))), tf.math.negative(beta)), grad))), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), grad))), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.026654005050659, 1.4692726135253906, 1.0595054626464844, 0.9031790494918823, 0.82032710313797, 0.7340365648269653, 0.719328761100769, 0.6891342401504517, 0.6730741858482361, 0.6616294384002686, 0.6182044148445129, 0.6062429547309875, 0.5922923684120178, 0.5703132748603821, 0.5380063652992249, 0.5804689526557922, 0.5358678698539734, 0.5162632465362549, 0.5166152715682983, 0.5060101747512817, 0.4934789836406708, 0.4604252874851227, 0.46655797958374023, 0.469844788312912, 0.44193360209465027, 0.451183557510376, 0.43581634759902954, 0.4271079897880554, 0.40879055857658386, 0.4238870441913605, 0.40412771701812744, 0.3978284001350403, 0.3892976939678192, 0.39272254705429077, 0.3762627840042114, 0.38249439001083374, 0.35899820923805237, 0.3705380856990814], "accuracy": [0.3197728097438812, 0.48989564180374146, 0.6144498586654663, 0.6609430909156799, 0.6936996579170227, 0.7232862114906311, 0.7228899598121643, 0.746268630027771, 0.7382115721702576, 0.7433628439903259, 0.7619865536689758, 0.7696473598480225, 0.7773081660270691, 0.7861577272415161, 0.7954035401344299, 0.7751948237419128, 0.796328067779541, 0.8025360107421875, 0.8080834746360779, 0.8087438941001892, 0.8153480291366577, 0.8274996876716614, 0.8203672170639038, 0.8239334225654602, 0.8374059200286865, 0.8260467648506165, 0.8384625315666199, 0.8438779711723328, 0.8535200357437134, 0.8399154543876648, 0.8487650156021118, 0.8510104417800903, 0.860652506351471, 0.8518029451370239, 0.8626337051391602, 0.8580108284950256, 0.8646149635314941, 0.8613129258155823], "val_loss": [1.6029337644577026, 1.034500002861023, 0.8984330892562866, 0.7975810766220093, 0.7034821510314941, 0.7231706380844116, 0.6341183185577393, 0.6336370706558228, 0.6840227842330933, 0.5663841962814331, 0.6034029126167297, 0.5329554080963135, 0.5431826114654541, 0.530474066734314, 0.5330115556716919, 0.5036236047744751, 0.5472899675369263, 0.48679009079933167, 0.5263930559158325, 0.4919570982456207, 0.45742762088775635, 0.4942306578159332, 0.4541296362876892, 0.48822733759880066, 0.4633388817310333, 0.46512943506240845, 0.4743380546569824, 0.45919710397720337, 0.4393098056316376, 0.4682893753051758, 0.42052653431892395, 0.4265148937702179, 0.4197075068950653, 0.4215010702610016, 0.4294399321079254, 0.43643754720687866, 0.4537438452243805, 0.4569857716560364], "val_accuracy": [0.4326666593551636, 0.6326666474342346, 0.6566666960716248, 0.7013333439826965, 0.715666651725769, 0.7236666679382324, 0.7699999809265137, 0.7526666522026062, 0.7213333249092102, 0.7860000133514404, 0.7643333077430725, 0.8056666851043701, 0.7960000038146973, 0.8026666641235352, 0.8069999814033508, 0.812666654586792, 0.784333348274231, 0.812333345413208, 0.7896666526794434, 0.8176666498184204, 0.8270000219345093, 0.8116666674613953, 0.8373333215713501, 0.8226666450500488, 0.8299999833106995, 0.8386666774749756, 0.8256666660308838, 0.8379999995231628, 0.8383333086967468, 0.8330000042915344, 0.8450000286102295, 0.8446666598320007, 0.8479999899864197, 0.8476666808128357, 0.8416666388511658, 0.8376666903495789, 0.8416666388511658, 0.8333333134651184]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 5, 5, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 2, 0, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 3, 3, 3, 8, 8, 3, 1, 6, 8, 4, 1, 5, 6, 6, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [1, 1, 2, 1, 2, 3, 2, 3, 3, 0, 5, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [77, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [38], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 9, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [46, 9, 43, 71, 34]], "fitness": -0.8148571252822876, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.0266671180725098, 1.4711881875991821, 1.0716578960418701, 0.914573609828949, 0.8102300763130188, 0.7389417290687561, 0.704638659954071, 0.6756543517112732, 0.6712958216667175, 0.697821319103241, 0.6219304203987122, 0.6114584803581238, 0.5755398273468018, 0.5729433298110962, 0.5419408679008484, 0.5617149472236633, 0.5178451538085938, 0.5299210548400879, 0.5064442753791809, 0.5165631771087646, 0.49833494424819946, 0.4583340883255005, 0.4681043326854706, 0.4545327425003052, 0.4439258873462677, 0.444419264793396, 0.4382671117782593, 0.4335521161556244, 0.40500184893608093, 0.42172926664352417, 0.4051768183708191, 0.39449650049209595, 0.3873739540576935, 0.3926658630371094, 0.37269970774650574, 0.3841795027256012], "accuracy": [0.32003697752952576, 0.48949941992759705, 0.6139215230941772, 0.6646413803100586, 0.6929071545600891, 0.7141724824905396, 0.7321357727050781, 0.7503632307052612, 0.7408532500267029, 0.7349095344543457, 0.7593448758125305, 0.7688548564910889, 0.7836481332778931, 0.783119797706604, 0.793950617313385, 0.7854973077774048, 0.8013472557067871, 0.7960638999938965, 0.8080834746360779, 0.8057059645652771, 0.8128384351730347, 0.8329150676727295, 0.8224804997444153, 0.8325188159942627, 0.8338396549224854, 0.8314621448516846, 0.8350284099578857, 0.8392550349235535, 0.8535200357437134, 0.8426892161369324, 0.8491612672805786, 0.8499537706375122, 0.8614450097084045, 0.8540483713150024, 0.8628978729248047, 0.858671247959137], "val_loss": [1.6023982763290405, 1.0355958938598633, 0.757572591304779, 0.7599329352378845, 0.7039295434951782, 0.6611923575401306, 0.7246832847595215, 0.6057069301605225, 0.7520860433578491, 0.5700868368148804, 0.6055475473403931, 0.536799967288971, 0.5470592975616455, 0.5281174182891846, 0.5107569098472595, 0.4958248734474182, 0.6379006505012512, 0.4909377992153168, 0.5551895499229431, 0.5264157652854919, 0.4594650864601135, 0.5099345445632935, 0.45464053750038147, 0.49235856533050537, 0.46253398060798645, 0.468266099691391, 0.480214387178421, 0.4491536319255829, 0.43258407711982727, 0.45057380199432373, 0.4164260923862457, 0.42758601903915405, 0.42085570096969604, 0.41859281063079834, 0.4333297610282898, 0.43314534425735474], "val_accuracy": [0.4313333332538605, 0.6306666731834412, 0.7196666598320007, 0.6886666417121887, 0.7113333344459534, 0.7553333044052124, 0.7383333444595337, 0.7730000019073486, 0.6883333325386047, 0.7846666574478149, 0.762666642665863, 0.8090000152587891, 0.8013333082199097, 0.8066666722297668, 0.8203333616256714, 0.8233333230018616, 0.7596666812896729, 0.812333345413208, 0.7753333449363708, 0.8096666932106018, 0.8270000219345093, 0.8043333292007446, 0.8393333554267883, 0.815666675567627, 0.8266666531562805, 0.8330000042915344, 0.8259999752044678, 0.8403333425521851, 0.8443333506584167, 0.8396666646003723, 0.8483333587646484, 0.8433333039283752, 0.847000002861023, 0.8463333249092102, 0.8433333039283752, 0.8386666774749756]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 9, 5, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 3, 0, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 74, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 3, 3, 3, 8, 8, 3, 1, 6, 8, 4, 1, 5, 6, 6, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [1, 1, 2, 1, 2, 3, 2, 3, 3, 0, 5, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [77, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [38], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 9, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [46, 9, 43, 71, 34]], "fitness": -0.8108571171760559, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.02669620513916, 1.4687446355819702, 1.071048617362976, 0.9242983460426331, 0.8059316277503967, 0.723606526851654, 0.7313596606254578, 0.6728882193565369, 0.6886223554611206, 0.6540284156799316, 0.6025515198707581, 0.6032004952430725, 0.5860661268234253, 0.5763573050498962, 0.5396004915237427, 0.5645841956138611, 0.5185217261314392, 0.5478765368461609, 0.517252504825592, 0.5014399290084839, 0.49614018201828003], "accuracy": [0.3199048936367035, 0.49068814516067505, 0.6128648519515991, 0.6556597352027893, 0.6930392384529114, 0.7235503792762756, 0.7173424959182739, 0.7504953145980835, 0.7345132827758789, 0.752740740776062, 0.7791573405265808, 0.7688548564910889, 0.7745344042778015, 0.7807422876358032, 0.796328067779541, 0.7864218950271606, 0.8025360107421875, 0.7943468689918518, 0.8014793395996094, 0.8115176558494568, 0.8132346868515015], "val_loss": [1.6029521226882935, 1.0312737226486206, 1.0458836555480957, 0.733564555644989, 0.6869747042655945, 0.636793851852417, 0.6626845002174377, 0.6544781923294067, 0.6137738227844238, 0.5597859621047974, 0.5876046419143677, 0.5637922286987305, 0.5883530974388123, 0.5337639451026917, 0.5533777475357056, 0.4965006113052368, 0.7065696716308594, 0.4942346215248108, 0.5431172847747803, 0.5110474228858948, 0.4761125147342682], "val_accuracy": [0.4320000112056732, 0.6299999952316284, 0.6710000038146973, 0.7096666693687439, 0.7253333330154419, 0.7606666684150696, 0.7666666507720947, 0.746999979019165, 0.7763333320617676, 0.7929999828338623, 0.7720000147819519, 0.7649999856948853, 0.753000020980835, 0.8050000071525574, 0.7973333597183228, 0.8233333230018616, 0.7456666827201843, 0.8143333196640015, 0.7839999794960022, 0.8113333582878113, 0.8176666498184204]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 5, 5, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 2, 0, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 3, 3, 3, 8, 8, 3, 1, 6, 8, 4, 1, 5, 6, 6, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [1, 1, 2, 1, 2, 3, 2, 3, 3, 0, 5, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [77, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [38], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 9, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [46, 9, 43, 71, 34]], "fitness": -0.8100000023841858, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.0267550945281982, 1.465477705001831, 1.0720977783203125, 0.9020169377326965, 0.7996572256088257, 0.7222763895988464, 0.7399690747261047, 0.6774372458457947, 0.6809817552566528, 0.6590877771377563, 0.614693284034729, 0.6095654368400574, 0.5835967063903809, 0.572929322719574, 0.5489172339439392, 0.5780184268951416, 0.5532392859458923, 0.5096640586853027, 0.511822521686554, 0.4994608759880066], "accuracy": [0.31964072585105896, 0.4897635579109192, 0.6103553175926208, 0.6650376319885254, 0.6894729733467102, 0.7210407853126526, 0.7181349992752075, 0.7464007139205933, 0.7415136694908142, 0.7430986762046814, 0.7625148296356201, 0.7662131786346436, 0.7754589915275574, 0.7828556299209595, 0.7948752045631409, 0.78113853931427, 0.7841764688491821, 0.8050455451011658, 0.8049134612083435, 0.8101968169212341], "val_loss": [1.6039563417434692, 1.0386229753494263, 0.8466788530349731, 0.763299822807312, 0.6996789574623108, 0.6461098194122314, 0.6589422821998596, 0.6411985158920288, 0.6553518772125244, 0.5721293091773987, 0.588476300239563, 0.535855233669281, 0.5444902777671814, 0.5491346120834351, 0.5085630416870117, 0.5282497406005859, 0.508196234703064, 0.48850202560424805, 0.5202966928482056, 0.5094806551933289], "val_accuracy": [0.4309999942779541, 0.6176666617393494, 0.6949999928474426, 0.6886666417121887, 0.715666651725769, 0.7593333125114441, 0.7333333492279053, 0.7553333044052124, 0.7509999871253967, 0.7836666703224182, 0.7756666541099548, 0.8016666769981384, 0.8040000200271606, 0.7990000247955322, 0.8223333358764648, 0.8063333630561829, 0.8019999861717224, 0.815666675567627, 0.7923333048820496, 0.8106666803359985]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 5, 5, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 2, 0, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 3, 3, 3, 8, 8, 3, 1, 6, 8, 4, 1, 5, 6, 6, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [1, 1, 2, 1, 2, 3, 2, 3, 3, 0, 5, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [77, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [38], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 9, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [46, 9, 43, 71, 34]], "fitness": -0.7997142672538757, "mapping_values": [1, 1, 1, 0, 1, 0, 27, 27, 15, 12, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, alpha)), tf.math.sqrt(tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(tf.math.sqrt(alpha), tf.math.pow(beta, alpha)), tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))), tf.math.add(beta, tf.math.divide_no_nan(grad, beta)))), grad)))), grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), grad))), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.1335904598236084, 1.9024993181228638, 1.4339443445205688, 1.076743721961975, 0.9208179712295532, 0.8734675049781799, 0.7602812647819519, 0.7925198078155518, 0.6987287402153015, 0.6808554530143738, 0.6601452827453613, 0.6469689607620239, 0.6097264885902405, 0.6144921779632568, 0.5941079258918762, 0.5688470005989075, 0.5715280771255493], "accuracy": [0.28120461106300354, 0.3991546630859375, 0.49491479992866516, 0.6194690465927124, 0.6642451286315918, 0.6750759482383728, 0.7152291536331177, 0.700700044631958, 0.7367587089538574, 0.7423061728477478, 0.748778223991394, 0.7536653280258179, 0.7672698497772217, 0.7700436115264893, 0.7730814814567566, 0.7862898111343384, 0.7807422876358032], "val_loss": [2.181668758392334, 1.2053780555725098, 1.156480073928833, 0.7883051037788391, 0.7814441919326782, 0.6950333714485168, 0.6821116209030151, 0.6327190399169922, 0.6125494837760925, 0.6794233918190002, 0.644590437412262, 0.5515151619911194, 0.5530869960784912, 0.558820903301239, 0.5675992965698242, 0.5898187756538391, 0.527711808681488], "val_accuracy": [0.24933333694934845, 0.6039999723434448, 0.596666693687439, 0.7043333053588867, 0.6833333373069763, 0.7253333330154419, 0.7473333477973938, 0.7676666378974915, 0.7833333611488342, 0.7326666712760925, 0.7326666712760925, 0.7986666560173035, 0.7919999957084656, 0.7870000004768372, 0.7796666622161865, 0.7763333320617676, 0.7963333129882812]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 5, 5, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 2, 0, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 3, 3, 3, 8, 8, 3, 1, 6, 8, 4, 1, 5, 6, 6, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [1, 1, 2, 1, 2, 3, 2, 3, 3, 0, 5, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [77, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [6, 3], [38], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 1, 9, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [10, 9, 43, 71, 34]], "fitness": -0.37599998712539673, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), sigma), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3021833896636963, 2.3026885986328125, 2.3016204833984375, 2.3009443283081055, 2.300095796585083, 2.3002140522003174, 2.2993197441101074, 2.2977612018585205, 2.2976443767547607, 2.2968943119049072, 2.2953734397888184, 2.296034812927246, 2.2945592403411865, 2.295203924179077, 2.2946224212646484, 2.2953011989593506, 2.2938966751098633, 2.292773723602295, 2.2919113636016846, 2.291891098022461, 2.290489435195923, 2.2905592918395996, 2.288760185241699, 2.2884726524353027, 2.288336753845215, 2.2894327640533447, 2.287623167037964, 2.286789655685425, 2.2869327068328857, 2.2861034870147705, 2.286876916885376, 2.2832682132720947, 2.2833092212677, 2.2841861248016357, 2.282728672027588, 2.281191110610962, 2.282890558242798, 2.2822952270507812, 2.281468391418457, 2.280456066131592, 2.2802181243896484, 2.2790777683258057, 2.280302047729492, 2.2787837982177734, 2.2785091400146484, 2.278886079788208, 2.27705979347229, 2.277872085571289, 2.27658748626709, 2.2767693996429443, 2.276857614517212, 2.276944398880005, 2.2741732597351074, 2.273899793624878, 2.273219108581543, 2.27200984954834, 2.271419048309326, 2.2711198329925537, 2.2722206115722656, 2.271371364593506, 2.2708303928375244, 2.2699813842773438, 2.271118640899658, 2.2707273960113525, 2.268251657485962, 2.2673087120056152, 2.267026901245117, 2.2658514976501465, 2.266108274459839, 2.2663798332214355, 2.2663052082061768, 2.266085386276245, 2.2643611431121826, 2.263673782348633, 2.263429641723633, 2.2629613876342773, 2.2625253200531006, 2.2633159160614014, 2.262803554534912, 2.2628817558288574, 2.2626535892486572, 2.2595996856689453, 2.2606329917907715, 2.2600159645080566, 2.2595009803771973, 2.2581887245178223, 2.2575602531433105, 2.257520914077759, 2.2578115463256836, 2.256173849105835, 2.256453037261963, 2.257077217102051, 2.254885673522949, 2.25472092628479, 2.2538111209869385, 2.2539870738983154, 2.2542240619659424, 2.2524425983428955, 2.2516844272613525, 2.2523114681243896], "accuracy": [0.09430722147226334, 0.09206181764602661, 0.09576013684272766, 0.09615638852119446, 0.10077928751707077, 0.09787346422672272, 0.09813763201236725, 0.1026284471154213, 0.1010434553027153, 0.10474177449941635, 0.107647605240345, 0.10698718577623367, 0.11319508403539658, 0.10447761416435242, 0.11055342853069305, 0.11094967275857925, 0.11306300014257431, 0.1216483935713768, 0.11451591551303864, 0.1224408894777298, 0.12138422578573227, 0.12191256135702133, 0.12230881303548813, 0.13155461847782135, 0.1278562992811203, 0.1216483935713768, 0.13353586196899414, 0.12891295552253723, 0.13129045069217682, 0.13472460210323334, 0.13129045069217682, 0.13776251673698425, 0.13736626505851746, 0.1394795924425125, 0.1434420794248581, 0.14581957459449768, 0.14898955821990967, 0.14581957459449768, 0.1500462293624878, 0.14978206157684326, 0.14872540533542633, 0.1592920422554016, 0.15810328722000122, 0.15849953889846802, 0.15955619513988495, 0.1608770340681076, 0.15968827903270721, 0.16259410977363586, 0.16853784024715424, 0.1674811840057373, 0.1570466309785843, 0.16470743715763092, 0.1818782240152359, 0.17461365461349487, 0.18134988844394684, 0.18319904804229736, 0.1810857206583023, 0.17500990629196167, 0.18319904804229736, 0.18557654321193695, 0.18663319945335388, 0.18663319945335388, 0.18201030790805817, 0.18795403838157654, 0.19561484456062317, 0.1946902722120285, 0.2020869106054306, 0.1978602558374405, 0.20591731369495392, 0.19918107986450195, 0.19944524765014648, 0.20538897812366486, 0.2008981704711914, 0.20631356537342072, 0.21001188457012177, 0.21463479101657867, 0.20961563289165497, 0.21212521195411682, 0.2110685557126999, 0.21040813624858856, 0.20842689275741577, 0.22255976498126984, 0.22203142940998077, 0.2218993455171585, 0.22123894095420837, 0.2238806039094925, 0.22480517625808716, 0.22982433438301086, 0.22242768108844757, 0.23022057116031647, 0.22520142793655396, 0.2292959988117218, 0.23259806632995605, 0.24078720808029175, 0.23523972928524017, 0.23840972781181335, 0.23233389854431152, 0.23801347613334656, 0.24237221479415894, 0.2436930388212204], "val_loss": [2.298140287399292, 2.297489643096924, 2.2968361377716064, 2.2961835861206055, 2.2955446243286133, 2.294907331466675, 2.2942726612091064, 2.293644428253174, 2.2930283546447754, 2.292405605316162, 2.2917885780334473, 2.2911813259124756, 2.290574550628662, 2.2899632453918457, 2.289355516433716, 2.2887535095214844, 2.2881569862365723, 2.287564992904663, 2.2869763374328613, 2.2863852977752686, 2.2858026027679443, 2.2852206230163574, 2.2846450805664062, 2.2840659618377686, 2.2834925651550293, 2.2829244136810303, 2.282353401184082, 2.2817866802215576, 2.281219005584717, 2.2806591987609863, 2.2801029682159424, 2.2795419692993164, 2.278987407684326, 2.278439521789551, 2.277890682220459, 2.277350425720215, 2.2768027782440186, 2.2762632369995117, 2.275724411010742, 2.275189161300659, 2.2746472358703613, 2.2741076946258545, 2.273581027984619, 2.2730510234832764, 2.2725250720977783, 2.272000789642334, 2.271474599838257, 2.2709505558013916, 2.27042555809021, 2.2699029445648193, 2.269381284713745, 2.2688655853271484, 2.268345594406128, 2.267826557159424, 2.2673087120056152, 2.266791343688965, 2.266273260116577, 2.265763759613037, 2.2652621269226074, 2.2647578716278076, 2.264252185821533, 2.2637500762939453, 2.2632386684417725, 2.2627346515655518, 2.2622263431549072, 2.261718988418579, 2.2612154483795166, 2.26069974899292, 2.2601873874664307, 2.2596781253814697, 2.2591710090637207, 2.258669853210449, 2.2581663131713867, 2.2576537132263184, 2.257147789001465, 2.256652593612671, 2.2561426162719727, 2.25563907623291, 2.2551279067993164, 2.2546234130859375, 2.2541210651397705, 2.2536089420318604, 2.253105401992798, 2.2526071071624756, 2.252095937728882, 2.2515859603881836, 2.2510769367218018, 2.2505643367767334, 2.2500534057617188, 2.2495408058166504, 2.249034881591797, 2.2485251426696777, 2.2480053901672363, 2.2474918365478516, 2.246983766555786, 2.246474027633667, 2.2459633350372314, 2.2454335689544678, 2.2449111938476562, 2.2443950176239014], "val_accuracy": [0.0430000014603138, 0.04466666653752327, 0.04800000041723251, 0.05133333429694176, 0.055666666477918625, 0.05966666713356972, 0.06499999761581421, 0.07066666334867477, 0.07466666400432587, 0.07800000160932541, 0.08266666531562805, 0.08699999749660492, 0.08933333307504654, 0.09300000220537186, 0.0989999994635582, 0.10100000351667404, 0.10733333230018616, 0.11366666853427887, 0.12133333086967468, 0.12666666507720947, 0.1326666623353958, 0.13733333349227905, 0.14366666972637177, 0.1496666669845581, 0.15666666626930237, 0.16099999845027924, 0.16599999368190765, 0.1706666648387909, 0.17633333802223206, 0.18299999833106995, 0.18766666948795319, 0.19233334064483643, 0.19833333790302277, 0.20600000023841858, 0.20900000631809235, 0.2136666625738144, 0.218666672706604, 0.22366666793823242, 0.23066666722297668, 0.23533333837985992, 0.24133333563804626, 0.2473333328962326, 0.25066667795181274, 0.25566667318344116, 0.26100000739097595, 0.2639999985694885, 0.2653333246707916, 0.27000001072883606, 0.2759999930858612, 0.28066667914390564, 0.28833332657814026, 0.2926666736602783, 0.29633334279060364, 0.29899999499320984, 0.3016666769981384, 0.3059999942779541, 0.3073333203792572, 0.31066668033599854, 0.3140000104904175, 0.3179999887943268, 0.31933334469795227, 0.32199999690055847, 0.3240000009536743, 0.3266666531562805, 0.3310000002384186, 0.3330000042915344, 0.33533334732055664, 0.33933332562446594, 0.34299999475479126, 0.3453333377838135, 0.34833332896232605, 0.35199999809265137, 0.3540000021457672, 0.3556666672229767, 0.3569999933242798, 0.35766667127609253, 0.3596666753292084, 0.36033332347869873, 0.3619999885559082, 0.3630000054836273, 0.36533331871032715, 0.3659999966621399, 0.36500000953674316, 0.367333322763443, 0.3683333396911621, 0.36899998784065247, 0.37033334374427795, 0.3709999918937683, 0.3713333308696747, 0.3709999918937683, 0.3720000088214874, 0.3726666569709778, 0.3736666738986969, 0.375, 0.3766666650772095, 0.3779999911785126, 0.37933334708213806, 0.38100001215934753, 0.38199999928474426, 0.38333332538604736]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 5, 5, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 2, 0, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 3, 3, 3, 8, 8, 3, 1, 6, 8, 4, 1, 5, 6, 6, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [1, 1, 2, 1, 2, 3, 2, 3, 3, 0, 5, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [77, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [38], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 9, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [1, 9, 43, 71, 34]], "fitness": -0.11228571087121964, "mapping_values": [1, 1, 1, 0, 1, 0, 27, 27, 15, 12, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, alpha)), tf.math.sqrt(tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(tf.math.sqrt(alpha), tf.math.pow(beta, alpha)), tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))), tf.math.add(beta, tf.math.divide_no_nan(grad, beta)))), grad)))), grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), grad))), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(sigma), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302387237548828, 2.3033905029296875, 2.302811622619629, 2.3026328086853027, 2.3022589683532715, 2.3028676509857178, 2.302452564239502, 2.301332950592041, 2.301649332046509, 2.301403522491455, 2.3003058433532715, 2.3014421463012695, 2.3004088401794434, 2.3016021251678467, 2.3014602661132812, 2.3026411533355713, 2.301567554473877, 2.3008856773376465, 2.300422430038452, 2.300861120223999, 2.2998344898223877, 2.3004069328308105, 2.2989954948425293, 2.2990777492523193, 2.2993924617767334, 2.3009636402130127, 2.2995352745056152, 2.299118757247925, 2.299795627593994, 2.2993273735046387, 2.3005483150482178, 2.2971017360687256, 2.297694444656372, 2.2987899780273438, 2.2978310585021973, 2.2964911460876465, 2.2988369464874268, 2.2985177040100098, 2.2980644702911377, 2.2974507808685303, 2.2977399826049805, 2.2970738410949707, 2.2985904216766357, 2.2973785400390625, 2.297506809234619, 2.2983198165893555, 2.2967615127563477, 2.298051595687866, 2.297154664993286, 2.297703504562378, 2.2983059883117676, 2.298675060272217, 2.296445846557617, 2.296205997467041, 2.2960402965545654, 2.294729232788086, 2.294886589050293, 2.2950515747070312, 2.296576499938965, 2.2955875396728516, 2.2958524227142334, 2.2950937747955322, 2.2971599102020264, 2.2967636585235596, 2.294595241546631, 2.294034481048584, 2.293862819671631, 2.293626546859741, 2.294062376022339, 2.2949233055114746, 2.294849395751953, 2.294985294342041, 2.2931270599365234, 2.2935147285461426, 2.29335880279541, 2.292724132537842, 2.293513298034668, 2.294661521911621, 2.2944819927215576, 2.294820547103882, 2.2949304580688477, 2.291693925857544, 2.293625831604004, 2.293240547180176, 2.2932510375976562, 2.2921032905578613, 2.2916860580444336, 2.2919931411743164, 2.292879581451416, 2.2916390895843506, 2.2923591136932373, 2.2933573722839355, 2.2917120456695557, 2.2913780212402344, 2.290757417678833, 2.291465997695923, 2.2925710678100586, 2.290865182876587, 2.290510654449463, 2.2916674613952637], "accuracy": [0.09417514503002167, 0.09047681838274002, 0.09457138925790787, 0.09100515395402908, 0.0956280529499054, 0.09126931428909302, 0.09140139818191528, 0.09338264167308807, 0.09166556596755981, 0.09338264167308807, 0.09391097724437714, 0.09285431355237961, 0.09628847241401672, 0.09192973375320435, 0.09166556596755981, 0.09245806187391281, 0.09259014576673508, 0.10011887550354004, 0.09496764093637466, 0.09760929644107819, 0.09721305221319199, 0.10091137140989304, 0.09351472556591034, 0.10091137140989304, 0.09774138033390045, 0.09219389408826828, 0.09906221181154251, 0.09694888442754745, 0.09628847241401672, 0.09576013684272766, 0.0936468094587326, 0.09589222073554993, 0.09826971590518951, 0.1006472036242485, 0.09536388516426086, 0.1010434553027153, 0.1018359512090683, 0.10091137140989304, 0.10157178342342377, 0.10355303436517715, 0.09668471664190292, 0.10276053100824356, 0.1006472036242485, 0.10196803510189056, 0.1018359512090683, 0.10447761416435242, 0.10236428678035736, 0.10302469879388809, 0.10540219396352768, 0.10342095047235489, 0.09906221181154251, 0.10619468986988068, 0.10962884873151779, 0.10315678268671036, 0.10672302544116974, 0.10606260597705841, 0.10632677376270294, 0.10474177449941635, 0.10421344637870789, 0.11161009222269058, 0.10659094154834747, 0.10830801725387573, 0.10196803510189056, 0.10632677376270294, 0.11557257920503616, 0.11213842034339905, 0.11015717685222626, 0.10791176557540894, 0.11121384054422379, 0.11253467202186584, 0.11108175665140152, 0.11187426000833511, 0.11253467202186584, 0.10870426893234253, 0.10870426893234253, 0.11438383162021637, 0.10976093262434006, 0.11227050423622131, 0.11438383162021637, 0.10777968913316727, 0.10685510188341141, 0.11676132678985596, 0.11478008329868317, 0.11702549457550049, 0.1146479994058609, 0.11847840249538422, 0.11689341068267822, 0.11847840249538422, 0.10711926966905594, 0.1142517477273941, 0.11781799048185349, 0.11187426000833511, 0.11359133571386337, 0.11953506618738174, 0.11676132678985596, 0.11676132678985596, 0.11940298229455948, 0.11874257028102875, 0.11821424216032028, 0.11676132678985596], "val_loss": [2.298672914505005, 2.29854416847229, 2.298414707183838, 2.2982842922210693, 2.2981560230255127, 2.298027276992798, 2.2978978157043457, 2.29776930809021, 2.2976419925689697, 2.2975127696990967, 2.2973835468292236, 2.297255754470825, 2.297128200531006, 2.2969982624053955, 2.2968685626983643, 2.296739339828491, 2.2966103553771973, 2.2964818477630615, 2.296353578567505, 2.296224594116211, 2.2960965633392334, 2.2959673404693604, 2.295839786529541, 2.295710563659668, 2.295581340789795, 2.2954530715942383, 2.2953245639801025, 2.295196533203125, 2.2950668334960938, 2.2949378490448, 2.2948098182678223, 2.2946810722351074, 2.2945523262023926, 2.2944252490997314, 2.294297695159912, 2.29417085647583, 2.2940425872802734, 2.2939159870147705, 2.293788194656372, 2.293661117553711, 2.2935330867767334, 2.2934038639068604, 2.2932777404785156, 2.2931506633758545, 2.2930238246917725, 2.2928977012634277, 2.292769432067871, 2.2926433086395264, 2.292515516281128, 2.2923879623413086, 2.2922604084014893, 2.292133092880249, 2.2920045852661133, 2.291877269744873, 2.2917492389678955, 2.2916226387023926, 2.291494369506836, 2.2913665771484375, 2.2912402153015137, 2.2911152839660645, 2.290987730026245, 2.2908623218536377, 2.2907350063323975, 2.2906081676483154, 2.290480852127075, 2.290353775024414, 2.290226936340332, 2.2900989055633545, 2.289970636367798, 2.2898428440093994, 2.289715051651001, 2.289588451385498, 2.2894623279571533, 2.2893340587615967, 2.2892069816589355, 2.2890825271606445, 2.288954973220825, 2.288827896118164, 2.2887001037597656, 2.2885735034942627, 2.288447380065918, 2.288320302963257, 2.288194417953491, 2.2880682945251465, 2.2879412174224854, 2.2878143787384033, 2.2876882553100586, 2.287562608718872, 2.287435293197632, 2.287309408187866, 2.287184000015259, 2.287057399749756, 2.286930799484253, 2.286804437637329, 2.286679267883301, 2.286553144454956, 2.286426544189453, 2.2862987518310547, 2.2861721515655518, 2.286045551300049], "val_accuracy": [0.041999999433755875, 0.041999999433755875, 0.041999999433755875, 0.041999999433755875, 0.0430000014603138, 0.043666668236255646, 0.044333335012197495, 0.044333335012197495, 0.044333335012197495, 0.04466666653752327, 0.04500000178813934, 0.04533333331346512, 0.04600000008940697, 0.046666666865348816, 0.04699999839067459, 0.047333333641290665, 0.047333333641290665, 0.04800000041723251, 0.04800000041723251, 0.04866666719317436, 0.05000000074505806, 0.05133333429694176, 0.052000001072883606, 0.05233333259820938, 0.0533333346247673, 0.05400000140070915, 0.05533333495259285, 0.056333333253860474, 0.0573333315551281, 0.05833333358168602, 0.058666665107011795, 0.05966666713356972, 0.061000000685453415, 0.06199999898672104, 0.06366666406393051, 0.06400000303983688, 0.06499999761581421, 0.0663333311676979, 0.06700000166893005, 0.06800000369548798, 0.06833333522081375, 0.06866666674613953, 0.07066666334867477, 0.0716666653752327, 0.0716666653752327, 0.07233333587646484, 0.0729999989271164, 0.07400000095367432, 0.07433333247900009, 0.07533333450555801, 0.07633333653211594, 0.07666666805744171, 0.07733333110809326, 0.07900000363588333, 0.07966666668653488, 0.0806666687130928, 0.08100000023841858, 0.08133333176374435, 0.08233333379030228, 0.0833333358168602, 0.08399999886751175, 0.0860000029206276, 0.08733333647251129, 0.08799999952316284, 0.08799999952316284, 0.08866667002439499, 0.08966666460037231, 0.09000000357627869, 0.09066666662693024, 0.09166666865348816, 0.09300000220537186, 0.09333333373069763, 0.09366666525602341, 0.09566666930913925, 0.09566666930913925, 0.09666666388511658, 0.0976666659116745, 0.09833333641290665, 0.09866666793823242, 0.09966666996479034, 0.10100000351667404, 0.10166666656732559, 0.10166666656732559, 0.10199999809265137, 0.10233332961797714, 0.10400000214576721, 0.10466666519641876, 0.10533333569765091, 0.10599999874830246, 0.10733333230018616, 0.10833333432674408, 0.11100000143051147, 0.11266666650772095, 0.11400000005960464, 0.11433333158493042, 0.11433333158493042, 0.11633333563804626, 0.11766666918992996, 0.11900000274181366, 0.12033333629369736]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 5, 5, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 2, 0, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 3, 3, 3, 8, 8, 3, 1, 6, 8, 4, 1, 5, 6, 6, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [1, 1, 2, 1, 2, 3, 2, 3, 3, 0, 5, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [77, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [38], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 9, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [1, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [46, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10289261490106583, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 5, 5, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [0, 2, 0, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 3, 3, 3, 8, 8, 3, 1, 6, 8, 4, 1, 5, 6, 6, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [1, 1, 2, 1, 2, 3, 2, 3, 3, 0, 5, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [77, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [0, 1, 1, 0], [3, 3, 0], [5, 3], [38], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [3, 1, 1, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6, 1, 7, 6, 4, 6, 7, 9, 8, 9, 2, 7, 4, 3, 9, 9, 5, 8], [1, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [46, 9, 43, 71, 34, 37, 0, 56, 84]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 27, 27, 15, 12, 1, 3, 2, 1, 1, 0, 51, 33, 18, 9], "tree_depth": 33, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, alpha)), tf.math.sqrt(tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(tf.math.sqrt(alpha), tf.math.pow(beta, alpha)), tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))), tf.math.add(beta, tf.math.divide_no_nan(grad, beta)))), grad)))), grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), grad))), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.subtract(tf.math.multiply(alpha, tf.math.add(tf.math.square(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), sigma)), tf.math.multiply(beta, tf.math.subtract(tf.math.pow(beta, tf.math.multiply(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), alpha))), tf.math.add(tf.math.sqrt(alpha), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), sigma), tf.math.divide_no_nan(beta, tf.math.pow(tf.math.divide_no_nan(tf.math.add(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.multiply(sigma, sigma), beta), tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))))), tf.math.square(tf.math.sqrt(sigma))), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10289261490106583, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 5, 5, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 2, 0, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 3, 3, 3, 8, 8, 3, 1, 6, 8, 4, 1, 5, 6, 6, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [3, 1, 2, 1, 2, 3, 2, 3, 3, 0, 5, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [77, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [38], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [3, 6, 9, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6, 7, 7, 1, 7, 8, 1, 5, 0, 7, 5, 9, 6, 5, 0, 2, 9], [2, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [1, 9, 43, 71, 34, 12, 48, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 48, 32, 16, 8], "tree_depth": 33, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.divide_no_nan(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.math.add(tf.math.square(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), sigma))), tf.math.multiply(beta, tf.math.subtract(tf.math.pow(beta, tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), alpha))), tf.math.add(tf.math.sqrt(alpha), tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), sigma), tf.math.subtract(beta, tf.math.add(tf.math.sqrt(tf.math.subtract(tf.math.square(tf.math.negative(tf.math.add(tf.math.square(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.square(beta), tf.math.negative(sigma))))), tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), sigma))), beta))), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10289261490106583, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 5, 5, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 2, 0, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 74, 59, 56, 8, 79, 86, 52, 44], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 3, 3, 3, 8, 8, 3, 1, 4, 8, 4, 1, 5, 3, 6, 5, 2, 9, 2, 9, 3, 2, 2, 0, 9], [1, 3, 2, 1, 2, 3, 2, 3, 3, 0, 5, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [77, 22, 48, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [38], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 1, 9, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [46, 85, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 39, 39, 24, 15, 4, 1, 1, 0, 1, 0, 5, 3, 2, 2], "tree_depth": 46, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.multiply(alpha, tf.math.subtract(tf.math.pow(tf.math.sqrt(grad), tf.math.pow(tf.math.add(beta, beta), tf.math.subtract(tf.math.square(tf.math.multiply(alpha, tf.math.divide_no_nan(beta, tf.math.add(beta, grad)))), beta))), tf.math.add(beta, grad)))))), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(grad, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))))))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.add(grad, alpha), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), alpha))))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), sigma), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303053140640259, 2.3029165267944336, 2.3029303550720215, 2.302947521209717, 2.302995443344116, 2.3029775619506836, 2.3029301166534424, 2.3029494285583496, 2.3029370307922363, 2.3029723167419434, 2.3028182983398438], "accuracy": [0.09245806187391281, 0.0886276587843895, 0.1010434553027153, 0.09470347315073013, 0.09100515395402908, 0.09628847241401672, 0.09628847241401672, 0.09549596905708313, 0.08928807079792023, 0.09734513610601425, 0.09628847241401672], "val_loss": [2.302704095840454, 2.302741765975952, 2.302678346633911, 2.3026533126831055, 2.3026320934295654, 2.3024628162384033, 2.3025176525115967, 2.302666425704956, 2.3026175498962402, 2.3026480674743652, 2.302741527557373], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.0976666659116745, 0.09799999743700027, 0.09933333098888397, 0.10433333367109299, 0.10133333504199982, 0.09933333098888397, 0.09933333098888397, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 5, 5, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 2, 0, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 3, 3, 3, 8, 8, 3, 1, 6, 8, 4, 1, 5, 6, 6, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [1, 1, 2, 1, 2, 3, 2, 3, 3, 0, 5, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [77, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [38], [1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 9, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [46, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07700435817241669, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 5, 5, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 2, 0, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 74, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 3, 3, 3, 8, 8, 3, 1, 6, 8, 4, 1, 5, 6, 6, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [1, 1, 2, 1, 2, 3, 2, 3, 3, 0, 5, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [77, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [38], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 1, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [46, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 11, 6, 5, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(grad, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.subtract(sigma, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.add(sigma, beta), tf.math.square(beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10289261490106583, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 5, 5, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 2, 0, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 3, 3, 3, 8, 8, 3, 1, 6, 8, 4, 1, 5, 6, 6, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [1, 1, 2, 1, 2, 3, 2, 3, 3, 0, 5, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [77, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [38], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [9, 1, 9, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [46, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302649736404419, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10289261490106583, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 9, 5, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 2, 0, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 3, 3, 3, 8, 8, 3, 1, 6, 8, 4, 1, 5, 6, 6, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [3, 1, 2, 1, 2, 3, 2, 3, 3, 0, 5, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [77, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [38], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [6, 0, 5, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [55, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(sigma, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [8.493898051217126e+27, 10.655535697937012, 20.228872299194336, 29.79717254638672, 39.36381912231445, 48.93138122558594], "accuracy": [0.0804385170340538, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [6.692777156829834, 16.219167709350586, 25.752103805541992, 35.283103942871094, 44.81509017944336, 54.34720993041992], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 5, 5, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 2, 0, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 3, 3, 3, 8, 8, 3, 1, 6, 8, 4, 1, 5, 6, 6, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [1, 1, 2, 1, 2, 3, 2, 3, 3, 0, 5, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [77, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [38], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [3, 0, 8, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6, 8, 3, 2, 6, 4, 9, 5, 5, 3, 7, 1, 3, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [1, 9, 43, 71, 34, 71]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 47, 29, 18, 6], "tree_depth": 33, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.math.multiply(sigma, tf.math.add(tf.math.square(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), sigma)))), tf.math.multiply(beta, tf.math.subtract(tf.math.pow(beta, tf.math.multiply(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), alpha))), tf.math.add(tf.math.sqrt(alpha), tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.pow(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.square(tf.math.square(tf.math.multiply(tf.math.add(tf.math.subtract(beta, tf.math.multiply(tf.math.divide_no_nan(sigma, sigma), beta)), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), sigma)))), beta)))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10289261490106583, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 5, 5, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 2, 0, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 74, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 3, 3, 1, 8, 8, 1, 1, 6, 8, 2, 1, 5, 6, 6, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [1, 0, 2, 1, 2, 3, 2, 3, 3, 0, 5, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [77, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [38], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 9, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [2, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [1, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 38, 38, 24, 14, 5, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.sqrt(tf.math.add(beta, alpha)), tf.math.sqrt(tf.math.subtract(tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.subtract(tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.divide_no_nan(beta, grad))))), beta)))), tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))))), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.add(grad, alpha))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))), alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10289261490106583, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 5, 5, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 2, 0, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 74, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 3, 3, 3, 8, 8, 3, 1, 6, 8, 4, 1, 5, 6, 6, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [1, 1, 2, 1, 2, 3, 2, 3, 3, 0, 5, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [77, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [38], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 9, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [46, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [7.59449640386151e+25, 2.4378855228424072, 2.7215757369995117, 3.723472833633423, 5.718194961547852, 8.054795265197754], "accuracy": [0.0660414770245552, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.385955572128296, 2.5379512310028076, 3.1207191944122314, 4.774660110473633, 7.051634311676025, 9.412960052490234], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 5, 5, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 2, 0, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 74, 59, 56, 8, 79, 86, 52, 44], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 3, 3, 3, 8, 8, 3, 1, 6, 8, 4, 1, 5, 6, 6, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [1, 1, 2, 1, 2, 3, 2, 3, 3, 0, 5, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [77, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [38], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 6, 9, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [46, 9, 43, 71, 34]], "fitness": -0.03342857211828232, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.divide_no_nan(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), sigma), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302436590194702, 2.303558111190796, 2.3030989170074463, 2.30304217338562, 2.302783489227295, 2.30351185798645], "accuracy": [0.09417514503002167, 0.09008057415485382, 0.09417514503002167, 0.08968432247638702, 0.09496764093637466, 0.09047681838274002], "val_loss": [2.2988033294677734, 2.2988033294677734, 2.2988033294677734, 2.2988033294677734, 2.2988033294677734, 2.2988033294677734], "val_accuracy": [0.041333332657814026, 0.041333332657814026, 0.041333332657814026, 0.041333332657814026, 0.041333332657814026, 0.041333332657814026]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 5, 5, 8, 2, 2, 9, 8, 8, 0, 8, 8, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [3, 2, 0, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [43, 74, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [4, 3, 3, 3, 8, 8, 3, 1, 6, 8, 4, 1, 5, 6, 6, 8, 2, 9, 2, 9, 0, 2, 2, 0, 9], [1, 1, 2, 1, 2, 3, 2, 3, 3, 0, 5, 1, 0, 1, 4, 5, 5, 0, 5, 2, 3, 3, 4, 3, 3, 2, 3, 3, 3, 0, 5, 1, 1, 0, 3, 5, 1, 3, 3, 0, 4, 0], [77, 22, 51, 61, 35, 78, 62, 1, 12, 42, 17, 61, 53, 1, 50], [1, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [5, 3], [38], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [3, 0, 9, 3, 7, 5, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [1, 9, 43, 71, 34]], "fitness": -0.03342857211828232, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302436590194702, 2.303558111190796, 2.3030989170074463, 2.30304217338562, 2.302783489227295, 2.30351185798645], "accuracy": [0.09417514503002167, 0.09008057415485382, 0.09417514503002167, 0.08968432247638702, 0.09496764093637466, 0.09047681838274002], "val_loss": [2.2988033294677734, 2.2988033294677734, 2.2988033294677734, 2.2988033294677734, 2.2988033294677734, 2.2988033294677734], "val_accuracy": [0.041333332657814026, 0.041333332657814026, 0.041333332657814026, 0.041333332657814026, 0.041333332657814026, 0.041333332657814026]}}]