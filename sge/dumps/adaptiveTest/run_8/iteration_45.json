[{"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [1, 3, 2, 3], [48, 57], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 2, 6, 6, 0, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.7862856984138489, "mapping_values": [1, 3, 3, 1, 2, 0, 18, 18, 10, 8, 2, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.negative(tf.math.subtract(tf.math.add(beta, grad), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(grad, tf.math.add(beta, tf.math.add(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), beta)))))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.087665827912646, 1.4065621169236011, 1.0862127869530063, 0.9103741279257413, 0.842013181161257, 0.7884982171910172, 0.7951627520915934, 0.7212899397818042, 0.7013558235780643, 0.6914655030002023, 0.6692680895304903, 0.6531540010158396, 0.6279613779063836, 0.6347728012858632, 0.623087924122889, 0.609449705325255, 0.5972699292615231, 0.5983994030256502, 0.5820593540899317], "accuracy": [0.30960243940353394, 0.49966979026794434, 0.6029586791992188, 0.6643772125244141, 0.6828688383102417, 0.7024171352386475, 0.7005679607391357, 0.7230220437049866, 0.7250033020973206, 0.7342491149902344, 0.7429665923118591, 0.7548540234565735, 0.7619865536689758, 0.7548540234565735, 0.7625148296356201, 0.7692511081695557, 0.7741381525993347, 0.7765156626701355, 0.7738739848136902], "val_loss": [1.1622300488608224, 0.8097913605826241, 0.8581685679299491, 0.6997790166309902, 0.5916774613516671, 0.5759344952447074, 0.5631683894566127, 0.5416851214000157, 0.5192396640777588, 0.49955666065216064, 0.5053647415978568, 0.5038561139787946, 0.5120557716914585, 0.4737502336502075, 0.4778745344706944, 0.4741905927658081, 0.4980212279728481, 0.47155324050358366, 0.4743914944784982], "val_accuracy": [0.6383333206176758, 0.6486666798591614, 0.6056666374206543, 0.6746666431427002, 0.7303333282470703, 0.7273333072662354, 0.7609999775886536, 0.7440000176429749, 0.7770000100135803, 0.7906666398048401, 0.7943333387374878, 0.7743333578109741, 0.75, 0.8136666417121887, 0.7940000295639038, 0.8046666383743286, 0.7646666765213013, 0.7829999923706055, 0.8136666417121887]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [2, 3, 2, 3], [48, 57], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 2, 6, 6, 0, 1, 9, 4, 2, 8, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 3, 0, 3, 2, 2, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.7862856984138489, "mapping_values": [1, 3, 3, 1, 2, 0, 19, 19, 11, 8, 2, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(grad, tf.math.add(beta, tf.math.sqrt(grad))), tf.math.add(beta, tf.math.pow(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), grad)))))), tf.math.add(beta, beta)), tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.087665827912646, 1.4065621169236011, 1.0862127869530063, 0.9103741279257413, 0.842013181161257, 0.7884982171910172, 0.7951627520915934, 0.7212899397818042, 0.7013558235780643, 0.6914655030002023, 0.6692680895304903, 0.6531540010158396, 0.6279613779063836, 0.6347728012858632, 0.623087924122889, 0.609449705325255, 0.5972699292615231, 0.5983994030256502, 0.5820593540899317], "accuracy": [0.30960243940353394, 0.49966979026794434, 0.6029586791992188, 0.6643772125244141, 0.6828688383102417, 0.7024171352386475, 0.7005679607391357, 0.7230220437049866, 0.7250033020973206, 0.7342491149902344, 0.7429665923118591, 0.7548540234565735, 0.7619865536689758, 0.7548540234565735, 0.7625148296356201, 0.7692511081695557, 0.7741381525993347, 0.7765156626701355, 0.7738739848136902], "val_loss": [1.1622300488608224, 0.8097913605826241, 0.8581685679299491, 0.6997790166309902, 0.5916774613516671, 0.5759344952447074, 0.5631683894566127, 0.5416851214000157, 0.5192396640777588, 0.49955666065216064, 0.5053647415978568, 0.5038561139787946, 0.5120557716914585, 0.4737502336502075, 0.4778745344706944, 0.4741905927658081, 0.4980212279728481, 0.47155324050358366, 0.4743914944784982], "val_accuracy": [0.6383333206176758, 0.6486666798591614, 0.6056666374206543, 0.6746666431427002, 0.7303333282470703, 0.7273333072662354, 0.7609999775886536, 0.7440000176429749, 0.7770000100135803, 0.7906666398048401, 0.7943333387374878, 0.7743333578109741, 0.75, 0.8136666417121887, 0.7940000295639038, 0.8046666383743286, 0.7646666765213013, 0.7829999923706055, 0.8136666417121887]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [2, 6, 4, 9], [1, 3, 2, 3], [48, 57], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [3, 0, 6, 6, 0, 5, 6, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 3, 3, 3, 0, 3, 3, 3, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.7862856984138489, "mapping_values": [1, 3, 3, 1, 2, 0, 18, 18, 10, 8, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.negative(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.square(tf.math.add(beta, grad))))), tf.math.divide_no_nan(tf.math.pow(grad, tf.math.add(beta, tf.math.add(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), grad))))), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.087665827912646, 1.4065621169236011, 1.0862127869530063, 0.9103741279257413, 0.842013181161257, 0.7884982171910172, 0.7951627520915934, 0.7212899397818042, 0.7013558235780643, 0.6914655030002023, 0.6692680895304903, 0.6531540010158396, 0.6279613779063836, 0.6347728012858632, 0.623087924122889, 0.609449705325255, 0.5972699292615231, 0.5983994030256502, 0.5820593540899317], "accuracy": [0.30960243940353394, 0.49966979026794434, 0.6029586791992188, 0.6643772125244141, 0.6828688383102417, 0.7024171352386475, 0.7005679607391357, 0.7230220437049866, 0.7250033020973206, 0.7342491149902344, 0.7429665923118591, 0.7548540234565735, 0.7619865536689758, 0.7548540234565735, 0.7625148296356201, 0.7692511081695557, 0.7741381525993347, 0.7765156626701355, 0.7738739848136902], "val_loss": [1.1622300488608224, 0.8097913605826241, 0.8581685679299491, 0.6997790166309902, 0.5916774613516671, 0.5759344952447074, 0.5631683894566127, 0.5416851214000157, 0.5192396640777588, 0.49955666065216064, 0.5053647415978568, 0.5038561139787946, 0.5120557716914585, 0.4737502336502075, 0.4778745344706944, 0.4741905927658081, 0.4980212279728481, 0.47155324050358366, 0.4743914944784982], "val_accuracy": [0.6383333206176758, 0.6486666798591614, 0.6056666374206543, 0.6746666431427002, 0.7303333282470703, 0.7273333072662354, 0.7609999775886536, 0.7440000176429749, 0.7770000100135803, 0.7906666398048401, 0.7943333387374878, 0.7743333578109741, 0.75, 0.8136666417121887, 0.7940000295639038, 0.8046666383743286, 0.7646666765213013, 0.7829999923706055, 0.8136666417121887]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [1, 3, 2, 3], [79, 57], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [6, 5, 6, 2, 2, 3, 9, 8, 2, 1, 5, 9, 8, 9, 1, 0, 9, 0, 0, 5, 1, 7, 8, 6], [1, 2, 3, 3, 1, 3, 2, 3, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [1, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.37542855739593506, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(sigma, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.651197819740639, 2.3088745739576195, 2.245373915057723, 2.2672884236268867, 2.286035792765569, 2.3080665624656573, 2.3046990476028086, 2.3040683056306466, 2.303501496902625], "accuracy": [0.20591731369495392, 0.11478008329868317, 0.16470743715763092, 0.14119666814804077, 0.1896711140871048, 0.09998679161071777, 0.10394927859306335, 0.09787346422672272, 0.09959053993225098], "val_loss": [2.0408928053719655, 1.9245059149605888, 1.9739935057503837, 1.7629269872392928, 1.9777461460658483, 1.9763800757271903, 1.9736448696681432, 1.9738022259303503, 1.9735252516610282], "val_accuracy": [0.09733333438634872, 0.19366666674613953, 0.10400000214576721, 0.3956666588783264, 0.09966666996479034, 0.10400000214576721, 0.10400000214576721, 0.10233332961797714, 0.10400000214576721]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [1, 1, 0, 1, 0, 1, 0], [7, 6, 4, 9], [1, 3, 2, 3], [48, 57], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [0, 7, 0, 6, 0, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.3488571345806122, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.335659224674324, 2.3052205518567095, 2.268125875798262, 2.961547438715112, 2.290160077170232, 2.321576544574349, 2.3030778402508116, 2.3030794020168943], "accuracy": [0.18016114830970764, 0.09813763201236725, 0.14238542318344116, 0.14581957459449768, 0.12521463632583618, 0.10381719470024109, 0.10289261490106583, 0.09945846349000931], "val_loss": [1.9777520043509347, 1.9732319968087333, 1.6725711822509766, 1.9736650330679757, 1.9710721288408553, 1.9739843777247839, 1.973696299961635, 1.9732623781476701], "val_accuracy": [0.09833333641290665, 0.09933333098888397, 0.351666659116745, 0.10400000214576721, 0.1263333261013031, 0.10233332961797714, 0.0976666659116745, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1], [1, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [2, 1, 2, 3], [79, 57], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 0, 6, 6, 0, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 1, 0, 3, 0, 1, 3, 0, 0, 0, 5], [58, 45, 43, 93, 81, 78], [0, 0, 0, 1, 0, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 3, 9, 2, 9], [2, 2, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 6, 5, 1, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.negative(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 0, 2, 3], [79, 73], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [5, 4, 6, 6, 0, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 2, 3, 0, 3, 1, 3, 3, 0], [58, 66, 43, 93, 81, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 2, 11, 11, 7, 4, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(grad, grad)), tf.math.negative(tf.math.add(beta, tf.math.subtract(beta, grad)))), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07938185334205627, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0], [1, 1, 1, 1, 0, 1, 0], [2, 4, 4, 9], [2, 3, 2, 3], [79, 57], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 3, 5, 5, 2, 3, 2, 4, 2, 6, 4, 9, 8, 9, 1, 0, 9, 0, 0, 5, 1, 7, 8, 6], [3, 3, 3, 1, 0, 3, 2, 3, 3, 0, 0, 0, 5], [58, 45, 43, 93, 81, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 4, 2, 9], [3, 1, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 19, 19, 10, 9, 1, 1, 1, 0, 1, 0, 8, 5, 3, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.square(tf.math.add(grad, tf.math.multiply(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)), alpha))))), tf.math.pow(tf.math.add(beta, tf.math.add(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.divide_no_nan(grad, beta)))), grad))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.pow(tf.math.add(sigma, alpha), sigma), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0], [0, 1, 0, 1, 0, 1, 0], [7, 6, 4, 9], [1, 3, 2, 3], [79, 57], [1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [1, 3, 9, 6, 0, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 1, 2, 3, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 3, 9, 2, 9], [0, 2, 3, 1], [76, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(beta, alpha), grad))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0], [1, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [2, 3, 2, 3], [79, 57], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [0, 7, 0, 6, 0, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07938185334205627, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0], [1, 1, 0, 1, 0, 1, 0], [7, 6, 4, 9], [0, 3, 2, 3], [81, 57], [0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], [1, 2, 6, 6, 2, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 3, 3, 3, 0], [80, 40, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 2, 6, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 17, 17, 9, 8, 2, 1, 1, 0, 1, 0, 6, 3, 3, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))), grad)), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.add(sigma, sigma)))", "other_info": {"loss": [2.3034199633854664, 2.3073990965689397, 2.31235488244272, 2.3214826792332914, 2.3348574667968265, 2.4848657565708283, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0886276587843895, 0.08519349992275238, 0.07766477018594742, 0.07238145917654037, 0.07660810649394989, 0.08228767663240433, 0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9731698036193848, 1.9767591612679618, 1.9820784160069056, 1.9897262709481376, 2.006148133959089, 1801.364955357143, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.027666667476296425, 0.027666667476296425, 0.03566666692495346, 0.06199999898672104, 0.09533333033323288, 0.10000000149011612, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0], [1, 1, 0, 1, 0, 1, 0], [7, 6, 4, 9], [2, 3, 2, 3], [79, 57], [1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 7, 0, 6, 0, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 5, 3, 0, 3, 2, 3, 3, 0], [42, 71, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [9, 3, 2, 6, 9], [2, 3, 3, 1], [43, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 7, 3, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(alpha, grad))), tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [98.38455566826467, 26263.193781808255, 6691899.95966517, 1718471594.9259014, 433546643803.60004, 112382490651212.89], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [856.2119663783482, 219567.07589285713, 56208133.71428572, 14389280768.0, 3683655876608.0, 943015904411648.0], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [2, 1, 2, 3], [79, 57], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [5, 2, 1, 6, 5, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 0, 3, 3, 0, 3, 2, 3, 3, 0], [42, 71, 62, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 4, 9, 2, 9], [3, 3, 3, 1], [98, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 19, 19, 11, 8, 3, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.square(tf.math.subtract(tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.math.pow(grad, tf.math.add(beta, tf.math.add(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.pow(grad, beta)), tf.math.add(beta, grad))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [2, 3, 2, 3], [79, 57], [1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [8, 5, 6, 3, 2, 3, 9, 8, 2, 1, 4, 9, 8, 9, 1, 0, 9, 0, 0, 5, 1, 7, 8, 6], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [76, 96, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 14, 14, 9, 5, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.square(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.multiply(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))))), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, grad)))), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07938185334205627, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 3, 2, 3], [79, 57], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [0, 7, 0, 6, 0, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 4, 0, 3, 0, 1, 3, 0, 0, 0, 5], [58, 45, 43, 93, 81, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 2, 6, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 8, 5, 3, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.math.divide_no_nan(sigma, sigma), sigma), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [8348.857118606726, 2.303462025322824, 2.3032903034201135, 2.303133433190445, 2.303040800124836, 2.3029705232963615, 2.302872368373324, 2.3028472129301294], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09853387624025345, 0.09813763201236725, 0.09430722147226334, 0.0944393053650856, 0.09694888442754745, 0.0948355570435524], "val_loss": [1.9747581481933594, 1.9745727266584123, 1.9744257926940918, 1.9742822647094727, 1.974184308733259, 1.9740955489022392, 1.9740135329110282, 1.9739618301391602], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [8, 6, 4, 9], [0, 3, 2, 3], [79, 57], [0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 2, 1, 6, 4, 3, 0, 8, 2, 1, 4, 9, 8, 9, 1, 0, 9, 0, 0, 5, 1, 7, 8, 6], [1, 2, 3, 3, 0, 3, 2, 3, 3, 0], [42, 71, 43, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 9, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 2, 2, 1, 1, 1, 17, 17, 9, 8, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.subtract(tf.math.divide_no_nan(alpha, tf.math.add(beta, beta)), tf.math.add(beta, grad)), tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.sqrt(grad)))), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3023726159177516, 2.302474521453811, 2.3018609904310785, 2.3018633294902253, 2.3016678026685815, 2.302028534356015], "accuracy": [0.09206181764602661, 0.08928807079792023, 0.08968432247638702, 0.0944393053650856, 0.08928807079792023, 0.09100515395402908], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 3, 2, 3], [79, 57], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [1, 2, 6, 2, 0, 1, 6, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 0, 3, 3, 0, 3, 2, 3, 3, 0], [42, 71, 5, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 1, 3, 1], [41, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 3, 3, 1, 2, 1, 10, 10, 5, 5, 2, 5, 4, 2, 2, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(tf.math.negative(tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3023726159177516, 2.302474521453811, 2.3018609904310785, 2.3018633294902253, 2.3016678026685815, 2.302028534356015], "accuracy": [0.09206181764602661, 0.08928807079792023, 0.08968432247638702, 0.0944393053650856, 0.08928807079792023, 0.09100515395402908], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0], [1, 1, 0, 1, 0, 1, 0], [7, 6, 4, 9], [0, 3, 2, 3], [79, 57], [1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [6, 5, 6, 6, 2, 3, 9, 8, 2, 1, 4, 9, 8, 9, 1, 0, 9, 0, 0, 5, 1, 7, 8, 6], [1, 2, 3, 3, 0, 3, 2, 3, 3, 0], [3, 40, 43, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [6, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [6, 9, 2, 6, 9], [3, 3, 3, 1], [43, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 7, 5, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(alpha, tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma), sigma))", "other_info": {"loss": [2.3023726159177516, 2.302474521453811, 2.3018609904310785, 2.3018633294902253, 2.3016678026685815, 2.302028534356015], "accuracy": [0.09206181764602661, 0.08928807079792023, 0.08968432247638702, 0.0944393053650856, 0.08928807079792023, 0.09100515395402908], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [0, 6, 4, 9], [1, 3, 2, 3], [48, 57], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [3, 2, 6, 6, 0, 3, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 2, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 2, 2, 1, 1, 0, 20, 20, 12, 8, 3, 5, 4, 2, 2, 0, 4, 3, 1, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.negative(tf.math.add(beta, alpha)), tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), tf.math.pow(tf.math.add(grad, tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, grad))), tf.math.add(beta, beta))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3023726159177516, 2.302474521453811, 2.3018609904310785, 2.3018633294902253, 2.3016678026685815, 2.302028534356015], "accuracy": [0.09206181764602661, 0.08928807079792023, 0.08968432247638702, 0.0944393053650856, 0.08928807079792023, 0.09100515395402908], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0], [0, 1, 0, 1, 0, 1, 0], [7, 6, 4, 9], [0, 3, 2, 3], [79, 57], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [0, 7, 0, 6, 0, 1, 9, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [42, 30, 43, 84, 1, 78], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [3, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 7, 7, 4, 3, 2, 2, 2, 1, 1, 0, 6, 4, 3, 1, 0, 5, 3, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.3023726159177516, 2.302474521453811, 2.3018609904310785, 2.3018633294902253, 2.3016678026685815, 2.302028534356015], "accuracy": [0.09206181764602661, 0.08928807079792023, 0.08968432247638702, 0.0944393053650856, 0.08928807079792023, 0.09100515395402908], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]