[{"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.7811428308486938, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 6, 6, 2, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(grad, tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta))), tf.math.add(beta, tf.math.pow(tf.math.negative(grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.2333444800784386, 1.8438192211074789, 1.3206655561427998, 1.10088472313743, 0.9689049445060203, 0.9237167785243587, 0.8606019290431048, 0.8477652018348286, 0.796250637937074, 0.7602388876981235, 0.7397308290327513, 0.7218326664147297, 0.7210753754838236, 0.6877540176208575, 0.6817251774282534, 0.6587693824145804, 0.6612619223092069, 0.6496197704657304, 0.6405037301894523, 0.6462907728785459], "accuracy": [0.23339056968688965, 0.43851539492607117, 0.5484083890914917, 0.5989961624145508, 0.6472064256668091, 0.6672830581665039, 0.6864351034164429, 0.6865671873092651, 0.7033417224884033, 0.7143045663833618, 0.7239466309547424, 0.7320036888122559, 0.7277770638465881, 0.7407211661338806, 0.7464007139205933, 0.7519482374191284, 0.7556465268135071, 0.7597411274909973, 0.7569673657417297, 0.7540615797042847], "val_loss": [1.7671243122645788, 1.1488043580736433, 0.8255096673965454, 0.7214870452880859, 0.7251437221254621, 0.6196490526199341, 0.6442629269191197, 0.5864121062414986, 0.5694870097296578, 0.549557992390224, 0.5498323610850743, 0.5210437604359218, 0.5227370943341937, 0.5036840268543789, 0.49653431347438265, 0.5041896615709577, 0.5148112092699323, 0.4866905723299299, 0.49155369826725553, 0.4831011976514544], "val_accuracy": [0.4493333399295807, 0.6003333330154419, 0.6859999895095825, 0.7016666531562805, 0.6840000152587891, 0.7429999709129333, 0.7046666741371155, 0.7443333268165588, 0.753333330154419, 0.762666642665863, 0.7559999823570251, 0.7816666960716248, 0.7873333096504211, 0.7919999957084656, 0.7973333597183228, 0.7713333368301392, 0.7733333110809326, 0.7973333597183228, 0.7879999876022339, 0.7953333258628845]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 6, 0, 1], [2, 0, 0, 3, 1, 0], [5, 57, 79], [1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [5, 4, 2, 6, 0, 2, 8, 0, 2, 4, 6, 5, 3, 8, 1, 5, 9, 0, 6, 2, 4, 8, 1, 7, 8], [4, 0, 3, 3, 0, 1, 2, 3, 3, 0, 1, 2], [85, 54, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [56, 38]], "fitness": -0.7811428308486938, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 5, 1, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(sigma, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.2333444800784386, 1.8438192211074789, 1.3206655561427998, 1.10088472313743, 0.9689049445060203, 0.9237167785243587, 0.8606019290431048, 0.8477652018348286, 0.796250637937074, 0.7602388876981235, 0.7397308290327513, 0.7218326664147297, 0.7210753754838236, 0.6877540176208575, 0.6817251774282534, 0.6587693824145804, 0.6612619223092069, 0.6496197704657304, 0.6405037301894523, 0.6462907728785459], "accuracy": [0.23339056968688965, 0.43851539492607117, 0.5484083890914917, 0.5989961624145508, 0.6472064256668091, 0.6672830581665039, 0.6864351034164429, 0.6865671873092651, 0.7033417224884033, 0.7143045663833618, 0.7239466309547424, 0.7320036888122559, 0.7277770638465881, 0.7407211661338806, 0.7464007139205933, 0.7519482374191284, 0.7556465268135071, 0.7597411274909973, 0.7569673657417297, 0.7540615797042847], "val_loss": [1.7671243122645788, 1.1488043580736433, 0.8255096673965454, 0.7214870452880859, 0.7251437221254621, 0.6196490526199341, 0.6442629269191197, 0.5864121062414986, 0.5694870097296578, 0.549557992390224, 0.5498323610850743, 0.5210437604359218, 0.5227370943341937, 0.5036840268543789, 0.49653431347438265, 0.5041896615709577, 0.5148112092699323, 0.4866905723299299, 0.49155369826725553, 0.4831011976514544], "val_accuracy": [0.4493333399295807, 0.6003333330154419, 0.6859999895095825, 0.7016666531562805, 0.6840000152587891, 0.7429999709129333, 0.7046666741371155, 0.7443333268165588, 0.753333330154419, 0.762666642665863, 0.7559999823570251, 0.7816666960716248, 0.7873333096504211, 0.7919999957084656, 0.7973333597183228, 0.7713333368301392, 0.7733333110809326, 0.7973333597183228, 0.7879999876022339, 0.7953333258628845]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57, 79], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 0, 2, 3, 0, 1, 2, 3, 3, 0], [85, 54, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [56, 38]], "fitness": -0.3317142724990845, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.305311200074264, 2.315826134989684, 2.3031487468368796, 2.303105682319638, 2.3030949238820115, 2.302927037649592], "accuracy": [0.21991810202598572, 0.12217672914266586, 0.09351472556591034, 0.09932637959718704, 0.0956280529499054, 0.09774138033390045], "val_loss": [1.5537529332297189, 1.9739201409476144, 1.9735849244253976, 1.9736501829964774, 1.9735105378287179, 1.9734395572117396], "val_accuracy": [0.3409999907016754, 0.09700000286102295, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.09700000286102295]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [5, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [7, 6, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 1, 2, 4, 0, 1, 2, 3, 3, 0], [19, 54, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [56, 38]], "fitness": -0.3317142724990845, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, beta), tf.math.divide_no_nan(alpha, tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.305311200074264, 2.315826134989684, 2.3031487468368796, 2.303105682319638, 2.3030949238820115, 2.302927037649592], "accuracy": [0.21991810202598572, 0.12217672914266586, 0.09351472556591034, 0.09932637959718704, 0.0956280529499054, 0.09774138033390045], "val_loss": [1.5537529332297189, 1.9739201409476144, 1.9735849244253976, 1.9736501829964774, 1.9735105378287179, 1.9734395572117396], "val_accuracy": [0.3409999907016754, 0.09700000286102295, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [5, 6, 2, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 8, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 0, 2, 4, 4, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 4, 2, 2, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.sqrt(beta), tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [619024280.496116, 11747057267.438383, 53578636620.586975, 149480523147.61484, 319812205072.839, 592805091587.4152], "accuracy": [0.09589222073554993, 0.1018359512090683, 0.0952318087220192, 0.1010434553027153, 0.10474177449941635, 0.09840179979801178], "val_loss": [2314153472.0, 18506183241.142857, 62450293613.71429, 148022624256.0, 289093170907.4286, 499543591204.5714], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [3, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57, 79], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [5, 4, 2, 6, 2, 2, 8, 0, 2, 4, 6, 5, 3, 8, 1, 5, 9, 0, 6, 2, 4, 8, 1, 7, 8], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0], [6, 3, 9, 3, 9], [2, 3, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.pow(tf.math.add(grad, tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(beta, sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09166556596755981, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [0, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [7, 4, 1, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 0, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 21, 21, 11, 10, 4, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.add(beta, alpha), beta)))), tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, grad))))))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3027824928511436, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 6, 0, 1], [3, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 7, 4, 0, 8, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 1, 2, 3, 3, 0], [85, 54, 99, 84, 1, 78, 2, 15], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [7, 3], [], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [17, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 2, 1, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.pow(tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [13.687831716924185, 119.68831319208111, 416.2449674332981, 1029.8960666014077, 2083.465052096662, 3738.748147356071], "accuracy": [0.09470347315073013, 0.10302469879388809, 0.09509972482919693, 0.1006472036242485, 0.10460969805717468, 0.09866596013307571], "val_loss": [32.54413495744978, 158.93433925083704, 448.907958984375, 984.5518624441964, 1846.4984654017858, 3111.9255719866073], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [39, 55], [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 5, 6, 5, 8, 8, 0, 2, 4, 4, 1, 4, 2, 1, 5, 9, 0, 8, 2, 4, 8, 1, 7, 8], [2, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [2, 3], [], [1, 1, 1, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 1, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 2, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, beta), tf.math.pow(tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.square(beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3027824928511436, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 6, 0, 1], [2, 0, 0, 3, 1, 0], [5, 57, 79], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 4, 2, 4, 8, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 4, 1, 3, 3, 0], [85, 54, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 5, 3, 9], [2, 1, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 7, 7, 2, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)))))), grad)))), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.square(beta), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.13089419901371002, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [5, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [5, 0, 2, 0, 0, 2, 8, 0, 2, 4, 6, 5, 3, 8, 1, 5, 9, 0, 6, 2, 4, 8, 1, 7, 8], [2, 0, 2, 3, 0, 1, 2, 3, 3, 0], [85, 54, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [1, 3], [], [1, 1, 1, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [1, 3, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.negative(tf.math.add(beta, tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07555144280195236, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], [1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 4, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 2, 3, 3, 0, 1, 2, 3, 3, 0, 1, 2], [28, 16, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 1, 1, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 1, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3027824928511436, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 6, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 4, 2, 4, 0, 1, 2, 3, 3, 0], [78, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 6, 6, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, grad)), tf.math.add(beta, beta))), tf.math.add(beta, tf.math.pow(tf.math.negative(grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [619024280.496116, 11747057267.438383, 53578636620.586975, 149480523147.61484, 319812205072.839, 592805091587.4152], "accuracy": [0.09589222073554993, 0.1018359512090683, 0.0952318087220192, 0.1010434553027153, 0.10474177449941635, 0.09840179979801178], "val_loss": [2314153472.0, 18506183241.142857, 62450293613.71429, 148022624256.0, 289093170907.4286, 499543591204.5714], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [5, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [7, 3, 2, 4, 0, 4, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 0, 2, 4, 0, 1, 2, 3, 3, 0], [85, 54, 99, 84, 1, 78, 2, 15], [0, 0, 0, 1, 0], [0, 0, 0, 1], [0, 3, 9], [2, 3], [45], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [56, 89]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 7, 7, 2, 4, 3, 3, 0, 1, 4, 3, 1, 2], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, beta), tf.math.multiply(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.pow(grad, tf.math.negative(tf.math.add(beta, tf.math.pow(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(alpha, tf.math.add(beta, beta)))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [618387990.7991143, 11735044199.60375, 53523857738.01717, 149327619473.02496, 319485484278.0251, 592194648876.3291], "accuracy": [0.09589222073554993, 0.1018359512090683, 0.09509972482919693, 0.1010434553027153, 0.10487385839223862, 0.09840179979801178], "val_loss": [2311774134.857143, 18487284882.285713, 62386365586.28571, 147871339081.14285, 288801601243.4286, 499023497508.5714], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [8, 4, 2, 8, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 0, 2, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [3, 3, 0, 7], [1, 3], [], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [1, 3, 3, 1], [56, 38]], "fitness": -0.09000000357627869, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 8, 6, 4, 2, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), sigma)), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, sigma))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [13.831133104822403, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19878484308719635, 0.09391097724437714, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [36.8302252633231, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [5, 4, 9, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 4, 0, 1, 2, 3, 3, 0], [28, 87, 99, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 3, 7, 3, 9, 6, 1, 1], [0, 3, 3, 1, 2, 1], [51, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 3, 1, 1, 5, 4, 2, 2, 0, 14, 8, 6, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.pow(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), sigma), tf.math.divide_no_nan(sigma, tf.math.subtract(alpha, tf.math.subtract(beta, alpha)))))", "other_info": {"loss": [2.3029948052099085, 2.3026725720924675, 2.302607479537593, 2.301728314821825, 2.302814800316364, 2.3024699743696884], "accuracy": [0.09087307006120682, 0.09391097724437714, 0.09100515395402908, 0.09219389408826828, 0.09153348207473755, 0.08915598690509796], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], [8, 4, 2, 4, 8, 2, 2, 2, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 0, 3, 4, 0, 1, 2, 3, 3, 0], [85, 54, 99, 84, 1, 78, 2, 15], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [2, 1, 3, 1], [13, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3029948052099085, 2.3026725720924675, 2.302607479537593, 2.301728314821825, 2.302814800316364, 2.3024699743696884], "accuracy": [0.09087307006120682, 0.09391097724437714, 0.09100515395402908, 0.09219389408826828, 0.09153348207473755, 0.08915598690509796], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [9, 4, 2, 8, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 3, 2, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [1, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [2, 3, 9, 3, 9], [0, 3, 3, 1], [56, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 5, 4, 2, 2, 0, 7, 4, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)), sigma)", "other_info": {"loss": [2.3029948052099085, 2.3026725720924675, 2.302607479537593, 2.301728314821825, 2.302814800316364, 2.3024699743696884], "accuracy": [0.09087307006120682, 0.09391097724437714, 0.09100515395402908, 0.09219389408826828, 0.09153348207473755, 0.08915598690509796], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 2, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 3, 3, 1], [56, 38]], "fitness": -0.03799999877810478, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(grad, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(sigma, sigma)))", "other_info": {"loss": [2.3033387575639535, 2.3041662762366926, 2.3054232718906444, 2.305793448398929, 2.309069853700651, 2.310727385387539], "accuracy": [0.09008057415485382, 0.08968432247638702, 0.08492933213710785, 0.08677849918603897, 0.08228767663240433, 0.07726852595806122], "val_loss": [1.9714298248291016, 1.9725539343697684, 1.9736569268362862, 1.9748548780168806, 1.9766653605869837, 1.978557518550328], "val_accuracy": [0.03566666692495346, 0.029666665941476822, 0.027666667476296425, 0.02866666577756405, 0.02566666714847088, 0.02666666731238365]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 4, 2, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 4, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 3, 3, 1], [56, 38]], "fitness": -0.03799999877810478, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 9, 8, 1, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))), tf.math.add(beta, grad)), grad)))))), tf.math.add(beta, alpha))), tf.math.add(tf.math.add(beta, beta), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(sigma, sigma)))", "other_info": {"loss": [2.3033387575639535, 2.3041662762366926, 2.3054232718906444, 2.305793448398929, 2.309069853700651, 2.310727385387539], "accuracy": [0.09008057415485382, 0.08968432247638702, 0.08492933213710785, 0.08677849918603897, 0.08228767663240433, 0.07726852595806122], "val_loss": [1.9714298248291016, 1.9725539343697684, 1.9736569268362862, 1.9748548780168806, 1.9766653605869837, 1.978557518550328], "val_accuracy": [0.03566666692495346, 0.029666665941476822, 0.027666667476296425, 0.02866666577756405, 0.02566666714847088, 0.02666666731238365]}}]