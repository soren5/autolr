[{"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 8, 6, 4, 0, 6, 6, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [42, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 2, 3, 6], [1, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.8339999914169312, "mapping_values": [1, 1, 1, 0, 1, 0, 21, 21, 11, 10, 4, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.divide_no_nan(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.add(tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(beta, grad), beta))), tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, grad)))))))))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(alpha, alpha), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.195651108483912, 2.0151486226737996, 1.6850891117217628, 1.1960690443258495, 0.8564954209384381, 0.7148317287484999, 0.6986865695630398, 0.6545167741931708, 0.5948282406157223, 0.6145694996891493, 0.546639671092335, 0.5667785994050178, 0.5352329060212889, 0.515561931853785, 0.5287970304961501, 0.4906565629023571, 0.48762966272239244, 0.46573092802136784, 0.4409404204994255, 0.4463998857758159, 0.4653934100521019, 0.4480162151753233, 0.45132421533964756, 0.40921408185208114, 0.4130856426455609, 0.4107716638595358], "accuracy": [0.2479196935892105, 0.30841368436813354, 0.4139479696750641, 0.5765420794487, 0.6741513609886169, 0.7294940948486328, 0.7337207794189453, 0.7534011602401733, 0.7708360552787781, 0.770439863204956, 0.7917051911354065, 0.7821952104568481, 0.7980451583862305, 0.8079513907432556, 0.7992339134216309, 0.8149517774581909, 0.8128384351730347, 0.8230088353157043, 0.8385946154594421, 0.8300092220306396, 0.8195747137069702, 0.8271034359931946, 0.8249900937080383, 0.8520671129226685, 0.8436138033866882, 0.8451988101005554], "val_loss": [1.8838163784572057, 1.4609786101749964, 0.8192052841186523, 0.6613733087267194, 0.566777127129691, 0.5724124908447266, 0.49140640667506624, 0.4738437107631138, 0.47229269572666716, 0.44681526933397564, 0.4692998783929007, 0.4519284963607788, 0.42046120337077547, 0.4457738995552063, 0.4133587990488325, 0.40905490943363737, 0.42149237224033903, 0.3742133378982544, 0.378740199974605, 0.459569445678166, 0.3536273581641061, 0.4221967543874468, 0.35949569940567017, 0.37774460656302317, 0.3731960483959743, 0.35875321286065237], "val_accuracy": [0.32633334398269653, 0.500333309173584, 0.6570000052452087, 0.7023333311080933, 0.7386666536331177, 0.7296666502952576, 0.7853333353996277, 0.7836666703224182, 0.7789999842643738, 0.8036666512489319, 0.7699999809265137, 0.8080000281333923, 0.8076666593551636, 0.7816666960716248, 0.812666654586792, 0.8243333101272583, 0.8056666851043701, 0.8446666598320007, 0.8343333601951599, 0.7836666703224182, 0.8519999980926514, 0.8243333101272583, 0.8443333506584167, 0.8363333344459534, 0.8339999914169312, 0.8513333201408386]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 6, 4, 0, 6, 6, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 3, 0, 3, 2, 3, 0, 0], [42, 47, 79, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 2, 3, 6], [1, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.8339999914169312, "mapping_values": [1, 1, 1, 0, 1, 0, 20, 20, 11, 9, 4, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.add(tf.math.add(beta, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(beta, grad), beta))), tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(alpha, alpha), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.195651108483912, 2.0151486226737996, 1.6850891117217628, 1.1960690443258495, 0.8564954209384381, 0.7148317287484999, 0.6986865695630398, 0.6545167741931708, 0.5948282406157223, 0.6145694996891493, 0.546639671092335, 0.5667785994050178, 0.5352329060212889, 0.515561931853785, 0.5287970304961501, 0.4906565629023571, 0.48762966272239244, 0.46573092802136784, 0.4409404204994255, 0.4463998857758159, 0.4653934100521019, 0.4480162151753233, 0.45132421533964756, 0.40921408185208114, 0.4130856426455609, 0.4107716638595358], "accuracy": [0.2479196935892105, 0.30841368436813354, 0.4139479696750641, 0.5765420794487, 0.6741513609886169, 0.7294940948486328, 0.7337207794189453, 0.7534011602401733, 0.7708360552787781, 0.770439863204956, 0.7917051911354065, 0.7821952104568481, 0.7980451583862305, 0.8079513907432556, 0.7992339134216309, 0.8149517774581909, 0.8128384351730347, 0.8230088353157043, 0.8385946154594421, 0.8300092220306396, 0.8195747137069702, 0.8271034359931946, 0.8249900937080383, 0.8520671129226685, 0.8436138033866882, 0.8451988101005554], "val_loss": [1.8838163784572057, 1.4609786101749964, 0.8192052841186523, 0.6613733087267194, 0.566777127129691, 0.5724124908447266, 0.49140640667506624, 0.4738437107631138, 0.47229269572666716, 0.44681526933397564, 0.4692998783929007, 0.4519284963607788, 0.42046120337077547, 0.4457738995552063, 0.4133587990488325, 0.40905490943363737, 0.42149237224033903, 0.3742133378982544, 0.378740199974605, 0.459569445678166, 0.3536273581641061, 0.4221967543874468, 0.35949569940567017, 0.37774460656302317, 0.3731960483959743, 0.35875321286065237], "val_accuracy": [0.32633334398269653, 0.500333309173584, 0.6570000052452087, 0.7023333311080933, 0.7386666536331177, 0.7296666502952576, 0.7853333353996277, 0.7836666703224182, 0.7789999842643738, 0.8036666512489319, 0.7699999809265137, 0.8080000281333923, 0.8076666593551636, 0.7816666960716248, 0.812666654586792, 0.8243333101272583, 0.8056666851043701, 0.8446666598320007, 0.8343333601951599, 0.7836666703224182, 0.8519999980926514, 0.8243333101272583, 0.8443333506584167, 0.8363333344459534, 0.8339999914169312, 0.8513333201408386]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 3, 6, 4, 0, 6, 6, 6, 5, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 2, 0, 3, 2, 3, 3, 0], [42, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 2, 3, 6], [1, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.8339999914169312, "mapping_values": [1, 1, 1, 0, 1, 0, 21, 21, 11, 10, 4, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta))), tf.math.divide_no_nan(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.divide_no_nan(beta, tf.math.square(tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.add(beta, grad), beta))))))), tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, grad)))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(alpha, alpha), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.195651108483912, 2.0151486226737996, 1.6850891117217628, 1.1960690443258495, 0.8564954209384381, 0.7148317287484999, 0.6986865695630398, 0.6545167741931708, 0.5948282406157223, 0.6145694996891493, 0.546639671092335, 0.5667785994050178, 0.5352329060212889, 0.515561931853785, 0.5287970304961501, 0.4906565629023571, 0.48762966272239244, 0.46573092802136784, 0.4409404204994255, 0.4463998857758159, 0.4653934100521019, 0.4480162151753233, 0.45132421533964756, 0.40921408185208114, 0.4130856426455609, 0.4107716638595358], "accuracy": [0.2479196935892105, 0.30841368436813354, 0.4139479696750641, 0.5765420794487, 0.6741513609886169, 0.7294940948486328, 0.7337207794189453, 0.7534011602401733, 0.7708360552787781, 0.770439863204956, 0.7917051911354065, 0.7821952104568481, 0.7980451583862305, 0.8079513907432556, 0.7992339134216309, 0.8149517774581909, 0.8128384351730347, 0.8230088353157043, 0.8385946154594421, 0.8300092220306396, 0.8195747137069702, 0.8271034359931946, 0.8249900937080383, 0.8520671129226685, 0.8436138033866882, 0.8451988101005554], "val_loss": [1.8838163784572057, 1.4609786101749964, 0.8192052841186523, 0.6613733087267194, 0.566777127129691, 0.5724124908447266, 0.49140640667506624, 0.4738437107631138, 0.47229269572666716, 0.44681526933397564, 0.4692998783929007, 0.4519284963607788, 0.42046120337077547, 0.4457738995552063, 0.4133587990488325, 0.40905490943363737, 0.42149237224033903, 0.3742133378982544, 0.378740199974605, 0.459569445678166, 0.3536273581641061, 0.4221967543874468, 0.35949569940567017, 0.37774460656302317, 0.3731960483959743, 0.35875321286065237], "val_accuracy": [0.32633334398269653, 0.500333309173584, 0.6570000052452087, 0.7023333311080933, 0.7386666536331177, 0.7296666502952576, 0.7853333353996277, 0.7836666703224182, 0.7789999842643738, 0.8036666512489319, 0.7699999809265137, 0.8080000281333923, 0.8076666593551636, 0.7816666960716248, 0.812666654586792, 0.8243333101272583, 0.8056666851043701, 0.8446666598320007, 0.8343333601951599, 0.7836666703224182, 0.8519999980926514, 0.8243333101272583, 0.8443333506584167, 0.8363333344459534, 0.8339999914169312, 0.8513333201408386]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 8, 6, 4, 0, 6, 6, 4, 2, 9, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [42, 28, 99, 0, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [1, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.8077142834663391, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))))), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [1.9784212413795903, 1.4838859006130716, 1.0133576645528037, 0.882653244986211, 0.8358984922043258, 0.7621444835166543, 0.7374154410153143, 0.7133413132360314, 0.6577333719691644, 0.666959607102033, 0.63716506695845, 0.6130602576036369, 0.6337791396846956, 0.5907487449566009, 0.6040609305041293, 0.5730191330631978, 0.5601702916182862, 0.5333658503802728, 0.5376925379718851, 0.5158544114717418, 0.5047437416414433, 0.5148712894770416, 0.5001677536000791, 0.47521038556363465, 0.48484569989128073, 0.468823287795957, 0.5061987660753413], "accuracy": [0.3415665030479431, 0.4711398780345917, 0.6243560910224915, 0.6704530715942383, 0.681547999382019, 0.7107383608818054, 0.7206445932388306, 0.7306828498840332, 0.7540615797042847, 0.7475894689559937, 0.7564390301704407, 0.7629110813140869, 0.7601373791694641, 0.7741381525993347, 0.7708360552787781, 0.7839123010635376, 0.7841764688491821, 0.8010830879211426, 0.8009510040283203, 0.8096684813499451, 0.811649739742279, 0.8078193068504333, 0.8083476424217224, 0.82683926820755, 0.8171972036361694, 0.8231409192085266, 0.8121780753135681], "val_loss": [1.5704552786690849, 0.784545762198312, 0.7627409866877964, 0.6307068552289691, 0.5919393301010132, 0.6196305240903582, 0.545507414000375, 0.5286029747554234, 0.5459026098251343, 0.5201013428824288, 0.4892609119415283, 0.5651774406433105, 0.4643385921205793, 0.4785972663334438, 0.4641516889844622, 0.46778268473488943, 0.4861326047352382, 0.4399223583085196, 0.43840040479387554, 0.4184514880180359, 0.4363709773336138, 0.41069544213158743, 0.40952545404434204, 0.4224724428994315, 0.3992723226547241, 0.4026938761983599, 0.41322008201054167], "val_accuracy": [0.3720000088214874, 0.6736666560173035, 0.640999972820282, 0.7126666903495789, 0.7310000061988831, 0.6953333616256714, 0.7426666617393494, 0.7786666750907898, 0.7516666650772095, 0.7749999761581421, 0.781000018119812, 0.7559999823570251, 0.800000011920929, 0.778333306312561, 0.7916666865348816, 0.7873333096504211, 0.7870000004768372, 0.8046666383743286, 0.8076666593551636, 0.8113333582878113, 0.8100000023841858, 0.82833331823349, 0.82833331823349, 0.8106666803359985, 0.8146666884422302, 0.828000009059906, 0.8253333568572998]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0], [9, 1, 3, 9, 6, 6, 6, 4, 3, 1, 0, 0, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 3, 3, 2, 3, 0, 0], [11, 47, 99, 84, 1, 75, 52], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.8077142834663391, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [1.9784212413795903, 1.4838859006130716, 1.0133576645528037, 0.882653244986211, 0.8358984922043258, 0.7621444835166543, 0.7374154410153143, 0.7133413132360314, 0.6577333719691644, 0.666959607102033, 0.63716506695845, 0.6130602576036369, 0.6337791396846956, 0.5907487449566009, 0.6040609305041293, 0.5730191330631978, 0.5601702916182862, 0.5333658503802728, 0.5376925379718851, 0.5158544114717418, 0.5047437416414433, 0.5148712894770416, 0.5001677536000791, 0.47521038556363465, 0.48484569989128073, 0.468823287795957, 0.5061987660753413], "accuracy": [0.3415665030479431, 0.4711398780345917, 0.6243560910224915, 0.6704530715942383, 0.681547999382019, 0.7107383608818054, 0.7206445932388306, 0.7306828498840332, 0.7540615797042847, 0.7475894689559937, 0.7564390301704407, 0.7629110813140869, 0.7601373791694641, 0.7741381525993347, 0.7708360552787781, 0.7839123010635376, 0.7841764688491821, 0.8010830879211426, 0.8009510040283203, 0.8096684813499451, 0.811649739742279, 0.8078193068504333, 0.8083476424217224, 0.82683926820755, 0.8171972036361694, 0.8231409192085266, 0.8121780753135681], "val_loss": [1.5704552786690849, 0.784545762198312, 0.7627409866877964, 0.6307068552289691, 0.5919393301010132, 0.6196305240903582, 0.545507414000375, 0.5286029747554234, 0.5459026098251343, 0.5201013428824288, 0.4892609119415283, 0.5651774406433105, 0.4643385921205793, 0.4785972663334438, 0.4641516889844622, 0.46778268473488943, 0.4861326047352382, 0.4399223583085196, 0.43840040479387554, 0.4184514880180359, 0.4363709773336138, 0.41069544213158743, 0.40952545404434204, 0.4224724428994315, 0.3992723226547241, 0.4026938761983599, 0.41322008201054167], "val_accuracy": [0.3720000088214874, 0.6736666560173035, 0.640999972820282, 0.7126666903495789, 0.7310000061988831, 0.6953333616256714, 0.7426666617393494, 0.7786666750907898, 0.7516666650772095, 0.7749999761581421, 0.781000018119812, 0.7559999823570251, 0.800000011920929, 0.778333306312561, 0.7916666865348816, 0.7873333096504211, 0.7870000004768372, 0.8046666383743286, 0.8076666593551636, 0.8113333582878113, 0.8100000023841858, 0.82833331823349, 0.82833331823349, 0.8106666803359985, 0.8146666884422302, 0.828000009059906, 0.8253333568572998]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [3, 5, 0, 4, 0, 6, 3, 9, 6, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 3, 0, 3, 2, 3, 3, 0], [42, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [1, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.776285707950592, "mapping_values": [1, 3, 3, 2, 1, 1, 18, 18, 12, 6, 5, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(beta, grad), tf.math.pow(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), grad)))))))))), tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [1.9631164317054834, 1.331196337910754, 1.0520790525478474, 0.9253934839571377, 0.8360662219342051, 0.8053366191682247, 0.7656182644074666, 0.7390971230541034, 0.7509470264106426, 0.7248559520780261, 0.6843724501540774, 0.6731108101509219, 0.6834092662319011, 0.6386426903741423, 0.6437265464831589, 0.6735656567930529, 0.6453074544270624, 0.6496070546953354, 0.6287251658222978, 0.6152204530051104, 0.6220036537309348], "accuracy": [0.3541143834590912, 0.5239730477333069, 0.6140536069869995, 0.6633205413818359, 0.6926429867744446, 0.698718786239624, 0.7059833407402039, 0.7224937081336975, 0.7117950320243835, 0.733588695526123, 0.7448157668113708, 0.7421740889549255, 0.7363624572753906, 0.7561748623847961, 0.7498348951339722, 0.7401928305625916, 0.7548540234565735, 0.755118191242218, 0.7622507214546204, 0.76542067527771, 0.7685906887054443], "val_loss": [1.3202008179255895, 0.8486942052841187, 0.7067618540355137, 0.6594384057181222, 0.5851878098079136, 0.5845995119639805, 0.5726100036076137, 0.607818637575422, 0.531104394367763, 0.5057223354067121, 0.506965058190482, 0.5462441614695958, 0.49231367451804026, 0.49750265053340365, 0.4971222366605486, 0.46273677689688547, 0.5039191927228656, 0.47386964729854036, 0.4810528244291033, 0.5197808572224208, 0.46363907200949533], "val_accuracy": [0.4126666784286499, 0.6556666493415833, 0.6673333048820496, 0.6959999799728394, 0.7333333492279053, 0.7183333039283752, 0.7286666631698608, 0.7303333282470703, 0.753333330154419, 0.7736666798591614, 0.7760000228881836, 0.7416666746139526, 0.7756666541099548, 0.7546666860580444, 0.768666684627533, 0.793666660785675, 0.7639999985694885, 0.7896666526794434, 0.7746666669845581, 0.7593333125114441, 0.7929999828338623]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 8, 6, 9, 0, 6, 6, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 3, 3, 0, 3, 2, 3, 3, 0], [42, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.3400000035762787, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.2749697951403873, 2.362560059211478, 2.3008963500252015, 2.286788911615396, 2.3039169298927025, 2.303067654634999], "accuracy": [0.19204860925674438, 0.2246730923652649, 0.11715757846832275, 0.11438383162021637, 0.09496764093637466, 0.09760929644107819], "val_loss": [1.747396537235805, 2.072863374437605, 1.7487241200038366, 1.974797180720738, 1.9737389428274972, 1.9736552919660295], "val_accuracy": [0.32066667079925537, 0.10233332961797714, 0.25033333897590637, 0.10233332961797714, 0.10233332961797714, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [6, 8, 6, 4, 0, 6, 6, 6, 5, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 3, 1, 3, 3, 0, 3, 0], [42, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [8, 3, 2, 3, 6], [1, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 2, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))))), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, alpha), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 8, 1, 4, 6, 6, 6, 6, 5, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 3, 0, 3, 2, 3, 3, 0], [97, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 9, 1, 3, 6], [1, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 7, 7, 3, 1, 1, 0, 1, 0, 2, 2, 0, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [19198639.590183754, 359792388.0237749, 1667855666.6184123, 4657294168.01585, 9967131038.956017, 18244109217.728703], "accuracy": [0.09721305221319199, 0.10342095047235489, 0.10487385839223862, 0.10130762308835983, 0.1010434553027153, 0.09681680053472519], "val_loss": [71955584.0, 574942701.7142857, 1939650560.0, 4596765696.0, 8976953051.428572, 15510942866.285715], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [3, 8, 2, 4, 0, 6, 6, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 1, 3, 0, 3, 2, 3, 3, 0], [42, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 1, 1, 0, 1, 0, 1, 0], [0, 0, 2, 3, 6], [1, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07991018146276474, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [3, 2, 6, 4, 0, 6, 6, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 3, 0, 3, 2, 3, 3, 0], [42, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 2, 3, 6], [1, 1, 2, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 20, 20, 10, 10, 4, 6, 4, 3, 1, 0, 6, 3, 3, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, beta), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))))))))), tf.math.add(tf.math.add(beta, beta), grad)), tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.add(alpha, beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [3, 8, 6, 4, 0, 6, 6, 6, 5, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 3, 0, 3, 2, 3, 3, 0], [42, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 4, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.pow(sigma, alpha), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [3, 8, 6, 4, 0, 6, 6, 1, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 3, 1, 2, 2, 3, 3, 0], [42, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [1, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 2, 3, 6], [1, 0, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 6, 3, 3, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2316.4333022545516, 2.3052760297281236, 2.304160263308161, 2.303600957790118, 2442885712380.6904, 2.3068485022567407], "accuracy": [0.09642054885625839, 0.0956280529499054, 0.09998679161071777, 0.09668471664190292, 0.0936468094587326, 0.09826971590518951], "val_loss": [1.976766586303711, 1.975480624607631, 1.9747608048575265, 1.9742933682032995, 1.978853975023542, 1.976844378880092], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [0, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 8, 6, 4, 0, 6, 6, 6, 5, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 3, 3, 0, 3, 3, 3, 3, 0], [42, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [2, 3, 4, 3, 6], [1, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 20, 20, 11, 9, 2, 1, 1, 0, 1, 0, 7, 3, 4, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta))), tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.square(tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.add(beta, grad), grad)))))))), tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.pow(alpha, alpha), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0], [3, 1, 3, 9, 6, 6, 6, 4, 3, 1, 4, 9, 8, 1, 1, 4, 9, 0], [0, 2, 3, 2, 0, 3, 2, 3, 3, 0], [42, 47, 99, 84, 1, 78, 15], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 3, 2, 3, 6], [1, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 19, 19, 10, 9, 3, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.pow(tf.math.add(beta, tf.math.multiply(grad, tf.math.subtract(tf.math.add(beta, beta), tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)))), beta)), grad))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.1295109242023713, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.32465988397598267, 0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [54.75315529959543, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10400000214576721, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [0, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 8, 6, 4, 0, 6, 6, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 3, 0, 3, 2, 3, 3, 0], [69, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07991018146276474, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [0, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [72, 86, 50], [1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [3, 5, 0, 4, 0, 6, 3, 9, 6, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 3, 0, 3, 2, 3, 3, 0], [69, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3014943150638856, 2.3000275735385256, 2.3011248648017073, 2.3020524755996123, 2.302628658325161, 2.303668507967863], "accuracy": [0.09747721254825592, 0.09377889335155487, 0.09298639744520187, 0.09060890227556229, 0.09272222965955734, 0.09126931428909302], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 8, 6, 4, 0, 6, 6, 6, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 3, 0, 3, 2, 3, 3, 0], [42, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [1, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 9, 8, 3, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.pow(tf.math.negative(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta)), tf.math.add(beta, tf.math.divide_no_nan(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))))))), tf.math.add(tf.math.add(beta, beta), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, alpha)))", "other_info": {"loss": [2.301576353382236, 2.300344589253805, 2.301720941795759, 2.303077122916666, 2.3040756304124566, 2.3056048206003856], "accuracy": [0.09734513610601425, 0.09298639744520187, 0.09192973375320435, 0.0882314071059227, 0.08915598690509796, 0.08942015469074249], "val_loss": [1.9707963126046317, 1.9710348674229212, 1.9712803704398019, 1.9716075488499232, 1.9719279834202357, 1.972301415034703], "val_accuracy": [0.03866666555404663, 0.038333334028720856, 0.036666665226221085, 0.03466666489839554, 0.03233333304524422, 0.03033333271741867]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [0, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [3, 5, 0, 4, 0, 6, 3, 9, 6, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [69, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 8, 4, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3014943150638856, 2.3000275735385256, 2.3011248648017073, 2.3020524755996123, 2.302628658325161, 2.303668507967863], "accuracy": [0.09747721254825592, 0.09377889335155487, 0.09298639744520187, 0.09060890227556229, 0.09272222965955734, 0.09126931428909302], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [3, 1, 3, 9, 6, 6, 6, 4, 3, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 2, 0, 3, 0, 3, 2, 3, 3, 0], [63, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [39, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 4, 3, 1, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.3014943150638856, 2.3000275735385256, 2.3011248648017073, 2.3020524755996123, 2.302628658325161, 2.303668507967863], "accuracy": [0.09747721254825592, 0.09377889335155487, 0.09298639744520187, 0.09060890227556229, 0.09272222965955734, 0.09126931428909302], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]