[{"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 1, 7, 8, 3, 2, 2, 8, 1, 8, 8, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 0, 2, 2, 1, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 68, 59, 56, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [1, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 2, 7, 4, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [2, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [49, 9, 43, 71, 34]], "fitness": -0.7891428470611572, "mapping_values": [1, 18, 18, 10, 8, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), grad), tf.math.sqrt(tf.math.add(alpha, grad)))), alpha))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))))), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.negative(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.645573377609253, 2.300280809402466, 2.0999362468719482, 2.0823974609375, 2.305588960647583, 2.0890581607818604, 1.7292157411575317, 1.470906138420105, 1.212201714515686, 1.077542781829834, 0.9404965043067932, 0.9006316661834717, 0.9018173813819885, 0.8024500012397766, 0.7843219637870789, 0.7891287207603455, 0.7397820353507996, 0.7092365026473999, 0.7223764657974243, 0.6931183338165283, 0.6478512287139893, 0.6365221738815308, 0.6241665482521057, 0.6386234164237976, 0.6115421056747437, 0.5896288752555847, 0.5714912414550781, 0.5709879994392395, 0.5505648851394653, 0.5403034090995789], "accuracy": [0.23140932619571686, 0.12019548565149307, 0.29322415590286255, 0.28899750113487244, 0.09681680053472519, 0.2747325301170349, 0.42742040753364563, 0.4909523129463196, 0.5671641826629639, 0.59661865234375, 0.6536785364151001, 0.6602826714515686, 0.659490168094635, 0.6948884129524231, 0.7049266695976257, 0.6995112895965576, 0.7191916704177856, 0.7297582626342773, 0.7224937081336975, 0.7372870445251465, 0.7544577717781067, 0.7651565074920654, 0.7668735980987549, 0.759080708026886, 0.7724210619926453, 0.780610203742981, 0.7798177003860474, 0.7800818681716919, 0.7951393723487854, 0.791969358921051], "val_loss": [2.3080310821533203, 2.259411334991455, 2.298933744430542, 2.3062803745269775, 2.2961559295654297, 1.8250398635864258, 1.676283836364746, 1.3273975849151611, 0.902762234210968, 0.8248892426490784, 0.8096195459365845, 0.9232661128044128, 0.728267252445221, 0.7549304962158203, 0.7681165337562561, 0.682634174823761, 0.6501203775405884, 0.6812566518783569, 0.6230925917625427, 0.6113027930259705, 0.5454954504966736, 0.5554627180099487, 0.6346006393432617, 0.5615816116333008, 0.5171265602111816, 0.5390114188194275, 0.5244569778442383, 0.5605749487876892, 0.5410947203636169, 0.5610873103141785], "val_accuracy": [0.10100000351667404, 0.2293333262205124, 0.12066666781902313, 0.10266666859388351, 0.10133333504199982, 0.45366665720939636, 0.41999998688697815, 0.5350000262260437, 0.6306666731834412, 0.7083333134651184, 0.684333324432373, 0.7023333311080933, 0.7176666855812073, 0.7096666693687439, 0.7059999704360962, 0.7333333492279053, 0.7293333411216736, 0.7286666631698608, 0.7710000276565552, 0.7620000243186951, 0.7946666479110718, 0.7893333435058594, 0.7523333430290222, 0.7770000100135803, 0.8043333292007446, 0.7916666865348816, 0.7933333516120911, 0.777999997138977, 0.7829999923706055, 0.7776666879653931]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 1, 1, 8, 3, 2, 2, 8, 1, 8, 8, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 2, 1, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 74, 59, 56, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 2, 7, 4, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [49, 9, 43, 71, 34]], "fitness": -0.776285707950592, "mapping_values": [1, 18, 18, 10, 8, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, grad), alpha), tf.math.sqrt(tf.math.add(alpha, grad)))), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))))))), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.266306161880493, 2.3019652366638184, 2.274972438812256, 2.021416425704956, 1.871759057044983, 1.56729257106781, 1.3568902015686035, 1.0393462181091309, 1.0425934791564941, 0.9175266623497009, 0.8673626184463501, 0.831463634967804, 0.8102597594261169, 0.804600179195404, 0.7226226329803467, 0.7052993178367615, 0.6809403300285339, 0.6827552914619446, 0.6342695355415344, 0.6587902903556824, 0.60353022813797, 0.5880894064903259, 0.5801274180412292, 0.5722566246986389, 0.5625628232955933, 0.5528836846351624, 0.5262088179588318], "accuracy": [0.24474970996379852, 0.10632677376270294, 0.18993528187274933, 0.30801743268966675, 0.368511438369751, 0.4649319648742676, 0.5068022608757019, 0.6128648519515991, 0.6086382269859314, 0.6543388962745667, 0.6680755615234375, 0.693831741809845, 0.6892088055610657, 0.6944921612739563, 0.7150970697402954, 0.7257958054542542, 0.7430986762046814, 0.7351737022399902, 0.7604015469551086, 0.7523444890975952, 0.7726852297782898, 0.7758552432060242, 0.7792893648147583, 0.7771760821342468, 0.7902522683143616, 0.7907806038856506, 0.7969884872436523], "val_loss": [2.30423903465271, 2.295844793319702, 2.099534273147583, 2.098576545715332, 1.3964152336120605, 1.1020328998565674, 0.9212474822998047, 0.9114646911621094, 0.7639015316963196, 0.728399395942688, 0.7422817349433899, 0.8370617628097534, 0.7028383612632751, 0.7091017365455627, 0.6421663165092468, 0.6303194165229797, 0.6373241543769836, 0.5717208385467529, 0.5810681581497192, 0.5558397769927979, 0.5390427112579346, 0.5238860845565796, 0.5729752779006958, 0.6200385689735413, 0.5197240710258484, 0.5053025484085083, 0.5931004285812378], "val_accuracy": [0.10100000351667404, 0.14800000190734863, 0.3683333396911621, 0.30000001192092896, 0.5, 0.5929999947547913, 0.6653333306312561, 0.6343333125114441, 0.6953333616256714, 0.7053333520889282, 0.7289999723434448, 0.6650000214576721, 0.7226666808128357, 0.7120000123977661, 0.7293333411216736, 0.75, 0.7473333477973938, 0.7670000195503235, 0.7646666765213013, 0.7853333353996277, 0.7916666865348816, 0.7983333468437195, 0.7646666765213013, 0.7509999871253967, 0.7916666865348816, 0.7976666688919067, 0.7863333225250244]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 3, 4, 3, 2, 3, 8, 9, 2, 0, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 2, 2, 2, 0, 2, 0, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [37, 50, 59, 56, 8, 79, 86, 52, 44], [1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [7, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [1, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 6, 7, 4, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [2, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [23, 9, 43, 71, 34]], "fitness": -0.7511428594589233, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.negative(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2934067249298096, 2.2739715576171875, 2.2537753582000732, 2.229962110519409, 2.2017593383789062, 2.16733455657959, 2.1209170818328857, 2.062628746032715, 1.9898980855941772, 1.9081445932388306, 1.8113839626312256, 1.7228786945343018, 1.6242560148239136, 1.5403326749801636, 1.4421043395996094, 1.3801997900009155, 1.3241904973983765, 1.2683615684509277, 1.2348014116287231, 1.1813366413116455, 1.1608633995056152, 1.1247442960739136, 1.0985782146453857, 1.082444667816162, 1.0513150691986084, 1.044514536857605, 1.013119101524353, 0.9958469271659851, 0.9748585224151611, 0.9610744118690491, 0.9554345011711121, 0.9319433569908142, 0.9316387176513672, 0.9188610911369324, 0.9116397500038147, 0.8970305919647217, 0.8838474750518799, 0.888963520526886, 0.8710630536079407, 0.8554121255874634, 0.8559421896934509, 0.8560949563980103, 0.8505172729492188, 0.8329811692237854, 0.8324056267738342, 0.8276320695877075, 0.8285315036773682, 0.8214367628097534, 0.7990009188652039, 0.7985522150993347, 0.7976316809654236, 0.7904055714607239, 0.7868009805679321, 0.7941527962684631, 0.7808020114898682, 0.7826605439186096, 0.7784121036529541, 0.7656792998313904, 0.7699580192565918, 0.7638758420944214, 0.765932559967041, 0.7602695226669312, 0.7610677480697632, 0.7471065521240234, 0.7594681978225708, 0.7440791130065918], "accuracy": [0.11108175665140152, 0.16695284843444824, 0.21040813624858856, 0.26337340474128723, 0.301281213760376, 0.33126401901245117, 0.36283186078071594, 0.39506009221076965, 0.404570072889328, 0.4336283206939697, 0.4519878625869751, 0.46427157521247864, 0.49293357133865356, 0.5089156031608582, 0.5303130149841309, 0.5373134613037109, 0.5519746541976929, 0.5674283504486084, 0.5703341960906982, 0.5935807824134827, 0.5918636918067932, 0.6095628142356873, 0.6136573553085327, 0.6194690465927124, 0.632941484451294, 0.6313564777374268, 0.6419231295585632, 0.6505085229873657, 0.6560559868812561, 0.6621318459510803, 0.6626601219177246, 0.6740192770957947, 0.669792652130127, 0.6749438643455505, 0.6765288710594177, 0.6803592443466187, 0.6831330060958862, 0.6848500967025757, 0.6865671873092651, 0.6984546184539795, 0.6901333928108215, 0.693831741809845, 0.69673752784729, 0.7029454708099365, 0.6993792057037354, 0.7073041796684265, 0.7063795924186707, 0.6980583667755127, 0.7108704447746277, 0.7094175219535828, 0.7117950320243835, 0.7119271159172058, 0.719852089881897, 0.7116629481315613, 0.7157574892044067, 0.7213049530982971, 0.7162858247756958, 0.722229540348053, 0.7253995537757874, 0.7226257920265198, 0.7264562249183655, 0.718399167060852, 0.7244749665260315, 0.7263241410255432, 0.724739134311676, 0.7363624572753906], "val_loss": [2.2789385318756104, 2.257404088973999, 2.2333669662475586, 2.2046477794647217, 2.1691958904266357, 2.1243252754211426, 2.067301034927368, 1.9959789514541626, 1.909122109413147, 1.8080247640609741, 1.6966816186904907, 1.5832446813583374, 1.4721572399139404, 1.371586799621582, 1.2817739248275757, 1.2056694030761719, 1.141690731048584, 1.0879631042480469, 1.04282808303833, 1.003331184387207, 0.9714446663856506, 0.9416784048080444, 0.9177864789962769, 0.8970209956169128, 0.8764753937721252, 0.8605090975761414, 0.8427832126617432, 0.829267144203186, 0.8149977326393127, 0.8043787479400635, 0.7918016910552979, 0.7803784012794495, 0.7721242904663086, 0.764681875705719, 0.7564789056777954, 0.7482631802558899, 0.7409461140632629, 0.7359601259231567, 0.7275488972663879, 0.72052401304245, 0.7169538736343384, 0.710024893283844, 0.7047890424728394, 0.7006698250770569, 0.6959677934646606, 0.6906867027282715, 0.6876305341720581, 0.683331310749054, 0.6785345673561096, 0.6759271025657654, 0.6725277304649353, 0.6687635779380798, 0.6628746390342712, 0.660476565361023, 0.6570738554000854, 0.6549343466758728, 0.6506269574165344, 0.6485446095466614, 0.6446855664253235, 0.6411381959915161, 0.6397369503974915, 0.6388003826141357, 0.6356294751167297, 0.6312872767448425, 0.6299335956573486, 0.6283527612686157], "val_accuracy": [0.1926666647195816, 0.3296666741371155, 0.39133334159851074, 0.4339999854564667, 0.45533332228660583, 0.48533332347869873, 0.5146666765213013, 0.5329999923706055, 0.5573333501815796, 0.5603333115577698, 0.5696666836738586, 0.5913333296775818, 0.6073333621025085, 0.6166666746139526, 0.6456666588783264, 0.6606666445732117, 0.6676666736602783, 0.6729999780654907, 0.6776666641235352, 0.684333324432373, 0.6899999976158142, 0.6933333277702332, 0.6959999799728394, 0.7046666741371155, 0.706333339214325, 0.7066666483879089, 0.7139999866485596, 0.7116666436195374, 0.7179999947547913, 0.7160000205039978, 0.7233333587646484, 0.7269999980926514, 0.7286666631698608, 0.7293333411216736, 0.7303333282470703, 0.7323333621025085, 0.7350000143051147, 0.7369999885559082, 0.7400000095367432, 0.7403333187103271, 0.7360000014305115, 0.7426666617393494, 0.7429999709129333, 0.7473333477973938, 0.7476666569709778, 0.746999979019165, 0.7486666440963745, 0.750333309173584, 0.7523333430290222, 0.753000020980835, 0.7546666860580444, 0.7549999952316284, 0.7593333125114441, 0.7596666812896729, 0.7630000114440918, 0.7599999904632568, 0.765333354473114, 0.7613333463668823, 0.765666663646698, 0.7736666798591614, 0.7746666669845581, 0.7673333287239075, 0.7706666588783264, 0.7703333497047424, 0.7723333239555359, 0.7689999938011169]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 1, 7, 8, 5, 2, 2, 8, 1, 8, 8, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 0, 2, 2, 1, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 50, 59, 56, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [1, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 2, 7, 4, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [2, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [19, 9, 43, 71, 34]], "fitness": -0.6814285516738892, "mapping_values": [1, 23, 23, 15, 8, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.subtract(tf.math.add(tf.math.sqrt(tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))))))))), tf.math.sqrt(tf.math.add(alpha, grad))))), tf.math.multiply(tf.math.multiply(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad)), grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.negative(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2996292114257812, 2.295283794403076, 2.291182518005371, 2.287126064300537, 2.2836761474609375, 2.2804312705993652, 2.275205373764038, 2.2699954509735107, 2.2652382850646973, 2.2619214057922363, 2.255664825439453, 2.25260591506958, 2.2469167709350586, 2.2428765296936035, 2.2350802421569824, 2.2291741371154785, 2.2241153717041016, 2.2180838584899902, 2.211142063140869, 2.202313184738159, 2.1977598667144775, 2.1887779235839844, 2.180532455444336, 2.1717922687530518, 2.1630070209503174, 2.1558456420898438, 2.1435141563415527, 2.1316733360290527, 2.1192386150360107, 2.1114237308502197, 2.0960516929626465, 2.082864761352539, 2.071597099304199, 2.0544803142547607, 2.0401835441589355, 2.024177312850952, 2.0084009170532227, 1.991518497467041, 1.9729435443878174, 1.9528489112854004, 1.9344481229782104, 1.918321967124939, 1.9007985591888428, 1.8775655031204224, 1.8555829524993896, 1.8311506509780884, 1.8138833045959473, 1.784566879272461, 1.766139268875122, 1.7459068298339844, 1.7141376733779907, 1.7026479244232178, 1.679924488067627, 1.6553798913955688, 1.6386477947235107, 1.6216591596603394, 1.5966627597808838, 1.5674880743026733, 1.5491869449615479, 1.5328119993209839, 1.516214370727539, 1.499703288078308, 1.484662652015686, 1.4614014625549316, 1.4627374410629272, 1.4325530529022217, 1.4136326313018799, 1.400490403175354, 1.3780410289764404, 1.3682879209518433, 1.3596539497375488, 1.3388115167617798, 1.3364217281341553, 1.3169264793395996, 1.303816556930542, 1.3074589967727661, 1.2790883779525757, 1.276891827583313, 1.2697017192840576, 1.259292483329773, 1.2398862838745117, 1.2308430671691895, 1.2188576459884644, 1.211974859237671, 1.2013628482818604, 1.2056663036346436, 1.1878695487976074, 1.183416724205017, 1.165891408920288, 1.1751831769943237, 1.16482675075531, 1.1615394353866577, 1.1425715684890747, 1.1457736492156982, 1.1400259733200073, 1.1318483352661133, 1.1346567869186401, 1.1072105169296265, 1.1055341958999634, 1.1097553968429565], "accuracy": [0.09826971590518951, 0.11121384054422379, 0.11676132678985596, 0.13247919082641602, 0.13815876841545105, 0.15136705338954926, 0.15863162279129028, 0.17619864642620087, 0.18491612374782562, 0.19402985274791718, 0.20974771678447723, 0.2133139669895172, 0.23603223264217377, 0.23405098915100098, 0.25624093413352966, 0.25637298822402954, 0.27499669790267944, 0.28622373938560486, 0.29097872972488403, 0.3093382716178894, 0.3028661906719208, 0.31541407108306885, 0.31937655806541443, 0.33020737767219543, 0.33166027069091797, 0.34262317419052124, 0.3494914770126343, 0.35886937379837036, 0.3683793544769287, 0.36745476722717285, 0.3800026476383209, 0.378549724817276, 0.38066306710243225, 0.3947959244251251, 0.40245673060417175, 0.39823007583618164, 0.413419634103775, 0.4154008626937866, 0.42068418860435486, 0.42226919531822205, 0.4266279339790344, 0.42649585008621216, 0.4321753978729248, 0.443798691034317, 0.4472328722476959, 0.450931191444397, 0.45727115869522095, 0.46308282017707825, 0.4637432396411896, 0.47589486837387085, 0.4744419455528259, 0.46968695521354675, 0.4748381972312927, 0.48448026180267334, 0.48751816153526306, 0.4884427487850189, 0.49768856167793274, 0.5106326937675476, 0.5136705636978149, 0.5180293321609497, 0.5132743120193481, 0.5188218355178833, 0.5211992859840393, 0.5291243195533752, 0.5182934999465942, 0.529388427734375, 0.5371813774108887, 0.5373134613037109, 0.5359926223754883, 0.5387663245201111, 0.5400871634483337, 0.5539559125900269, 0.553031325340271, 0.5548804402351379, 0.5608242154121399, 0.5527671575546265, 0.574560821056366, 0.5671641826629639, 0.5692775249481201, 0.5705983638763428, 0.5777308344841003, 0.5765420794487, 0.583938717842102, 0.5815612077713013, 0.5871087312698364, 0.5815612077713013, 0.5872408151626587, 0.5901466012001038, 0.5971469879150391, 0.5876370072364807, 0.600581169128418, 0.5959582328796387, 0.6001849174499512, 0.602562427520752, 0.6046757102012634, 0.5995244979858398, 0.6021661758422852, 0.618280291557312, 0.6116761565208435, 0.6089023947715759], "val_loss": [2.2952773571014404, 2.2905826568603516, 2.285900115966797, 2.2812159061431885, 2.276498794555664, 2.2717509269714355, 2.266977310180664, 2.262097120285034, 2.25713849067688, 2.252016544342041, 2.2466745376586914, 2.241309642791748, 2.2356927394866943, 2.229926347732544, 2.2237234115600586, 2.2173380851745605, 2.2107603549957275, 2.203812837600708, 2.1964709758758545, 2.188661575317383, 2.180473566055298, 2.171773672103882, 2.1626698970794678, 2.152965784072876, 2.142815351486206, 2.132134199142456, 2.120793342590332, 2.108811140060425, 2.0961647033691406, 2.0829741954803467, 2.0690131187438965, 2.0543265342712402, 2.0389420986175537, 2.022850513458252, 2.0059432983398438, 1.9882265329360962, 1.9699069261550903, 1.950741171836853, 1.9307236671447754, 1.9097450971603394, 1.88816499710083, 1.8660348653793335, 1.8433837890625, 1.8199524879455566, 1.7959612607955933, 1.771382451057434, 1.7466926574707031, 1.721346139907837, 1.6957547664642334, 1.6700364351272583, 1.644025444984436, 1.6182304620742798, 1.5924296379089355, 1.5667304992675781, 1.541324496269226, 1.5163922309875488, 1.4918577671051025, 1.4673720598220825, 1.4436137676239014, 1.4204071760177612, 1.3980731964111328, 1.3764894008636475, 1.3554751873016357, 1.3347723484039307, 1.3154443502426147, 1.2961955070495605, 1.277560830116272, 1.259722113609314, 1.242366909980774, 1.2256873846054077, 1.2099679708480835, 1.194224238395691, 1.179620623588562, 1.165210485458374, 1.1515740156173706, 1.1388760805130005, 1.1260802745819092, 1.1139483451843262, 1.1023153066635132, 1.0912801027297974, 1.0802972316741943, 1.0698126554489136, 1.0592551231384277, 1.049289584159851, 1.0397138595581055, 1.0308071374893188, 1.0219988822937012, 1.013415813446045, 1.0047686100006104, 0.9970787763595581, 0.9893988966941833, 0.9823242425918579, 0.9749804735183716, 0.9682514071464539, 0.9615525603294373, 0.9551777243614197, 0.9490479230880737, 0.9427926540374756, 0.9366346597671509, 0.9312532544136047], "val_accuracy": [0.06266666948795319, 0.09466666728258133, 0.13433332741260529, 0.17599999904632568, 0.2096666693687439, 0.24833333492279053, 0.28433331847190857, 0.3096666634082794, 0.3296666741371155, 0.3453333377838135, 0.3643333315849304, 0.37466666102409363, 0.38499999046325684, 0.39399999380111694, 0.4023333191871643, 0.41233333945274353, 0.421999990940094, 0.4326666593551636, 0.4399999976158142, 0.4440000057220459, 0.4490000009536743, 0.4556666612625122, 0.4606666564941406, 0.4673333466053009, 0.47099998593330383, 0.47699999809265137, 0.4819999933242798, 0.4880000054836273, 0.49399998784065247, 0.5009999871253967, 0.5063333511352539, 0.5146666765213013, 0.5176666378974915, 0.5246666669845581, 0.5286666750907898, 0.5326666831970215, 0.5360000133514404, 0.5389999747276306, 0.5446666479110718, 0.5506666898727417, 0.5546666383743286, 0.5586666464805603, 0.5616666674613953, 0.5649999976158142, 0.5669999718666077, 0.5680000185966492, 0.5699999928474426, 0.5733333230018616, 0.5743333101272583, 0.57833331823349, 0.5843333601951599, 0.5876666903495789, 0.5920000076293945, 0.5943333506584167, 0.597000002861023, 0.6006666421890259, 0.6036666631698608, 0.6056666374206543, 0.6069999933242798, 0.6129999756813049, 0.6190000176429749, 0.6226666569709778, 0.6296666860580444, 0.6363333463668823, 0.6389999985694885, 0.6420000195503235, 0.6470000147819519, 0.652999997138977, 0.6586666703224182, 0.6586666703224182, 0.6603333353996277, 0.6620000004768372, 0.6643333435058594, 0.6673333048820496, 0.6700000166893005, 0.671999990940094, 0.6723333597183228, 0.67166668176651, 0.6723333597183228, 0.6743333339691162, 0.6759999990463257, 0.6783333420753479, 0.6793333292007446, 0.6800000071525574, 0.6816666722297668, 0.684333324432373, 0.6826666593551636, 0.684333324432373, 0.6859999895095825, 0.6863333582878113, 0.6883333325386047, 0.687666654586792, 0.6913333535194397, 0.6909999847412109, 0.6926666498184204, 0.6933333277702332, 0.6916666626930237, 0.6926666498184204, 0.6933333277702332, 0.6966666579246521]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 2, 7, 8, 3, 2, 2, 8, 1, 4, 8, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 1, 2, 2, 0, 2, 0, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 68, 59, 56, 8, 79, 86, 52, 44], [1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [1, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 2, 7, 4, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [2, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [23, 9, 43, 71, 34]], "fitness": -0.6460000276565552, "mapping_values": [1, 10, 10, 5, 5, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(alpha))), tf.math.add(alpha, grad)), tf.math.multiply(tf.math.add(alpha, grad), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(beta), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.2900688648223877, 2.2164769172668457, 2.014916181564331, 1.5938968658447266, 1.3959662914276123, 1.2436624765396118, 0.9530007243156433, 0.9360059499740601, 0.8628512024879456, 0.8309616446495056, 0.8500431776046753, 0.8094171285629272, 0.7521631121635437, 0.7634227871894836, 0.7331811189651489, 0.7131727933883667, 0.7167474627494812, 0.7017379999160767, 0.6556674838066101, 0.6447228789329529, 0.6295114159584045, 0.620349109172821, 0.6019564270973206, 0.6009336113929749, 0.5901645421981812, 0.5762742161750793, 0.5604937672615051, 0.5513108968734741, 0.5441116690635681, 0.5276742577552795, 0.525737464427948, 0.527307391166687, 0.5189118981361389, 0.506156325340271, 0.5030268430709839, 0.4994707703590393, 0.4761181175708771, 0.47689467668533325, 0.49048325419425964, 0.4722919464111328, 0.45835939049720764, 0.460531622171402, 0.46141746640205383, 0.4453989267349243, 0.43844351172447205, 0.4310673177242279, 0.43534934520721436, 0.41868332028388977, 0.40964603424072266, 0.4020916819572449, 0.4111108183860779, 0.3972434103488922, 0.391021192073822, 0.3910418152809143, 0.3925835192203522], "accuracy": [0.1220446452498436, 0.2891295850276947, 0.3917580246925354, 0.46506404876708984, 0.5259543061256409, 0.5941091179847717, 0.6474705934524536, 0.6622639298439026, 0.6822084188461304, 0.6896050572395325, 0.6844538450241089, 0.6970016956329346, 0.709549605846405, 0.709549605846405, 0.7283053994178772, 0.7343811988830566, 0.7412495017051697, 0.7351737022399902, 0.7532690763473511, 0.7563069462776184, 0.7557786107063293, 0.769911527633667, 0.7740060687065125, 0.7759873270988464, 0.7807422876358032, 0.7845727205276489, 0.7906485199928284, 0.793950617313385, 0.8016114234924316, 0.8020076751708984, 0.8024039268493652, 0.8080834746360779, 0.802271842956543, 0.8086118102073669, 0.8080834746360779, 0.8162726163864136, 0.8206313848495483, 0.8190463781356812, 0.816008448600769, 0.8228767514228821, 0.8256505131721497, 0.834632158279419, 0.8238013386726379, 0.8330471515655518, 0.8360850811004639, 0.8350284099578857, 0.8350284099578857, 0.8379341959953308, 0.8448025584220886, 0.848368763923645, 0.843481719493866, 0.8455950617790222, 0.8514066934585571, 0.8524633646011353, 0.8504821062088013], "val_loss": [2.254152297973633, 2.1227757930755615, 1.7278474569320679, 1.1494700908660889, 0.932712972164154, 0.8132664561271667, 0.8081790208816528, 0.8143965601921082, 0.7097737789154053, 0.7007514834403992, 0.7095125913619995, 0.6742610335350037, 0.67111736536026, 0.6704885959625244, 0.6328038573265076, 0.6241428852081299, 0.6027539372444153, 0.5739614963531494, 0.5671074986457825, 0.5569834113121033, 0.5556446313858032, 0.5262678265571594, 0.5173863768577576, 0.5018566250801086, 0.4958969056606293, 0.49103429913520813, 0.48901569843292236, 0.4852010905742645, 0.47258105874061584, 0.4621843695640564, 0.46393561363220215, 0.4616468548774719, 0.448841392993927, 0.44690990447998047, 0.44842228293418884, 0.4457293152809143, 0.4362344443798065, 0.4325225055217743, 0.43103083968162537, 0.4285788834095001, 0.42794808745384216, 0.42280665040016174, 0.4177784025669098, 0.41186580061912537, 0.40863916277885437, 0.4109667241573334, 0.406315416097641, 0.3983766734600067, 0.39452555775642395, 0.4002132713794708, 0.3979487419128418, 0.39758890867233276, 0.40273943543434143, 0.40718594193458557, 0.4031761884689331], "val_accuracy": [0.3543333411216736, 0.4606666564941406, 0.5373333096504211, 0.6460000276565552, 0.6700000166893005, 0.7046666741371155, 0.7106666564941406, 0.7110000252723694, 0.7356666922569275, 0.734333336353302, 0.734000027179718, 0.7446666955947876, 0.7536666393280029, 0.7536666393280029, 0.7509999871253967, 0.7603333592414856, 0.7746666669845581, 0.7900000214576721, 0.7799999713897705, 0.7760000228881836, 0.7776666879653931, 0.7910000085830688, 0.8046666383743286, 0.8103333115577698, 0.8133333325386047, 0.812666654586792, 0.8153333067893982, 0.8106666803359985, 0.8176666498184204, 0.8223333358764648, 0.8199999928474426, 0.8240000009536743, 0.8309999704360962, 0.8299999833106995, 0.8339999914169312, 0.8373333215713501, 0.8363333344459534, 0.8383333086967468, 0.8450000286102295, 0.846666693687439, 0.8489999771118164, 0.8479999899864197, 0.8489999771118164, 0.8503333330154419, 0.8513333201408386, 0.8529999852180481, 0.8523333072662354, 0.8566666841506958, 0.8569999933242798, 0.8583333492279053, 0.8560000061988831, 0.856333315372467, 0.8546666502952576, 0.8533333539962769, 0.8553333282470703]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 1, 7, 2, 3, 2, 2, 8, 1, 8, 8, 0, 3, 5, 6, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 1, 2, 2, 0, 2, 0, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 50, 59, 56, 8, 79, 86, 52, 44], [1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [1, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 6, 7, 4, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [2, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [49, 9, 43, 71, 34]], "fitness": -0.40799999237060547, "mapping_values": [1, 24, 24, 14, 10, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, grad)))), grad), tf.math.add(tf.math.sqrt(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.square(grad), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))))))), alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.negative(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.9714128971099854, 2.252087354660034, 2.2208282947540283, 2.010263442993164, 2.1544387340545654, 2.518401622772217, 2.4939393997192383, 2.4113268852233887], "accuracy": [0.2308809906244278, 0.2339189052581787, 0.24474970996379852, 0.3140932619571686, 0.29018622636795044, 0.13076211512088776, 0.09628847241401672, 0.09813763201236725], "val_loss": [2.300778865814209, 2.242130756378174, 2.000230073928833, 1.7861319780349731, 1.8031657934188843, 2.364489793777466, 2.3570964336395264, 2.340028762817383], "val_accuracy": [0.24033333361148834, 0.22966666519641876, 0.40533334016799927, 0.3596666753292084, 0.335999995470047, 0.0976666659116745, 0.10199999809265137, 0.0976666659116745]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [6, 2, 2, 8, 1, 2, 3, 8, 1, 4, 8, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 1, 2, 2, 0, 2, 0, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 23, 91, 56, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [1, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 2, 7, 4, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [2, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [90, 9, 43, 71, 34]], "fitness": -0.16457143425941467, "mapping_values": [1, 22, 22, 12, 10, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)), tf.math.sqrt(grad))), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), grad)))))), tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.negative(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.7786402702331543, 2.2976696491241455, 2.3041529655456543, 2.3031773567199707, 2.303183078765869, 2.3030643463134766, 2.3030500411987305, 2.3028063774108887, 2.3028812408447266, 2.302647113800049, 2.3018665313720703, 2.2547051906585693, 2.3965580463409424, 2.303938388824463, 2.199782133102417, 2.3048524856567383, 2.3039710521698], "accuracy": [0.20552106201648712, 0.1340641975402832, 0.09906221181154251, 0.09655263274908066, 0.09549596905708313, 0.09760929644107819, 0.10038304328918457, 0.10130762308835983, 0.10170386731624603, 0.10077928751707077, 0.10579843819141388, 0.17619864642620087, 0.11398758739233017, 0.09470347315073013, 0.21199312806129456, 0.09576013684272766, 0.09826971590518951], "val_loss": [2.309685468673706, 2.3042171001434326, 2.3029634952545166, 2.3026397228240967, 2.302673816680908, 2.3025803565979004, 2.302706003189087, 2.302671432495117, 2.3025591373443604, 2.302022695541382, 2.2994275093078613, 2.730764865875244, 2.3030951023101807, 2.2988765239715576, 2.3047523498535156, 2.3034517765045166, 2.3029346466064453], "val_accuracy": [0.0976666659116745, 0.1003333330154419, 0.1003333330154419, 0.10133333504199982, 0.09866666793823242, 0.11599999666213989, 0.10233332961797714, 0.09300000220537186, 0.11133333295583725, 0.11666666716337204, 0.16300000250339508, 0.19566667079925537, 0.09966666996479034, 0.10766666382551193, 0.10133333504199982, 0.0976666659116745, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [3, 8, 7, 3, 3, 2, 1, 8, 3, 2, 0, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 1, 2, 2, 0, 2, 0, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 50, 59, 56, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [6, 0, 3, 6, 7, 4, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [2, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [49, 9, 43, 71, 34]], "fitness": -0.10885713994503021, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(beta, tf.math.negative(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [9.775876486081941e+30, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.14832915365695953, 0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 1, 6, 8, 3, 2, 2, 8, 1, 8, 8, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 0, 2, 2, 1, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 68, 59, 56, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [0, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [1, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [6, 9, 3, 6, 7, 4, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [2, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [49, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 18, 10, 8, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), grad), tf.math.sqrt(tf.math.add(alpha, grad)))), alpha))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))))), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(beta, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [3613745408.0, 67245092864.0, 313816547328.0, 854893658112.0, 1869731856384.0, 3441002283008.0], "accuracy": [0.09998679161071777, 0.10051512718200684, 0.10077928751707077, 0.1010434553027153, 0.09813763201236725, 0.10236428678035736], "val_loss": [15409088512.0, 123246264320.0, 415926419456.0, 985859620864.0, 1925489360896.0, 3327155765248.0], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 1, 7, 4, 3, 2, 1, 8, 1, 2, 0, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 2, 1, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 50, 59, 56, 8, 79, 86, 52, 44], [1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [1, 3], [], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 2, 3, 6, 7, 4, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [3, 2, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [49, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 25, 25, 14, 11, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), grad)), tf.math.subtract(tf.math.sqrt(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.math.multiply(grad, grad)), tf.math.add(alpha, alpha)))))))))), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), alpha))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 1, 7, 8, 3, 2, 2, 8, 1, 8, 8, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 1, 0, 2, 0, 2, 0, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 50, 59, 56, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 3, 2, 7, 4, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [2, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [34, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), alpha)), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.math.negative(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302105188369751, 2.3024559020996094, 2.3030195236206055, 2.3059170246124268, 2.322094678878784, 2.4178366661071777], "accuracy": [0.10408136248588562, 0.10117553919553757, 0.10368511080741882, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3028080463409424, 2.303232431411743, 2.3049957752227783, 2.3129003047943115, 2.3542885780334473, 2.6207964420318604], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [3, 8, 7, 3, 3, 2, 1, 8, 3, 2, 0, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 1, 2, 2, 0, 2, 0, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 50, 59, 56, 8, 79, 86, 52, 44], [1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [0, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [1, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1], [3, 0, 3, 2, 7, 4, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6, 2, 8, 7, 8, 4, 0], [2, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [49, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 37, 22, 15, 4], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.multiply(beta, tf.math.add(tf.math.add(tf.math.pow(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), sigma), tf.math.multiply(tf.math.subtract(beta, beta), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)), tf.math.negative(tf.math.add(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(sigma, beta), beta)))))))), tf.math.sqrt(tf.math.add(tf.math.sqrt(sigma), tf.math.pow(tf.math.negative(sigma), beta))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 1, 7, 8, 3, 2, 2, 8, 1, 8, 8, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 0, 1, 2, 2, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 68, 59, 56, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [1, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 2, 7, 4, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [2, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [49, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 9, 8, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.sqrt(tf.math.add(alpha, grad)))), grad)))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07409853488206863, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 1, 7, 4, 3, 2, 1, 8, 1, 2, 0, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 2, 2, 2, 0, 2, 0, 2, 2, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 68, 75, 56, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [1, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 3, 6, 7, 4, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [2, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [58, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 23, 12, 11, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, grad), grad), tf.math.sqrt(tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), grad)))), tf.math.negative(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, alpha)))))), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09509972482919693, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 9, 7, 4, 3, 2, 1, 8, 1, 2, 0, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 2, 2, 0, 0, 2, 0, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 50, 59, 56, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [1, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [2, 3], [], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 2, 7, 4, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [2, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [94, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07409853488206863, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [3, 1, 3, 4, 3, 2, 3, 8, 9, 2, 0, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 1, 2, 2, 0, 2, 0, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [57, 50, 59, 56, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [1, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 2, 7, 4, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [2, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [23, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 23, 14, 9, 5, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 14, 7, 7, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), grad)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, grad)), tf.math.add(tf.math.add(alpha, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), grad)), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.multiply(beta, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(sigma, beta), tf.math.pow(beta, tf.math.multiply(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 1, 7, 8, 3, 2, 2, 8, 1, 8, 8, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 0, 2, 2, 1, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 50, 59, 56, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [4, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [1, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 2, 7, 4, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [2, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [58, 9, 43, 71, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 24, 24, 16, 8, 3, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(grad, tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))), tf.math.multiply(tf.math.multiply(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(alpha, grad))), grad)))), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.negative(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 5, 8, 3, 2, 1, 8, 1, 2, 0, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [2, 3, 2, 2, 0, 2, 0, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 50, 59, 56, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [1, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 4, 3, 6, 7, 4, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [2, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [49, 9, 43, 71, 34]], "fitness": -0.07342857122421265, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.pow(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.3536951541900635, 34063.7890625, 1.3681265336330358e+27, 3.174238920211792, 3.0931177139282227, 3.213681221008301], "accuracy": [0.20195482671260834, 0.11662924289703369, 0.09628847241401672, 0.1010434553027153, 0.09774138033390045, 0.10051512718200684], "val_loss": [2.3032305240631104, 2430043160576.0, 3.325235605239868, 2.702116012573242, 3.0027785301208496, 3.000389337539673], "val_accuracy": [0.10899999737739563, 0.10133333504199982, 0.10100000351667404, 0.0976666659116745, 0.09866666793823242, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 3, 4, 3, 2, 3, 8, 9, 2, 0, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 2, 2, 2, 0, 2, 0, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [79, 74, 59, 56, 8, 79, 86, 52, 44], [0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 0, 3, 2, 7, 4, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [2, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [23, 9, 43, 71, 34]], "fitness": -0.04114285856485367, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.negative(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.301443099975586, 2.3014657497406006, 2.3016178607940674, 2.301959276199341, 2.3029494285583496, 2.3041813373565674], "accuracy": [0.0948355570435524, 0.09602430462837219, 0.09008057415485382, 0.09047681838274002, 0.08915598690509796, 0.09166556596755981], "val_loss": [2.300062417984009, 2.3000664710998535, 2.3000705242156982, 2.3000741004943848, 2.3000783920288086, 2.3000833988189697], "val_accuracy": [0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 1, 7, 8, 3, 2, 4, 8, 1, 8, 8, 3, 3, 9, 5, 9, 3, 2, 0, 5, 5, 2, 5, 2, 1, 8], [1, 0, 2, 0, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 1, 1, 2, 2, 1, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 3], [68, 68, 59, 56, 8, 79, 86, 52, 44], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 5, 9, 6, 2, 4, 9, 4, 3, 3, 4, 8, 8, 1, 1, 8, 9, 0], [3, 4, 3, 3, 0, 3, 1, 0, 0, 0], [53, 32, 50, 35, 74, 78], [1, 0, 1, 1, 0, 1], [1, 1, 1, 0], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 6, 3, 2, 7, 4, 3, 1, 4, 3, 9, 2, 0, 2, 8, 6], [2, 0, 3, 2, 2, 0, 1, 1, 0, 3, 2, 2, 3, 3, 2, 0, 3, 2, 0, 2, 0], [49, 9, 43, 71, 34]], "fitness": -0.04114285856485367, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.divide_no_nan(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.3014419078826904, 2.3014605045318604, 2.301607131958008, 2.3019449710845947, 2.3029286861419678, 2.3041529655456543], "accuracy": [0.0948355570435524, 0.09602430462837219, 0.08968432247638702, 0.09034473448991776, 0.08955223858356476, 0.09153348207473755], "val_loss": [2.300058603286743, 2.300058603286743, 2.300058603286743, 2.300058603286743, 2.300058603286743, 2.300058603286743], "val_accuracy": [0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293, 0.03733333200216293]}}]