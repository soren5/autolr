[{"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.7440000176429749, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [1.9704439636423698, 1.4323109746089528, 1.014620657374027, 0.8898699337449513, 0.8246123923318198, 0.7537155316143995, 0.7102411652930802, 0.7207050150206942, 0.675300660992752, 0.6538412305405269, 0.639789903349707, 0.6343696374761556, 0.6179415920485816], "accuracy": [0.3435477614402771, 0.5108968615531921, 0.6201294660568237, 0.6667547225952148, 0.6783780455589294, 0.7153612375259399, 0.7288337349891663, 0.7235503792762756, 0.7466648817062378, 0.7464007139205933, 0.752740740776062, 0.7564390301704407, 0.7629110813140869], "val_loss": [1.5827346188681466, 0.8464340823037284, 0.7811788320541382, 0.7227878059659686, 0.5878082343510219, 0.5686360767909459, 0.6420043706893921, 0.5534346955163139, 0.5393474953515189, 0.5822552612849644, 0.5036557572228568, 0.4914968694959368, 0.5340538024902344], "val_accuracy": [0.4363333284854889, 0.6343333125114441, 0.6389999985694885, 0.6470000147819519, 0.7599999904632568, 0.731333315372467, 0.6949999928474426, 0.7770000100135803, 0.7329999804496765, 0.7279999852180481, 0.7670000195503235, 0.7753333449363708, 0.7463333606719971]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [1, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [0, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [87, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.7440000176429749, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [1.9704439636423698, 1.4323109746089528, 1.014620657374027, 0.8898699337449513, 0.8246123923318198, 0.7537155316143995, 0.7102411652930802, 0.7207050150206942, 0.675300660992752, 0.6538412305405269, 0.639789903349707, 0.6343696374761556, 0.6179415920485816], "accuracy": [0.3435477614402771, 0.5108968615531921, 0.6201294660568237, 0.6667547225952148, 0.6783780455589294, 0.7153612375259399, 0.7288337349891663, 0.7235503792762756, 0.7466648817062378, 0.7464007139205933, 0.752740740776062, 0.7564390301704407, 0.7629110813140869], "val_loss": [1.5827346188681466, 0.8464340823037284, 0.7811788320541382, 0.7227878059659686, 0.5878082343510219, 0.5686360767909459, 0.6420043706893921, 0.5534346955163139, 0.5393474953515189, 0.5822552612849644, 0.5036557572228568, 0.4914968694959368, 0.5340538024902344], "val_accuracy": [0.4363333284854889, 0.6343333125114441, 0.6389999985694885, 0.6470000147819519, 0.7599999904632568, 0.731333315372467, 0.6949999928474426, 0.7770000100135803, 0.7329999804496765, 0.7279999852180481, 0.7670000195503235, 0.7753333449363708, 0.7463333606719971]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [6, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.7440000176429749, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [1.9704439636423698, 1.4323109746089528, 1.014620657374027, 0.8898699337449513, 0.8246123923318198, 0.7537155316143995, 0.7102411652930802, 0.7207050150206942, 0.675300660992752, 0.6538412305405269, 0.639789903349707, 0.6343696374761556, 0.6179415920485816], "accuracy": [0.3435477614402771, 0.5108968615531921, 0.6201294660568237, 0.6667547225952148, 0.6783780455589294, 0.7153612375259399, 0.7288337349891663, 0.7235503792762756, 0.7466648817062378, 0.7464007139205933, 0.752740740776062, 0.7564390301704407, 0.7629110813140869], "val_loss": [1.5827346188681466, 0.8464340823037284, 0.7811788320541382, 0.7227878059659686, 0.5878082343510219, 0.5686360767909459, 0.6420043706893921, 0.5534346955163139, 0.5393474953515189, 0.5822552612849644, 0.5036557572228568, 0.4914968694959368, 0.5340538024902344], "val_accuracy": [0.4363333284854889, 0.6343333125114441, 0.6389999985694885, 0.6470000147819519, 0.7599999904632568, 0.731333315372467, 0.6949999928474426, 0.7770000100135803, 0.7329999804496765, 0.7279999852180481, 0.7670000195503235, 0.7753333449363708, 0.7463333606719971]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5, 7, 0], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [0, 86, 50, 25], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [87, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [17, 47, 50, 41, 34]], "fitness": -0.6248571276664734, "mapping_values": [1, 18, 18, 11, 7, 4, 8, 8, 4, 4, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), grad))), tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))))), tf.math.negative(tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.300270208451474, 2.2977708348382686, 2.2957048201683787, 2.2921004236775806, 2.289231818507392, 2.287196606440929, 2.2843151121815954, 2.281954781506213, 2.277522927655709, 2.2748921878302277, 2.2732950114712596, 2.2675917705981297, 2.267650327473395, 2.2625936171980485, 2.2587319218392827, 2.256015214906188, 2.252805734685289, 2.2501174797392665, 2.2459525993676186, 2.242255345374649, 2.2395685648071044, 2.234678889372723, 2.2312134100130883, 2.228660245062007, 2.224632961812068, 2.2198942125182124, 2.2134545790032782, 2.2108244457579938, 2.2060084779737115, 2.2013470641594552, 2.1940774420044282, 2.1930217538858057, 2.1863182595282846, 2.1810958701952368, 2.1746142605559986, 2.1680950624689905, 2.1644192657072656, 2.155320643969279, 2.1511257717937227, 2.1451498029915697, 2.1365555309269957, 2.1307489407171176, 2.1199543248739507, 2.1133171934194066, 2.1071856275068974, 2.095497812970975, 2.087992459933173, 2.0769978411335277, 2.0709553415497233, 2.0590578924316882, 2.050950860303265, 2.0404962558378523, 2.0306993152455663, 2.0186990333066372, 2.0080678001323697, 1.9966873835893812, 1.98408480546163, 1.9720597136935474, 1.9642262004228268, 1.9499891364043809, 1.9359367085391221, 1.9246616098685838, 1.9127546665517645, 1.8949873284924503, 1.8868498598595558, 1.871588538257028, 1.85102541765375, 1.8416115415567074, 1.8228828290733505, 1.8121642351244986, 1.8024463492645295, 1.7863438084707788, 1.7712618790723391, 1.7540855099732582, 1.7357901236195654, 1.7180064088869025, 1.7099835249285231, 1.691973935202081, 1.6834433046172654, 1.6644618358311005, 1.650062941226347, 1.6285433690970867, 1.624227835895552, 1.6096598730426124, 1.5920098566848369, 1.5826969831658393, 1.5679571022053342, 1.5532738465391145, 1.5364265767354315, 1.5319055228453144, 1.5107831331433685, 1.50158871358585, 1.4874168867763196, 1.470990153320115, 1.4779980350652344, 1.4595098976351408, 1.4460084574207763, 1.4294401726245942, 1.431811719333743, 1.4257538597014727], "accuracy": [0.09311848133802414, 0.10527011007070541, 0.10460969805717468, 0.11715757846832275, 0.11847840249538422, 0.12891295552253723, 0.1372341811656952, 0.1438383311033249, 0.15572579205036163, 0.1640470176935196, 0.17012283205986023, 0.1826707124710083, 0.18280279636383057, 0.19323734939098358, 0.2102760523557663, 0.21252146363258362, 0.2145027071237564, 0.22493726015090942, 0.2308809906244278, 0.2370888888835907, 0.24541011452674866, 0.2557125985622406, 0.2641659080982208, 0.2604675590991974, 0.26997753977775574, 0.2790912687778473, 0.2883370816707611, 0.29480913281440735, 0.2957337200641632, 0.30405494570732117, 0.3183199167251587, 0.30682867765426636, 0.3156782388687134, 0.3156782388687134, 0.3279619514942169, 0.3331131935119629, 0.33747193217277527, 0.34922730922698975, 0.35107648372650146, 0.360190212726593, 0.36547350883483887, 0.36164310574531555, 0.36785101890563965, 0.37339848279953003, 0.37841764092445374, 0.3851538896560669, 0.37907806038856506, 0.3881917893886566, 0.39149385690689087, 0.3961167633533478, 0.3975696861743927, 0.40866464376449585, 0.4072117209434509, 0.41011756658554077, 0.410910040140152, 0.41289129853248596, 0.42385417222976685, 0.4220050275325775, 0.4155329465866089, 0.422929584980011, 0.4297979176044464, 0.4295337498188019, 0.4371945559978485, 0.4399682879447937, 0.43706247210502625, 0.44168537855148315, 0.4554220139980316, 0.44908201694488525, 0.45647865533828735, 0.4679698944091797, 0.4593845009803772, 0.4636111557483673, 0.46427157521247864, 0.4695548713207245, 0.4710077941417694, 0.4791969358921051, 0.4748381972312927, 0.4780081808567047, 0.47629112005233765, 0.4839519262313843, 0.4904239773750305, 0.49425438046455383, 0.4935939908027649, 0.4951789677143097, 0.5023114681243896, 0.5033681392669678, 0.5077268481254578, 0.509311854839325, 0.5097081065177917, 0.5025756359100342, 0.5147272348403931, 0.5243692994117737, 0.5242372155189514, 0.524501383304596, 0.5182934999465942, 0.5239730477333069, 0.5231805443763733, 0.5337471961975098, 0.5279355645179749, 0.5262184739112854], "val_loss": [1.9677610397338867, 1.964979921068464, 1.9621920585632324, 1.9594203404017858, 1.956695216042655, 1.9539359637669154, 1.9512082508632116, 1.9484712736947196, 1.9457026890345983, 1.9429089682442802, 1.9400890895298548, 1.9372214589800154, 1.9343361854553223, 1.9313918522426061, 1.9283595766339983, 1.9252873148236955, 1.9221465247017997, 1.9189190183367049, 1.915641920907157, 1.912231172834124, 1.9087560517447335, 1.9051454407828194, 1.901498862675258, 1.897758960723877, 1.8938899721418108, 1.8898985045296806, 1.8857359204973494, 1.881450857434954, 1.8770087787083216, 1.8724026679992676, 1.8676013265337263, 1.8626706940787179, 1.8575570923941476, 1.8522612026759557, 1.8467573438371931, 1.8410145214625768, 1.8351654325212752, 1.8289886202130998, 1.8226274762834822, 1.8160420145307268, 1.8091990607125419, 1.80214752469744, 1.7948098863874162, 1.7871950694492884, 1.7794017791748047, 1.7712586947849818, 1.7628562791006905, 1.7541260038103377, 1.745161805834089, 1.7358448845999581, 1.726241179874965, 1.7162884984697615, 1.7061131341116769, 1.6955735002245222, 1.6848182678222656, 1.6737077917371477, 1.6622291633061, 1.6503873552594865, 1.6384758268083846, 1.6261803082057409, 1.613600594656808, 1.6007829734257288, 1.5876785346439906, 1.5743228707994734, 1.5608611106872559, 1.5471243177141463, 1.5330375603267126, 1.5189453874315535, 1.5045111519949776, 1.489900963647025, 1.4753252097538538, 1.4605286461966378, 1.4458092280796595, 1.430774450302124, 1.4157373905181885, 1.4006704602922713, 1.3857747146061488, 1.3707174573625838, 1.355870587485177, 1.3408074378967285, 1.3258819920676095, 1.3108479295458113, 1.296163524900164, 1.2817083086286272, 1.2671870504106795, 1.2531018938337053, 1.2389508656093053, 1.2250559670584542, 1.2114691734313965, 1.1983551297869002, 1.1850828783852714, 1.172184671674456, 1.1595439570290702, 1.14711822782244, 1.1354175635746546, 1.1236980642591203, 1.1122234548841203, 1.1007704394204276, 1.0900562490735735, 1.079754386629377], "val_accuracy": [0.059333331882953644, 0.07666666805744171, 0.10466666519641876, 0.13066667318344116, 0.1576666682958603, 0.18733333051204681, 0.21466666460037231, 0.23199999332427979, 0.25699999928474426, 0.2823333442211151, 0.30133333802223206, 0.31833332777023315, 0.33533334732055664, 0.34833332896232605, 0.3580000102519989, 0.36500000953674316, 0.3733333349227905, 0.3813333213329315, 0.3843333423137665, 0.3930000066757202, 0.3996666669845581, 0.40433332324028015, 0.40833333134651184, 0.41333332657814026, 0.41866666078567505, 0.4256666600704193, 0.43166667222976685, 0.4350000023841858, 0.4399999976158142, 0.44600000977516174, 0.4503333270549774, 0.4543333351612091, 0.46000000834465027, 0.4636666774749756, 0.46833333373069763, 0.4736666679382324, 0.47566667199134827, 0.47966668009757996, 0.4833333194255829, 0.48533332347869873, 0.4880000054836273, 0.4933333396911621, 0.4973333477973938, 0.5009999871253967, 0.5066666603088379, 0.5116666555404663, 0.5176666378974915, 0.5206666588783264, 0.5226666927337646, 0.5296666622161865, 0.5323333144187927, 0.5360000133514404, 0.5379999876022339, 0.5383333563804626, 0.5406666398048401, 0.5429999828338623, 0.5453333258628845, 0.546999990940094, 0.5486666560173035, 0.5509999990463257, 0.5540000200271606, 0.5553333163261414, 0.5559999942779541, 0.5583333373069763, 0.5603333115577698, 0.562666654586792, 0.5666666626930237, 0.5673333406448364, 0.5713333487510681, 0.5736666917800903, 0.5743333101272583, 0.5746666789054871, 0.5746666789054871, 0.5766666531562805, 0.5786666870117188, 0.5809999704360962, 0.5816666483879089, 0.5839999914169312, 0.5860000252723694, 0.5889999866485596, 0.5910000205039978, 0.5933333039283752, 0.5926666855812073, 0.5953333377838135, 0.597000002861023, 0.6000000238418579, 0.6023333072662354, 0.6036666631698608, 0.6050000190734863, 0.6110000014305115, 0.6119999885559082, 0.6150000095367432, 0.6190000176429749, 0.6230000257492065, 0.624666690826416, 0.6290000081062317, 0.6323333382606506, 0.6356666684150696, 0.640333354473114, 0.6416666507720947]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [97, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.3465714156627655, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [5.187785300848239, 2.4633442931691056, 2.2967451359412894, 2.3041632728113113, 2.303682313477437, 2.303277184918824], "accuracy": [0.18082155287265778, 0.14278165996074677, 0.1274600476026535, 0.09945846349000931, 0.0952318087220192, 0.10077928751707077], "val_loss": [1.862745761871338, 1.8731399944850378, 1.9747860091073173, 1.9736321994236536, 1.9735636711120605, 1.9735730034964425], "val_accuracy": [0.3499999940395355, 0.2800000011920929, 0.10233332961797714, 0.09966666996479034, 0.09833333641290665, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 8, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.3465714156627655, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [5.187785300848239, 2.4633442931691056, 2.2967451359412894, 2.3041632728113113, 2.303682313477437, 2.303277184918824], "accuracy": [0.18082155287265778, 0.14278165996074677, 0.1274600476026535, 0.09945846349000931, 0.0952318087220192, 0.10077928751707077], "val_loss": [1.862745761871338, 1.8731399944850378, 1.9747860091073173, 1.9736321994236536, 1.9735636711120605, 1.9735730034964425], "val_accuracy": [0.3499999940395355, 0.2800000011920929, 0.10233332961797714, 0.09966666996479034, 0.09833333641290665, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [1, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [92, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [12, 47, 50, 41, 34]], "fitness": -0.2800000011920929, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.math.multiply(sigma, alpha)))", "other_info": {"loss": [2.301512409368164, 2.3019912395305986, 2.303559548661788, Infinity, NaN, NaN, NaN, NaN], "accuracy": [0.08942015469074249, 0.09642054885625839, 0.09074098616838455, 0.11042134463787079, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.970588207244873, 1.9701733589172363, 1.9515989167349679, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03933333232998848, 0.0416666679084301, 0.24033333361148834, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 3, 0, 6, 4, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [4, 59, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 8, 2, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)))))), tf.math.negative(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.add(sigma, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [9, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [4, 5, 4, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [87, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0750231146812439, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 2, 0, 3, 0, 3, 2, 3, 3, 0], [71, 65, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [0, 3], [68], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 9, 9, 5, 4, 2, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)))))), tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.302218299579028, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [8, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [9, 86, 50, 99, 56, 21, 54], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [71, 78, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [7, 3], [], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [1, 1, 1, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07475894689559937, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [9, 86, 50, 99, 56, 21, 54], [1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 3, 0, 2, 0, 3, 2, 3, 3, 0], [86, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 1, 3, 6, 8, 5], [2, 1, 2, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 8, 4, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.negative(tf.math.add(beta, beta)), grad)), tf.math.divide_no_nan(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [8, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 5, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 2, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [9, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [22, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.multiply(alpha, tf.math.square(tf.math.add(beta, grad))))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302218299579028, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 9, 3, 4, 0, 6, 4, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 1, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 8, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(alpha, tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3015123059516256, 2.3019823367018444, 2.3029032972242853, 2.3022543931476602, 2.3021714154204296, 2.3031104511320946], "accuracy": [0.08942015469074249, 0.09628847241401672, 0.0874389111995697, 0.09192973375320435, 0.0878351628780365, 0.09285431355237961], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 6, 4, 3, 1, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.3015123059516256, 2.3019823367018444, 2.3029032972242853, 2.3022543931476602, 2.3021714154204296, 2.3031104511320946], "accuracy": [0.08942015469074249, 0.09628847241401672, 0.0874389111995697, 0.09192973375320435, 0.0878351628780365, 0.09285431355237961], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [1, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [7, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 0, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 7, 4, 3, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(tf.math.multiply(sigma, alpha)), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3015123059516256, 2.3019823367018444, 2.3029032972242853, 2.3022543931476602, 2.3021714154204296, 2.3031104511320946], "accuracy": [0.08942015469074249, 0.09628847241401672, 0.0874389111995697, 0.09192973375320435, 0.0878351628780365, 0.09285431355237961], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [4, 9, 6, 6, 0, 3, 4, 1, 5], [3, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 5, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3015123059516256, 2.3019823367018444, 2.3029032972242853, 2.3022543931476602, 2.3021714154204296, 2.3031104511320946], "accuracy": [0.08942015469074249, 0.09628847241401672, 0.0874389111995697, 0.09192973375320435, 0.0878351628780365, 0.09285431355237961], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [1, 1, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [97, 86, 50], [1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 8, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 3, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [6, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [44, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 3, 3, 1, 2, 0, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad))))), tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(sigma, tf.math.multiply(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3015123059516256, 2.3019823367018444, 2.3029032972242853, 2.3022543931476602, 2.3021714154204296, 2.3031104511320946], "accuracy": [0.08942015469074249, 0.09628847241401672, 0.0874389111995697, 0.09192973375320435, 0.0878351628780365, 0.09285431355237961], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [8, 86, 50], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [71, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [76, 47, 50, 41, 34]], "fitness": -0.036571428179740906, "mapping_values": [1, 3, 3, 2, 1, 1, 9, 9, 5, 4, 2, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))))), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.multiply(sigma, alpha)))", "other_info": {"loss": [2.302157560595904, 2.304776271509693, 2.3083840803998634, 2.310994841371939, 2.315003156284095, 2.3211937576095427], "accuracy": [0.08730682730674744, 0.0886276587843895, 0.07845727354288101, 0.08017434924840927, 0.07172103971242905, 0.07251353561878204], "val_loss": [1.971963609967913, 1.9742202758789062, 1.9768078667776925, 1.9798575810023717, 1.9833125386919295, 1.9877684456961495], "val_accuracy": [0.03200000151991844, 0.027000000700354576, 0.02433333359658718, 0.022333333268761635, 0.024000000208616257, 0.027666667476296425]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 6, 6, 0, 3, 4, 1, 5], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 2, 2], [0, 86, 50], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 3, 3, 0, 3, 2, 3, 3, 0], [87, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [1, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [17, 47, 50, 41, 34]], "fitness": -0.029428571462631226, "mapping_values": [1, 3, 3, 2, 1, 1, 13, 13, 8, 5, 2, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.negative(tf.math.add(beta, alpha)), tf.math.add(beta, grad))), tf.math.divide_no_nan(grad, tf.math.multiply(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), grad)))), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.3027653248554776, 2.306280781454052, 2.3103528296738065, 2.3128581263716383, 2.315966110534325, 2.3202804721121333], "accuracy": [0.08598599582910538, 0.08730682730674744, 0.07132479548454285, 0.06987188011407852, 0.06339981406927109, 0.06168273836374283], "val_loss": [1.9734528405325753, 1.9763281004769462, 1.9792735236031669, 1.9822588648114885, 1.9853012221200126, 1.9884450776236398], "val_accuracy": [0.027000000700354576, 0.020999999716877937, 0.014333332888782024, 0.01133333332836628, 0.009666666388511658, 0.008333333767950535]}}]