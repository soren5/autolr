[{"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 0, 0], [0, 0, 0, 3, 1, 0], [8, 57, 3], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 0, 1, 3, 2], [82, 47, 50, 41, 34]], "fitness": -0.821142852306366, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 5, 1, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.2731934976521075, 1.8761949224431738, 1.514015327103307, 1.3336788184134842, 1.0262513890273977, 0.8760004306135554, 0.8017255590812579, 0.7341381083893943, 0.6901394374508191, 0.6895585803701547, 0.6322624550251803, 0.6158902277295868, 0.5996374628799246, 0.6172661163850688, 0.5793115653067122, 0.5610176062602817, 0.5551137445530698, 0.52921934995228, 0.5259130912575944, 0.5049112898058596, 0.5017933331822612, 0.48959006182726394, 0.4736171237678576, 0.48211593985982687, 0.4675398638117441, 0.45167604798905964, 0.43490773266993965], "accuracy": [0.2864879071712494, 0.3933430314064026, 0.49293357133865356, 0.5361247062683105, 0.6128648519515991, 0.6593580842018127, 0.696209192276001, 0.7238145470619202, 0.7397965788841248, 0.7320036888122559, 0.7594769597053528, 0.7643640041351318, 0.7724210619926453, 0.76542067527771, 0.7819310426712036, 0.7907806038856506, 0.7872143983840942, 0.798309326171875, 0.8049134612083435, 0.8112534880638123, 0.809140145778656, 0.8128384351730347, 0.8247259259223938, 0.8234050869941711, 0.8259146809577942, 0.8352925777435303, 0.8389908671379089], "val_loss": [1.4929404939923967, 1.3221077919006348, 1.3787037645067488, 0.9395905222211566, 0.6478887626102993, 0.6797411271503994, 0.5652157749448504, 0.543152894292559, 0.5284145218985421, 0.5090000288827079, 0.47742910044533865, 0.5134258610861642, 0.5193345206124442, 0.4709359407424927, 0.4609178900718689, 0.4420319199562073, 0.42596882581710815, 0.4506069506917681, 0.42910850048065186, 0.46437188557216097, 0.4511220710618155, 0.3786434956959316, 0.3989220176424299, 0.4325557606560843, 0.3839914969035557, 0.3772825002670288, 0.40996297768184115], "val_accuracy": [0.39633333683013916, 0.49300000071525574, 0.4846666753292084, 0.609666645526886, 0.70333331823349, 0.6819999814033508, 0.7456666827201843, 0.7493333220481873, 0.746999979019165, 0.7620000243186951, 0.7836666703224182, 0.7536666393280029, 0.7549999952316284, 0.7850000262260437, 0.7893333435058594, 0.8116666674613953, 0.8096666932106018, 0.7906666398048401, 0.8163333535194397, 0.7823333144187927, 0.8086666464805603, 0.8413333296775818, 0.8286666870117188, 0.8053333163261414, 0.8386666774749756, 0.8389999866485596, 0.8176666498184204]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [0, 0, 0, 3, 1, 0], [8, 57, 3], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 0, 1, 3, 2], [90, 47, 50, 41, 34]], "fitness": -0.7917143106460571, "mapping_values": [1, 5, 5, 4, 1, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 5, 1, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.2567430004199984, 2.101785500193505, 1.8472123621256753, 1.3702669139268013, 0.9864705244406198, 1.0186742201473074, 0.801494393263983, 0.7645886773918882, 0.728801187215905, 0.6607878165962422, 0.6648788535363481, 0.6585176204016432, 0.6262580148689719, 0.578441594837679, 0.5984738512738915, 0.5634500914560947, 0.5632730957350444], "accuracy": [0.25161802768707275, 0.3590014576911926, 0.4093250632286072, 0.5258222222328186, 0.6358473300933838, 0.6330735683441162, 0.6985867023468018, 0.7067758440971375, 0.7333245277404785, 0.7536653280258179, 0.7524765729904175, 0.7544577717781067, 0.7573636174201965, 0.7790252566337585, 0.7672698497772217, 0.7895918488502502, 0.7858935594558716], "val_loss": [1.6439903804234095, 1.6583257062094552, 1.177628517150879, 0.6968334402356829, 1.0106051308768136, 0.5897375856127057, 0.5964131355285645, 0.5403486660548619, 0.540175029209682, 0.6013211693082537, 0.4850021941321237, 0.45817255122320993, 0.46656361648014616, 0.4628051774842398, 0.4442481654030936, 0.4724523850849697, 0.45655590295791626], "val_accuracy": [0.4749999940395355, 0.4833333194255829, 0.48233333230018616, 0.6990000009536743, 0.5590000152587891, 0.7553333044052124, 0.7160000205039978, 0.762333333492279, 0.7590000033378601, 0.734666645526886, 0.7883333563804626, 0.8019999861717224, 0.7839999794960022, 0.7923333048820496, 0.796999990940094, 0.7900000214576721, 0.7940000295639038]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [0, 0, 0, 3, 1, 0], [8, 17, 28, 87], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [6, 3, 9, 3, 9], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.7257142663002014, "mapping_values": [1, 6, 6, 5, 1, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(sigma, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [1.6183538530732915, 1.1307156311601239, 1.0561477115771176, 1.0246773423016142, 0.9911173589871056, 0.9883827863037468, 0.9734953371698453, 0.9552832153243096, 0.9603773128512418, 0.9490089154183636, 0.9372125164376998, 0.9354804079089545, 0.9351634476651227, 0.9127701300482598, 0.9195980213857078, 0.9136261961180159, 0.908616499334924, 0.9151554222450816, 0.8986328306561526, 0.8956174043821165, 0.9028636305764556, 0.8933629534027564, 0.8933387175133483, 0.8891182657576759, 0.8895193276356839, 0.8867442655588548, 0.8848489977349505, 0.8803733620409322, 0.8845962565399637, 0.8765838945137118, 0.8740945657041834, 0.8780607812833855, 0.8684160143487316, 0.8747497253634627, 0.8779301137468204, 0.8647216303693998, 0.8795627514447801, 0.8744867142118152], "accuracy": [0.4205521047115326, 0.6001849174499512, 0.6288469433784485, 0.6339981555938721, 0.6474705934524536, 0.6415268778800964, 0.6583014130592346, 0.6613393425941467, 0.6583014130592346, 0.6629242897033691, 0.6695284843444824, 0.6688680648803711, 0.6653017997741699, 0.6762647032737732, 0.6745476126670837, 0.6742834448814392, 0.6728305220603943, 0.6738871932029724, 0.6803592443466187, 0.6808875799179077, 0.6760005354881287, 0.6865671873092651, 0.6869634389877319, 0.6873596906661987, 0.6861709356307983, 0.6876237988471985, 0.6848500967025757, 0.6884163022041321, 0.6865671873092651, 0.6931713223457336, 0.6853784322738647, 0.6831330060958862, 0.6886804699897766, 0.6865671873092651, 0.6870955228805542, 0.689869225025177, 0.6840575933456421, 0.6860388517379761], "val_loss": [0.8402940716062274, 0.764778903552464, 0.7326169865471976, 0.711688791002546, 0.6982202189309257, 0.6889825718743461, 0.680503351347787, 0.6738032613481794, 0.6692476102284023, 0.6644830363137382, 0.6603757313319615, 0.6564312151500157, 0.6532643863133022, 0.6501334735325405, 0.6471389021192279, 0.64485616343362, 0.642416272844587, 0.6407786096845355, 0.6388120140348162, 0.6369669437408447, 0.6353009598595756, 0.6336805990764073, 0.632193752697536, 0.6309666974203927, 0.6296180997576032, 0.6283922025135585, 0.6272651297705514, 0.6260282141821725, 0.6248058591570173, 0.6236819539751325, 0.6225698164531163, 0.6216038976396833, 0.6206068992614746, 0.6198341846466064, 0.6189397403172084, 0.6181632450648716, 0.6173500163214547, 0.6166820526123047], "val_accuracy": [0.6959999799728394, 0.7080000042915344, 0.7096666693687439, 0.7103333473205566, 0.7160000205039978, 0.718666672706604, 0.7229999899864197, 0.7229999899864197, 0.7233333587646484, 0.7256666421890259, 0.7253333330154419, 0.7283333539962769, 0.7279999852180481, 0.7283333539962769, 0.7283333539962769, 0.7300000190734863, 0.7323333621025085, 0.7326666712760925, 0.7329999804496765, 0.734000027179718, 0.734333336353302, 0.734000027179718, 0.734333336353302, 0.734666645526886, 0.7356666922569275, 0.7366666793823242, 0.737333357334137, 0.737666666507721, 0.7400000095367432, 0.737666666507721, 0.7379999756813049, 0.7390000224113464, 0.7416666746139526, 0.7409999966621399, 0.7416666746139526, 0.7403333187103271, 0.7403333187103271, 0.7403333187103271]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [0, 0, 0, 3, 1, 0], [8, 57, 87], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 0, 1, 3, 2], [90, 47, 50, 41, 34]], "fitness": -0.3497142791748047, "mapping_values": [1, 6, 6, 5, 1, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.add(alpha, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.753369865605167, 2.573627965955088, 2.3070644501288173, 2.3038318308982806, 2.303221018810975, 2.3025527439097275], "accuracy": [0.18478403985500336, 0.21344605088233948, 0.1002509593963623, 0.09681680053472519, 0.09945846349000931, 0.1002509593963623], "val_loss": [1.6518491676875524, 1.9813696316310339, 1.9751519475664412, 1.973768983568464, 1.973499366215297, 1.971670695713588], "val_accuracy": [0.2853333353996277, 0.10133333504199982, 0.10000000149011612, 0.10300000011920929, 0.10400000214576721, 0.15700000524520874]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [0, 0, 0, 3, 1, 0], [8, 57, 3], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [6, 3], [], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [90, 47, 50, 41, 34]], "fitness": -0.3482857048511505, "mapping_values": [1, 5, 5, 4, 1, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.7478318693395054, 2.243980062919569, 2.2639712496928692, 2.303533698117114, 2.3032790765219424, 2.302767274528053], "accuracy": [0.18636904656887054, 0.21952186524868011, 0.13181878626346588, 0.09866596013307571, 0.09668471664190292, 0.09668471664190292], "val_loss": [1.6649225098746163, 1.7312994003295898, 1.9739177567618233, 1.9735984802246094, 1.9733678272792272, 1.9732873780386788], "val_accuracy": [0.2626666724681854, 0.23233333230018616, 0.10000000149011612, 0.10400000214576721, 0.10866666585206985, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [9, 6, 9, 9, 0], [0, 0, 0, 3, 1, 0], [8, 57, 3], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [3, 3, 0, 1], [0, 3], [95], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0], [0, 3, 0, 3, 9], [2, 1, 0, 1, 3, 2], [78, 47, 50, 41, 34]], "fitness": -0.11599999666213989, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 8, 6, 4, 2, 1, 7, 4, 3, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), sigma)), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, sigma))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(beta), tf.math.multiply(alpha, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3016303775017963, 2.3007589790720617, 2.3019591632410203, 2.3009447117743633, 2.3007031917697987, 2.301549607201212, 2.301889055645335, 2.3024010838392845, 2.302549679202804, 2.302576950906117, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09311848133802414, 0.09113723784685135, 0.09153348207473755, 0.09509972482919693, 0.10553427785634995, 0.09866596013307571, 0.09893012791872025, 0.10157178342342377, 0.1026284471154213, 0.09972262382507324, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9704181807381767, 1.9700613021850586, 1.9700435910906111, 1.9708151817321777, 1.9721956934247697, 1.9730612209865026, 1.9735348565237862, 1.973639896937779, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.04266666620969772, 0.054666668176651, 0.07000000029802322, 0.09399999678134918, 0.10266666859388351, 0.09233333170413971, 0.1120000034570694, 0.10133333504199982, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [7, 1, 9, 0, 0, 9], [2, 0, 0, 3, 1, 0], [8, 57, 45, 38], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0], [2, 3, 9, 3, 9], [0, 1, 0, 1, 3, 2], [90, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 6, 1, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [2.3026362620230127, 2.303291198993482, 2.3036169825669655, 2.304837871079652, 2.3093602936958453, 2.31593127855929, 2.3331887070465993], "accuracy": [0.0952318087220192, 0.1022322028875351, 0.09972262382507324, 0.10276053100824356, 0.09747721254825592, 0.09668471664190292, 0.09866596013307571], "val_loss": [1.9737861497061593, 1.9739015442984444, 1.974839414869036, 1.9766483988080705, 1.9807123456682478, 1.9898979323250907, 2.0106662341526578], "val_accuracy": [0.0976666659116745, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [2, 6, 9, 7, 0, 7], [1, 0, 0, 3, 1, 0], [8, 57, 45, 38], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [21, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 0, 1, 3, 2], [89, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 5, 3, 3, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), tf.math.add(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0742306187748909, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1], [1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [7, 1, 9, 0, 0, 9], [3, 0, 2, 3, 1, 0], [41, 57, 45], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [2, 3, 6, 3, 9], [1, 1, 0, 1, 3, 2], [90, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 9, 5, 4, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(alpha, tf.math.divide_no_nan(alpha, tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))), alpha)", "other_info": {"loss": [2.4526829368042534e+17, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06696605682373047, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 7, 0, 7], [2, 0, 0, 3, 1, 0], [8, 57, 45, 38], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0], [2, 3, 9, 3, 9], [0, 1, 0, 1, 3, 2], [90, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [2.301694829403181, 2.3024397498470774, 2.3030779309134837, 2.306551527180267, 2.3247333214724177, 2.4931508775526394], "accuracy": [0.10474177449941635, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.9737404414585658, 1.9740373066493444, 1.9754396847316198, 1.982480457850865, 2.0233870915004184, 2.674196311405727], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [2, 6, 9, 7, 0, 3, 9], [0, 0, 0, 3, 1, 0], [8, 57, 45, 38, 56], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [59, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 1, 0, 1, 3, 2], [90, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 7, 3, 5, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 6, 4, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, alpha)))", "other_info": {"loss": [2.3021579627678332, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0], [1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [2, 0, 9, 2, 0], [1, 0, 0, 3, 1, 0], [8, 57, 45, 38], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 4, 8, 6, 9], [3, 1, 0, 1, 3, 2], [54, 8, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 5, 4, 2, 2, 0, 7, 4, 3, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(sigma, tf.math.sqrt(tf.math.divide_no_nan(alpha, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [1193689756.5123982, 23799101409.432835, 109473195248.88548, 305336864712.2758, 658652078345.0957, 1210655404782.3833], "accuracy": [0.10593052208423615, 0.10130762308835983, 0.09932637959718704, 0.09589222073554993, 0.10157178342342377, 0.1010434553027153], "val_loss": [4728052150.857142, 37813087670.85714, 127606540580.57143, 302466241097.1429, 590720120539.4286, 1020743310189.7142], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [7, 1, 9, 0, 0, 9], [1, 0, 0, 3, 1, 0], [8, 75, 0, 49], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [83, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1, 0, 1], [3, 3, 0], [2, 3], [], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0], [2, 3, 9, 3, 9], [3, 1, 0, 1, 3, 2], [90, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 2, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha)", "other_info": {"loss": [485657708551846.4, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.1026284471154213, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.058191509584909e+19, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09300000220537186, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 7, 0, 7], [0, 0, 0, 3, 1, 0], [4, 57, 45, 38], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [1, 3, 9, 3, 9], [3, 1, 0, 1, 3, 2], [42, 22, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 6, 4, 4, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 7, 5, 2, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.add(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), grad))))))), lambda shape,  alpha, beta, grad: tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), sigma)), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 4, 9, 9, 0], [0, 0, 0, 3, 1, 0], [8, 8, 45], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [4, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 3, 0, 3, 0, 3, 2, 3, 3, 0], [83, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [0, 3], [72], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0], [1, 3, 9, 3, 9], [2, 1, 0, 1, 3, 2], [90, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 3, 9, 9, 5, 4, 1, 1, 1, 0, 1, 1, 3, 1, 2, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))))), tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 6, 8, 9, 0, 6, 2], [0, 0, 1, 3, 1, 0], [8, 57, 29, 87], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [3, 3], [], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0], [3, 3, 9, 3, 9], [3, 1, 0, 1, 3, 2], [56, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 5, 1, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [2, 6, 6, 9, 0, 9], [0, 0, 0, 3, 1, 0], [16, 57, 28, 87], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [3, 3], [], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0], [3, 3, 9, 3, 9], [3, 1, 0, 1, 3, 2], [56, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 8, 8, 6, 2, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.negative(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, alpha)", "other_info": {"loss": [2.301692366584291, 2.3012775083369803, 2.3030046884173716, 2.3029452478723473, 2.3015165800715103, 2.3022780963820617], "accuracy": [0.09272222965955734, 0.08955223858356476, 0.08955223858356476, 0.09206181764602661, 0.09351472556591034, 0.09509972482919693], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [0, 0, 0, 3, 1, 0], [8, 57, 3], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [0, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 0, 1, 3, 2], [90, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 5, 5, 4, 1, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.301692366584291, 2.3012775083369803, 2.3030046884173716, 2.3029452478723473, 2.3015165800715103, 2.3022780963820617], "accuracy": [0.09272222965955734, 0.08955223858356476, 0.08955223858356476, 0.09206181764602661, 0.09351472556591034, 0.09509972482919693], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0], [1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 7, 0, 7], [0, 0, 0, 3, 1, 0], [8, 57, 45, 38], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 3, 9, 0, 9], [3, 1, 0, 1, 3, 2], [90, 32, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 5, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301692366584291, 2.3012775083369803, 2.3030046884173716, 2.3029452478723473, 2.3015165800715103, 2.3022780963820617], "accuracy": [0.09272222965955734, 0.08955223858356476, 0.08955223858356476, 0.09206181764602661, 0.09351472556591034, 0.09509972482919693], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [2, 0, 9, 2, 0], [2, 0, 0, 3, 1, 0], [8, 57, 45, 38], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 0, 3, 9], [2, 1, 0, 1, 3, 2], [90, 47, 50, 41, 34]], "fitness": -0.03914285823702812, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 5, 2, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), beta)), alpha))", "other_info": {"loss": [2.3031015396118164, 2.3216299168925953, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09060890227556229, 0.08255184441804886, 0.09153348207473755, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.976269245147705, 2.0259385790143694, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.027000000700354576, 0.10000000149011612, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}]