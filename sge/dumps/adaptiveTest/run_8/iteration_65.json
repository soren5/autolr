[{"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 2, 2, 2, 2, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 0, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 7, 2, 9], [1, 3, 3, 1], [41, 38]], "fitness": -0.7940000295639038, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 6, 7, 4, 1, 1, 0, 1, 0, 8, 5, 3, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.math.add(alpha, sigma), sigma), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.058927147238246, 1.927819634378232, 1.3431676645100061, 1.0145186348094317, 0.8888701074442387, 0.7546814463834847, 0.6955981395106353, 0.6953866906201347, 0.6341792002975697, 0.6250647722281296, 0.5797938720944724, 0.5928985852103081, 0.5947526686731001, 0.5685152448069197, 0.5273737267748145], "accuracy": [0.3156782388687134, 0.39307886362075806, 0.5149914026260376, 0.6243560910224915, 0.6734909415245056, 0.7214370369911194, 0.7236824631690979, 0.7313432693481445, 0.7597411274909973, 0.7552502751350403, 0.7829877138137817, 0.7745344042778015, 0.774270236492157, 0.7807422876358032, 0.7992339134216309], "val_loss": [1.9451429503304618, 1.2337192467280798, 0.7135782582419259, 0.6936976739338466, 0.5900152240480695, 0.5670611006872994, 0.5164742810385567, 0.5224762303488595, 0.498060941696167, 0.4665216718401228, 0.5013198171343122, 0.5622001545769828, 0.44195596660886494, 0.4556576524462019, 0.49823336941855295], "val_accuracy": [0.3409999907016754, 0.4543333351612091, 0.6883333325386047, 0.6916666626930237, 0.7360000014305115, 0.7406666874885559, 0.7720000147819519, 0.7703333497047424, 0.7649999856948853, 0.8096666932106018, 0.7786666750907898, 0.7436666488647461, 0.8013333082199097, 0.7926666736602783, 0.7793333530426025]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 2, 2, 2, 2, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 0, 3, 0, 0, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 7, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.7940000295639038, "mapping_values": [1, 1, 1, 0, 1, 0, 19, 19, 9, 10, 4, 1, 1, 0, 1, 0, 8, 5, 3, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), grad))))), tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.math.add(sigma, sigma), sigma), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.058927147238246, 1.927819634378232, 1.3431676645100061, 1.0145186348094317, 0.8888701074442387, 0.7546814463834847, 0.6955981395106353, 0.6953866906201347, 0.6341792002975697, 0.6250647722281296, 0.5797938720944724, 0.5928985852103081, 0.5947526686731001, 0.5685152448069197, 0.5273737267748145], "accuracy": [0.3156782388687134, 0.39307886362075806, 0.5149914026260376, 0.6243560910224915, 0.6734909415245056, 0.7214370369911194, 0.7236824631690979, 0.7313432693481445, 0.7597411274909973, 0.7552502751350403, 0.7829877138137817, 0.7745344042778015, 0.774270236492157, 0.7807422876358032, 0.7992339134216309], "val_loss": [1.9451429503304618, 1.2337192467280798, 0.7135782582419259, 0.6936976739338466, 0.5900152240480695, 0.5670611006872994, 0.5164742810385567, 0.5224762303488595, 0.498060941696167, 0.4665216718401228, 0.5013198171343122, 0.5622001545769828, 0.44195596660886494, 0.4556576524462019, 0.49823336941855295], "val_accuracy": [0.3409999907016754, 0.4543333351612091, 0.6883333325386047, 0.6916666626930237, 0.7360000014305115, 0.7406666874885559, 0.7720000147819519, 0.7703333497047424, 0.7649999856948853, 0.8096666932106018, 0.7786666750907898, 0.7436666488647461, 0.8013333082199097, 0.7926666736602783, 0.7793333530426025]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [9, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [35, 57], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [7, 4, 4, 2, 2, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 2, 0, 3, 3, 0, 5, 0], [15, 75, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.7922857403755188, "mapping_values": [1, 1, 1, 0, 1, 0, 19, 19, 9, 10, 4, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, grad), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(grad, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.pow(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), grad))), tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.074669164453027, 1.4285301764438716, 1.0521060412727752, 0.9251294385377584, 0.8213604622040883, 0.7792768826920516, 0.763150108787976, 0.7330925766078, 0.6976724380688535, 0.6623066681219586, 0.6567324487099543, 0.6471726097025813, 0.6372360338183474, 0.6222605482304746, 0.6115606005527813, 0.6044300987483991, 0.5939734535068647, 0.6044418857223904, 0.5767996761666911, 0.5712944226037588, 0.5662842830174383, 0.5483852152291574, 0.5389270671228644, 0.5264455599161959, 0.5326497465580714], "accuracy": [0.3175274133682251, 0.5120856165885925, 0.6173557043075562, 0.6612072587013245, 0.7028133869171143, 0.7087571024894714, 0.7123233675956726, 0.7301545143127441, 0.7354378700256348, 0.7490423917770386, 0.7469290494918823, 0.7574957013130188, 0.7589486241340637, 0.763439416885376, 0.7695152759552002, 0.770439863204956, 0.77677983045578, 0.7734777331352234, 0.7816668748855591, 0.7874785661697388, 0.7889314293861389, 0.7936864495277405, 0.7882710099220276, 0.8042530417442322, 0.7997622489929199], "val_loss": [1.1441354751586914, 0.9078477791377476, 0.7491226196289062, 0.6481636762619019, 0.580113445009504, 0.6157024077006749, 0.5696250029972622, 0.5441581862313407, 0.5162943261010307, 0.5263900075639997, 0.526942219052996, 0.5752982752663749, 0.5161046470914569, 0.4691419686589922, 0.4903478281838553, 0.466488242149353, 0.46663028853280203, 0.5056284495762416, 0.4511543256895883, 0.4514822449002947, 0.4536643368857248, 0.45167515107563566, 0.4383699723652431, 0.43065296752112253, 0.43916148798806326], "val_accuracy": [0.5896666646003723, 0.637333333492279, 0.6566666960716248, 0.7053333520889282, 0.7456666827201843, 0.7089999914169312, 0.7490000128746033, 0.7646666765213013, 0.7770000100135803, 0.7516666650772095, 0.7836666703224182, 0.737333357334137, 0.7716666460037231, 0.7933333516120911, 0.7756666541099548, 0.8006666898727417, 0.8169999718666077, 0.7633333206176758, 0.7979999780654907, 0.8173333406448364, 0.8133333325386047, 0.7996666431427002, 0.8090000152587891, 0.815666675567627, 0.8019999861717224]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 0], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 5, 2, 2, 2, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 2, 1, 3, 3, 3, 2, 3, 2, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.7922857403755188, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 6, 6, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.math.add(tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, alpha))), grad))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.074669164453027, 1.4285301764438716, 1.0521060412727752, 0.9251294385377584, 0.8213604622040883, 0.7792768826920516, 0.763150108787976, 0.7330925766078, 0.6976724380688535, 0.6623066681219586, 0.6567324487099543, 0.6471726097025813, 0.6372360338183474, 0.6222605482304746, 0.6115606005527813, 0.6044300987483991, 0.5939734535068647, 0.6044418857223904, 0.5767996761666911, 0.5712944226037588, 0.5662842830174383, 0.5483852152291574, 0.5389270671228644, 0.5264455599161959, 0.5326497465580714], "accuracy": [0.3175274133682251, 0.5120856165885925, 0.6173557043075562, 0.6612072587013245, 0.7028133869171143, 0.7087571024894714, 0.7123233675956726, 0.7301545143127441, 0.7354378700256348, 0.7490423917770386, 0.7469290494918823, 0.7574957013130188, 0.7589486241340637, 0.763439416885376, 0.7695152759552002, 0.770439863204956, 0.77677983045578, 0.7734777331352234, 0.7816668748855591, 0.7874785661697388, 0.7889314293861389, 0.7936864495277405, 0.7882710099220276, 0.8042530417442322, 0.7997622489929199], "val_loss": [1.1441354751586914, 0.9078477791377476, 0.7491226196289062, 0.6481636762619019, 0.580113445009504, 0.6157024077006749, 0.5696250029972622, 0.5441581862313407, 0.5162943261010307, 0.5263900075639997, 0.526942219052996, 0.5752982752663749, 0.5161046470914569, 0.4691419686589922, 0.4903478281838553, 0.466488242149353, 0.46663028853280203, 0.5056284495762416, 0.4511543256895883, 0.4514822449002947, 0.4536643368857248, 0.45167515107563566, 0.4383699723652431, 0.43065296752112253, 0.43916148798806326], "val_accuracy": [0.5896666646003723, 0.637333333492279, 0.6566666960716248, 0.7053333520889282, 0.7456666827201843, 0.7089999914169312, 0.7490000128746033, 0.7646666765213013, 0.7770000100135803, 0.7516666650772095, 0.7836666703224182, 0.737333357334137, 0.7716666460037231, 0.7933333516120911, 0.7756666541099548, 0.8006666898727417, 0.8169999718666077, 0.7633333206176758, 0.7979999780654907, 0.8173333406448364, 0.8133333325386047, 0.7996666431427002, 0.8090000152587891, 0.815666675567627, 0.8019999861717224]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 5, 2, 2, 2, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [4, 3, 1, 3, 3, 3, 2, 3, 2, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [1, 3, 3, 1], [41, 38]], "fitness": -0.4397142827510834, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [2.2260545241661105, 2.1162674289416676, 2.2841125325346665, 2.4148134820575584, 2.4011953673452795, 2.3766978894557305], "accuracy": [0.23999471962451935, 0.2533350884914398, 0.16880200803279877, 0.14093250036239624, 0.13630960881710052, 0.15400871634483337], "val_loss": [1.8033323287963867, 1.7994653838021415, 1.947070939200265, 1.9651179994855608, 1.9611845016479492, 1.9524310656956263], "val_accuracy": [0.35499998927116394, 0.3019999861717224, 0.16866666078567505, 0.17000000178813934, 0.1770000010728836, 0.18533332645893097]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 1, 1, 3], [5, 57], [0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [6, 6, 2, 5, 6, 1, 3, 0, 2, 9, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 5, 3, 0, 0, 3, 3, 1, 0], [6, 63, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [91, 38]], "fitness": -0.3817142844200134, "mapping_values": [1, 1, 1, 0, 1, 0, 19, 19, 12, 7, 4, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(grad, tf.math.square(tf.math.add(beta, grad))), grad), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.subtract(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(tf.math.negative(tf.math.add(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.894565004320539, 2.356191454751223, 2.3039343284656817, 2.30287504378815, 2.3014841136080855, 2.3180423537423], "accuracy": [0.18280279636383057, 0.15202747285366058, 0.09998679161071777, 0.09681680053472519, 0.107647605240345, 0.17197199165821075], "val_loss": [1.9206512314932687, 1.976536478315081, 1.974010944366455, 1.9731792722429549, 1.9698191370282854, 1.9785693713596888], "val_accuracy": [0.3386666774749756, 0.09833333641290665, 0.10000000149011612, 0.10100000351667404, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1], [7, 2, 2, 2, 2, 2, 3, 4, 2, 1, 4, 9, 1, 2, 9, 0, 9, 0], [5, 3, 0, 3, 0, 0, 2, 3, 3, 3, 2, 3], [30, 63, 43, 84, 1, 78, 84], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [56, 38]], "fitness": -0.27799999713897705, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.890854875283423, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.18835029006004333, 0.12402588874101639, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.2544324738638744, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.24966666102409363, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0], [2, 6, 9, 9, 0], [0, 0, 0, 3, 1, 0], [5, 57, 39], [0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1], [7, 2, 5, 2, 2, 2, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 1, 3, 3, 3, 2, 3, 2, 0], [15, 25, 43, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 9, 5, 2, 9], [3, 3, 3, 1], [29, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 3, 10, 10, 5, 5, 0, 1, 0, 0, 0, 0, 2, 2, 0, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(alpha, tf.math.add(grad, grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [5133.06805725536, 92357.50026622969, 430024.24709417514, 1193799.3058380664, 2507669.1290120194, 4682128.41804253], "accuracy": [0.09747721254825592, 0.09959053993225098, 0.10210011899471283, 0.09681680053472519, 0.1002509593963623, 0.0936468094587326], "val_loss": [18936.76339285714, 147949.84375, 495748.625, 1171033.2142857143, 2282502.285714286, 3938855.8571428573], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [8, 2, 2, 2, 2, 2, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 2, 1, 3, 3, 3, 2, 3, 2, 0], [42, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 8, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.sqrt(sigma), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0], [0, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [35, 57], [1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [7, 4, 4, 2, 2, 1, 3, 4, 2, 1, 4, 9, 8, 2, 1, 8, 9, 0], [0, 3, 0, 3, 0, 1, 3, 3, 3, 0, 5, 0], [30, 63, 43, 84, 0, 78, 84], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [9, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 29, 29, 17, 12, 7, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, alpha), tf.math.subtract(grad, tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, grad))), tf.math.sqrt(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3025725421620837, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [9, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1], [7, 0, 3, 2, 2, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 1, 3, 0, 2, 0, 3, 3, 0, 5], [15, 25, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [0, 3], [37], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 18, 18, 9, 9, 2, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.negative(tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.math.subtract(alpha, grad))), tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.multiply(tf.math.pow(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), grad))), tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3025725421620837, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0], [9, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [35, 57], [1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1], [7, 4, 4, 2, 2, 1, 3, 4, 2, 1, 4, 9, 8, 8, 1, 2, 9, 0], [3, 3, 0, 3, 0, 2, 0, 3, 3, 2, 3, 0], [30, 63, 43, 84, 29, 78, 84], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [2, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 25, 25, 14, 11, 4, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.subtract(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))))), grad))), tf.math.sqrt(tf.math.add(beta, beta)))), tf.math.add(beta, tf.math.sqrt(grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [8, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 2, 2, 2, 2, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 0, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0], [3, 3, 0, 1, 5], [2, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 0, 7, 2, 9], [2, 3, 0, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 8, 9, 4, 9, 7, 5, 2, 0, 5, 3, 2, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.multiply(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad))), tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), beta), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), sigma)), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, sigma), tf.math.add(sigma, tf.math.square(sigma)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.add(beta, sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 0], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [5, 2, 5, 2, 2, 2, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 3, 3, 0, 2, 2, 3, 3, 0], [38, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [7, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [9, 5, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3025725421620837, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 2, 1, 2, 1, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 2, 3, 3, 3, 0], [15, 99, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 4, 0, 9], [1, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 7, 4, 3, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.pow(tf.math.negative(alpha), sigma), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0], [1, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [35, 57], [1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1], [7, 4, 4, 9, 2, 1, 3, 2, 3, 4, 4, 5, 8, 1, 1, 8, 9, 0], [5, 3, 0, 3, 0, 0, 2, 3, 3, 0, 0, 1], [30, 63, 43, 84, 1, 78, 84], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [56, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 7, 7, 4, 3, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08175934851169586, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 2, 2, 2, 2, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 2, 3, 0, 0, 2, 3, 3, 0], [15, 16, 43, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0], [0, 3, 7, 2, 9, 7, 5, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 6, 7, 3, 1, 1, 0, 1, 0, 11, 8, 3, 2], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), sigma), sigma), tf.math.add(sigma, tf.math.square(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 2, 2, 2, 2, 2, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 0, 2, 3, 3, 0], [15, 16, 43, 19, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 7, 2, 9], [1, 3, 3, 1], [41, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 5, 6, 4, 1, 1, 0, 1, 0, 6, 3, 3, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(alpha, sigma), sigma))", "other_info": {"loss": [2.3034287085071483, 2.3068565921130952, 2.313170827154659, 2.322773180743565, 2.3375524486044945, 68.23692424312134, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08875974267721176, 0.08466517180204391, 0.07872143387794495, 0.07409853488206863, 0.07449477910995483, 0.08519349992275238, 0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9728995050702776, 1.9771397454398019, 1.9817870685032435, 1.9892000470842635, 2.009357384272984, 2.3405415856507565e+20, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03200000151991844, 0.02866666577756405, 0.03766666725277901, 0.06333333253860474, 0.0976666659116745, 0.10000000149011612, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [7, 2, 2, 2, 2, 2, 3, 4, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 0, 0, 3, 3, 0], [30, 63, 43, 84, 1, 78, 84], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [5, 3], [], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0], [0, 2, 7, 2, 9], [1, 3, 3, 1], [41, 38]], "fitness": -0.09971428662538528, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.270242403149054, 2.308472027442931, 2.304201174563326, 2.3032564276701675, 2.303151499499199, 2.3029568629604307, 2.302958404824183, 2.302857638035216, 2.3029514834739433, 2.3029000975468126], "accuracy": [0.1868973672389984, 0.09998679161071777, 0.09642054885625839, 0.09377889335155487, 0.08928807079792023, 0.09549596905708313, 0.09747721254825592, 0.0956280529499054, 0.09576013684272766, 0.09721305221319199], "val_loss": [1.982532296861921, 1.9760033743722099, 1.9742433003016882, 1.9738457543509347, 1.9737652369907923, 1.973806653703962, 1.9738075392586845, 1.9736271585736955, 1.9736264773777552, 1.9736148289271764], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09700000286102295, 0.09700000286102295, 0.10400000214576721, 0.09700000286102295, 0.09733333438634872, 0.10400000214576721, 0.09733333438634872, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 1, 1, 3], [5, 57], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [6, 6, 2, 5, 0, 6, 3, 4, 5, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 2, 2, 3, 2, 0, 3, 3, 0, 5, 0], [6, 63, 43, 84, 1, 78], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 2, 9], [3, 3, 3, 1], [41, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 0, 6, 4, 3, 1, 0, 4, 3, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, grad))), beta)), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.30242478811289, 2.3015846114951573, 2.3024171934844544, 2.3034758913896467, 2.3022280869907816, 2.301935440419199], "accuracy": [0.09140139818191528, 0.09259014576673508, 0.09325055778026581, 0.08585391938686371, 0.09219389408826828, 0.09140139818191528], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]