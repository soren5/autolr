[{"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [69, 47, 50]], "fitness": -0.826285719871521, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.0916645655369384, 1.8679089836708354, 1.3002151985997301, 0.9685374617639582, 0.8718384785769308, 0.8004785946268589, 0.7097036337115588, 0.7132232704450425, 0.6740306535448617, 0.6450157926586783, 0.5796539620118071, 0.602084115078704, 0.5744482089956408, 0.5716446479471242, 0.537987966862463, 0.5291661970399043, 0.500173079913964, 0.5118549041397866, 0.4980456719442901, 0.4738505556283925, 0.4743951904720177, 0.4454302613517281, 0.45609034947620924, 0.45577351127979604, 0.44323639021951444, 0.4482355526945043, 0.42562424220177225, 0.42616333876933404, 0.42730878189397037, 0.4186343287810705, 0.39538788913956185], "accuracy": [0.2991678714752197, 0.3947959244251251, 0.5188218355178833, 0.6333377361297607, 0.6684718132019043, 0.7022850513458252, 0.7312111854553223, 0.7309470176696777, 0.7486461400985718, 0.7577598690986633, 0.7795535326004028, 0.7675340175628662, 0.7889314293861389, 0.7828556299209595, 0.7935543656349182, 0.7992339134216309, 0.8137630224227905, 0.8129705190658569, 0.8125742673873901, 0.8241975903511047, 0.817989706993103, 0.8372738361358643, 0.82683926820755, 0.8333113193511963, 0.8407079577445984, 0.832650899887085, 0.8405758738517761, 0.8425571322441101, 0.8428213000297546, 0.8441421389579773, 0.8533879518508911], "val_loss": [1.514087540762765, 0.8488903386252267, 0.8162346397127423, 0.7084197657448905, 0.6287425415856498, 0.5482706683022636, 0.5098455803734916, 0.5432957921709333, 0.49912287507738384, 0.46423585074288504, 0.515029788017273, 0.4713825157710484, 0.5128520386559623, 0.44155521052224295, 0.4454232454299927, 0.44858566352299284, 0.4255220464297703, 0.48535169873918804, 0.3911269562585013, 0.39830468382154194, 0.40362277201243807, 0.38436879430498394, 0.38723520721708027, 0.3881082023893084, 0.41013762780598234, 0.3590936064720154, 0.3862270712852478, 0.3636430501937866, 0.4090526444571359, 0.35949175698416574, 0.3781434382711138], "val_accuracy": [0.4856666624546051, 0.6163333058357239, 0.6033333539962769, 0.6449999809265137, 0.7196666598320007, 0.7546666860580444, 0.7713333368301392, 0.7596666812896729, 0.7646666765213013, 0.793666660785675, 0.7493333220481873, 0.7953333258628845, 0.7590000033378601, 0.7996666431427002, 0.8029999732971191, 0.7976666688919067, 0.8109999895095825, 0.7796666622161865, 0.8360000252723694, 0.8263333439826965, 0.8149999976158142, 0.8379999995231628, 0.8363333344459534, 0.8259999752044678, 0.8199999928474426, 0.8479999899864197, 0.8233333230018616, 0.8423333168029785, 0.812333345413208, 0.8450000286102295, 0.8343333601951599]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 5, 0, 3, 0, 3, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 3, 3, 1], [75, 38]], "fitness": -0.795714259147644, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 5, 1, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.multiply(sigma, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.210286151999102, 1.6502786617804324, 1.2161100008830639, 1.0477747703666118, 0.9258832836494375, 0.8699980164720492, 0.8300719505146179, 0.7966606327177684, 0.7782700636745554, 0.7391198574433852, 0.7222018130246627, 0.7023594191029969, 0.7077911251004755, 0.6922756878061538, 0.6706698339739023, 0.6629365063409575, 0.6477964938812725, 0.643282300902238, 0.6462710075658058, 0.6240760677951344, 0.6356431531348736, 0.6153802722042987, 0.6060888320620915, 0.6039837489369334, 0.5909632788342476, 0.5854741082908204, 0.584813709839098, 0.5871827450520988, 0.5923873326403983, 0.5727040781132092, 0.5651476889584972], "accuracy": [0.2550521790981293, 0.48329150676727295, 0.5704662799835205, 0.6324131488800049, 0.665830135345459, 0.6888125538825989, 0.6966054439544678, 0.7033417224884033, 0.7199841737747192, 0.7240787148475647, 0.735041618347168, 0.739400327205658, 0.7347774505615234, 0.7456082701683044, 0.7500990629196167, 0.752212405204773, 0.7584202885627747, 0.76106196641922, 0.7553823590278625, 0.7701756954193115, 0.7617223858833313, 0.7732135653495789, 0.7717606425285339, 0.7755910754203796, 0.7779685854911804, 0.7803460359573364, 0.7798177003860474, 0.7804781198501587, 0.7824593782424927, 0.789988100528717, 0.7911768555641174], "val_loss": [1.6601014477866036, 0.9376816068376813, 0.8758981398173741, 0.6892494985035488, 0.6293396609170097, 0.6256736516952515, 0.6127040386199951, 0.5776856967381069, 0.5471377883638654, 0.5295973675591605, 0.5427123478480748, 0.5184002603803363, 0.5140843561717442, 0.4933298485619681, 0.5085981913975307, 0.5113916567393711, 0.4780100924628122, 0.4855988025665283, 0.4849143198558262, 0.48587489128112793, 0.4743422440120152, 0.4540118915694101, 0.46066648619515554, 0.4518179212297712, 0.4506670662334987, 0.45303222111293245, 0.4915897675922939, 0.44605302810668945, 0.4549843839236668, 0.44980995995657785, 0.44392813955034527], "val_accuracy": [0.5569999814033508, 0.6713333129882812, 0.6470000147819519, 0.7066666483879089, 0.7323333621025085, 0.7113333344459534, 0.7300000190734863, 0.7406666874885559, 0.749666690826416, 0.7590000033378601, 0.7643333077430725, 0.765333354473114, 0.7793333530426025, 0.7916666865348816, 0.777999997138977, 0.7559999823570251, 0.7963333129882812, 0.793666660785675, 0.7876666784286499, 0.7923333048820496, 0.8013333082199097, 0.8059999942779541, 0.8003333210945129, 0.800000011920929, 0.8103333115577698, 0.8140000104904175, 0.7636666893959045, 0.812333345413208, 0.796999990940094, 0.8076666593551636, 0.8106666803359985]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 5, 0, 1, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0, 0], [0, 1, 1, 1], [3, 3, 0, 9], [3, 3], [60], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 2, 9], [2, 3, 3, 1], [95, 18]], "fitness": -0.6654285788536072, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 3, 3, 1, 2, 0, 8, 6, 2, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(grad, tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, sigma), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(beta, sigma), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3013613767249788, 2.2977550209883324, 2.2940963717216136, 2.290044798275987, 2.2874613460091835, 2.282492062545109, 2.278745658393581, 2.276737076684138, 2.2729536225814324, 2.268670986986998, 2.26403319641993, 2.2619493895392013, 2.257365125533439, 2.254315242381884, 2.248657171799601, 2.2447344237755726, 2.240485222899226, 2.2374183728537145, 2.232204000632745, 2.227799536923313, 2.221538765712925, 2.216829937683073, 2.2103800557277236, 2.2061712250591756, 2.201915593557291, 2.1927236254818925, 2.1848963606925986, 2.180377453860826, 2.174278563512173, 2.164698835818082, 2.155583653735321, 2.149340789552063, 2.1443750669045802, 2.1337276890986097, 2.123251819780647, 2.1151549558849885, 2.103442004674524, 2.0924746277561876, 2.08286920829519, 2.0728852586377142, 2.0594502060625297, 2.042708783967856, 2.033862668415181, 2.023603424309834, 2.0084001999080234, 1.9934408632110154, 1.9797102579304005, 1.964685025751756, 1.9465774258350448, 1.9330789334643959, 1.9161533942831632, 1.90275380410192, 1.8826643646416836, 1.8634204361117859, 1.8502575059876136, 1.8305734585556828, 1.8126009525073092, 1.795909030200342, 1.7804850726756816, 1.7571597245580028, 1.7421929741327742, 1.7212541147765388, 1.7079390897223066, 1.687774506447857, 1.6658258639652936, 1.6553666900728734, 1.6342496758265628, 1.615333856970737, 1.5933251681029914, 1.5752904455911498, 1.5639538737084053, 1.5409987631128794, 1.5324431158973242, 1.5237164593423127, 1.5002565292429695, 1.4741905747057031, 1.470869937530047, 1.4604454133898244, 1.4401334500064027, 1.4283632092298912, 1.4170284629765597, 1.4061871401118313, 1.3940236065381741, 1.382966490926177, 1.3666591281195548, 1.3538301049001842, 1.347709050079016, 1.3366423015502529, 1.3316405187146287, 1.3078525671475851, 1.3073516579005602, 1.2925486825381949, 1.3039167974414354, 1.2765763509133394, 1.274261283883959, 1.260610726058853, 1.252070449834896, 1.2482683084360944, 1.2298181721909391, 1.2343712568660974], "accuracy": [0.09100515395402908, 0.10447761416435242, 0.10976093262434006, 0.11966715008020401, 0.1258750557899475, 0.14212125539779663, 0.15440496802330017, 0.15295206010341644, 0.16021661460399628, 0.17910447716712952, 0.18835029006004333, 0.19231277704238892, 0.21674811840057373, 0.2207106053829193, 0.2277110069990158, 0.24065512418746948, 0.2436930388212204, 0.25359925627708435, 0.25756174325942993, 0.2673358917236328, 0.27222296595573425, 0.2880729138851166, 0.2985074520111084, 0.2975828945636749, 0.29401662945747375, 0.30722492933273315, 0.31937655806541443, 0.32399946451187134, 0.33522653579711914, 0.34024566411972046, 0.3497556447982788, 0.35081231594085693, 0.35147273540496826, 0.3591335415840149, 0.3587372899055481, 0.37802138924598694, 0.37300223112106323, 0.3781534731388092, 0.38581427931785583, 0.39149385690689087, 0.3932109475135803, 0.4069475531578064, 0.401400089263916, 0.40364548563957214, 0.40906089544296265, 0.41725003719329834, 0.4150046110153198, 0.4233258366584778, 0.4291374981403351, 0.43825122714042664, 0.4353454113006592, 0.43970412015914917, 0.44287413358688354, 0.4493461847305298, 0.4497424364089966, 0.4559503495693207, 0.45410117506980896, 0.45766741037368774, 0.4575353264808655, 0.46691322326660156, 0.4741777777671814, 0.472989022731781, 0.47932901978492737, 0.48051777482032776, 0.4854048490524292, 0.4877823293209076, 0.48949941992759705, 0.49306565523147583, 0.50350022315979, 0.501518964767456, 0.5041606426239014, 0.516708493232727, 0.5152555704116821, 0.5143309831619263, 0.5155197381973267, 0.5278034806251526, 0.529388427734375, 0.5205389261245728, 0.5281997323036194, 0.5348038673400879, 0.5391625761985779, 0.5439175963401794, 0.5398229956626892, 0.5361247062683105, 0.5497292280197144, 0.5481442213058472, 0.5460308790206909, 0.5522388219833374, 0.550521731376648, 0.5576542019844055, 0.5625412464141846, 0.5694096088409424, 0.5474838018417358, 0.5650508403778076, 0.5739004015922546, 0.5709945559501648, 0.5720512270927429, 0.5724474787712097, 0.581429123878479, 0.5807687044143677], "val_loss": [1.9671767098563058, 1.963803495679583, 1.9604287828717912, 1.9571007319859095, 1.9537412098475866, 1.9503649302891322, 1.9469843591962541, 1.9435874394008092, 1.9401094572884696, 1.9366168294634138, 1.9330261094229562, 1.9293654305594308, 1.925654343196324, 1.9218085833958216, 1.9178267206464494, 1.9137349809919084, 1.9095091819763184, 1.9051423072814941, 1.900601591382708, 1.8959457533700126, 1.8911004066467285, 1.8860349655151367, 1.8807234082903181, 1.8752211843218123, 1.869518552507673, 1.8634367670331682, 1.857091290610177, 1.8504862104143416, 1.8436025891985213, 1.8363069806780135, 1.8285963194710868, 1.8207035064697266, 1.8125510896955217, 1.8040170669555664, 1.7950473512922014, 1.7857064519609724, 1.775932856968471, 1.7656966618129186, 1.7550864219665527, 1.744028159550258, 1.7325457845415388, 1.7203845296587263, 1.7079458917890276, 1.6951032706669398, 1.681817156927926, 1.6679813180650984, 1.653632572719029, 1.6388287884848458, 1.6235060351235526, 1.6079150608607702, 1.5918754168919154, 1.5753558703831263, 1.5585389477866036, 1.5413901465279716, 1.5239404950823103, 1.506361722946167, 1.4884172507694788, 1.4703336783817835, 1.4521161488124303, 1.4335358142852783, 1.4151619161878313, 1.3965065138680595, 1.378014121736799, 1.3594809940883092, 1.3409465381077357, 1.322761058807373, 1.3044564723968506, 1.2863922800336565, 1.2684903144836426, 1.25071154321943, 1.2333334173474992, 1.2160993644169398, 1.1995766162872314, 1.183570146560669, 1.167585747582572, 1.151993887765067, 1.13700989314488, 1.122555937085833, 1.10821499143328, 1.0946238381522042, 1.081223828451974, 1.0683840683528356, 1.055556297302246, 1.0434306689671107, 1.0315423011779785, 1.0201428617749895, 1.0092519692012243, 0.998375586100987, 0.9882113592965263, 0.9779586110796247, 0.9682091985430036, 0.9588523251669747, 0.9502485139029366, 0.9414234501974923, 0.9330193655831474, 0.9246562208448138, 0.9165920530046735, 0.9089281558990479, 0.9014627933502197, 0.8945256641932896], "val_accuracy": [0.06133333221077919, 0.08533333241939545, 0.12099999934434891, 0.15199999511241913, 0.19033333659172058, 0.21899999678134918, 0.24433332681655884, 0.2746666669845581, 0.29866665601730347, 0.32066667079925537, 0.33899998664855957, 0.3540000021457672, 0.36533331871032715, 0.3763333261013031, 0.3816666603088379, 0.3866666555404663, 0.39666667580604553, 0.40433332324028015, 0.4103333353996277, 0.41600000858306885, 0.4233333468437195, 0.4300000071525574, 0.43566668033599854, 0.4403333365917206, 0.4466666579246521, 0.4506666660308838, 0.45766666531562805, 0.46166667342185974, 0.46700000762939453, 0.4703333377838135, 0.4763333201408386, 0.4803333282470703, 0.4866666793823242, 0.4933333396911621, 0.4970000088214874, 0.500333309173584, 0.5053333044052124, 0.5139999985694885, 0.5199999809265137, 0.5243333578109741, 0.5289999842643738, 0.5336666703224182, 0.5360000133514404, 0.5416666865348816, 0.5423333048820496, 0.546999990940094, 0.5503333210945129, 0.5553333163261414, 0.5590000152587891, 0.5606666803359985, 0.5613333582878113, 0.562666654586792, 0.5653333067893982, 0.5680000185966492, 0.5709999799728394, 0.5763333439826965, 0.5763333439826965, 0.5770000219345093, 0.57833331823349, 0.5786666870117188, 0.5820000171661377, 0.5860000252723694, 0.5879999995231628, 0.5893333554267883, 0.5920000076293945, 0.5923333168029785, 0.5926666855812073, 0.5956666469573975, 0.5989999771118164, 0.6010000109672546, 0.6039999723434448, 0.6083333492279053, 0.6129999756813049, 0.6153333187103271, 0.6186666488647461, 0.621999979019165, 0.6240000128746033, 0.6269999742507935, 0.6316666603088379, 0.6393333077430725, 0.6399999856948853, 0.6433333158493042, 0.6473333239555359, 0.6539999842643738, 0.6576666831970215, 0.6603333353996277, 0.6629999876022339, 0.6643333435058594, 0.6666666865348816, 0.6683333516120911, 0.6706666946411133, 0.6713333129882812, 0.675000011920929, 0.6776666641235352, 0.6783333420753479, 0.6803333163261414, 0.6819999814033508, 0.6846666932106018, 0.6859999895095825, 0.687666654586792]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 1, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [69, 17, 50]], "fitness": -0.618571400642395, "mapping_values": [1, 4, 4, 4, 0, 2, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.301654937953493, 2.2987554524915095, 2.2958020707635423, 2.2924339642787355, 2.2905669394044543, 2.2863054525551463, 2.2832549373471522, 2.281965034134935, 2.2789695032709516, 2.275425627939831, 2.2716601907364553, 2.2704893517976013, 2.2667434714363552, 2.2647080357835874, 2.2602096735415538, 2.2573300025498058, 2.2542715511931686, 2.2523349282165577, 2.248573287477142, 2.2454441821239786, 2.240756082654456, 2.237782964239094, 2.233229562984623, 2.230600083398624, 2.2282116575295254, 2.2215417651389457, 2.2160182537703137, 2.21371590034632, 2.2101821709208247, 2.2037895726269547, 2.198123713872373, 2.194347183765154, 2.1923276632374713, 2.1852788431076657, 2.1789391834690837, 2.1746861348928728, 2.1673172296487015, 2.160881306879147, 2.1556771421602545, 2.150237985054704, 2.142118577329852, 2.1321408818851704, 2.127696494353273, 2.1226303938310287, 2.1134419658196335, 2.1045342845813457, 2.0970836837041995, 2.0885515058706656, 2.077721798912787, 2.0702223517970006, 2.0604291744141485, 2.0533113786021966, 2.0412873070804656, 2.028459155123389, 2.021641888496914, 2.008974303091994, 1.9986050374566793, 1.9878218423232206, 1.9782122573863876, 1.9627754218259335, 1.9526526722154125, 1.9384415158663664, 1.9290472602863133, 1.9148229840188813, 1.8985753353670871, 1.8907312777819902, 1.875573457586389, 1.8607875978343633, 1.8425155452623216, 1.8273618600749857, 1.8177847470180344, 1.7990226414634756, 1.7891636339271262, 1.77979657319653, 1.7593645703728016, 1.7372693282864144, 1.7305190556746244, 1.7178695053078668, 1.699757536546256, 1.6849891678091242, 1.6742534835844654, 1.6588268307269036, 1.6472814052395612, 1.6333307306040012, 1.6158269662363276, 1.6009339936861917, 1.5893950035165503, 1.5778951396433243, 1.5676864441186524, 1.5452903280515145, 1.5389337109505399, 1.5207534622853192, 1.5255856801962508, 1.4998620847874093, 1.494240081714932, 1.4766593132320098, 1.4651860743938199, 1.4577889351119864, 1.4366407117603037, 1.4363942249591843], "accuracy": [0.09034473448991776, 0.10196803510189056, 0.10579843819141388, 0.11372341960668564, 0.11900673806667328, 0.13142253458499908, 0.14397041499614716, 0.13895125687122345, 0.14859332144260406, 0.16114120185375214, 0.16933034360408783, 0.17263241112232208, 0.18940694630146027, 0.19455818831920624, 0.20036983489990234, 0.21397437155246735, 0.21120063960552216, 0.22137102484703064, 0.22414475679397583, 0.230484738945961, 0.23946638405323029, 0.2541275918483734, 0.26020342111587524, 0.26324132084846497, 0.25782591104507446, 0.2743362784385681, 0.28543123602867126, 0.28424251079559326, 0.3008849620819092, 0.30220577120780945, 0.3121120035648346, 0.3061682879924774, 0.31462156772613525, 0.3214899003505707, 0.3229427933692932, 0.3350944519042969, 0.33747193217277527, 0.34328359365463257, 0.3465856611728668, 0.35147273540496826, 0.35266146063804626, 0.36864352226257324, 0.3667943477630615, 0.366530179977417, 0.37168142199516296, 0.3778893053531647, 0.37445515394210815, 0.3829084634780884, 0.39162594079971313, 0.39730551838874817, 0.3955884277820587, 0.39941883087158203, 0.39941883087158203, 0.41183462738990784, 0.40945714712142944, 0.4081363081932068, 0.4150046110153198, 0.4173821210861206, 0.4157971143722534, 0.4220050275325775, 0.43111875653266907, 0.43125081062316895, 0.4301941692829132, 0.4365341365337372, 0.4399682879447937, 0.44062870740890503, 0.44062870740890503, 0.44445911049842834, 0.452119916677475, 0.4500066041946411, 0.4539690911769867, 0.46123364567756653, 0.4585919976234436, 0.4628186523914337, 0.4679698944091797, 0.4765552878379822, 0.4764232039451599, 0.47206446528434753, 0.47272488474845886, 0.48514068126678467, 0.48672565817832947, 0.48791441321372986, 0.48712190985679626, 0.48514068126678467, 0.4983489513397217, 0.4998018741607666, 0.49531105160713196, 0.5021793842315674, 0.49887728691101074, 0.509311854839325, 0.5124818682670593, 0.5215955376625061, 0.5045568346977234, 0.5163122415542603, 0.5209351181983948, 0.5226522088050842, 0.522520124912262, 0.5288601517677307, 0.5388984084129333, 0.5316338539123535], "val_loss": [1.9678514344351632, 1.9651384353637695, 1.962425913129534, 1.9597547394888741, 1.95706421988351, 1.9543655940464564, 1.9516735076904297, 1.9489938872201102, 1.9462644032069616, 1.9435405731201172, 1.9407739639282227, 1.9379619189671107, 1.9351446287972587, 1.9322588103158134, 1.9293056215558733, 1.926316465650286, 1.9232597351074219, 1.9201463971819197, 1.9169481822422572, 1.9137036459786552, 1.9103595188685827, 1.9069139616830009, 1.9033301898411341, 1.899697712489537, 1.8959640094212122, 1.8920485632760184, 1.8880263737269811, 1.8838956015450614, 1.8796297482081823, 1.8751707758222307, 1.870515959603446, 1.865776743207659, 1.8608923639569963, 1.8558319636753626, 1.8505516733442033, 1.845097473689488, 1.8394078527178084, 1.833510194505964, 1.8274129458836146, 1.8211217607770647, 1.8146053041730608, 1.8077404839651925, 1.8007515498570033, 1.7935660907200404, 1.7861358778817313, 1.7784017154148646, 1.7704089709690638, 1.762122562953404, 1.7535341126578194, 1.744748796735491, 1.735666070665632, 1.7262635912214006, 1.716545854296003, 1.70657822063991, 1.696331194468907, 1.6858407429286413, 1.674982683999198, 1.6639041219438826, 1.6525330543518066, 1.640786988394601, 1.6288597583770752, 1.6165593011038644, 1.604130438395909, 1.5913869994027274, 1.5783408709934779, 1.56515748160226, 1.5517267159053258, 1.5380918979644775, 1.5241922310420446, 1.5100116729736328, 1.4957812173025948, 1.481304339000157, 1.4669292994907923, 1.4525868552071708, 1.4379090922219413, 1.4230829988207137, 1.4083539417811803, 1.393648386001587, 1.3788222926003593, 1.3641972201211112, 1.3495450019836426, 1.3349490846906389, 1.3203486715044295, 1.3059021745409285, 1.2915373189108712, 1.2772958959851946, 1.2633026668003626, 1.2494052478245325, 1.2358442034040178, 1.2221888133457728, 1.2088984761919295, 1.1958271435328893, 1.183429513658796, 1.1707977226802282, 1.1586993762425013, 1.1465981006622314, 1.1347887175423759, 1.1233178206852503, 1.112006323678153, 1.1012120246887207], "val_accuracy": [0.05666666850447655, 0.07500000298023224, 0.10199999809265137, 0.1263333261013031, 0.15299999713897705, 0.18066667020320892, 0.2083333283662796, 0.23133333027362823, 0.2513333261013031, 0.27300000190734863, 0.29499998688697815, 0.312333345413208, 0.32899999618530273, 0.3449999988079071, 0.35366666316986084, 0.36399999260902405, 0.3713333308696747, 0.3786666691303253, 0.3843333423137665, 0.3869999945163727, 0.39266666769981384, 0.39899998903274536, 0.40566667914390564, 0.41066667437553406, 0.4153333306312561, 0.421999990940094, 0.4273333251476288, 0.4320000112056732, 0.43433332443237305, 0.4386666715145111, 0.4429999887943268, 0.4483333230018616, 0.4546666741371155, 0.46033334732055664, 0.46433332562446594, 0.46700000762939453, 0.47066667675971985, 0.4736666679382324, 0.47866666316986084, 0.48233333230018616, 0.48399999737739563, 0.4886666536331177, 0.49399998784065247, 0.4973333477973938, 0.5026666522026062, 0.5080000162124634, 0.5139999985694885, 0.5199999809265137, 0.5249999761581421, 0.528333306312561, 0.531333327293396, 0.5329999923706055, 0.5363333225250244, 0.5386666655540466, 0.5429999828338623, 0.5443333387374878, 0.54666668176651, 0.5493333339691162, 0.5516666769981384, 0.5546666383743286, 0.5573333501815796, 0.5583333373069763, 0.5609999895095825, 0.562333345413208, 0.562333345413208, 0.5643333196640015, 0.565666675567627, 0.5676666498184204, 0.5686666369438171, 0.5720000267028809, 0.5756666660308838, 0.5763333439826965, 0.5763333439826965, 0.5770000219345093, 0.5773333311080933, 0.5786666870117188, 0.5786666870117188, 0.5803333520889282, 0.5836666822433472, 0.5853333473205566, 0.5883333086967468, 0.5920000076293945, 0.5933333039283752, 0.5933333039283752, 0.5946666598320007, 0.5963333249092102, 0.5996666550636292, 0.6010000109672546, 0.6039999723434448, 0.6056666374206543, 0.6086666584014893, 0.6129999756813049, 0.6166666746139526, 0.6179999709129333, 0.6209999918937683, 0.6226666569709778, 0.6256666779518127, 0.6266666650772095, 0.6320000290870667, 0.6359999775886536]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [2, 6, 1, 6, 0, 7], [1, 0, 0, 3, 1, 0], [5, 57, 69], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 1, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [69, 17, 50]], "fitness": -0.3288571536540985, "mapping_values": [1, 12, 12, 6, 6, 3, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), grad))))))), alpha)), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [3.084141176075369, 2.3092997037912513, 2.303634419684964, 2.3029331046797106, 2.28905467964387, 2.366867175490833, 2.3054135449731574, 2.303357867170492, 2.3028936397130257, 2.300862596586412], "accuracy": [0.1838594675064087, 0.09945846349000931, 0.10355303436517715, 0.0940430611371994, 0.1364416927099228, 0.18280279636383057, 0.10302469879388809, 0.10117553919553757, 0.10038304328918457, 0.1150442510843277], "val_loss": [1.9830052512032645, 1.9747349875313895, 1.9735918045043945, 1.9720091138567244, 1.8654063088553292, 1.9785047939845495, 1.9737745012555803, 1.9734159878322057, 1.9727445329938615, 1.9609221049717493], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.2633333206176758, 0.09966666996479034, 0.10000000149011612, 0.10233332961797714, 0.10233332961797714, 0.1836666613817215]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [0, 1, 1, 1], [4, 3, 0], [4, 3], [], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 9, 9], [2, 3, 3, 1], [95, 18]], "fitness": -0.21114285290241241, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, grad), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.22579815573208, 2.3085876015340805, 2.3034993885782464, 2.303463817729202, 2.303423665344849, 2.303355289976185, 2.30320817623408, 2.303179461548845, 2.302983802181461, 2.303635829002976], "accuracy": [0.18095363676548004, 0.10157178342342377, 0.1006472036242485, 0.09219389408826828, 0.09919429570436478, 0.09721305221319199, 0.10328886657953262, 0.09681680053472519, 0.09959053993225098, 0.08968432247638702], "val_loss": [1.9821908133370536, 1.9747655051095145, 1.9738544055393763, 1.9737612860543388, 1.9736595153808594, 1.973667894090925, 1.973731585911342, 1.973630632672991, 1.973569461277553, 1.973724024636405], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.10333333164453506, 0.10400000214576721, 0.10400000214576721, 0.10000000149011612, 0.10000000149011612, 0.10233332961797714, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 1, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0, 0], [1, 0, 1], [3, 3, 0], [4, 3], [60], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [9, 3, 9, 3, 9], [2, 3, 3, 1], [95, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302072874007995, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 4, 0, 1, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [1, 6, 8, 3, 2, 4, 0, 7, 4, 1], [0, 3, 3, 1, 1, 2, 3, 1, 2], [95, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 19, 10, 9, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), sigma)), sigma), tf.math.add(alpha, tf.math.pow(tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.subtract(beta, sigma), alpha))), beta)))", "other_info": {"loss": [1241763561.8791075, 24393124533.847576, 111278091458.62898, 306501745303.0099, 657241829780.1357, 1221067855161.922], "accuracy": [0.09747721254825592, 0.09840179979801178, 0.09734513610601425, 0.10342095047235489, 0.10276053100824356, 0.09642054885625839], "val_loss": [4728052150.857142, 37813087670.85714, 127606540580.57143, 302466241097.1429, 590720120539.4286, 1020743310189.7142], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [60], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0], [2, 3, 8, 3, 9], [0, 3, 3, 1], [69, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 8, 5, 3, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, alpha)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(tf.math.multiply(sigma, sigma)), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3020878396155795, 2.3026129007496934, 2.3026157028844185, 2.302661882714667, 2.302715891970462, 2.3026556640237534, 2.302700976150194, 2.302691738981187, 2.3027808050894545, 2.302756521191973, 2.302729674617549], "accuracy": [0.09509972482919693, 0.09734513610601425, 0.09998679161071777, 0.09589222073554993, 0.09998679161071777, 0.09774138033390045, 0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736141477312361, 1.9736202103751046, 1.9736008644104004, 1.9736062458583288, 1.9736383983067103, 1.973552976335798, 1.9735524994986398, 1.9735219138009208, 1.9735774312700545, 1.9735395567757743, 1.973538603101458], "val_accuracy": [0.10233332961797714, 0.09700000286102295, 0.09700000286102295, 0.09966666996479034, 0.09966666996479034, 0.10400000214576721, 0.10233332961797714, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 1, 0, 1, 1], [0, 0, 1, 1], [3, 3, 0], [5, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 0, 3, 1], [69, 17, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 5, 2, 2, 0, 0, 6, 4, 2, 3], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.multiply(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [4.907891573671022, 28.783394141015187, 85.92632615665451, 188.67999991116002, 353.2289581278674, 601.2540032081065], "accuracy": [0.0952318087220192, 0.09774138033390045, 0.09774138033390045, 0.10355303436517715, 0.10210011899471283, 0.09628847241401672], "val_loss": [8.900475365774971, 34.69082423618862, 85.78266034807477, 171.1089128766741, 300.8070155552455, 486.3079310825893], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [0, 0, 0, 3, 1, 0], [5, 57], [1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 4, 0, 1, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1], [3, 4, 0, 4, 1, 3, 2, 7, 8], [4, 3, 4], [15], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 2, 3, 9], [0, 3, 3, 1], [65, 17, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 4, 4, 2, 2, 0, 17, 12, 9, 3, 0, 8, 5, 3, 2], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, sigma), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))), sigma)))))), sigma)), sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), sigma), sigma), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 0, 0, 3, 0, 1, 2, 3, 3, 0], [24, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0, 9], [4, 3], [60], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 3, 3, 1], [95, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08149518072605133, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [95, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 2, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(alpha)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302072874007995, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [5, 0, 0, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0], [3, 3, 0, 8], [4, 3], [60], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 2], [3, 3, 3, 1], [95, 18]], "fitness": -0.03999999910593033, "mapping_values": [1, 5, 5, 4, 1, 2, 1, 1, 0, 1, 0, 6, 4, 3, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3028461006040097, 2.302840403152605, 2.302794541350256, 2.3022452687795183, 2.3032732455800664, 2.3018593032677193], "accuracy": [0.08836349099874496, 0.09074098616838455, 0.08849557489156723, 0.09391097724437714, 0.0886276587843895, 0.09377889335155487], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 1, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [2, 3, 3, 1], [69, 17, 50]], "fitness": -0.03999999910593033, "mapping_values": [1, 5, 5, 4, 1, 2, 3, 3, 1, 2, 0, 5, 4, 2, 2, 0, 6, 4, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.multiply(beta, sigma)))", "other_info": {"loss": [2.3028461006040097, 2.302840403152605, 2.302794541350256, 2.3022452687795183, 2.3032732455800664, 2.3018593032677193], "accuracy": [0.08836349099874496, 0.09074098616838455, 0.08849557489156723, 0.09391097724437714, 0.0886276587843895, 0.09377889335155487], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 8, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 1, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [69, 17, 50]], "fitness": -0.03999999910593033, "mapping_values": [1, 5, 5, 3, 2, 2, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 6, 4, 2, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, alpha))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.3028461006040097, 2.302840403152605, 2.302794541350256, 2.3022452687795183, 2.3032732455800664, 2.3018593032677193], "accuracy": [0.08836349099874496, 0.09074098616838455, 0.08849557489156723, 0.09391097724437714, 0.0886276587843895, 0.09377889335155487], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [1, 3], [], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1], [0, 3, 4, 3, 9, 4, 4, 3, 0, 3, 0, 3, 1, 9, 2, 7, 8, 2, 1, 0, 6, 0, 6, 7, 7, 7, 3, 4, 4, 6, 8], [1, 3, 3, 1, 1, 1, 2, 3, 3, 0, 3, 0, 0, 2, 2, 3, 3, 1, 2, 3, 2], [69, 47, 50, 89, 74]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 1, 0, 0, 0, 0, 52, 31, 21, 5], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.pow(tf.math.multiply(alpha, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), sigma), tf.math.pow(sigma, tf.math.pow(tf.math.multiply(tf.math.negative(alpha), tf.math.multiply(tf.math.negative(tf.math.multiply(tf.math.subtract(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.math.sqrt(alpha), alpha), beta)), tf.math.add(tf.math.subtract(tf.math.negative(sigma), sigma), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.add(sigma, tf.math.add(tf.math.multiply(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.pow(beta, beta), sigma))), sigma), tf.math.divide_no_nan(alpha, beta))), sigma))), tf.math.sqrt(beta)))))", "other_info": {"loss": [2.3028461006040097, 2.302840403152605, 2.302794541350256, 2.3022452687795183, 2.3032732455800664, 2.3018593032677193], "accuracy": [0.08836349099874496, 0.09074098616838455, 0.08849557489156723, 0.09391097724437714, 0.0886276587843895, 0.09377889335155487], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 0, 0, 3, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0], [6, 1, 0, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [2, 3, 3, 1], [69, 17, 50]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 7, 5, 4, 1, 0, 6, 4, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.negative(sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.multiply(beta, sigma)))", "other_info": {"loss": [2.3028461006040097, 2.302840403152605, 2.302794541350256, 2.3022452687795183, 2.3032732455800664, 2.3018593032677193], "accuracy": [0.08836349099874496, 0.09074098616838455, 0.08849557489156723, 0.09391097724437714, 0.0886276587843895, 0.09377889335155487], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [6, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 5, 0, 1, 0, 1, 2, 3, 3, 0], [44, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [60], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 0, 3, 9], [2, 3, 3, 1], [95, 38]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 5, 4, 2, 2, 0, 5, 3, 2, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(tf.math.multiply(tf.math.add(beta, grad), tf.math.pow(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(alpha)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(beta), sigma))", "other_info": {"loss": [2.3028461006040097, 2.302840403152605, 2.302794541350256, 2.3022452687795183, 2.3032732455800664, 2.3018593032677193], "accuracy": [0.08836349099874496, 0.09074098616838455, 0.08849557489156723, 0.09391097724437714, 0.0886276587843895, 0.09377889335155487], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [1, 0, 0, 3, 1, 0], [5, 57], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 5, 3, 4, 0, 6, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 5, 0, 1, 0, 1, 2, 3, 3, 0], [28, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0, 0], [1, 0, 1, 0, 0], [3, 5, 0, 9], [2, 3], [60], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 3, 3, 1], [69, 47, 50]], "fitness": -0.03885714337229729, "mapping_values": [1, 5, 5, 4, 1, 2, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 6, 4, 2, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.3029988784485207, 2.303427832458218, 2.304064995577118, 2.3040678437832183, 2.3058880839160785, 2.3048253246758827], "accuracy": [0.08915598690509796, 0.08889182657003403, 0.08717474341392517, 0.09087307006120682, 0.08466517180204391, 0.08611807972192764], "val_loss": [1.9709293501717704, 1.9713335037231445, 1.9719016892569405, 1.9723888805934362, 1.9729968479701452, 1.9735219138009208], "val_accuracy": [0.038333334028720856, 0.036666665226221085, 0.03266666829586029, 0.028999999165534973, 0.029999999329447746, 0.02866666577756405]}}]