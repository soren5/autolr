[{"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [8, 57], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 0, 1, 3, 2], [90, 47, 50]], "fitness": -0.8288571238517761, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 6, 5, 1, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.0899223295956744, 1.6705444443101471, 1.1489771186494557, 0.9475421027626423, 0.910465452885505, 0.7889540482820726, 0.7365219745149765, 0.7186898785638236, 0.6709124891670735, 0.6303491968725021, 0.6239378401443014, 0.5853135109325647, 0.599807870173892, 0.5628895425069066, 0.5431332864844489, 0.5511629699385319, 0.5330709120805599, 0.4870154675853534, 0.5059997066570043, 0.47757258961276605, 0.4928305443086487, 0.4891425324484594, 0.46021340527019294, 0.4533767794117306, 0.4462546350075474, 0.4276730988350338, 0.4633505022513191, 0.41514679858429776, 0.42233350796234087, 0.41327001245549927, 0.39862313252933873, 0.39173922870515315, 0.38182510491674604, 0.37394448817209275, 0.40357985232075083, 0.37409994793039003, 0.364464357225666, 0.3775706056590566, 0.36675320967407965, 0.33889821238285356, 0.35776866513661515, 0.34245489884314045, 0.34073814331674307], "accuracy": [0.3117157518863678, 0.45872408151626587, 0.5777308344841003, 0.6460176706314087, 0.665830135345459, 0.6985867023468018, 0.7276449799537659, 0.7302865982055664, 0.7450799345970154, 0.7621186375617981, 0.7626469135284424, 0.7799497842788696, 0.7730814814567566, 0.7843085527420044, 0.791441023349762, 0.7935543656349182, 0.7947431206703186, 0.817989706993103, 0.8120459914207458, 0.8195747137069702, 0.8119139075279236, 0.8177255392074585, 0.8273676037788391, 0.8333113193511963, 0.8335754871368408, 0.8428213000297546, 0.8248580098152161, 0.8462554216384888, 0.8429533839225769, 0.8412362933158875, 0.8520671129226685, 0.8544445633888245, 0.8552370667457581, 0.8614450097084045, 0.8445383906364441, 0.8597279191017151, 0.8652753829956055, 0.8594637513160706, 0.8594637513160706, 0.8730682730674744, 0.8640866279602051, 0.8696341514587402, 0.8685774803161621], "val_loss": [1.4705390930175781, 0.9246350356510707, 0.8473884378160749, 0.7138902800423759, 0.5853957789284843, 0.6568906818117414, 0.6218864917755127, 0.515513709613255, 0.5447192702974591, 0.5435904605048043, 0.5087486164910453, 0.46183107580457416, 0.459114100251879, 0.4759995767048427, 0.43288626841136385, 0.4229410035269601, 0.4256005116871425, 0.4067911846297128, 0.44237676688602995, 0.4533296653202602, 0.39660624095371794, 0.39661537749426706, 0.3849946175302778, 0.3828497443880354, 0.41065761872700285, 0.37039664813450407, 0.35965887137821745, 0.3672435539109366, 0.35100152662822176, 0.3956395387649536, 0.35850861242839266, 0.3790425487927028, 0.3549544470650809, 0.3993892329079764, 0.3392030085836138, 0.33876311779022217, 0.37494925941739765, 0.3323646443230765, 0.3388748679842268, 0.3283452476773943, 0.3558361956051418, 0.3367622494697571, 0.33407753705978394], "val_accuracy": [0.48266667127609253, 0.578000009059906, 0.6233333349227905, 0.6973333358764648, 0.7476666569709778, 0.7289999723434448, 0.7036666870117188, 0.7763333320617676, 0.753333330154419, 0.7363333106040955, 0.7586666941642761, 0.8043333292007446, 0.79666668176651, 0.7726666927337646, 0.8143333196640015, 0.8169999718666077, 0.8186666369438171, 0.8216666579246521, 0.8050000071525574, 0.7893333435058594, 0.8270000219345093, 0.8366666436195374, 0.8379999995231628, 0.843666672706604, 0.8289999961853027, 0.8423333168029785, 0.8533333539962769, 0.8510000109672546, 0.8533333539962769, 0.82833331823349, 0.8560000061988831, 0.8493333458900452, 0.856333315372467, 0.8186666369438171, 0.8556666374206543, 0.8586666584014893, 0.8426666855812073, 0.8669999837875366, 0.8653333187103271, 0.8633333444595337, 0.8513333201408386, 0.862333357334137, 0.862666666507721]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [8, 6, 5, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [8, 5, 2, 1, 0, 6, 2, 2, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 65, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [45, 47, 50]], "fitness": -0.8048571348190308, "mapping_values": [1, 5, 5, 4, 1, 1, 25, 25, 15, 10, 4, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(grad), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.negative(alpha)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(grad, tf.math.add(tf.math.subtract(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), tf.math.pow(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad))), tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))), beta))), tf.math.add(beta, tf.math.sqrt(tf.math.subtract(tf.math.subtract(grad, tf.math.add(beta, grad)), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.036036597754993, 1.4881364403305084, 1.0183414456362831, 0.8689422072074385, 0.8352643246301775, 0.746688839222824, 0.7279267376440076, 0.7094023007884269, 0.6745640701385395, 0.631961720974816, 0.6224225891217453, 0.604601830625893, 0.5863251246717612, 0.6040592129755454, 0.568260408033548, 0.5809759859159528, 0.5517730444744515, 0.5190232655966145, 0.519672485791996, 0.49064989094138384, 0.5108184668964572, 0.5227158595825687, 0.49552502625528, 0.49176969641251034, 0.48285039248105605, 0.45824298520822565, 0.48215674821018245, 0.46591761736995146, 0.45154247284644095, 0.4373355243759007, 0.43936104212202776, 0.42848771884141895, 0.42532801421452915, 0.4218655341195235, 0.43692314494098605, 0.41119999427600795, 0.3994337922554321, 0.4053940593078388, 0.3831650003733778, 0.3911685546934644, 0.37342903551377044, 0.3905314160037302, 0.3830001535290945], "accuracy": [0.3259807229042053, 0.4963677227497101, 0.627129852771759, 0.6744155287742615, 0.6905296444892883, 0.7164179086685181, 0.7256637215614319, 0.7371549606323242, 0.7457403540611267, 0.759609043598175, 0.7588165402412415, 0.7758552432060242, 0.7796856164932251, 0.7606657147407532, 0.7841764688491821, 0.7790252566337585, 0.787082314491272, 0.8070268034934998, 0.8025360107421875, 0.8137630224227905, 0.8086118102073669, 0.805177628993988, 0.8141592741012573, 0.8096684813499451, 0.8198388814926147, 0.8308017253875732, 0.8206313848495483, 0.8264430165290833, 0.8302733898162842, 0.8333113193511963, 0.839519202709198, 0.8401796221733093, 0.8391229510307312, 0.8383304476737976, 0.8401796221733093, 0.8461233377456665, 0.8536521196365356, 0.8457271456718445, 0.854708731174469, 0.8532558679580688, 0.8628978729248047, 0.8558974862098694, 0.8574824929237366], "val_loss": [1.4429497037615096, 0.8982865129198346, 0.6705191816602435, 0.7751537902014596, 0.5921085902622768, 0.534507325717381, 0.5278867823737008, 0.5203247581209455, 0.5519682850156512, 0.5004486186163766, 0.48927911690303255, 0.4639498506273542, 0.5258454765592303, 0.4865858895438058, 0.5034571204866681, 0.43300533294677734, 0.4395882231848581, 0.42985816512789043, 0.42709540469305857, 0.4277103202683585, 0.4177430953298296, 0.4571800061634609, 0.4091383303914751, 0.39614270414624897, 0.41881037609917776, 0.3904972161565508, 0.38461622170039583, 0.389701851776668, 0.37642968552453177, 0.4000857557569231, 0.3743149127279009, 0.40048021929604666, 0.3583435075623648, 0.4125299368585859, 0.3693436213902065, 0.34642321722848074, 0.3668100833892822, 0.35011529070990427, 0.37320178747177124, 0.35287020036152433, 0.3488884227616446, 0.352081835269928, 0.34926713364464895], "val_accuracy": [0.4806666672229767, 0.5846666693687439, 0.7110000252723694, 0.6566666960716248, 0.7250000238418579, 0.762333333492279, 0.7666666507720947, 0.7706666588783264, 0.7393333315849304, 0.7896666526794434, 0.7836666703224182, 0.7960000038146973, 0.75, 0.7760000228881836, 0.765999972820282, 0.8136666417121887, 0.8083333373069763, 0.8163333535194397, 0.8166666626930237, 0.8050000071525574, 0.8133333325386047, 0.7953333258628845, 0.8246666789054871, 0.8240000009536743, 0.8186666369438171, 0.8286666870117188, 0.8376666903495789, 0.8386666774749756, 0.8383333086967468, 0.8266666531562805, 0.8446666598320007, 0.8259999752044678, 0.8486666679382324, 0.8159999847412109, 0.8366666436195374, 0.8510000109672546, 0.8420000076293945, 0.8576666712760925, 0.8416666388511658, 0.8536666631698608, 0.8533333539962769, 0.8566666841506958, 0.8526666760444641]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [8, 5, 3, 4, 0, 6, 5, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 95, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [45, 47, 50]], "fitness": -0.8048571348190308, "mapping_values": [1, 5, 5, 4, 1, 2, 18, 18, 12, 6, 3, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.negative(alpha), tf.math.add(beta, tf.math.divide_no_nan(tf.math.square(tf.math.square(grad)), tf.math.add(tf.math.subtract(tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), tf.math.pow(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad))))), tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.036036597754993, 1.4881364403305084, 1.0183414456362831, 0.8689422072074385, 0.8352643246301775, 0.746688839222824, 0.7279267376440076, 0.7094023007884269, 0.6745640701385395, 0.631961720974816, 0.6224225891217453, 0.604601830625893, 0.5863251246717612, 0.6040592129755454, 0.568260408033548, 0.5809759859159528, 0.5517730444744515, 0.5190232655966145, 0.519672485791996, 0.49064989094138384, 0.5108184668964572, 0.5227158595825687, 0.49552502625528, 0.49176969641251034, 0.48285039248105605, 0.45824298520822565, 0.48215674821018245, 0.46591761736995146, 0.45154247284644095, 0.4373355243759007, 0.43936104212202776, 0.42848771884141895, 0.42532801421452915, 0.4218655341195235, 0.43692314494098605, 0.41119999427600795, 0.3994337922554321, 0.4053940593078388, 0.3831650003733778, 0.3911685546934644, 0.37342903551377044, 0.3905314160037302, 0.3830001535290945], "accuracy": [0.3259807229042053, 0.4963677227497101, 0.627129852771759, 0.6744155287742615, 0.6905296444892883, 0.7164179086685181, 0.7256637215614319, 0.7371549606323242, 0.7457403540611267, 0.759609043598175, 0.7588165402412415, 0.7758552432060242, 0.7796856164932251, 0.7606657147407532, 0.7841764688491821, 0.7790252566337585, 0.787082314491272, 0.8070268034934998, 0.8025360107421875, 0.8137630224227905, 0.8086118102073669, 0.805177628993988, 0.8141592741012573, 0.8096684813499451, 0.8198388814926147, 0.8308017253875732, 0.8206313848495483, 0.8264430165290833, 0.8302733898162842, 0.8333113193511963, 0.839519202709198, 0.8401796221733093, 0.8391229510307312, 0.8383304476737976, 0.8401796221733093, 0.8461233377456665, 0.8536521196365356, 0.8457271456718445, 0.854708731174469, 0.8532558679580688, 0.8628978729248047, 0.8558974862098694, 0.8574824929237366], "val_loss": [1.4429497037615096, 0.8982865129198346, 0.6705191816602435, 0.7751537902014596, 0.5921085902622768, 0.534507325717381, 0.5278867823737008, 0.5203247581209455, 0.5519682850156512, 0.5004486186163766, 0.48927911690303255, 0.4639498506273542, 0.5258454765592303, 0.4865858895438058, 0.5034571204866681, 0.43300533294677734, 0.4395882231848581, 0.42985816512789043, 0.42709540469305857, 0.4277103202683585, 0.4177430953298296, 0.4571800061634609, 0.4091383303914751, 0.39614270414624897, 0.41881037609917776, 0.3904972161565508, 0.38461622170039583, 0.389701851776668, 0.37642968552453177, 0.4000857557569231, 0.3743149127279009, 0.40048021929604666, 0.3583435075623648, 0.4125299368585859, 0.3693436213902065, 0.34642321722848074, 0.3668100833892822, 0.35011529070990427, 0.37320178747177124, 0.35287020036152433, 0.3488884227616446, 0.352081835269928, 0.34926713364464895], "val_accuracy": [0.4806666672229767, 0.5846666693687439, 0.7110000252723694, 0.6566666960716248, 0.7250000238418579, 0.762333333492279, 0.7666666507720947, 0.7706666588783264, 0.7393333315849304, 0.7896666526794434, 0.7836666703224182, 0.7960000038146973, 0.75, 0.7760000228881836, 0.765999972820282, 0.8136666417121887, 0.8083333373069763, 0.8163333535194397, 0.8166666626930237, 0.8050000071525574, 0.8133333325386047, 0.7953333258628845, 0.8246666789054871, 0.8240000009536743, 0.8186666369438171, 0.8286666870117188, 0.8376666903495789, 0.8386666774749756, 0.8383333086967468, 0.8266666531562805, 0.8446666598320007, 0.8259999752044678, 0.8486666679382324, 0.8159999847412109, 0.8366666436195374, 0.8510000109672546, 0.8420000076293945, 0.8576666712760925, 0.8416666388511658, 0.8536666631698608, 0.8533333539962769, 0.8566666841506958, 0.8526666760444641]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [0, 0, 0, 3, 1, 0], [66, 57], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1], [5, 5, 2, 5, 0, 6, 6, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [6, 3], [], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0], [0, 2, 9, 3, 9], [3, 1, 3, 1], [90, 47, 50]], "fitness": -0.33885714411735535, "mapping_values": [1, 3, 3, 1, 2, 2, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.4579216177122483, 2.3768108689380343, 2.304712496948847, 2.302642722816956, 2.2749934657500828, 2.0109502406656277], "accuracy": [0.20512482523918152, 0.21172896027565002, 0.09774138033390045, 0.10315678268671036, 0.1508387327194214, 0.32201823592185974], "val_loss": [1.8360707419259208, 1.9761620930262975, 1.973653997693743, 1.9718117713928223, 1.767096723828997, 1.9855963843209403], "val_accuracy": [0.32633334398269653, 0.09833333641290665, 0.09833333641290665, 0.14033333957195282, 0.3059999942779541, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1], [5, 5, 2, 5, 0, 6, 6, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 72, 95, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0], [0, 2, 9, 3, 9], [3, 1, 0, 1, 3, 2], [90, 47, 50]], "fitness": -0.33885714411735535, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.4579216177122483, 2.3768108689380343, 2.304712496948847, 2.302642722816956, 2.2749934657500828, 2.0109502406656277], "accuracy": [0.20512482523918152, 0.21172896027565002, 0.09774138033390045, 0.10315678268671036, 0.1508387327194214, 0.32201823592185974], "val_loss": [1.8360707419259208, 1.9761620930262975, 1.973653997693743, 1.9718117713928223, 1.767096723828997, 1.9855963843209403], "val_accuracy": [0.32633334398269653, 0.09833333641290665, 0.09833333641290665, 0.14033333957195282, 0.3059999942779541, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [8, 8, 3, 2, 0, 6, 3, 8, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [86, 16, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [45, 47, 50]], "fitness": -0.33885714411735535, "mapping_values": [1, 5, 5, 4, 1, 2, 19, 19, 12, 7, 3, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.negative(alpha), tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(grad), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), tf.math.pow(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad))), tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))))), beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.4579216177122483, 2.3768108689380343, 2.304712496948847, 2.302642722816956, 2.2749934657500828, 2.0109502406656277], "accuracy": [0.20512482523918152, 0.21172896027565002, 0.09774138033390045, 0.10315678268671036, 0.1508387327194214, 0.32201823592185974], "val_loss": [1.8360707419259208, 1.9761620930262975, 1.973653997693743, 1.9718117713928223, 1.767096723828997, 1.9855963843209403], "val_accuracy": [0.32633334398269653, 0.09833333641290665, 0.09833333641290665, 0.14033333957195282, 0.3059999942779541, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [8, 57], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1], [5, 5, 2, 5, 0, 6, 6, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 72, 95, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [90, 47, 50]], "fitness": -0.33885714411735535, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.4579216177122483, 2.3768108689380343, 2.304712496948847, 2.302642722816956, 2.2749934657500828, 2.0109502406656277], "accuracy": [0.20512482523918152, 0.21172896027565002, 0.09774138033390045, 0.10315678268671036, 0.1508387327194214, 0.32201823592185974], "val_loss": [1.8360707419259208, 1.9761620930262975, 1.973653997693743, 1.9718117713928223, 1.767096723828997, 1.9855963843209403], "val_accuracy": [0.32633334398269653, 0.09833333641290665, 0.09833333641290665, 0.14033333957195282, 0.3059999942779541, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 8, 9, 9, 0], [3, 0, 0, 3, 1, 0], [95, 57], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 5, 3, 9, 0, 6, 3, 5, 2, 1, 5, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 1, 0, 1, 1, 0, 1, 0], [0, 3, 8, 3, 9], [3, 1, 0, 1, 3, 2], [96, 47, 50]], "fitness": -0.33885714411735535, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.4579216177122483, 2.3768108689380343, 2.304712496948847, 2.302642722816956, 2.2749934657500828, 2.0109502406656277], "accuracy": [0.20512482523918152, 0.21172896027565002, 0.09774138033390045, 0.10315678268671036, 0.1508387327194214, 0.32201823592185974], "val_loss": [1.8360707419259208, 1.9761620930262975, 1.973653997693743, 1.9718117713928223, 1.767096723828997, 1.9855963843209403], "val_accuracy": [0.32633334398269653, 0.09833333641290665, 0.09833333641290665, 0.14033333957195282, 0.3059999942779541, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [8, 57], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [1, 3], [], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 0, 1, 3, 2], [90, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08374059200286865, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1], [5, 5, 2, 5, 0, 6, 6, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 72, 95, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0], [6, 2, 9, 3, 9], [3, 1, 3, 1], [45, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(sigma, alpha)", "other_info": {"loss": [2.302173204425776, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [8, 57], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 3, 6, 3, 7, 0, 7, 0, 1, 2, 1, 8], [3, 1, 0, 1, 3, 2, 2, 2, 0], [90, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 21, 12, 9, 2], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(sigma, alpha), tf.math.negative(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.add(sigma, tf.math.subtract(beta, tf.math.sqrt(beta))), beta)))), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [8, 57], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 95, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [2, 6, 9, 3, 9], [3, 1, 3, 1], [45, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 7, 4, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.divide_no_nan(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, sigma))", "other_info": {"loss": [19201823370.647354, 21.93643938013434, 38.8641085918821, 58.17364147742033, 77.46321692345181, 96.79878203926495], "accuracy": [0.09417514503002167, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [25.54306357247489, 26.555787767682755, 43.16573878696987, 59.75370134626116, 76.35672651018415, 92.97239249093192], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [8, 57], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [0, 1, 0, 1, 3, 2], [90, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1217711533.0460286, 23155145238.249107, 110306463419.93396, 306261224807.09656, 663439561362.4113, 1203961157480.246], "accuracy": [0.1022322028875351, 0.10157178342342377, 0.0956280529499054, 0.0944393053650856, 0.10091137140989304, 0.1022322028875351], "val_loss": [4724070546.285714, 37781810614.85714, 127499983725.71428, 302207842011.4286, 590231708818.2858, 1019883290624.0], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [2, 8, 9, 9, 0], [2, 0, 0, 3, 1, 0], [8, 57], [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [8, 5, 3, 4, 0, 2, 3, 5, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 1, 2, 3, 3, 0], [18, 69, 95, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [1, 3, 9, 3, 9], [3, 1, 0, 1, 3, 2], [90, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 4, 0, 2, 19, 19, 12, 7, 3, 5, 4, 2, 2, 0, 7, 4, 3, 2], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.negative(alpha), tf.math.add(tf.math.multiply(tf.math.square(grad), tf.math.add(tf.math.subtract(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), tf.math.pow(tf.math.add(beta, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), alpha))), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))), beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(sigma, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 8, 9, 9, 0], [2, 0, 0, 3, 1, 0], [95, 57], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [6, 3], [], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0], [8, 3, 4, 3, 9], [3, 1, 0, 1, 3, 2], [74, 47, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(sigma, alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [2, 6, 9, 1, 0, 2], [2, 0, 0, 3, 1, 0], [48, 57, 80], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [4, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 95, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 3, 9, 3, 1], [1, 1, 0, 1, 3, 2], [90, 47, 50]], "fitness": -0.09914285689592361, "mapping_values": [1, 5, 5, 3, 2, 2, 17, 17, 10, 7, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.square(tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))))))), tf.math.subtract(tf.math.add(beta, grad), beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [4.305241036685542e+24, 4.46343630871196e+24, 4.3672474241180994e+24, 4.3566293268007764e+24, 4.2931166654677807e+24, 4.3871011937635407e+24, 4.2553598900348757e+24, 3.9771886629085883e+24, 4.0926402657940044e+24, 4.075699197079196e+24, 4.2086751473307297e+24], "accuracy": [0.09576013684272766, 0.09866596013307571, 0.09681680053472519, 0.10051512718200684, 0.09391097724437714, 0.1018359512090683, 0.09589222073554993, 0.09721305221319199, 0.09985470771789551, 0.09642054885625839, 0.09113723784685135], "val_loss": [3.9856036892687577e+24, 3.81572630546939e+24, 3.760687397518644e+24, 3.724644600738552e+24, 3.689879652743246e+24, 3.6566168791169056e+24, 3.62338877548724e+24, 3.5891773121656804e+24, 3.5593308920120987e+24, 3.5598721063069757e+24, 3.5978994927541756e+24], "val_accuracy": [0.10000000149011612, 0.1003333330154419, 0.10066666454076767, 0.10100000351667404, 0.10100000351667404, 0.10133333504199982, 0.10066666454076767, 0.1003333330154419, 0.09966666996479034, 0.09966666996479034, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [5, 57], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [2, 5, 3, 4, 0, 6, 3, 4, 9, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [59, 16, 95, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [90, 47, 50]], "fitness": -0.07457143068313599, "mapping_values": [1, 1, 1, 0, 1, 0, 20, 20, 13, 7, 4, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.negative(alpha), tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(grad, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), tf.math.pow(tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.multiply(sigma, alpha)))", "other_info": {"loss": [2.3004328517739987, 2.3030414116491245, 2.30555112537313, 2.308528636503591, 2.310773450842371, 2.3125679026253394, 2.318645719177514, 2.3199817240907374, 2.3290634939085146, 2.3395446099467865, 2.36459290790772, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0936468094587326, 0.09325055778026581, 0.08677849918603897, 0.07713644206523895, 0.08070268481969833, 0.07568352669477463, 0.07528728246688843, 0.07924976944923401, 0.07687227427959442, 0.07647603005170822, 0.08189142495393753, 0.09311848133802414, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9714365005493164, 1.9725640841892786, 1.974198818206787, 1.9762441771371024, 1.978438445499965, 1.98078829901559, 1.9840630803789412, 1.9874798229762487, 1.9931537764413017, 2.0042263439723422, 2.042859213692801, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03400000184774399, 0.03200000151991844, 0.03033333271741867, 0.027666667476296425, 0.03133333474397659, 0.036666665226221085, 0.04500000178813934, 0.0676666647195816, 0.08399999886751175, 0.0963333323597908, 0.10000000149011612, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [8, 57], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [5, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 16, 95, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0], [0, 3, 9, 3, 9], [3, 1, 3, 1], [90, 47, 50]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3000916863760033, 2.3015989912436416, 2.3021550115860685, 2.3028859325986355, 2.302518715270837, 2.3017349803389466], "accuracy": [0.09457138925790787, 0.09642054885625839, 0.09325055778026581, 0.08717474341392517, 0.08875974267721176, 0.08875974267721176], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [9, 6, 2, 9, 0], [2, 0, 0, 3, 1, 0], [8, 57], [1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [8, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [8, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0, 1], [1, 0, 1], [3, 8, 0], [4, 3], [], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0], [0, 8, 9, 3, 9], [3, 1, 0, 1, 3, 2], [90, 47, 50]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.square(tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3000916863760033, 2.3015989912436416, 2.3021550115860685, 2.3028859325986355, 2.302518715270837, 2.3017349803389466], "accuracy": [0.09457138925790787, 0.09642054885625839, 0.09325055778026581, 0.08717474341392517, 0.08875974267721176, 0.08875974267721176], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 9, 0], [2, 0, 0, 3, 1, 0], [8, 57], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 3, 9, 3, 9, 5], [3, 1, 0, 1, 3, 2], [90, 60, 50]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 7, 6, 1, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.square(sigma))))", "other_info": {"loss": [2.3003967594020263, 2.302855181388568, 2.305137362100382, 2.307725521205297, 2.309473867728773, 2.310811404838003], "accuracy": [0.09391097724437714, 0.09391097724437714, 0.08651433140039444, 0.07806102186441422, 0.08241976052522659, 0.07700435817241669], "val_loss": [1.9713410649980818, 1.9723290715898787, 1.973728793007987, 1.9753836223057337, 1.97727632522583, 1.9792047909327917], "val_accuracy": [0.03533333167433739, 0.03233333304524422, 0.029999999329447746, 0.028999999165534973, 0.029666665941476822, 0.03333333507180214]}}]