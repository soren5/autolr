[{"genotype": [[0], [1, 0, 0, 1, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0], [7, 6, 4, 9], [0, 1, 2], [44, 57], [0, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6], [3], [1, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 0, 1, 1], [0, 3], [3, 0], [45]], "fitness": -0.8011428713798523, "mapping_values": [1, 7, 7, 4, 3, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.9432022065187977, 1.4891113469219952, 1.099808269354173, 0.8785694035414959, 0.7775194422680043, 0.7512854836510157, 0.7525677114051992, 0.6746695899078481, 0.6656494268950942, 0.6447010623418329, 0.6487896322747421, 0.598493918089614, 0.5910188193728092, 0.5769779638150712, 0.5733752936388539, 0.5511838877638806, 0.5516766511359471, 0.5179749555701766, 0.5284320287118105, 0.5261339922748647, 0.5031657484559934, 0.4657135491027273, 0.4766344167749722, 0.46790747711167535, 0.4625081451238973, 0.4582228027613817], "accuracy": [0.34447231888771057, 0.49491479992866516, 0.601109504699707, 0.6691322326660156, 0.7074362635612488, 0.7195879220962524, 0.715889573097229, 0.7434949278831482, 0.7437590956687927, 0.7528728246688843, 0.7555144429206848, 0.7713643908500671, 0.7741381525993347, 0.7845727205276489, 0.7808743715286255, 0.7910447716712952, 0.7869502305984497, 0.8013472557067871, 0.7984414100646973, 0.8037247657775879, 0.8115176558494568, 0.8317263126373291, 0.8264430165290833, 0.8274996876716614, 0.8285563588142395, 0.8265751004219055], "val_loss": [1.3665197236197335, 0.9557080268859863, 0.7010409661701748, 0.61886237348829, 0.6319512639726911, 0.5916482891355243, 0.6047661474772862, 0.5464380638939994, 0.5222688743046352, 0.509655066898891, 0.5035695518766131, 0.48769283294677734, 0.480790308543614, 0.4790100540433611, 0.45511049032211304, 0.4482256088938032, 0.4422216926302229, 0.419333815574646, 0.5353388445717948, 0.43838476283209665, 0.414346490587507, 0.4500683290617807, 0.4134481804711478, 0.40711694955825806, 0.39743350233350483, 0.41617960589272635], "val_accuracy": [0.4326666593551636, 0.5636666417121887, 0.6679999828338623, 0.721666693687439, 0.7250000238418579, 0.7136666774749756, 0.7160000205039978, 0.7429999709129333, 0.749666690826416, 0.7689999938011169, 0.7706666588783264, 0.7806666493415833, 0.7893333435058594, 0.7913333177566528, 0.8046666383743286, 0.8063333630561829, 0.7996666431427002, 0.8216666579246521, 0.7649999856948853, 0.8029999732971191, 0.8286666870117188, 0.8016666769981384, 0.8226666450500488, 0.8073333501815796, 0.8223333358764648, 0.8159999847412109]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1], [0, 1, 0, 1, 0, 1, 0, 1], [2, 2, 6, 5, 4, 9, 2, 0, 6, 9, 3, 0, 2, 4, 2], [3, 2, 0, 2, 0, 0, 0, 2, 1, 1], [44, 78, 81, 73], [0, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6], [3], [64, 19], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 0, 1, 1], [0, 3], [3, 0], [45]], "fitness": -0.8011428713798523, "mapping_values": [1, 8, 8, 4, 4, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.9432022065187977, 1.4891113469219952, 1.099808269354173, 0.8785694035414959, 0.7775194422680043, 0.7512854836510157, 0.7525677114051992, 0.6746695899078481, 0.6656494268950942, 0.6447010623418329, 0.6487896322747421, 0.598493918089614, 0.5910188193728092, 0.5769779638150712, 0.5733752936388539, 0.5511838877638806, 0.5516766511359471, 0.5179749555701766, 0.5284320287118105, 0.5261339922748647, 0.5031657484559934, 0.4657135491027273, 0.4766344167749722, 0.46790747711167535, 0.4625081451238973, 0.4582228027613817], "accuracy": [0.34447231888771057, 0.49491479992866516, 0.601109504699707, 0.6691322326660156, 0.7074362635612488, 0.7195879220962524, 0.715889573097229, 0.7434949278831482, 0.7437590956687927, 0.7528728246688843, 0.7555144429206848, 0.7713643908500671, 0.7741381525993347, 0.7845727205276489, 0.7808743715286255, 0.7910447716712952, 0.7869502305984497, 0.8013472557067871, 0.7984414100646973, 0.8037247657775879, 0.8115176558494568, 0.8317263126373291, 0.8264430165290833, 0.8274996876716614, 0.8285563588142395, 0.8265751004219055], "val_loss": [1.3665197236197335, 0.9557080268859863, 0.7010409661701748, 0.61886237348829, 0.6319512639726911, 0.5916482891355243, 0.6047661474772862, 0.5464380638939994, 0.5222688743046352, 0.509655066898891, 0.5035695518766131, 0.48769283294677734, 0.480790308543614, 0.4790100540433611, 0.45511049032211304, 0.4482256088938032, 0.4422216926302229, 0.419333815574646, 0.5353388445717948, 0.43838476283209665, 0.414346490587507, 0.4500683290617807, 0.4134481804711478, 0.40711694955825806, 0.39743350233350483, 0.41617960589272635], "val_accuracy": [0.4326666593551636, 0.5636666417121887, 0.6679999828338623, 0.721666693687439, 0.7250000238418579, 0.7136666774749756, 0.7160000205039978, 0.7429999709129333, 0.749666690826416, 0.7689999938011169, 0.7706666588783264, 0.7806666493415833, 0.7893333435058594, 0.7913333177566528, 0.8046666383743286, 0.8063333630561829, 0.7996666431427002, 0.8216666579246521, 0.7649999856948853, 0.8029999732971191, 0.8286666870117188, 0.8016666769981384, 0.8226666450500488, 0.8073333501815796, 0.8223333358764648, 0.8159999847412109]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [7, 6, 4, 9, 0], [3, 1, 1, 1, 3, 1], [44, 57], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0], [4, 6, 6, 2, 5, 7, 0, 0, 9, 4, 5, 9], [0, 5, 2, 0, 5, 3, 3, 0], [28, 70, 83], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 1, 1], [0, 3], [3, 0], [45]], "fitness": -0.30485713481903076, "mapping_values": [1, 8, 8, 5, 3, 1, 14, 14, 9, 5, 3, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.negative(alpha)))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta))), tf.math.add(beta, tf.math.negative(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.2817239245844396, 2.3129514264487288, 2.304277386128107, 2.303086096159361, 2.302551769262386, 2.2959503355027504], "accuracy": [0.19218069314956665, 0.14951789379119873, 0.09734513610601425, 0.1018359512090683, 0.09694888442754745, 0.12257297337055206], "val_loss": [1.8626662663051061, 1.9756516047886439, 1.9739341735839844, 1.973459311894008, 1.972688811165946, 1.887739862714495], "val_accuracy": [0.3790000081062317, 0.10400000214576721, 0.09833333641290665, 0.10400000214576721, 0.10333333164453506, 0.2409999966621399]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0], [0, 0, 0, 1, 0, 1, 1], [7, 4, 4, 9], [2, 1, 2], [44, 57], [0, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6], [3], [1, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 1, 1, 1], [0, 3], [3, 0], [45]], "fitness": -0.30485713481903076, "mapping_values": [1, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.pow(tf.math.pow(grad, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.2817239245844396, 2.3129514264487288, 2.304277386128107, 2.303086096159361, 2.302551769262386, 2.2959503355027504], "accuracy": [0.19218069314956665, 0.14951789379119873, 0.09734513610601425, 0.1018359512090683, 0.09694888442754745, 0.12257297337055206], "val_loss": [1.8626662663051061, 1.9756516047886439, 1.9739341735839844, 1.973459311894008, 1.972688811165946, 1.887739862714495], "val_accuracy": [0.3790000081062317, 0.10400000214576721, 0.09833333641290665, 0.10400000214576721, 0.10333333164453506, 0.2409999966621399]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [2, 1, 6, 5, 4, 9, 2, 0, 6, 9, 3, 0, 2, 4, 2], [1, 2, 0, 0, 0, 0, 0, 2, 1, 1], [44, 78, 81, 73], [0, 0, 0, 0, 0], [0, 1, 0, 1, 0], [4, 9, 7], [4, 5], [64, 19], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [20], [0, 1], [0], [3], [45]], "fitness": -0.30485713481903076, "mapping_values": [1, 5, 5, 2, 3, 1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(alpha, grad)), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.2817239245844396, 2.3129514264487288, 2.304277386128107, 2.303086096159361, 2.302551769262386, 2.2959503355027504], "accuracy": [0.19218069314956665, 0.14951789379119873, 0.09734513610601425, 0.1018359512090683, 0.09694888442754745, 0.12257297337055206], "val_loss": [1.8626662663051061, 1.9756516047886439, 1.9739341735839844, 1.973459311894008, 1.972688811165946, 1.887739862714495], "val_accuracy": [0.3790000081062317, 0.10400000214576721, 0.09833333641290665, 0.10400000214576721, 0.10333333164453506, 0.2409999966621399]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 1], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [2, 1, 6, 5, 4, 9, 2, 0, 6, 9, 3, 0, 2, 4, 2], [1, 1, 2, 0, 0], [44, 57], [0, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6], [3, 5], [64, 19], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 8], [0], [14]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [26757.580885839656, 506207.9151697266, 2358596.6241579712, 6602841.0439836215, 13933621.547747986, 25699098.14291375], "accuracy": [0.09668471664190292, 0.09747721254825592, 0.10355303436517715, 0.1002509593963623, 0.09642054885625839, 0.10157178342342377], "val_loss": [102839.73883928571, 812719.2857142857, 2732356.6428571427, 6464470.285714285, 12611788.285714285, 21777043.42857143], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0], [1, 0, 0, 1, 1, 1, 0], [7, 6, 4, 9], [3, 0, 3, 0, 1, 0, 0, 2, 1, 1], [44, 78, 81, 73], [0, 0, 1, 1, 1], [0, 0, 1, 1, 1], [7, 1, 0], [4, 2, 5], [64, 19], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3], [1], [], [1, 1], [0, 4, 9], [2], [14]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(grad, beta)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0882314071059227, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1], [0, 1, 0, 1, 0, 0, 0], [2, 3, 5, 9], [0, 1, 2], [44, 57], [0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1], [4, 6, 6, 8, 5], [3, 4, 5, 0], [1, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [2], [], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 3, 9, 2, 1, 2, 1, 0], [3, 0, 1, 0], [45, 15, 99]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 4, 2, 2, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 10, 6, 4, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(alpha, tf.math.square(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.add(beta, grad)), tf.math.add(beta, grad))), tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0], [7, 6, 4, 9, 9], [0, 1, 2], [44, 57, 57], [0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1], [4, 6, 6, 1, 1, 9, 0], [3, 2, 3, 1, 4], [1, 70], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3], [0], [], [0, 0, 1, 1], [9, 3], [3, 0], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 5, 2, 3, 12, 12, 7, 5, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(grad, beta), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(beta, grad)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3029603541818484, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0], [7, 5, 4, 9], [0, 1, 2], [39, 57], [0, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6], [3], [1, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [3], [], [0, 1, 1, 1], [0, 3], [0, 0], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [28797007.779644877, 556249146.0235108, 2606239459.2587504, 7313884642.041474, 15454457918.486858, 28528118004.266808], "accuracy": [0.09642054885625839, 0.09734513610601425, 0.10368511080741882, 0.10011887550354004, 0.09642054885625839, 0.1014397069811821], "val_loss": [112155428.57142857, 896301147.4285715, 3023962989.714286, 7166656512.0, 13995870208.0, 24183408932.57143], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1], [1, 1, 0, 1, 0, 1, 1], [2, 1, 3, 9], [1, 1, 3, 0, 0], [11], [1, 1, 1, 1, 1, 0, 0, 0], [1, 0, 0, 1, 1, 0, 1, 1], [4, 9, 1, 7], [5, 4, 0, 2], [1, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [2], [], [0, 1, 1, 1], [0, 3], [0, 0], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [28797007.779644877, 556249146.0235108, 2606239459.2587504, 7313884642.041474, 15454457918.486858, 28528118004.266808], "accuracy": [0.09642054885625839, 0.09734513610601425, 0.10368511080741882, 0.10011887550354004, 0.09642054885625839, 0.1014397069811821], "val_loss": [112155428.57142857, 896301147.4285715, 3023962989.714286, 7166656512.0, 13995870208.0, 24183408932.57143], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [2, 2, 7, 0, 1, 2, 0], [1, 2, 3, 0, 2, 1], [44, 57, 66], [1, 0, 1, 1, 1, 0, 0, 0, 0], [1, 0, 0, 1, 1, 0, 1, 1, 1], [4, 6, 6, 3], [5, 4, 3, 3, 4], [38, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [2], [], [1, 1, 1, 1], [0, 3], [1, 0, 2, 1, 0, 2], [45, 15, 99]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 7, 6, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, grad)))))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.12561088800430298, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [2, 1, 6, 5, 4, 9, 2, 0, 6, 9, 3, 0, 2, 4, 2], [3, 1, 1, 1, 3, 1], [44, 57], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1], [5, 6, 6, 2, 6, 5, 3, 1, 5, 7, 6, 9, 9], [3, 5, 2, 0, 5, 3, 3, 0], [1, 70, 22, 11], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 1, 1], [6, 3], [3, 0], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08889182657003403, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 1], [0, 1, 0, 1, 0, 0, 0], [8, 6, 0, 9], [0, 1, 2], [44, 78, 81, 73], [0, 0, 0, 0, 0], [1, 0, 0, 1, 1], [4, 9, 7], [3], [64, 19], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [20], [0, 0, 0, 1], [9, 3], [3, 0], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3029603541818484, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 0, 1, 0], [2, 5, 4, 2, 7, 4, 0, 5], [0, 1, 2], [44, 57], [0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0], [5, 6, 6, 2, 6, 5, 3, 1, 5, 7, 6, 9, 9], [3, 5, 2, 0, 5, 3, 3, 0], [1, 70, 50], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 1, 1], [3, 3], [3, 0], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 20, 20, 12, 8, 3, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(grad, grad), tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.multiply(beta, tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.subtract(grad, tf.math.square(grad)))), tf.math.add(tf.math.add(beta, grad), tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.062475234270095825, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [2, 1, 6, 5, 4, 9, 2, 0, 6, 9, 3, 0, 2, 4, 2], [1, 2, 0, 0, 0, 0, 0, 2, 1, 1], [44, 78, 81, 73], [0, 0, 0, 1, 0], [0, 0, 1, 1, 1], [5, 1, 0], [2, 5], [64, 19], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 1], [0], [3], [45]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.302573804857866, 2.3036483451753575, 2.301925890229366, 2.303800304851449, 2.3014710003343066, 2.3025255985484225], "accuracy": [0.09377889335155487, 0.08809932321310043, 0.09470347315073013, 0.09021265059709549, 0.08717474341392517, 0.09285431355237961], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0], [2, 1, 3, 9], [0, 1, 2], [44, 57], [0, 1, 1, 1, 1, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0], [6, 6, 9, 3], [5, 1, 3, 1], [1, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [3], [], [0, 0, 1, 1], [0, 8], [3, 0], [44]], "fitness": -0.03999999910593033, "mapping_values": [1, 3, 3, 1, 2, 1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 3, 2, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(sigma))", "other_info": {"loss": [2.302573804857866, 2.3036483451753575, 2.301925890229366, 2.303800304851449, 2.3014710003343066, 2.3025255985484225], "accuracy": [0.09377889335155487, 0.08809932321310043, 0.09470347315073013, 0.09021265059709549, 0.08717474341392517, 0.09285431355237961], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [2, 1, 3, 9, 8], [1, 1, 1, 0, 0], [23], [0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0], [5, 8, 6, 2, 6, 5, 3, 1, 1, 7, 6, 2, 9], [3, 5, 2, 0, 5, 3, 3, 0], [1, 7, 87], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [4], [], [0, 1, 0, 0, 1, 1, 1], [3, 3, 4], [0, 0, 3, 1], [45, 43]], "fitness": -0.03999999910593033, "mapping_values": [1, 8, 8, 5, 3, 1, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 7, 3, 4, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.subtract(tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.pow(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), sigma), alpha))", "other_info": {"loss": [2.302573804857866, 2.3036483451753575, 2.301925890229366, 2.303800304851449, 2.3014710003343066, 2.3025255985484225], "accuracy": [0.09377889335155487, 0.08809932321310043, 0.09470347315073013, 0.09021265059709549, 0.08717474341392517, 0.09285431355237961], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0], [7, 6, 4, 9], [0, 2, 0], [44, 57, 31], [0, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6], [2], [1, 70], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3], [5], [], [0, 0, 0, 1, 1, 0, 1, 1], [0, 3, 1, 1], [3, 3, 1, 2], [45]], "fitness": -0.03999999910593033, "mapping_values": [1, 7, 7, 4, 3, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 8, 4, 4, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.subtract(sigma, sigma), tf.math.subtract(alpha, beta)))", "other_info": {"loss": [2.302573804857866, 2.3036483451753575, 2.301925890229366, 2.303800304851449, 2.3014710003343066, 2.3025255985484225], "accuracy": [0.09377889335155487, 0.08809932321310043, 0.09470347315073013, 0.09021265059709549, 0.08717474341392517, 0.09285431355237961], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 1], [0, 1, 1, 1, 0, 1, 0], [7, 6, 4, 9], [0, 1, 2], [44, 57], [0, 0, 1], [1, 0, 0, 1, 1], [4, 6, 6], [3], [1, 70], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0], [3, 3, 4, 4, 2, 8, 9, 0], [5, 0], [39, 87], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1], [6, 5, 2, 5, 7, 1, 5], [3, 0, 0, 1, 3], [45, 16]], "fitness": -0.03999999910593033, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 13, 10, 8, 2, 2, 12, 7, 5, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))), tf.math.add(sigma, tf.math.negative(sigma)))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.square(sigma), tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(alpha)), sigma))))", "other_info": {"loss": [2.302573804857866, 2.3036483451753575, 2.301925890229366, 2.303800304851449, 2.3014710003343066, 2.3025255985484225], "accuracy": [0.09377889335155487, 0.08809932321310043, 0.09470347315073013, 0.09021265059709549, 0.08717474341392517, 0.09285431355237961], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]