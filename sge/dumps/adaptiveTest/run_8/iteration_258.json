[{"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [2, 6, 9, 0, 0, 3, 4], [3, 0, 0, 1, 1, 0], [8, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.8062857389450073, "mapping_values": [1, 11, 11, 7, 4, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha))))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.133943131634147, 2.102107642097181, 1.819248581575034, 1.2747409678311663, 1.0184881403587591, 0.7856335395268319, 0.7335629473509113, 0.7334859212470518, 0.661882507070464, 0.6356139742876198, 0.6108605763569264, 0.5890044721362299, 0.5582746729607029, 0.5679144372383932, 0.5614542578740788, 0.5273534977330571, 0.5124394227453526, 0.49267218151443337, 0.49943285579017566, 0.48363671973081956, 0.4658129376317091, 0.4669276225119691, 0.45221069534268, 0.44413379530282526, 0.459269120787365, 0.4477004905213706, 0.4162345490852729, 0.42798825981137995, 0.4043638975770482, 0.3990611309239011, 0.3835695653488576, 0.3942022725119016, 0.3958874933393073, 0.35829620912184945, 0.3588385461438302, 0.38258079851245236, 0.3440084076237921, 0.35119228596621815, 0.34805268994364613, 0.35300769313545965, 0.3276273871905705, 0.3261662656368754, 0.3395376172969212, 0.3221345726273174, 0.307121520068557, 0.3349824935619023], "accuracy": [0.26641130447387695, 0.27724209427833557, 0.40404173731803894, 0.559371292591095, 0.6448289752006531, 0.7040021419525146, 0.717870831489563, 0.7259278893470764, 0.7466648817062378, 0.7586844563484192, 0.7693831920623779, 0.7843085527420044, 0.7907806038856506, 0.7854973077774048, 0.7887993454933167, 0.8042530417442322, 0.8095363974571228, 0.8120459914207458, 0.8112534880638123, 0.8144234418869019, 0.8238013386726379, 0.8265751004219055, 0.8286884427070618, 0.8337075710296631, 0.8290846943855286, 0.8314621448516846, 0.8412362933158875, 0.8405758738517761, 0.8471800088882446, 0.8466516733169556, 0.8548408150672913, 0.8494254350662231, 0.8471800088882446, 0.8647470474243164, 0.8676528930664062, 0.8562937378883362, 0.8712190985679626, 0.8698983192443848, 0.8668603897094727, 0.86553955078125, 0.873860776424408, 0.8762382864952087, 0.874389111995697, 0.8794082403182983, 0.8861445188522339, 0.8732003569602966], "val_loss": [1.9074749946594238, 1.6131272997174944, 1.3353365830012731, 0.6934253828866142, 0.6160899230412075, 0.6582718065806797, 0.5510081052780151, 0.5214854989733014, 0.5146165915897915, 0.4767654112407139, 0.45981931686401367, 0.4429463488715036, 0.445173442363739, 0.44418140820094515, 0.43519751514707294, 0.4330613187381199, 0.4299145681517465, 0.39600961548941477, 0.44511531932013376, 0.37758880853652954, 0.3978684289114816, 0.39412327323641094, 0.39237676348005024, 0.38979703187942505, 0.36884021759033203, 0.35792854002543856, 0.39819720813206266, 0.3885452321597508, 0.36608797311782837, 0.3440200090408325, 0.39178820167269024, 0.3754615953990391, 0.3472194927079337, 0.36556923389434814, 0.354404159954616, 0.33437441076551166, 0.36526129075459074, 0.36865200315202984, 0.3419865795544216, 0.33057429109300884, 0.3235234958784921, 0.3696045790399824, 0.33123546838760376, 0.3463575414248875, 0.35188716650009155, 0.348472671849387], "val_accuracy": [0.19900000095367432, 0.4776666760444641, 0.4963333308696747, 0.7256666421890259, 0.7363333106040955, 0.6949999928474426, 0.7406666874885559, 0.765999972820282, 0.7716666460037231, 0.7803333401679993, 0.7856666445732117, 0.7979999780654907, 0.8143333196640015, 0.8016666769981384, 0.8143333196640015, 0.8163333535194397, 0.8040000200271606, 0.8296666741371155, 0.8076666593551636, 0.8446666598320007, 0.8309999704360962, 0.8393333554267883, 0.8323333263397217, 0.8353333473205566, 0.8516666889190674, 0.8583333492279053, 0.8306666612625122, 0.828000009059906, 0.8473333120346069, 0.859666645526886, 0.8253333568572998, 0.8343333601951599, 0.8600000143051147, 0.8443333506584167, 0.8539999723434448, 0.8686666488647461, 0.8463333249092102, 0.8493333458900452, 0.8643333315849304, 0.8666666746139526, 0.8723333477973938, 0.8506666421890259, 0.8686666488647461, 0.8579999804496765, 0.8473333120346069, 0.8579999804496765]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1], [2, 6, 9, 0, 0, 3, 4, 8], [1, 2, 0, 1, 1, 0], [76, 57, 18], [1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [0, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.8062857389450073, "mapping_values": [1, 11, 11, 7, 4, 2, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.pow(grad, tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.133943131634147, 2.102107642097181, 1.819248581575034, 1.2747409678311663, 1.0184881403587591, 0.7856335395268319, 0.7335629473509113, 0.7334859212470518, 0.661882507070464, 0.6356139742876198, 0.6108605763569264, 0.5890044721362299, 0.5582746729607029, 0.5679144372383932, 0.5614542578740788, 0.5273534977330571, 0.5124394227453526, 0.49267218151443337, 0.49943285579017566, 0.48363671973081956, 0.4658129376317091, 0.4669276225119691, 0.45221069534268, 0.44413379530282526, 0.459269120787365, 0.4477004905213706, 0.4162345490852729, 0.42798825981137995, 0.4043638975770482, 0.3990611309239011, 0.3835695653488576, 0.3942022725119016, 0.3958874933393073, 0.35829620912184945, 0.3588385461438302, 0.38258079851245236, 0.3440084076237921, 0.35119228596621815, 0.34805268994364613, 0.35300769313545965, 0.3276273871905705, 0.3261662656368754, 0.3395376172969212, 0.3221345726273174, 0.307121520068557, 0.3349824935619023], "accuracy": [0.26641130447387695, 0.27724209427833557, 0.40404173731803894, 0.559371292591095, 0.6448289752006531, 0.7040021419525146, 0.717870831489563, 0.7259278893470764, 0.7466648817062378, 0.7586844563484192, 0.7693831920623779, 0.7843085527420044, 0.7907806038856506, 0.7854973077774048, 0.7887993454933167, 0.8042530417442322, 0.8095363974571228, 0.8120459914207458, 0.8112534880638123, 0.8144234418869019, 0.8238013386726379, 0.8265751004219055, 0.8286884427070618, 0.8337075710296631, 0.8290846943855286, 0.8314621448516846, 0.8412362933158875, 0.8405758738517761, 0.8471800088882446, 0.8466516733169556, 0.8548408150672913, 0.8494254350662231, 0.8471800088882446, 0.8647470474243164, 0.8676528930664062, 0.8562937378883362, 0.8712190985679626, 0.8698983192443848, 0.8668603897094727, 0.86553955078125, 0.873860776424408, 0.8762382864952087, 0.874389111995697, 0.8794082403182983, 0.8861445188522339, 0.8732003569602966], "val_loss": [1.9074749946594238, 1.6131272997174944, 1.3353365830012731, 0.6934253828866142, 0.6160899230412075, 0.6582718065806797, 0.5510081052780151, 0.5214854989733014, 0.5146165915897915, 0.4767654112407139, 0.45981931686401367, 0.4429463488715036, 0.445173442363739, 0.44418140820094515, 0.43519751514707294, 0.4330613187381199, 0.4299145681517465, 0.39600961548941477, 0.44511531932013376, 0.37758880853652954, 0.3978684289114816, 0.39412327323641094, 0.39237676348005024, 0.38979703187942505, 0.36884021759033203, 0.35792854002543856, 0.39819720813206266, 0.3885452321597508, 0.36608797311782837, 0.3440200090408325, 0.39178820167269024, 0.3754615953990391, 0.3472194927079337, 0.36556923389434814, 0.354404159954616, 0.33437441076551166, 0.36526129075459074, 0.36865200315202984, 0.3419865795544216, 0.33057429109300884, 0.3235234958784921, 0.3696045790399824, 0.33123546838760376, 0.3463575414248875, 0.35188716650009155, 0.348472671849387], "val_accuracy": [0.19900000095367432, 0.4776666760444641, 0.4963333308696747, 0.7256666421890259, 0.7363333106040955, 0.6949999928474426, 0.7406666874885559, 0.765999972820282, 0.7716666460037231, 0.7803333401679993, 0.7856666445732117, 0.7979999780654907, 0.8143333196640015, 0.8016666769981384, 0.8143333196640015, 0.8163333535194397, 0.8040000200271606, 0.8296666741371155, 0.8076666593551636, 0.8446666598320007, 0.8309999704360962, 0.8393333554267883, 0.8323333263397217, 0.8353333473205566, 0.8516666889190674, 0.8583333492279053, 0.8306666612625122, 0.828000009059906, 0.8473333120346069, 0.859666645526886, 0.8253333568572998, 0.8343333601951599, 0.8600000143051147, 0.8443333506584167, 0.8539999723434448, 0.8686666488647461, 0.8463333249092102, 0.8493333458900452, 0.8643333315849304, 0.8666666746139526, 0.8723333477973938, 0.8506666421890259, 0.8686666488647461, 0.8579999804496765, 0.8473333120346069, 0.8579999804496765]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [2, 6, 3, 0, 0, 2, 4, 8], [3, 0, 1, 0, 0, 0, 2], [19, 57, 25], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [4, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.3720000088214874, "mapping_values": [1, 9, 9, 5, 4, 2, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), alpha)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3556100964435984, 2.2217560459389394, 2.302960687514388, 2.2794866343656817, 2.3046373513553906, 2.264770080416257], "accuracy": [0.1888786107301712, 0.2156914472579956, 0.10659094154834747, 0.16616034507751465, 0.10077928751707077, 0.14978206157684326], "val_loss": [1.8531738008771623, 1.9757564408438546, 1.9688373974391393, 1.9756830760410853, 1.971822738647461, 1.975869859967913], "val_accuracy": [0.37066665291786194, 0.09700000286102295, 0.14000000059604645, 0.10400000214576721, 0.16733333468437195, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [2, 6, 2, 3, 0, 3, 4, 8], [1, 2, 0, 1, 1, 0], [19, 57, 25], [1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [0, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.3720000088214874, "mapping_values": [1, 9, 9, 4, 5, 1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.multiply(grad, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), alpha))), alpha), lambda shape,  alpha, beta, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3556100964435984, 2.2217560459389394, 2.302960687514388, 2.2794866343656817, 2.3046373513553906, 2.264770080416257], "accuracy": [0.1888786107301712, 0.2156914472579956, 0.10659094154834747, 0.16616034507751465, 0.10077928751707077, 0.14978206157684326], "val_loss": [1.8531738008771623, 1.9757564408438546, 1.9688373974391393, 1.9756830760410853, 1.971822738647461, 1.975869859967913], "val_accuracy": [0.37066665291786194, 0.09700000286102295, 0.14000000059604645, 0.10400000214576721, 0.16733333468437195, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [2, 6, 5, 0, 0, 3, 4, 8], [3, 0, 1, 0, 0, 0, 2], [19, 57, 25], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [56, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.3720000088214874, "mapping_values": [1, 10, 10, 6, 4, 2, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.multiply(grad, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))))))), alpha), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3556100964435984, 2.2217560459389394, 2.302960687514388, 2.2794866343656817, 2.3046373513553906, 2.264770080416257], "accuracy": [0.1888786107301712, 0.2156914472579956, 0.10659094154834747, 0.16616034507751465, 0.10077928751707077, 0.14978206157684326], "val_loss": [1.8531738008771623, 1.9757564408438546, 1.9688373974391393, 1.9756830760410853, 1.971822738647461, 1.975869859967913], "val_accuracy": [0.37066665291786194, 0.09700000286102295, 0.14000000059604645, 0.10400000214576721, 0.16733333468437195, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1], [2, 6, 9, 5, 8, 3, 4, 8, 9], [2, 0, 0, 1, 1, 0], [8, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1], [3, 0, 0, 9, 4, 7, 2], [6, 3], [8], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.3720000088214874, "mapping_values": [1, 11, 11, 7, 4, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.multiply(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3556100964435984, 2.2217560459389394, 2.302960687514388, 2.2794866343656817, 2.3046373513553906, 2.264770080416257], "accuracy": [0.1888786107301712, 0.2156914472579956, 0.10659094154834747, 0.16616034507751465, 0.10077928751707077, 0.14978206157684326], "val_loss": [1.8531738008771623, 1.9757564408438546, 1.9688373974391393, 1.9756830760410853, 1.971822738647461, 1.975869859967913], "val_accuracy": [0.37066665291786194, 0.09700000286102295, 0.14000000059604645, 0.10400000214576721, 0.16733333468437195, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 6, 9, 0, 5, 3, 4], [3, 0, 2, 1, 1, 0], [8, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 5, 9, 3, 6], [2, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 4, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 0, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [14342613.16128439, 274727568.92352396, 1258307877.9215426, 3513670298.18835, 7535880748.295338, 13906794205.20618], "accuracy": [0.1014397069811821, 0.10381719470024109, 0.09840179979801178, 0.09721305221319199, 0.10170386731624603, 0.10091137140989304], "val_loss": [54259597.71428572, 433494784.0, 1462394550.857143, 3465662390.857143, 6767966646.857142, 11694026459.428572], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 6, 9, 0, 0, 3, 4, 8], [3, 2, 0, 1, 1, 0], [76, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [0, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [7, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 4, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 4, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [2, 6, 9, 0, 0, 3, 4, 8], [1, 2, 0, 1, 1, 0], [76, 57, 18], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [0, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 3, 3, 6], [2, 1, 0, 1, 3, 2], [36, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.pow(grad, tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(beta, alpha), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [3, 6, 9, 0, 5, 3, 4, 8, 9], [3, 2, 1, 0, 0, 0, 2], [78, 57, 25], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [9, 2, 3, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 6, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.divide_no_nan(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.multiply(grad, grad))))), alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3021371786888203, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [2, 2, 9, 0, 0, 3, 4], [3, 0, 0, 1, 1, 0], [8, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [0, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [9, 8, 9, 3, 6], [3, 1, 0, 1, 3, 2], [32, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 2, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3021371786888203, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1], [6, 7, 9, 0, 5, 3, 4], [1, 2, 0, 1, 1, 0], [76, 57, 18], [1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 1, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 4, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)), tf.math.negative(grad))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0750231146812439, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 6, 9, 0, 0, 3, 4, 8], [1, 2, 0, 1, 1, 0], [76, 57, 18], [1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 4, 9, 3, 6], [2, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 4, 2, 1, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 6, 4, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(alpha, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.multiply(beta, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [6, 6, 9, 0, 5, 3, 4], [3, 2, 0, 1, 1, 0], [85, 5, 20], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [8, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1], [2, 6, 4, 0, 0, 3, 4, 7, 5, 6], [3, 0, 1, 0, 0, 0, 2, 0], [45, 54, 18, 7, 38], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [2, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 18, 10, 8, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))))))))), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), sigma), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 6, 9, 0, 0, 3, 4, 8], [3, 2, 0, 1, 1, 0], [76, 57, 18], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [0, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [3, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0750231146812439, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [2, 8, 9, 9, 0, 2, 5], [3, 0, 0, 1, 1, 0], [8, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [4, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [5, 3, 7, 3, 6], [0, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 3, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.math.add(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [6, 6, 9, 0, 5, 3, 4], [3, 2, 0, 1, 1, 0], [85, 5, 20], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [1, 0, 0, 1, 0], [1, 0, 1], [3, 3, 0], [2, 3], [], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, alpha))", "other_info": {"loss": [2.302413974943855, 2.301814698335312, 2.3017359397761212, 2.302221423583559, 2.302927452071531, 2.3025450041391404], "accuracy": [0.09219389408826828, 0.09153348207473755, 0.09457138925790787, 0.09153348207473755, 0.08994849026203156, 0.08770307898521423], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0], [2, 6, 9, 0, 0, 3, 4], [1, 2, 0, 1, 1, 0], [8, 57, 18], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [2, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0], [3, 3, 0], [4, 3], [], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 9, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 6, 4, 3, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302413974943855, 2.301814698335312, 2.3017359397761212, 2.302221423583559, 2.302927452071531, 2.3025450041391404], "accuracy": [0.09219389408826828, 0.09153348207473755, 0.09457138925790787, 0.09153348207473755, 0.08994849026203156, 0.08770307898521423], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 6, 1, 0, 0, 3, 4, 8], [1, 0, 0, 1, 1, 0], [76, 57, 18], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [0, 5, 3, 4, 0, 6, 3, 9, 2, 1, 4, 9, 8, 1, 1, 8, 9, 0], [1, 3, 0, 3, 0, 3, 2, 3, 3, 0], [18, 47, 99, 84, 1, 78], [0, 0, 0, 1, 0], [0, 0, 1, 1], [3, 3, 0], [4, 3], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 3, 9, 3, 6], [3, 1, 0, 1, 3, 2], [49, 47, 50, 41, 34]], "fitness": -0.03999999910593033, "mapping_values": [1, 11, 11, 6, 5, 2, 1, 1, 0, 1, 0, 5, 4, 2, 2, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.negative(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))))), tf.math.negative(tf.math.multiply(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.302413974943855, 2.301814698335312, 2.3017359397761212, 2.302221423583559, 2.302927452071531, 2.3025450041391404], "accuracy": [0.09219389408826828, 0.09153348207473755, 0.09457138925790787, 0.09153348207473755, 0.08994849026203156, 0.08770307898521423], "val_loss": [1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998, 1.9705901827130998], "val_accuracy": [0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848]}}]